

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 01:03:28 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=2
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=4,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=4,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=4,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1,group=1
   230                           	psect	text206,global,reloc=4,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=4,class=CODE,delta=1
   234                           	psect	text210,global,reloc=4,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=4,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=4,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	text226,global,reloc=4,class=CODE,delta=1
   251                           	psect	text227,global,reloc=4,class=CODE,delta=1
   252                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   253                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   254                           	psect	text228,global,reloc=4,class=CODE,delta=1
   255                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   256                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   257  0000                     
   258                           ; Version 2.10
   259                           ; Generated 31/07/2019 GMT
   260                           ; 
   261                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   262                           ; All rights reserved.
   263                           ; 
   264                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   265                           ; 
   266                           ; Redistribution and use in source and binary forms, with or without modification, are
   267                           ; permitted provided that the following conditions are met:
   268                           ; 
   269                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   270                           ;        conditions and the following disclaimer.
   271                           ; 
   272                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   273                           ;        of conditions and the following disclaimer in the documentation and/or other
   274                           ;        materials provided with the distribution.
   275                           ; 
   276                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   277                           ;        software without specific prior written permission.
   278                           ; 
   279                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   280                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   281                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   282                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   283                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   284                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   285                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   286                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   287                           ; 
   288                           ; 
   289                           ; Code-generator required, PIC18F57K42 Definitions
   290                           ; 
   291                           ; SFR Addresses
   292  0000                     
   293 ;;_main$4049	offset	0
   294 ;;_main$4045	offset	2
   295 ;;_esr_temp	offset	4
   296 ;;_i_esr	offset	8
   297 ;;_shape	offset	10
   298 ;;_inp_index	offset	11
   299 ;;_k	offset	12
   300 ;;_j	offset	13
   301 ;;_i	offset	14
   302 ;;_mode	offset	15
   303 ;;_i_ror	offset	16
   304 ;;_mode	offset=-1 (param)
   305 ;;_hist	offset=-3 (param)
   306 ;;_s	offset=-2 (param)
   307 ;;_t	offset=-8 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_voltage	offset=-4 (param)
   310 ;;_voltage	offset=-4 (param)
   311 ;;_set	offset=-1 (param)
   312 ;;_x	offset	0
   313 ;;_r_cal_ptr	offset	2
   314 ;;_y	offset	4
   315 ;;_crcVal_save	offset	6
   316 ;;_bAdd	offset=-2 (param)
   317 ;;_esr_rescale	offset	0
   318 ;;_data	offset=-1 (param)
   319 ;;_cmd	offset=-1 (param)
   320 ;;_cmd	offset=-1 (param)
   321 ;;_delay	offset=-4 (param)
   322 ;;_data	offset=-1 (param)
   323 ;;__this	offset=-2 (param)
   324 ;;_soc	offset	0
   325 ;;_slot	offset	2
   326 ;;_cvoltage	offset=-4 (param)
   327 ;;_h	offset=-2 (param)
   328 ;;_h	offset=-2 (param)
   329 ;;_fsm	offset=-1 (param)
   330 ;;_mode	offset=-1 (param)
   331 ;;_mode	offset=-1 (param)
   332 ;;_cmd	offset=-1 (param)
   333 ;;_t	offset=-8 (param)
   334 ;;_t	offset=-1 (param)
   335 ;;_t	offset=-1 (param)
   336 ;;_tm	offset=-3 (param)
   337 ;;_y	offset	0
   338 ;;_t1	offset	8
   339 ;;_t0	offset	16
   340 ;;_t	offset=-8 (param)
   341 ;;_local	offset=-10 (param)
   342 ;;_isdst	offset=-12 (param)
   343 ;;_offset	offset=-14 (param)
   344 ;;_oppoff	offset=-16 (param)
   345 ;;_zonename	offset=-18 (param)
   346 ;;_t	offset=-8 (param)
   347 ;;_local	offset=-10 (param)
   348 ;;_alt	offset=-12 (param)
   349 ;;_z	offset=-2 (param)
   350 ;;_days	offset	0
   351 ;;_wday	offset	2
   352 ;;_t	offset	4
   353 ;;_is_leap	offset	12
   354 ;;_n	offset	14
   355 ;;_x	offset	16
   356 ;;_m	offset	18
   357 ;;_d	offset	20
   358 ;;_rule	offset=-6 (param)
   359 ;;_year	offset=-8 (param)
   360 ;;_m	offset=-2 (param)
   361 ;;_is_leap	offset=-4 (param)
   362 ;;_y	offset	0
   363 ;;_leaps	offset	2
   364 ;;_rem	offset	4
   365 ;;F5	offset	6
   366 ;;_centuries	offset	8
   367 ;;_leaps	offset	10
   368 ;;_cycles	offset	12
   369 ;;_year	offset=-8 (param)
   370 ;;_is_leap	offset=-10 (param)
   371 ;;_t	offset	0
   372 ;;_month	offset=-2 (param)
   373 ;;_is_leap	offset=-4 (param)
   374 ;;_s	offset	0
   375 ;;_r	offset	0
   376 ;;_p	offset=-2 (param)
   377 ;;_rule	offset=-4 (param)
   378 ;;_off	offset	0
   379 ;;_neg	offset	2
   380 ;;_p	offset=-2 (param)
   381 ;;_x	offset	0
   382 ;;_p	offset=-2 (param)
   383 ;;_i	offset	0
   384 ;;_d	offset=-2 (param)
   385 ;;_p	offset=-4 (param)
   386 ;;___secs_to_tm$7650	offset	0
   387 ;;_years	offset	1
   388 ;;_days	offset	9
   389 ;;_secs	offset	17
   390 ;;_remdays	offset	25
   391 ;;_q_cycles	offset	29
   392 ;;_c_cycles	offset	33
   393 ;;_remyears	offset	37
   394 ;;_remsecs	offset	41
   395 ;;_qc_cycles	offset	45
   396 ;;_months	offset	49
   397 ;;_leap	offset	51
   398 ;;_yday	offset	53
   399 ;;_wday	offset	55
   400 ;;_t	offset=-8 (param)
   401 ;;_tm	offset=-10 (param)
   402 ;;_product	offset	0
   403 ;;_multiplier	offset=-8 (param)
   404 ;;_multiplicand	offset=-16 (param)
   405 ;;_product	offset	0
   406 ;;_multiplier	offset=-4 (param)
   407 ;;_multiplicand	offset=-8 (param)
   408 ;;_sign	offset	0
   409 ;;_counter	offset	1
   410 ;;_dividend	offset=-4 (param)
   411 ;;_divisor	offset=-8 (param)
   412 ;;_quotient	offset	0
   413 ;;_sign	offset	4
   414 ;;_counter	offset	5
   415 ;;_dividend	offset=-4 (param)
   416 ;;_divisor	offset=-8 (param)
   417 ;;_cp	offset	0
   418 ;;_s	offset	2
   419 ;;_tim	offset=-2 (param)
   420 ;;_cp	offset=-2 (param)
   421 ;;_i	offset=-3 (param)
   422 ;;_cl	offset=-4 (param)
   423 ;;_ct	offset=-5 (param)
   424 ;;_rem	offset	0
   425 ;;_counter	offset	1
   426 ;;_dividend	offset=-1 (param)
   427 ;;_divisor	offset=-2 (param)
   428 ;;_cp	offset	0
   429 ;;_cb	offset	4
   430 ;;_cpz	offset	8
   431 ;;_cbz	offset	12
   432 ;;_x	offset	16
   433 ;;_x	offset	0
   434 ;;_r_cal_ptr	offset	2
   435 ;;_y	offset	4
   436 ;;_crcVal	offset	6
   437 ;;_GIEBitValue	offset	0
   438 ;;_bAdd	offset=-2 (param)
   439 ;;_bData	offset=-3 (param)
   440 ;;_result	offset	0
   441 ;;_mask	offset	2
   442 ;;_reverse	offset=-1 (param)
   443 ;;_xorValue	offset=-3 (param)
   444 ;;_mask	offset	0
   445 ;;_reverse	offset	2
   446 ;;_crc	offset=-2 (param)
   447 ;;_data	offset=-1 (param)
   448 ;;_channel	offset=-1 (param)
   449 ;;_c	offset	0
   450 ;;_shape	offset=-1 (param)
   451 ;;_reset	offset=-2 (param)
   452 ;;_i	offset=-1 (param)
   453 ;;_i	offset=-1 (param)
   454 ;;_mode	offset=-1 (param)
   455 ;;_cb	offset=-3 (param)
   456 ;;_cp	offset=-5 (param)
   457 ;;_mode	offset=-1 (param)
   458 ;;_cb	offset=-3 (param)
   459 ;;_cp	offset=-5 (param)
   460 ;;_scaleb	offset=-9 (param)
   461 ;;_scalep	offset=-13 (param)
   462 ;;_value	offset=-2 (param)
   463 ;;_window	offset=-4 (param)
   464 ;;_standard	offset=-6 (param)
   465 ;;_i	offset	0
   466 ;;_h	offset=-2 (param)
   467 ;;_flipper	offset=-1 (param)
   468 ;;_f	offset	0
   469 ;;_ap	offset	6
   470 ;;_s	offset=-3 (param)
   471 ;;_fmt	offset=-5 (param)
   472 ;;_line	offset=-1 (param)
   473 ;;_vterm	offset=-2 (param)
   474 ;;_numMilliseconds	offset=-2 (param)
   475 ;;_vterm	offset=-1 (param)
   476 ;;_row	offset	0
   477 ;;_r	offset=-1 (param)
   478 ;;_c	offset=-2 (param)
   479 ;;_strPtr	offset=-4 (param)
   480 ;;_strPtr	offset=-1 (param)
   481 ;;_strPtr	offset=-1 (param)
   482 ;;_strPtr	offset=-2 (param)
   483 ;;__this	offset=-2 (param)
   484 ;;_clearBuffer	offset=-3 (param)
   485 ;;_s	offset	0
   486 ;;_k	offset	2
   487 ;;_dest	offset=-2 (param)
   488 ;;_c	offset=-4 (param)
   489 ;;_n	offset=-6 (param)
   490 ;;_ap	offset	0
   491 ;;_fmt	offset=-3 (param)
   492 ;;_cfmt	offset	0
   493 ;;_fp	offset=-2 (param)
   494 ;;_fmt	offset=-4 (param)
   495 ;;_ap	offset=-6 (param)
   496 ;;_vfpfcnvrt$6691	offset	0
   497 ;;_vfpfcnvrt$6702	offset	2
   498 ;;_vfpfcnvrt$6690	offset	4
   499 ;;_llu	offset	6
   500 ;;_ll	offset	14
   501 ;;_f	offset	22
   502 ;;_ct	offset	26
   503 ;;_cp	offset	29
   504 ;;_c	offset	31
   505 ;;_fp	offset=-2 (param)
   506 ;;_fmt	offset=-4 (param)
   507 ;;_ap	offset=-6 (param)
   508 ;;_xtoa$6676	offset	0
   509 ;;_xtoa$6675	offset	2
   510 ;;_n	offset	4
   511 ;;_c	offset	12
   512 ;;_i	offset	14
   513 ;;_w	offset	16
   514 ;;_p	offset	18
   515 ;;_fp	offset=-2 (param)
   516 ;;_d	offset=-10 (param)
   517 ;;_x	offset=-11 (param)
   518 ;;_toupper$7617	offset	0
   519 ;;_c	offset=-2 (param)
   520 ;;_c	offset=-2 (param)
   521 ;;_c	offset=-2 (param)
   522 ;;_n	offset	0
   523 ;;_i	offset	8
   524 ;;_w	offset	10
   525 ;;_p	offset	12
   526 ;;_fp	offset=-2 (param)
   527 ;;_d	offset=-10 (param)
   528 ;;_counter	offset	0
   529 ;;_dividend	offset=-8 (param)
   530 ;;_divisor	offset=-16 (param)
   531 ;;_quotient	offset	0
   532 ;;_counter	offset	8
   533 ;;_dividend	offset=-8 (param)
   534 ;;_divisor	offset=-16 (param)
   535 ;;_r	offset	0
   536 ;;_l	offset	2
   537 ;;__l	offset=-2 (param)
   538 ;;__r	offset=-4 (param)
   539 ;;_n	offset=-6 (param)
   540 ;;_nuls	offset	0
   541 ;;_l	offset	7
   542 ;;_p	offset	9
   543 ;;_cp	offset	11
   544 ;;_w	offset	13
   545 ;;_i	offset	15
   546 ;;_fp	offset=-2 (param)
   547 ;;_s	offset=-4 (param)
   548 ;;_efgtoa$6648	offset	0
   549 ;;_efgtoa$6647	offset	2
   550 ;;_efgtoa$6646	offset	4
   551 ;;_efgtoa$6642	offset	6
   552 ;;_efgtoa$6638	offset	8
   553 ;;_efgtoa$6637	offset	10
   554 ;;_u	offset	12
   555 ;;_g	offset	16
   556 ;;_l	offset	20
   557 ;;_h	offset	24
   558 ;;_ou	offset	28
   559 ;;_n	offset	32
   560 ;;_e	offset	34
   561 ;;_i	offset	36
   562 ;;_w	offset	38
   563 ;;_p	offset	40
   564 ;;_sign	offset	42
   565 ;;_d	offset	44
   566 ;;_ne	offset	46
   567 ;;_m	offset	48
   568 ;;_pp	offset	50
   569 ;;_t	offset	52
   570 ;;_mode	offset	54
   571 ;;_nmode	offset	55
   572 ;;_fp	offset=-2 (param)
   573 ;;_f	offset=-6 (param)
   574 ;;_c	offset=-7 (param)
   575 ;;_tolower$7602	offset	0
   576 ;;_c	offset=-2 (param)
   577 ;;_c	offset=-2 (param)
   578 ;;_d	offset	0
   579 ;;_s	offset	2
   580 ;;_dest	offset=-2 (param)
   581 ;;_src	offset=-4 (param)
   582 ;;_u	offset	0
   583 ;;_m	offset	4
   584 ;;_e	offset	8
   585 ;;_x	offset=-4 (param)
   586 ;;_u	offset	0
   587 ;;_e	offset	4
   588 ;;_x	offset=-4 (param)
   589 ;;_exp1	offset	0
   590 ;;_sign1	offset	1
   591 ;;_f1	offset=-4 (param)
   592 ;;_f1	offset=-4 (param)
   593 ;;_ff1	offset=-4 (param)
   594 ;;_ff2	offset=-8 (param)
   595 ;;_sign	offset	0
   596 ;;_counter	offset	1
   597 ;;_dividend	offset=-2 (param)
   598 ;;_divisor	offset=-4 (param)
   599 ;;_quotient	offset	0
   600 ;;_sign	offset	2
   601 ;;_counter	offset	3
   602 ;;_dividend	offset=-2 (param)
   603 ;;_divisor	offset=-4 (param)
   604 ;;_dtoa$6614	offset	0
   605 ;;_n	offset	2
   606 ;;_i	offset	10
   607 ;;_s	offset	12
   608 ;;_w	offset	14
   609 ;;_p	offset	16
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_a	offset=-2 (param)
   613 ;;_sign	offset	0
   614 ;;_counter	offset	1
   615 ;;_dividend	offset=-8 (param)
   616 ;;_divisor	offset=-16 (param)
   617 ;;_quotient	offset	0
   618 ;;_sign	offset	8
   619 ;;_counter	offset	9
   620 ;;_dividend	offset=-8 (param)
   621 ;;_divisor	offset=-16 (param)
   622 ;;_w	offset	0
   623 ;;_fp	offset=-2 (param)
   624 ;;_c	offset=-3 (param)
   625 ;;_w	offset	0
   626 ;;_i	offset	2
   627 ;;_fp	offset=-2 (param)
   628 ;;_buf	offset=-4 (param)
   629 ;;_p	offset=-6 (param)
   630 ;;_a	offset	0
   631 ;;_s	offset=-2 (param)
   632 ;;_i	offset	0
   633 ;;_c	offset	2
   634 ;;_s	offset=-2 (param)
   635 ;;_fp	offset=-4 (param)
   636 ;;_c	offset=-2 (param)
   637 ;;_fp	offset=-4 (param)
   638 ;;_c	offset=-1 (param)
   639 ;;__this	offset=-2 (param)
   640 ;;_c	offset=-3 (param)
   641 ;;_atoi$7234	offset	0
   642 ;;_atoi$7232	offset	2
   643 ;;_atoi$7233	offset	4
   644 ;;_n	offset	5
   645 ;;_neg	offset	7
   646 ;;_s	offset=-2 (param)
   647 ;;_isspace$7283	offset	0
   648 ;;_c	offset=-2 (param)
   649 ;;_c	offset=-2 (param)
   650 ;;_vterm	offset=-1 (param)
   651 ;;_new_response_info	offset=-1 (param)
   652 ;;_new_response_info	offset=-1 (param)
   653 ;;_level	offset=-2 (param)
   654 ;;_dutyValue	offset=-2 (param)
   655 ;;_timer	offset=-1 (param)
   656 ;;_timer	offset=-1 (param)
   657 ;;_count	offset=-3 (param)
   658 ;;_h	offset=-2 (param)
   659 ;;_u	offset	0
   660 ;;_x	offset=-4 (param)
   661 ;;_chan	offset=-1 (param)
   662 ;;_to_what	offset=-2 (param)
   663 ;;_u	offset	0
   664 ;;_s	offset=-2 (param)
   665 ;;_index	offset=-1 (param)
   666 ;;_arg	offset	0
   667 ;;_exp	offset	4
   668 ;;_sign	offset=-1 (param)
   669 ;;_val	offset=-5 (param)
   670 ;;_grs	offset	0
   671 ;;_rem	offset	4
   672 ;;_new_exp	offset	8
   673 ;;_aexp	offset	10
   674 ;;_bexp	offset	11
   675 ;;_sign	offset	12
   676 ;;_b	offset=-4 (param)
   677 ;;_a	offset=-8 (param)
   678 ;;_ff1	offset=-4 (param)
   679 ;;_ff2	offset=-8 (param)
   680 ;;_lp_speed	offset	0
   681 ;;_new	offset=-4 (param)
   682 ;;_bn	offset=-5 (param)
   683 ;;_slow	offset=-6 (param)
   684 ;;_b	offset=-4 (param)
   685 ;;_a	offset=-8 (param)
   686 ;;_grs	offset	0
   687 ;;_bexp	offset	1
   688 ;;_aexp	offset	2
   689 ;;_signs	offset	3
   690 ;;_b	offset=-4 (param)
   691 ;;_a	offset=-8 (param)
   692 ;;_prod	offset	0
   693 ;;_grs	offset	4
   694 ;;_temp	offset	8
   695 ;;_bexp	offset	10
   696 ;;_aexp	offset	11
   697 ;;_sign	offset	12
   698 ;;_b	offset=-4 (param)
   699 ;;_a	offset=-8 (param)
   700 ;;_InterruptHandler	offset=-3 (param)
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_InterruptHandler	offset=-3 (param)
   704 ;;_InterruptHandler	offset=-3 (param)
   705 ;;_InterruptHandler	offset=-3 (param)
   706 ;;_state	offset	0
   707 ;;_InterruptHandler	offset=-3 (param)
   708 ;;_InterruptHandler	offset=-3 (param)
   709 ;;_seed	offset	0
   710 ;;_poly	offset	2
   711 ;;_InterruptHandler	offset=-3 (param)
   712 ;;_InterruptHandler	offset=-3 (param)
   713 ;;_i	offset	0
   714 ;;_sw_value	offset	1
   715 ;;_timerVal	offset=-2 (param)
   716 ;;_light	offset	0
   717 ;;_t	offset=-8 (param)
   718 ;;_mode	offset=-1 (param)
   719 ;;_chan	offset=-1 (param)
   720 ;;_to_what	offset=-2 (param)
   721 ;;_u	offset	0
   722 ;;_s	offset=-2 (param)
   723 ;;_index	offset=-1 (param)
   724 ;;_arg	offset	0
   725 ;;_exp	offset	4
   726 ;;_sign	offset=-1 (param)
   727 ;;_val	offset=-5 (param)
   728 ;;_b	offset=-4 (param)
   729 ;;_a	offset=-8 (param)
   730 ;;_grs	offset	0
   731 ;;_bexp	offset	1
   732 ;;_aexp	offset	2
   733 ;;_signs	offset	3
   734 ;;_b	offset=-4 (param)
   735 ;;_a	offset=-8 (param)
   736 ;;_prod	offset	0
   737 ;;_grs	offset	4
   738 ;;_temp	offset	8
   739 ;;_bexp	offset	10
   740 ;;_aexp	offset	11
   741 ;;_sign	offset	12
   742 ;;_b	offset=-4 (param)
   743 ;;_a	offset=-8 (param)
   744 ;;_grs	offset	0
   745 ;;_rem	offset	4
   746 ;;_new_exp	offset	8
   747 ;;_aexp	offset	10
   748 ;;_bexp	offset	11
   749 ;;_sign	offset	12
   750 ;;_b	offset=-4 (param)
   751 ;;_a	offset=-8 (param)
   752 ;;_ff1	offset=-4 (param)
   753 ;;_ff2	offset=-8 (param)
   754 ;;_timerVal	offset=-2 (param)
   755 ;;_adj	offset	0
   756 ;;_log_ptr	offset	4
   757 ;;_f	offset	0
   758 ;;_ap	offset	6
   759 ;;_s	offset=-3 (param)
   760 ;;_fmt	offset=-5 (param)
   761 ;;_cfmt	offset	0
   762 ;;_fp	offset=-2 (param)
   763 ;;_fmt	offset=-4 (param)
   764 ;;_ap	offset=-6 (param)
   765 ;;_vfpfcnvrt$6691	offset	0
   766 ;;_vfpfcnvrt$6702	offset	2
   767 ;;_vfpfcnvrt$6690	offset	4
   768 ;;_llu	offset	6
   769 ;;_ll	offset	14
   770 ;;_f	offset	22
   771 ;;_ct	offset	26
   772 ;;_cp	offset	29
   773 ;;_c	offset	31
   774 ;;_fp	offset=-2 (param)
   775 ;;_fmt	offset=-4 (param)
   776 ;;_ap	offset=-6 (param)
   777 ;;_xtoa$6676	offset	0
   778 ;;_xtoa$6675	offset	2
   779 ;;_n	offset	4
   780 ;;_c	offset	12
   781 ;;_i	offset	14
   782 ;;_w	offset	16
   783 ;;_p	offset	18
   784 ;;_fp	offset=-2 (param)
   785 ;;_d	offset=-10 (param)
   786 ;;_x	offset=-11 (param)
   787 ;;_toupper$7617	offset	0
   788 ;;_c	offset=-2 (param)
   789 ;;_c	offset=-2 (param)
   790 ;;_c	offset=-2 (param)
   791 ;;_n	offset	0
   792 ;;_i	offset	8
   793 ;;_w	offset	10
   794 ;;_p	offset	12
   795 ;;_fp	offset=-2 (param)
   796 ;;_d	offset=-10 (param)
   797 ;;_counter	offset	0
   798 ;;_dividend	offset=-8 (param)
   799 ;;_divisor	offset=-16 (param)
   800 ;;_quotient	offset	0
   801 ;;_counter	offset	8
   802 ;;_dividend	offset=-8 (param)
   803 ;;_divisor	offset=-16 (param)
   804 ;;_r	offset	0
   805 ;;_l	offset	2
   806 ;;__l	offset=-2 (param)
   807 ;;__r	offset=-4 (param)
   808 ;;_n	offset=-6 (param)
   809 ;;_nuls	offset	0
   810 ;;_l	offset	7
   811 ;;_p	offset	9
   812 ;;_cp	offset	11
   813 ;;_w	offset	13
   814 ;;_i	offset	15
   815 ;;_fp	offset=-2 (param)
   816 ;;_s	offset=-4 (param)
   817 ;;_efgtoa$6648	offset	0
   818 ;;_efgtoa$6647	offset	2
   819 ;;_efgtoa$6646	offset	4
   820 ;;_efgtoa$6642	offset	6
   821 ;;_efgtoa$6638	offset	8
   822 ;;_efgtoa$6637	offset	10
   823 ;;_u	offset	12
   824 ;;_g	offset	16
   825 ;;_l	offset	20
   826 ;;_h	offset	24
   827 ;;_ou	offset	28
   828 ;;_n	offset	32
   829 ;;_e	offset	34
   830 ;;_i	offset	36
   831 ;;_w	offset	38
   832 ;;_p	offset	40
   833 ;;_sign	offset	42
   834 ;;_d	offset	44
   835 ;;_ne	offset	46
   836 ;;_m	offset	48
   837 ;;_pp	offset	50
   838 ;;_t	offset	52
   839 ;;_mode	offset	54
   840 ;;_nmode	offset	55
   841 ;;_fp	offset=-2 (param)
   842 ;;_f	offset=-6 (param)
   843 ;;_c	offset=-7 (param)
   844 ;;_tolower$7602	offset	0
   845 ;;_c	offset=-2 (param)
   846 ;;_c	offset=-2 (param)
   847 ;;_d	offset	0
   848 ;;_s	offset	2
   849 ;;_dest	offset=-2 (param)
   850 ;;_src	offset=-4 (param)
   851 ;;_u	offset	0
   852 ;;_m	offset	4
   853 ;;_e	offset	8
   854 ;;_x	offset=-4 (param)
   855 ;;_u	offset	0
   856 ;;_e	offset	4
   857 ;;_x	offset=-4 (param)
   858 ;;_exp1	offset	0
   859 ;;_sign1	offset	1
   860 ;;_f1	offset=-4 (param)
   861 ;;_f1	offset=-4 (param)
   862 ;;_ff1	offset=-4 (param)
   863 ;;_ff2	offset=-8 (param)
   864 ;;_sign	offset	0
   865 ;;_counter	offset	1
   866 ;;_dividend	offset=-2 (param)
   867 ;;_divisor	offset=-4 (param)
   868 ;;_quotient	offset	0
   869 ;;_sign	offset	2
   870 ;;_counter	offset	3
   871 ;;_dividend	offset=-2 (param)
   872 ;;_divisor	offset=-4 (param)
   873 ;;_dtoa$6614	offset	0
   874 ;;_n	offset	2
   875 ;;_i	offset	10
   876 ;;_s	offset	12
   877 ;;_w	offset	14
   878 ;;_p	offset	16
   879 ;;_fp	offset=-2 (param)
   880 ;;_d	offset=-10 (param)
   881 ;;_a	offset=-2 (param)
   882 ;;_sign	offset	0
   883 ;;_counter	offset	1
   884 ;;_dividend	offset=-8 (param)
   885 ;;_divisor	offset=-16 (param)
   886 ;;_quotient	offset	0
   887 ;;_sign	offset	8
   888 ;;_counter	offset	9
   889 ;;_dividend	offset=-8 (param)
   890 ;;_divisor	offset=-16 (param)
   891 ;;_w	offset	0
   892 ;;_fp	offset=-2 (param)
   893 ;;_c	offset=-3 (param)
   894 ;;_w	offset	0
   895 ;;_i	offset	2
   896 ;;_fp	offset=-2 (param)
   897 ;;_buf	offset=-4 (param)
   898 ;;_p	offset=-6 (param)
   899 ;;_a	offset	0
   900 ;;_s	offset=-2 (param)
   901 ;;_i	offset	0
   902 ;;_c	offset	2
   903 ;;_s	offset=-2 (param)
   904 ;;_fp	offset=-4 (param)
   905 ;;_c	offset=-2 (param)
   906 ;;_fp	offset=-4 (param)
   907 ;;_c	offset=-1 (param)
   908 ;;__this	offset=-2 (param)
   909 ;;_c	offset=-3 (param)
   910 ;;_atoi$7234	offset	0
   911 ;;_atoi$7232	offset	2
   912 ;;_atoi$7233	offset	4
   913 ;;_n	offset	5
   914 ;;_neg	offset	7
   915 ;;_s	offset=-2 (param)
   916 ;;_isspace$7283	offset	0
   917 ;;_c	offset=-2 (param)
   918 ;;_c	offset=-2 (param)
   919 ;;_dsize	offset=-2 (param)
   920 ;;_u	offset	0
   921 ;;_x	offset=-4 (param)
   922 ;;_f1p	offset=-2 (param)
   923 ;;_f2	offset=-6 (param)
   924 ;;_timer	offset=-1 (param)
   925 ;;_count	offset=-3 (param)
   926 ;;_channel	offset=-1 (param)
   927 ;;_i	offset	0
   928                           
   929                           	psect	idataBIGRAM
   930  01AA30                     __pidataBIGRAM:
   931                           	opt callstack 0
   932                           
   933                           ;initializer for _port_data
   934  01AA30  FF                 	db	255
   935  01AA31  00                 	db	0
   936  01AA32  FF                 	db	255
   937  01AA33  00                 	db	0
   938  01AA34  FF                 	db	255
   939  01AA35  00                 	db	0
   940  01AA36  FF                 	db	255
   941  01AA37  00                 	db	0
   942  01AA38  FF                 	db	255
   943  01AA39  00                 	db	0
   944  01AA3A  FF                 	db	255
   945  01AA3B  00                 	db	0
   946  01AA3C  FF                 	db	255
   947  01AA3D  00                 	db	0
   948  01AA3E  FF                 	db	255
   949  01AA3F  00                 	db	0
   950  01AA40  00                 	db	0
   951  01AA41  00                 	db	0
   952  01AA42  00                 	db	0
   953  01AA43  00                 	db	0
   954  01AA44  00                 	db	0
   955  01AA45  00                 	db	0
   956  01AA46  00                 	db	0
   957  01AA47  00                 	db	0
   958  01AA48  00                 	db	0
   959  01AA49  00                 	db	0
   960  01AA4A  00                 	db	0
   961  01AA4B  00                 	db	0
   962  01AA4C  00                 	db	0
   963  01AA4D  00                 	db	0
   964  01AA4E  00                 	db	0
   965  01AA4F  00                 	db	0
   966  01AA50  00                 	db	0
   967  01AA51  00                 	db	0
   968  01AA52  00                 	db	0
   969  01AA53  00                 	db	0
   970  01AA54  00                 	db	0
   971  01AA55  00                 	db	0
   972  01AA56  00                 	db	0
   973  01AA57  00                 	db	0
   974  01AA58  00                 	db	0
   975  01AA59  00                 	db	0
   976  01AA5A  00                 	db	0
   977  01AA5B  00                 	db	0
   978  01AA5C  00                 	db	0
   979  01AA5D  00                 	db	0
   980  01AA5E  00                 	db	0
   981  01AA5F  00                 	db	0
   982  01AA60  00                 	db	0
   983  01AA61  00                 	db	0
   984  01AA62  00                 	db	0
   985  01AA63  00                 	db	0
   986  01AA64  00                 	db	0
   987  01AA65  00                 	db	0
   988  01AA66  00                 	db	0
   989  01AA67  00                 	db	0
   990  01AA68  00                 	db	0
   991  01AA69  00                 	db	0
   992  01AA6A  00                 	db	0
   993  01AA6B  00                 	db	0
   994  01AA6C  00                 	db	0
   995  01AA6D  00                 	db	0
   996  01AA6E  00                 	db	0
   997  01AA6F  00                 	db	0
   998  01AA70  00                 	db	0
   999  01AA71  00                 	db	0
  1000  01AA72  00                 	db	0
  1001  01AA73  00                 	db	0
  1002  01AA74  00                 	db	0
  1003  01AA75  00                 	db	0
  1004  01AA76  00                 	db	0
  1005  01AA77  00                 	db	0
  1006  01AA78  00                 	db	0
  1007  01AA79  00                 	db	0
  1008  01AA7A  00                 	db	0
  1009  01AA7B  00                 	db	0
  1010  01AA7C  00                 	db	0
  1011  01AA7D  00                 	db	0
  1012  01AA7E  00                 	db	0
  1013  01AA7F  00                 	db	0
  1014  01AA80  00                 	db	0
  1015  01AA81  00                 	db	0
  1016  01AA82  00                 	db	0
  1017  01AA83  00                 	db	0
  1018  01AA84  00                 	db	0
  1019  01AA85  00                 	db	0
  1020  01AA86  00                 	db	0
  1021  01AA87  00                 	db	0
  1022  01AA88  00                 	db	0
  1023  01AA89  00                 	db	0
  1024  01AA8A  00                 	db	0
  1025  01AA8B  00                 	db	0
  1026  01AA8C  00                 	db	0
  1027  01AA8D  00                 	db	0
  1028  01AA8E  00                 	db	0
  1029  01AA8F  00                 	db	0
  1030  01AA90  00                 	db	0
  1031  01AA91  00                 	db	0
  1032  01AA92  00                 	db	0
  1033  01AA93  00                 	db	0
  1034  01AA94  00                 	db	0
  1035  01AA95  00                 	db	0
  1036  01AA96  00                 	db	0
  1037  01AA97  00                 	db	0
  1038  01AA98  00                 	db	0
  1039  01AA99  00                 	db	0
  1040  01AA9A  00                 	db	0
  1041  01AA9B  00                 	db	0
  1042  01AA9C  00                 	db	0
  1043  01AA9D  00                 	db	0
  1044  01AA9E  00                 	db	0
  1045  01AA9F  00                 	db	0
  1046  01AAA0  00                 	db	0
  1047  01AAA1  00                 	db	0
  1048  01AAA2  00                 	db	0
  1049  01AAA3  00                 	db	0
  1050  01AAA4  00                 	db	0
  1051  01AAA5  00                 	db	0
  1052  01AAA6  00                 	db	0
  1053  01AAA7  00                 	db	0
  1054  01AAA8  00                 	db	0
  1055  01AAA9  00                 	db	0
  1056  01AAAA  00                 	db	0
  1057  01AAAB  00                 	db	0
  1058  01AAAC  00                 	db	0
  1059  01AAAD  00                 	db	0
  1060  01AAAE  00                 	db	0
  1061  01AAAF  00                 	db	0
  1062  01AAB0  00                 	db	0
  1063  01AAB1  00                 	db	0
  1064  01AAB2  00                 	db	0
  1065  01AAB3  00                 	db	0
  1066  01AAB4  00                 	db	0
  1067  01AAB5  00                 	db	0
  1068  01AAB6  00                 	db	0
  1069  01AAB7  00                 	db	0
  1070  01AAB8  00                 	db	0
  1071  01AAB9  00                 	db	0
  1072  01AABA  00                 	db	0
  1073  01AABB  00                 	db	0
  1074  01AABC  00                 	db	0
  1075  01AABD  00                 	db	0
  1076  01AABE  00                 	db	0
  1077  01AABF  00                 	db	0
  1078  01AAC0  00                 	db	0
  1079  01AAC1  00                 	db	0
  1080  01AAC2  00                 	db	0
  1081  01AAC3  00                 	db	0
  1082  01AAC4  00                 	db	0
  1083  01AAC5  00                 	db	0
  1084  01AAC6  00                 	db	0
  1085  01AAC7  00                 	db	0
  1086  01AAC8  00                 	db	0
  1087  01AAC9  00                 	db	0
  1088  01AACA  00                 	db	0
  1089  01AACB  00                 	db	0
  1090  01AACC  00                 	db	0
  1091  01AACD  00                 	db	0
  1092  01AACE  00                 	db	0
  1093  01AACF  00                 	db	0
  1094  01AAD0  00                 	db	0
  1095  01AAD1  00                 	db	0
  1096  01AAD2  00                 	db	0
  1097  01AAD3  00                 	db	0
  1098  01AAD4  00                 	db	0
  1099  01AAD5  00                 	db	0
  1100  01AAD6  00                 	db	0
  1101  01AAD7  00                 	db	0
  1102  01AAD8  00                 	db	0
  1103  01AAD9  00                 	db	0
  1104  01AADA  00                 	db	0
  1105  01AADB  00                 	db	0
  1106  01AADC  00                 	db	0
  1107  01AADD  00                 	db	0
  1108  01AADE  00                 	db	0
  1109  01AADF  00                 	db	0
  1110  01AAE0  00                 	db	0
  1111  01AAE1  00                 	db	0
  1112  01AAE2  00                 	db	0
  1113  01AAE3  00                 	db	0
  1114  01AAE4  00                 	db	0
  1115  01AAE5  00                 	db	0
  1116  01AAE6  00                 	db	0
  1117  01AAE7  00                 	db	0
  1118  01AAE8  00                 	db	0
  1119  01AAE9  00                 	db	0
  1120  01AAEA  00                 	db	0
  1121  01AAEB  00                 	db	0
  1122  01AAEC  00                 	db	0
  1123  01AAED  00                 	db	0
  1124  01AAEE  00                 	db	0
  1125  01AAEF  00                 	db	0
  1126  01AAF0  00                 	db	0
  1127  01AAF1  00                 	db	0
  1128  01AAF2  00                 	db	0
  1129  01AAF3  00                 	db	0
  1130  01AAF4  00                 	db	0
  1131  01AAF5  00                 	db	0
  1132  01AAF6  00                 	db	0
  1133  01AAF7  00                 	db	0
  1134  01AAF8  00                 	db	0
  1135  01AAF9  00                 	db	0
  1136  01AAFA  00                 	db	0
  1137  01AAFB  00                 	db	0
  1138  01AAFC  00                 	db	0
  1139  01AAFD  00                 	db	0
  1140  01AAFE  00                 	db	0
  1141  01AAFF  00                 	db	0
  1142  01AB00  00                 	db	0
  1143  01AB01  00                 	db	0
  1144  01AB02  00                 	db	0
  1145  01AB03  00                 	db	0
  1146  01AB04  00                 	db	0
  1147  01AB05  00                 	db	0
  1148  01AB06  00                 	db	0
  1149  01AB07  00                 	db	0
  1150  01AB08  00                 	db	0
  1151  01AB09  00                 	db	0
  1152  01AB0A  00                 	db	0
  1153  01AB0B  00                 	db	0
  1154  01AB0C  00                 	db	0
  1155  01AB0D  00                 	db	0
  1156  01AB0E  00                 	db	0
  1157  01AB0F  00                 	db	0
  1158  01AB10  00                 	db	0
  1159  01AB11  00                 	db	0
  1160  01AB12  00                 	db	0
  1161  01AB13  00                 	db	0
  1162  01AB14  00                 	db	0
  1163  01AB15  00                 	db	0
  1164  01AB16  00                 	db	0
  1165  01AB17  00                 	db	0
  1166  01AB18  00                 	db	0
  1167  01AB19  00                 	db	0
  1168  01AB1A  00                 	db	0
  1169  01AB1B  00                 	db	0
  1170  01AB1C  00                 	db	0
  1171  01AB1D  00                 	db	0
  1172  01AB1E  00                 	db	0
  1173  01AB1F  00                 	db	0
  1174  01AB20  00                 	db	0
  1175  01AB21  00                 	db	0
  1176  01AB22  00                 	db	0
  1177  01AB23  00                 	db	0
  1178  01AB24  00                 	db	0
  1179  01AB25  00                 	db	0
  1180  01AB26  00                 	db	0
  1181  01AB27  00                 	db	0
  1182  01AB28  00                 	db	0
  1183  01AB29  00                 	db	0
  1184  01AB2A  00                 	db	0
  1185  01AB2B  00                 	db	0
  1186  01AB2C  00                 	db	0
  1187  01AB2D  00                 	db	0
  1188  01AB2E  00                 	db	0
  1189  01AB2F  00                 	db	0
  1190  01AB30  00                 	db	0
  1191  01AB31  00                 	db	0
  1192  01AB32  00                 	db	0
  1193  01AB33  00                 	db	0
  1194  01AB34  00                 	db	0
  1195  01AB35  00                 	db	0
  1196  01AB36  00                 	db	0
  1197  01AB37  00                 	db	0
  1198  01AB38  00                 	db	0
  1199  01AB39  00                 	db	0
  1200  01AB3A  00                 	db	0
  1201  01AB3B  00                 	db	0
  1202  01AB3C  00                 	db	0
  1203  01AB3D  00                 	db	0
  1204  01AB3E  00                 	db	0
  1205  01AB3F  00                 	db	0
  1206  01AB40  00                 	db	0
  1207  01AB41  00                 	db	0
  1208  01AB42  00                 	db	0
  1209  01AB43  00                 	db	0
  1210  01AB44  00                 	db	0
  1211  01AB45  00                 	db	0
  1212  01AB46  00                 	db	0
  1213  01AB47  00                 	db	0
  1214  01AB48  00                 	db	0
  1215  01AB49  00                 	db	0
  1216  01AB4A  00                 	db	0
  1217  01AB4B  00                 	db	0
  1218  01AB4C  00                 	db	0
  1219  01AB4D  00                 	db	0
  1220  01AB4E  00                 	db	0
  1221  01AB4F  00                 	db	0
  1222  01AB50  00                 	db	0
  1223  01AB51  00                 	db	0
  1224  01AB52  00                 	db	0
  1225  01AB53  00                 	db	0
  1226  01AB54  00                 	db	0
  1227  01AB55  00                 	db	0
  1228  01AB56  00                 	db	0
  1229  01AB57  00                 	db	0
  1230  01AB58  00                 	db	0
  1231  01AB59  00                 	db	0
  1232  01AB5A  00                 	db	0
  1233  01AB5B  00                 	db	0
  1234  01AB5C  00                 	db	0
  1235  01AB5D  00                 	db	0
  1236  01AB5E  00                 	db	0
  1237  01AB5F  00                 	db	0
  1238  01AB60  00                 	db	0
  1239  01AB61  00                 	db	0
  1240  01AB62  00                 	db	0
  1241  01AB63  00                 	db	0
  1242  01AB64  00                 	db	0
  1243  01AB65  00                 	db	0
  1244  01AB66  00                 	db	0
  1245  01AB67  00                 	db	0
  1246  01AB68  00                 	db	0
  1247  01AB69  00                 	db	0
  1248  01AB6A  00                 	db	0
  1249  01AB6B  00                 	db	0
  1250  01AB6C  00                 	db	0
  1251  01AB6D  00                 	db	0
  1252  01AB6E  00                 	db	0
  1253  01AB6F  00                 	db	0
  1254  01AB70  00                 	db	0
  1255  01AB71  00                 	db	0
  1256  01AB72  00                 	db	0
  1257  01AB73  00                 	db	0
  1258  01AB74  00                 	db	0
  1259  01AB75  00                 	db	0
  1260  01AB76  00                 	db	0
  1261  01AB77  00                 	db	0
  1262  01AB78  00                 	db	0
  1263  01AB79  00                 	db	0
  1264  01AB7A  00                 	db	0
  1265  01AB7B  00                 	db	0
  1266  01AB7C  00                 	db	0
  1267  01AB7D  00                 	db	0
  1268  01AB7E  00                 	db	0
  1269  01AB7F  00                 	db	0
  1270  01AB80  00                 	db	0
  1271  01AB81  00                 	db	0
  1272  01AB82  00                 	db	0
  1273  01AB83  00                 	db	0
  1274  01AB84  00                 	db	0
  1275  01AB85  00                 	db	0
  1276  01AB86  00                 	db	0
  1277  01AB87  00                 	db	0
  1278  01AB88  00                 	db	0
  1279  01AB89  00                 	db	0
  1280  01AB8A  00                 	db	0
  1281  01AB8B  00                 	db	0
  1282  01AB8C  00                 	db	0
  1283  01AB8D  00                 	db	0
  1284  01AB8E  00                 	db	0
  1285  01AB8F  00                 	db	0
  1286  01AB90  00                 	db	0
  1287  01AB91  00                 	db	0
  1288  01AB92  00                 	db	0
  1289  01AB93  00                 	db	0
  1290  01AB94  00                 	db	0
  1291  01AB95  00                 	db	0
  1292  01AB96  00                 	db	0
  1293  01AB97  00                 	db	0
  1294  01AB98  00                 	db	0
  1295  01AB99  00                 	db	0
  1296  01AB9A  00                 	db	0
  1297  01AB9B  00                 	db	0
  1298  01AB9C  00                 	db	0
  1299  01AB9D  00                 	db	0
  1300  01AB9E  00                 	db	0
  1301  01AB9F  00                 	db	0
  1302  01ABA0  00                 	db	0
  1303  01ABA1  00                 	db	0
  1304  01ABA2  00                 	db	0
  1305  01ABA3  00                 	db	0
  1306  01ABA4  00                 	db	0
  1307  01ABA5  00                 	db	0
  1308  01ABA6  00                 	db	0
  1309  01ABA7  00                 	db	0
  1310  01ABA8  00                 	db	0
  1311  01ABA9  00                 	db	0
  1312  01ABAA  00                 	db	0
  1313  01ABAB  00                 	db	0
  1314  01ABAC  00                 	db	0
  1315  01ABAD  00                 	db	0
  1316  01ABAE  00                 	db	0
  1317  01ABAF  00                 	db	0
  1318  01ABB0  00                 	db	0
  1319  01ABB1  00                 	db	0
  1320  01ABB2  00                 	db	0
  1321  01ABB3  00                 	db	0
  1322  01ABB4  00                 	db	0
  1323  01ABB5  00                 	db	0
  1324  01ABB6  00                 	db	0
  1325  01ABB7  00                 	db	0
  1326  01ABB8  00                 	db	0
  1327  01ABB9  00                 	db	0
  1328  01ABBA  00                 	db	0
  1329  01ABBB  00                 	db	0
  1330  01ABBC  00                 	db	0
  1331  01ABBD  00                 	db	0
  1332  01ABBE  00                 	db	0
  1333  01ABBF  00                 	db	0
  1334  01ABC0  00                 	db	0
  1335  01ABC1  00                 	db	0
  1336  01ABC2  00                 	db	0
  1337  01ABC3  00                 	db	0
  1338  01ABC4  00                 	db	0
  1339  01ABC5  00                 	db	0
  1340  01ABC6  00                 	db	0
  1341  01ABC7  00                 	db	0
  1342  01ABC8  00                 	db	0
  1343  01ABC9  00                 	db	0
  1344  01ABCA  00                 	db	0
  1345  01ABCB  00                 	db	0
  1346  01ABCC  00                 	db	0
  1347  01ABCD  00                 	db	0
  1348  01ABCE  00                 	db	0
  1349  01ABCF  00                 	db	0
  1350  01ABD0  00                 	db	0
  1351  01ABD1  00                 	db	0
  1352  01ABD2  00                 	db	0
  1353  01ABD3  00                 	db	0
  1354  01ABD4  00                 	db	0
  1355  01ABD5  00                 	db	0
  1356  01ABD6  00                 	db	0
  1357  01ABD7  00                 	db	0
  1358  01ABD8  00                 	db	0
  1359  01ABD9  00                 	db	0
  1360  01ABDA  00                 	db	0
  1361  01ABDB  00                 	db	0
  1362  01ABDC  00                 	db	0
  1363  01ABDD  00                 	db	0
  1364  01ABDE  00                 	db	0
  1365  01ABDF  00                 	db	0
  1366  01ABE0  00                 	db	0
  1367  01ABE1  00                 	db	0
  1368  01ABE2  00                 	db	0
  1369  01ABE3  00                 	db	0
  1370  01ABE4  00                 	db	0
  1371  01ABE5  00                 	db	0
  1372  01ABE6  00                 	db	0
  1373  01ABE7  00                 	db	0
  1374  01ABE8  00                 	db	0
  1375  01ABE9  00                 	db	0
  1376  01ABEA  00                 	db	0
  1377  01ABEB  00                 	db	0
  1378  01ABEC  00                 	db	0
  1379  01ABED  00                 	db	0
  1380  01ABEE  00                 	db	0
  1381  01ABEF  00                 	db	0
  1382  01ABF0  00                 	db	0
  1383  01ABF1  00                 	db	0
  1384  01ABF2  00                 	db	0
  1385  01ABF3  00                 	db	0
  1386  01ABF4  00                 	db	0
  1387  01ABF5  00                 	db	0
  1388  01ABF6  00                 	db	0
  1389  01ABF7  00                 	db	0
  1390  01ABF8  00                 	db	0
  1391  01ABF9  00                 	db	0
  1392  01ABFA  00                 	db	0
  1393  01ABFB  00                 	db	0
  1394  01ABFC  00                 	db	0
  1395  01ABFD  00                 	db	0
  1396  01ABFE  00                 	db	0
  1397  01ABFF  00                 	db	0
  1398  01AC00  00                 	db	0
  1399  01AC01  00                 	db	0
  1400  01AC02  00                 	db	0
  1401  01AC03  00                 	db	0
  1402  01AC04  00                 	db	0
  1403  01AC05  00                 	db	0
  1404  01AC06  00                 	db	0
  1405  01AC07  00                 	db	0
  1406  01AC08  00                 	db	0
  1407  01AC09  00                 	db	0
  1408  01AC0A  00                 	db	0
  1409  01AC0B  00                 	db	0
  1410  01AC0C  00                 	db	0
  1411  01AC0D  00                 	db	0
  1412  01AC0E  00                 	db	0
  1413  01AC0F  00                 	db	0
  1414  01AC10  00                 	db	0
  1415  01AC11  00                 	db	0
  1416  01AC12  00                 	db	0
  1417  01AC13  00                 	db	0
  1418  01AC14  00                 	db	0
  1419  01AC15  00                 	db	0
  1420  01AC16  00                 	db	0
  1421  01AC17  00                 	db	0
  1422  01AC18  00                 	db	0
  1423  01AC19  00                 	db	0
  1424  01AC1A  00                 	db	0
  1425  01AC1B  00                 	db	0
  1426  01AC1C  00                 	db	0
  1427  01AC1D  00                 	db	0
  1428  01AC1E  00                 	db	0
  1429  01AC1F  00                 	db	0
  1430  01AC20  00                 	db	0
  1431  01AC21  00                 	db	0
  1432  01AC22  00                 	db	0
  1433  01AC23  00                 	db	0
  1434  01AC24  00                 	db	0
  1435  01AC25  00                 	db	0
  1436  01AC26  00                 	db	0
  1437  01AC27  00                 	db	0
  1438  01AC28  00                 	db	0
  1439  01AC29  00                 	db	0
  1440  01AC2A  00                 	db	0
  1441  01AC2B  00                 	db	0
  1442  01AC2C  00                 	db	0
  1443  01AC2D  00                 	db	0
  1444  01AC2E  00                 	db	0
  1445  01AC2F  00                 	db	0
  1446                           
  1447                           ;initializer for _C
  1448  01AC30  0000               	dw	0
  1449  01AC32  0000               	dw	0
  1450  01AC34  0000               	dw	0
  1451  01AC36  0000               	dw	0
  1452  01AC38  0000               	dw	0
  1453  01AC3A  0000               	dw	0
  1454  01AC3C  0000               	dw	0
  1455  01AC3E  0000               	dw	0
  1456  01AC40  0000               	dw	0
  1457  01AC42  0000               	dw	0
  1458  01AC44  0000               	dw	0
  1459  01AC46  0000               	dw	0
  1460  01AC48  0000               	dw	0
  1461  01AC4A  0000               	dw	0
  1462  01AC4C  0000               	dw	0
  1463  01AC4E  0000               	dw	0
  1464  01AC50  0000               	dw	0
  1465  01AC52  0000               	dw	0
  1466  01AC54  0000               	dw	0
  1467  01AC56  0000               	dw	0
  1468  01AC58  0000               	dw	0
  1469  01AC5A  0000               	dw	0
  1470  01AC5C  0000               	dw	0
  1471  01AC5E  0000               	dw	0
  1472  01AC60  0000               	dw	0
  1473  01AC62  0000               	dw	0
  1474  01AC64  0000               	dw	0
  1475  01AC66  0000               	dw	0
  1476  01AC68  0000               	dw	0
  1477  01AC6A  0000               	dw	0
  1478  01AC6C  0000               	dw	0
  1479  01AC6E  0000               	dw	0
  1480  01AC70  0000               	dw	0
  1481  01AC72  0000               	dw	0
  1482  01AC74  0000               	dw	0
  1483  01AC76  0000               	dw	0
  1484  01AC78  0000               	dw	0
  1485  01AC7A  0000               	dw	0
  1486  01AC7C  0000               	dw	0
  1487  01AC7E  0000               	dw	0
  1488  01AC80  0000               	dw	0
  1489  01AC82  0000               	dw	0
  1490  01AC84  0000               	dw	0
  1491  01AC86  0000               	dw	0
  1492  01AC88  0000               	dw	0
  1493  01AC8A  0000               	dw	0
  1494  01AC8C  0000               	dw	0
  1495  01AC8E  0000               	dw	0
  1496  01AC90  0000               	dw	0
  1497  01AC92  0000               	dw	0
  1498  01AC94  0000               	dw	0
  1499  01AC96  0000               	dw	0
  1500  01AC98  0000               	dw	0
  1501  01AC9A  0000               	dw	0
  1502  01AC9C  0000               	dw	0
  1503  01AC9E  0000               	dw	0
  1504  01ACA0  0000               	dw	0
  1505  01ACA2  0000               	dw	0
  1506  01ACA4  0000               	dw	0
  1507  01ACA6  0000               	dw	0
  1508  01ACA8  0000               	dw	0
  1509  01ACAA  0000               	dw	0
  1510  01ACAC  0000               	dw	0
  1511  01ACAE  0000               	dw	0
  1512  01ACB0  0000               	dw	0
  1513  01ACB2  0000               	dw	0
  1514  01ACB4  0000               	dw	0
  1515  01ACB6  0000               	dw	0
  1516  01ACB8  0000               	dw	0
  1517  01ACBA  0000               	dw	0
  1518  01ACBC  0000               	dw	0
  1519  01ACBE  42FA               	dw	17146
  1520  01ACC0  0000               	dw	0
  1521  01ACC2  0000               	dw	0
  1522  01ACC4  0000               	dw	0
  1523  01ACC6  0000               	dw	0
  1524  01ACC8  0000               	dw	0
  1525  01ACCA  0000               	dw	0
  1526  01ACCC  0000               	dw	0
  1527  01ACCE  0000               	dw	0
  1528  01ACD0  0000               	dw	0
  1529  01ACD2  0000               	dw	0
  1530  01ACD4  0000               	dw	0
  1531  01ACD6  0000               	dw	0
  1532  01ACD8  0000               	dw	0
  1533  01ACDA  0000               	dw	0
  1534  01ACDC  0000               	dw	0
  1535  01ACDE  0000               	dw	0
  1536  01ACE0  0000               	dw	0
  1537  01ACE2  0000               	dw	0
  1538  01ACE4  0000               	dw	0
  1539  01ACE6  0000               	dw	0
  1540  01ACE8  00                 	db	0
  1541  01ACE9  01                 	db	1
  1542  01ACEA  0000               	dw	0
  1543  01ACEC  0000               	dw	0
  1544  01ACEE  0000               	dw	0
  1545  01ACF0  0000               	dw	0
  1546  01ACF2  0000               	dw	0
  1547  01ACF4  3F80               	dw	16256
  1548  01ACF6  0000               	dw	0
  1549  01ACF8  3F80               	dw	16256
  1550  01ACFA  0000               	dw	0
  1551  01ACFC  0000               	dw	0
  1552  01ACFE  0000               	dw	0
  1553  01AD00  0000               	dw	0
  1554  01AD02  0000               	dw	0
  1555  01AD04  0000               	dw	0
  1556  01AD06  0000               	dw	0
  1557  01AD08  0000               	dw	0
  1558  01AD0A  0000               	dw	0
  1559  01AD0C  0000               	dw	0
  1560  01AD0E  00                 	db	0
  1561  01AD0F  00                 	db	0
  1562  01AD10  00                 	db	0
  1563  01AD11  00                 	db	0
  1564  01AD12  00                 	db	0
  1565  01AD13  00                 	db	0
  1566  01AD14  00                 	db	0
  1567  01AD15  00                 	db	0
  1568  01AD16  00                 	db	0
  1569  01AD17  00                 	db	0
  1570  01AD18  00                 	db	0
  1571  01AD19  00                 	db	0
  1572  01AD1A  00                 	db	0
  1573  01AD1B  00                 	db	0
  1574  01AD1C  00                 	db	0
  1575  01AD1D  00                 	db	0
  1576  01AD1E  00                 	db	0
  1577  01AD1F  00                 	db	0
  1578  01AD20  00                 	db	0
  1579  01AD21  00                 	db	0
  1580  01AD22  00                 	db	0
  1581  01AD23  00                 	db	0
  1582  01AD24  00                 	db	0
  1583  01AD25  00                 	db	0
  1584  01AD26  00                 	db	0
  1585  01AD27  00                 	db	0
  1586  01AD28  00                 	db	0
  1587  01AD29  00                 	db	0
  1588  01AD2A  00                 	db	0
  1589  01AD2B  00                 	db	0
  1590  01AD2C  00                 	db	0
  1591  01AD2D  00                 	db	0
  1592  01AD2E  00                 	db	0
  1593  01AD2F  00                 	db	0
  1594  01AD30  00                 	db	0
  1595  01AD31  00                 	db	0
  1596  01AD32  00                 	db	0
  1597  01AD33  00                 	db	0
  1598  01AD34  00                 	db	0
  1599  01AD35  00                 	db	0
  1600  01AD36  00                 	db	0
  1601  01AD37  00                 	db	0
  1602  01AD38  00                 	db	0
  1603  01AD39  00                 	db	0
  1604  01AD3A  00                 	db	0
  1605  01AD3B  00                 	db	0
  1606  01AD3C  00                 	db	0
  1607  01AD3D  00                 	db	0
  1608  01AD3E  00                 	db	0
  1609  01AD3F  00                 	db	0
  1610  01AD40  00                 	db	0
  1611  01AD41  00                 	db	0
  1612  01AD42  00                 	db	0
  1613  01AD43  00                 	db	0
  1614  01AD44  00                 	db	0
  1615  01AD45  00                 	db	0
  1616  01AD46  00                 	db	0
  1617  01AD47  00                 	db	0
  1618  01AD48  00                 	db	0
  1619  01AD49  00                 	db	0
  1620  01AD4A  0000               	dw	0
  1621  01AD4C  0000               	dw	0
  1622  01AD4E  0000               	dw	0
  1623  01AD50  0000               	dw	0
  1624  01AD52  0000               	dw	0
  1625  01AD54  0000               	dw	0
  1626  01AD56  0000               	dw	0
  1627  01AD58  0000               	dw	0
  1628  01AD5A  0000               	dw	0
  1629  01AD5C  0000               	dw	0
  1630  01AD5E  01                 	db	1
  1631  01AD5F  00                 	db	0
  1632  01AD60  0000               	dw	0
  1633  01AD62  0000               	dw	0
  1634  01AD64  0000               	dw	0
  1635  01AD66  0000               	dw	0
  1636  01AD68  0000               	dw	0
  1637  01AD6A  0000               	dw	0
  1638  01AD6C  0000               	dw	0
  1639  01AD6E  0000               	dw	0
  1640                           
  1641                           	psect	idataBANK1
  1642  001026                     __pidataBANK1:
  1643                           	opt callstack 0
  1644                           
  1645                           ;initializer for _R
  1646  001026  0000               	dw	0
  1647  001028  0000               	dw	0
  1648  00102A  0000               	dw	0
  1649  00102C  0000               	dw	0
  1650  00102E  0000               	dw	0
  1651  001030  0000               	dw	0
  1652  001032  0000               	dw	0
  1653  001034  0000               	dw	0
  1654  001036  0000               	dw	0
  1655  001038  0000               	dw	0
  1656  00103A  0000               	dw	0
  1657  00103C  0000               	dw	0
  1658  00103E  0000               	dw	0
  1659  001040  0000               	dw	0
  1660  001042  0000               	dw	0
  1661  001044  0000               	dw	0
  1662  001046  0000               	dw	0
  1663  001048  0000               	dw	0
  1664  00104A  0000               	dw	0
  1665  00104C  0F62               	dw	3938
  1666  00104E  0FA4               	dw	4004
  1667  001050  89A0               	dw	35232
  1668  001052  3DB0               	dw	15792
  1669  001054  DEA4               	dw	56996
  1670  001056  3D13               	dw	15635
  1671  001058  00                 	db	0
  1672  001059  0000               	dw	0
  1673  00105B  00                 	db	0
  1674  00105C  00                 	db	0
  1675  00105D  0000               	dw	0
  1676  00105F  0000               	dw	0
  1677  001061  0000               	dw	0
  1678  001063  0000               	dw	0
  1679  001065  0000               	dw	0
  1680  001067  0000               	dw	0
  1681  001069  0000               	dw	0
  1682  00106B  0000               	dw	0
  1683  00106D  0000               	dw	0
  1684  00106F  0000               	dw	0
  1685  001071  0000               	dw	0
  1686  001073  0000               	dw	0
  1687  001075  0000               	dw	0
  1688  001077  0000               	dw	0
  1689  001079  0000               	dw	0
  1690  00107B  0000               	dw	0
  1691  00107D  0000               	dw	0
  1692  00107F  0000               	dw	0
  1693  001081  0000               	dw	0
  1694  001083  0000               	dw	0
  1695  001085  0000               	dw	0
  1696  001087  0000               	dw	0
  1697  001089  0000               	dw	0
  1698  00108B  0000               	dw	0
  1699  00108D  0000               	dw	0
  1700  00108F  0000               	dw	0
  1701  001091  0000               	dw	0
  1702  001093  0000               	dw	0
  1703  001095  0000               	dw	0
  1704  001097  0000               	dw	0
  1705  001099  0000               	dw	0
  1706  00109B  0000               	dw	0
  1707  00109D  0000               	dw	0
  1708  00109F  0000               	dw	0
  1709  0010A1  0000               	dw	0
  1710  0010A3  0000               	dw	0
  1711  0010A5  0000               	dw	0
  1712  0010A7  0000               	dw	0
  1713  0010A9  0000               	dw	0
  1714  0010AB  0000               	dw	0
  1715  0010AD  0000               	dw	0
  1716  0010AF  0000               	dw	0
  1717  0010B1  0000               	dw	0
  1718  0010B3  0000               	dw	0
  1719  0010B5  0000               	dw	0
  1720  0010B7  0000               	dw	0
  1721  0010B9  0000               	dw	0
  1722  0010BB  0000               	dw	0
  1723  0010BD  00                 	db	0
  1724  0010BE  1957               	dw	6487
  1725  0010C0  42                 	db	66
  1726                           
  1727                           ;initializer for _H
  1728  0010C1  00                 	db	0
  1729  0010C2  00                 	db	0
  1730  0010C3  01                 	db	1
  1731  0010C4  00                 	db	0
  1732  0010C5  01                 	db	1
  1733  0010C6  00                 	db	0
  1734  0010C7  01                 	db	1
  1735  0010C8  00                 	db	0
  1736  0010C9  00                 	db	0
  1737                           
  1738                           	psect	idataBANK2
  1739  000A98                     __pidataBANK2:
  1740                           	opt callstack 0
  1741                           
  1742                           ;initializer for stoa@F1166
  1743  000A98  28                 	db	40
  1744  000A99  6E                 	db	110
  1745  000A9A  75                 	db	117
  1746  000A9B  6C                 	db	108
  1747  000A9C  6C                 	db	108
  1748  000A9D  29                 	db	41
  1749  000A9E  00                 	db	0
  1750                           
  1751                           ;initializer for _V
  1752  000A9F  00                 	db	0
  1753  000AA0  00                 	db	0
  1754  000AA1  00                 	db	0
  1755  000AA2  00                 	db	0
  1756  000AA3  00                 	db	0
  1757  000AA4  00                 	db	0
  1758  000AA5  00                 	db	0
  1759  000AA6  00                 	db	0
  1760  000AA7  00                 	db	0
  1761  000AA8  00                 	db	0
  1762  000AA9  00                 	db	0
  1763  000AAA  00                 	db	0
  1764  000AAB  00                 	db	0
  1765  000AAC  00                 	db	0
  1766  000AAD  00                 	db	0
  1767  000AAE  00                 	db	0
  1768  000AAF  00                 	db	0
  1769  000AB0  00                 	db	0
  1770  000AB1  00                 	db	0
  1771  000AB2  00                 	db	0
  1772  000AB3  00                 	db	0
  1773  000AB4  00                 	db	0
  1774  000AB5  00                 	db	0
  1775  000AB6  00                 	db	0
  1776  000AB7  00                 	db	0
  1777  000AB8  00                 	db	0
  1778  000AB9  00                 	db	0
  1779  000ABA  00                 	db	0
  1780  000ABB  00                 	db	0
  1781  000ABC  00                 	db	0
  1782  000ABD  00                 	db	0
  1783  000ABE  00                 	db	0
  1784  000ABF  00                 	db	0
  1785  000AC0  00                 	db	0
  1786  000AC1  00                 	db	0
  1787  000AC2  00                 	db	0
  1788  000AC3  00                 	db	0
  1789  000AC4  00                 	db	0
  1790  000AC5  00                 	db	0
  1791  000AC6  00                 	db	0
  1792  000AC7  00                 	db	0
  1793  000AC8  00                 	db	0
  1794  000AC9  00                 	db	0
  1795  000ACA  00                 	db	0
  1796  000ACB  00                 	db	0
  1797  000ACC  00                 	db	0
  1798  000ACD  00                 	db	0
  1799  000ACE  00                 	db	0
  1800  000ACF  00                 	db	0
  1801  000AD0  00                 	db	0
  1802  000AD1  00                 	db	0
  1803  000AD2  00                 	db	0
  1804  000AD3  00                 	db	0
  1805  000AD4  00                 	db	0
  1806  000AD5  00                 	db	0
  1807  000AD6  00                 	db	0
  1808  000AD7  00                 	db	0
  1809  000AD8  00                 	db	0
  1810  000AD9  00                 	db	0
  1811  000ADA  00                 	db	0
  1812  000ADB  00                 	db	0
  1813  000ADC  00                 	db	0
  1814  000ADD  00                 	db	0
  1815  000ADE  00                 	db	0
  1816  000ADF  00                 	db	0
  1817  000AE0  00                 	db	0
  1818  000AE1  00                 	db	0
  1819  000AE2  00                 	db	0
  1820  000AE3  00                 	db	0
  1821  000AE4  00                 	db	0
  1822  000AE5  00                 	db	0
  1823  000AE6  00                 	db	0
  1824  000AE7  00                 	db	0
  1825  000AE8  00                 	db	0
  1826  000AE9  00                 	db	0
  1827  000AEA  00                 	db	0
  1828  000AEB  00                 	db	0
  1829  000AEC  00                 	db	0
  1830  000AED  00                 	db	0
  1831  000AEE  00                 	db	0
  1832  000AEF  00                 	db	0
  1833  000AF0  00                 	db	0
  1834  000AF1  00                 	db	0
  1835  000AF2  00                 	db	0
  1836  000AF3  00                 	db	0
  1837  000AF4  00                 	db	0
  1838  000AF5  00                 	db	0
  1839  000AF6  00                 	db	0
  1840  000AF7  00                 	db	0
  1841  000AF8  00                 	db	0
  1842  000AF9  00                 	db	0
  1843  000AFA  00                 	db	0
  1844  000AFB  00                 	db	0
  1845  000AFC  00                 	db	0
  1846  000AFD  00                 	db	0
  1847  000AFE  00                 	db	0
  1848  000AFF  00                 	db	0
  1849  000B00  00                 	db	0
  1850  000B01  00                 	db	0
  1851  000B02  00                 	db	0
  1852  000B03  00                 	db	0
  1853  000B04  00                 	db	0
  1854  000B05  00                 	db	0
  1855  000B06  00                 	db	0
  1856  000B07  00                 	db	0
  1857  000B08  00                 	db	0
  1858  000B09  00                 	db	0
  1859  000B0A  00                 	db	0
  1860  000B0B  00                 	db	0
  1861  000B0C  00                 	db	0
  1862  000B0D  00                 	db	0
  1863  000B0E  00                 	db	0
  1864  000B0F  00                 	db	0
  1865  000B10  00                 	db	0
  1866  000B11  00                 	db	0
  1867  000B12  00                 	db	0
  1868  000B13  00                 	db	0
  1869  000B14  00                 	db	0
  1870  000B15  00                 	db	0
  1871  000B16  00                 	db	0
  1872  000B17  00                 	db	0
  1873  000B18  00                 	db	0
  1874  000B19  00                 	db	0
  1875  000B1A  00                 	db	0
  1876  000B1B  00                 	db	0
  1877  000B1C  00                 	db	0
  1878  000B1D  00                 	db	0
  1879  000B1E  00                 	db	0
  1880  000B1F  00                 	db	0
  1881  000B20  879E               	dw	34718
  1882  000B22  5E4C               	dw	24140
  1883  000B24  00                 	db	0
  1884  000B25  00                 	db	0
  1885  000B26  00                 	db	0
  1886  000B27  00                 	db	0
  1887  000B28  00                 	db	0
  1888  000B29  00                 	db	0
  1889  000B2A  00                 	db	0
  1890  000B2B  0000               	dw	0
  1891  000B2D  0000               	dw	0
  1892  000B2F  0000               	dw	0
  1893  000B31  0000               	dw	0
  1894  000B33  0000               	dw	0
  1895  000B35  0000               	dw	0
  1896  000B37  00                 	db	0
  1897  000B38  00                 	db	0
  1898  000B39  00                 	db	0
  1899  000B3A  00                 	db	0
  1900  000B3B  00                 	db	0
  1901  000B3C  00                 	db	0
  1902  000B3D  00                 	db	0
  1903  000B3E  00                 	db	0
  1904  000B3F  00                 	db	0
  1905  000B40  00                 	db	0
  1906  000B41  00                 	db	0
  1907  000B42  0000               	dw	0
  1908  000B44  0000               	dw	0
  1909  000B46  2D                 	db	45
  1910  000B47  00                 	db	0
  1911  000B48  00                 	db	0
  1912  000B49  00                 	db	0
  1913  000B4A  00                 	db	0
  1914  000B4B  00                 	db	0
  1915  000B4C  0000               	dw	0
  1916  000B4E  0000               	dw	0
  1917  000B50  0000               	dw	0
  1918  000B52  0000               	dw	0
  1919                           
  1920                           	psect	mediumconst
  1921  00F716                     __pmediumconst:
  1922                           	opt callstack 0
  1923  00F716  00                 	db	0
  1924  00F717                     _BVSOC_TABLE:
  1925                           	opt callstack 0
  1926  00F717  59D8               	dw	23000
  1927  00F719  0000               	dw	0
  1928  00F71B  0005               	dw	5
  1929  00F71D  0000               	dw	0
  1930  00F71F  5B68               	dw	23400
  1931  00F721  0000               	dw	0
  1932  00F723  000A               	dw	10
  1933  00F725  0000               	dw	0
  1934  00F727  5C30               	dw	23600
  1935  00F729  0000               	dw	0
  1936  00F72B  0014               	dw	20
  1937  00F72D  0000               	dw	0
  1938  00F72F  5E38               	dw	24120
  1939  00F731  0000               	dw	0
  1940  00F733  0019               	dw	25
  1941  00F735  0000               	dw	0
  1942  00F737  5E88               	dw	24200
  1943  00F739  0000               	dw	0
  1944  00F73B  001E               	dw	30
  1945  00F73D  0000               	dw	0
  1946  00F73F  5F78               	dw	24440
  1947  00F741  0000               	dw	0
  1948  00F743  0028               	dw	40
  1949  00F745  0000               	dw	0
  1950  00F747  5FDC               	dw	24540
  1951  00F749  0000               	dw	0
  1952  00F74B  002D               	dw	45
  1953  00F74D  0000               	dw	0
  1954  00F74F  6018               	dw	24600
  1955  00F751  0000               	dw	0
  1956  00F753  0032               	dw	50
  1957  00F755  0000               	dw	0
  1958  00F757  6046               	dw	24646
  1959  00F759  0000               	dw	0
  1960  00F75B  0035               	dw	53
  1961  00F75D  0000               	dw	0
  1962  00F75F  607C               	dw	24700
  1963  00F761  0000               	dw	0
  1964  00F763  0037               	dw	55
  1965  00F765  0000               	dw	0
  1966  00F767  60AE               	dw	24750
  1967  00F769  0000               	dw	0
  1968  00F76B  0039               	dw	57
  1969  00F76D  0000               	dw	0
  1970  00F76F  60E0               	dw	24800
  1971  00F771  0000               	dw	0
  1972  00F773  003C               	dw	60
  1973  00F775  0000               	dw	0
  1974  00F777  6112               	dw	24850
  1975  00F779  0000               	dw	0
  1976  00F77B  003F               	dw	63
  1977  00F77D  0000               	dw	0
  1978  00F77F  615D               	dw	24925
  1979  00F781  0000               	dw	0
  1980  00F783  0043               	dw	67
  1981  00F785  0000               	dw	0
  1982  00F787  61A8               	dw	25000
  1983  00F789  0000               	dw	0
  1984  00F78B  0046               	dw	70
  1985  00F78D  0000               	dw	0
  1986  00F78F  61BC               	dw	25020
  1987  00F791  0000               	dw	0
  1988  00F793  0048               	dw	72
  1989  00F795  0000               	dw	0
  1990  00F797  61D0               	dw	25040
  1991  00F799  0000               	dw	0
  1992  00F79B  004B               	dw	75
  1993  00F79D  0000               	dw	0
  1994  00F79F  61DA               	dw	25050
  1995  00F7A1  0000               	dw	0
  1996  00F7A3  0050               	dw	80
  1997  00F7A5  0000               	dw	0
  1998  00F7A7  61E4               	dw	25060
  1999  00F7A9  0000               	dw	0
  2000  00F7AB  0055               	dw	85
  2001  00F7AD  0000               	dw	0
  2002  00F7AF  61F8               	dw	25080
  2003  00F7B1  0000               	dw	0
  2004  00F7B3  005A               	dw	90
  2005  00F7B5  0000               	dw	0
  2006  00F7B7  6208               	dw	25096
  2007  00F7B9  0000               	dw	0
  2008  00F7BB  005C               	dw	92
  2009  00F7BD  0000               	dw	0
  2010  00F7BF  6222               	dw	25122
  2011  00F7C1  0000               	dw	0
  2012  00F7C3  005D               	dw	93
  2013  00F7C5  0000               	dw	0
  2014  00F7C7  6234               	dw	25140
  2015  00F7C9  0000               	dw	0
  2016  00F7CB  005F               	dw	95
  2017  00F7CD  0000               	dw	0
  2018  00F7CF  6248               	dw	25160
  2019  00F7D1  0000               	dw	0
  2020  00F7D3  0061               	dw	97
  2021  00F7D5  0000               	dw	0
  2022  00F7D7  625C               	dw	25180
  2023  00F7D9  0000               	dw	0
  2024  00F7DB  0064               	dw	100
  2025  00F7DD  0000               	dw	0
  2026  00F7DF  6784               	dw	26500
  2027  00F7E1  0000               	dw	0
  2028  00F7E3  0062               	dw	98
  2029  00F7E5  0000               	dw	0
  2030  00F7E7                     __end_of_BVSOC_TABLE:
  2031                           	opt callstack 0
  2032  00F7E7                     ___month_to_secs@secs_through_month:
  2033                           	opt callstack 0
  2034  00F7E7  0000               	dw	0
  2035  00F7E9  0000               	dw	0
  2036  00F7EB  DE80               	dw	56960
  2037  00F7ED  0028               	dw	40
  2038  00F7EF  C880               	dw	51328
  2039  00F7F1  004D               	dw	77
  2040  00F7F3  A700               	dw	42752
  2041  00F7F5  0076               	dw	118
  2042  00F7F7  3400               	dw	13312
  2043  00F7F9  009E               	dw	158
  2044  00F7FB  1280               	dw	4736
  2045  00F7FD  00C7               	dw	199
  2046  00F7FF  9F80               	dw	40832
  2047  00F801  00EE               	dw	238
  2048  00F803  7E00               	dw	32256
  2049  00F805  0117               	dw	279
  2050  00F807  5C80               	dw	23680
  2051  00F809  0140               	dw	320
  2052  00F80B  E980               	dw	59776
  2053  00F80D  0167               	dw	359
  2054  00F80F  C800               	dw	51200
  2055  00F811  0190               	dw	400
  2056  00F813  5500               	dw	21760
  2057  00F815  01B8               	dw	440
  2058  00F817                     __end_of___month_to_secs@secs_through_month:
  2059                           	opt callstack 0
  2060  00F817                     ___secs_to_tm@days_in_month:
  2061                           	opt callstack 0
  2062  00F817  1F                 	db	31
  2063  00F818  1E                 	db	30
  2064  00F819  1F                 	db	31
  2065  00F81A  1E                 	db	30
  2066  00F81B  1F                 	db	31
  2067  00F81C  1F                 	db	31
  2068  00F81D  1E                 	db	30
  2069  00F81E  1F                 	db	31
  2070  00F81F  1E                 	db	30
  2071  00F820  1F                 	db	31
  2072  00F821  1F                 	db	31
  2073  00F822  1D                 	db	29
  2074  00F823                     __end_of___secs_to_tm@days_in_month:
  2075                           	opt callstack 0
  2076  00F823                     _T:
  2077                           	opt callstack 0
  2078  00F823  63                 	db	99
  2079  00F824  6F                 	db	111
  2080  00F825  6D                 	db	109
  2081  00F826  6D                 	db	109
  2082  00F827  61                 	db	97
  2083  00F828  6E                 	db	110
  2084  00F829  64                 	db	100
  2085  00F82A  73                 	db	115
  2086  00F82B  20                 	db	32
  2087  00F82C  31                 	db	49
  2088  00F82D  00                 	db	0
  2089  00F82E  00                 	db	0
  2090  00F82F  00                 	db	0
  2091  00F830  00                 	db	0
  2092  00F831  00                 	db	0
  2093  00F832  00                 	db	0
  2094  00F833  00                 	db	0
  2095  00F834  00                 	db	0
  2096  00F835  00                 	db	0
  2097  00F836  00                 	db	0
  2098  00F837  00                 	db	0
  2099  00F838  00                 	db	0
  2100  00F839  64                 	db	100
  2101  00F83A  69                 	db	105
  2102  00F83B  73                 	db	115
  2103  00F83C  70                 	db	112
  2104  00F83D  6C                 	db	108
  2105  00F83E  61                 	db	97
  2106  00F83F  79                 	db	121
  2107  00F840  73                 	db	115
  2108  00F841  20                 	db	32
  2109  00F842  31                 	db	49
  2110  00F843  00                 	db	0
  2111  00F844  00                 	db	0
  2112  00F845  00                 	db	0
  2113  00F846  00                 	db	0
  2114  00F847  00                 	db	0
  2115  00F848  00                 	db	0
  2116  00F849  00                 	db	0
  2117  00F84A  00                 	db	0
  2118  00F84B  00                 	db	0
  2119  00F84C  00                 	db	0
  2120  00F84D  00                 	db	0
  2121  00F84E  00                 	db	0
  2122  00F84F  63                 	db	99
  2123  00F850  6F                 	db	111
  2124  00F851  6D                 	db	109
  2125  00F852  6D                 	db	109
  2126  00F853  61                 	db	97
  2127  00F854  6E                 	db	110
  2128  00F855  64                 	db	100
  2129  00F856  73                 	db	115
  2130  00F857  20                 	db	32
  2131  00F858  32                 	db	50
  2132  00F859  00                 	db	0
  2133  00F85A  00                 	db	0
  2134  00F85B  00                 	db	0
  2135  00F85C  00                 	db	0
  2136  00F85D  00                 	db	0
  2137  00F85E  00                 	db	0
  2138  00F85F  00                 	db	0
  2139  00F860  00                 	db	0
  2140  00F861  00                 	db	0
  2141  00F862  00                 	db	0
  2142  00F863  00                 	db	0
  2143  00F864  00                 	db	0
  2144  00F865  64                 	db	100
  2145  00F866  69                 	db	105
  2146  00F867  73                 	db	115
  2147  00F868  70                 	db	112
  2148  00F869  6C                 	db	108
  2149  00F86A  61                 	db	97
  2150  00F86B  79                 	db	121
  2151  00F86C  73                 	db	115
  2152  00F86D  20                 	db	32
  2153  00F86E  32                 	db	50
  2154  00F86F  00                 	db	0
  2155  00F870  00                 	db	0
  2156  00F871  00                 	db	0
  2157  00F872  00                 	db	0
  2158  00F873  00                 	db	0
  2159  00F874  00                 	db	0
  2160  00F875  00                 	db	0
  2161  00F876  00                 	db	0
  2162  00F877  00                 	db	0
  2163  00F878  00                 	db	0
  2164  00F879  00                 	db	0
  2165  00F87A  00                 	db	0
  2166  00F87B  63                 	db	99
  2167  00F87C  6F                 	db	111
  2168  00F87D  6D                 	db	109
  2169  00F87E  6D                 	db	109
  2170  00F87F  61                 	db	97
  2171  00F880  6E                 	db	110
  2172  00F881  64                 	db	100
  2173  00F882  73                 	db	115
  2174  00F883  20                 	db	32
  2175  00F884  33                 	db	51
  2176  00F885  00                 	db	0
  2177  00F886  00                 	db	0
  2178  00F887  00                 	db	0
  2179  00F888  00                 	db	0
  2180  00F889  00                 	db	0
  2181  00F88A  00                 	db	0
  2182  00F88B  00                 	db	0
  2183  00F88C  00                 	db	0
  2184  00F88D  00                 	db	0
  2185  00F88E  00                 	db	0
  2186  00F88F  00                 	db	0
  2187  00F890  00                 	db	0
  2188  00F891  64                 	db	100
  2189  00F892  69                 	db	105
  2190  00F893  73                 	db	115
  2191  00F894  70                 	db	112
  2192  00F895  6C                 	db	108
  2193  00F896  61                 	db	97
  2194  00F897  79                 	db	121
  2195  00F898  73                 	db	115
  2196  00F899  20                 	db	32
  2197  00F89A  33                 	db	51
  2198  00F89B  00                 	db	0
  2199  00F89C  00                 	db	0
  2200  00F89D  00                 	db	0
  2201  00F89E  00                 	db	0
  2202  00F89F  00                 	db	0
  2203  00F8A0  00                 	db	0
  2204  00F8A1  00                 	db	0
  2205  00F8A2  00                 	db	0
  2206  00F8A3  00                 	db	0
  2207  00F8A4  00                 	db	0
  2208  00F8A5  00                 	db	0
  2209  00F8A6  00                 	db	0
  2210  00F8A7  63                 	db	99
  2211  00F8A8  6F                 	db	111
  2212  00F8A9  6D                 	db	109
  2213  00F8AA  6D                 	db	109
  2214  00F8AB  61                 	db	97
  2215  00F8AC  6E                 	db	110
  2216  00F8AD  64                 	db	100
  2217  00F8AE  73                 	db	115
  2218  00F8AF  20                 	db	32
  2219  00F8B0  34                 	db	52
  2220  00F8B1  00                 	db	0
  2221  00F8B2  00                 	db	0
  2222  00F8B3  00                 	db	0
  2223  00F8B4  00                 	db	0
  2224  00F8B5  00                 	db	0
  2225  00F8B6  00                 	db	0
  2226  00F8B7  00                 	db	0
  2227  00F8B8  00                 	db	0
  2228  00F8B9  00                 	db	0
  2229  00F8BA  00                 	db	0
  2230  00F8BB  00                 	db	0
  2231  00F8BC  00                 	db	0
  2232  00F8BD  64                 	db	100
  2233  00F8BE  69                 	db	105
  2234  00F8BF  73                 	db	115
  2235  00F8C0  70                 	db	112
  2236  00F8C1  6C                 	db	108
  2237  00F8C2  61                 	db	97
  2238  00F8C3  79                 	db	121
  2239  00F8C4  73                 	db	115
  2240  00F8C5  20                 	db	32
  2241  00F8C6  34                 	db	52
  2242  00F8C7  00                 	db	0
  2243  00F8C8  00                 	db	0
  2244  00F8C9  00                 	db	0
  2245  00F8CA  00                 	db	0
  2246  00F8CB  00                 	db	0
  2247  00F8CC  00                 	db	0
  2248  00F8CD  00                 	db	0
  2249  00F8CE  00                 	db	0
  2250  00F8CF  00                 	db	0
  2251  00F8D0  00                 	db	0
  2252  00F8D1  00                 	db	0
  2253  00F8D2  00                 	db	0
  2254  00F8D3                     __end_of_T:
  2255                           	opt callstack 0
  2256  00F8D3                     _spin:
  2257                           	opt callstack 0
  2258  00F8D3  7C                 	db	124
  2259  00F8D4  7C                 	db	124
  2260  00F8D5  2F                 	db	47
  2261  00F8D6  2F                 	db	47
  2262  00F8D7  2D                 	db	45
  2263  00F8D8  2D                 	db	45
  2264  00F8D9  00                 	db	0
  2265  00F8DA  00                 	db	0
  2266  00F8DB  00                 	db	0
  2267  00F8DC  00                 	db	0
  2268  00F8DD  00                 	db	0
  2269  00F8DE  00                 	db	0
  2270  00F8DF  00                 	db	0
  2271  00F8E0  00                 	db	0
  2272  00F8E1  00                 	db	0
  2273  00F8E2  00                 	db	0
  2274  00F8E3  00                 	db	0
  2275  00F8E4  00                 	db	0
  2276  00F8E5  00                 	db	0
  2277  00F8E6  00                 	db	0
  2278  00F8E7  7C                 	db	124
  2279  00F8E8  7C                 	db	124
  2280  00F8E9  2F                 	db	47
  2281  00F8EA  2F                 	db	47
  2282  00F8EB  2D                 	db	45
  2283  00F8EC  2D                 	db	45
  2284  00F8ED  5C                 	db	92
  2285  00F8EE  5C                 	db	92
  2286  00F8EF  00                 	db	0
  2287  00F8F0  00                 	db	0
  2288  00F8F1  00                 	db	0
  2289  00F8F2  00                 	db	0
  2290  00F8F3  00                 	db	0
  2291  00F8F4  00                 	db	0
  2292  00F8F5  00                 	db	0
  2293  00F8F6  00                 	db	0
  2294  00F8F7  00                 	db	0
  2295  00F8F8  00                 	db	0
  2296  00F8F9  00                 	db	0
  2297  00F8FA  00                 	db	0
  2298  00F8FB  4F                 	db	79
  2299  00F8FC  4F                 	db	79
  2300  00F8FD  4F                 	db	79
  2301  00F8FE  4F                 	db	79
  2302  00F8FF  4F                 	db	79
  2303  00F900  4F                 	db	79
  2304  00F901  2D                 	db	45
  2305  00F902  2D                 	db	45
  2306  00F903  5F                 	db	95
  2307  00F904  5F                 	db	95
  2308  00F905  2D                 	db	45
  2309  00F906  00                 	db	0
  2310  00F907  00                 	db	0
  2311  00F908  00                 	db	0
  2312  00F909  00                 	db	0
  2313  00F90A  00                 	db	0
  2314  00F90B  00                 	db	0
  2315  00F90C  00                 	db	0
  2316  00F90D  00                 	db	0
  2317  00F90E  00                 	db	0
  2318  00F90F  76                 	db	118
  2319  00F910  76                 	db	118
  2320  00F911  3C                 	db	60
  2321  00F912  3C                 	db	60
  2322  00F913  5E                 	db	94
  2323  00F914  5E                 	db	94
  2324  00F915  3E                 	db	62
  2325  00F916  3E                 	db	62
  2326  00F917  00                 	db	0
  2327  00F918  00                 	db	0
  2328  00F919  00                 	db	0
  2329  00F91A  00                 	db	0
  2330  00F91B  00                 	db	0
  2331  00F91C  00                 	db	0
  2332  00F91D  00                 	db	0
  2333  00F91E  00                 	db	0
  2334  00F91F  00                 	db	0
  2335  00F920  00                 	db	0
  2336  00F921  00                 	db	0
  2337  00F922  00                 	db	0
  2338  00F923  2E                 	db	46
  2339  00F924  2E                 	db	46
  2340  00F925  2A                 	db	42
  2341  00F926  2A                 	db	42
  2342  00F927  78                 	db	120
  2343  00F928  23                 	db	35
  2344  00F929  78                 	db	120
  2345  00F92A  23                 	db	35
  2346  00F92B  58                 	db	88
  2347  00F92C  58                 	db	88
  2348  00F92D  7C                 	db	124
  2349  00F92E  7C                 	db	124
  2350  00F92F  2D                 	db	45
  2351  00F930  2D                 	db	45
  2352  00F931  00                 	db	0
  2353  00F932  00                 	db	0
  2354  00F933  00                 	db	0
  2355  00F934  00                 	db	0
  2356  00F935  00                 	db	0
  2357  00F936  00                 	db	0
  2358  00F937  2E                 	db	46
  2359  00F938  2E                 	db	46
  2360  00F939  6F                 	db	111
  2361  00F93A  6F                 	db	111
  2362  00F93B  4F                 	db	79
  2363  00F93C  4F                 	db	79
  2364  00F93D  6F                 	db	111
  2365  00F93E  6F                 	db	111
  2366  00F93F  00                 	db	0
  2367  00F940  00                 	db	0
  2368  00F941  00                 	db	0
  2369  00F942  00                 	db	0
  2370  00F943  00                 	db	0
  2371  00F944  00                 	db	0
  2372  00F945  00                 	db	0
  2373  00F946  00                 	db	0
  2374  00F947  00                 	db	0
  2375  00F948  00                 	db	0
  2376  00F949  00                 	db	0
  2377  00F94A  00                 	db	0
  2378  00F94B                     __end_of_spin:
  2379                           	opt callstack 0
  2380  00F94B  0000               	dw	0
  2381  00F94D  3F80               	dw	16256
  2382  00F94F  0000               	dw	0
  2383  00F951  3FC0               	dw	16320
  2384  00F953                     __end_of_bp:
  2385                           	opt callstack 0
  2386  00F953                     ___gmt:
  2387                           	opt callstack 0
  2388  00F953  47                 	db	71
  2389  00F954  4D                 	db	77
  2390  00F955  54                 	db	84
  2391  00F956  00                 	db	0
  2392  00F957                     __end_of___gmt:
  2393                           	opt callstack 0
  2394  00F957  AA00               	dw	43520
  2395  00F959  3FB8               	dw	16312
  2396  00F95B                     __end_of_ivln2_h:
  2397                           	opt callstack 0
  2398  00F95B  23C6               	dw	9158
  2399  00F95D  B8F6               	dw	47350
  2400  00F95F                     __end_of_cp_l:
  2401                           	opt callstack 0
  2402  00F95F  4000               	dw	16384
  2403  00F961  3F76               	dw	16246
  2404  00F963                     __end_of_cp_h:
  2405                           	opt callstack 0
  2406  0000                     _IVTADL	set	14493
  2407  0000                     _IVTADH	set	14494
  2408  0000                     _IVTADU	set	14495
  2409  0000                     _CRCDATH	set	14689
  2410  0000                     _CRCDATL	set	14688
  2411  0000                     _CRCCON0bits	set	14696
  2412  0000                     _CRCCON1bits	set	14697
  2413  0000                     _CRCXORL	set	14694
  2414  0000                     _CRCXORH	set	14695
  2415  0000                     _SCANTRIG	set	14717
  2416  0000                     _SCANHADRL	set	14713
  2417  0000                     _SCANHADRH	set	14714
  2418  0000                     _SCANHADRU	set	14715
  2419  0000                     _SCANLADRL	set	14710
  2420  0000                     _SCANLADRH	set	14711
  2421  0000                     _SCANLADRU	set	14712
  2422  0000                     _SCANCON0	set	14716
  2423  0000                     _CRCACCH	set	14691
  2424  0000                     _CRCACCL	set	14690
  2425  0000                     _CRCCON1	set	14697
  2426  0000                     _CRCCON0	set	14696
  2427  0000                     _PIR6bits	set	14758
  2428  0000                     _PIR4bits	set	14756
  2429  0000                     _PIE8bits	set	14744
  2430  0000                     _PIR8bits	set	14760
  2431  0000                     _PIR0bits	set	14752
  2432  0000                     _NVMCON2	set	14822
  2433  0000                     _NVMDAT	set	14819
  2434  0000                     _NVMADRL	set	14816
  2435  0000                     _NVMADRH	set	14817
  2436  0000                     _NVMCON1bits	set	14821
  2437  0000                     _SCANPR	set	14839
  2438  0000                     _DMA2PR	set	14836
  2439  0000                     _DMA1PR	set	14835
  2440  0000                     _MAINPR	set	14834
  2441  0000                     _ISRPR	set	14833
  2442  0000                     _PIE2bits	set	14738
  2443  0000                     _PIR2bits	set	14754
  2444  0000                     _PIE9bits	set	14745
  2445  0000                     _PIR9bits	set	14761
  2446  0000                     _PIE6bits	set	14742
  2447  0000                     _PIE3bits	set	14739
  2448  0000                     _PMD7	set	14791
  2449  0000                     _PMD6	set	14790
  2450  0000                     _PMD5	set	14789
  2451  0000                     _PMD4	set	14788
  2452  0000                     _PMD3	set	14787
  2453  0000                     _PMD2	set	14786
  2454  0000                     _PMD1	set	14785
  2455  0000                     _PMD0	set	14784
  2456  0000                     _OSCTUNE	set	14814
  2457  0000                     _OSCFRQ	set	14815
  2458  0000                     _OSCEN	set	14813
  2459  0000                     _OSCCON3	set	14811
  2460  0000                     _OSCCON1	set	14809
  2461  0000                     _IPR8bits	set	14728
  2462  0000                     _IPR9bits	set	14729
  2463  0000                     _IPR5bits	set	14725
  2464  0000                     _IPR1bits	set	14721
  2465  0000                     _IPR3bits	set	14723
  2466  0000                     _IPR6bits	set	14726
  2467  0000                     _IPR2bits	set	14722
  2468  0000                     _PIE5bits	set	14741
  2469  0000                     _PIE1bits	set	14737
  2470  0000                     _PIR5bits	set	14757
  2471  0000                     _PIR1bits	set	14753
  2472  0000                     _PLLR	set	118496
  2473  0000                     _SPI1SDIPPS	set	15071
  2474  0000                     _U1RXPPS	set	15077
  2475  0000                     _RC6PPS	set	14870
  2476  0000                     _RC5PPS	set	14869
  2477  0000                     _INT1PPS	set	15041
  2478  0000                     _RD1PPS	set	14873
  2479  0000                     _INT0PPS	set	15040
  2480  0000                     _RC3PPS	set	14867
  2481  0000                     _RB6PPS	set	14862
  2482  0000                     _SPI1SCKPPS	set	15070
  2483  0000                     _U2RXPPS	set	15080
  2484  0000                     _SLRCONF	set	14995
  2485  0000                     _SLRCONE	set	14979
  2486  0000                     _SLRCOND	set	14963
  2487  0000                     _SLRCONC	set	14947
  2488  0000                     _SLRCONB	set	14931
  2489  0000                     _SLRCONA	set	14915
  2490  0000                     _ODCOND	set	14962
  2491  0000                     _ODCONC	set	14946
  2492  0000                     _ODCONB	set	14930
  2493  0000                     _ODCONA	set	14914
  2494  0000                     _ODCONF	set	14994
  2495  0000                     _ODCONE	set	14978
  2496  0000                     _WPUC	set	14945
  2497  0000                     _WPUA	set	14913
  2498  0000                     _WPUB	set	14929
  2499  0000                     _WPUE	set	14977
  2500  0000                     _WPUF	set	14993
  2501  0000                     _WPUD	set	14961
  2502  0000                     _ANSELA	set	14912
  2503  0000                     _ANSELF	set	14992
  2504  0000                     _ANSELE	set	14976
  2505  0000                     _ANSELB	set	14928
  2506  0000                     _ANSELC	set	14944
  2507  0000                     _ANSELD	set	14960
  2508  0000                     _DMA2SSA	set	15321
  2509  0000                     _DMA1SSA	set	15353
  2510  0000                     _DMA2DSZ	set	15310
  2511  0000                     _DMA2SSZ	set	15319
  2512  0000                     _DMA2DSA	set	15312
  2513  0000                     _DMA1DSZ	set	15342
  2514  0000                     _DMA1SSZ	set	15351
  2515  0000                     _DMA1DSA	set	15344
  2516  0000                     _DMA2CON0bits	set	15324
  2517  0000                     _DMA2CON1bits	set	15325
  2518  0000                     _DMA1CON0bits	set	15356
  2519  0000                     _DMA1CON1bits	set	15357
  2520  0000                     _DMA2CON0	set	15324
  2521  0000                     _DMA2AIRQ	set	15326
  2522  0000                     _DMA2SIRQ	set	15327
  2523  0000                     _DMA2CON1	set	15325
  2524  0000                     _DMA1CON0	set	15356
  2525  0000                     _DMA1AIRQ	set	15358
  2526  0000                     _DMA1SIRQ	set	15359
  2527  0000                     _DMA1CON1	set	15357
  2528  0000                     _CLKRCON	set	15589
  2529  0000                     _CLKRCLK	set	15590
  2530  0000                     _SPI1CON1bits	set	15637
  2531  0000                     _SPI1STATUSbits	set	15639
  2532  0000                     _SPI1INTFbits	set	15642
  2533  0000                     _SPI1CON0bits	set	15636
  2534  0000                     _SPI1RXB	set	15632
  2535  0000                     _SPI1TXB	set	15633
  2536  0000                     _SPI1TCNTL	set	15634
  2537  0000                     _SPI1CON0	set	15636
  2538  0000                     _SPI1CLK	set	15644
  2539  0000                     _SPI1BAUD	set	15641
  2540  0000                     _SPI1CON2	set	15638
  2541  0000                     _SPI1CON1	set	15637
  2542  0000                     _U2RXB	set	15824
  2543  0000                     _U2TXB	set	15826
  2544  0000                     _U2ERRIE	set	15842
  2545  0000                     _U2ERRIR	set	15841
  2546  0000                     _U2UIR	set	15840
  2547  0000                     _U2FIFO	set	15839
  2548  0000                     _U2BRGH	set	15838
  2549  0000                     _U2BRGL	set	15837
  2550  0000                     _U2CON2	set	15836
  2551  0000                     _U2CON1	set	15835
  2552  0000                     _U2CON0	set	15834
  2553  0000                     _U2P3L	set	15832
  2554  0000                     _U2P2L	set	15830
  2555  0000                     _U2P1L	set	15828
  2556  0000                     _U1RXB	set	15848
  2557  0000                     _U1ERRIE	set	15866
  2558  0000                     _U1ERRIR	set	15865
  2559  0000                     _U1UIR	set	15864
  2560  0000                     _U1FIFO	set	15863
  2561  0000                     _U1BRGH	set	15862
  2562  0000                     _U1BRGL	set	15861
  2563  0000                     _U1CON2	set	15860
  2564  0000                     _U1CON1	set	15859
  2565  0000                     _U1CON0	set	15858
  2566  0000                     _U1P3H	set	15857
  2567  0000                     _U1P3L	set	15856
  2568  0000                     _U1P2H	set	15855
  2569  0000                     _U1P2L	set	15854
  2570  0000                     _U1P1H	set	15853
  2571  0000                     _U1P1L	set	15852
  2572  0000                     _FVRCON	set	16065
  2573  0000                     _ADFLTRL	set	16102
  2574  0000                     _ADFLTRH	set	16103
  2575  0000                     _ADCON0bits	set	16120
  2576  0000                     _ADCON0	set	16120
  2577  0000                     _ADCLK	set	16127
  2578  0000                     _ADACT	set	16126
  2579  0000                     _ADREF	set	16125
  2580  0000                     _ADSTAT	set	16124
  2581  0000                     _ADCON3	set	16123
  2582  0000                     _ADCON2	set	16122
  2583  0000                     _ADCON1	set	16121
  2584  0000                     _ADPREH	set	16119
  2585  0000                     _ADPREL	set	16118
  2586  0000                     _ADCAP	set	16117
  2587  0000                     _ADACQH	set	16116
  2588  0000                     _ADACQL	set	16115
  2589  0000                     _ADPCH	set	16113
  2590  0000                     _ADRPT	set	16108
  2591  0000                     _ADACCU	set	16106
  2592  0000                     _ADSTPTH	set	16101
  2593  0000                     _ADSTPTL	set	16100
  2594  0000                     _ADUTHH	set	16097
  2595  0000                     _ADUTHL	set	16096
  2596  0000                     _ADLTHH	set	16095
  2597  0000                     _ADLTHL	set	16094
  2598  0000                     _CCPTMRS1bits	set	16223
  2599  0000                     _PORTDbits	set	16333
  2600  0000                     _PORTFbits	set	16335
  2601  0000                     _LATFbits	set	16319
  2602  0000                     _LATCbits	set	16316
  2603  0000                     _LATDbits	set	16317
  2604  0000                     _PORTBbits	set	16331
  2605  0000                     _T3CONbits	set	16294
  2606  0000                     _T3CON	set	16294
  2607  0000                     _TMR3L	set	16292
  2608  0000                     _TMR3H	set	16293
  2609  0000                     _T3CLK	set	16297
  2610  0000                     _T3GATE	set	16296
  2611  0000                     _T3GCON	set	16295
  2612  0000                     _T2CON	set	16300
  2613  0000                     _T2TMR	set	16298
  2614  0000                     _T2PR	set	16299
  2615  0000                     _T2RST	set	16303
  2616  0000                     _T2HLT	set	16301
  2617  0000                     _T2CLKCON	set	16302
  2618  0000                     _PWM8DCL	set	16224
  2619  0000                     _PWM8DCH	set	16225
  2620  0000                     _PWM8CON	set	16226
  2621  0000                     _LATEbits	set	16318
  2622  0000                     _T5CONbits	set	16282
  2623  0000                     _T5CON	set	16282
  2624  0000                     _TMR5L	set	16280
  2625  0000                     _TMR5H	set	16281
  2626  0000                     _T5CLK	set	16285
  2627  0000                     _T5GATE	set	16284
  2628  0000                     _T5GCON	set	16283
  2629  0000                     _T6CON	set	16276
  2630  0000                     _T6TMR	set	16274
  2631  0000                     _T6PR	set	16275
  2632  0000                     _T6RST	set	16279
  2633  0000                     _T6HLT	set	16277
  2634  0000                     _T6CLKCON	set	16278
  2635  0000                     _TRISD	set	16325
  2636  0000                     _TRISC	set	16324
  2637  0000                     _TRISB	set	16323
  2638  0000                     _TRISA	set	16322
  2639  0000                     _TRISF	set	16327
  2640  0000                     _TRISE	set	16326
  2641  0000                     _LATC	set	16316
  2642  0000                     _LATB	set	16315
  2643  0000                     _LATF	set	16319
  2644  0000                     _LATA	set	16314
  2645  0000                     _LATD	set	16317
  2646  0000                     _LATE	set	16318
  2647  0000                     _IVTLOCKbits	set	16340
  2648  0000                     _IVTLOCK	set	16340
  2649  0000                     _INTCON0bits	set	16338
  2650  0000                     _GIE	set	130711
  2651  00F963                     STR_103:
  2652                           
  2653                           ; BSR set to: 57
  2654  00F963  20                 	db	32
  2655  00F964  25                 	db	37
  2656  00F965  63                 	db	99	;'c'
  2657  00F966  20                 	db	32
  2658  00F967  2C                 	db	44
  2659  00F968  25                 	db	37
  2660  00F969  6C                 	db	108	;'l'
  2661  00F96A  75                 	db	117	;'u'
  2662  00F96B  2C                 	db	44
  2663  00F96C  25                 	db	37
  2664  00F96D  34                 	db	52	;'4'
  2665  00F96E  2E                 	db	46
  2666  00F96F  34                 	db	52	;'4'
  2667  00F970  66                 	db	102	;'f'
  2668  00F971  2C                 	db	44
  2669  00F972  25                 	db	37
  2670  00F973  34                 	db	52	;'4'
  2671  00F974  2E                 	db	46
  2672  00F975  34                 	db	52	;'4'
  2673  00F976  66                 	db	102	;'f'
  2674  00F977  2C                 	db	44
  2675  00F978  25                 	db	37
  2676  00F979  34                 	db	52	;'4'
  2677  00F97A  2E                 	db	46
  2678  00F97B  34                 	db	52	;'4'
  2679  00F97C  66                 	db	102	;'f'
  2680  00F97D  2C                 	db	44
  2681  00F97E  25                 	db	37
  2682  00F97F  34                 	db	52	;'4'
  2683  00F980  2E                 	db	46
  2684  00F981  34                 	db	52	;'4'
  2685  00F982  66                 	db	102	;'f'
  2686  00F983  2C                 	db	44
  2687  00F984  25                 	db	37
  2688  00F985  34                 	db	52	;'4'
  2689  00F986  2E                 	db	46
  2690  00F987  34                 	db	52	;'4'
  2691  00F988  66                 	db	102	;'f'
  2692  00F989  2C                 	db	44
  2693  00F98A  25                 	db	37
  2694  00F98B  34                 	db	52	;'4'
  2695  00F98C  2E                 	db	46
  2696  00F98D  33                 	db	51	;'3'
  2697  00F98E  66                 	db	102	;'f'
  2698  00F98F  2C                 	db	44
  2699  00F990  25                 	db	37
  2700  00F991  34                 	db	52	;'4'
  2701  00F992  2E                 	db	46
  2702  00F993  33                 	db	51	;'3'
  2703  00F994  66                 	db	102	;'f'
  2704  00F995  2C                 	db	44
  2705  00F996  25                 	db	37
  2706  00F997  34                 	db	52	;'4'
  2707  00F998  2E                 	db	46
  2708  00F999  33                 	db	51	;'3'
  2709  00F99A  66                 	db	102	;'f'
  2710  00F99B  2C                 	db	44
  2711  00F99C  25                 	db	37
  2712  00F99D  34                 	db	52	;'4'
  2713  00F99E  2E                 	db	46
  2714  00F99F  33                 	db	51	;'3'
  2715  00F9A0  66                 	db	102	;'f'
  2716  00F9A1  2C                 	db	44
  2717  00F9A2  25                 	db	37
  2718  00F9A3  34                 	db	52	;'4'
  2719  00F9A4  2E                 	db	46
  2720  00F9A5  33                 	db	51	;'3'
  2721  00F9A6  66                 	db	102	;'f'
  2722  00F9A7  2C                 	db	44
  2723  00F9A8  25                 	db	37
  2724  00F9A9  34                 	db	52	;'4'
  2725  00F9AA  2E                 	db	46
  2726  00F9AB  33                 	db	51	;'3'
  2727  00F9AC  66                 	db	102	;'f'
  2728  00F9AD  2C                 	db	44
  2729  00F9AE  25                 	db	37
  2730  00F9AF  64                 	db	100	;'d'
  2731  00F9B0  2C                 	db	44
  2732  00F9B1  25                 	db	37
  2733  00F9B2  64                 	db	100	;'d'
  2734  00F9B3  2C                 	db	44
  2735  00F9B4  25                 	db	37
  2736  00F9B5  32                 	db	50	;'2'
  2737  00F9B6  2E                 	db	46
  2738  00F9B7  36                 	db	54	;'6'
  2739  00F9B8  66                 	db	102	;'f'
  2740  00F9B9  2C                 	db	44
  2741  00F9BA  25                 	db	37
  2742  00F9BB  34                 	db	52	;'4'
  2743  00F9BC  2E                 	db	46
  2744  00F9BD  33                 	db	51	;'3'
  2745  00F9BE  66                 	db	102	;'f'
  2746  00F9BF  2C                 	db	44
  2747  00F9C0  25                 	db	37
  2748  00F9C1  64                 	db	100	;'d'
  2749  00F9C2  2C                 	db	44
  2750  00F9C3  25                 	db	37
  2751  00F9C4  64                 	db	100	;'d'
  2752  00F9C5  2C                 	db	44
  2753  00F9C6  25                 	db	37
  2754  00F9C7  6C                 	db	108	;'l'
  2755  00F9C8  75                 	db	117	;'u'
  2756  00F9C9  2C                 	db	44
  2757  00F9CA  25                 	db	37
  2758  00F9CB  6C                 	db	108	;'l'
  2759  00F9CC  75                 	db	117	;'u'
  2760  00F9CD  2C                 	db	44
  2761  00F9CE  25                 	db	37
  2762  00F9CF  34                 	db	52	;'4'
  2763  00F9D0  2E                 	db	46
  2764  00F9D1  33                 	db	51	;'3'
  2765  00F9D2  66                 	db	102	;'f'
  2766  00F9D3  2C                 	db	44
  2767  00F9D4  25                 	db	37
  2768  00F9D5  34                 	db	52	;'4'
  2769  00F9D6  2E                 	db	46
  2770  00F9D7  33                 	db	51	;'3'
  2771  00F9D8  66                 	db	102	;'f'
  2772  00F9D9  2C                 	db	44
  2773  00F9DA  25                 	db	37
  2774  00F9DB  34                 	db	52	;'4'
  2775  00F9DC  2E                 	db	46
  2776  00F9DD  33                 	db	51	;'3'
  2777  00F9DE  66                 	db	102	;'f'
  2778  00F9DF  0D                 	db	13
  2779  00F9E0  0A                 	db	10
  2780  00F9E1  00                 	db	0
  2781  00F9E2                     STR_141:
  2782                           
  2783                           ; BSR set to: 57
  2784  00F9E2  4A                 	db	74	;'J'
  2785  00F9E3  61                 	db	97	;'a'
  2786  00F9E4  6E                 	db	110	;'n'
  2787  00F9E5  46                 	db	70	;'F'
  2788  00F9E6  65                 	db	101	;'e'
  2789  00F9E7  62                 	db	98	;'b'
  2790  00F9E8  4D                 	db	77	;'M'
  2791  00F9E9  61                 	db	97	;'a'
  2792  00F9EA  72                 	db	114	;'r'
  2793  00F9EB  41                 	db	65	;'A'
  2794  00F9EC  70                 	db	112	;'p'
  2795  00F9ED  72                 	db	114	;'r'
  2796  00F9EE  4D                 	db	77	;'M'
  2797  00F9EF  61                 	db	97	;'a'
  2798  00F9F0  79                 	db	121	;'y'
  2799  00F9F1  4A                 	db	74	;'J'
  2800  00F9F2  75                 	db	117	;'u'
  2801  00F9F3  6E                 	db	110	;'n'
  2802  00F9F4  4A                 	db	74	;'J'
  2803  00F9F5  75                 	db	117	;'u'
  2804  00F9F6  6C                 	db	108	;'l'
  2805  00F9F7  41                 	db	65	;'A'
  2806  00F9F8  75                 	db	117	;'u'
  2807  00F9F9  67                 	db	103	;'g'
  2808  00F9FA  53                 	db	83	;'S'
  2809  00F9FB  65                 	db	101	;'e'
  2810  00F9FC  70                 	db	112	;'p'
  2811  00F9FD  4F                 	db	79	;'O'
  2812  00F9FE  63                 	db	99	;'c'
  2813  00F9FF  74                 	db	116	;'t'
  2814  00FA00  4E                 	db	78	;'N'
  2815  00FA01  6F                 	db	111	;'o'
  2816  00FA02  76                 	db	118	;'v'
  2817  00FA03  44                 	db	68	;'D'
  2818  00FA04  65                 	db	101	;'e'
  2819  00FA05  63                 	db	99	;'c'
  2820  00FA06  00                 	db	0
  2821  00FA07                     STR_45:
  2822                           
  2823                           ; BSR set to: 57
  2824  00FA07  53                 	db	83	;'S'
  2825  00FA08  25                 	db	37
  2826  00FA09  63                 	db	99	;'c'
  2827  00FA0A  43                 	db	67	;'C'
  2828  00FA0B  20                 	db	32
  2829  00FA0C  25                 	db	37
  2830  00FA0D  64                 	db	100	;'d'
  2831  00FA0E  20                 	db	32
  2832  00FA0F  52                 	db	82	;'R'
  2833  00FA10  55                 	db	85	;'U'
  2834  00FA11  4E                 	db	78	;'N'
  2835  00FA12  20                 	db	32
  2836  00FA13  25                 	db	37
  2837  00FA14  64                 	db	100	;'d'
  2838  00FA15  20                 	db	32
  2839  00FA16  56                 	db	86	;'V'
  2840  00FA17  25                 	db	37
  2841  00FA18  32                 	db	50	;'2'
  2842  00FA19  2E                 	db	46
  2843  00FA1A  32                 	db	50	;'2'
  2844  00FA1B  66                 	db	102	;'f'
  2845  00FA1C  20                 	db	32
  2846  00FA1D  20                 	db	32
  2847  00FA1E  20                 	db	32
  2848  00FA1F  20                 	db	32
  2849  00FA20  20                 	db	32
  2850  00FA21  20                 	db	32
  2851  00FA22  20                 	db	32
  2852  00FA23  20                 	db	32
  2853  00FA24  00                 	db	0
  2854  00FA25                     STR_78:
  2855                           
  2856                           ; BSR set to: 57
  2857  00FA25  25                 	db	37
  2858  00FA26  64                 	db	100	;'d'
  2859  00FA27  20                 	db	32
  2860  00FA28  25                 	db	37
  2861  00FA29  64                 	db	100	;'d'
  2862  00FA2A  20                 	db	32
  2863  00FA2B  25                 	db	37
  2864  00FA2C  64                 	db	100	;'d'
  2865  00FA2D  20                 	db	32
  2866  00FA2E  25                 	db	37
  2867  00FA2F  64                 	db	100	;'d'
  2868  00FA30  20                 	db	32
  2869  00FA31  20                 	db	32
  2870  00FA32  20                 	db	32
  2871  00FA33  20                 	db	32
  2872  00FA34  20                 	db	32
  2873  00FA35  20                 	db	32
  2874  00FA36  20                 	db	32
  2875  00FA37  20                 	db	32
  2876  00FA38  20                 	db	32
  2877  00FA39  20                 	db	32
  2878  00FA3A  20                 	db	32
  2879  00FA3B  20                 	db	32
  2880  00FA3C  20                 	db	32
  2881  00FA3D  20                 	db	32
  2882  00FA3E  20                 	db	32
  2883  00FA3F  20                 	db	32
  2884  00FA40  00                 	db	0
  2885  00FA41                     STR_22:
  2886                           
  2887                           ; BSR set to: 57
  2888  00FA41  52                 	db	82	;'R'
  2889  00FA42  31                 	db	49	;'1'
  2890  00FA43  20                 	db	32
  2891  00FA44  25                 	db	37
  2892  00FA45  32                 	db	50	;'2'
  2893  00FA46  2E                 	db	46
  2894  00FA47  33                 	db	51	;'3'
  2895  00FA48  66                 	db	102	;'f'
  2896  00FA49  20                 	db	32
  2897  00FA4A  25                 	db	37
  2898  00FA4B  33                 	db	51	;'3'
  2899  00FA4C  2E                 	db	46
  2900  00FA4D  34                 	db	52	;'4'
  2901  00FA4E  66                 	db	102	;'f'
  2902  00FA4F  20                 	db	32
  2903  00FA50  20                 	db	32
  2904  00FA51  20                 	db	32
  2905  00FA52  20                 	db	32
  2906  00FA53  20                 	db	32
  2907  00FA54  20                 	db	32
  2908  00FA55  20                 	db	32
  2909  00FA56  20                 	db	32
  2910  00FA57  20                 	db	32
  2911  00FA58  20                 	db	32
  2912  00FA59  20                 	db	32
  2913  00FA5A  20                 	db	32
  2914  00FA5B  00                 	db	0
  2915  00FA5C                     STR_23:
  2916                           
  2917                           ; BSR set to: 57
  2918  00FA5C  52                 	db	82	;'R'
  2919  00FA5D  32                 	db	50	;'2'
  2920  00FA5E  20                 	db	32
  2921  00FA5F  25                 	db	37
  2922  00FA60  32                 	db	50	;'2'
  2923  00FA61  2E                 	db	46
  2924  00FA62  33                 	db	51	;'3'
  2925  00FA63  66                 	db	102	;'f'
  2926  00FA64  20                 	db	32
  2927  00FA65  25                 	db	37
  2928  00FA66  33                 	db	51	;'3'
  2929  00FA67  2E                 	db	46
  2930  00FA68  34                 	db	52	;'4'
  2931  00FA69  66                 	db	102	;'f'
  2932  00FA6A  20                 	db	32
  2933  00FA6B  20                 	db	32
  2934  00FA6C  20                 	db	32
  2935  00FA6D  20                 	db	32
  2936  00FA6E  20                 	db	32
  2937  00FA6F  20                 	db	32
  2938  00FA70  20                 	db	32
  2939  00FA71  20                 	db	32
  2940  00FA72  20                 	db	32
  2941  00FA73  20                 	db	32
  2942  00FA74  20                 	db	32
  2943  00FA75  20                 	db	32
  2944  00FA76  00                 	db	0
  2945  00FA77                     
  2946                           ; BSR set to: 57
  2947  00FA77  20                 	db	32
  2948  00FA78  4D                 	db	77	;'M'
  2949  00FA79  65                 	db	101	;'e'
  2950  00FA7A  73                 	db	115	;'s'
  2951  00FA7B  67                 	db	103	;'g'
  2952  00FA7C  20                 	db	32
  2953  00FA7D  25                 	db	37
  2954  00FA7E  64                 	db	100	;'d'
  2955  00FA7F  20                 	db	32
  2956  00FA80  53                 	db	83	;'S'
  2957  00FA81  74                 	db	116	;'t'
  2958  00FA82  61                 	db	97	;'a'
  2959  00FA83  63                 	db	99	;'c'
  2960  00FA84  6B                 	db	107	;'k'
  2961  00FA85  20                 	db	32
  2962  00FA86  25                 	db	37
  2963  00FA87  64                 	db	100	;'d'
  2964  00FA88  20                 	db	32
  2965  00FA89  20                 	db	32
  2966  00FA8A  20                 	db	32
  2967  00FA8B  20                 	db	32
  2968  00FA8C  20                 	db	32
  2969  00FA8D  20                 	db	32
  2970  00FA8E  20                 	db	32
  2971  00FA8F  20                 	db	32
  2972  00FA90  00                 	db	0
  2973  00FA91                     STR_13:
  2974                           
  2975                           ; BSR set to: 57
  2976  00FA91  53                 	db	83	;'S'
  2977  00FA92  20                 	db	32
  2978  00FA93  53                 	db	83	;'S'
  2979  00FA94  25                 	db	37
  2980  00FA95  63                 	db	99	;'c'
  2981  00FA96  43                 	db	67	;'C'
  2982  00FA97  20                 	db	32
  2983  00FA98  25                 	db	37
  2984  00FA99  64                 	db	100	;'d'
  2985  00FA9A  20                 	db	32
  2986  00FA9B  25                 	db	37
  2987  00FA9C  32                 	db	50	;'2'
  2988  00FA9D  2E                 	db	46
  2989  00FA9E  34                 	db	52	;'4'
  2990  00FA9F  66                 	db	102	;'f'
  2991  00FAA0  20                 	db	32
  2992  00FAA1  20                 	db	32
  2993  00FAA2  20                 	db	32
  2994  00FAA3  20                 	db	32
  2995  00FAA4  20                 	db	32
  2996  00FAA5  20                 	db	32
  2997  00FAA6  20                 	db	32
  2998  00FAA7  20                 	db	32
  2999  00FAA8  20                 	db	32
  3000  00FAA9  20                 	db	32
  3001  00FAAA  00                 	db	0
  3002  00FAAB                     STR_46:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FAAB  45                 	db	69	;'E'
  3006  00FAAC  53                 	db	83	;'S'
  3007  00FAAD  52                 	db	82	;'R'
  3008  00FAAE  20                 	db	32
  3009  00FAAF  20                 	db	32
  3010  00FAB0  25                 	db	37
  3011  00FAB1  32                 	db	50	;'2'
  3012  00FAB2  2E                 	db	46
  3013  00FAB3  36                 	db	54	;'6'
  3014  00FAB4  66                 	db	102	;'f'
  3015  00FAB5  20                 	db	32
  3016  00FAB6  20                 	db	32
  3017  00FAB7  20                 	db	32
  3018  00FAB8  20                 	db	32
  3019  00FAB9  20                 	db	32
  3020  00FABA  20                 	db	32
  3021  00FABB  20                 	db	32
  3022  00FABC  20                 	db	32
  3023  00FABD  20                 	db	32
  3024  00FABE  20                 	db	32
  3025  00FABF  20                 	db	32
  3026  00FAC0  20                 	db	32
  3027  00FAC1  20                 	db	32
  3028  00FAC2  00                 	db	0
  3029  00FAC3                     STR_43:
  3030                           
  3031                           ; BSR set to: 57
  3032  00FAC3  42                 	db	66	;'B'
  3033  00FAC4  41                 	db	65	;'A'
  3034  00FAC5  54                 	db	84	;'T'
  3035  00FAC6  54                 	db	84	;'T'
  3036  00FAC7  20                 	db	32
  3037  00FAC8  50                 	db	80	;'P'
  3038  00FAC9  57                 	db	87	;'W'
  3039  00FACA  52                 	db	82	;'R'
  3040  00FACB  20                 	db	32
  3041  00FACC  25                 	db	37
  3042  00FACD  33                 	db	51	;'3'
  3043  00FACE  2E                 	db	46
  3044  00FACF  32                 	db	50	;'2'
  3045  00FAD0  66                 	db	102	;'f'
  3046  00FAD1  20                 	db	32
  3047  00FAD2  20                 	db	32
  3048  00FAD3  20                 	db	32
  3049  00FAD4  20                 	db	32
  3050  00FAD5  20                 	db	32
  3051  00FAD6  20                 	db	32
  3052  00FAD7  20                 	db	32
  3053  00FAD8  20                 	db	32
  3054  00FAD9  20                 	db	32
  3055  00FADA  00                 	db	0
  3056  00FADB                     STR_47:
  3057                           
  3058                           ; BSR set to: 57
  3059  00FADB  52                 	db	82	;'R'
  3060  00FADC  31                 	db	49	;'1'
  3061  00FADD  20                 	db	32
  3062  00FADE  25                 	db	37
  3063  00FADF  32                 	db	50	;'2'
  3064  00FAE0  2E                 	db	46
  3065  00FAE1  33                 	db	51	;'3'
  3066  00FAE2  66                 	db	102	;'f'
  3067  00FAE3  20                 	db	32
  3068  00FAE4  25                 	db	37
  3069  00FAE5  33                 	db	51	;'3'
  3070  00FAE6  2E                 	db	46
  3071  00FAE7  34                 	db	52	;'4'
  3072  00FAE8  66                 	db	102	;'f'
  3073  00FAE9  20                 	db	32
  3074  00FAEA  20                 	db	32
  3075  00FAEB  20                 	db	32
  3076  00FAEC  20                 	db	32
  3077  00FAED  20                 	db	32
  3078  00FAEE  20                 	db	32
  3079  00FAEF  20                 	db	32
  3080  00FAF0  20                 	db	32
  3081  00FAF1  20                 	db	32
  3082  00FAF2  00                 	db	0
  3083  00FAF3                     STR_48:
  3084                           
  3085                           ; BSR set to: 57
  3086  00FAF3  52                 	db	82	;'R'
  3087  00FAF4  32                 	db	50	;'2'
  3088  00FAF5  20                 	db	32
  3089  00FAF6  25                 	db	37
  3090  00FAF7  32                 	db	50	;'2'
  3091  00FAF8  2E                 	db	46
  3092  00FAF9  33                 	db	51	;'3'
  3093  00FAFA  66                 	db	102	;'f'
  3094  00FAFB  20                 	db	32
  3095  00FAFC  25                 	db	37
  3096  00FAFD  33                 	db	51	;'3'
  3097  00FAFE  2E                 	db	46
  3098  00FAFF  34                 	db	52	;'4'
  3099  00FB00  66                 	db	102	;'f'
  3100  00FB01  20                 	db	32
  3101  00FB02  20                 	db	32
  3102  00FB03  20                 	db	32
  3103  00FB04  20                 	db	32
  3104  00FB05  20                 	db	32
  3105  00FB06  20                 	db	32
  3106  00FB07  20                 	db	32
  3107  00FB08  20                 	db	32
  3108  00FB09  20                 	db	32
  3109  00FB0A  00                 	db	0
  3110  00FB0B                     STR_44:
  3111                           
  3112                           ; BSR set to: 57
  3113  00FB0B  42                 	db	66	;'B'
  3114  00FB0C  41                 	db	65	;'A'
  3115  00FB0D  48                 	db	72	;'H'
  3116  00FB0E  20                 	db	32
  3117  00FB0F  25                 	db	37
  3118  00FB10  33                 	db	51	;'3'
  3119  00FB11  2E                 	db	46
  3120  00FB12  32                 	db	50	;'2'
  3121  00FB13  66                 	db	102	;'f'
  3122  00FB14  20                 	db	32
  3123  00FB15  50                 	db	80	;'P'
  3124  00FB16  25                 	db	37
  3125  00FB17  33                 	db	51	;'3'
  3126  00FB18  2E                 	db	46
  3127  00FB19  32                 	db	50	;'2'
  3128  00FB1A  66                 	db	102	;'f'
  3129  00FB1B  20                 	db	32
  3130  00FB1C  20                 	db	32
  3131  00FB1D  20                 	db	32
  3132  00FB1E  20                 	db	32
  3133  00FB1F  20                 	db	32
  3134  00FB20  20                 	db	32
  3135  00FB21  20                 	db	32
  3136  00FB22  00                 	db	0
  3137  00FB23                     STR_16:
  3138                           
  3139                           ; BSR set to: 57
  3140  00FB23  20                 	db	32
  3141  00FB24  20                 	db	32
  3142  00FB25  20                 	db	32
  3143  00FB26  20                 	db	32
  3144  00FB27  20                 	db	32
  3145  00FB28  20                 	db	32
  3146  00FB29  20                 	db	32
  3147  00FB2A  20                 	db	32
  3148  00FB2B  20                 	db	32
  3149  00FB2C  20                 	db	32
  3150  00FB2D  20                 	db	32
  3151  00FB2E  20                 	db	32
  3152  00FB2F  20                 	db	32
  3153  00FB30  20                 	db	32
  3154  00FB31  20                 	db	32
  3155  00FB32  20                 	db	32
  3156  00FB33  20                 	db	32
  3157  00FB34  20                 	db	32
  3158  00FB35  20                 	db	32
  3159  00FB36  20                 	db	32
  3160  00FB37  20                 	db	32
  3161  00FB38  20                 	db	32
  3162  00FB39  00                 	db	0
  3163  00FB3A                     STR_21:
  3164                           
  3165                           ; BSR set to: 57
  3166  00FB3A  45                 	db	69	;'E'
  3167  00FB3B  53                 	db	83	;'S'
  3168  00FB3C  52                 	db	82	;'R'
  3169  00FB3D  20                 	db	32
  3170  00FB3E  20                 	db	32
  3171  00FB3F  25                 	db	37
  3172  00FB40  32                 	db	50	;'2'
  3173  00FB41  2E                 	db	46
  3174  00FB42  36                 	db	54	;'6'
  3175  00FB43  66                 	db	102	;'f'
  3176  00FB44  20                 	db	32
  3177  00FB45  20                 	db	32
  3178  00FB46  20                 	db	32
  3179  00FB47  20                 	db	32
  3180  00FB48  20                 	db	32
  3181  00FB49  20                 	db	32
  3182  00FB4A  20                 	db	32
  3183  00FB4B  20                 	db	32
  3184  00FB4C  20                 	db	32
  3185  00FB4D  20                 	db	32
  3186  00FB4E  20                 	db	32
  3187  00FB4F  20                 	db	32
  3188  00FB50  00                 	db	0
  3189  00FB51                     STR_14:
  3190                           
  3191                           ; BSR set to: 57
  3192  00FB51  53                 	db	83	;'S'
  3193  00FB52  74                 	db	116	;'t'
  3194  00FB53  61                 	db	97	;'a'
  3195  00FB54  74                 	db	116	;'t'
  3196  00FB55  69                 	db	105	;'i'
  3197  00FB56  63                 	db	99	;'c'
  3198  00FB57  20                 	db	32
  3199  00FB58  53                 	db	83	;'S'
  3200  00FB59  4F                 	db	79	;'O'
  3201  00FB5A  43                 	db	67	;'C'
  3202  00FB5B  20                 	db	32
  3203  00FB5C  25                 	db	37
  3204  00FB5D  64                 	db	100	;'d'
  3205  00FB5E  20                 	db	32
  3206  00FB5F  20                 	db	32
  3207  00FB60  20                 	db	32
  3208  00FB61  20                 	db	32
  3209  00FB62  20                 	db	32
  3210  00FB63  20                 	db	32
  3211  00FB64  20                 	db	32
  3212  00FB65  20                 	db	32
  3213  00FB66  20                 	db	32
  3214  00FB67  00                 	db	0
  3215  00FB68                     STR_40:
  3216                           
  3217                           ; BSR set to: 57
  3218  00FB68  42                 	db	66	;'B'
  3219  00FB69  41                 	db	65	;'A'
  3220  00FB6A  54                 	db	84	;'T'
  3221  00FB6B  20                 	db	32
  3222  00FB6C  49                 	db	73	;'I'
  3223  00FB6D  57                 	db	87	;'W'
  3224  00FB6E  48                 	db	72	;'H'
  3225  00FB6F  20                 	db	32
  3226  00FB70  25                 	db	37
  3227  00FB71  34                 	db	52	;'4'
  3228  00FB72  2E                 	db	46
  3229  00FB73  31                 	db	49	;'1'
  3230  00FB74  66                 	db	102	;'f'
  3231  00FB75  20                 	db	32
  3232  00FB76  20                 	db	32
  3233  00FB77  20                 	db	32
  3234  00FB78  20                 	db	32
  3235  00FB79  20                 	db	32
  3236  00FB7A  20                 	db	32
  3237  00FB7B  20                 	db	32
  3238  00FB7C  20                 	db	32
  3239  00FB7D  20                 	db	32
  3240  00FB7E  00                 	db	0
  3241  00FB7F                     STR_41:
  3242                           
  3243                           ; BSR set to: 57
  3244  00FB7F  42                 	db	66	;'B'
  3245  00FB80  41                 	db	65	;'A'
  3246  00FB81  54                 	db	84	;'T'
  3247  00FB82  20                 	db	32
  3248  00FB83  4F                 	db	79	;'O'
  3249  00FB84  57                 	db	87	;'W'
  3250  00FB85  48                 	db	72	;'H'
  3251  00FB86  20                 	db	32
  3252  00FB87  25                 	db	37
  3253  00FB88  34                 	db	52	;'4'
  3254  00FB89  2E                 	db	46
  3255  00FB8A  31                 	db	49	;'1'
  3256  00FB8B  66                 	db	102	;'f'
  3257  00FB8C  20                 	db	32
  3258  00FB8D  20                 	db	32
  3259  00FB8E  20                 	db	32
  3260  00FB8F  20                 	db	32
  3261  00FB90  20                 	db	32
  3262  00FB91  20                 	db	32
  3263  00FB92  20                 	db	32
  3264  00FB93  20                 	db	32
  3265  00FB94  20                 	db	32
  3266  00FB95  00                 	db	0
  3267  00FB96                     STR_42:
  3268                           
  3269                           ; BSR set to: 57
  3270  00FB96  42                 	db	66	;'B'
  3271  00FB97  41                 	db	65	;'A'
  3272  00FB98  54                 	db	84	;'T'
  3273  00FB99  20                 	db	32
  3274  00FB9A  54                 	db	84	;'T'
  3275  00FB9B  57                 	db	87	;'W'
  3276  00FB9C  48                 	db	72	;'H'
  3277  00FB9D  20                 	db	32
  3278  00FB9E  25                 	db	37
  3279  00FB9F  34                 	db	52	;'4'
  3280  00FBA0  2E                 	db	46
  3281  00FBA1  31                 	db	49	;'1'
  3282  00FBA2  66                 	db	102	;'f'
  3283  00FBA3  20                 	db	32
  3284  00FBA4  20                 	db	32
  3285  00FBA5  20                 	db	32
  3286  00FBA6  20                 	db	32
  3287  00FBA7  20                 	db	32
  3288  00FBA8  20                 	db	32
  3289  00FBA9  20                 	db	32
  3290  00FBAA  20                 	db	32
  3291  00FBAB  20                 	db	32
  3292  00FBAC  00                 	db	0
  3293  00FBAD                     STR_36:
  3294                           
  3295                           ; BSR set to: 57
  3296  00FBAD  49                 	db	73	;'I'
  3297  00FBAE  4E                 	db	78	;'N'
  3298  00FBAF  56                 	db	86	;'V'
  3299  00FBB0  20                 	db	32
  3300  00FBB1  20                 	db	32
  3301  00FBB2  57                 	db	87	;'W'
  3302  00FBB3  48                 	db	72	;'H'
  3303  00FBB4  20                 	db	32
  3304  00FBB5  25                 	db	37
  3305  00FBB6  33                 	db	51	;'3'
  3306  00FBB7  2E                 	db	46
  3307  00FBB8  32                 	db	50	;'2'
  3308  00FBB9  66                 	db	102	;'f'
  3309  00FBBA  20                 	db	32
  3310  00FBBB  20                 	db	32
  3311  00FBBC  20                 	db	32
  3312  00FBBD  20                 	db	32
  3313  00FBBE  20                 	db	32
  3314  00FBBF  20                 	db	32
  3315  00FBC0  20                 	db	32
  3316  00FBC1  20                 	db	32
  3317  00FBC2  20                 	db	32
  3318  00FBC3  00                 	db	0
  3319  00FBC4                     STR_35:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FBC4  4C                 	db	76	;'L'
  3323  00FBC5  4F                 	db	79	;'O'
  3324  00FBC6  41                 	db	65	;'A'
  3325  00FBC7  44                 	db	68	;'D'
  3326  00FBC8  20                 	db	32
  3327  00FBC9  57                 	db	87	;'W'
  3328  00FBCA  48                 	db	72	;'H'
  3329  00FBCB  20                 	db	32
  3330  00FBCC  25                 	db	37
  3331  00FBCD  33                 	db	51	;'3'
  3332  00FBCE  2E                 	db	46
  3333  00FBCF  32                 	db	50	;'2'
  3334  00FBD0  66                 	db	102	;'f'
  3335  00FBD1  20                 	db	32
  3336  00FBD2  20                 	db	32
  3337  00FBD3  20                 	db	32
  3338  00FBD4  20                 	db	32
  3339  00FBD5  20                 	db	32
  3340  00FBD6  20                 	db	32
  3341  00FBD7  20                 	db	32
  3342  00FBD8  20                 	db	32
  3343  00FBD9  20                 	db	32
  3344  00FBDA  00                 	db	0
  3345  00FBDB                     STR_34:
  3346                           
  3347                           ; BSR set to: 57
  3348  00FBDB  50                 	db	80	;'P'
  3349  00FBDC  56                 	db	86	;'V'
  3350  00FBDD  20                 	db	32
  3351  00FBDE  25                 	db	37
  3352  00FBDF  63                 	db	99	;'c'
  3353  00FBE0  20                 	db	32
  3354  00FBE1  57                 	db	87	;'W'
  3355  00FBE2  48                 	db	72	;'H'
  3356  00FBE3  20                 	db	32
  3357  00FBE4  25                 	db	37
  3358  00FBE5  33                 	db	51	;'3'
  3359  00FBE6  2E                 	db	46
  3360  00FBE7  32                 	db	50	;'2'
  3361  00FBE8  66                 	db	102	;'f'
  3362  00FBE9  20                 	db	32
  3363  00FBEA  20                 	db	32
  3364  00FBEB  20                 	db	32
  3365  00FBEC  20                 	db	32
  3366  00FBED  20                 	db	32
  3367  00FBEE  20                 	db	32
  3368  00FBEF  20                 	db	32
  3369  00FBF0  20                 	db	32
  3370  00FBF1  00                 	db	0
  3371  00FBF2                     STR_33:
  3372                           
  3373                           ; BSR set to: 57
  3374  00FBF2  49                 	db	73	;'I'
  3375  00FBF3  4E                 	db	78	;'N'
  3376  00FBF4  56                 	db	86	;'V'
  3377  00FBF5  20                 	db	32
  3378  00FBF6  20                 	db	32
  3379  00FBF7  50                 	db	80	;'P'
  3380  00FBF8  57                 	db	87	;'W'
  3381  00FBF9  52                 	db	82	;'R'
  3382  00FBFA  20                 	db	32
  3383  00FBFB  25                 	db	37
  3384  00FBFC  33                 	db	51	;'3'
  3385  00FBFD  2E                 	db	46
  3386  00FBFE  32                 	db	50	;'2'
  3387  00FBFF  66                 	db	102	;'f'
  3388  00FC00  20                 	db	32
  3389  00FC01  20                 	db	32
  3390  00FC02  20                 	db	32
  3391  00FC03  20                 	db	32
  3392  00FC04  20                 	db	32
  3393  00FC05  20                 	db	32
  3394  00FC06  20                 	db	32
  3395  00FC07  20                 	db	32
  3396  00FC08  00                 	db	0
  3397  00FC09                     STR_32:
  3398                           
  3399                           ; BSR set to: 57
  3400  00FC09  4C                 	db	76	;'L'
  3401  00FC0A  4F                 	db	79	;'O'
  3402  00FC0B  41                 	db	65	;'A'
  3403  00FC0C  44                 	db	68	;'D'
  3404  00FC0D  20                 	db	32
  3405  00FC0E  50                 	db	80	;'P'
  3406  00FC0F  57                 	db	87	;'W'
  3407  00FC10  52                 	db	82	;'R'
  3408  00FC11  20                 	db	32
  3409  00FC12  25                 	db	37
  3410  00FC13  33                 	db	51	;'3'
  3411  00FC14  2E                 	db	46
  3412  00FC15  32                 	db	50	;'2'
  3413  00FC16  66                 	db	102	;'f'
  3414  00FC17  20                 	db	32
  3415  00FC18  20                 	db	32
  3416  00FC19  20                 	db	32
  3417  00FC1A  20                 	db	32
  3418  00FC1B  20                 	db	32
  3419  00FC1C  20                 	db	32
  3420  00FC1D  20                 	db	32
  3421  00FC1E  20                 	db	32
  3422  00FC1F  00                 	db	0
  3423  00FC20                     STR_31:
  3424                           
  3425                           ; BSR set to: 57
  3426  00FC20  50                 	db	80	;'P'
  3427  00FC21  56                 	db	86	;'V'
  3428  00FC22  20                 	db	32
  3429  00FC23  25                 	db	37
  3430  00FC24  63                 	db	99	;'c'
  3431  00FC25  20                 	db	32
  3432  00FC26  50                 	db	80	;'P'
  3433  00FC27  57                 	db	87	;'W'
  3434  00FC28  52                 	db	82	;'R'
  3435  00FC29  20                 	db	32
  3436  00FC2A  25                 	db	37
  3437  00FC2B  33                 	db	51	;'3'
  3438  00FC2C  2E                 	db	46
  3439  00FC2D  32                 	db	50	;'2'
  3440  00FC2E  66                 	db	102	;'f'
  3441  00FC2F  20                 	db	32
  3442  00FC30  20                 	db	32
  3443  00FC31  20                 	db	32
  3444  00FC32  20                 	db	32
  3445  00FC33  20                 	db	32
  3446  00FC34  20                 	db	32
  3447  00FC35  20                 	db	32
  3448  00FC36  00                 	db	0
  3449  00FC37                     STR_15:
  3450                           
  3451                           ; BSR set to: 57
  3452  00FC37  42                 	db	66	;'B'
  3453  00FC38  61                 	db	97	;'a'
  3454  00FC39  74                 	db	116	;'t'
  3455  00FC3A  74                 	db	116	;'t'
  3456  00FC3B  65                 	db	101	;'e'
  3457  00FC3C  72                 	db	114	;'r'
  3458  00FC3D  79                 	db	121	;'y'
  3459  00FC3E  20                 	db	32
  3460  00FC3F  41                 	db	65	;'A'
  3461  00FC40  68                 	db	104	;'h'
  3462  00FC41  20                 	db	32
  3463  00FC42  25                 	db	37
  3464  00FC43  33                 	db	51	;'3'
  3465  00FC44  2E                 	db	46
  3466  00FC45  32                 	db	50	;'2'
  3467  00FC46  66                 	db	102	;'f'
  3468  00FC47  20                 	db	32
  3469  00FC48  20                 	db	32
  3470  00FC49  20                 	db	32
  3471  00FC4A  20                 	db	32
  3472  00FC4B  20                 	db	32
  3473  00FC4C  20                 	db	32
  3474  00FC4D  00                 	db	0
  3475  00FC4E                     STR_38:
  3476                           
  3477                           ; BSR set to: 57
  3478  00FC4E  42                 	db	66	;'B'
  3479  00FC4F  56                 	db	86	;'V'
  3480  00FC50  20                 	db	32
  3481  00FC51  25                 	db	37
  3482  00FC52  32                 	db	50	;'2'
  3483  00FC53  2E                 	db	46
  3484  00FC54  32                 	db	50	;'2'
  3485  00FC55  66                 	db	102	;'f'
  3486  00FC56  20                 	db	32
  3487  00FC57  42                 	db	66	;'B'
  3488  00FC58  41                 	db	65	;'A'
  3489  00FC59  20                 	db	32
  3490  00FC5A  25                 	db	37
  3491  00FC5B  32                 	db	50	;'2'
  3492  00FC5C  2E                 	db	46
  3493  00FC5D  32                 	db	50	;'2'
  3494  00FC5E  66                 	db	102	;'f'
  3495  00FC5F  20                 	db	32
  3496  00FC60  20                 	db	32
  3497  00FC61  20                 	db	32
  3498  00FC62  20                 	db	32
  3499  00FC63  20                 	db	32
  3500  00FC64  00                 	db	0
  3501  00FC65                     STR_39:
  3502                           
  3503                           ; BSR set to: 57
  3504  00FC65  43                 	db	67	;'C'
  3505  00FC66  56                 	db	86	;'V'
  3506  00FC67  20                 	db	32
  3507  00FC68  25                 	db	37
  3508  00FC69  32                 	db	50	;'2'
  3509  00FC6A  2E                 	db	46
  3510  00FC6B  32                 	db	50	;'2'
  3511  00FC6C  66                 	db	102	;'f'
  3512  00FC6D  20                 	db	32
  3513  00FC6E  4C                 	db	76	;'L'
  3514  00FC6F  41                 	db	65	;'A'
  3515  00FC70  20                 	db	32
  3516  00FC71  25                 	db	37
  3517  00FC72  32                 	db	50	;'2'
  3518  00FC73  2E                 	db	46
  3519  00FC74  32                 	db	50	;'2'
  3520  00FC75  66                 	db	102	;'f'
  3521  00FC76  20                 	db	32
  3522  00FC77  20                 	db	32
  3523  00FC78  20                 	db	32
  3524  00FC79  20                 	db	32
  3525  00FC7A  20                 	db	32
  3526  00FC7B  00                 	db	0
  3527  00FC7C                     STR_37:
  3528                           
  3529                           ; BSR set to: 57
  3530  00FC7C  50                 	db	80	;'P'
  3531  00FC7D  56                 	db	86	;'V'
  3532  00FC7E  20                 	db	32
  3533  00FC7F  25                 	db	37
  3534  00FC80  32                 	db	50	;'2'
  3535  00FC81  2E                 	db	46
  3536  00FC82  32                 	db	50	;'2'
  3537  00FC83  66                 	db	102	;'f'
  3538  00FC84  20                 	db	32
  3539  00FC85  50                 	db	80	;'P'
  3540  00FC86  41                 	db	65	;'A'
  3541  00FC87  20                 	db	32
  3542  00FC88  25                 	db	37
  3543  00FC89  32                 	db	50	;'2'
  3544  00FC8A  2E                 	db	46
  3545  00FC8B  32                 	db	50	;'2'
  3546  00FC8C  66                 	db	102	;'f'
  3547  00FC8D  20                 	db	32
  3548  00FC8E  20                 	db	32
  3549  00FC8F  20                 	db	32
  3550  00FC90  20                 	db	32
  3551  00FC91  20                 	db	32
  3552  00FC92  00                 	db	0
  3553  00FC93                     STR_140:
  3554                           
  3555                           ; BSR set to: 57
  3556  00FC93  53                 	db	83	;'S'
  3557  00FC94  75                 	db	117	;'u'
  3558  00FC95  6E                 	db	110	;'n'
  3559  00FC96  4D                 	db	77	;'M'
  3560  00FC97  6F                 	db	111	;'o'
  3561  00FC98  6E                 	db	110	;'n'
  3562  00FC99  54                 	db	84	;'T'
  3563  00FC9A  75                 	db	117	;'u'
  3564  00FC9B  65                 	db	101	;'e'
  3565  00FC9C  57                 	db	87	;'W'
  3566  00FC9D  65                 	db	101	;'e'
  3567  00FC9E  64                 	db	100	;'d'
  3568  00FC9F  54                 	db	84	;'T'
  3569  00FCA0  68                 	db	104	;'h'
  3570  00FCA1  75                 	db	117	;'u'
  3571  00FCA2  46                 	db	70	;'F'
  3572  00FCA3  72                 	db	114	;'r'
  3573  00FCA4  69                 	db	105	;'i'
  3574  00FCA5  53                 	db	83	;'S'
  3575  00FCA6  61                 	db	97	;'a'
  3576  00FCA7  74                 	db	116	;'t'
  3577  00FCA8  00                 	db	0
  3578  00FCA9                     STR_57:
  3579                           
  3580                           ; BSR set to: 57
  3581  00FCA9  20                 	db	32
  3582  00FCAA  25                 	db	37
  3583  00FCAB  64                 	db	100	;'d'
  3584  00FCAC  20                 	db	32
  3585  00FCAD  25                 	db	37
  3586  00FCAE  64                 	db	100	;'d'
  3587  00FCAF  20                 	db	32
  3588  00FCB0  20                 	db	32
  3589  00FCB1  20                 	db	32
  3590  00FCB2  20                 	db	32
  3591  00FCB3  20                 	db	32
  3592  00FCB4  20                 	db	32
  3593  00FCB5  20                 	db	32
  3594  00FCB6  20                 	db	32
  3595  00FCB7  20                 	db	32
  3596  00FCB8  20                 	db	32
  3597  00FCB9  20                 	db	32
  3598  00FCBA  20                 	db	32
  3599  00FCBB  20                 	db	32
  3600  00FCBC  20                 	db	32
  3601  00FCBD  20                 	db	32
  3602  00FCBE  00                 	db	0
  3603  00FCBF                     STR_73:
  3604                           
  3605                           ; BSR set to: 57
  3606  00FCBF  20                 	db	32
  3607  00FCC0  25                 	db	37
  3608  00FCC1  66                 	db	102	;'f'
  3609  00FCC2  20                 	db	32
  3610  00FCC3  25                 	db	37
  3611  00FCC4  66                 	db	102	;'f'
  3612  00FCC5  20                 	db	32
  3613  00FCC6  20                 	db	32
  3614  00FCC7  20                 	db	32
  3615  00FCC8  20                 	db	32
  3616  00FCC9  20                 	db	32
  3617  00FCCA  20                 	db	32
  3618  00FCCB  20                 	db	32
  3619  00FCCC  20                 	db	32
  3620  00FCCD  20                 	db	32
  3621  00FCCE  20                 	db	32
  3622  00FCCF  20                 	db	32
  3623  00FCD0  20                 	db	32
  3624  00FCD1  20                 	db	32
  3625  00FCD2  20                 	db	32
  3626  00FCD3  20                 	db	32
  3627  00FCD4  00                 	db	0
  3628  00FCD5                     STR_60:
  3629                           
  3630                           ; BSR set to: 57
  3631  00FCD5  20                 	db	32
  3632  00FCD6  25                 	db	37
  3633  00FCD7  6C                 	db	108	;'l'
  3634  00FCD8  64                 	db	100	;'d'
  3635  00FCD9  20                 	db	32
  3636  00FCDA  25                 	db	37
  3637  00FCDB  6C                 	db	108	;'l'
  3638  00FCDC  64                 	db	100	;'d'
  3639  00FCDD  20                 	db	32
  3640  00FCDE  20                 	db	32
  3641  00FCDF  20                 	db	32
  3642  00FCE0  20                 	db	32
  3643  00FCE1  20                 	db	32
  3644  00FCE2  20                 	db	32
  3645  00FCE3  20                 	db	32
  3646  00FCE4  20                 	db	32
  3647  00FCE5  20                 	db	32
  3648  00FCE6  20                 	db	32
  3649  00FCE7  20                 	db	32
  3650  00FCE8  20                 	db	32
  3651  00FCE9  20                 	db	32
  3652  00FCEA  00                 	db	0
  3653  00FCEB                     STR_12:
  3654                           
  3655                           ; BSR set to: 57
  3656  00FCEB  42                 	db	66	;'B'
  3657  00FCEC  56                 	db	86	;'V'
  3658  00FCED  20                 	db	32
  3659  00FCEE  25                 	db	37
  3660  00FCEF  32                 	db	50	;'2'
  3661  00FCF0  2E                 	db	46
  3662  00FCF1  34                 	db	52	;'4'
  3663  00FCF2  66                 	db	102	;'f'
  3664  00FCF3  20                 	db	32
  3665  00FCF4  20                 	db	32
  3666  00FCF5  20                 	db	32
  3667  00FCF6  20                 	db	32
  3668  00FCF7  20                 	db	32
  3669  00FCF8  20                 	db	32
  3670  00FCF9  20                 	db	32
  3671  00FCFA  20                 	db	32
  3672  00FCFB  20                 	db	32
  3673  00FCFC  20                 	db	32
  3674  00FCFD  20                 	db	32
  3675  00FCFE  20                 	db	32
  3676  00FCFF  20                 	db	32
  3677  00FD00  00                 	db	0
  3678  00FD01                     STR_26:
  3679                           
  3680                           ; BSR set to: 57
  3681  00FD01  54                 	db	84	;'T'
  3682  00FD02  6F                 	db	111	;'o'
  3683  00FD03  20                 	db	32
  3684  00FD04  45                 	db	69	;'E'
  3685  00FD05  45                 	db	69	;'E'
  3686  00FD06  50                 	db	80	;'P'
  3687  00FD07  52                 	db	82	;'R'
  3688  00FD08  4F                 	db	79	;'O'
  3689  00FD09  4D                 	db	77	;'M'
  3690  00FD0A  20                 	db	32
  3691  00FD0B  20                 	db	32
  3692  00FD0C  20                 	db	32
  3693  00FD0D  20                 	db	32
  3694  00FD0E  20                 	db	32
  3695  00FD0F  20                 	db	32
  3696  00FD10  20                 	db	32
  3697  00FD11  20                 	db	32
  3698  00FD12  20                 	db	32
  3699  00FD13  20                 	db	32
  3700  00FD14  20                 	db	32
  3701  00FD15  20                 	db	32
  3702  00FD16  00                 	db	0
  3703  00FD17                     STR_17:
  3704                           
  3705                           ; BSR set to: 57
  3706  00FD17  42                 	db	66	;'B'
  3707  00FD18  61                 	db	97	;'a'
  3708  00FD19  74                 	db	116	;'t'
  3709  00FD1A  74                 	db	116	;'t'
  3710  00FD1B  65                 	db	101	;'e'
  3711  00FD1C  72                 	db	114	;'r'
  3712  00FD1D  79                 	db	121	;'y'
  3713  00FD1E  20                 	db	32
  3714  00FD1F  45                 	db	69	;'E'
  3715  00FD20  53                 	db	83	;'S'
  3716  00FD21  52                 	db	82	;'R'
  3717  00FD22  20                 	db	32
  3718  00FD23  20                 	db	32
  3719  00FD24  20                 	db	32
  3720  00FD25  20                 	db	32
  3721  00FD26  20                 	db	32
  3722  00FD27  20                 	db	32
  3723  00FD28  20                 	db	32
  3724  00FD29  20                 	db	32
  3725  00FD2A  20                 	db	32
  3726  00FD2B  20                 	db	32
  3727  00FD2C  00                 	db	0
  3728  00FD2D                     STR_18:
  3729                           
  3730                           ; BSR set to: 57
  3731  00FD2D  43                 	db	67	;'C'
  3732  00FD2E  61                 	db	97	;'a'
  3733  00FD2F  6C                 	db	108	;'l'
  3734  00FD30  63                 	db	99	;'c'
  3735  00FD31  75                 	db	117	;'u'
  3736  00FD32  6C                 	db	108	;'l'
  3737  00FD33  61                 	db	97	;'a'
  3738  00FD34  74                 	db	116	;'t'
  3739  00FD35  69                 	db	105	;'i'
  3740  00FD36  6F                 	db	111	;'o'
  3741  00FD37  6E                 	db	110	;'n'
  3742  00FD38  20                 	db	32
  3743  00FD39  20                 	db	32
  3744  00FD3A  20                 	db	32
  3745  00FD3B  20                 	db	32
  3746  00FD3C  20                 	db	32
  3747  00FD3D  20                 	db	32
  3748  00FD3E  20                 	db	32
  3749  00FD3F  20                 	db	32
  3750  00FD40  20                 	db	32
  3751  00FD41  20                 	db	32
  3752  00FD42  00                 	db	0
  3753  00FD43                     STR_54:
  3754                           
  3755                           ; BSR set to: 57
  3756  00FD43  43                 	db	67	;'C'
  3757  00FD44  61                 	db	97	;'a'
  3758  00FD45  6C                 	db	108	;'l'
  3759  00FD46  69                 	db	105	;'i'
  3760  00FD47  62                 	db	98	;'b'
  3761  00FD48  72                 	db	114	;'r'
  3762  00FD49  61                 	db	97	;'a'
  3763  00FD4A  74                 	db	116	;'t'
  3764  00FD4B  69                 	db	105	;'i'
  3765  00FD4C  6F                 	db	111	;'o'
  3766  00FD4D  6E                 	db	110	;'n'
  3767  00FD4E  20                 	db	32
  3768  00FD4F  20                 	db	32
  3769  00FD50  20                 	db	32
  3770  00FD51  20                 	db	32
  3771  00FD52  20                 	db	32
  3772  00FD53  20                 	db	32
  3773  00FD54  20                 	db	32
  3774  00FD55  20                 	db	32
  3775  00FD56  20                 	db	32
  3776  00FD57  20                 	db	32
  3777  00FD58  00                 	db	0
  3778  00FD59                     STR_53:
  3779                           
  3780                           ; BSR set to: 57
  3781  00FD59  53                 	db	83	;'S'
  3782  00FD5A  65                 	db	101	;'e'
  3783  00FD5B  6E                 	db	110	;'n'
  3784  00FD5C  73                 	db	115	;'s'
  3785  00FD5D  6F                 	db	111	;'o'
  3786  00FD5E  72                 	db	114	;'r'
  3787  00FD5F  20                 	db	32
  3788  00FD60  5A                 	db	90	;'Z'
  3789  00FD61  65                 	db	101	;'e'
  3790  00FD62  72                 	db	114	;'r'
  3791  00FD63  6F                 	db	111	;'o'
  3792  00FD64  20                 	db	32
  3793  00FD65  20                 	db	32
  3794  00FD66  20                 	db	32
  3795  00FD67  20                 	db	32
  3796  00FD68  20                 	db	32
  3797  00FD69  20                 	db	32
  3798  00FD6A  20                 	db	32
  3799  00FD6B  20                 	db	32
  3800  00FD6C  20                 	db	32
  3801  00FD6D  20                 	db	32
  3802  00FD6E  00                 	db	0
  3803  00FD6F                     STR_74:
  3804                           
  3805                           ; BSR set to: 57
  3806  00FD6F  31                 	db	49	;'1'
  3807  00FD70  30                 	db	48	;'0'
  3808  00FD71  41                 	db	65	;'A'
  3809  00FD72  20                 	db	32
  3810  00FD73  43                 	db	67	;'C'
  3811  00FD74  61                 	db	97	;'a'
  3812  00FD75  6C                 	db	108	;'l'
  3813  00FD76  20                 	db	32
  3814  00FD77  53                 	db	83	;'S'
  3815  00FD78  65                 	db	101	;'e'
  3816  00FD79  74                 	db	116	;'t'
  3817  00FD7A  20                 	db	32
  3818  00FD7B  20                 	db	32
  3819  00FD7C  20                 	db	32
  3820  00FD7D  20                 	db	32
  3821  00FD7E  20                 	db	32
  3822  00FD7F  20                 	db	32
  3823  00FD80  20                 	db	32
  3824  00FD81  20                 	db	32
  3825  00FD82  20                 	db	32
  3826  00FD83  20                 	db	32
  3827  00FD84  00                 	db	0
  3828  00FD85                     STR_61:
  3829                           
  3830                           ; BSR set to: 57
  3831  00FD85  5A                 	db	90	;'Z'
  3832  00FD86  65                 	db	101	;'e'
  3833  00FD87  72                 	db	114	;'r'
  3834  00FD88  6F                 	db	111	;'o'
  3835  00FD89  20                 	db	32
  3836  00FD8A  43                 	db	67	;'C'
  3837  00FD8B  61                 	db	97	;'a'
  3838  00FD8C  6C                 	db	108	;'l'
  3839  00FD8D  20                 	db	32
  3840  00FD8E  53                 	db	83	;'S'
  3841  00FD8F  65                 	db	101	;'e'
  3842  00FD90  74                 	db	116	;'t'
  3843  00FD91  20                 	db	32
  3844  00FD92  20                 	db	32
  3845  00FD93  20                 	db	32
  3846  00FD94  20                 	db	32
  3847  00FD95  20                 	db	32
  3848  00FD96  20                 	db	32
  3849  00FD97  20                 	db	32
  3850  00FD98  20                 	db	32
  3851  00FD99  20                 	db	32
  3852  00FD9A  00                 	db	0
  3853  00FD9B                     STR_52:
  3854                           
  3855                           ; BSR set to: 57
  3856  00FD9B  42                 	db	66	;'B'
  3857  00FD9C  61                 	db	97	;'a'
  3858  00FD9D  74                 	db	116	;'t'
  3859  00FD9E  74                 	db	116	;'t'
  3860  00FD9F  65                 	db	101	;'e'
  3861  00FDA0  72                 	db	114	;'r'
  3862  00FDA1  79                 	db	121	;'y'
  3863  00FDA2  20                 	db	32
  3864  00FDA3  61                 	db	97	;'a'
  3865  00FDA4  6E                 	db	110	;'n'
  3866  00FDA5  64                 	db	100	;'d'
  3867  00FDA6  20                 	db	32
  3868  00FDA7  50                 	db	80	;'P'
  3869  00FDA8  56                 	db	86	;'V'
  3870  00FDA9  20                 	db	32
  3871  00FDAA  20                 	db	32
  3872  00FDAB  20                 	db	32
  3873  00FDAC  20                 	db	32
  3874  00FDAD  20                 	db	32
  3875  00FDAE  20                 	db	32
  3876  00FDAF  20                 	db	32
  3877  00FDB0  00                 	db	0
  3878  00FDB1                     STR_20:
  3879                           
  3880                           ; BSR set to: 57
  3881  00FDB1  43                 	db	67	;'C'
  3882  00FDB2  68                 	db	104	;'h'
  3883  00FDB3  65                 	db	101	;'e'
  3884  00FDB4  63                 	db	99	;'c'
  3885  00FDB5  6B                 	db	107	;'k'
  3886  00FDB6  69                 	db	105	;'i'
  3887  00FDB7  6E                 	db	110	;'n'
  3888  00FDB8  67                 	db	103	;'g'
  3889  00FDB9  20                 	db	32
  3890  00FDBA  25                 	db	37
  3891  00FDBB  63                 	db	99	;'c'
  3892  00FDBC  20                 	db	32
  3893  00FDBD  25                 	db	37
  3894  00FDBE  63                 	db	99	;'c'
  3895  00FDBF  20                 	db	32
  3896  00FDC0  20                 	db	32
  3897  00FDC1  20                 	db	32
  3898  00FDC2  20                 	db	32
  3899  00FDC3  20                 	db	32
  3900  00FDC4  20                 	db	32
  3901  00FDC5  20                 	db	32
  3902  00FDC6  00                 	db	0
  3903  00FDC7                     STR_27:
  3904                           
  3905                           ; BSR set to: 57
  3906  00FDC7  20                 	db	32
  3907  00FDC8  54                 	db	84	;'T'
  3908  00FDC9  69                 	db	105	;'i'
  3909  00FDCA  6D                 	db	109	;'m'
  3910  00FDCB  65                 	db	101	;'e'
  3911  00FDCC  20                 	db	32
  3912  00FDCD  25                 	db	37
  3913  00FDCE  6C                 	db	108	;'l'
  3914  00FDCF  75                 	db	117	;'u'
  3915  00FDD0  2C                 	db	44
  3916  00FDD1  20                 	db	32
  3917  00FDD2  25                 	db	37
  3918  00FDD3  6C                 	db	108	;'l'
  3919  00FDD4  75                 	db	117	;'u'
  3920  00FDD5  20                 	db	32
  3921  00FDD6  20                 	db	32
  3922  00FDD7  20                 	db	32
  3923  00FDD8  20                 	db	32
  3924  00FDD9  20                 	db	32
  3925  00FDDA  20                 	db	32
  3926  00FDDB  20                 	db	32
  3927  00FDDC  00                 	db	0
  3928  00FDDD                     STR_56:
  3929                           
  3930                           ; BSR set to: 57
  3931  00FDDD  53                 	db	83	;'S'
  3932  00FDDE  65                 	db	101	;'e'
  3933  00FDDF  6E                 	db	110	;'n'
  3934  00FDE0  73                 	db	115	;'s'
  3935  00FDE1  6F                 	db	111	;'o'
  3936  00FDE2  72                 	db	114	;'r'
  3937  00FDE3  20                 	db	32
  3938  00FDE4  52                 	db	82	;'R'
  3939  00FDE5  65                 	db	101	;'e'
  3940  00FDE6  61                 	db	97	;'a'
  3941  00FDE7  64                 	db	100	;'d'
  3942  00FDE8  69                 	db	105	;'i'
  3943  00FDE9  6E                 	db	110	;'n'
  3944  00FDEA  67                 	db	103	;'g'
  3945  00FDEB  73                 	db	115	;'s'
  3946  00FDEC  20                 	db	32
  3947  00FDED  20                 	db	32
  3948  00FDEE  20                 	db	32
  3949  00FDEF  20                 	db	32
  3950  00FDF0  20                 	db	32
  3951  00FDF1  20                 	db	32
  3952  00FDF2  00                 	db	0
  3953  00FDF3                     STR_77:
  3954                           
  3955                           ; BSR set to: 57
  3956  00FDF3  31                 	db	49	;'1'
  3957  00FDF4  30                 	db	48	;'0'
  3958  00FDF5  41                 	db	65	;'A'
  3959  00FDF6  20                 	db	32
  3960  00FDF7  4F                 	db	79	;'O'
  3961  00FDF8  75                 	db	117	;'u'
  3962  00FDF9  74                 	db	116	;'t'
  3963  00FDFA  20                 	db	32
  3964  00FDFB  4F                 	db	79	;'O'
  3965  00FDFC  66                 	db	102	;'f'
  3966  00FDFD  20                 	db	32
  3967  00FDFE  52                 	db	82	;'R'
  3968  00FDFF  61                 	db	97	;'a'
  3969  00FE00  6E                 	db	110	;'n'
  3970  00FE01  67                 	db	103	;'g'
  3971  00FE02  65                 	db	101	;'e'
  3972  00FE03  20                 	db	32
  3973  00FE04  20                 	db	32
  3974  00FE05  20                 	db	32
  3975  00FE06  20                 	db	32
  3976  00FE07  20                 	db	32
  3977  00FE08  00                 	db	0
  3978  00FE09                     STR_19:
  3979                           
  3980                           ; BSR set to: 57
  3981  00FE09  43                 	db	67	;'C'
  3982  00FE0A  68                 	db	104	;'h'
  3983  00FE0B  65                 	db	101	;'e'
  3984  00FE0C  63                 	db	99	;'c'
  3985  00FE0D  6B                 	db	107	;'k'
  3986  00FE0E  20                 	db	32
  3987  00FE0F  33                 	db	51	;'3'
  3988  00FE10  30                 	db	48	;'0'
  3989  00FE11  20                 	db	32
  3990  00FE12  73                 	db	115	;'s'
  3991  00FE13  65                 	db	101	;'e'
  3992  00FE14  63                 	db	99	;'c'
  3993  00FE15  6F                 	db	111	;'o'
  3994  00FE16  6E                 	db	110	;'n'
  3995  00FE17  64                 	db	100	;'d'
  3996  00FE18  73                 	db	115	;'s'
  3997  00FE19  20                 	db	32
  3998  00FE1A  20                 	db	32
  3999  00FE1B  20                 	db	32
  4000  00FE1C  20                 	db	32
  4001  00FE1D  20                 	db	32
  4002  00FE1E  00                 	db	0
  4003  00FE1F                     STR_64:
  4004                           
  4005                           ; BSR set to: 57
  4006  00FE1F  5A                 	db	90	;'Z'
  4007  00FE20  65                 	db	101	;'e'
  4008  00FE21  72                 	db	114	;'r'
  4009  00FE22  6F                 	db	111	;'o'
  4010  00FE23  20                 	db	32
  4011  00FE24  4F                 	db	79	;'O'
  4012  00FE25  75                 	db	117	;'u'
  4013  00FE26  74                 	db	116	;'t'
  4014  00FE27  20                 	db	32
  4015  00FE28  4F                 	db	79	;'O'
  4016  00FE29  66                 	db	102	;'f'
  4017  00FE2A  20                 	db	32
  4018  00FE2B  52                 	db	82	;'R'
  4019  00FE2C  61                 	db	97	;'a'
  4020  00FE2D  6E                 	db	110	;'n'
  4021  00FE2E  67                 	db	103	;'g'
  4022  00FE2F  65                 	db	101	;'e'
  4023  00FE30  20                 	db	32
  4024  00FE31  20                 	db	32
  4025  00FE32  20                 	db	32
  4026  00FE33  20                 	db	32
  4027  00FE34  00                 	db	0
  4028  00FE35                     STR_49:
  4029                           
  4030                           ; BSR set to: 57
  4031  00FE35  25                 	db	37
  4032  00FE36  64                 	db	100	;'d'
  4033  00FE37  20                 	db	32
  4034  00FE38  25                 	db	37
  4035  00FE39  32                 	db	50	;'2'
  4036  00FE3A  2E                 	db	46
  4037  00FE3B  34                 	db	52	;'4'
  4038  00FE3C  66                 	db	102	;'f'
  4039  00FE3D  2C                 	db	44
  4040  00FE3E  20                 	db	32
  4041  00FE3F  25                 	db	37
  4042  00FE40  64                 	db	100	;'d'
  4043  00FE41  20                 	db	32
  4044  00FE42  20                 	db	32
  4045  00FE43  54                 	db	84	;'T'
  4046  00FE44  52                 	db	82	;'R'
  4047  00FE45  49                 	db	73	;'I'
  4048  00FE46  4D                 	db	77	;'M'
  4049  00FE47  20                 	db	32
  4050  00FE48  20                 	db	32
  4051  00FE49  20                 	db	32
  4052  00FE4A  00                 	db	0
  4053  00FE4B                     STR_58:
  4054                           
  4055                           ; BSR set to: 57
  4056  00FE4B  53                 	db	83	;'S'
  4057  00FE4C  74                 	db	116	;'t'
  4058  00FE4D  61                 	db	97	;'a'
  4059  00FE4E  62                 	db	98	;'b'
  4060  00FE4F  69                 	db	105	;'i'
  4061  00FE50  6C                 	db	108	;'l'
  4062  00FE51  69                 	db	105	;'i'
  4063  00FE52  74                 	db	116	;'t'
  4064  00FE53  79                 	db	121	;'y'
  4065  00FE54  20                 	db	32
  4066  00FE55  63                 	db	99	;'c'
  4067  00FE56  6C                 	db	108	;'l'
  4068  00FE57  6F                 	db	111	;'o'
  4069  00FE58  63                 	db	99	;'c'
  4070  00FE59  6B                 	db	107	;'k'
  4071  00FE5A  20                 	db	32
  4072  00FE5B  25                 	db	37
  4073  00FE5C  64                 	db	100	;'d'
  4074  00FE5D  20                 	db	32
  4075  00FE5E  20                 	db	32
  4076  00FE5F  20                 	db	32
  4077  00FE60  00                 	db	0
  4078  00FE61                     STR_25:
  4079                           
  4080                           ; BSR set to: 57
  4081  00FE61  48                 	db	72	;'H'
  4082  00FE62  69                 	db	105	;'i'
  4083  00FE63  73                 	db	115	;'s'
  4084  00FE64  74                 	db	116	;'t'
  4085  00FE65  6F                 	db	111	;'o'
  4086  00FE66  72                 	db	114	;'r'
  4087  00FE67  79                 	db	121	;'y'
  4088  00FE68  20                 	db	32
  4089  00FE69  44                 	db	68	;'D'
  4090  00FE6A  61                 	db	97	;'a'
  4091  00FE6B  74                 	db	116	;'t'
  4092  00FE6C  61                 	db	97	;'a'
  4093  00FE6D  20                 	db	32
  4094  00FE6E  20                 	db	32
  4095  00FE6F  53                 	db	83	;'S'
  4096  00FE70  61                 	db	97	;'a'
  4097  00FE71  76                 	db	118	;'v'
  4098  00FE72  65                 	db	101	;'e'
  4099  00FE73  64                 	db	100	;'d'
  4100  00FE74  20                 	db	32
  4101  00FE75  20                 	db	32
  4102  00FE76  00                 	db	0
  4103  00FE77                     
  4104                           ; BSR set to: 57
  4105  00FE77  48                 	db	72	;'H'
  4106  00FE78  45                 	db	69	;'E'
  4107  00FE79  4C                 	db	76	;'L'
  4108  00FE7A  50                 	db	80	;'P'
  4109  00FE7B  20                 	db	32
  4110  00FE7C  25                 	db	37
  4111  00FE7D  73                 	db	115	;'s'
  4112  00FE7E  20                 	db	32
  4113  00FE7F  20                 	db	32
  4114  00FE80  20                 	db	32
  4115  00FE81  20                 	db	32
  4116  00FE82  20                 	db	32
  4117  00FE83  20                 	db	32
  4118  00FE84  20                 	db	32
  4119  00FE85  20                 	db	32
  4120  00FE86  20                 	db	32
  4121  00FE87  20                 	db	32
  4122  00FE88  20                 	db	32
  4123  00FE89  20                 	db	32
  4124  00FE8A  20                 	db	32
  4125  00FE8B  00                 	db	0
  4126  00FE8C                     
  4127                           ; BSR set to: 57
  4128  00FE8C  44                 	db	68	;'D'
  4129  00FE8D  49                 	db	73	;'I'
  4130  00FE8E  53                 	db	83	;'S'
  4131  00FE8F  50                 	db	80	;'P'
  4132  00FE90  4C                 	db	76	;'L'
  4133  00FE91  41                 	db	65	;'A'
  4134  00FE92  59                 	db	89	;'Y'
  4135  00FE93  20                 	db	32
  4136  00FE94  25                 	db	37
  4137  00FE95  73                 	db	115	;'s'
  4138  00FE96  20                 	db	32
  4139  00FE97  20                 	db	32
  4140  00FE98  20                 	db	32
  4141  00FE99  20                 	db	32
  4142  00FE9A  20                 	db	32
  4143  00FE9B  20                 	db	32
  4144  00FE9C  20                 	db	32
  4145  00FE9D  20                 	db	32
  4146  00FE9E  20                 	db	32
  4147  00FE9F  20                 	db	32
  4148  00FEA0  00                 	db	0
  4149  00FEA1                     STR_4:
  4150                           
  4151                           ; BSR set to: 57
  4152  00FEA1  20                 	db	32
  4153  00FEA2  4E                 	db	78	;'N'
  4154  00FEA3  53                 	db	83	;'S'
  4155  00FEA4  41                 	db	65	;'A'
  4156  00FEA5  53                 	db	83	;'S'
  4157  00FEA6  50                 	db	80	;'P'
  4158  00FEA7  4F                 	db	79	;'O'
  4159  00FEA8  4F                 	db	79	;'O'
  4160  00FEA9  4B                 	db	75	;'K'
  4161  00FEAA  20                 	db	32
  4162  00FEAB  20                 	db	32
  4163  00FEAC  20                 	db	32
  4164  00FEAD  20                 	db	32
  4165  00FEAE  20                 	db	32
  4166  00FEAF  20                 	db	32
  4167  00FEB0  20                 	db	32
  4168  00FEB1  20                 	db	32
  4169  00FEB2  20                 	db	32
  4170  00FEB3  20                 	db	32
  4171  00FEB4  20                 	db	32
  4172  00FEB5  00                 	db	0
  4173  00FEB6                     STR_67:
  4174                           
  4175                           ; BSR set to: 57
  4176  00FEB6  43                 	db	67	;'C'
  4177  00FEB7  61                 	db	97	;'a'
  4178  00FEB8  6C                 	db	108	;'l'
  4179  00FEB9  69                 	db	105	;'i'
  4180  00FEBA  62                 	db	98	;'b'
  4181  00FEBB  72                 	db	114	;'r'
  4182  00FEBC  61                 	db	97	;'a'
  4183  00FEBD  74                 	db	116	;'t'
  4184  00FEBE  69                 	db	105	;'i'
  4185  00FEBF  6F                 	db	111	;'o'
  4186  00FEC0  6E                 	db	110	;'n'
  4187  00FEC1  20                 	db	32
  4188  00FEC2  20                 	db	32
  4189  00FEC3  20                 	db	32
  4190  00FEC4  20                 	db	32
  4191  00FEC5  20                 	db	32
  4192  00FEC6  20                 	db	32
  4193  00FEC7  20                 	db	32
  4194  00FEC8  20                 	db	32
  4195  00FEC9  20                 	db	32
  4196  00FECA  00                 	db	0
  4197  00FECB                     STR_2:
  4198                           
  4199                           ; BSR set to: 57
  4200  00FECB  20                 	db	32
  4201  00FECC  56                 	db	86	;'V'
  4202  00FECD  65                 	db	101	;'e'
  4203  00FECE  72                 	db	114	;'r'
  4204  00FECF  73                 	db	115	;'s'
  4205  00FED0  69                 	db	105	;'i'
  4206  00FED1  6F                 	db	111	;'o'
  4207  00FED2  6E                 	db	110	;'n'
  4208  00FED3  20                 	db	32
  4209  00FED4  25                 	db	37
  4210  00FED5  73                 	db	115	;'s'
  4211  00FED6  20                 	db	32
  4212  00FED7  20                 	db	32
  4213  00FED8  20                 	db	32
  4214  00FED9  20                 	db	32
  4215  00FEDA  20                 	db	32
  4216  00FEDB  20                 	db	32
  4217  00FEDC  20                 	db	32
  4218  00FEDD  20                 	db	32
  4219  00FEDE  20                 	db	32
  4220  00FEDF  00                 	db	0
  4221  00FEE0                     STR_66:
  4222                           
  4223                           ; BSR set to: 57
  4224  00FEE0  31                 	db	49	;'1'
  4225  00FEE1  30                 	db	48	;'0'
  4226  00FEE2  20                 	db	32
  4227  00FEE3  41                 	db	65	;'A'
  4228  00FEE4  6D                 	db	109	;'m'
  4229  00FEE5  70                 	db	112	;'p'
  4230  00FEE6  20                 	db	32
  4231  00FEE7  53                 	db	83	;'S'
  4232  00FEE8  65                 	db	101	;'e'
  4233  00FEE9  6E                 	db	110	;'n'
  4234  00FEEA  73                 	db	115	;'s'
  4235  00FEEB  6F                 	db	111	;'o'
  4236  00FEEC  72                 	db	114	;'r'
  4237  00FEED  20                 	db	32
  4238  00FEEE  20                 	db	32
  4239  00FEEF  20                 	db	32
  4240  00FEF0  20                 	db	32
  4241  00FEF1  20                 	db	32
  4242  00FEF2  20                 	db	32
  4243  00FEF3  20                 	db	32
  4244  00FEF4  00                 	db	0
  4245  00FEF5                     STR_1:
  4246                           
  4247                           ; BSR set to: 57
  4248  00FEF5  20                 	db	32
  4249  00FEF6  4D                 	db	77	;'M'
  4250  00FEF7  42                 	db	66	;'B'
  4251  00FEF8  4D                 	db	77	;'M'
  4252  00FEF9  43                 	db	67	;'C'
  4253  00FEFA  20                 	db	32
  4254  00FEFB  53                 	db	83	;'S'
  4255  00FEFC  4F                 	db	79	;'O'
  4256  00FEFD  4C                 	db	76	;'L'
  4257  00FEFE  41                 	db	65	;'A'
  4258  00FEFF  52                 	db	82	;'R'
  4259  00FF00  4D                 	db	77	;'M'
  4260  00FF01  4F                 	db	79	;'O'
  4261  00FF02  4E                 	db	78	;'N'
  4262  00FF03  20                 	db	32
  4263  00FF04  20                 	db	32
  4264  00FF05  20                 	db	32
  4265  00FF06  20                 	db	32
  4266  00FF07  20                 	db	32
  4267  00FF08  20                 	db	32
  4268  00FF09  00                 	db	0
  4269  00FF0A                     STR_65:
  4270                           
  4271                           ; BSR set to: 57
  4272  00FF0A  42                 	db	66	;'B'
  4273  00FF0B  61                 	db	97	;'a'
  4274  00FF0C  74                 	db	116	;'t'
  4275  00FF0D  74                 	db	116	;'t'
  4276  00FF0E  65                 	db	101	;'e'
  4277  00FF0F  72                 	db	114	;'r'
  4278  00FF10  79                 	db	121	;'y'
  4279  00FF11  20                 	db	32
  4280  00FF12  61                 	db	97	;'a'
  4281  00FF13  6E                 	db	110	;'n'
  4282  00FF14  64                 	db	100	;'d'
  4283  00FF15  20                 	db	32
  4284  00FF16  50                 	db	80	;'P'
  4285  00FF17  56                 	db	86	;'V'
  4286  00FF18  20                 	db	32
  4287  00FF19  20                 	db	32
  4288  00FF1A  20                 	db	32
  4289  00FF1B  20                 	db	32
  4290  00FF1C  20                 	db	32
  4291  00FF1D  20                 	db	32
  4292  00FF1E  00                 	db	0
  4293  00FF1F                     STR_10:
  4294                           
  4295                           ; BSR set to: 57
  4296  00FF1F  52                 	db	82	;'R'
  4297  00FF20  65                 	db	101	;'e'
  4298  00FF21  61                 	db	97	;'a'
  4299  00FF22  64                 	db	100	;'d'
  4300  00FF23  20                 	db	32
  4301  00FF24  45                 	db	69	;'E'
  4302  00FF25  45                 	db	69	;'E'
  4303  00FF26  50                 	db	80	;'P'
  4304  00FF27  52                 	db	82	;'R'
  4305  00FF28  4F                 	db	79	;'O'
  4306  00FF29  4D                 	db	77	;'M'
  4307  00FF2A  20                 	db	32
  4308  00FF2B  44                 	db	68	;'D'
  4309  00FF2C  41                 	db	65	;'A'
  4310  00FF2D  54                 	db	84	;'T'
  4311  00FF2E  41                 	db	65	;'A'
  4312  00FF2F  20                 	db	32
  4313  00FF30  20                 	db	32
  4314  00FF31  20                 	db	32
  4315  00FF32  20                 	db	32
  4316  00FF33  00                 	db	0
  4317  00FF34                     STR_55:
  4318                           
  4319                           ; BSR set to: 57
  4320  00FF34  52                 	db	82	;'R'
  4321  00FF35  65                 	db	101	;'e'
  4322  00FF36  6C                 	db	108	;'l'
  4323  00FF37  65                 	db	101	;'e'
  4324  00FF38  61                 	db	97	;'a'
  4325  00FF39  73                 	db	115	;'s'
  4326  00FF3A  65                 	db	101	;'e'
  4327  00FF3B  20                 	db	32
  4328  00FF3C  62                 	db	98	;'b'
  4329  00FF3D  75                 	db	117	;'u'
  4330  00FF3E  74                 	db	116	;'t'
  4331  00FF3F  74                 	db	116	;'t'
  4332  00FF40  6F                 	db	111	;'o'
  4333  00FF41  6E                 	db	110	;'n'
  4334  00FF42  20                 	db	32
  4335  00FF43  25                 	db	37
  4336  00FF44  63                 	db	99	;'c'
  4337  00FF45  20                 	db	32
  4338  00FF46  20                 	db	32
  4339  00FF47  20                 	db	32
  4340  00FF48  00                 	db	0
  4341  00FF49                     STR_11:
  4342                           
  4343                           ; BSR set to: 57
  4344  00FF49  49                 	db	73	;'I'
  4345  00FF4A  6E                 	db	110	;'n'
  4346  00FF4B  76                 	db	118	;'v'
  4347  00FF4C  61                 	db	97	;'a'
  4348  00FF4D  6C                 	db	108	;'l'
  4349  00FF4E  69                 	db	105	;'i'
  4350  00FF4F  64                 	db	100	;'d'
  4351  00FF50  20                 	db	32
  4352  00FF51  45                 	db	69	;'E'
  4353  00FF52  45                 	db	69	;'E'
  4354  00FF53  50                 	db	80	;'P'
  4355  00FF54  52                 	db	82	;'R'
  4356  00FF55  4F                 	db	79	;'O'
  4357  00FF56  4D                 	db	77	;'M'
  4358  00FF57  20                 	db	32
  4359  00FF58  44                 	db	68	;'D'
  4360  00FF59  41                 	db	65	;'A'
  4361  00FF5A  54                 	db	84	;'T'
  4362  00FF5B  41                 	db	65	;'A'
  4363  00FF5C  20                 	db	32
  4364  00FF5D  00                 	db	0
  4365  00FF5E                     STR_85:
  4366                           
  4367                           ; BSR set to: 57
  4368  00FF5E  48                 	db	72	;'H'
  4369  00FF5F  45                 	db	69	;'E'
  4370  00FF60  4C                 	db	76	;'L'
  4371  00FF61  50                 	db	80	;'P'
  4372  00FF62  20                 	db	32
  4373  00FF63  25                 	db	37
  4374  00FF64  73                 	db	115	;'s'
  4375  00FF65  20                 	db	32
  4376  00FF66  20                 	db	32
  4377  00FF67  20                 	db	32
  4378  00FF68  20                 	db	32
  4379  00FF69  20                 	db	32
  4380  00FF6A  20                 	db	32
  4381  00FF6B  20                 	db	32
  4382  00FF6C  20                 	db	32
  4383  00FF6D  20                 	db	32
  4384  00FF6E  20                 	db	32
  4385  00FF6F  20                 	db	32
  4386  00FF70  00                 	db	0
  4387  00FF71                     STR_68:
  4388                           
  4389                           ; BSR set to: 57
  4390  00FF71  50                 	db	80	;'P'
  4391  00FF72  72                 	db	114	;'r'
  4392  00FF73  65                 	db	101	;'e'
  4393  00FF74  73                 	db	115	;'s'
  4394  00FF75  73                 	db	115	;'s'
  4395  00FF76  20                 	db	32
  4396  00FF77  62                 	db	98	;'b'
  4397  00FF78  75                 	db	117	;'u'
  4398  00FF79  74                 	db	116	;'t'
  4399  00FF7A  74                 	db	116	;'t'
  4400  00FF7B  6F                 	db	111	;'o'
  4401  00FF7C  6E                 	db	110	;'n'
  4402  00FF7D  20                 	db	32
  4403  00FF7E  25                 	db	37
  4404  00FF7F  63                 	db	99	;'c'
  4405  00FF80  20                 	db	32
  4406  00FF81  20                 	db	32
  4407  00FF82  20                 	db	32
  4408  00FF83  00                 	db	0
  4409  00FF84                     
  4410                           ; BSR set to: 57
  4411  00FF84  25                 	db	37
  4412  00FF85  64                 	db	100	;'d'
  4413  00FF86  20                 	db	32
  4414  00FF87  25                 	db	37
  4415  00FF88  32                 	db	50	;'2'
  4416  00FF89  2E                 	db	46
  4417  00FF8A  34                 	db	52	;'4'
  4418  00FF8B  66                 	db	102	;'f'
  4419  00FF8C  2C                 	db	44
  4420  00FF8D  20                 	db	32
  4421  00FF8E  25                 	db	37
  4422  00FF8F  64                 	db	100	;'d'
  4423  00FF90  20                 	db	32
  4424  00FF91  20                 	db	32
  4425  00FF92  20                 	db	32
  4426  00FF93  23                 	db	35
  4427  00FF94  20                 	db	32
  4428  00FF95  00                 	db	0
  4429  00FF96                     STR_28:
  4430                           
  4431                           ; BSR set to: 57
  4432  00FF96  25                 	db	37
  4433  00FF97  64                 	db	100	;'d'
  4434  00FF98  20                 	db	32
  4435  00FF99  25                 	db	37
  4436  00FF9A  32                 	db	50	;'2'
  4437  00FF9B  2E                 	db	46
  4438  00FF9C  34                 	db	52	;'4'
  4439  00FF9D  66                 	db	102	;'f'
  4440  00FF9E  20                 	db	32
  4441  00FF9F  20                 	db	32
  4442  00FFA0  20                 	db	32
  4443  00FFA1  25                 	db	37
  4444  00FFA2  64                 	db	100	;'d'
  4445  00FFA3  20                 	db	32
  4446  00FFA4  20                 	db	32
  4447  00FFA5  20                 	db	32
  4448  00FFA6  00                 	db	0
  4449  00FFA7                     STR_89:
  4450                           
  4451                           ; BSR set to: 57
  4452  00FFA7  76                 	db	118	;'v'
  4453  00FFA8  74                 	db	116	;'t'
  4454  00FFA9  65                 	db	101	;'e'
  4455  00FFAA  72                 	db	114	;'r'
  4456  00FFAB  6D                 	db	109	;'m'
  4457  00FFAC  20                 	db	32
  4458  00FFAD  25                 	db	37
  4459  00FFAE  78                 	db	120	;'x'
  4460  00FFAF  3A                 	db	58	;':'
  4461  00FFB0  25                 	db	37
  4462  00FFB1  78                 	db	120	;'x'
  4463  00FFB2  20                 	db	32
  4464  00FFB3  20                 	db	32
  4465  00FFB4  20                 	db	32
  4466  00FFB5  00                 	db	0
  4467  00FFB6                     STR_83:
  4468                           
  4469                           ; BSR set to: 57
  4470  00FFB6  46                 	db	70	;'F'
  4471  00FFB7  65                 	db	101	;'e'
  4472  00FFB8  62                 	db	98	;'b'
  4473  00FFB9  20                 	db	32
  4474  00FFBA  31                 	db	49	;'1'
  4475  00FFBB  38                 	db	56	;'8'
  4476  00FFBC  20                 	db	32
  4477  00FFBD  32                 	db	50	;'2'
  4478  00FFBE  30                 	db	48	;'0'
  4479  00FFBF  32                 	db	50	;'2'
  4480  00FFC0  30                 	db	48	;'0'
  4481  00FFC1  00                 	db	0
  4482  00FFC2                     STR_87:
  4483                           
  4484                           ; BSR set to: 57
  4485  00FFC2  25                 	db	37
  4486  00FFC3  73                 	db	115	;'s'
  4487  00FFC4  20                 	db	32
  4488  00FFC5  20                 	db	32
  4489  00FFC6  20                 	db	32
  4490  00FFC7  20                 	db	32
  4491  00FFC8  20                 	db	32
  4492  00FFC9  20                 	db	32
  4493  00FFCA  20                 	db	32
  4494  00FFCB  00                 	db	0
  4495  00FFCC                     STR_84:
  4496                           
  4497                           ; BSR set to: 57
  4498  00FFCC  31                 	db	49	;'1'
  4499  00FFCD  37                 	db	55	;'7'
  4500  00FFCE  3A                 	db	58	;':'
  4501  00FFCF  30                 	db	48	;'0'
  4502  00FFD0  33                 	db	51	;'3'
  4503  00FFD1  3A                 	db	58	;':'
  4504  00FFD2  31                 	db	49	;'1'
  4505  00FFD3  39                 	db	57	;'9'
  4506  00FFD4  00                 	db	0
  4507  00FFD5                     STR_3:
  4508                           
  4509                           ; BSR set to: 57
  4510  00FFD5  31                 	db	49	;'1'
  4511  00FFD6  2E                 	db	46
  4512  00FFD7  32                 	db	50	;'2'
  4513  00FFD8  36                 	db	54	;'6'
  4514  00FFD9  00                 	db	0
  4515  00FFDA                     STR_104:
  4516                           
  4517                           ; BSR set to: 57
  4518  00FFDA  49                 	db	73	;'I'
  4519  00FFDB  4E                 	db	78	;'N'
  4520  00FFDC  46                 	db	70	;'F'
  4521  00FFDD  00                 	db	0
  4522  00FFDE                     STR_108:
  4523                           
  4524                           ; BSR set to: 57
  4525  00FFDE  4E                 	db	78	;'N'
  4526  00FFDF  41                 	db	65	;'A'
  4527  00FFE0  4E                 	db	78	;'N'
  4528  00FFE1  00                 	db	0
  4529  00FFE2                     STR_105:
  4530                           
  4531                           ; BSR set to: 57
  4532  00FFE2  69                 	db	105	;'i'
  4533  00FFE3  6E                 	db	110	;'n'
  4534  00FFE4  66                 	db	102	;'f'
  4535  00FFE5  00                 	db	0
  4536  00FFE6                     STR_109:
  4537                           
  4538                           ; BSR set to: 57
  4539  00FFE6  6E                 	db	110	;'n'
  4540  00FFE7  61                 	db	97	;'a'
  4541  00FFE8  6E                 	db	110	;'n'
  4542  00FFE9  00                 	db	0
  4543  00FFEA                     STR_135:
  4544                           
  4545                           ; BSR set to: 57
  4546  00FFEA  6C                 	db	108	;'l'
  4547  00FFEB  58                 	db	88	;'X'
  4548  00FFEC  00                 	db	0
  4549  00FFED                     STR_112:
  4550                           
  4551                           ; BSR set to: 57
  4552  00FFED  6C                 	db	108	;'l'
  4553  00FFEE  64                 	db	100	;'d'
  4554  00FFEF  00                 	db	0
  4555  00FFF0                     STR_121:
  4556                           
  4557                           ; BSR set to: 57
  4558  00FFF0  6C                 	db	108	;'l'
  4559  00FFF1  66                 	db	102	;'f'
  4560  00FFF2  00                 	db	0
  4561  00FFF3                     STR_116:
  4562                           
  4563                           ; BSR set to: 57
  4564  00FFF3  6C                 	db	108	;'l'
  4565  00FFF4  69                 	db	105	;'i'
  4566  00FFF5  00                 	db	0
  4567  00FFF6                     STR_126:
  4568                           
  4569                           ; BSR set to: 57
  4570  00FFF6  6C                 	db	108	;'l'
  4571  00FFF7  75                 	db	117	;'u'
  4572  00FFF8  00                 	db	0
  4573  00FFF9                     STR_131:
  4574                           
  4575                           ; BSR set to: 57
  4576  00FFF9  6C                 	db	108	;'l'
  4577  00FFFA  78                 	db	120	;'x'
  4578  00FFFB  00                 	db	0
  4579  00FFFC                     STR_82:
  4580                           
  4581                           ; BSR set to: 57
  4582  00FFFC  25                 	db	37
  4583  00FFFD  73                 	db	115	;'s'
  4584  00FFFE  00                 	db	0
  4585  0000                     
  4586                           ; #config settings
  4587  00FFFF  00                 	db	0	; dummy byte at the end
  4588  0000                     
  4589                           	psect	cinit
  4590  0001C0                     __pcinit:
  4591                           	opt callstack 0
  4592  0001C0                     start_initialization:
  4593                           	opt callstack 0
  4594  0001C0                     __initialization:
  4595                           	opt callstack 0
  4596                           
  4597                           ; Initialize objects allocated to BIGRAM (832 bytes)
  4598                           ; load TBLPTR registers with __pidataBIGRAM
  4599  0001C0  0E30               	movlw	low __pidataBIGRAM
  4600  0001C2  6EF6               	movwf	tblptrl,c
  4601  0001C4  0EAA               	movlw	high __pidataBIGRAM
  4602  0001C6  6EF7               	movwf	tblptrh,c
  4603  0001C8  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4604  0001CA  6EF8               	movwf	tblptru,c
  4605  0001CC  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4606  0001D0  EE20 F340          	lfsr	2,832
  4607  0001D4                     copy_data0:
  4608  0001D4  0009               	tblrd		*+
  4609  0001D6  006F FFD7 FFEE     	movff	tablat,postinc0
  4610  0001DC  50DD               	movf	postdec2,w,c
  4611  0001DE  50D9               	movf	fsr2l,w,c
  4612  0001E0  E1F9               	bnz	copy_data0
  4613  0001E2  50DA               	movf	fsr2h,w,c
  4614  0001E4  E1F7               	bnz	copy_data0
  4615                           
  4616                           ; Initialize objects allocated to BANK2 (188 bytes)
  4617                           ; load TBLPTR registers with __pidataBANK2
  4618  0001E6  0E98               	movlw	low __pidataBANK2
  4619  0001E8  6EF6               	movwf	tblptrl,c
  4620  0001EA  0E0A               	movlw	high __pidataBANK2
  4621  0001EC  6EF7               	movwf	tblptrh,c
  4622  0001EE  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4623  0001F0  6EF8               	movwf	tblptru,c
  4624  0001F2  EE00  F200         	lfsr	0,__pdataBANK2
  4625  0001F6  EE20 F0BC          	lfsr	2,188
  4626  0001FA                     copy_data1:
  4627  0001FA  0009               	tblrd		*+
  4628  0001FC  006F FFD7 FFEE     	movff	tablat,postinc0
  4629  000202  50DD               	movf	postdec2,w,c
  4630  000204  50D9               	movf	fsr2l,w,c
  4631  000206  E1F9               	bnz	copy_data1
  4632                           
  4633                           ; Initialize objects allocated to BANK1 (164 bytes)
  4634                           ; load TBLPTR registers with __pidataBANK1
  4635  000208  0E26               	movlw	low __pidataBANK1
  4636  00020A  6EF6               	movwf	tblptrl,c
  4637  00020C  0E10               	movlw	high __pidataBANK1
  4638  00020E  6EF7               	movwf	tblptrh,c
  4639  000210  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4640  000212  6EF8               	movwf	tblptru,c
  4641  000214  EE00  F100         	lfsr	0,__pdataBANK1
  4642  000218  EE20 F0A4          	lfsr	2,164
  4643  00021C                     copy_data2:
  4644  00021C  0009               	tblrd		*+
  4645  00021E  006F FFD7 FFEE     	movff	tablat,postinc0
  4646  000224  50DD               	movf	postdec2,w,c
  4647  000226  50D9               	movf	fsr2l,w,c
  4648  000228  E1F9               	bnz	copy_data2
  4649                           
  4650                           ; Clear objects allocated to BIGRAM (642 bytes)
  4651  00022A  EE02  F23F         	lfsr	0,__pbssBIGRAM
  4652  00022E  EE20 F282          	lfsr	2,642
  4653  000232                     clear_0:
  4654  000232  6AEE               	clrf	postinc0,c
  4655  000234  50DD               	movf	postdec2,w,c
  4656  000236  50D9               	movf	fsr2l,w,c
  4657  000238  E1FC               	bnz	clear_0
  4658  00023A  50DA               	movf	fsr2h,w,c
  4659  00023C  E1FA               	bnz	clear_0
  4660                           
  4661                           ; Clear objects allocated to BANK6 (255 bytes)
  4662  00023E  EE01  F200         	lfsr	0,__pbssBANK6
  4663  000242  EE20 F0FF          	lfsr	2,255
  4664  000246                     clear_1:
  4665  000246  6AEE               	clrf	postinc0,c
  4666  000248  50DD               	movf	postdec2,w,c
  4667  00024A  50D9               	movf	fsr2l,w,c
  4668  00024C  E1FC               	bnz	clear_1
  4669  00024E  50DA               	movf	fsr2h,w,c
  4670  000250  E1FA               	bnz	clear_1
  4671                           
  4672                           ; Clear objects allocated to BANK5 (134 bytes)
  4673  000252  EE01  F100         	lfsr	0,__pbssBANK5
  4674  000256  0E86               	movlw	134
  4675  000258                     clear_2:
  4676  000258  6AEE               	clrf	postinc0,c
  4677  00025A  06E8               	decf	wreg,f,c
  4678  00025C  E1FD               	bnz	clear_2
  4679                           
  4680                           ; Clear objects allocated to BANK4 (219 bytes)
  4681  00025E  EE01  F000         	lfsr	0,__pbssBANK4
  4682  000262  0EDB               	movlw	219
  4683  000264                     clear_3:
  4684  000264  6AEE               	clrf	postinc0,c
  4685  000266  06E8               	decf	wreg,f,c
  4686  000268  E1FD               	bnz	clear_3
  4687                           
  4688                           ; Clear objects allocated to BANK3 (247 bytes)
  4689  00026A  EE00  F300         	lfsr	0,__pbssBANK3
  4690  00026E  0EF7               	movlw	247
  4691  000270                     clear_4:
  4692  000270  6AEE               	clrf	postinc0,c
  4693  000272  06E8               	decf	wreg,f,c
  4694  000274  E1FD               	bnz	clear_4
  4695                           
  4696                           ; Clear objects allocated to BANK2 (42 bytes)
  4697  000276  EE00  F2BC         	lfsr	0,__pbssBANK2
  4698  00027A  0E2A               	movlw	42
  4699  00027C                     clear_5:
  4700  00027C  6AEE               	clrf	postinc0,c
  4701  00027E  06E8               	decf	wreg,f,c
  4702  000280  E1FD               	bnz	clear_5
  4703                           
  4704                           ; Clear objects allocated to BANK1 (89 bytes)
  4705  000282  EE00  F1A4         	lfsr	0,__pbssBANK1
  4706  000286  0E59               	movlw	89
  4707  000288                     clear_6:
  4708  000288  6AEE               	clrf	postinc0,c
  4709  00028A  06E8               	decf	wreg,f,c
  4710  00028C  E1FD               	bnz	clear_6
  4711                           
  4712                           ; Clear objects allocated to BANK0 (133 bytes)
  4713  00028E  EE00  F060         	lfsr	0,__pbssBANK0
  4714  000292  0E85               	movlw	133
  4715  000294                     clear_7:
  4716  000294  6AEE               	clrf	postinc0,c
  4717  000296  06E8               	decf	wreg,f,c
  4718  000298  E1FD               	bnz	clear_7
  4719                           
  4720                           ; Clear objects allocated to COMRAM (14 bytes)
  4721  00029A  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4722  00029E  0E0E               	movlw	14
  4723  0002A0                     clear_8:
  4724  0002A0  6AEE               	clrf	postinc0,c
  4725  0002A2  06E8               	decf	wreg,f,c
  4726  0002A4  E1FD               	bnz	clear_8
  4727                           
  4728                           ;
  4729                           ; Setup IVTBASE
  4730                           ;
  4731  0002A6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4732  0002A8  6ED5               	movwf	213,c
  4733  0002AA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4734  0002AC  6ED6               	movwf	214,c
  4735  0002AE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4736  0002B0  6ED7               	movwf	215,c
  4737  0002B2                     end_of_initialization:
  4738                           	opt callstack 0
  4739  0002B2                     __end_of__initialization:
  4740                           	opt callstack 0
  4741  0002B2  0100               	movlb	0
  4742  0002B4  EF00  F080         	goto	_main	;jump to C main() function
  4743                           
  4744                           	psect	bssCOMRAM
  4745  00004A                     __pbssCOMRAM:
  4746                           	opt callstack 0
  4747  00004A                     _width:
  4748                           	opt callstack 0
  4749  00004A                     	ds	2
  4750  00004C                     _prec:
  4751                           	opt callstack 0
  4752  00004C                     	ds	2
  4753  00004E                     _flags:
  4754                           	opt callstack 0
  4755  00004E                     	ds	2
  4756  000050                     calc_bsoc@log_update_wait:
  4757                           	opt callstack 0
  4758  000050                     	ds	1
  4759  000051                     check_day_time@day_delay:
  4760                           	opt callstack 0
  4761  000051                     	ds	1
  4762  000052                     dac_spi_control@init:
  4763                           	opt callstack 0
  4764  000052                     	ds	1
  4765  000053                     display_history@bwait:
  4766                           	opt callstack 0
  4767  000053                     	ds	1
  4768  000054                     _uart2RxHead:
  4769                           	opt callstack 0
  4770  000054                     	ds	1
  4771  000055                     _uart2TxBufferRemaining:
  4772                           	opt callstack 0
  4773  000055                     	ds	1
  4774  000056                     _uart2TxTail:
  4775                           	opt callstack 0
  4776  000056                     	ds	1
  4777  000057                     _uart1RxHead:
  4778                           	opt callstack 0
  4779  000057                     	ds	1
  4780                           
  4781                           	psect	bssBANK0
  4782  000060                     __pbssBANK0:
  4783                           	opt callstack 0
  4784  000060                     _spi_link:
  4785                           	opt callstack 0
  4786  000060                     	ds	12
  4787  00006C                     ___tzname:
  4788                           	opt callstack 0
  4789  00006C                     	ds	4
  4790  000070                     ___timezone:
  4791                           	opt callstack 0
  4792  000070                     	ds	4
  4793  000074                     floorf@F524:
  4794                           	opt callstack 0
  4795  000074                     	ds	4
  4796  000078                     fabsf@F463:
  4797                           	opt callstack 0
  4798  000078                     	ds	4
  4799  00007C                     ___fpclassifyf@F463:
  4800                           	opt callstack 0
  4801  00007C                     	ds	4
  4802  000080                     calc_ror_data@bcror:
  4803                           	opt callstack 0
  4804  000080                     	ds	4
  4805  000084                     calc_ror_data@bvror:
  4806                           	opt callstack 0
  4807  000084                     	ds	4
  4808  000088                     calc_model_data@bcror:
  4809                           	opt callstack 0
  4810  000088                     	ds	4
  4811  00008C                     calc_model_data@bvror:
  4812                           	opt callstack 0
  4813  00008C                     	ds	4
  4814  000090                     wdtdelay@dcount:
  4815                           	opt callstack 0
  4816  000090                     	ds	4
  4817  000094                     _P:
  4818                           	opt callstack 0
  4819  000094                     	ds	4
  4820  000098                     _TMR3_InterruptHandler:
  4821                           	opt callstack 0
  4822  000098                     	ds	3
  4823  00009B                     _TMR5_InterruptHandler:
  4824                           	opt callstack 0
  4825  00009B                     	ds	3
  4826  00009E                     _TMR6_InterruptHandler:
  4827                           	opt callstack 0
  4828  00009E                     	ds	3
  4829  0000A1                     _ADCC_ADTI_InterruptHandler:
  4830                           	opt callstack 0
  4831  0000A1                     	ds	3
  4832  0000A4                     _ADCC_ADI_InterruptHandler:
  4833                           	opt callstack 0
  4834  0000A4                     	ds	3
  4835  0000A7                     _UART1_RxInterruptHandler:
  4836                           	opt callstack 0
  4837  0000A7                     	ds	3
  4838  0000AA                     _UART2_TxInterruptHandler:
  4839                           	opt callstack 0
  4840  0000AA                     	ds	3
  4841  0000AD                     _UART2_RxInterruptHandler:
  4842                           	opt callstack 0
  4843  0000AD                     	ds	3
  4844  0000B0                     _INT1_InterruptHandler:
  4845                           	opt callstack 0
  4846  0000B0                     	ds	3
  4847  0000B3                     _INT0_InterruptHandler:
  4848                           	opt callstack 0
  4849  0000B3                     	ds	3
  4850  0000B6                     _dst_off:
  4851                           	opt callstack 0
  4852  0000B6                     	ds	2
  4853  0000B8                     ___daylight:
  4854                           	opt callstack 0
  4855  0000B8                     	ds	2
  4856  0000BA                     _nout:
  4857                           	opt callstack 0
  4858  0000BA                     	ds	2
  4859  0000BC                     _t_mbmc:
  4860                           	opt callstack 0
  4861  0000BC                     	ds	2
  4862  0000BE                     TMR3_ISR@CountCallBack:
  4863                           	opt callstack 0
  4864  0000BE                     	ds	2
  4865  0000C0                     _timer3ReloadVal:
  4866                           	opt callstack 0
  4867  0000C0                     	ds	2
  4868  0000C2                     TMR5_ISR@CountCallBack:
  4869                           	opt callstack 0
  4870  0000C2                     	ds	2
  4871  0000C4                     _timer5ReloadVal:
  4872                           	opt callstack 0
  4873  0000C4                     	ds	2
  4874  0000C6                     esr_check@esr_state:
  4875                           	opt callstack 0
  4876  0000C6                     	ds	1
  4877  0000C7                     dac_spi_control@SB:
  4878                           	opt callstack 0
  4879  0000C7                     	ds	1
  4880  0000C8                     dac_spi_control@SC:
  4881                           	opt callstack 0
  4882  0000C8                     	ds	1
  4883  0000C9                     dac_spi_control@S2:
  4884                           	opt callstack 0
  4885  0000C9                     	ds	1
  4886  0000CA                     dac_spi_control@S1:
  4887                           	opt callstack 0
  4888  0000CA                     	ds	1
  4889  0000CB                     dac_spi_control@S0:
  4890                           	opt callstack 0
  4891  0000CB                     	ds	1
  4892  0000CC                     _mode_sw:
  4893                           	opt callstack 0
  4894  0000CC                     	ds	1
  4895  0000CD                     _uart2RxCount:
  4896                           	opt callstack 0
  4897  0000CD                     	ds	1
  4898  0000CE                     _uart2RxTail:
  4899                           	opt callstack 0
  4900  0000CE                     	ds	1
  4901  0000CF                     _uart2TxHead:
  4902                           	opt callstack 0
  4903  0000CF                     	ds	1
  4904  0000D0                     _uart1RxCount:
  4905                           	opt callstack 0
  4906  0000D0                     	ds	1
  4907  0000D1                     _uart1RxTail:
  4908                           	opt callstack 0
  4909  0000D1                     	ds	1
  4910  0000D2                     time@current_time:
  4911                           	opt callstack 0
  4912  0000D2                     	ds	8
  4913  0000DA                     _pclock:
  4914                           	opt callstack 0
  4915  0000DA                     	ds	8
  4916  0000E2                     _crcObj:
  4917                           	opt callstack 0
  4918  0000E2                     	ds	3
  4919                           
  4920                           	psect	bssBANK1
  4921  0001A4                     __pbssBANK1:
  4922                           	opt callstack 0
  4923  0001A4                     _S:
  4924                           	opt callstack 0
  4925  0001A4                     	ds	41
  4926  0001CD                     spinners@s:
  4927                           	opt callstack 0
  4928  0001CD                     	ds	6
  4929  0001D3                     _lock:
  4930                           	opt callstack 0
  4931  0001D3                     	ds	4
  4932  0001D7                     _utctime:
  4933                           	opt callstack 0
  4934  0001D7                     	ds	4
  4935  0001DB                     _r1:
  4936                           	opt callstack 0
  4937  0001DB                     	ds	10
  4938  0001E5                     _r0:
  4939                           	opt callstack 0
  4940  0001E5                     	ds	10
  4941  0001EF                     _dst_name:
  4942                           	opt callstack 0
  4943  0001EF                     	ds	7
  4944  0001F6                     _std_name:
  4945                           	opt callstack 0
  4946  0001F6                     	ds	7
  4947                           
  4948                           	psect	dataBANK1
  4949  000100                     __pdataBANK1:
  4950                           	opt callstack 0
  4951  000100                     _R:
  4952                           	opt callstack 0
  4953  000100                     	ds	155
  4954  00019B                     _H:
  4955                           	opt callstack 0
  4956  00019B                     	ds	9
  4957                           
  4958                           	psect	bssBANK2
  4959  0002BC                     __pbssBANK2:
  4960                           	opt callstack 0
  4961  0002BC                     _tickCount:
  4962                           	opt callstack 0
  4963  0002BC                     	ds	26
  4964  0002D6                     _uart1RxBuffer:
  4965                           	opt callstack 0
  4966  0002D6                     	ds	8
  4967  0002DE                     _seed:
  4968                           	opt callstack 0
  4969  0002DE                     	ds	8
  4970                           
  4971                           	psect	dataBANK2
  4972  000200                     __pdataBANK2:
  4973                           	opt callstack 0
  4974  000200                     stoa@F1166:
  4975                           	opt callstack 0
  4976  000200                     	ds	7
  4977  000207                     _V:
  4978                           	opt callstack 0
  4979  000207                     	ds	181
  4980                           
  4981                           	psect	bssBANK3
  4982  000300                     __pbssBANK3:
  4983                           	opt callstack 0
  4984  000300                     lp_filter@smooth:
  4985                           	opt callstack 0
  4986  000300                     	ds	84
  4987  000354                     _dbuf:
  4988                           	opt callstack 0
  4989  000354                     	ds	80
  4990  0003A4                     	ds	32
  4991  0003C4                     asctime@buf:
  4992                           	opt callstack 0
  4993  0003C4                     	ds	27
  4994  0003DF                     localtime@tm:
  4995                           	opt callstack 0
  4996  0003DF                     	ds	24
  4997                           
  4998                           	psect	bssBANK4
  4999  000400                     __pbssBANK4:
  5000                           	opt callstack 0
  5001  000400                     _uart2TxBuffer:
  5002                           	opt callstack 0
  5003  000400                     	ds	64
  5004  000440                     _r_cal:
  5005                           	opt callstack 0
  5006  000440                     	ds	155
  5007                           
  5008                           	psect	bssBANK5
  5009  000500                     __pbssBANK5:
  5010                           	opt callstack 0
  5011  000500                     _ring_buf2:
  5012                           	opt callstack 0
  5013  000500                     	ds	67
  5014  000543                     _ring_buf1:
  5015                           	opt callstack 0
  5016  000543                     	ds	67
  5017                           
  5018                           	psect	bssBANK6
  5019  000600                     __pbssBANK6:
  5020                           	opt callstack 0
  5021  000600                     _uart2RxBuffer:
  5022                           	opt callstack 0
  5023  000600                     	ds	255
  5024                           
  5025                           	psect	bssBIGRAM
  5026  000A3F                     __pbssBIGRAM:
  5027                           	opt callstack 0
  5028  000A3F                     _D:
  5029                           	opt callstack 0
  5030  000A3F                     	ds	642
  5031                           
  5032                           	psect	dataBIGRAM
  5033  0006FF                     __pdataBIGRAM:
  5034                           	opt callstack 0
  5035  0006FF                     _port_data:
  5036                           	opt callstack 0
  5037  0006FF                     	ds	512
  5038  0008FF                     _C:
  5039                           	opt callstack 0
  5040  0008FF                     	ds	320
  5041                           
  5042                           	psect	cstackBANK0
  5043  0000E5                     __pcstackBANK0:
  5044                           	opt callstack 0
  5045  0000E5                     ??_TMR3_ISR:
  5046                           
  5047                           ; 1 bytes @ 0x0
  5048  0000E5                     	ds	25
  5049                           
  5050                           	psect	cstackCOMRAM
  5051  000001                     __pcstackCOMRAM:
  5052                           	opt callstack 0
  5053  000001                     ??_ADCC_ThresholdISR:
  5054  000001                     
  5055                           ; 1 bytes @ 0x0
  5056  000001                     	ds	5
  5057  000006                     ??_TMR6_ISR:
  5058                           
  5059                           ; 1 bytes @ 0x5
  5060  000006                     	ds	1
  5061  000007                     ??_INT1_ISR:
  5062  000007                     
  5063                           ; 1 bytes @ 0x6
  5064  000007                     	ds	4
  5065  00000B                     ??_TMR5_ISR:
  5066                           
  5067                           ; 1 bytes @ 0xA
  5068  00000B                     	ds	31
  5069                           
  5070 ;;
  5071 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  5072 ;;
  5073 ;; *************** function _main *****************
  5074 ;; Defined at:
  5075 ;;		line 198 in file "main.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  esr_temp        4  [STACK] float 
  5080 ;;  i_esr           2  [STACK] unsigned short 
  5081 ;;  shape           1  [STACK] unsigned char 
  5082 ;;  inp_index       1  [STACK] unsigned char 
  5083 ;;  k               1  [STACK] unsigned char 
  5084 ;;  j               1  [STACK] unsigned char 
  5085 ;;  i               1  [STACK] unsigned char 
  5086 ;;  mode            1  [STACK] enum E17179
  5087 ;;  i_ror           1  [STACK] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1  [STACK] void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels required when called:   28
  5103 ;; This function calls:
  5104 ;;		_SYSTEM_Initialize
  5105 ;;		_StartTimer
  5106 ;;		_TimerDone
  5107 ;;		_WaitMs
  5108 ;;		___fladd
  5109 ;;		___flge
  5110 ;;		___fltol
  5111 ;;		_asctime
  5112 ;;		_calc_model_data
  5113 ;;		_calc_ror_data
  5114 ;;		_check_adc_scan
  5115 ;;		_check_enter_button
  5116 ;;		_check_help
  5117 ;;		_clear_adc_scan
  5118 ;;		_clear_hid_pflags
  5119 ;;		_conv_raw_result
  5120 ;;		_convert_adc_data
  5121 ;;		_current_sensor_cal
  5122 ;;		_display_history
  5123 ;;		_eaDogM_WriteCommand
  5124 ;;		_esr_check
  5125 ;;		_fabsf
  5126 ;;		_get_raw_result
  5127 ;;		_get_switch
  5128 ;;		_get_vterm_ptr
  5129 ;;		_hid_display
  5130 ;;		_init_bsoc
  5131 ;;		_init_display
  5132 ;;		_init_port_dma
  5133 ;;		_load_hist_data
  5134 ;;		_localtime
  5135 ;;		_lp_filter
  5136 ;;		_mode_lamp_dim
  5137 ;;		_read_cal_data
  5138 ;;		_set_dac
  5139 ;;		_set_dac_a
  5140 ;;		_set_dac_b
  5141 ;;		_set_display_info
  5142 ;;		_set_hist_flag
  5143 ;;		_set_load_relay_one
  5144 ;;		_set_load_relay_two
  5145 ;;		_set_time
  5146 ;;		_set_vterm
  5147 ;;		_spinners
  5148 ;;		_sprintf
  5149 ;;		_srand
  5150 ;;		_start_adc_scan
  5151 ;;		_start_switch_handler
  5152 ;;		_static_soc
  5153 ;;		_time
  5154 ;;		_update_cal_data
  5155 ;;		_update_hist_data
  5156 ;;		_update_lcd
  5157 ;;		_wait_lcd_done
  5158 ;;		_write_cal_data
  5159 ;; This function is called by:
  5160 ;;		Startup code after reset
  5161 ;; This function uses a reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text0
  5165  010000                     __ptext0:
  5166                           	opt callstack 0
  5167  010000                     _main:
  5168                           	opt callstack 0
  5169                           
  5170                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5171  010000  0E11               	movlw	17
  5172  010002  26E1               	addwf	fsr1l,f,c
  5173  010004  0E00               	movlw	0
  5174  010006  22E2               	addwfc	fsr1h,f,c
  5175                           
  5176                           ;main.c: 200:  UI_STATES mode;;main.c: 201:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  5177                           ;stkvar	_inp_index @ sp[(-17)+11]
  5178                           
  5179                           ;incstack = 0
  5180  010008  0EFA               	movlw	-6
  5181  01000A  6AE3               	clrf	plusw1,c
  5182                           
  5183                           ;stkvar	_i @ sp[(-17)+14]
  5184  01000C  0EFD               	movlw	-3
  5185  01000E  6AE3               	clrf	plusw1,c
  5186                           
  5187                           ;stkvar	_j @ sp[(-17)+13]
  5188  010010  0EFC               	movlw	-4
  5189  010012  6AE3               	clrf	plusw1,c
  5190  010014  2AE3               	incf	plusw1,f,c
  5191                           
  5192                           ;stkvar	_k @ sp[(-17)+12]
  5193  010016  0EFB               	movlw	-5
  5194  010018  6AE3               	clrf	plusw1,c
  5195  01001A  82E3               	bsf	plusw1,1,c
  5196                           
  5197                           ;main.c: 204:  SYSTEM_Initialize();
  5198  01001C  EC7F  F010         	call	_SYSTEM_Initialize	;wreg free
  5199                           
  5200                           ; BSR set to: 60
  5201                           ;main.c: 207:  (INTCON0bits.GIEH = 1);
  5202  010020  8ED2               	bsf	210,7,c	;volatile
  5203                           
  5204                           ; BSR set to: 60
  5205                           ;main.c: 210:  (INTCON0bits.GIEL = 1);
  5206  010022  8CD2               	bsf	210,6,c	;volatile
  5207                           
  5208                           ; BSR set to: 60
  5209                           ;main.c: 212:  V.ui_state = UI_STATE_INIT;
  5210  010024  0102               	movlb	2	; () banked
  5211  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5212                           
  5213                           ; BSR set to: 2
  5214                           ;main.c: 217:  WaitMs(300);
  5215  010028  0E2C               	movlw	44
  5216  01002A  6EE6               	movwf	postinc1,c
  5217  01002C  0E01               	movlw	1
  5218  01002E  6EE6               	movwf	postinc1,c
  5219  010030  EC57  F013         	call	_WaitMs	;wreg free
  5220                           
  5221                           ;main.c: 218:  if (PORTBbits.RB0) {
  5222  010034  A0CB               	btfss	203,0,c	;volatile
  5223  010036  D004               	goto	l17691
  5224                           
  5225                           ;main.c: 219:   mode = UI_STATE_HOST;
  5226                           ;stkvar	_mode @ sp[(-17)+15]
  5227  010038  0EFE               	movlw	-2
  5228  01003A  6AE3               	clrf	plusw1,c
  5229  01003C  2AE3               	incf	plusw1,f,c
  5230                           
  5231                           ;main.c: 220:  } else {
  5232  01003E  D004               	goto	l17693
  5233  010040                     l17691:
  5234                           
  5235                           ;main.c: 221:   mode = UI_STATE_LOG;
  5236                           ;stkvar	_mode @ sp[(-17)+15]
  5237  010040  0EFE               	movlw	-2
  5238  010042  6AE3               	clrf	plusw1,c
  5239  010044  80E3               	bsf	plusw1,0,c
  5240  010046  82E3               	bsf	plusw1,1,c	;indir
  5241  010048                     l17693:
  5242                           
  5243                           ;main.c: 224:  if (mode == UI_STATE_HOST) {
  5244                           ;stkvar	_mode @ sp[(-17)+15]
  5245  010048  0EFE               	movlw	-2
  5246  01004A  04E3               	decf	plusw1,w,c
  5247  01004C  A4D8               	btfss	status,2,c
  5248  01004E  D007               	goto	l1459
  5249                           
  5250                           ;main.c: 225:   do { LATDbits.LATD0 = 1; } while(0);
  5251  010050  80BD               	bsf	189,0,c	;volatile
  5252                           
  5253                           ;main.c: 226:   V.mode_pwm = 70;
  5254  010052  0E00               	movlw	0
  5255  010054  0102               	movlb	2	; () banked
  5256  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5257  010058  0E46               	movlw	70
  5258  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5259                           
  5260                           ;main.c: 227:  } else {
  5261  01005C  D004               	goto	l17697
  5262  01005E                     l1459:
  5263  01005E  90BD               	bcf	189,0,c	;volatile
  5264                           
  5265                           ;main.c: 229:   V.mode_pwm = 0;
  5266  010060  0102               	movlb	2	; () banked
  5267  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5268  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5269  010066                     l17697:
  5270                           
  5271                           ; BSR set to: 2
  5272                           ;main.c: 231:  mode_lamp_dim(V.mode_pwm);
  5273  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5274  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5275  010072  EC03  F017         	call	_mode_lamp_dim	;wreg free
  5276  010076  EF66  F084         	goto	l17855
  5277  01007A                     l17699:
  5278                           
  5279                           ; BSR set to: 2
  5280                           ;main.c: 239:    init_port_dma();
  5281  01007A  ECF3  F013         	call	_init_port_dma	;wreg free
  5282                           
  5283                           ; BSR set to: 59
  5284                           ;main.c: 241:    init_display();
  5285  01007E  EC41  F003         	call	_init_display	;wreg free
  5286                           
  5287                           ; BSR set to: 61
  5288                           ;main.c: 242:    eaDogM_WriteCommand(0b00001100);
  5289  010082  0E0C               	movlw	12
  5290  010084  6EE6               	movwf	postinc1,c
  5291  010086  EC8B  F017         	call	_eaDogM_WriteCommand	;wreg free
  5292                           
  5293                           ; BSR set to: 61
  5294                           ;main.c: 243:    set_dac();
  5295  01008A  EC63  F006         	call	_set_dac	;wreg free
  5296                           
  5297                           ;main.c: 247:    set_load_relay_one(1);
  5298  01008E  0E01               	movlw	1
  5299  010090  6EE6               	movwf	postinc1,c
  5300  010092  EC6B  F017         	call	_set_load_relay_one	;wreg free
  5301                           
  5302                           ;main.c: 248:    set_load_relay_two(1);
  5303  010096  0E01               	movlw	1
  5304  010098  6EE6               	movwf	postinc1,c
  5305  01009A  EC63  F017         	call	_set_load_relay_two	;wreg free
  5306                           
  5307                           ;main.c: 250:    V.ui_state = mode;
  5308                           ;stkvar	_mode @ sp[(-17)+15]
  5309  01009E  0EFE               	movlw	-2
  5310  0100A0  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5311                           
  5312                           ;main.c: 251:    srand(1957);
  5313  0100A6  0EA5               	movlw	165
  5314  0100A8  6EE6               	movwf	postinc1,c
  5315  0100AA  0E07               	movlw	7
  5316  0100AC  6EE6               	movwf	postinc1,c
  5317  0100AE  EC72  F013         	call	_srand	;wreg free
  5318                           
  5319                           ; BSR set to: 2
  5320                           ;main.c: 252:    set_vterm(0);
  5321  0100B2  0E00               	movlw	0
  5322  0100B4  6EE6               	movwf	postinc1,c
  5323  0100B6  ECCB  F016         	call	_set_vterm	;wreg free
  5324                           
  5325                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5326  0100BA  0EF5               	movlw	low STR_1
  5327  0100BC  6EE6               	movwf	postinc1,c
  5328  0100BE  0EFE               	movlw	high STR_1
  5329  0100C0  6EE6               	movwf	postinc1,c
  5330  0100C2  0E00               	movlw	0
  5331  0100C4  6EE6               	movwf	postinc1,c
  5332  0100C6  0E00               	movlw	0
  5333  0100C8  6EE6               	movwf	postinc1,c
  5334  0100CA  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5335  0100CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5336  0100D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5337  0100DA  0E04               	movlw	4
  5338  0100DC  6EE6               	movwf	postinc1,c
  5339  0100DE  EC5B  F000         	call	_sprintf	;wreg free
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.26");
  5343  0100E2  0ED5               	movlw	low STR_3
  5344  0100E4  6EE6               	movwf	postinc1,c
  5345  0100E6  0EFF               	movlw	high STR_3
  5346  0100E8  6EE6               	movwf	postinc1,c
  5347  0100EA  0ECB               	movlw	low STR_2
  5348  0100EC  6EE6               	movwf	postinc1,c
  5349  0100EE  0EFE               	movlw	high STR_2
  5350  0100F0  6EE6               	movwf	postinc1,c
  5351  0100F2  0E00               	movlw	0
  5352  0100F4  6EE6               	movwf	postinc1,c
  5353  0100F6  0E01               	movlw	1
  5354  0100F8  6EE6               	movwf	postinc1,c
  5355  0100FA  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5356  0100FE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5357  010104  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5358  01010A  0E06               	movlw	6
  5359  01010C  6EE6               	movwf	postinc1,c
  5360  01010E  EC5B  F000         	call	_sprintf	;wreg free
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5364  010112  0EA1               	movlw	low STR_4
  5365  010114  6EE6               	movwf	postinc1,c
  5366  010116  0EFE               	movlw	high STR_4
  5367  010118  6EE6               	movwf	postinc1,c
  5368  01011A  0E00               	movlw	0
  5369  01011C  6EE6               	movwf	postinc1,c
  5370  01011E  0E02               	movlw	2
  5371  010120  6EE6               	movwf	postinc1,c
  5372  010122  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5373  010126  0060  F0AB  FFE6   	movff	btemp,postinc1
  5374  01012C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5375  010132  0E04               	movlw	4
  5376  010134  6EE6               	movwf	postinc1,c
  5377  010136  EC5B  F000         	call	_sprintf	;wreg free
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;main.c: 256:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5381  01013A  0E25               	movlw	low (STR_16+2)
  5382  01013C  6EE6               	movwf	postinc1,c
  5383  01013E  0EFB               	movlw	high (STR_16+2)
  5384  010140  6EE6               	movwf	postinc1,c
  5385  010142  0E00               	movlw	0
  5386  010144  6EE6               	movwf	postinc1,c
  5387  010146  0E03               	movlw	3
  5388  010148  6EE6               	movwf	postinc1,c
  5389  01014A  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5390  01014E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5391  010154  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5392  01015A  0E04               	movlw	4
  5393  01015C  6EE6               	movwf	postinc1,c
  5394  01015E  EC5B  F000         	call	_sprintf	;wreg free
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;main.c: 257:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5398  010162  0E25               	movlw	low (STR_16+2)
  5399  010164  6EE6               	movwf	postinc1,c
  5400  010166  0EFB               	movlw	high (STR_16+2)
  5401  010168  6EE6               	movwf	postinc1,c
  5402  01016A  0E02               	movlw	2
  5403  01016C  6EE6               	movwf	postinc1,c
  5404  01016E  0E00               	movlw	0
  5405  010170  6EE6               	movwf	postinc1,c
  5406  010172  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5407  010176  0060  F0AB  FFE6   	movff	btemp,postinc1
  5408  01017C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5409  010182  0E04               	movlw	4
  5410  010184  6EE6               	movwf	postinc1,c
  5411  010186  EC5B  F000         	call	_sprintf	;wreg free
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;main.c: 258:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5415  01018A  0E25               	movlw	low (STR_16+2)
  5416  01018C  6EE6               	movwf	postinc1,c
  5417  01018E  0EFB               	movlw	high (STR_16+2)
  5418  010190  6EE6               	movwf	postinc1,c
  5419  010192  0E02               	movlw	2
  5420  010194  6EE6               	movwf	postinc1,c
  5421  010196  0E01               	movlw	1
  5422  010198  6EE6               	movwf	postinc1,c
  5423  01019A  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5424  01019E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5425  0101A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5426  0101AA  0E04               	movlw	4
  5427  0101AC  6EE6               	movwf	postinc1,c
  5428  0101AE  EC5B  F000         	call	_sprintf	;wreg free
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;main.c: 259:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5432  0101B2  0E25               	movlw	low (STR_16+2)
  5433  0101B4  6EE6               	movwf	postinc1,c
  5434  0101B6  0EFB               	movlw	high (STR_16+2)
  5435  0101B8  6EE6               	movwf	postinc1,c
  5436  0101BA  0E02               	movlw	2
  5437  0101BC  6EE6               	movwf	postinc1,c
  5438  0101BE  0E02               	movlw	2
  5439  0101C0  6EE6               	movwf	postinc1,c
  5440  0101C2  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5441  0101C6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5442  0101CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5443  0101D2  0E04               	movlw	4
  5444  0101D4  6EE6               	movwf	postinc1,c
  5445  0101D6  EC5B  F000         	call	_sprintf	;wreg free
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;main.c: 260:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5449  0101DA  0E25               	movlw	low (STR_16+2)
  5450  0101DC  6EE6               	movwf	postinc1,c
  5451  0101DE  0EFB               	movlw	high (STR_16+2)
  5452  0101E0  6EE6               	movwf	postinc1,c
  5453  0101E2  0E02               	movlw	2
  5454  0101E4  6EE6               	movwf	postinc1,c
  5455  0101E6  0E03               	movlw	3
  5456  0101E8  6EE6               	movwf	postinc1,c
  5457  0101EA  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5458  0101EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5459  0101F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5460  0101FA  0E04               	movlw	4
  5461  0101FC  6EE6               	movwf	postinc1,c
  5462  0101FE  EC5B  F000         	call	_sprintf	;wreg free
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;main.c: 261:    update_lcd(0);
  5466  010202  0E00               	movlw	0
  5467  010204  6EE6               	movwf	postinc1,c
  5468  010206  EC4B  F0F8         	call	_update_lcd	;wreg free
  5469                           
  5470                           ;main.c: 262:    WaitMs(1000);
  5471  01020A  0EE8               	movlw	232
  5472  01020C  6EE6               	movwf	postinc1,c
  5473  01020E  0E03               	movlw	3
  5474  010210  6EE6               	movwf	postinc1,c
  5475  010212  EC57  F013         	call	_WaitMs	;wreg free
  5476                           
  5477                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  5478  010216  0EFA               	movlw	250
  5479  010218  6EE6               	movwf	postinc1,c
  5480  01021A  0E00               	movlw	0
  5481  01021C  6EE6               	movwf	postinc1,c
  5482  01021E  0E0A               	movlw	10
  5483  010220  6EE6               	movwf	postinc1,c
  5484  010222  EC49  F012         	call	_StartTimer	;wreg free
  5485                           
  5486                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  5487  010226  0EC8               	movlw	200
  5488  010228  6EE6               	movwf	postinc1,c
  5489  01022A  0E00               	movlw	0
  5490  01022C  6EE6               	movwf	postinc1,c
  5491  01022E  0E01               	movlw	1
  5492  010230  6EE6               	movwf	postinc1,c
  5493  010232  EC49  F012         	call	_StartTimer	;wreg free
  5494                           
  5495                           ;main.c: 265:    StartTimer(TMR_INFO, 3000);
  5496  010236  0EB8               	movlw	184
  5497  010238  6EE6               	movwf	postinc1,c
  5498  01023A  0E0B               	movlw	11
  5499  01023C  6EE6               	movwf	postinc1,c
  5500  01023E  0E07               	movlw	7
  5501  010240  6EE6               	movwf	postinc1,c
  5502  010242  EC49  F012         	call	_StartTimer	;wreg free
  5503                           
  5504                           ;main.c: 266:    StartTimer(TMR_FLIPPER, 1500);
  5505  010246  0EDC               	movlw	220
  5506  010248  6EE6               	movwf	postinc1,c
  5507  01024A  0E05               	movlw	5
  5508  01024C  6EE6               	movwf	postinc1,c
  5509  01024E  0E0B               	movlw	11
  5510  010250  6EE6               	movwf	postinc1,c
  5511  010252  EC49  F012         	call	_StartTimer	;wreg free
  5512                           
  5513                           ;main.c: 267:    StartTimer(TMR_HELPDIS, 3000);
  5514  010256  0EB8               	movlw	184
  5515  010258  6EE6               	movwf	postinc1,c
  5516  01025A  0E0B               	movlw	11
  5517  01025C  6EE6               	movwf	postinc1,c
  5518  01025E  0E09               	movlw	9
  5519  010260  6EE6               	movwf	postinc1,c
  5520  010262  EC49  F012         	call	_StartTimer	;wreg free
  5521                           
  5522                           ;main.c: 269:    start_adc_scan();
  5523  010266  EC61  F00E         	call	_start_adc_scan	;wreg free
  5524                           
  5525                           ;main.c: 270:    start_switch_handler();
  5526  01026A  EC8D  F016         	call	_start_switch_handler	;wreg free
  5527                           
  5528                           ; BSR set to: 57
  5529                           ;main.c: 271:    WaitMs(1000);
  5530  01026E  0EE8               	movlw	232
  5531  010270  6EE6               	movwf	postinc1,c
  5532  010272  0E03               	movlw	3
  5533  010274  6EE6               	movwf	postinc1,c
  5534  010276  EC57  F013         	call	_WaitMs	;wreg free
  5535                           
  5536                           ;main.c: 276:    if (read_cal_data()) {
  5537  01027A  EC51  F0EE         	call	_read_cal_data	;wreg free
  5538  01027E  502A               	movf	btemp^0,w,c
  5539  010280  B4D8               	btfsc	status,2,c
  5540  010282  D07C               	goto	l17765
  5541                           
  5542                           ;main.c: 277:     update_cal_data();
  5543  010284  ECDB  F00F         	call	_update_cal_data	;wreg free
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;main.c: 278:     if (update_hist_data(1, &C.hist[0]) && (C.hist[0].pclock > time(((void
      +                          *)0))))
  5547  010288  0EB8               	movlw	low (_C+185)
  5548  01028A  6EE6               	movwf	postinc1,c
  5549  01028C  0E09               	movlw	high (_C+185)
  5550  01028E  6EE6               	movwf	postinc1,c
  5551  010290  0E01               	movlw	1
  5552  010292  6EE6               	movwf	postinc1,c
  5553  010294  EC05  F00C         	call	_update_hist_data	;wreg free
  5554  010298  502A               	movf	btemp^0,w,c
  5555  01029A  B4D8               	btfsc	status,2,c
  5556  01029C  D05A               	goto	l17763
  5557  01029E  0E00               	movlw	0
  5558  0102A0  6EE6               	movwf	postinc1,c
  5559  0102A2  0E00               	movlw	0
  5560  0102A4  6EE6               	movwf	postinc1,c
  5561  0102A6  EC25  F00F         	call	_time	;wreg free
  5562  0102AA  52E5               	movf	postdec1,f,c
  5563  0102AC  006F FF9C  F041    	movff	indf1,btemp+23
  5564  0102B2  52E5               	movf	postdec1,f,c
  5565  0102B4  006F FF9C  F040    	movff	indf1,btemp+22
  5566  0102BA  52E5               	movf	postdec1,f,c
  5567  0102BC  006F FF9C  F03F    	movff	indf1,btemp+21
  5568  0102C2  52E5               	movf	postdec1,f,c
  5569  0102C4  006F FF9C  F03E    	movff	indf1,btemp+20
  5570  0102CA  52E5               	movf	postdec1,f,c
  5571  0102CC  006F FF9C  F03D    	movff	indf1,btemp+19
  5572  0102D2  52E5               	movf	postdec1,f,c
  5573  0102D4  006F FF9C  F03C    	movff	indf1,btemp+18
  5574  0102DA  52E5               	movf	postdec1,f,c
  5575  0102DC  006F FF9C  F03B    	movff	indf1,btemp+17
  5576  0102E2  52E5               	movf	postdec1,f,c
  5577  0102E4  006F FF9C  F03A    	movff	indf1,btemp+16
  5578  0102EA  EE22  F1B9         	lfsr	2,_C+186	;volatile
  5579  0102EE  50DE               	movf	postinc2,w,c
  5580  0102F0  5C3A               	subwf	(btemp+16)^0,w,c
  5581  0102F2  50DE               	movf	postinc2,w,c
  5582  0102F4  583B               	subwfb	(btemp+17)^0,w,c
  5583  0102F6  50DE               	movf	postinc2,w,c
  5584  0102F8  583C               	subwfb	(btemp+18)^0,w,c
  5585  0102FA  50DE               	movf	postinc2,w,c
  5586  0102FC  583D               	subwfb	(btemp+19)^0,w,c
  5587  0102FE  50DE               	movf	postinc2,w,c
  5588  010300  583E               	subwfb	(btemp+20)^0,w,c
  5589  010302  50DE               	movf	postinc2,w,c
  5590  010304  583F               	subwfb	(btemp+21)^0,w,c
  5591  010306  50DE               	movf	postinc2,w,c
  5592  010308  5840               	subwfb	(btemp+22)^0,w,c
  5593  01030A  5041               	movf	(btemp+23)^0,w,c
  5594  01030C  0A80               	xorlw	128
  5595  01030E  6E2A               	movwf	btemp^0,c
  5596  010310  50DE               	movf	postinc2,w,c
  5597  010312  0A80               	xorlw	128
  5598  010314  582A               	subwfb	btemp^0,w,c
  5599  010316  B0D8               	btfsc	status,0,c
  5600  010318  D01C               	goto	l17763
  5601                           
  5602                           ; BSR set to: 57
  5603                           ;main.c: 279:      set_time(C.hist[0].pclock);
  5604  01031A  EE22  F1B9         	lfsr	2,_C+186	;volatile
  5605  01031E  006F FF7B FFE6     	movff	postinc2,postinc1
  5606  010324  006F FF7B FFE6     	movff	postinc2,postinc1
  5607  01032A  006F FF7B FFE6     	movff	postinc2,postinc1
  5608  010330  006F FF7B FFE6     	movff	postinc2,postinc1
  5609  010336  006F FF7B FFE6     	movff	postinc2,postinc1
  5610  01033C  006F FF7B FFE6     	movff	postinc2,postinc1
  5611  010342  006F FF7B FFE6     	movff	postinc2,postinc1
  5612  010348  006F FF7B FFE6     	movff	postinc2,postinc1
  5613  01034E  EC3C  F013         	call	_set_time	;wreg free
  5614  010352                     l17763:
  5615                           
  5616                           ;main.c: 281:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5617  010352  0E1F               	movlw	low STR_10
  5618  010354  6EE6               	movwf	postinc1,c
  5619  010356  0EFF               	movlw	high STR_10
  5620  010358  6EE6               	movwf	postinc1,c
  5621  01035A  0E00               	movlw	0
  5622  01035C  6EE6               	movwf	postinc1,c
  5623  01035E  0E02               	movlw	2
  5624  010360  6EE6               	movwf	postinc1,c
  5625  010362  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5626  010366  0060  F0AB  FFE6   	movff	btemp,postinc1
  5627  01036C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5628  010372  0E04               	movlw	4
  5629  010374  6EE6               	movwf	postinc1,c
  5630  010376  EC5B  F000         	call	_sprintf	;wreg free
  5631                           
  5632                           ;main.c: 282:    } else {
  5633  01037A  D014               	goto	l1466
  5634  01037C                     l17765:
  5635                           
  5636                           ;main.c: 283:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5637  01037C  0E49               	movlw	low STR_11
  5638  01037E  6EE6               	movwf	postinc1,c
  5639  010380  0EFF               	movlw	high STR_11
  5640  010382  6EE6               	movwf	postinc1,c
  5641  010384  0E00               	movlw	0
  5642  010386  6EE6               	movwf	postinc1,c
  5643  010388  0E02               	movlw	2
  5644  01038A  6EE6               	movwf	postinc1,c
  5645  01038C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5646  010390  0060  F0AB  FFE6   	movff	btemp,postinc1
  5647  010396  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5648  01039C  0E04               	movlw	4
  5649  01039E  6EE6               	movwf	postinc1,c
  5650  0103A0  EC5B  F000         	call	_sprintf	;wreg free
  5651  0103A4                     l1466:
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;main.c: 285:    update_lcd(0);
  5655  0103A4  0E00               	movlw	0
  5656  0103A6  6EE6               	movwf	postinc1,c
  5657  0103A8  EC4B  F0F8         	call	_update_lcd	;wreg free
  5658                           
  5659                           ;main.c: 286:    WaitMs(2000);
  5660  0103AC  0ED0               	movlw	208
  5661  0103AE  6EE6               	movwf	postinc1,c
  5662  0103B0  0E07               	movlw	7
  5663  0103B2  6EE6               	movwf	postinc1,c
  5664  0103B4  EC57  F013         	call	_WaitMs	;wreg free
  5665                           
  5666                           ;main.c: 288:    i_ror = 1;
  5667                           ;stkvar	_i_ror @ sp[(-17)+16]
  5668  0103B8  0EFF               	movlw	-1
  5669  0103BA  6AE3               	clrf	plusw1,c
  5670  0103BC  2AE3               	incf	plusw1,f,c
  5671  0103BE                     l17771:
  5672                           
  5673                           ;main.c: 290:     calc_ror_data();
  5674  0103BE  EC41  F0F3         	call	_calc_ror_data	;wreg free
  5675                           
  5676                           ;main.c: 291:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  5677  0103C2  0E00               	movlw	0
  5678  0103C4  6EE6               	movwf	postinc1,c
  5679  0103C6  0E04               	movlw	4
  5680  0103C8  6EE6               	movwf	postinc1,c
  5681  0103CA  EC00  F0C9         	call	_conv_raw_result	;wreg free
  5682  0103CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5683  0103D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5684  0103DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5685  0103E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5686  0103E6  0EEB               	movlw	low STR_12
  5687  0103E8  6EE6               	movwf	postinc1,c
  5688  0103EA  0EFC               	movlw	high STR_12
  5689  0103EC  6EE6               	movwf	postinc1,c
  5690  0103EE  0E00               	movlw	0
  5691  0103F0  6EE6               	movwf	postinc1,c
  5692  0103F2  0E01               	movlw	1
  5693  0103F4  6EE6               	movwf	postinc1,c
  5694  0103F6  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5695  0103FA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5696  010400  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5697  010406  0E08               	movlw	8
  5698  010408  6EE6               	movwf	postinc1,c
  5699  01040A  EC5B  F000         	call	_sprintf	;wreg free
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;main.c: 292:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5703  01040E  EE22  F16B         	lfsr	2,_C+108	;volatile
  5704  010412  006F FF7B FFE6     	movff	postinc2,postinc1
  5705  010418  006F FF7B FFE6     	movff	postinc2,postinc1
  5706  01041E  006F FF7B FFE6     	movff	postinc2,postinc1
  5707  010424  006F FF7B FFE6     	movff	postinc2,postinc1
  5708                           
  5709                           ;stkvar	_i_ror @ sp[(-21)+16]
  5710  01042A  0EFB               	movlw	-5
  5711  01042C  50E3               	movf	plusw1,w,c
  5712  01042E  6EE6               	movwf	postinc1,c
  5713  010430  0E00               	movlw	0
  5714  010432  6EE6               	movwf	postinc1,c
  5715  010434  0E00               	movlw	0
  5716  010436  6EE6               	movwf	postinc1,c
  5717  010438  0E05               	movlw	5
  5718  01043A  6EE6               	movwf	postinc1,c
  5719  01043C  ECD7  F001         	call	_spinners	;wreg free
  5720  010440  502A               	movf	btemp^0,w,c
  5721  010442  6EE6               	movwf	postinc1,c
  5722  010444  0E00               	movlw	0
  5723  010446  6EE6               	movwf	postinc1,c
  5724  010448  0E91               	movlw	low STR_13
  5725  01044A  6EE6               	movwf	postinc1,c
  5726  01044C  0EFA               	movlw	high STR_13
  5727  01044E  6EE6               	movwf	postinc1,c
  5728  010450  0E00               	movlw	0
  5729  010452  6EE6               	movwf	postinc1,c
  5730  010454  0E02               	movlw	2
  5731  010456  6EE6               	movwf	postinc1,c
  5732  010458  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5733  01045C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5734  010462  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5735  010468  0E0C               	movlw	12
  5736  01046A  6EE6               	movwf	postinc1,c
  5737  01046C  EC5B  F000         	call	_sprintf	;wreg free
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;main.c: 293:     update_lcd(0);
  5741  010470  0E00               	movlw	0
  5742  010472  6EE6               	movwf	postinc1,c
  5743  010474  EC4B  F0F8         	call	_update_lcd	;wreg free
  5744                           
  5745                           ;main.c: 294:     clear_adc_scan();
  5746  010478  ECED  F017         	call	_clear_adc_scan	;wreg free
  5747                           
  5748                           ; BSR set to: 1
  5749                           ;main.c: 295:     start_adc_scan();
  5750  01047C  EC61  F00E         	call	_start_adc_scan	;wreg free
  5751                           
  5752                           ;main.c: 296:     WaitMs(2000);
  5753  010480  0ED0               	movlw	208
  5754  010482  6EE6               	movwf	postinc1,c
  5755  010484  0E07               	movlw	7
  5756  010486  6EE6               	movwf	postinc1,c
  5757  010488  EC57  F013         	call	_WaitMs	;wreg free
  5758                           
  5759                           ;main.c: 299:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5760                           ;stkvar	_i_ror @ sp[(-17)+16]
  5761  01048C  0EFF               	movlw	-1
  5762  01048E  006F FF8C  F035    	movff	plusw1,btemp+11
  5763  010494  2A35               	incf	(btemp+11)^0,f,c
  5764  010496  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5765  01049C  0635               	decf	(btemp+11)^0,f,c
  5766  01049E  0E1E               	movlw	30
  5767  0104A0  6035               	cpfslt	(btemp+11)^0,c
  5768  0104A2  D01A               	goto	u17310
  5769  0104A4  EE22  F16B         	lfsr	2,_C+108	;volatile
  5770  0104A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5771  0104AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5772  0104B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5773  0104BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5774  0104C0  0E42               	movlw	66
  5775  0104C2  6EE6               	movwf	postinc1,c
  5776  0104C4  0E60               	movlw	96
  5777  0104C6  6EE6               	movwf	postinc1,c
  5778  0104C8  0E65               	movlw	101
  5779  0104CA  6EE6               	movwf	postinc1,c
  5780  0104CC  0E3C               	movlw	60
  5781  0104CE  6EE6               	movwf	postinc1,c
  5782  0104D0  ECE9  F0F6         	call	___flge	;wreg free
  5783  0104D4  A02A               	btfss	btemp& (0+255),0,c
  5784  0104D6  D773               	goto	l17771
  5785  0104D8                     u17310:
  5786                           
  5787                           ;main.c: 301:    static_soc();
  5788  0104D8  EC54  F00F         	call	_static_soc	;wreg free
  5789                           
  5790                           ;main.c: 302:    init_bsoc();
  5791  0104DC  ECAB  F0E5         	call	_init_bsoc	;wreg free
  5792                           
  5793                           ;main.c: 303:    set_load_relay_one(0);
  5794  0104E0  0E00               	movlw	0
  5795  0104E2  6EE6               	movwf	postinc1,c
  5796  0104E4  EC6B  F017         	call	_set_load_relay_one	;wreg free
  5797                           
  5798                           ;main.c: 304:    set_load_relay_two(0);
  5799  0104E8  0E00               	movlw	0
  5800  0104EA  6EE6               	movwf	postinc1,c
  5801  0104EC  EC63  F017         	call	_set_load_relay_two	;wreg free
  5802                           
  5803                           ;main.c: 305:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  5804  0104F0  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5805  0104F4  006F FF78  F034    	movff	postinc2,btemp+10
  5806  0104FA  006F FF74  F035    	movff	postdec2,btemp+11
  5807  010500  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5808  010506  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5809  01050C  0E51               	movlw	low STR_14
  5810  01050E  6EE6               	movwf	postinc1,c
  5811  010510  0EFB               	movlw	high STR_14
  5812  010512  6EE6               	movwf	postinc1,c
  5813  010514  0E00               	movlw	0
  5814  010516  6EE6               	movwf	postinc1,c
  5815  010518  0E00               	movlw	0
  5816  01051A  6EE6               	movwf	postinc1,c
  5817  01051C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5818  010520  0060  F0AB  FFE6   	movff	btemp,postinc1
  5819  010526  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5820  01052C  0E06               	movlw	6
  5821  01052E  6EE6               	movwf	postinc1,c
  5822  010530  EC5B  F000         	call	_sprintf	;wreg free
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;main.c: 306:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  5826  010534  EE22  F18F         	lfsr	2,_C+144	;volatile
  5827  010538  006F FF7B FFE6     	movff	postinc2,postinc1
  5828  01053E  006F FF7B FFE6     	movff	postinc2,postinc1
  5829  010544  006F FF7B FFE6     	movff	postinc2,postinc1
  5830  01054A  006F FF7B FFE6     	movff	postinc2,postinc1
  5831  010550  0E37               	movlw	low STR_15
  5832  010552  6EE6               	movwf	postinc1,c
  5833  010554  0EFC               	movlw	high STR_15
  5834  010556  6EE6               	movwf	postinc1,c
  5835  010558  0E00               	movlw	0
  5836  01055A  6EE6               	movwf	postinc1,c
  5837  01055C  0E01               	movlw	1
  5838  01055E  6EE6               	movwf	postinc1,c
  5839  010560  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5840  010564  0060  F0AB  FFE6   	movff	btemp,postinc1
  5841  01056A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5842  010570  0E08               	movlw	8
  5843  010572  6EE6               	movwf	postinc1,c
  5844  010574  EC5B  F000         	call	_sprintf	;wreg free
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;main.c: 307:    sprintf(get_vterm_ptr(2, 0), "                      ");
  5848  010578  0E23               	movlw	low STR_16
  5849  01057A  6EE6               	movwf	postinc1,c
  5850  01057C  0EFB               	movlw	high STR_16
  5851  01057E  6EE6               	movwf	postinc1,c
  5852  010580  0E00               	movlw	0
  5853  010582  6EE6               	movwf	postinc1,c
  5854  010584  0E02               	movlw	2
  5855  010586  6EE6               	movwf	postinc1,c
  5856  010588  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5857  01058C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5858  010592  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5859  010598  0E04               	movlw	4
  5860  01059A  6EE6               	movwf	postinc1,c
  5861  01059C  EC5B  F000         	call	_sprintf	;wreg free
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;main.c: 308:    update_lcd(0);
  5865  0105A0  0E00               	movlw	0
  5866  0105A2  6EE6               	movwf	postinc1,c
  5867  0105A4  EC4B  F0F8         	call	_update_lcd	;wreg free
  5868                           
  5869                           ;main.c: 309:    WaitMs(2000);
  5870  0105A8  0ED0               	movlw	208
  5871  0105AA  6EE6               	movwf	postinc1,c
  5872  0105AC  0E07               	movlw	7
  5873  0105AE  6EE6               	movwf	postinc1,c
  5874  0105B0  EC57  F013         	call	_WaitMs	;wreg free
  5875                           
  5876                           ;main.c: 310:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  5877  0105B4  0E17               	movlw	low STR_17
  5878  0105B6  6EE6               	movwf	postinc1,c
  5879  0105B8  0EFD               	movlw	high STR_17
  5880  0105BA  6EE6               	movwf	postinc1,c
  5881  0105BC  0E00               	movlw	0
  5882  0105BE  6EE6               	movwf	postinc1,c
  5883  0105C0  0E00               	movlw	0
  5884  0105C2  6EE6               	movwf	postinc1,c
  5885  0105C4  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5886  0105C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5887  0105CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5888  0105D4  0E04               	movlw	4
  5889  0105D6  6EE6               	movwf	postinc1,c
  5890  0105D8  EC5B  F000         	call	_sprintf	;wreg free
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;main.c: 311:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  5894  0105DC  0E2D               	movlw	low STR_18
  5895  0105DE  6EE6               	movwf	postinc1,c
  5896  0105E0  0EFD               	movlw	high STR_18
  5897  0105E2  6EE6               	movwf	postinc1,c
  5898  0105E4  0E00               	movlw	0
  5899  0105E6  6EE6               	movwf	postinc1,c
  5900  0105E8  0E01               	movlw	1
  5901  0105EA  6EE6               	movwf	postinc1,c
  5902  0105EC  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5903  0105F0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5904  0105F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5905  0105FC  0E04               	movlw	4
  5906  0105FE  6EE6               	movwf	postinc1,c
  5907  010600  EC5B  F000         	call	_sprintf	;wreg free
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;main.c: 312:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  5911  010604  0E09               	movlw	low STR_19
  5912  010606  6EE6               	movwf	postinc1,c
  5913  010608  0EFE               	movlw	high STR_19
  5914  01060A  6EE6               	movwf	postinc1,c
  5915  01060C  0E00               	movlw	0
  5916  01060E  6EE6               	movwf	postinc1,c
  5917  010610  0E02               	movlw	2
  5918  010612  6EE6               	movwf	postinc1,c
  5919  010614  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5920  010618  0060  F0AB  FFE6   	movff	btemp,postinc1
  5921  01061E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5922  010624  0E04               	movlw	4
  5923  010626  6EE6               	movwf	postinc1,c
  5924  010628  EC5B  F000         	call	_sprintf	;wreg free
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;main.c: 313:    update_lcd(0);
  5928  01062C  0E00               	movlw	0
  5929  01062E  6EE6               	movwf	postinc1,c
  5930  010630  EC4B  F0F8         	call	_update_lcd	;wreg free
  5931                           
  5932                           ;main.c: 314:    uint16_t i_esr = 1;
  5933  010634  0E01               	movlw	1
  5934  010636  6E34               	movwf	(btemp+10)^0,c
  5935  010638  0E00               	movlw	0
  5936  01063A  6E35               	movwf	(btemp+11)^0,c
  5937                           
  5938                           ;stkvar	_i_esr @ sp[(-17)+8]
  5939  01063C  0EF7               	movlw	-9
  5940  01063E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5941  010644  0EF8               	movlw	-8
  5942  010646  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5943                           
  5944                           ;main.c: 316:    float esr_temp;;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5945  01064C  D06D               	goto	l17831
  5946  01064E                     l17819:
  5947                           
  5948                           ;main.c: 318:     WaitMs(110);
  5949  01064E  0E6E               	movlw	110
  5950  010650  6EE6               	movwf	postinc1,c
  5951  010652  0E00               	movlw	0
  5952  010654  6EE6               	movwf	postinc1,c
  5953  010656  EC57  F013         	call	_WaitMs	;wreg free
  5954                           
  5955                           ;main.c: 319:     shape = (uint8_t) fabsf(esr_temp);
  5956                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5957  01065A  0EF3               	movlw	-13
  5958  01065C  006F FF8F FFE6     	movff	plusw1,postinc1
  5959  010662  006F FF8F FFE6     	movff	plusw1,postinc1
  5960  010668  006F FF8F FFE6     	movff	plusw1,postinc1
  5961  01066E  006F FF8F FFE6     	movff	plusw1,postinc1
  5962  010674  ECBE  F006         	call	_fabsf	;wreg free
  5963  010678  0060  F0AB  FFE6   	movff	btemp,postinc1
  5964  01067E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5965  010684  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5966  01068A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5967  010690  EC7D  F0F5         	call	___fltol	;wreg free
  5968  010694  0060  F0A8  F035   	movff	btemp,btemp+11
  5969                           
  5970                           ;stkvar	_shape @ sp[(-17)+10]
  5971  01069A  0EF9               	movlw	-7
  5972  01069C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5973                           
  5974                           ;main.c: 320:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  5975  0106A2  0E00               	movlw	0
  5976  0106A4  6EE6               	movwf	postinc1,c
  5977                           
  5978                           ;stkvar	_shape @ sp[(-18)+10]
  5979  0106A6  0EF8               	movlw	-8
  5980  0106A8  50E3               	movf	plusw1,w,c
  5981  0106AA  6EE6               	movwf	postinc1,c
  5982  0106AC  ECD7  F001         	call	_spinners	;wreg free
  5983  0106B0  502A               	movf	btemp^0,w,c
  5984  0106B2  6EE6               	movwf	postinc1,c
  5985  0106B4  0E00               	movlw	0
  5986  0106B6  6EE6               	movwf	postinc1,c
  5987  0106B8  0E00               	movlw	0
  5988  0106BA  6EE6               	movwf	postinc1,c
  5989  0106BC  0E00               	movlw	0
  5990  0106BE  6EE6               	movwf	postinc1,c
  5991  0106C0  ECD7  F001         	call	_spinners	;wreg free
  5992  0106C4  502A               	movf	btemp^0,w,c
  5993  0106C6  6EE6               	movwf	postinc1,c
  5994  0106C8  0E00               	movlw	0
  5995  0106CA  6EE6               	movwf	postinc1,c
  5996  0106CC  0EB1               	movlw	low STR_20
  5997  0106CE  6EE6               	movwf	postinc1,c
  5998  0106D0  0EFD               	movlw	high STR_20
  5999  0106D2  6EE6               	movwf	postinc1,c
  6000  0106D4  0E00               	movlw	0
  6001  0106D6  6EE6               	movwf	postinc1,c
  6002  0106D8  0E02               	movlw	2
  6003  0106DA  6EE6               	movwf	postinc1,c
  6004  0106DC  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6005  0106E0  0060  F0AB  FFE6   	movff	btemp,postinc1
  6006  0106E6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6007  0106EC  0E08               	movlw	8
  6008  0106EE  6EE6               	movwf	postinc1,c
  6009  0106F0  EC5B  F000         	call	_sprintf	;wreg free
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;main.c: 321:     update_lcd(0);
  6013  0106F4  0E00               	movlw	0
  6014  0106F6  6EE6               	movwf	postinc1,c
  6015  0106F8  EC4B  F0F8         	call	_update_lcd	;wreg free
  6016                           
  6017                           ;main.c: 323:     if (i_esr++ > 512)
  6018                           ;stkvar	_i_esr @ sp[(-17)+8]
  6019  0106FC  50E1               	movf	fsr1l,w,c
  6020  0106FE  0FF7               	addlw	-9
  6021  010700  6ED9               	movwf	fsr2l,c
  6022  010702  50E2               	movf	fsr1h,w,c
  6023  010704  6EDA               	movwf	fsr2h,c
  6024  010706  0EFF               	movlw	255
  6025  010708  22DA               	addwfc	fsr2h,f,c
  6026  01070A  006F FF7C  F034    	movff	indf2,btemp+10
  6027  010710  0E01               	movlw	1
  6028  010712  26DE               	addwf	postinc2,f,c
  6029  010714  006F FF7C  F035    	movff	indf2,btemp+11
  6030  01071A  0E00               	movlw	0
  6031  01071C  22DD               	addwfc	postdec2,f,c
  6032  01071E  0434               	decf	(btemp+10)^0,w,c
  6033  010720  0E02               	movlw	2
  6034  010722  5835               	subwfb	(btemp+11)^0,w,c
  6035  010724  B0D8               	btfsc	status,0,c
  6036  010726  D017               	goto	u17330
  6037  010728                     l17831:
  6038                           
  6039                           ;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0) {
  6040  010728  0E00               	movlw	0
  6041  01072A  6EE6               	movwf	postinc1,c
  6042  01072C  ECB9  F0DC         	call	_esr_check	;wreg free
  6043                           
  6044                           ;stkvar	_esr_temp @ sp[(-17)+4]
  6045  010730  0EF3               	movlw	-13
  6046  010732  0060  F0AB  FFE3   	movff	btemp,plusw1
  6047  010738  0EF4               	movlw	-12
  6048  01073A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  6049  010740  0EF5               	movlw	-11
  6050  010742  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  6051  010748  0EF6               	movlw	-10
  6052  01074A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  6053  010750  0EF6               	movlw	-10
  6054  010752  BEE3               	btfsc	plusw1,7,c
  6055  010754  D77C               	goto	l17819
  6056  010756                     u17330:
  6057                           
  6058                           ;main.c: 326:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  6059  010756  EE22  F187         	lfsr	2,_C+136	;volatile
  6060  01075A  006F FF7B FFE6     	movff	postinc2,postinc1
  6061  010760  006F FF7B FFE6     	movff	postinc2,postinc1
  6062  010766  006F FF7B FFE6     	movff	postinc2,postinc1
  6063  01076C  006F FF7B FFE6     	movff	postinc2,postinc1
  6064  010772  0E3A               	movlw	low STR_21
  6065  010774  6EE6               	movwf	postinc1,c
  6066  010776  0EFB               	movlw	high STR_21
  6067  010778  6EE6               	movwf	postinc1,c
  6068  01077A  0E00               	movlw	0
  6069  01077C  6EE6               	movwf	postinc1,c
  6070  01077E  0E00               	movlw	0
  6071  010780  6EE6               	movwf	postinc1,c
  6072  010782  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6073  010786  0060  F0AB  FFE6   	movff	btemp,postinc1
  6074  01078C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6075  010792  0E08               	movlw	8
  6076  010794  6EE6               	movwf	postinc1,c
  6077  010796  EC5B  F000         	call	_sprintf	;wreg free
  6078                           
  6079                           ;main.c: 327:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  6080  01079A  EE22  F219         	lfsr	2,_C+282	;volatile
  6081  01079E  006F FF7B FFE6     	movff	postinc2,postinc1
  6082  0107A4  006F FF7B FFE6     	movff	postinc2,postinc1
  6083  0107AA  006F FF7B FFE6     	movff	postinc2,postinc1
  6084  0107B0  006F FF7B FFE6     	movff	postinc2,postinc1
  6085  0107B6  EE22  F225         	lfsr	2,_C+294	;volatile
  6086  0107BA  006F FF7B FFE6     	movff	postinc2,postinc1
  6087  0107C0  006F FF7B FFE6     	movff	postinc2,postinc1
  6088  0107C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6089  0107CC  006F FF7B FFE6     	movff	postinc2,postinc1
  6090  0107D2  0E41               	movlw	low STR_22
  6091  0107D4  6EE6               	movwf	postinc1,c
  6092  0107D6  0EFA               	movlw	high STR_22
  6093  0107D8  6EE6               	movwf	postinc1,c
  6094  0107DA  0E00               	movlw	0
  6095  0107DC  6EE6               	movwf	postinc1,c
  6096  0107DE  0E01               	movlw	1
  6097  0107E0  6EE6               	movwf	postinc1,c
  6098  0107E2  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6099  0107E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6100  0107EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6101  0107F2  0E0C               	movlw	12
  6102  0107F4  6EE6               	movwf	postinc1,c
  6103  0107F6  EC5B  F000         	call	_sprintf	;wreg free
  6104                           
  6105                           ;main.c: 328:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  6106  0107FA  EE22  F21D         	lfsr	2,_C+286	;volatile
  6107  0107FE  006F FF7B FFE6     	movff	postinc2,postinc1
  6108  010804  006F FF7B FFE6     	movff	postinc2,postinc1
  6109  01080A  006F FF7B FFE6     	movff	postinc2,postinc1
  6110  010810  006F FF7B FFE6     	movff	postinc2,postinc1
  6111  010816  EE22  F229         	lfsr	2,_C+298	;volatile
  6112  01081A  006F FF7B FFE6     	movff	postinc2,postinc1
  6113  010820  006F FF7B FFE6     	movff	postinc2,postinc1
  6114  010826  006F FF7B FFE6     	movff	postinc2,postinc1
  6115  01082C  006F FF7B FFE6     	movff	postinc2,postinc1
  6116  010832  0E5C               	movlw	low STR_23
  6117  010834  6EE6               	movwf	postinc1,c
  6118  010836  0EFA               	movlw	high STR_23
  6119  010838  6EE6               	movwf	postinc1,c
  6120  01083A  0E00               	movlw	0
  6121  01083C  6EE6               	movwf	postinc1,c
  6122  01083E  0E02               	movlw	2
  6123  010840  6EE6               	movwf	postinc1,c
  6124  010842  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6125  010846  0060  F0AB  FFE6   	movff	btemp,postinc1
  6126  01084C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6127  010852  0E0C               	movlw	12
  6128  010854  6EE6               	movwf	postinc1,c
  6129  010856  EC5B  F000         	call	_sprintf	;wreg free
  6130                           
  6131                           ;main.c: 329:    update_lcd(0);
  6132  01085A  0E00               	movlw	0
  6133  01085C  6EE6               	movwf	postinc1,c
  6134  01085E  EC4B  F0F8         	call	_update_lcd	;wreg free
  6135                           
  6136                           ;main.c: 330:    WaitMs(4000);
  6137  010862  0EA0               	movlw	160
  6138  010864  6EE6               	movwf	postinc1,c
  6139  010866  0E0F               	movlw	15
  6140  010868  6EE6               	movwf	postinc1,c
  6141  01086A  EC57  F013         	call	_WaitMs	;wreg free
  6142                           
  6143                           ;main.c: 331:    V.sensor_set = get_switch(SCALIB);
  6144  01086E  0E04               	movlw	4
  6145  010870  6EE6               	movwf	postinc1,c
  6146  010872  EC6A  F014         	call	_get_switch	;wreg free
  6147  010876  502A               	movf	btemp^0,w,c
  6148  010878  B4D8               	btfsc	status,2,c
  6149  01087A  D002               	goto	u17340
  6150  01087C  0E01               	movlw	1
  6151  01087E  D001               	goto	u17350
  6152  010880                     u17340:
  6153  010880  0E00               	movlw	0
  6154  010882                     u17350:
  6155  010882  0102               	movlb	2	; () banked
  6156  010884  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  6157                           
  6158                           ; BSR set to: 2
  6159                           ;main.c: 332:    WaitMs(1000);
  6160  010886  0EE8               	movlw	232
  6161  010888  6EE6               	movwf	postinc1,c
  6162  01088A  0E03               	movlw	3
  6163  01088C  6EE6               	movwf	postinc1,c
  6164  01088E  EC57  F013         	call	_WaitMs	;wreg free
  6165                           
  6166                           ;main.c: 333:    if (V.sensor_set && get_switch(SCALIB)) {
  6167  010892  0102               	movlb	2	; () banked
  6168  010894  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6169  010896  B4D8               	btfsc	status,2,c
  6170  010898  D00F               	goto	l17849
  6171                           
  6172                           ; BSR set to: 2
  6173  01089A  0E04               	movlw	4
  6174  01089C  6EE6               	movwf	postinc1,c
  6175  01089E  EC6A  F014         	call	_get_switch	;wreg free
  6176  0108A2  502A               	movf	btemp^0,w,c
  6177  0108A4  B4D8               	btfsc	status,2,c
  6178  0108A6  D008               	goto	l17849
  6179                           
  6180                           ;main.c: 334:     current_sensor_cal();
  6181  0108A8  EC4C  F0A4         	call	_current_sensor_cal	;wreg free
  6182                           
  6183                           ;main.c: 335:     WaitMs(4000);
  6184  0108AC  0EA0               	movlw	160
  6185  0108AE  6EE6               	movwf	postinc1,c
  6186  0108B0  0E0F               	movlw	15
  6187  0108B2  6EE6               	movwf	postinc1,c
  6188  0108B4  EC57  F013         	call	_WaitMs	;wreg free
  6189  0108B8                     l17849:
  6190                           
  6191                           ;main.c: 337:    V.sensor_set = 0;
  6192  0108B8  0102               	movlb	2	; () banked
  6193  0108BA  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6194                           
  6195                           ; BSR set to: 2
  6196                           ;main.c: 338:    V.system_stable = 1;
  6197  0108BC  0E01               	movlw	1
  6198  0108BE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6199                           
  6200                           ;main.c: 339:    break;
  6201  0108C0  D01D               	goto	l17857
  6202  0108C2                     l1479:
  6203                           
  6204                           ; BSR set to: 2
  6205                           ;main.c: 345:    P.SYSTEM_STABLE = 1;
  6206  0108C2  0100               	movlb	0	; () banked
  6207  0108C4  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6208                           
  6209                           ;main.c: 346:    break;
  6210  0108C6  D01A               	goto	l17857
  6211  0108C8                     l1481:
  6212                           
  6213                           ; BSR set to: 2
  6214                           ;main.c: 349:    V.ui_state = UI_STATE_INIT;
  6215  0108C8  6B07               	clrf	_V& (0+255),b	;volatile
  6216                           
  6217                           ;main.c: 350:    break;
  6218  0108CA  D018               	goto	l17857
  6219  0108CC                     l17855:
  6220  0108CC  0102               	movlb	2	; () banked
  6221  0108CE  5107               	movf	_V& (0+255),w,b	;volatile
  6222  0108D0  6E34               	movwf	(btemp+10)^0,c
  6223  0108D2  6A35               	clrf	(btemp+11)^0,c
  6224                           
  6225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6226                           ; Switch size 1, requested type "simple"
  6227                           ; Number of cases is 1, Range of values is 0 to 0
  6228                           ; switch strategies available:
  6229                           ; Name         Instructions Cycles
  6230                           ; simple_byte            4     3 (average)
  6231                           ;	Chosen strategy is simple_byte
  6232  0108D4  5035               	movf	(btemp+11)^0,w,c
  6233  0108D6  0A00               	xorlw	0	; case 0
  6234  0108D8  A4D8               	btfss	status,2,c
  6235  0108DA  D7F6               	goto	l1481
  6236                           
  6237                           ; BSR set to: 2
  6238                           ; Switch size 1, requested type "simple"
  6239                           ; Number of cases is 5, Range of values is 0 to 5
  6240                           ; switch strategies available:
  6241                           ; Name         Instructions Cycles
  6242                           ; simple_byte           16     9 (average)
  6243                           ;	Chosen strategy is simple_byte
  6244  0108DC  5034               	movf	(btemp+10)^0,w,c
  6245  0108DE  0A00               	xorlw	0	; case 0
  6246  0108E0  B4D8               	btfsc	status,2,c
  6247  0108E2  EF3D  F080         	goto	l17699
  6248  0108E6  0A01               	xorlw	1	; case 1
  6249  0108E8  B4D8               	btfsc	status,2,c
  6250  0108EA  D008               	goto	l17857
  6251  0108EC  0A02               	xorlw	2	; case 3
  6252  0108EE  B4D8               	btfsc	status,2,c
  6253  0108F0  D005               	goto	l17857
  6254  0108F2  0A07               	xorlw	7	; case 4
  6255  0108F4  B4D8               	btfsc	status,2,c
  6256  0108F6  D7E5               	goto	l1479
  6257  0108F8  0A01               	xorlw	1	; case 5
  6258  0108FA  D7E6               	goto	l1481
  6259  0108FC                     l17857:
  6260                           
  6261                           ;main.c: 353:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6262  0108FC  0E01               	movlw	1
  6263  0108FE  6EE6               	movwf	postinc1,c
  6264  010900  ECD5  F014         	call	_TimerDone	;wreg free
  6265  010904  502A               	movf	btemp^0,w,c
  6266  010906  B4D8               	btfsc	status,2,c
  6267  010908  D013               	goto	l17869
  6268  01090A  ECD3  F017         	call	_check_adc_scan	;wreg free
  6269  01090E  502A               	movf	btemp^0,w,c
  6270  010910  B4D8               	btfsc	status,2,c
  6271  010912  D00E               	goto	l17869
  6272                           
  6273                           ;main.c: 357:    convert_adc_data();
  6274  010914  EC07  F006         	call	_convert_adc_data	;wreg free
  6275                           
  6276                           ;main.c: 361:    clear_adc_scan();
  6277  010918  ECED  F017         	call	_clear_adc_scan	;wreg free
  6278                           
  6279                           ; BSR set to: 1
  6280                           ;main.c: 362:    start_adc_scan();
  6281  01091C  EC61  F00E         	call	_start_adc_scan	;wreg free
  6282                           
  6283                           ;main.c: 363:    StartTimer(TMR_ADC, 200);
  6284  010920  0EC8               	movlw	200
  6285  010922  6EE6               	movwf	postinc1,c
  6286  010924  0E00               	movlw	0
  6287  010926  6EE6               	movwf	postinc1,c
  6288  010928  0E01               	movlw	1
  6289  01092A  6EE6               	movwf	postinc1,c
  6290  01092C  EC49  F012         	call	_StartTimer	;wreg free
  6291  010930                     l17869:
  6292                           
  6293                           ;main.c: 366:   if (TimerDone(TMR_DISPLAY)) {
  6294  010930  0E0A               	movlw	10
  6295  010932  6EE6               	movwf	postinc1,c
  6296  010934  ECD5  F014         	call	_TimerDone	;wreg free
  6297  010938  502A               	movf	btemp^0,w,c
  6298  01093A  B4D8               	btfsc	status,2,c
  6299  01093C  EF60  F08A         	goto	l17979
  6300                           
  6301                           ;main.c: 367:    if (TimerDone(TMR_HELPDIS)) {
  6302  010940  0E09               	movlw	9
  6303  010942  6EE6               	movwf	postinc1,c
  6304  010944  ECD5  F014         	call	_TimerDone	;wreg free
  6305  010948  502A               	movf	btemp^0,w,c
  6306  01094A  B4D8               	btfsc	status,2,c
  6307  01094C  D004               	goto	l17875
  6308                           
  6309                           ;main.c: 368:     set_display_info(DIS_STR);
  6310  01094E  0E00               	movlw	0
  6311  010950  6EE6               	movwf	postinc1,c
  6312  010952  ECDA  F016         	call	_set_display_info	;wreg free
  6313  010956                     l17875:
  6314                           
  6315                           ;main.c: 370:    pclock = time(((void*)0));
  6316  010956  0E00               	movlw	0
  6317  010958  6EE6               	movwf	postinc1,c
  6318  01095A  0E00               	movlw	0
  6319  01095C  6EE6               	movwf	postinc1,c
  6320  01095E  EC25  F00F         	call	_time	;wreg free
  6321  010962  52E5               	movf	postdec1,f,c
  6322  010964  006F FF9C  F041    	movff	indf1,btemp+23
  6323  01096A  52E5               	movf	postdec1,f,c
  6324  01096C  006F FF9C  F040    	movff	indf1,btemp+22
  6325  010972  52E5               	movf	postdec1,f,c
  6326  010974  006F FF9C  F03F    	movff	indf1,btemp+21
  6327  01097A  52E5               	movf	postdec1,f,c
  6328  01097C  006F FF9C  F03E    	movff	indf1,btemp+20
  6329  010982  52E5               	movf	postdec1,f,c
  6330  010984  006F FF9C  F03D    	movff	indf1,btemp+19
  6331  01098A  52E5               	movf	postdec1,f,c
  6332  01098C  006F FF9C  F03C    	movff	indf1,btemp+18
  6333  010992  52E5               	movf	postdec1,f,c
  6334  010994  006F FF9C  F03B    	movff	indf1,btemp+17
  6335  01099A  52E5               	movf	postdec1,f,c
  6336  01099C  006F FF9C  F03A    	movff	indf1,btemp+16
  6337  0109A2  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6338  0109A8  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6339  0109AE  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6340  0109B4  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6341  0109BA  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6342  0109C0  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6343  0109C6  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6344  0109CC  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6345                           
  6346                           ; BSR set to: 57
  6347                           ;main.c: 371:    t_mbmc = localtime(&pclock);
  6348  0109D2  0EDA               	movlw	_pclock& (0+255)
  6349  0109D4  6EE6               	movwf	postinc1,c
  6350  0109D6  EC1B  F017         	call	_localtime	;wreg free
  6351  0109DA  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6352  0109E0  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6353                           
  6354                           ;main.c: 372:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6355  0109E6  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6356  0109EC  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6357  0109F2  EC75  F0C6         	call	_asctime	;wreg free
  6358  0109F6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6359  0109FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6360  010A02  0E63               	movlw	low (STR_85+5)
  6361  010A04  6EE6               	movwf	postinc1,c
  6362  010A06  0EFF               	movlw	high (STR_85+5)
  6363  010A08  6EE6               	movwf	postinc1,c
  6364  010A0A  0E00               	movlw	0
  6365  010A0C  6EE6               	movwf	postinc1,c
  6366  010A0E  0E03               	movlw	3
  6367  010A10  6EE6               	movwf	postinc1,c
  6368  010A12  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6369  010A16  0060  F0AB  FFE6   	movff	btemp,postinc1
  6370  010A1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6371  010A22  0E06               	movlw	6
  6372  010A24  6EE6               	movwf	postinc1,c
  6373  010A26  EC5B  F000         	call	_sprintf	;wreg free
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;main.c: 373:    calc_model_data();
  6377  010A2A  EC9E  F0CD         	call	_calc_model_data	;wreg free
  6378                           
  6379                           ; BSR set to: 57
  6380                           ;main.c: 374:    if (C.dupdate) {
  6381  010A2E  EE22  F22E         	lfsr	2,_C+303	;volatile
  6382  010A32  50DF               	movf	indf2,w,c
  6383  010A34  B4D8               	btfsc	status,2,c
  6384  010A36  D0A4               	goto	l17905
  6385                           
  6386                           ; BSR set to: 57
  6387                           ;main.c: 375:     C.dupdate = 0;
  6388  010A38  0E00               	movlw	0
  6389  010A3A  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
  6390                           
  6391                           ;main.c: 376:     set_hist_flag();
  6392  010A40  ECE7  F017         	call	_set_hist_flag	;wreg free
  6393                           
  6394                           ; BSR set to: 1
  6395                           ;main.c: 377:     load_hist_data();
  6396  010A44  EC7E  F0E4         	call	_load_hist_data	;wreg free
  6397                           
  6398                           ; BSR set to: 57
  6399                           ;main.c: 378:     update_hist_data(0, &C.hist[0]);
  6400  010A48  0EB8               	movlw	low (_C+185)
  6401  010A4A  6EE6               	movwf	postinc1,c
  6402  010A4C  0E09               	movlw	high (_C+185)
  6403  010A4E  6EE6               	movwf	postinc1,c
  6404  010A50  0E00               	movlw	0
  6405  010A52  6EE6               	movwf	postinc1,c
  6406  010A54  EC05  F00C         	call	_update_hist_data	;wreg free
  6407                           
  6408                           ;main.c: 379:     write_cal_data();
  6409  010A58  ECA8  F0F9         	call	_write_cal_data	;wreg free
  6410                           
  6411                           ;main.c: 380:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6412  010A5C  0E61               	movlw	low STR_25
  6413  010A5E  6EE6               	movwf	postinc1,c
  6414  010A60  0EFE               	movlw	high STR_25
  6415  010A62  6EE6               	movwf	postinc1,c
  6416  010A64  0E00               	movlw	0
  6417  010A66  6EE6               	movwf	postinc1,c
  6418  010A68  0E00               	movlw	0
  6419  010A6A  6EE6               	movwf	postinc1,c
  6420  010A6C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6421  010A70  0060  F0AB  FFE6   	movff	btemp,postinc1
  6422  010A76  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6423  010A7C  0E04               	movlw	4
  6424  010A7E  6EE6               	movwf	postinc1,c
  6425  010A80  EC5B  F000         	call	_sprintf	;wreg free
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;main.c: 381:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  6429  010A84  0E01               	movlw	low STR_26
  6430  010A86  6EE6               	movwf	postinc1,c
  6431  010A88  0EFD               	movlw	high STR_26
  6432  010A8A  6EE6               	movwf	postinc1,c
  6433  010A8C  0E00               	movlw	0
  6434  010A8E  6EE6               	movwf	postinc1,c
  6435  010A90  0E01               	movlw	1
  6436  010A92  6EE6               	movwf	postinc1,c
  6437  010A94  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6438  010A98  0060  F0AB  FFE6   	movff	btemp,postinc1
  6439  010A9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6440  010AA4  0E04               	movlw	4
  6441  010AA6  6EE6               	movwf	postinc1,c
  6442  010AA8  EC5B  F000         	call	_sprintf	;wreg free
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;main.c: 382:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  6446  010AAC  EE22  F1D9         	lfsr	2,_C+218	;volatile
  6447  010AB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6448  010AB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6449  010ABC  006F FF7B FFE6     	movff	postinc2,postinc1
  6450  010AC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6451  010AC8  0E00               	movlw	0
  6452  010ACA  6EE6               	movwf	postinc1,c
  6453  010ACC  0E00               	movlw	0
  6454  010ACE  6EE6               	movwf	postinc1,c
  6455  010AD0  EC25  F00F         	call	_time	;wreg free
  6456  010AD4  52E5               	movf	postdec1,f,c
  6457  010AD6  006F FF9C  F041    	movff	indf1,btemp+23
  6458  010ADC  52E5               	movf	postdec1,f,c
  6459  010ADE  006F FF9C  F040    	movff	indf1,btemp+22
  6460  010AE4  52E5               	movf	postdec1,f,c
  6461  010AE6  006F FF9C  F03F    	movff	indf1,btemp+21
  6462  010AEC  52E5               	movf	postdec1,f,c
  6463  010AEE  006F FF9C  F03E    	movff	indf1,btemp+20
  6464  010AF4  52E5               	movf	postdec1,f,c
  6465  010AF6  006F FF9C  F03D    	movff	indf1,btemp+19
  6466  010AFC  52E5               	movf	postdec1,f,c
  6467  010AFE  006F FF9C  F03C    	movff	indf1,btemp+18
  6468  010B04  52E5               	movf	postdec1,f,c
  6469  010B06  006F FF9C  F03B    	movff	indf1,btemp+17
  6470  010B0C  52E5               	movf	postdec1,f,c
  6471  010B0E  006F FF9C  F03A    	movff	indf1,btemp+16
  6472  010B14  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6473  010B1A  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6474  010B20  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6475  010B26  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6476  010B2C  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6477  010B32  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6478  010B38  0060  F103  FFE6   	movff	btemp+22,postinc1
  6479  010B3E  0060  F107  FFE6   	movff	btemp+23,postinc1
  6480  010B44  0EC7               	movlw	low STR_27
  6481  010B46  6EE6               	movwf	postinc1,c
  6482  010B48  0EFD               	movlw	high STR_27
  6483  010B4A  6EE6               	movwf	postinc1,c
  6484  010B4C  0E00               	movlw	0
  6485  010B4E  6EE6               	movwf	postinc1,c
  6486  010B50  0E02               	movlw	2
  6487  010B52  6EE6               	movwf	postinc1,c
  6488  010B54  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6489  010B58  0060  F0AB  FFE6   	movff	btemp,postinc1
  6490  010B5E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6491  010B64  0E10               	movlw	16
  6492  010B66  6EE6               	movwf	postinc1,c
  6493  010B68  EC5B  F000         	call	_sprintf	;wreg free
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;main.c: 383:     update_lcd(0);
  6497  010B6C  0E00               	movlw	0
  6498  010B6E  6EE6               	movwf	postinc1,c
  6499  010B70  EC4B  F0F8         	call	_update_lcd	;wreg free
  6500                           
  6501                           ;main.c: 384:     WaitMs(2000);
  6502  010B74  0ED0               	movlw	208
  6503  010B76  6EE6               	movwf	postinc1,c
  6504  010B78  0E07               	movlw	7
  6505  010B7A  6EE6               	movwf	postinc1,c
  6506  010B7C  EC57  F013         	call	_WaitMs	;wreg free
  6507  010B80                     l17905:
  6508                           
  6509                           ;main.c: 392:     hid_display(&H);
  6510  010B80  0E9B               	movlw	low _H
  6511  010B82  6EE6               	movwf	postinc1,c
  6512  010B84  0E01               	movlw	high _H
  6513  010B86  6EE6               	movwf	postinc1,c
  6514  010B88  EC38  F0EB         	call	_hid_display	;wreg free
  6515                           
  6516                           ;main.c: 393:     switch (H.hid_display) {
  6517  010B8C  EFF1  F089         	goto	l17949
  6518  010B90                     l1489:
  6519                           
  6520                           ; BSR set to: 1
  6521                           ;main.c: 395:      V.calib = 0;
  6522  010B90  0102               	movlb	2	; () banked
  6523  010B92  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6524                           
  6525                           ; BSR set to: 2
  6526                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  6527  010B94  EE22  F22D         	lfsr	2,_C+302	;volatile
  6528  010B98  50DF               	movf	indf2,w,c
  6529  010B9A  A4D8               	btfss	status,2,c
  6530  010B9C  D002               	goto	l17911
  6531                           
  6532                           ; BSR set to: 2
  6533  010B9E  0E20               	movlw	32
  6534  010BA0  D001               	goto	L1
  6535  010BA2                     l17911:
  6536                           
  6537                           ; BSR set to: 2
  6538  010BA2  0E44               	movlw	68
  6539  010BA4                     L1:
  6540  010BA4  6E34               	movwf	(btemp+10)^0,c
  6541  010BA6  0E00               	movlw	0
  6542  010BA8  6E35               	movwf	(btemp+11)^0,c
  6543                           
  6544                           ;stkvar	_main$4045 @ sp[(-17)+2]
  6545  010BAA  0EF1               	movlw	-15
  6546  010BAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6547  010BB2  0EF2               	movlw	-14
  6548  010BB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6549                           
  6550                           ; BSR set to: 2
  6551  010BBA  EE22  F17B         	lfsr	2,_C+124	;volatile
  6552  010BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6553  010BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6554  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6555  010BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6556                           
  6557                           ;stkvar	_main$4045 @ sp[(-21)+2]
  6558  010BD6  0EED               	movlw	-19
  6559  010BD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6560  010BDE  006F FF8F FFE6     	movff	plusw1,postinc1
  6561  010BE4  0E20               	movlw	low STR_31
  6562  010BE6  6EE6               	movwf	postinc1,c
  6563  010BE8  0EFC               	movlw	high STR_31
  6564  010BEA  6EE6               	movwf	postinc1,c
  6565  010BEC  0E00               	movlw	0
  6566  010BEE  6EE6               	movwf	postinc1,c
  6567  010BF0  0E00               	movlw	0
  6568  010BF2  6EE6               	movwf	postinc1,c
  6569  010BF4  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6570  010BF8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6571  010BFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6572  010C04  0E0A               	movlw	10
  6573  010C06  6EE6               	movwf	postinc1,c
  6574  010C08  EC5B  F000         	call	_sprintf	;wreg free
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  6578  010C0C  EE22  F173         	lfsr	2,_C+116	;volatile
  6579  010C10  006F FF7B FFE6     	movff	postinc2,postinc1
  6580  010C16  006F FF7B FFE6     	movff	postinc2,postinc1
  6581  010C1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6582  010C22  006F FF7B FFE6     	movff	postinc2,postinc1
  6583  010C28  0E09               	movlw	low STR_32
  6584  010C2A  6EE6               	movwf	postinc1,c
  6585  010C2C  0EFC               	movlw	high STR_32
  6586  010C2E  6EE6               	movwf	postinc1,c
  6587  010C30  0E00               	movlw	0
  6588  010C32  6EE6               	movwf	postinc1,c
  6589  010C34  0E01               	movlw	1
  6590  010C36  6EE6               	movwf	postinc1,c
  6591  010C38  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6592  010C3C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6593  010C42  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6594  010C48  0E08               	movlw	8
  6595  010C4A  6EE6               	movwf	postinc1,c
  6596  010C4C  EC5B  F000         	call	_sprintf	;wreg free
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  6600  010C50  EE22  F177         	lfsr	2,_C+120	;volatile
  6601  010C54  006F FF7B FFE6     	movff	postinc2,postinc1
  6602  010C5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6603  010C60  006F FF7B FFE6     	movff	postinc2,postinc1
  6604  010C66  006F FF7B FFE6     	movff	postinc2,postinc1
  6605  010C6C  0EF2               	movlw	low STR_33
  6606  010C6E  6EE6               	movwf	postinc1,c
  6607  010C70  0EFB               	movlw	high STR_33
  6608  010C72  6EE6               	movwf	postinc1,c
  6609  010C74  0E00               	movlw	0
  6610  010C76  6EE6               	movwf	postinc1,c
  6611  010C78  0E02               	movlw	2
  6612  010C7A  6EE6               	movwf	postinc1,c
  6613  010C7C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6614  010C80  0060  F0AB  FFE6   	movff	btemp,postinc1
  6615  010C86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6616  010C8C  0E08               	movlw	8
  6617  010C8E  6EE6               	movwf	postinc1,c
  6618  010C90  EC5B  F000         	call	_sprintf	;wreg free
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;main.c: 400:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  6622  010C94  EE22  F22D         	lfsr	2,_C+302	;volatile
  6623  010C98  50DF               	movf	indf2,w,c
  6624  010C9A  A4D8               	btfss	status,2,c
  6625  010C9C  D002               	goto	l17923
  6626                           
  6627                           ; BSR set to: 0
  6628  010C9E  0E20               	movlw	32
  6629  010CA0  D001               	goto	L2
  6630  010CA2                     l17923:
  6631                           
  6632                           ; BSR set to: 0
  6633  010CA2  0E44               	movlw	68
  6634  010CA4                     L2:
  6635  010CA4  6E34               	movwf	(btemp+10)^0,c
  6636  010CA6  0E00               	movlw	0
  6637  010CA8  6E35               	movwf	(btemp+11)^0,c
  6638                           
  6639                           ;stkvar	_main$4049 @ sp[(-17)+0]
  6640  010CAA  0EEF               	movlw	-17
  6641  010CAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6642  010CB2  0EF0               	movlw	-16
  6643  010CB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6644                           
  6645                           ; BSR set to: 0
  6646  010CBA  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6647  010CBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6648  010CC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6649  010CCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6650  010CD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6651                           
  6652                           ;stkvar	_main$4049 @ sp[(-21)+0]
  6653  010CD6  0EEB               	movlw	-21
  6654  010CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6655  010CDE  006F FF8F FFE6     	movff	plusw1,postinc1
  6656  010CE4  0EDB               	movlw	low STR_34
  6657  010CE6  6EE6               	movwf	postinc1,c
  6658  010CE8  0EFB               	movlw	high STR_34
  6659  010CEA  6EE6               	movwf	postinc1,c
  6660  010CEC  0E01               	movlw	1
  6661  010CEE  6EE6               	movwf	postinc1,c
  6662  010CF0  0E00               	movlw	0
  6663  010CF2  6EE6               	movwf	postinc1,c
  6664  010CF4  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6665  010CF8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6666  010CFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6667  010D04  0E0A               	movlw	10
  6668  010D06  6EE6               	movwf	postinc1,c
  6669  010D08  EC5B  F000         	call	_sprintf	;wreg free
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;main.c: 401:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  6673  010D0C  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6674  010D10  006F FF7B FFE6     	movff	postinc2,postinc1
  6675  010D16  006F FF7B FFE6     	movff	postinc2,postinc1
  6676  010D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6677  010D22  006F FF7B FFE6     	movff	postinc2,postinc1
  6678  010D28  0EC4               	movlw	low STR_35
  6679  010D2A  6EE6               	movwf	postinc1,c
  6680  010D2C  0EFB               	movlw	high STR_35
  6681  010D2E  6EE6               	movwf	postinc1,c
  6682  010D30  0E01               	movlw	1
  6683  010D32  6EE6               	movwf	postinc1,c
  6684  010D34  0E01               	movlw	1
  6685  010D36  6EE6               	movwf	postinc1,c
  6686  010D38  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6687  010D3C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6688  010D42  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6689  010D48  0E08               	movlw	8
  6690  010D4A  6EE6               	movwf	postinc1,c
  6691  010D4C  EC5B  F000         	call	_sprintf	;wreg free
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;main.c: 402:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  6695  010D50  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6696  010D54  006F FF7B FFE6     	movff	postinc2,postinc1
  6697  010D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6698  010D60  006F FF7B FFE6     	movff	postinc2,postinc1
  6699  010D66  006F FF7B FFE6     	movff	postinc2,postinc1
  6700  010D6C  0EAD               	movlw	low STR_36
  6701  010D6E  6EE6               	movwf	postinc1,c
  6702  010D70  0EFB               	movlw	high STR_36
  6703  010D72  6EE6               	movwf	postinc1,c
  6704  010D74  0E01               	movlw	1
  6705  010D76  6EE6               	movwf	postinc1,c
  6706  010D78  0E02               	movlw	2
  6707  010D7A  6EE6               	movwf	postinc1,c
  6708  010D7C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6709  010D80  0060  F0AB  FFE6   	movff	btemp,postinc1
  6710  010D86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6711  010D8C  0E08               	movlw	8
  6712  010D8E  6EE6               	movwf	postinc1,c
  6713  010D90  EC5B  F000         	call	_sprintf	;wreg free
  6714                           
  6715                           ;main.c: 403:      break;
  6716  010D94  D33C               	goto	l17951
  6717  010D96                     l1499:
  6718                           
  6719                           ; BSR set to: 1
  6720                           ;main.c: 405:      V.calib = 0;
  6721  010D96  0102               	movlb	2	; () banked
  6722  010D98  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6723                           
  6724                           ; BSR set to: 2
  6725                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  6726  010D9A  EE22  F103         	lfsr	2,_C+4	;volatile
  6727  010D9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6728  010DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6729  010DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  6730  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6731  010DB6  EE22  F113         	lfsr	2,_C+20	;volatile
  6732  010DBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6733  010DC0  006F FF7B FFE6     	movff	postinc2,postinc1
  6734  010DC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6735  010DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  6736  010DD2  0E7C               	movlw	low STR_37
  6737  010DD4  6EE6               	movwf	postinc1,c
  6738  010DD6  0EFC               	movlw	high STR_37
  6739  010DD8  6EE6               	movwf	postinc1,c
  6740  010DDA  0E00               	movlw	0
  6741  010DDC  6EE6               	movwf	postinc1,c
  6742  010DDE  0E00               	movlw	0
  6743  010DE0  6EE6               	movwf	postinc1,c
  6744  010DE2  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6745  010DE6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6746  010DEC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6747  010DF2  0E0C               	movlw	12
  6748  010DF4  6EE6               	movwf	postinc1,c
  6749  010DF6  EC5B  F000         	call	_sprintf	;wreg free
  6750                           
  6751                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  6752  010DFA  EE22  F0FF         	lfsr	2,_C
  6753  010DFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6754  010E04  006F FF7B FFE6     	movff	postinc2,postinc1
  6755  010E0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6756  010E10  006F FF7B FFE6     	movff	postinc2,postinc1
  6757  010E16  EE22  F10F         	lfsr	2,_C+16	;volatile
  6758  010E1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6759  010E20  006F FF7B FFE6     	movff	postinc2,postinc1
  6760  010E26  006F FF7B FFE6     	movff	postinc2,postinc1
  6761  010E2C  006F FF7B FFE6     	movff	postinc2,postinc1
  6762  010E32  0E4E               	movlw	low STR_38
  6763  010E34  6EE6               	movwf	postinc1,c
  6764  010E36  0EFC               	movlw	high STR_38
  6765  010E38  6EE6               	movwf	postinc1,c
  6766  010E3A  0E00               	movlw	0
  6767  010E3C  6EE6               	movwf	postinc1,c
  6768  010E3E  0E01               	movlw	1
  6769  010E40  6EE6               	movwf	postinc1,c
  6770  010E42  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6771  010E46  0060  F0AB  FFE6   	movff	btemp,postinc1
  6772  010E4C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6773  010E52  0E0C               	movlw	12
  6774  010E54  6EE6               	movwf	postinc1,c
  6775  010E56  EC5B  F000         	call	_sprintf	;wreg free
  6776                           
  6777                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  6778  010E5A  EE22  F13F         	lfsr	2,_C+64	;volatile
  6779  010E5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6780  010E64  006F FF7B FFE6     	movff	postinc2,postinc1
  6781  010E6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6782  010E70  006F FF7B FFE6     	movff	postinc2,postinc1
  6783  010E76  EE22  F107         	lfsr	2,_C+8	;volatile
  6784  010E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6785  010E80  006F FF7B FFE6     	movff	postinc2,postinc1
  6786  010E86  006F FF7B FFE6     	movff	postinc2,postinc1
  6787  010E8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6788  010E92  0E65               	movlw	low STR_39
  6789  010E94  6EE6               	movwf	postinc1,c
  6790  010E96  0EFC               	movlw	high STR_39
  6791  010E98  6EE6               	movwf	postinc1,c
  6792  010E9A  0E00               	movlw	0
  6793  010E9C  6EE6               	movwf	postinc1,c
  6794  010E9E  0E02               	movlw	2
  6795  010EA0  6EE6               	movwf	postinc1,c
  6796  010EA2  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6797  010EA6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6798  010EAC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6799  010EB2  0E0C               	movlw	12
  6800  010EB4  6EE6               	movwf	postinc1,c
  6801  010EB6  EC5B  F000         	call	_sprintf	;wreg free
  6802                           
  6803                           ;main.c: 410:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  6804  010EBA  EE22  F19F         	lfsr	2,_C+160	;volatile
  6805  010EBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6806  010EC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6807  010ECA  006F FF7B FFE6     	movff	postinc2,postinc1
  6808  010ED0  006F FF7B FFE6     	movff	postinc2,postinc1
  6809  010ED6  0E68               	movlw	low STR_40
  6810  010ED8  6EE6               	movwf	postinc1,c
  6811  010EDA  0EFB               	movlw	high STR_40
  6812  010EDC  6EE6               	movwf	postinc1,c
  6813  010EDE  0E01               	movlw	1
  6814  010EE0  6EE6               	movwf	postinc1,c
  6815  010EE2  0E00               	movlw	0
  6816  010EE4  6EE6               	movwf	postinc1,c
  6817  010EE6  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6818  010EEA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6819  010EF0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6820  010EF6  0E08               	movlw	8
  6821  010EF8  6EE6               	movwf	postinc1,c
  6822  010EFA  EC5B  F000         	call	_sprintf	;wreg free
  6823                           
  6824                           ;main.c: 411:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  6825  010EFE  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6826  010F02  006F FF7B FFE6     	movff	postinc2,postinc1
  6827  010F08  006F FF7B FFE6     	movff	postinc2,postinc1
  6828  010F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6829  010F14  006F FF7B FFE6     	movff	postinc2,postinc1
  6830  010F1A  0E7F               	movlw	low STR_41
  6831  010F1C  6EE6               	movwf	postinc1,c
  6832  010F1E  0EFB               	movlw	high STR_41
  6833  010F20  6EE6               	movwf	postinc1,c
  6834  010F22  0E01               	movlw	1
  6835  010F24  6EE6               	movwf	postinc1,c
  6836  010F26  0E01               	movlw	1
  6837  010F28  6EE6               	movwf	postinc1,c
  6838  010F2A  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6839  010F2E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6840  010F34  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6841  010F3A  0E08               	movlw	8
  6842  010F3C  6EE6               	movwf	postinc1,c
  6843  010F3E  EC5B  F000         	call	_sprintf	;wreg free
  6844                           
  6845                           ;main.c: 412:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  6846  010F42  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6847  010F46  006F FF7B FFE6     	movff	postinc2,postinc1
  6848  010F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  6849  010F52  006F FF7B FFE6     	movff	postinc2,postinc1
  6850  010F58  006F FF7B FFE6     	movff	postinc2,postinc1
  6851  010F5E  EE22  F19F         	lfsr	2,_C+160	;volatile
  6852  010F62  006F FF7B FFE6     	movff	postinc2,postinc1
  6853  010F68  006F FF7B FFE6     	movff	postinc2,postinc1
  6854  010F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6855  010F74  006F FF7B FFE6     	movff	postinc2,postinc1
  6856  010F7A  EC7C  F0BC         	call	___fladd	;wreg free
  6857  010F7E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6858  010F84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6859  010F8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6860  010F90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6861  010F96  0E96               	movlw	low STR_42
  6862  010F98  6EE6               	movwf	postinc1,c
  6863  010F9A  0EFB               	movlw	high STR_42
  6864  010F9C  6EE6               	movwf	postinc1,c
  6865  010F9E  0E01               	movlw	1
  6866  010FA0  6EE6               	movwf	postinc1,c
  6867  010FA2  0E02               	movlw	2
  6868  010FA4  6EE6               	movwf	postinc1,c
  6869  010FA6  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6870  010FAA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6871  010FB0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6872  010FB6  0E08               	movlw	8
  6873  010FB8  6EE6               	movwf	postinc1,c
  6874  010FBA  EC5B  F000         	call	_sprintf	;wreg free
  6875                           
  6876                           ;main.c: 413:      break;
  6877  010FBE  D227               	goto	l17951
  6878  010FC0                     l1500:
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;main.c: 415:      V.calib = 0;
  6882  010FC0  0102               	movlb	2	; () banked
  6883  010FC2  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6884                           
  6885                           ; BSR set to: 2
  6886                           ;main.c: 416:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  6887  010FC4  EE22  F17F         	lfsr	2,_C+128	;volatile
  6888  010FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  6889  010FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6890  010FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6891  010FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6892  010FE0  0EC3               	movlw	low STR_43
  6893  010FE2  6EE6               	movwf	postinc1,c
  6894  010FE4  0EFA               	movlw	high STR_43
  6895  010FE6  6EE6               	movwf	postinc1,c
  6896  010FE8  0E00               	movlw	0
  6897  010FEA  6EE6               	movwf	postinc1,c
  6898  010FEC  0E00               	movlw	0
  6899  010FEE  6EE6               	movwf	postinc1,c
  6900  010FF0  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6901  010FF4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6902  010FFA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6903  011000  0E08               	movlw	8
  6904  011002  6EE6               	movwf	postinc1,c
  6905  011004  EC5B  F000         	call	_sprintf	;wreg free
  6906                           
  6907                           ;main.c: 417:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  6908  011008  EE22  F193         	lfsr	2,_C+148	;volatile
  6909  01100C  006F FF7B FFE6     	movff	postinc2,postinc1
  6910  011012  006F FF7B FFE6     	movff	postinc2,postinc1
  6911  011018  006F FF7B FFE6     	movff	postinc2,postinc1
  6912  01101E  006F FF7B FFE6     	movff	postinc2,postinc1
  6913  011024  EE22  F18F         	lfsr	2,_C+144	;volatile
  6914  011028  006F FF7B FFE6     	movff	postinc2,postinc1
  6915  01102E  006F FF7B FFE6     	movff	postinc2,postinc1
  6916  011034  006F FF7B FFE6     	movff	postinc2,postinc1
  6917  01103A  006F FF7B FFE6     	movff	postinc2,postinc1
  6918  011040  0E0B               	movlw	low STR_44
  6919  011042  6EE6               	movwf	postinc1,c
  6920  011044  0EFB               	movlw	high STR_44
  6921  011046  6EE6               	movwf	postinc1,c
  6922  011048  0E00               	movlw	0
  6923  01104A  6EE6               	movwf	postinc1,c
  6924  01104C  0E01               	movlw	1
  6925  01104E  6EE6               	movwf	postinc1,c
  6926  011050  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6927  011054  0060  F0AB  FFE6   	movff	btemp,postinc1
  6928  01105A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6929  011060  0E0C               	movlw	12
  6930  011062  6EE6               	movwf	postinc1,c
  6931  011064  EC5B  F000         	call	_sprintf	;wreg free
  6932                           
  6933                           ;main.c: 418:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6934  011068  EE22  F10F         	lfsr	2,_C+16	;volatile
  6935  01106C  006F FF7B FFE6     	movff	postinc2,postinc1
  6936  011072  006F FF7B FFE6     	movff	postinc2,postinc1
  6937  011078  006F FF7B FFE6     	movff	postinc2,postinc1
  6938  01107E  006F FF7B FFE6     	movff	postinc2,postinc1
  6939  011084  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6940  011088  006F FF78  F034    	movff	postinc2,btemp+10
  6941  01108E  006F FF74  F035    	movff	postdec2,btemp+11
  6942  011094  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6943  01109A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6944  0110A0  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6945  0110A4  006F FF78  F034    	movff	postinc2,btemp+10
  6946  0110AA  006F FF74  F035    	movff	postdec2,btemp+11
  6947  0110B0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6948  0110B6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6949  0110BC  0E00               	movlw	0
  6950  0110BE  6EE6               	movwf	postinc1,c
  6951  0110C0  0E05               	movlw	5
  6952  0110C2  6EE6               	movwf	postinc1,c
  6953  0110C4  ECD7  F001         	call	_spinners	;wreg free
  6954  0110C8  502A               	movf	btemp^0,w,c
  6955  0110CA  6EE6               	movwf	postinc1,c
  6956  0110CC  0E00               	movlw	0
  6957  0110CE  6EE6               	movwf	postinc1,c
  6958  0110D0  0E07               	movlw	low STR_45
  6959  0110D2  6EE6               	movwf	postinc1,c
  6960  0110D4  0EFA               	movlw	high STR_45
  6961  0110D6  6EE6               	movwf	postinc1,c
  6962  0110D8  0E00               	movlw	0
  6963  0110DA  6EE6               	movwf	postinc1,c
  6964  0110DC  0E02               	movlw	2
  6965  0110DE  6EE6               	movwf	postinc1,c
  6966  0110E0  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6967  0110E4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6968  0110EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6969  0110F0  0E0E               	movlw	14
  6970  0110F2  6EE6               	movwf	postinc1,c
  6971  0110F4  EC5B  F000         	call	_sprintf	;wreg free
  6972                           
  6973                           ;main.c: 420:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  6974  0110F8  EE22  F187         	lfsr	2,_C+136	;volatile
  6975  0110FC  006F FF7B FFE6     	movff	postinc2,postinc1
  6976  011102  006F FF7B FFE6     	movff	postinc2,postinc1
  6977  011108  006F FF7B FFE6     	movff	postinc2,postinc1
  6978  01110E  006F FF7B FFE6     	movff	postinc2,postinc1
  6979  011114  0EAB               	movlw	low STR_46
  6980  011116  6EE6               	movwf	postinc1,c
  6981  011118  0EFA               	movlw	high STR_46
  6982  01111A  6EE6               	movwf	postinc1,c
  6983  01111C  0E01               	movlw	1
  6984  01111E  6EE6               	movwf	postinc1,c
  6985  011120  0E00               	movlw	0
  6986  011122  6EE6               	movwf	postinc1,c
  6987  011124  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6988  011128  0060  F0AB  FFE6   	movff	btemp,postinc1
  6989  01112E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6990  011134  0E08               	movlw	8
  6991  011136  6EE6               	movwf	postinc1,c
  6992  011138  EC5B  F000         	call	_sprintf	;wreg free
  6993                           
  6994                           ;main.c: 421:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  6995  01113C  EE22  F219         	lfsr	2,_C+282	;volatile
  6996  011140  006F FF7B FFE6     	movff	postinc2,postinc1
  6997  011146  006F FF7B FFE6     	movff	postinc2,postinc1
  6998  01114C  006F FF7B FFE6     	movff	postinc2,postinc1
  6999  011152  006F FF7B FFE6     	movff	postinc2,postinc1
  7000  011158  EE22  F225         	lfsr	2,_C+294	;volatile
  7001  01115C  006F FF7B FFE6     	movff	postinc2,postinc1
  7002  011162  006F FF7B FFE6     	movff	postinc2,postinc1
  7003  011168  006F FF7B FFE6     	movff	postinc2,postinc1
  7004  01116E  006F FF7B FFE6     	movff	postinc2,postinc1
  7005  011174  0EDB               	movlw	low STR_47
  7006  011176  6EE6               	movwf	postinc1,c
  7007  011178  0EFA               	movlw	high STR_47
  7008  01117A  6EE6               	movwf	postinc1,c
  7009  01117C  0E01               	movlw	1
  7010  01117E  6EE6               	movwf	postinc1,c
  7011  011180  0E01               	movlw	1
  7012  011182  6EE6               	movwf	postinc1,c
  7013  011184  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7014  011188  0060  F0AB  FFE6   	movff	btemp,postinc1
  7015  01118E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7016  011194  0E0C               	movlw	12
  7017  011196  6EE6               	movwf	postinc1,c
  7018  011198  EC5B  F000         	call	_sprintf	;wreg free
  7019                           
  7020                           ;main.c: 422:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  7021  01119C  EE22  F21D         	lfsr	2,_C+286	;volatile
  7022  0111A0  006F FF7B FFE6     	movff	postinc2,postinc1
  7023  0111A6  006F FF7B FFE6     	movff	postinc2,postinc1
  7024  0111AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7025  0111B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7026  0111B8  EE22  F229         	lfsr	2,_C+298	;volatile
  7027  0111BC  006F FF7B FFE6     	movff	postinc2,postinc1
  7028  0111C2  006F FF7B FFE6     	movff	postinc2,postinc1
  7029  0111C8  006F FF7B FFE6     	movff	postinc2,postinc1
  7030  0111CE  006F FF7B FFE6     	movff	postinc2,postinc1
  7031  0111D4  0EF3               	movlw	low STR_48
  7032  0111D6  6EE6               	movwf	postinc1,c
  7033  0111D8  0EFA               	movlw	high STR_48
  7034  0111DA  6EE6               	movwf	postinc1,c
  7035  0111DC  0E01               	movlw	1
  7036  0111DE  6EE6               	movwf	postinc1,c
  7037  0111E0  0E02               	movlw	2
  7038  0111E2  6EE6               	movwf	postinc1,c
  7039  0111E4  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7040  0111E8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7041  0111EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7042  0111F4  0E0C               	movlw	12
  7043  0111F6  6EE6               	movwf	postinc1,c
  7044  0111F8  EC5B  F000         	call	_sprintf	;wreg free
  7045                           
  7046                           ;main.c: 423:      break;
  7047  0111FC  D108               	goto	l17951
  7048  0111FE                     l17935:
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;main.c: 425:      if (!V.calib) {
  7052  0111FE  0102               	movlb	2	; () banked
  7053  011200  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  7054  011202  A4D8               	btfss	status,2,c
  7055  011204  D02D               	goto	l17939
  7056                           
  7057                           ; BSR set to: 2
  7058                           ;main.c: 426:       lp_filter(0.0, i, -1);
  7059  011206  0EFF               	movlw	255
  7060  011208  6EE6               	movwf	postinc1,c
  7061                           
  7062                           ;stkvar	_i @ sp[(-18)+14]
  7063  01120A  0EFC               	movlw	-4
  7064  01120C  50E3               	movf	plusw1,w,c
  7065  01120E  6EE6               	movwf	postinc1,c
  7066  011210  0E00               	movlw	0
  7067  011212  6EE6               	movwf	postinc1,c
  7068  011214  0E00               	movlw	0
  7069  011216  6EE6               	movwf	postinc1,c
  7070  011218  0E00               	movlw	0
  7071  01121A  6EE6               	movwf	postinc1,c
  7072  01121C  0E00               	movlw	0
  7073  01121E  6EE6               	movwf	postinc1,c
  7074  011220  EC36  F0EF         	call	_lp_filter	;wreg free
  7075                           
  7076                           ;main.c: 427:       lp_filter(0.0, j, -1);
  7077  011224  0EFF               	movlw	255
  7078  011226  6EE6               	movwf	postinc1,c
  7079                           
  7080                           ;stkvar	_j @ sp[(-18)+13]
  7081  011228  0EFB               	movlw	-5
  7082  01122A  50E3               	movf	plusw1,w,c
  7083  01122C  6EE6               	movwf	postinc1,c
  7084  01122E  0E00               	movlw	0
  7085  011230  6EE6               	movwf	postinc1,c
  7086  011232  0E00               	movlw	0
  7087  011234  6EE6               	movwf	postinc1,c
  7088  011236  0E00               	movlw	0
  7089  011238  6EE6               	movwf	postinc1,c
  7090  01123A  0E00               	movlw	0
  7091  01123C  6EE6               	movwf	postinc1,c
  7092  01123E  EC36  F0EF         	call	_lp_filter	;wreg free
  7093                           
  7094                           ;main.c: 428:       lp_filter(0.0, k, -1);
  7095  011242  0EFF               	movlw	255
  7096  011244  6EE6               	movwf	postinc1,c
  7097                           
  7098                           ;stkvar	_k @ sp[(-18)+12]
  7099  011246  0EFA               	movlw	-6
  7100  011248  50E3               	movf	plusw1,w,c
  7101  01124A  6EE6               	movwf	postinc1,c
  7102  01124C  0E00               	movlw	0
  7103  01124E  6EE6               	movwf	postinc1,c
  7104  011250  0E00               	movlw	0
  7105  011252  6EE6               	movwf	postinc1,c
  7106  011254  0E00               	movlw	0
  7107  011256  6EE6               	movwf	postinc1,c
  7108  011258  0E00               	movlw	0
  7109  01125A  6EE6               	movwf	postinc1,c
  7110  01125C  EC36  F0EF         	call	_lp_filter	;wreg free
  7111  011260                     l17939:
  7112                           
  7113                           ;main.c: 430:      V.calib = 1;
  7114  011260  0E01               	movlw	1
  7115  011262  0102               	movlb	2	; () banked
  7116  011264  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  7117                           
  7118                           ; BSR set to: 2
  7119                           ;main.c: 431:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  7120                           ;stkvar	_inp_index @ sp[(-17)+11]
  7121  011266  0EFA               	movlw	-6
  7122  011268  50E3               	movf	plusw1,w,c
  7123  01126A  6EE6               	movwf	postinc1,c
  7124  01126C  0E00               	movlw	0
  7125  01126E  6EE6               	movwf	postinc1,c
  7126                           
  7127                           ;stkvar	_i @ sp[(-19)+14]
  7128  011270  0EFB               	movlw	-5
  7129  011272  50E3               	movf	plusw1,w,c
  7130  011274  0D04               	mullw	4
  7131  011276  0EFF               	movlw	low _C
  7132  011278  24F3               	addwf	243,w,c
  7133  01127A  6ED9               	movwf	fsr2l,c
  7134  01127C  0E08               	movlw	high _C
  7135  01127E  20F4               	addwfc	prodh,w,c
  7136  011280  6EDA               	movwf	fsr2h,c
  7137  011282  006F FF7B FFE6     	movff	postinc2,postinc1
  7138  011288  006F FF7B FFE6     	movff	postinc2,postinc1
  7139  01128E  006F FF7B FFE6     	movff	postinc2,postinc1
  7140  011294  006F FF7B FFE6     	movff	postinc2,postinc1
  7141                           
  7142                           ;stkvar	_i @ sp[(-23)+14]
  7143  01129A  0EF7               	movlw	-9
  7144  01129C  50E3               	movf	plusw1,w,c
  7145  01129E  6EE6               	movwf	postinc1,c
  7146  0112A0  EC5A  F016         	call	_get_raw_result	;wreg free
  7147  0112A4  0060  F0AB  FFE6   	movff	btemp,postinc1
  7148  0112AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7149  0112B0  0E35               	movlw	low STR_49
  7150  0112B2  6EE6               	movwf	postinc1,c
  7151  0112B4  0EFE               	movlw	high STR_49
  7152  0112B6  6EE6               	movwf	postinc1,c
  7153  0112B8  0E00               	movlw	0
  7154  0112BA  6EE6               	movwf	postinc1,c
  7155  0112BC  0E00               	movlw	0
  7156  0112BE  6EE6               	movwf	postinc1,c
  7157  0112C0  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7158  0112C4  0060  F0AB  FFE6   	movff	btemp,postinc1
  7159  0112CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7160  0112D0  0E0C               	movlw	12
  7161  0112D2  6EE6               	movwf	postinc1,c
  7162  0112D4  EC5B  F000         	call	_sprintf	;wreg free
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;main.c: 432:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  7166                           ;stkvar	_inp_index @ sp[(-17)+11]
  7167  0112D8  0EFA               	movlw	-6
  7168  0112DA  50E3               	movf	plusw1,w,c
  7169  0112DC  6E34               	movwf	(btemp+10)^0,c
  7170  0112DE  6A35               	clrf	(btemp+11)^0,c
  7171  0112E0  0E01               	movlw	1
  7172  0112E2  2634               	addwf	(btemp+10)^0,f,c
  7173  0112E4  0E00               	movlw	0
  7174  0112E6  2235               	addwfc	(btemp+11)^0,f,c
  7175  0112E8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7176  0112EE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7177                           
  7178                           ;stkvar	_j @ sp[(-19)+13]
  7179  0112F4  0EFA               	movlw	-6
  7180  0112F6  50E3               	movf	plusw1,w,c
  7181  0112F8  0D04               	mullw	4
  7182  0112FA  0EFF               	movlw	low _C
  7183  0112FC  24F3               	addwf	243,w,c
  7184  0112FE  6ED9               	movwf	fsr2l,c
  7185  011300  0E08               	movlw	high _C
  7186  011302  20F4               	addwfc	prodh,w,c
  7187  011304  6EDA               	movwf	fsr2h,c
  7188  011306  006F FF7B FFE6     	movff	postinc2,postinc1
  7189  01130C  006F FF7B FFE6     	movff	postinc2,postinc1
  7190  011312  006F FF7B FFE6     	movff	postinc2,postinc1
  7191  011318  006F FF7B FFE6     	movff	postinc2,postinc1
  7192                           
  7193                           ;stkvar	_j @ sp[(-23)+13]
  7194  01131E  0EF6               	movlw	-10
  7195  011320  50E3               	movf	plusw1,w,c
  7196  011322  6EE6               	movwf	postinc1,c
  7197  011324  EC5A  F016         	call	_get_raw_result	;wreg free
  7198  011328  0060  F0AB  FFE6   	movff	btemp,postinc1
  7199  01132E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7200  011334  0E35               	movlw	low STR_49
  7201  011336  6EE6               	movwf	postinc1,c
  7202  011338  0EFE               	movlw	high STR_49
  7203  01133A  6EE6               	movwf	postinc1,c
  7204  01133C  0E00               	movlw	0
  7205  01133E  6EE6               	movwf	postinc1,c
  7206  011340  0E01               	movlw	1
  7207  011342  6EE6               	movwf	postinc1,c
  7208  011344  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7209  011348  0060  F0AB  FFE6   	movff	btemp,postinc1
  7210  01134E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7211  011354  0E0C               	movlw	12
  7212  011356  6EE6               	movwf	postinc1,c
  7213  011358  EC5B  F000         	call	_sprintf	;wreg free
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;main.c: 433:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7217                           ;stkvar	_inp_index @ sp[(-17)+11]
  7218  01135C  0EFA               	movlw	-6
  7219  01135E  50E3               	movf	plusw1,w,c
  7220  011360  6E34               	movwf	(btemp+10)^0,c
  7221  011362  6A35               	clrf	(btemp+11)^0,c
  7222  011364  0E02               	movlw	2
  7223  011366  2634               	addwf	(btemp+10)^0,f,c
  7224  011368  0E00               	movlw	0
  7225  01136A  2235               	addwfc	(btemp+11)^0,f,c
  7226  01136C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7227  011372  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7228                           
  7229                           ;stkvar	_k @ sp[(-19)+12]
  7230  011378  0EF9               	movlw	-7
  7231  01137A  50E3               	movf	plusw1,w,c
  7232  01137C  0D04               	mullw	4
  7233  01137E  0EFF               	movlw	low _C
  7234  011380  24F3               	addwf	243,w,c
  7235  011382  6ED9               	movwf	fsr2l,c
  7236  011384  0E08               	movlw	high _C
  7237  011386  20F4               	addwfc	prodh,w,c
  7238  011388  6EDA               	movwf	fsr2h,c
  7239  01138A  006F FF7B FFE6     	movff	postinc2,postinc1
  7240  011390  006F FF7B FFE6     	movff	postinc2,postinc1
  7241  011396  006F FF7B FFE6     	movff	postinc2,postinc1
  7242  01139C  006F FF7B FFE6     	movff	postinc2,postinc1
  7243                           
  7244                           ;stkvar	_k @ sp[(-23)+12]
  7245  0113A2  0EF5               	movlw	-11
  7246  0113A4  50E3               	movf	plusw1,w,c
  7247  0113A6  6EE6               	movwf	postinc1,c
  7248  0113A8  EC5A  F016         	call	_get_raw_result	;wreg free
  7249  0113AC  0060  F0AB  FFE6   	movff	btemp,postinc1
  7250  0113B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7251  0113B8  0E35               	movlw	low STR_49
  7252  0113BA  6EE6               	movwf	postinc1,c
  7253  0113BC  0EFE               	movlw	high STR_49
  7254  0113BE  6EE6               	movwf	postinc1,c
  7255  0113C0  0E00               	movlw	0
  7256  0113C2  6EE6               	movwf	postinc1,c
  7257  0113C4  0E02               	movlw	2
  7258  0113C6  6EE6               	movwf	postinc1,c
  7259  0113C8  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7260  0113CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  7261  0113D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7262  0113D8  0E0C               	movlw	12
  7263  0113DA  6EE6               	movwf	postinc1,c
  7264  0113DC  EC5B  F000         	call	_sprintf	;wreg free
  7265                           
  7266                           ;main.c: 434:      break;
  7267  0113E0  D016               	goto	l17951
  7268  0113E2                     l17949:
  7269  0113E2  0101               	movlb	1	; () banked
  7270  0113E4  519B               	movf	_H& (0+255),w,b
  7271  0113E6  6E34               	movwf	(btemp+10)^0,c
  7272  0113E8  6A35               	clrf	(btemp+11)^0,c
  7273                           
  7274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7275                           ; Switch size 1, requested type "simple"
  7276                           ; Number of cases is 1, Range of values is 0 to 0
  7277                           ; switch strategies available:
  7278                           ; Name         Instructions Cycles
  7279                           ; simple_byte            4     3 (average)
  7280                           ;	Chosen strategy is simple_byte
  7281  0113EA  5035               	movf	(btemp+11)^0,w,c
  7282  0113EC  0A00               	xorlw	0	; case 0
  7283  0113EE  A4D8               	btfss	status,2,c
  7284  0113F0  D00E               	goto	l17951
  7285                           
  7286                           ; BSR set to: 1
  7287                           ; Switch size 1, requested type "simple"
  7288                           ; Number of cases is 4, Range of values is 0 to 3
  7289                           ; switch strategies available:
  7290                           ; Name         Instructions Cycles
  7291                           ; simple_byte           13     7 (average)
  7292                           ;	Chosen strategy is simple_byte
  7293  0113F2  5034               	movf	(btemp+10)^0,w,c
  7294  0113F4  0A00               	xorlw	0	; case 0
  7295  0113F6  B4D8               	btfsc	status,2,c
  7296  0113F8  D4CE               	goto	l1499
  7297  0113FA  0A01               	xorlw	1	; case 1
  7298  0113FC  B4D8               	btfsc	status,2,c
  7299  0113FE  EFC8  F085         	goto	l1489
  7300  011402  0A03               	xorlw	3	; case 2
  7301  011404  B4D8               	btfsc	status,2,c
  7302  011406  D5DC               	goto	l1500
  7303  011408  0A01               	xorlw	1	; case 3
  7304  01140A  B4D8               	btfsc	status,2,c
  7305  01140C  D6F8               	goto	l17935
  7306  01140E                     l17951:
  7307                           
  7308                           ;main.c: 438:     clear_hid_pflags(&H);
  7309  01140E  0E9B               	movlw	low _H
  7310  011410  6EE6               	movwf	postinc1,c
  7311  011412  0E01               	movlw	high _H
  7312  011414  6EE6               	movwf	postinc1,c
  7313  011416  ECC9  F00D         	call	_clear_hid_pflags	;wreg free
  7314                           
  7315                           ;main.c: 440:    StartTimer(TMR_DISPLAY, 250);
  7316  01141A  0EFA               	movlw	250
  7317  01141C  6EE6               	movwf	postinc1,c
  7318  01141E  0E00               	movlw	0
  7319  011420  6EE6               	movwf	postinc1,c
  7320  011422  0E0A               	movlw	10
  7321  011424  6EE6               	movwf	postinc1,c
  7322  011426  EC49  F012         	call	_StartTimer	;wreg free
  7323                           
  7324                           ;main.c: 441:    V.enter = check_enter_button(&H);
  7325  01142A  0E9B               	movlw	low _H
  7326  01142C  6EE6               	movwf	postinc1,c
  7327  01142E  0E01               	movlw	high _H
  7328  011430  6EE6               	movwf	postinc1,c
  7329  011432  ECBC  F00C         	call	_check_enter_button	;wreg free
  7330  011436  502A               	movf	btemp^0,w,c
  7331  011438  0102               	movlb	2	; () banked
  7332  01143A  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7333                           
  7334                           ; BSR set to: 2
  7335                           ;main.c: 442:    if (V.enter && (H.hid_display != HID_AUX)) {
  7336  01143C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7337  01143E  B4D8               	btfsc	status,2,c
  7338  011440  D013               	goto	l17965
  7339                           
  7340                           ; BSR set to: 2
  7341  011442  0E03               	movlw	3
  7342  011444  0101               	movlb	1	; () banked
  7343  011446  199B               	xorwf	_H& (0+255),w,b
  7344  011448  B4D8               	btfsc	status,2,c
  7345  01144A  D00E               	goto	l17965
  7346                           
  7347                           ; BSR set to: 1
  7348                           ;main.c: 443:     V.enter = 0;
  7349  01144C  0102               	movlb	2	; () banked
  7350  01144E  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7351                           
  7352                           ; BSR set to: 2
  7353                           ;main.c: 444:     V.screen = ~V.screen;
  7354  011450  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7355  011452  D002               	goto	u17480
  7356  011454  0E01               	movlw	1
  7357  011456  D001               	goto	u17486
  7358  011458                     u17480:
  7359  011458  0E00               	movlw	0
  7360  01145A                     u17486:
  7361  01145A  0AFF               	xorlw	255
  7362  01145C  6E35               	movwf	(btemp+11)^0,c
  7363  01145E  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7364  011460  1835               	xorwf	(btemp+11)^0,w,c
  7365  011462  0BFE               	andlw	-2
  7366  011464  1835               	xorwf	(btemp+11)^0,w,c
  7367  011466  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7368  011468                     l17965:
  7369                           
  7370                           ;main.c: 446:    set_vterm(V.screen);
  7371  011468  0102               	movlb	2	; () banked
  7372  01146A  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7373  01146C  D002               	goto	u17490
  7374  01146E  0E01               	movlw	1
  7375  011470  D001               	goto	u17496
  7376  011472                     u17490:
  7377  011472  0E00               	movlw	0
  7378  011474                     u17496:
  7379  011474  6EE6               	movwf	postinc1,c
  7380  011476  ECCB  F016         	call	_set_vterm	;wreg free
  7381                           
  7382                           ;main.c: 447:    update_lcd(V.screen);
  7383  01147A  0102               	movlb	2	; () banked
  7384  01147C  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7385  01147E  D002               	goto	u17500
  7386  011480  0E01               	movlw	1
  7387  011482  D001               	goto	u17506
  7388  011484                     u17500:
  7389  011484  0E00               	movlw	0
  7390  011486                     u17506:
  7391  011486  6EE6               	movwf	postinc1,c
  7392  011488  EC4B  F0F8         	call	_update_lcd	;wreg free
  7393                           
  7394                           ;main.c: 448:    display_history();
  7395  01148C  EC4C  F0DB         	call	_display_history	;wreg free
  7396                           
  7397                           ;main.c: 450:    wait_lcd_done();
  7398  011490  EC92  F017         	call	_wait_lcd_done	;wreg free
  7399                           
  7400                           ; BSR set to: 61
  7401                           ;main.c: 451:    set_dac_a(3.333);
  7402  011494  0EDF               	movlw	223
  7403  011496  6EE6               	movwf	postinc1,c
  7404  011498  0E4F               	movlw	79
  7405  01149A  6EE6               	movwf	postinc1,c
  7406  01149C  0E55               	movlw	85
  7407  01149E  6EE6               	movwf	postinc1,c
  7408  0114A0  0E40               	movlw	64
  7409  0114A2  6EE6               	movwf	postinc1,c
  7410  0114A4  ECA6  F013         	call	_set_dac_a	;wreg free
  7411                           
  7412                           ;main.c: 452:    set_dac_b(6.666);
  7413  0114A8  0EDF               	movlw	223
  7414  0114AA  6EE6               	movwf	postinc1,c
  7415  0114AC  0E4F               	movlw	79
  7416  0114AE  6EE6               	movwf	postinc1,c
  7417  0114B0  0ED5               	movlw	213
  7418  0114B2  6EE6               	movwf	postinc1,c
  7419  0114B4  0E40               	movlw	64
  7420  0114B6  6EE6               	movwf	postinc1,c
  7421  0114B8  EC8C  F013         	call	_set_dac_b	;wreg free
  7422                           
  7423                           ;main.c: 453:    set_dac();
  7424  0114BC  EC63  F006         	call	_set_dac	;wreg free
  7425  0114C0                     l17979:
  7426                           
  7427                           ;main.c: 459:   check_help(V.flipper);
  7428  0114C0  0102               	movlb	2	; () banked
  7429  0114C2  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7430  0114C4  6EE6               	movwf	postinc1,c
  7431  0114C6  EC46  F0EC         	call	_check_help	;wreg free
  7432                           
  7433                           ;main.c: 461:   if (V.enter) {
  7434  0114CA  0102               	movlb	2	; () banked
  7435  0114CC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7436  0114CE  B4D8               	btfsc	status,2,c
  7437  0114D0  D062               	goto	l1505
  7438                           
  7439                           ; BSR set to: 2
  7440                           ;main.c: 462:    V.enter = 0;
  7441  0114D2  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7442                           
  7443                           ;main.c: 463:    V.calib = 0;
  7444  0114D4  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7445                           
  7446                           ; BSR set to: 2
  7447                           ;main.c: 464:    inp_index += 3;
  7448                           ;stkvar	_inp_index @ sp[(-17)+11]
  7449  0114D6  0EFA               	movlw	-6
  7450  0114D8  006F FF8C  F02A    	movff	plusw1,btemp
  7451  0114DE  0E03               	movlw	3
  7452  0114E0  262A               	addwf	btemp^0,f,c
  7453  0114E2  0EFA               	movlw	-6
  7454  0114E4  0060  F0AB  FFE3   	movff	btemp,plusw1
  7455                           
  7456                           ;main.c: 465:    if (inp_index > 9)
  7457                           ;stkvar	_inp_index @ sp[(-17)+11]
  7458  0114EA  0EFA               	movlw	-6
  7459  0114EC  006F FF8C  F02A    	movff	plusw1,btemp
  7460  0114F2  0E09               	movlw	9
  7461  0114F4  642A               	cpfsgt	btemp^0,c
  7462  0114F6  D03A               	goto	l18007
  7463                           
  7464                           ; BSR set to: 2
  7465                           ;main.c: 466:     inp_index = 0;
  7466                           ;stkvar	_inp_index @ sp[(-17)+11]
  7467  0114F8  0EFA               	movlw	-6
  7468  0114FA  6AE3               	clrf	plusw1,c
  7469  0114FC  D037               	goto	l18007
  7470  0114FE                     l17989:
  7471                           
  7472                           ; BSR set to: 2
  7473                           ;main.c: 469:     i = C_BATT;
  7474                           ;stkvar	_i @ sp[(-17)+14]
  7475  0114FE  0EFD               	movlw	-3
  7476  011500  6AE3               	clrf	plusw1,c
  7477                           
  7478                           ; BSR set to: 2
  7479                           ;main.c: 470:     j = C_PV;
  7480                           ;stkvar	_j @ sp[(-17)+13]
  7481  011502  0EFC               	movlw	-4
  7482  011504  6AE3               	clrf	plusw1,c
  7483  011506  2AE3               	incf	plusw1,f,c
  7484                           
  7485                           ; BSR set to: 2
  7486                           ;main.c: 471:     k = V_CC;
  7487                           ;stkvar	_k @ sp[(-17)+12]
  7488  011508  0EFB               	movlw	-5
  7489  01150A  6AE3               	clrf	plusw1,c
  7490  01150C  82E3               	bsf	plusw1,1,c
  7491                           
  7492                           ;main.c: 472:     break;
  7493  01150E  D043               	goto	l1505
  7494  011510                     l17995:
  7495                           
  7496                           ; BSR set to: 2
  7497                           ;main.c: 474:     i = V_BAT;
  7498                           ;stkvar	_i @ sp[(-17)+14]
  7499  011510  0EFD               	movlw	-3
  7500  011512  6AE3               	clrf	plusw1,c
  7501  011514  84E3               	bsf	plusw1,2,c
  7502                           
  7503                           ;main.c: 475:     j = V_PV;
  7504                           ;stkvar	_j @ sp[(-17)+13]
  7505  011516  0EFC               	movlw	-4
  7506  011518  6AE3               	clrf	plusw1,c
  7507  01151A  80E3               	bsf	plusw1,0,c
  7508  01151C  84E3               	bsf	plusw1,2,c	;indir
  7509                           
  7510                           ;main.c: 476:     k = V_CBUS;
  7511                           ;stkvar	_k @ sp[(-17)+12]
  7512  01151E  0EFB               	movlw	-5
  7513  011520  6AE3               	clrf	plusw1,c
  7514  011522  82E3               	bsf	plusw1,1,c
  7515  011524  84E3               	bsf	plusw1,2,c	;indir
  7516                           
  7517                           ;main.c: 477:     break;
  7518  011526  D037               	goto	l1505
  7519  011528                     l17997:
  7520                           
  7521                           ; BSR set to: 2
  7522                           ;main.c: 479:     i = V_BBAT;
  7523                           ;stkvar	_i @ sp[(-17)+14]
  7524  011528  0EFD               	movlw	-3
  7525  01152A  6AE3               	clrf	plusw1,c
  7526  01152C  82E3               	bsf	plusw1,1,c
  7527  01152E  86E3               	bsf	plusw1,3,c	;indir
  7528                           
  7529                           ; BSR set to: 2
  7530                           ;main.c: 480:     j = V_TEMP;
  7531  011530  0E0B               	movlw	11
  7532  011532  6E35               	movwf	(btemp+11)^0,c
  7533                           
  7534                           ;stkvar	_j @ sp[(-17)+13]
  7535  011534  0EFC               	movlw	-4
  7536  011536  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7537                           
  7538                           ; BSR set to: 2
  7539                           ;main.c: 481:     k = V_INVERTER;
  7540                           ;stkvar	_k @ sp[(-17)+12]
  7541  01153C  0EFB               	movlw	-5
  7542  01153E  6AE3               	clrf	plusw1,c
  7543  011540  84E3               	bsf	plusw1,2,c
  7544  011542  86E3               	bsf	plusw1,3,c	;indir
  7545                           
  7546                           ;main.c: 482:     break;
  7547  011544  D028               	goto	l1505
  7548  011546                     l18003:
  7549                           
  7550                           ; BSR set to: 2
  7551                           ;main.c: 484:     i = V_LIGHT_SENSOR;
  7552  011546  0E0D               	movlw	13
  7553  011548  6E35               	movwf	(btemp+11)^0,c
  7554                           
  7555                           ;stkvar	_i @ sp[(-17)+14]
  7556  01154A  0EFD               	movlw	-3
  7557  01154C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7558                           
  7559                           ;main.c: 485:     j = V_LIGHT_SENSOR;
  7560  011552  0E0D               	movlw	13
  7561  011554  6E35               	movwf	(btemp+11)^0,c
  7562                           
  7563                           ;stkvar	_j @ sp[(-17)+13]
  7564  011556  0EFC               	movlw	-4
  7565  011558  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7566                           
  7567                           ;main.c: 486:     k = V_LIGHT_SENSOR;
  7568  01155E  0E0D               	movlw	13
  7569  011560  6E35               	movwf	(btemp+11)^0,c
  7570                           
  7571                           ;stkvar	_k @ sp[(-17)+12]
  7572  011562  0EFB               	movlw	-5
  7573  011564  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7574                           
  7575                           ;main.c: 487:     break;
  7576  01156A  D015               	goto	l1505
  7577  01156C                     l18007:
  7578                           
  7579                           ; BSR set to: 2
  7580                           ;stkvar	_inp_index @ sp[(-17)+11]
  7581  01156C  0EFA               	movlw	-6
  7582  01156E  50E3               	movf	plusw1,w,c
  7583  011570  6E34               	movwf	(btemp+10)^0,c
  7584  011572  6A35               	clrf	(btemp+11)^0,c
  7585                           
  7586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7587                           ; Switch size 1, requested type "simple"
  7588                           ; Number of cases is 1, Range of values is 0 to 0
  7589                           ; switch strategies available:
  7590                           ; Name         Instructions Cycles
  7591                           ; simple_byte            4     3 (average)
  7592                           ;	Chosen strategy is simple_byte
  7593  011574  5035               	movf	(btemp+11)^0,w,c
  7594  011576  0A00               	xorlw	0	; case 0
  7595  011578  A4D8               	btfss	status,2,c
  7596  01157A  D00D               	goto	l1505
  7597                           
  7598                           ; BSR set to: 2
  7599                           ; Switch size 1, requested type "simple"
  7600                           ; Number of cases is 4, Range of values is 0 to 9
  7601                           ; switch strategies available:
  7602                           ; Name         Instructions Cycles
  7603                           ; simple_byte           13     7 (average)
  7604                           ;	Chosen strategy is simple_byte
  7605  01157C  5034               	movf	(btemp+10)^0,w,c
  7606  01157E  0A00               	xorlw	0	; case 0
  7607  011580  B4D8               	btfsc	status,2,c
  7608  011582  D7BD               	goto	l17989
  7609  011584  0A03               	xorlw	3	; case 3
  7610  011586  B4D8               	btfsc	status,2,c
  7611  011588  D7C3               	goto	l17995
  7612  01158A  0A05               	xorlw	5	; case 6
  7613  01158C  B4D8               	btfsc	status,2,c
  7614  01158E  D7CC               	goto	l17997
  7615  011590  0A0F               	xorlw	15	; case 9
  7616  011592  B4D8               	btfsc	status,2,c
  7617  011594  D7D8               	goto	l18003
  7618  011596                     l1505:
  7619                           
  7620                           ; BSR set to: 2
  7621                           ;main.c: 496:   if (V.set_sequ) {
  7622  011596  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7623  011598  EF66  F084         	goto	l17855
  7624                           
  7625                           ; BSR set to: 2
  7626                           ;main.c: 497:    if (TimerDone(TMR_INFO)) {
  7627  01159C  0E07               	movlw	7
  7628  01159E  6EE6               	movwf	postinc1,c
  7629  0115A0  ECD5  F014         	call	_TimerDone	;wreg free
  7630  0115A4  502A               	movf	btemp^0,w,c
  7631  0115A6  B4D8               	btfsc	status,2,c
  7632  0115A8  D00C               	goto	l18017
  7633                           
  7634                           ;main.c: 498:     V.set_sequ = 0;
  7635  0115AA  0102               	movlb	2	; () banked
  7636  0115AC  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7637                           
  7638                           ; BSR set to: 2
  7639                           ;main.c: 499:     set_vterm(0);
  7640  0115AE  0E00               	movlw	0
  7641  0115B0  6EE6               	movwf	postinc1,c
  7642  0115B2  ECCB  F016         	call	_set_vterm	;wreg free
  7643                           
  7644                           ;main.c: 500:     update_lcd(0);
  7645  0115B6  0E00               	movlw	0
  7646  0115B8  6EE6               	movwf	postinc1,c
  7647  0115BA  EC4B  F0F8         	call	_update_lcd	;wreg free
  7648                           
  7649                           ;main.c: 501:    } else {
  7650  0115BE  EF66  F084         	goto	l17855
  7651  0115C2                     l18017:
  7652                           
  7653                           ;main.c: 503:     set_vterm(2);
  7654  0115C2  0E02               	movlw	2
  7655  0115C4  6EE6               	movwf	postinc1,c
  7656  0115C6  ECCB  F016         	call	_set_vterm	;wreg free
  7657                           
  7658                           ;main.c: 504:     update_lcd(2);
  7659  0115CA  0E02               	movlw	2
  7660  0115CC  6EE6               	movwf	postinc1,c
  7661  0115CE  EC4B  F0F8         	call	_update_lcd	;wreg free
  7662  0115D2  EF66  F084         	goto	l17855
  7663  0115D6                     __end_of_main:
  7664                           	opt callstack 0
  7665                           
  7666 ;; *************** function _update_hist_data *****************
  7667 ;; Defined at:
  7668 ;;		line 456 in file "daq.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  mode            1  [STACK] const _Bool 
  7671 ;;  hist            2  [STACK] PTR volatile struct hist
  7672 ;;		 -> C.hist(97), C(320), 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1  [STACK] _Bool 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7679 ;; Tracked objects:
  7680 ;;		On entry : 7/1
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;Total ram usage:        0 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:   15
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_main
  7695 ;; This function uses a reentrant model
  7696 ;;
  7697                           
  7698                           	psect	text1
  7699  00180A                     __ptext1:
  7700                           	opt callstack 0
  7701  00180A                     _update_hist_data:
  7702                           	opt callstack 15
  7703                           
  7704                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  7705                           ;stkvar	_hist @ sp[(0)+-3]
  7706                           
  7707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7708                           ;incstack = 0
  7709  00180A  0EFD               	movlw	-3
  7710  00180C  006F FF8C  F02A    	movff	plusw1,btemp
  7711  001812  0EFE               	movlw	-2
  7712  001814  50E3               	movf	plusw1,w,c
  7713  001816  102A               	iorwf	btemp^0,w,c
  7714  001818  A4D8               	btfss	status,2,c
  7715  00181A  D002               	goto	l14299
  7716  00181C                     u13500:
  7717                           
  7718                           ;daq.c: 459:   return 0;
  7719  00181C  0E00               	movlw	0
  7720  00181E  D01A               	goto	L3
  7721  001820                     l14299:
  7722                           
  7723                           ;daq.c: 461:  if (mode) {
  7724                           ;stkvar	_mode @ sp[(0)+-1]
  7725  001820  0EFF               	movlw	-1
  7726  001822  50E3               	movf	plusw1,w,c
  7727  001824  B4D8               	btfsc	status,2,c
  7728  001826  D018               	goto	l14311
  7729                           
  7730                           ;daq.c: 462:   if (R.hist_save) {
  7731  001828  0101               	movlb	1	; () banked
  7732  00182A  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  7733  00182C  D7F7               	goto	u13500
  7734                           
  7735                           ; BSR set to: 1
  7736                           ;daq.c: 463:    *hist = R.H;
  7737  00182E  EE20  F136         	lfsr	2,_R+54	;volatile
  7738                           
  7739                           ;stkvar	_hist @ sp[(0)+-3]
  7740  001832  0EFD               	movlw	-3
  7741  001834  006F FF8F FFE9     	movff	plusw1,fsr0l
  7742  00183A  0EFE               	movlw	-2
  7743  00183C  006F FF8F FFEA     	movff	plusw1,fsr0h
  7744  001842  0E60               	movlw	96
  7745  001844                     u13531:
  7746  001844  006F FF6F FFEB     	movff	plusw2,plusw0
  7747  00184A  06E8               	decf	wreg,f,c
  7748  00184C  E2FB               	bc	u13531
  7749                           
  7750                           ; BSR set to: 1
  7751                           ;daq.c: 464:    if (R.hist_update) {
  7752  00184E  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  7753  001850  D7E5               	goto	u13500
  7754                           
  7755                           ; BSR set to: 1
  7756                           ;daq.c: 465:     return 1;
  7757  001852  0E01               	movlw	1
  7758  001854                     L3:
  7759  001854  6E2A               	movwf	btemp^0,c
  7760  001856  D013               	goto	l2107
  7761  001858                     l14311:
  7762                           
  7763                           ;daq.c: 469:   R.H = *hist;
  7764                           ;stkvar	_hist @ sp[(0)+-3]
  7765  001858  0EFD               	movlw	-3
  7766  00185A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7767  001860  0EFE               	movlw	-2
  7768  001862  006F FF8F FFDA     	movff	plusw1,fsr2h
  7769  001868  EE00  F136         	lfsr	0,_R+54	;volatile
  7770  00186C  0E60               	movlw	96
  7771  00186E                     u13551:
  7772  00186E  006F FF6F FFEB     	movff	plusw2,plusw0
  7773  001874  06E8               	decf	wreg,f,c
  7774  001876  E2FB               	bc	u13551
  7775                           
  7776                           ;daq.c: 470:   R.hist_save = 1;
  7777  001878  0101               	movlb	1	; () banked
  7778  00187A  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  7779  00187C  D7CF               	goto	u13500
  7780  00187E                     l2107:
  7781                           
  7782                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7783  00187E  52E5               	movf	postdec1,f,c
  7784  001880  52E5               	movf	postdec1,f,c
  7785  001882  52E5               	movf	postdec1,f,c
  7786  001884  0012               	return		;funcret
  7787  001886                     __end_of_update_hist_data:
  7788                           	opt callstack 0
  7789                           
  7790 ;; *************** function _update_cal_data *****************
  7791 ;; Defined at:
  7792 ;;		line 437 in file "daq.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;		None
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;		None
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1  [STACK] void 
  7799 ;; Registers used:
  7800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/39
  7803 ;;		On exit  : 3F/1
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7810 ;;Total ram usage:        0 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:   15
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_main
  7817 ;; This function uses a reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text2
  7821  001FB6                     __ptext2:
  7822                           	opt callstack 0
  7823  001FB6                     _update_cal_data:
  7824                           	opt callstack 15
  7825                           
  7826                           ;daq.c: 439:  R = r_cal;
  7827                           
  7828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7829                           ;incstack = 0
  7830  001FB6  EE21  F040         	lfsr	2,_r_cal
  7831  001FBA  EE00  F100         	lfsr	0,_R	;volatile
  7832  001FBE  0E9A               	movlw	154
  7833  001FC0                     u13471:
  7834  001FC0  006F FF7B FFEE     	movff	postinc2,postinc0
  7835  001FC6  06E8               	decf	wreg,f,c
  7836  001FC8  E2FB               	bc	u13471
  7837  001FCA  0E9B               	movlw	155
  7838  001FCC  5ED9               	subwf	fsr2l,f,c
  7839  001FCE  5EE9               	subwf	fsr0l,f,c
  7840                           
  7841                           ;daq.c: 440:  if (!R.c_zero_cal) {
  7842  001FD0  0101               	movlb	1	; () banked
  7843  001FD2  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  7844  001FD4  D008               	goto	l14289
  7845                           
  7846                           ; BSR set to: 1
  7847                           ;daq.c: 441:   R.n_offset[0] = 3938;
  7848  001FD6  0E0F               	movlw	15
  7849  001FD8  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7850  001FDA  0E62               	movlw	98
  7851  001FDC  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7852                           
  7853                           ;daq.c: 442:   R.n_offset[1] = 4004;
  7854  001FDE  0E0F               	movlw	15
  7855  001FE0  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7856  001FE2  0EA4               	movlw	164
  7857  001FE4  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7858  001FE6                     l14289:
  7859                           
  7860                           ; BSR set to: 1
  7861                           ;daq.c: 446:  if (!R.c_scale_cal) {
  7862  001FE6  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  7863  001FE8  0012               	return	
  7864                           
  7865                           ; BSR set to: 1
  7866                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  7867  001FEA  0EA0               	movlw	160
  7868  001FEC  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7869  001FEE  0E89               	movlw	137
  7870  001FF0  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7871  001FF2  0EB0               	movlw	176
  7872  001FF4  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7873  001FF6  0E3D               	movlw	61
  7874  001FF8  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7875                           
  7876                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  7877  001FFA  0EA4               	movlw	164
  7878  001FFC  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7879  001FFE  0EDE               	movlw	222
  7880  002000  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7881  002002  0E13               	movlw	19
  7882  002004  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7883  002006  0E3D               	movlw	61
  7884  002008  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7885                           
  7886                           ; BSR set to: 1
  7887                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7888  00200A  0012               	return		;funcret
  7889  00200C                     __end_of_update_cal_data:
  7890                           	opt callstack 0
  7891                           
  7892 ;; *************** function _static_soc *****************
  7893 ;; Defined at:
  7894 ;;		line 118 in file "mbmc.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;		None
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  1  [STACK] void 
  7901 ;; Registers used:
  7902 ;;		wreg, fsr2l, fsr2h
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/1
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7912 ;;Total ram usage:        0 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:   15
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_main
  7919 ;; This function uses a reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text3
  7923  001EA8                     __ptext3:
  7924                           	opt callstack 0
  7925  001EA8                     _static_soc:
  7926                           	opt callstack 15
  7927                           
  7928                           ;mbmc.c: 120:  C.runtime = 120;
  7929                           
  7930                           ; BSR set to: 1
  7931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7932                           ;incstack = 0
  7933  001EA8  0E78               	movlw	120
  7934  001EAA  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7935  001EB0  0E00               	movlw	0
  7936  001EB2  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7937                           
  7938                           ;mbmc.c: 121:  C.soc = 100;
  7939  001EB8  0E64               	movlw	100
  7940  001EBA  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7941  001EC0  0E00               	movlw	0
  7942  001EC2  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7943                           
  7944                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7945  001EC8  EE22  F18B         	lfsr	2,_C+140	;volatile
  7946  001ECC  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7947  001ED2  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7948  001ED8  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7949  001EDE  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7950                           
  7951                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7952  001EE4  EE22  F18F         	lfsr	2,_C+144	;volatile
  7953  001EE8  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7954  001EEE  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7955  001EF4  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7956  001EFA  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7957                           
  7958                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7959  001F00  0012               	return		;funcret
  7960  001F02                     __end_of_static_soc:
  7961                           	opt callstack 0
  7962                           
  7963 ;; *************** function _start_switch_handler *****************
  7964 ;; Defined at:
  7965 ;;		line 125 in file "dio.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1  [STACK] void 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 3F/39
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7983 ;;Total ram usage:        0 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:   16
  7986 ;; This function calls:
  7987 ;;		_INT1_SetInterruptHandler
  7988 ;; This function is called by:
  7989 ;;		_main
  7990 ;; This function uses a reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text4
  7994  002D1A                     __ptext4:
  7995                           	opt callstack 0
  7996  002D1A                     _start_switch_handler:
  7997                           	opt callstack 14
  7998                           
  7999                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  8000                           
  8001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8002                           ;incstack = 0
  8003  002D1A  0139               	movlb	57	; () banked
  8004  002D1C  9195               	bcf	149,0,b	;volatile
  8005                           
  8006                           ; BSR set to: 57
  8007                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  8008  002D1E  0EF6               	movlw	low _switch_handler
  8009  002D20  6EE6               	movwf	postinc1,c
  8010  002D22  0EF5               	movlw	high _switch_handler
  8011  002D24  6EE6               	movwf	postinc1,c
  8012  002D26  0E01               	movlw	low (_switch_handler shr (0+16))
  8013  002D28  6EE6               	movwf	postinc1,c
  8014  002D2A  EC61  F015         	call	_INT1_SetInterruptHandler	;wreg free
  8015                           
  8016                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  8017  002D2E  0E02               	movlw	2
  8018  002D30  0101               	movlb	1	; () banked
  8019  002D32  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  8020                           
  8021                           ; BSR set to: 1
  8022                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  8023  002D34  0139               	movlb	57	; () banked
  8024  002D36  8195               	bsf	149,0,b	;volatile
  8025                           
  8026                           ; BSR set to: 57
  8027                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  8028  002D38  0012               	return		;funcret
  8029  002D3A                     __end_of_start_switch_handler:
  8030                           	opt callstack 0
  8031                           
  8032 ;; *************** function _srand *****************
  8033 ;; Defined at:
  8034 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  s               2  [STACK] unsigned int 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1  [STACK] void 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/3D
  8045 ;;		On exit  : 3F/2
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8052 ;;Total ram usage:        0 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:   15
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_main
  8059 ;; This function uses a reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text5
  8063  0026E4                     __ptext5:
  8064                           	opt callstack 0
  8065  0026E4                     _srand:
  8066                           	opt callstack 15
  8067                           
  8068                           ;stkvar	_s @ sp[(0)+-2]
  8069                           
  8070                           ; BSR set to: 57
  8071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8072                           ;incstack = 0
  8073  0026E4  0EFE               	movlw	-2
  8074  0026E6  50E3               	movf	plusw1,w,c
  8075  0026E8  0FFF               	addlw	255
  8076  0026EA  6E34               	movwf	(btemp+10)^0,c
  8077  0026EC  0EFF               	movlw	-1
  8078  0026EE  006F FF8C  F035    	movff	plusw1,btemp+11
  8079  0026F4  0EFF               	movlw	255
  8080  0026F6  2235               	addwfc	(btemp+11)^0,f,c
  8081  0026F8  0060  F0D0  F2DE   	movff	btemp+10,_seed
  8082  0026FE  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  8083  002704  0102               	movlb	2	; () banked
  8084  002706  6BE0               	clrf	(_seed+2)& (0+255),b
  8085  002708  6BE1               	clrf	(_seed+3)& (0+255),b
  8086  00270A  6BE2               	clrf	(_seed+4)& (0+255),b
  8087  00270C  6BE3               	clrf	(_seed+5)& (0+255),b
  8088  00270E  6BE4               	clrf	(_seed+6)& (0+255),b
  8089  002710  6BE5               	clrf	(_seed+7)& (0+255),b
  8090                           
  8091                           ; BSR set to: 2
  8092                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  8093  002712  52E5               	movf	postdec1,f,c
  8094  002714  52E5               	movf	postdec1,f,c
  8095  002716  0012               	return		;funcret
  8096  002718                     __end_of_srand:
  8097                           	opt callstack 0
  8098                           
  8099 ;; *************** function _set_time *****************
  8100 ;; Defined at:
  8101 ;;		line 255 in file "mbmc.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  t               8  [STACK] long long 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;		None
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  1  [STACK] void 
  8108 ;; Registers used:
  8109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  8110 ;; Tracked objects:
  8111 ;;		On entry : 3F/39
  8112 ;;		On exit  : 3F/39
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8119 ;;Total ram usage:        0 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:   15
  8122 ;; This function calls:
  8123 ;;		Nothing
  8124 ;; This function is called by:
  8125 ;;		_main
  8126 ;; This function uses a reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text6
  8130  002678                     __ptext6:
  8131                           	opt callstack 0
  8132  002678                     _set_time:
  8133                           	opt callstack 15
  8134                           
  8135                           ;mbmc.c: 255: void set_time(time_t t);mbmc.c: 256: {;mbmc.c: 257:  PIE8bits.TMR5IE = 0;
  8136                           
  8137                           ; BSR set to: 2
  8138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8139                           ;incstack = 0
  8140  002678  0139               	movlb	57	; () banked
  8141  00267A  9D98               	bcf	152,6,b	;volatile
  8142                           
  8143                           ; BSR set to: 57
  8144                           ;mbmc.c: 258:  V.ticks=t;
  8145                           ;stkvar	_t @ sp[(0)+-8]
  8146  00267C  50E1               	movf	fsr1l,w,c
  8147  00267E  0FF8               	addlw	-8
  8148  002680  6ED9               	movwf	fsr2l,c
  8149  002682  50E2               	movf	fsr1h,w,c
  8150  002684  6EDA               	movwf	fsr2h,c
  8151  002686  0EFF               	movlw	255
  8152  002688  22DA               	addwfc	fsr2h,f,c
  8153  00268A  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  8154  002690  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  8155  002696  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  8156  00269C  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  8157                           
  8158                           ; BSR set to: 57
  8159                           ;mbmc.c: 259:  PIE8bits.TMR5IE = 1;
  8160  0026A2  8D98               	bsf	152,6,b	;volatile
  8161                           
  8162                           ; BSR set to: 57
  8163                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  8164  0026A4  0EF8               	movlw	248
  8165  0026A6  26E1               	addwf	fsr1l,f,c
  8166  0026A8  0EFF               	movlw	255
  8167  0026AA  22E2               	addwfc	fsr1h,f,c
  8168  0026AC  0012               	return		;funcret
  8169  0026AE                     __end_of_set_time:
  8170                           	opt callstack 0
  8171                           
  8172 ;; *************** function _set_hist_flag *****************
  8173 ;; Defined at:
  8174 ;;		line 475 in file "daq.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1  [STACK] void 
  8181 ;; Registers used:
  8182 ;;		None
  8183 ;; Tracked objects:
  8184 ;;		On entry : 3F/39
  8185 ;;		On exit  : 3F/1
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8192 ;;Total ram usage:        0 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:   15
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_main
  8199 ;; This function uses a reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text7
  8203  002FCE                     __ptext7:
  8204                           	opt callstack 0
  8205  002FCE                     _set_hist_flag:
  8206                           	opt callstack 15
  8207                           
  8208                           ;daq.c: 477:  R.hist_update = 1;
  8209                           
  8210                           ; BSR set to: 57
  8211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8212                           ;incstack = 0
  8213  002FCE  0101               	movlb	1	; () banked
  8214  002FD0  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  8215                           
  8216                           ; BSR set to: 1
  8217                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8218  002FD2  0012               	return		;funcret
  8219  002FD4                     __end_of_set_hist_flag:
  8220                           	opt callstack 0
  8221                           
  8222 ;; *************** function _set_dac_b *****************
  8223 ;; Defined at:
  8224 ;;		line 308 in file "daq.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  voltage         4  [STACK] const float 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  2  [STACK] unsigned short 
  8231 ;; Registers used:
  8232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/3D
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8242 ;;Total ram usage:        0 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:   17
  8245 ;; This function calls:
  8246 ;;		_convert_dac_raw
  8247 ;; This function is called by:
  8248 ;;		_main
  8249 ;; This function uses a reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text8
  8253  002718                     __ptext8:
  8254                           	opt callstack 0
  8255  002718                     _set_dac_b:
  8256                           	opt callstack 13
  8257                           
  8258                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8259                           ;stkvar	_voltage @ sp[(0)+-4]
  8260                           
  8261                           ; BSR set to: 1
  8262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8263                           ;incstack = 0
  8264  002718  0EFC               	movlw	-4
  8265  00271A  006F FF8F FFE6     	movff	plusw1,postinc1
  8266  002720  006F FF8F FFE6     	movff	plusw1,postinc1
  8267  002726  006F FF8F FFE6     	movff	plusw1,postinc1
  8268  00272C  006F FF8F FFE6     	movff	plusw1,postinc1
  8269  002732  ECF7  F0FD         	call	_convert_dac_raw	;wreg free
  8270  002736  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8271  00273C  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8272                           
  8273                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8274                           
  8275                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8276  002742  52E5               	movf	postdec1,f,c
  8277  002744  52E5               	movf	postdec1,f,c
  8278  002746  52E5               	movf	postdec1,f,c
  8279  002748  52E5               	movf	postdec1,f,c
  8280  00274A  0012               	return		;funcret
  8281  00274C                     __end_of_set_dac_b:
  8282                           	opt callstack 0
  8283                           
  8284 ;; *************** function _set_dac_a *****************
  8285 ;; Defined at:
  8286 ;;		line 299 in file "daq.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  voltage         4  [STACK] const float 
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  2  [STACK] unsigned short 
  8293 ;; Registers used:
  8294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8295 ;; Tracked objects:
  8296 ;;		On entry : 3F/3D
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8304 ;;Total ram usage:        0 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; Hardware stack levels required when called:   17
  8307 ;; This function calls:
  8308 ;;		_convert_dac_raw
  8309 ;; This function is called by:
  8310 ;;		_main
  8311 ;; This function uses a reentrant model
  8312 ;;
  8313                           
  8314                           	psect	text9
  8315  00274C                     __ptext9:
  8316                           	opt callstack 0
  8317  00274C                     _set_dac_a:
  8318                           	opt callstack 13
  8319                           
  8320                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8321                           ;stkvar	_voltage @ sp[(0)+-4]
  8322                           
  8323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8324                           ;incstack = 0
  8325  00274C  0EFC               	movlw	-4
  8326  00274E  006F FF8F FFE6     	movff	plusw1,postinc1
  8327  002754  006F FF8F FFE6     	movff	plusw1,postinc1
  8328  00275A  006F FF8F FFE6     	movff	plusw1,postinc1
  8329  002760  006F FF8F FFE6     	movff	plusw1,postinc1
  8330  002766  ECF7  F0FD         	call	_convert_dac_raw	;wreg free
  8331  00276A  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8332  002770  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8333                           
  8334                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8335                           
  8336                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8337  002776  52E5               	movf	postdec1,f,c
  8338  002778  52E5               	movf	postdec1,f,c
  8339  00277A  52E5               	movf	postdec1,f,c
  8340  00277C  52E5               	movf	postdec1,f,c
  8341  00277E  0012               	return		;funcret
  8342  002780                     __end_of_set_dac_a:
  8343                           	opt callstack 0
  8344                           
  8345 ;; *************** function _convert_dac_raw *****************
  8346 ;; Defined at:
  8347 ;;		line 281 in file "daq.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  voltage         4  [STACK] float 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  2  [STACK] unsigned short 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/3D
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;Total ram usage:        0 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:   16
  8368 ;; This function calls:
  8369 ;;		___fldiv
  8370 ;;		___flge
  8371 ;;		___fltol
  8372 ;; This function is called by:
  8373 ;;		_set_dac_a
  8374 ;;		_set_dac_b
  8375 ;; This function uses a reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text10
  8379  01FBEE                     __ptext10:
  8380                           	opt callstack 0
  8381  01FBEE                     _convert_dac_raw:
  8382                           	opt callstack 13
  8383                           
  8384                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8385                           
  8386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8387                           ;incstack = 0
  8388  01FBEE  0E6F               	movlw	111
  8389  01FBF0  6EE6               	movwf	postinc1,c
  8390  01FBF2  0E12               	movlw	18
  8391  01FBF4  6EE6               	movwf	postinc1,c
  8392  01FBF6  0E83               	movlw	131
  8393  01FBF8  6EE6               	movwf	postinc1,c
  8394  01FBFA  0E3A               	movlw	58
  8395  01FBFC  6EE6               	movwf	postinc1,c
  8396                           
  8397                           ;stkvar	_voltage @ sp[(-4)+-4]
  8398  01FBFE  0EF8               	movlw	-8
  8399  01FC00  006F FF8F FFE6     	movff	plusw1,postinc1
  8400  01FC06  006F FF8F FFE6     	movff	plusw1,postinc1
  8401  01FC0C  006F FF8F FFE6     	movff	plusw1,postinc1
  8402  01FC12  006F FF8F FFE6     	movff	plusw1,postinc1
  8403  01FC18  ECE9  F0F6         	call	___flge	;wreg free
  8404  01FC1C  B02A               	btfsc	btemp& (0+255),0,c
  8405  01FC1E  D018               	goto	l13823
  8406                           
  8407                           ;daq.c: 287:   voltage = 0.001;
  8408  01FC20  0E6F               	movlw	111
  8409  01FC22  6E32               	movwf	(btemp+8)^0,c
  8410  01FC24  0E12               	movlw	18
  8411  01FC26  6E33               	movwf	(btemp+9)^0,c
  8412  01FC28  0E83               	movlw	131
  8413  01FC2A  6E34               	movwf	(btemp+10)^0,c
  8414  01FC2C  0E3A               	movlw	58
  8415  01FC2E  6E35               	movwf	(btemp+11)^0,c
  8416                           
  8417                           ;stkvar	_voltage @ sp[(0)+-4]
  8418  01FC30  0EFC               	movlw	-4
  8419  01FC32  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8420  01FC38  0EFD               	movlw	-3
  8421  01FC3A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8422  01FC40  0EFE               	movlw	-2
  8423  01FC42  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8424  01FC48  0EFF               	movlw	-1
  8425  01FC4A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8426  01FC50                     l13823:
  8427                           
  8428                           ;daq.c: 288:  if (voltage > 10.0)
  8429                           ;stkvar	_voltage @ sp[(0)+-4]
  8430  01FC50  0EFC               	movlw	-4
  8431  01FC52  006F FF8F FFE6     	movff	plusw1,postinc1
  8432  01FC58  006F FF8F FFE6     	movff	plusw1,postinc1
  8433  01FC5E  006F FF8F FFE6     	movff	plusw1,postinc1
  8434  01FC64  006F FF8F FFE6     	movff	plusw1,postinc1
  8435  01FC6A  0E00               	movlw	0
  8436  01FC6C  6EE6               	movwf	postinc1,c
  8437  01FC6E  0E00               	movlw	0
  8438  01FC70  6EE6               	movwf	postinc1,c
  8439  01FC72  0E20               	movlw	32
  8440  01FC74  6EE6               	movwf	postinc1,c
  8441  01FC76  0E41               	movlw	65
  8442  01FC78  6EE6               	movwf	postinc1,c
  8443  01FC7A  ECE9  F0F6         	call	___flge	;wreg free
  8444  01FC7E  B02A               	btfsc	btemp& (0+255),0,c
  8445  01FC80  D018               	goto	l13827
  8446                           
  8447                           ;daq.c: 289:   voltage = 10.0;
  8448  01FC82  0E00               	movlw	0
  8449  01FC84  6E32               	movwf	(btemp+8)^0,c
  8450  01FC86  0E00               	movlw	0
  8451  01FC88  6E33               	movwf	(btemp+9)^0,c
  8452  01FC8A  0E20               	movlw	32
  8453  01FC8C  6E34               	movwf	(btemp+10)^0,c
  8454  01FC8E  0E41               	movlw	65
  8455  01FC90  6E35               	movwf	(btemp+11)^0,c
  8456                           
  8457                           ;stkvar	_voltage @ sp[(0)+-4]
  8458  01FC92  0EFC               	movlw	-4
  8459  01FC94  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8460  01FC9A  0EFD               	movlw	-3
  8461  01FC9C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8462  01FCA2  0EFE               	movlw	-2
  8463  01FCA4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8464  01FCAA  0EFF               	movlw	-1
  8465  01FCAC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8466  01FCB2                     l13827:
  8467                           
  8468                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  8469  01FCB2  0EF6               	movlw	246
  8470  01FCB4  6EE6               	movwf	postinc1,c
  8471  01FCB6  0E09               	movlw	9
  8472  01FCB8  6EE6               	movwf	postinc1,c
  8473  01FCBA  0E20               	movlw	32
  8474  01FCBC  6EE6               	movwf	postinc1,c
  8475  01FCBE  0E3B               	movlw	59
  8476  01FCC0  6EE6               	movwf	postinc1,c
  8477                           
  8478                           ;stkvar	_voltage @ sp[(-4)+-4]
  8479  01FCC2  0EF8               	movlw	-8
  8480  01FCC4  006F FF8F FFE6     	movff	plusw1,postinc1
  8481  01FCCA  006F FF8F FFE6     	movff	plusw1,postinc1
  8482  01FCD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8483  01FCD6  006F FF8F FFE6     	movff	plusw1,postinc1
  8484  01FCDC  ECB8  F0C3         	call	___fldiv	;wreg free
  8485  01FCE0  0060  F0AB  FFE6   	movff	btemp,postinc1
  8486  01FCE6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8487  01FCEC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8488  01FCF2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8489  01FCF8  EC7D  F0F5         	call	___fltol	;wreg free
  8490                           
  8491                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8492  01FCFC  52E5               	movf	postdec1,f,c
  8493  01FCFE  52E5               	movf	postdec1,f,c
  8494  01FD00  52E5               	movf	postdec1,f,c
  8495  01FD02  52E5               	movf	postdec1,f,c
  8496  01FD04  0012               	return		;funcret
  8497  01FD06                     __end_of_convert_dac_raw:
  8498                           	opt callstack 0
  8499                           
  8500 ;; *************** function _set_dac *****************
  8501 ;; Defined at:
  8502 ;;		line 257 in file "daq.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;		None
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;		None
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  1  [STACK] void 
  8509 ;; Registers used:
  8510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/3D
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8520 ;;Total ram usage:        0 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:   16
  8523 ;; This function calls:
  8524 ;;		_SPI1_Exchange8bit
  8525 ;;		_dac_spi_control
  8526 ;; This function is called by:
  8527 ;;		_main
  8528 ;; This function uses a reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text11
  8532  000CC6                     __ptext11:
  8533                           	opt callstack 0
  8534  000CC6                     _set_dac:
  8535                           	opt callstack 14
  8536                           
  8537                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  8538                           
  8539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8540                           ;incstack = 0
  8541  000CC6  013D               	movlb	61	; () banked
  8542  000CC8  AB17               	btfss	23,5,b	;volatile
  8543  000CCA  D7FD               	goto	_set_dac
  8544                           
  8545                           ; BSR set to: 61
  8546                           
  8547                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  8548  000CCC  84BC               	bsf	188,2,c	;volatile
  8549                           
  8550                           ; BSR set to: 61
  8551                           
  8552                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  8553  000CCE  80BC               	bsf	188,0,c	;volatile
  8554                           
  8555                           ; BSR set to: 61
  8556                           ;daq.c: 262:  dac_spi_control(1);
  8557  000CD0  0E01               	movlw	1
  8558  000CD2  6EE6               	movwf	postinc1,c
  8559  000CD4  EC43  F00C         	call	_dac_spi_control	;wreg free
  8560                           
  8561                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8562  000CD8  C120  F124         	movff	_R+32,_R+36	;volatile
  8563                           
  8564                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8565  000CDC  EE20  F120         	lfsr	2,_R+32	;volatile
  8566  000CE0  006F FF78  F034    	movff	postinc2,btemp+10
  8567  000CE6  006F FF74  F035    	movff	postdec2,btemp+11
  8568  000CEC  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8569  000CF2  6A35               	clrf	(btemp+11)^0,c
  8570  000CF4  0E0F               	movlw	15
  8571  000CF6  1634               	andwf	(btemp+10)^0,f,c
  8572  000CF8  0101               	movlb	1	; () banked
  8573  000CFA  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8574  000CFC  1834               	xorwf	(btemp+10)^0,w,c
  8575  000CFE  0BF0               	andlw	-16
  8576  000D00  1834               	xorwf	(btemp+10)^0,w,c
  8577  000D02  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8578                           
  8579                           ; BSR set to: 1
  8580                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  8581  000D04  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8582  000D06  0B0F               	andlw	-241
  8583  000D08  0940               	iorlw	64
  8584  000D0A  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8585                           
  8586                           ; BSR set to: 1
  8587  000D0C  90BF               	bcf	191,0,c	;volatile
  8588                           
  8589                           ; BSR set to: 1
  8590                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8591  000D0E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8592  000D10  6EE6               	movwf	postinc1,c
  8593  000D12  ECAD  F016         	call	_SPI1_Exchange8bit	;wreg free
  8594                           
  8595                           ; BSR set to: 57
  8596                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8597  000D16  0101               	movlb	1	; () banked
  8598  000D18  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8599  000D1A  6EE6               	movwf	postinc1,c
  8600  000D1C  ECAD  F016         	call	_SPI1_Exchange8bit	;wreg free
  8601                           
  8602                           ; BSR set to: 57
  8603  000D20  80BF               	bsf	191,0,c	;volatile
  8604                           
  8605                           ; BSR set to: 57
  8606                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8607  000D22  C122  F124         	movff	_R+34,_R+36	;volatile
  8608                           
  8609                           ; BSR set to: 57
  8610                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8611  000D26  EE20  F122         	lfsr	2,_R+34	;volatile
  8612  000D2A  006F FF78  F034    	movff	postinc2,btemp+10
  8613  000D30  006F FF74  F035    	movff	postdec2,btemp+11
  8614  000D36  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8615  000D3C  6A35               	clrf	(btemp+11)^0,c
  8616  000D3E  0E0F               	movlw	15
  8617  000D40  1634               	andwf	(btemp+10)^0,f,c
  8618  000D42  0101               	movlb	1	; () banked
  8619  000D44  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8620  000D46  1834               	xorwf	(btemp+10)^0,w,c
  8621  000D48  0BF0               	andlw	-16
  8622  000D4A  1834               	xorwf	(btemp+10)^0,w,c
  8623  000D4C  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8624                           
  8625                           ; BSR set to: 1
  8626                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  8627  000D4E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8628  000D50  0B0F               	andlw	-241
  8629  000D52  0950               	iorlw	80
  8630  000D54  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8631                           
  8632                           ; BSR set to: 1
  8633  000D56  90BF               	bcf	191,0,c	;volatile
  8634                           
  8635                           ; BSR set to: 1
  8636                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8637  000D58  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8638  000D5A  6EE6               	movwf	postinc1,c
  8639  000D5C  ECAD  F016         	call	_SPI1_Exchange8bit	;wreg free
  8640                           
  8641                           ; BSR set to: 57
  8642                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8643  000D60  0101               	movlb	1	; () banked
  8644  000D62  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8645  000D64  6EE6               	movwf	postinc1,c
  8646  000D66  ECAD  F016         	call	_SPI1_Exchange8bit	;wreg free
  8647  000D6A                     l2044:
  8648  000D6A  013D               	movlb	61	; () banked
  8649  000D6C  AB17               	btfss	23,5,b	;volatile
  8650  000D6E  D7FD               	goto	l2044
  8651                           
  8652                           ; BSR set to: 61
  8653                           
  8654                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  8655  000D70  80BF               	bsf	191,0,c	;volatile
  8656                           
  8657                           ; BSR set to: 61
  8658                           ;daq.c: 278:  dac_spi_control(0);
  8659  000D72  0E00               	movlw	0
  8660  000D74  6EE6               	movwf	postinc1,c
  8661  000D76  EC43  F00C         	call	_dac_spi_control	;wreg free
  8662                           
  8663                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8664  000D7A  0012               	return		;funcret
  8665  000D7C                     __end_of_set_dac:
  8666                           	opt callstack 0
  8667                           
  8668 ;; *************** function _dac_spi_control *****************
  8669 ;; Defined at:
  8670 ;;		line 209 in file "daq.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  set             1  [STACK] _Bool 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;		None
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1  [STACK] void 
  8677 ;; Registers used:
  8678 ;;		wreg, fsr1l, fsr1h, status,2
  8679 ;; Tracked objects:
  8680 ;;		On entry : 3F/3D
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8688 ;;Total ram usage:        0 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:   15
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_set_dac
  8695 ;; This function uses a reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text12
  8699  001886                     __ptext12:
  8700                           	opt callstack 0
  8701  001886                     _dac_spi_control:
  8702                           	opt callstack 14
  8703                           
  8704                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  8705                           ;stkvar	_set @ sp[(0)+-1]
  8706                           
  8707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8708                           ;incstack = 0
  8709  001886  0EFF               	movlw	-1
  8710  001888  50E3               	movf	plusw1,w,c
  8711  00188A  B4D8               	btfsc	status,2,c
  8712  00188C  D022               	goto	l13815
  8713                           
  8714                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  8715  00188E  013D               	movlb	61	; () banked
  8716  001890  9F14               	bcf	20,7,b	;volatile
  8717                           
  8718                           ; BSR set to: 61
  8719                           ;daq.c: 216:   if (!init) {
  8720  001892  5052               	movf	dac_spi_control@init^0,w,c
  8721  001894  A4D8               	btfss	status,2,c
  8722  001896  D011               	goto	l13803
  8723                           
  8724                           ; BSR set to: 61
  8725                           ;daq.c: 217:    init = 1;
  8726  001898  0E01               	movlw	1
  8727  00189A  6E52               	movwf	dac_spi_control@init^0,c
  8728                           
  8729                           ; BSR set to: 61
  8730                           ;daq.c: 218:    S0 = SPI1CON0;
  8731  00189C  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8732                           
  8733                           ; BSR set to: 61
  8734                           ;daq.c: 219:    S1 = SPI1CON1;
  8735  0018A2  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8736                           
  8737                           ; BSR set to: 61
  8738                           ;daq.c: 220:    S2 = SPI1CON2;
  8739  0018A8  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8740                           
  8741                           ; BSR set to: 61
  8742                           ;daq.c: 221:    SC = SPI1CLK;
  8743  0018AE  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8744                           
  8745                           ; BSR set to: 61
  8746                           ;daq.c: 222:    SB = SPI1BAUD;
  8747  0018B4  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8748  0018BA                     l13803:
  8749                           
  8750                           ; BSR set to: 61
  8751                           ;daq.c: 228:   SPI1CON1 = 0x00;
  8752  0018BA  6B15               	clrf	21,b	;volatile
  8753                           
  8754                           ; BSR set to: 61
  8755                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  8756  0018BC  8D15               	bsf	21,6,b	;volatile
  8757                           
  8758                           ; BSR set to: 61
  8759                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  8760  0018BE  9B15               	bcf	21,5,b	;volatile
  8761                           
  8762                           ; BSR set to: 61
  8763                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  8764  0018C0  9F15               	bcf	21,7,b	;volatile
  8765                           
  8766                           ;daq.c: 233:   SPI1CON2 = 0x03;
  8767  0018C2  0E03               	movlw	3
  8768  0018C4  6F16               	movwf	22,b	;volatile
  8769                           
  8770                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  8771  0018C6  0E0F               	movlw	15
  8772  0018C8  6F19               	movwf	25,b	;volatile
  8773                           
  8774                           ; BSR set to: 61
  8775                           ;daq.c: 237:   SPI1CLK = 0x00;
  8776  0018CA  6B1C               	clrf	28,b	;volatile
  8777                           
  8778                           ;daq.c: 239:   SPI1CON0 = 0x83;
  8779  0018CC  0E83               	movlw	131
  8780  0018CE  6F14               	movwf	20,b	;volatile
  8781  0018D0  D014               	goto	L4
  8782  0018D2                     l13815:
  8783                           
  8784                           ;daq.c: 242:   if (init) {
  8785  0018D2  5052               	movf	dac_spi_control@init^0,w,c
  8786  0018D4  B4D8               	btfsc	status,2,c
  8787  0018D6  D012               	goto	l2028
  8788                           
  8789                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  8790  0018D8  013D               	movlb	61	; () banked
  8791  0018DA  9F14               	bcf	20,7,b	;volatile
  8792                           
  8793                           ;daq.c: 247:    SPI1CON1 = S1;
  8794  0018DC  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8795                           
  8796                           ;daq.c: 248:    SPI1CON2 = S2;
  8797  0018E2  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8798                           
  8799                           ;daq.c: 249:    SPI1CLK = SC;
  8800  0018E8  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8801                           
  8802                           ;daq.c: 250:    SPI1BAUD = SB;
  8803  0018EE  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8804                           
  8805                           ;daq.c: 251:    SPI1CON0 = S0;
  8806  0018F4  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8807  0018FA                     L4:
  8808                           
  8809                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  8810  0018FA  8F14               	bsf	20,7,b	;volatile
  8811  0018FC                     l2028:
  8812                           
  8813                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8814  0018FC  52E5               	movf	postdec1,f,c
  8815  0018FE  0012               	return		;funcret
  8816  001900                     __end_of_dac_spi_control:
  8817                           	opt callstack 0
  8818                           
  8819 ;; *************** function _read_cal_data *****************
  8820 ;; Defined at:
  8821 ;;		line 370 in file "daq.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;		None
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;  x               2  [STACK] unsigned short 
  8826 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8827 ;;		 -> r_cal(155), 
  8828 ;;  y               2  [STACK] unsigned short 
  8829 ;;  crcVal_save     1  [STACK] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1  [STACK] _Bool 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/39
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8843 ;;Total ram usage:        0 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:   17
  8846 ;; This function calls:
  8847 ;;		_CRC_8BitDataWrite
  8848 ;;		_CRC_CalculatedResultGet
  8849 ;;		_CRC_Initialize
  8850 ;;		_CRC_IsBusy
  8851 ;;		_CRC_Start
  8852 ;;		_DATAEE_ReadByte
  8853 ;; This function is called by:
  8854 ;;		_main
  8855 ;; This function uses a reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text13
  8859  01DCA2                     __ptext13:
  8860                           	opt callstack 0
  8861  01DCA2                     _read_cal_data:
  8862                           	opt callstack 0
  8863                           
  8864                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8865  01DCA2  0E07               	movlw	7
  8866  01DCA4  26E1               	addwf	fsr1l,f,c
  8867  01DCA6  0E00               	movlw	0
  8868  01DCA8  22E2               	addwfc	fsr1h,f,c
  8869                           
  8870                           ;daq.c: 372:  uint16_t x = 0, y;
  8871                           ;stkvar	_x @ sp[(-7)+0]
  8872                           
  8873                           ;incstack = 0
  8874  01DCAA  0EF9               	movlw	-7
  8875  01DCAC  6AE3               	clrf	plusw1,c
  8876  01DCAE  0EFA               	movlw	-6
  8877  01DCB0  6AE3               	clrf	plusw1,c
  8878                           
  8879                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  8880  01DCB2  0E9B               	movlw	155
  8881  01DCB4  6E34               	movwf	(btemp+10)^0,c
  8882  01DCB6  0E00               	movlw	0
  8883  01DCB8  6E35               	movwf	(btemp+11)^0,c
  8884                           
  8885                           ;stkvar	_y @ sp[(-7)+4]
  8886  01DCBA  0EFD               	movlw	-3
  8887  01DCBC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8888  01DCC2  0EFE               	movlw	-2
  8889  01DCC4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8890                           
  8891                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  8892                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8893  01DCCA  0E04               	movlw	high _r_cal
  8894  01DCCC  6E2A               	movwf	btemp^0,c
  8895  01DCCE  0EFC               	movlw	-4
  8896  01DCD0  0060  F0AB  FFE3   	movff	btemp,plusw1
  8897  01DCD6  0E40               	movlw	low _r_cal
  8898  01DCD8  6E2A               	movwf	btemp^0,c
  8899  01DCDA  0EFB               	movlw	-5
  8900  01DCDC  0060  F0AB  FFE3   	movff	btemp,plusw1
  8901                           
  8902                           ;daq.c: 378:  CRC_Initialize();
  8903  01DCE2  EC73  F00A         	call	_CRC_Initialize	;wreg free
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;daq.c: 381:  CRC_Start();
  8907  01DCE6  ECEA  F017         	call	_CRC_Start	;wreg free
  8908  01DCEA                     l14249:
  8909                           
  8910                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8911                           ;stkvar	_x @ sp[(-7)+0]
  8912  01DCEA  0EF9               	movlw	-7
  8913  01DCEC  006F FF8F FFE6     	movff	plusw1,postinc1
  8914  01DCF2  006F FF8F FFE6     	movff	plusw1,postinc1
  8915  01DCF8  ECDA  F013         	call	_DATAEE_ReadByte	;wreg free
  8916                           
  8917                           ;stkvar	_x @ sp[(-7)+0]
  8918  01DCFC  0EF9               	movlw	-7
  8919  01DCFE  006F FF8C  F034    	movff	plusw1,btemp+10
  8920  01DD04  0EFA               	movlw	-6
  8921  01DD06  006F FF8C  F035    	movff	plusw1,btemp+11
  8922                           
  8923                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8924  01DD0C  0EFB               	movlw	-5
  8925  01DD0E  006F FF8C  F032    	movff	plusw1,btemp+8
  8926  01DD14  0EFC               	movlw	-4
  8927  01DD16  006F FF8C  F033    	movff	plusw1,btemp+9
  8928  01DD1C  5034               	movf	(btemp+10)^0,w,c
  8929  01DD1E  2432               	addwf	(btemp+8)^0,w,c
  8930  01DD20  6ED9               	movwf	fsr2l,c
  8931  01DD22  5035               	movf	(btemp+11)^0,w,c
  8932  01DD24  2033               	addwfc	(btemp+9)^0,w,c
  8933  01DD26  6EDA               	movwf	fsr2h,c
  8934  01DD28  0060  F0AB  FFDF   	movff	btemp,indf2
  8935                           
  8936                           ;daq.c: 385:  } while (++x < y);
  8937                           ;stkvar	_y @ sp[(-7)+4]
  8938  01DD2E  0EFD               	movlw	-3
  8939  01DD30  006F FF8C  F034    	movff	plusw1,btemp+10
  8940  01DD36  0EFE               	movlw	-2
  8941  01DD38  006F FF8C  F035    	movff	plusw1,btemp+11
  8942                           
  8943                           ;stkvar	_x @ sp[(-7)+0]
  8944  01DD3E  0EF9               	movlw	-7
  8945  01DD40  50E3               	movf	plusw1,w,c
  8946  01DD42  0F01               	addlw	1
  8947  01DD44  6E2A               	movwf	btemp^0,c
  8948  01DD46  0EF9               	movlw	-7
  8949  01DD48  0060  F0AB  FFE3   	movff	btemp,plusw1
  8950  01DD4E  6A2A               	clrf	btemp^0,c
  8951  01DD50  0EFA               	movlw	-6
  8952  01DD52  50E3               	movf	plusw1,w,c
  8953  01DD54  202A               	addwfc	btemp^0,w,c
  8954  01DD56  6E2A               	movwf	btemp^0,c
  8955  01DD58  0EFA               	movlw	-6
  8956  01DD5A  0060  F0AB  FFE3   	movff	btemp,plusw1
  8957  01DD60  0EF9               	movlw	-7
  8958  01DD62  006F FF8C  F032    	movff	plusw1,btemp+8
  8959  01DD68  0EFA               	movlw	-6
  8960  01DD6A  006F FF8C  F033    	movff	plusw1,btemp+9
  8961  01DD70  5034               	movf	(btemp+10)^0,w,c
  8962  01DD72  5C32               	subwf	(btemp+8)^0,w,c
  8963  01DD74  5035               	movf	(btemp+11)^0,w,c
  8964  01DD76  5833               	subwfb	(btemp+9)^0,w,c
  8965  01DD78  A0D8               	btfss	status,0,c
  8966  01DD7A  D7B7               	goto	l14249
  8967                           
  8968                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  8969                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8970  01DD7C  0EFF               	movlw	-1
  8971  01DD7E  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  8972                           
  8973                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  8974  01DD84  0E57               	movlw	87
  8975  01DD86  0104               	movlb	4	; () banked
  8976  01DD88  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  8977  01DD8A  E163               	bnz	l14269
  8978  01DD8C  0E19               	movlw	25
  8979  01DD8E  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  8980  01DD90  A4D8               	btfss	status,2,c
  8981  01DD92  D05F               	goto	u13460
  8982                           
  8983                           ; BSR set to: 4
  8984                           ;daq.c: 389:   r_cal.crc = 0x42;
  8985  01DD94  0E42               	movlw	66
  8986  01DD96  6FDA               	movwf	(_r_cal+154)& (0+255),b
  8987                           
  8988                           ; BSR set to: 4
  8989                           ;daq.c: 390:   x = 0;
  8990                           ;stkvar	_x @ sp[(-7)+0]
  8991  01DD98  0EF9               	movlw	-7
  8992  01DD9A  6AE3               	clrf	plusw1,c
  8993  01DD9C  0EFA               	movlw	-6
  8994  01DD9E  6AE3               	clrf	plusw1,c
  8995  01DDA0                     l14261:
  8996                           
  8997                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8998                           ;stkvar	_x @ sp[(-7)+0]
  8999  01DDA0  0EF9               	movlw	-7
  9000  01DDA2  006F FF8C  F034    	movff	plusw1,btemp+10
  9001  01DDA8  0EFA               	movlw	-6
  9002  01DDAA  006F FF8C  F035    	movff	plusw1,btemp+11
  9003                           
  9004                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  9005  01DDB0  0EFB               	movlw	-5
  9006  01DDB2  006F FF8C  F032    	movff	plusw1,btemp+8
  9007  01DDB8  0EFC               	movlw	-4
  9008  01DDBA  006F FF8C  F033    	movff	plusw1,btemp+9
  9009  01DDC0  5034               	movf	(btemp+10)^0,w,c
  9010  01DDC2  2432               	addwf	(btemp+8)^0,w,c
  9011  01DDC4  6ED9               	movwf	fsr2l,c
  9012  01DDC6  5035               	movf	(btemp+11)^0,w,c
  9013  01DDC8  2033               	addwfc	(btemp+9)^0,w,c
  9014  01DDCA  6EDA               	movwf	fsr2h,c
  9015  01DDCC  50DF               	movf	indf2,w,c
  9016  01DDCE  6EE6               	movwf	postinc1,c
  9017  01DDD0  EC51  F017         	call	_CRC_8BitDataWrite	;wreg free
  9018  01DDD4                     l14263:
  9019  01DDD4  EC73  F017         	call	_CRC_IsBusy	;wreg free
  9020  01DDD8  502A               	movf	btemp^0,w,c
  9021  01DDDA  A4D8               	btfss	status,2,c
  9022  01DDDC  D7FB               	goto	l14263
  9023                           
  9024                           ;daq.c: 395:   } while (++x < y);
  9025                           ;stkvar	_y @ sp[(-7)+4]
  9026  01DDDE  0EFD               	movlw	-3
  9027  01DDE0  006F FF8C  F034    	movff	plusw1,btemp+10
  9028  01DDE6  0EFE               	movlw	-2
  9029  01DDE8  006F FF8C  F035    	movff	plusw1,btemp+11
  9030                           
  9031                           ;stkvar	_x @ sp[(-7)+0]
  9032  01DDEE  0EF9               	movlw	-7
  9033  01DDF0  50E3               	movf	plusw1,w,c
  9034  01DDF2  0F01               	addlw	1
  9035  01DDF4  6E2A               	movwf	btemp^0,c
  9036  01DDF6  0EF9               	movlw	-7
  9037  01DDF8  0060  F0AB  FFE3   	movff	btemp,plusw1
  9038  01DDFE  6A2A               	clrf	btemp^0,c
  9039  01DE00  0EFA               	movlw	-6
  9040  01DE02  50E3               	movf	plusw1,w,c
  9041  01DE04  202A               	addwfc	btemp^0,w,c
  9042  01DE06  6E2A               	movwf	btemp^0,c
  9043  01DE08  0EFA               	movlw	-6
  9044  01DE0A  0060  F0AB  FFE3   	movff	btemp,plusw1
  9045  01DE10  0EF9               	movlw	-7
  9046  01DE12  006F FF8C  F032    	movff	plusw1,btemp+8
  9047  01DE18  0EFA               	movlw	-6
  9048  01DE1A  006F FF8C  F033    	movff	plusw1,btemp+9
  9049  01DE20  5034               	movf	(btemp+10)^0,w,c
  9050  01DE22  5C32               	subwf	(btemp+8)^0,w,c
  9051  01DE24  5035               	movf	(btemp+11)^0,w,c
  9052  01DE26  5833               	subwfb	(btemp+9)^0,w,c
  9053  01DE28  A0D8               	btfss	status,0,c
  9054  01DE2A  D7BA               	goto	l14261
  9055                           
  9056                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  9057  01DE2C  0E00               	movlw	0
  9058  01DE2E  6EE6               	movwf	postinc1,c
  9059  01DE30  0E00               	movlw	0
  9060  01DE32  6EE6               	movwf	postinc1,c
  9061  01DE34  0E00               	movlw	0
  9062  01DE36  6EE6               	movwf	postinc1,c
  9063  01DE38  ECC4  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
  9064                           
  9065                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9066  01DE3C  0EFF               	movlw	-1
  9067  01DE3E  50E3               	movf	plusw1,w,c
  9068  01DE40  6E34               	movwf	(btemp+10)^0,c
  9069  01DE42  6A35               	clrf	(btemp+11)^0,c
  9070  01DE44  5034               	movf	(btemp+10)^0,w,c
  9071  01DE46  182A               	xorwf	btemp^0,w,c
  9072  01DE48  E104               	bnz	u13460
  9073  01DE4A  5035               	movf	(btemp+11)^0,w,c
  9074  01DE4C  182B               	xorwf	(btemp+1)^0,w,c
  9075  01DE4E  B4D8               	btfsc	status,2,c
  9076  01DE50  D002               	goto	l14277
  9077  01DE52                     u13460:
  9078  01DE52                     l14269:
  9079                           
  9080                           ;daq.c: 397:    return 0;
  9081  01DE52  0E00               	movlw	0
  9082  01DE54  D005               	goto	L5
  9083  01DE56                     l14277:
  9084                           
  9085                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  9086                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9087  01DE56  0EFF               	movlw	-1
  9088  01DE58  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  9089                           
  9090                           ;daq.c: 402:  return 1;
  9091  01DE5E  0E01               	movlw	1
  9092  01DE60                     L5:
  9093  01DE60  6E2A               	movwf	btemp^0,c
  9094                           
  9095                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9096  01DE62  0EF9               	movlw	249
  9097  01DE64  26E1               	addwf	fsr1l,f,c
  9098  01DE66  0EFF               	movlw	255
  9099  01DE68  22E2               	addwfc	fsr1h,f,c
  9100  01DE6A  0012               	return		;funcret
  9101  01DE6C                     __end_of_read_cal_data:
  9102                           	opt callstack 0
  9103                           
  9104 ;; *************** function _DATAEE_ReadByte *****************
  9105 ;; Defined at:
  9106 ;;		line 194 in file "mcc_generated_files/memory.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  bAdd            2  [STACK] unsigned short 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;		None
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  1  [STACK] unsigned char 
  9113 ;; Registers used:
  9114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/39
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9124 ;;Total ram usage:        0 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; Hardware stack levels required when called:   15
  9127 ;; This function calls:
  9128 ;;		Nothing
  9129 ;; This function is called by:
  9130 ;;		_read_cal_data
  9131 ;; This function uses a reentrant model
  9132 ;;
  9133                           
  9134                           	psect	text14
  9135  0027B4                     __ptext14:
  9136                           	opt callstack 0
  9137  0027B4                     _DATAEE_ReadByte:
  9138                           	opt callstack 14
  9139                           
  9140                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  9141                           ;stkvar	_bAdd @ sp[(0)+-2]
  9142                           
  9143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9144                           ;incstack = 0
  9145  0027B4  0EFF               	movlw	255
  9146  0027B6  24E1               	addwf	fsr1l,w,c
  9147  0027B8  6ED9               	movwf	fsr2l,c
  9148  0027BA  0EFF               	movlw	255
  9149  0027BC  20E2               	addwfc	fsr1h,w,c
  9150  0027BE  6EDA               	movwf	fsr2h,c
  9151  0027C0  50DF               	movf	indf2,w,c
  9152  0027C2  0B03               	andlw	3
  9153  0027C4  0139               	movlb	57	; () banked
  9154  0027C6  6FE1               	movwf	225,b	;volatile
  9155                           
  9156                           ; BSR set to: 57
  9157                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9158                           ;stkvar	_bAdd @ sp[(0)+-2]
  9159  0027C8  0EFE               	movlw	-2
  9160  0027CA  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  9161                           
  9162                           ; BSR set to: 57
  9163                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  9164  0027D0  0E3F               	movlw	-193
  9165  0027D2  17E5               	andwf	229,f,b	;volsfr
  9166                           
  9167                           ; BSR set to: 57
  9168                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  9169  0027D4  81E5               	bsf	229,0,b	;volsfr
  9170                           
  9171                           ; BSR set to: 57
  9172                           ;mcc_generated_files/memory.c: 200:     __nop();
  9173  0027D6  F000               	nop	
  9174                           
  9175                           ;mcc_generated_files/memory.c: 201:     __nop();
  9176  0027D8  F000               	nop	
  9177                           
  9178                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  9179  0027DA  006E F78C  F02A    	movff	14819,btemp	;volatile
  9180                           
  9181                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  9182  0027E0  52E5               	movf	postdec1,f,c
  9183  0027E2  52E5               	movf	postdec1,f,c
  9184  0027E4  0012               	return		;funcret
  9185  0027E6                     __end_of_DATAEE_ReadByte:
  9186                           	opt callstack 0
  9187                           
  9188 ;; *************** function _load_hist_data *****************
  9189 ;; Defined at:
  9190 ;;		line 224 in file "mbmc.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;		None
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;  esr_rescale     2  [STACK] short 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1  [STACK] void 
  9197 ;; Registers used:
  9198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  9199 ;; Tracked objects:
  9200 ;;		On entry : 3F/1
  9201 ;;		On exit  : 3F/39
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9208 ;;Total ram usage:        0 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:   16
  9211 ;; This function calls:
  9212 ;;		___fldiv
  9213 ;;		___flmul
  9214 ;;		___fltol
  9215 ;;		_start_bsoc
  9216 ;;		_stop_bsoc
  9217 ;;		_time
  9218 ;; This function is called by:
  9219 ;;		_main
  9220 ;; This function uses a reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text15
  9224  01C8FC                     __ptext15:
  9225                           	opt callstack 0
  9226  01C8FC                     _load_hist_data:
  9227                           	opt callstack 0
  9228                           
  9229                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9230  01C8FC  52E6               	movf	postinc1,f,c
  9231  01C8FE  52E6               	movf	postinc1,f,c
  9232                           
  9233                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9234                           
  9235                           ;incstack = 0
  9236  01C900  ECF6  F017         	call	_stop_bsoc	;wreg free
  9237                           
  9238                           ; BSR set to: 57
  9239                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9240  01C904  0E00               	movlw	0
  9241  01C906  6EE6               	movwf	postinc1,c
  9242  01C908  0E00               	movlw	0
  9243  01C90A  6EE6               	movwf	postinc1,c
  9244  01C90C  0E7A               	movlw	122
  9245  01C90E  6EE6               	movwf	postinc1,c
  9246  01C910  0E44               	movlw	68
  9247  01C912  6EE6               	movwf	postinc1,c
  9248  01C914  EE22  F187         	lfsr	2,_C+136	;volatile
  9249  01C918  006F FF7B FFE6     	movff	postinc2,postinc1
  9250  01C91E  006F FF7B FFE6     	movff	postinc2,postinc1
  9251  01C924  006F FF7B FFE6     	movff	postinc2,postinc1
  9252  01C92A  006F FF7B FFE6     	movff	postinc2,postinc1
  9253  01C930  EC67  F0B8         	call	___flmul	;wreg free
  9254  01C934  0060  F0AB  FFE6   	movff	btemp,postinc1
  9255  01C93A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9256  01C940  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9257  01C946  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9258  01C94C  EC7D  F0F5         	call	___fltol	;wreg free
  9259  01C950  0060  F0A8  F034   	movff	btemp,btemp+10
  9260  01C956  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9261                           
  9262                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9263  01C95C  0EFE               	movlw	-2
  9264  01C95E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9265  01C964  0EFF               	movlw	-1
  9266  01C966  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9267                           
  9268                           ;mbmc.c: 230:  C.hist[0].updates++;
  9269  01C96C  EE22  F1D9         	lfsr	2,_C+218	;volatile
  9270  01C970  2ADE               	incf	postinc2,f,c
  9271  01C972  0E00               	movlw	0
  9272  01C974  22DE               	addwfc	postinc2,f,c
  9273  01C976  22DE               	addwfc	postinc2,f,c
  9274  01C978  22DE               	addwfc	postinc2,f,c
  9275                           
  9276                           ;mbmc.c: 231:  C.hist[0].h[12] += (int16_t) (C.pvkw / 10.0);
  9277  01C97A  0E00               	movlw	0
  9278  01C97C  6EE6               	movwf	postinc1,c
  9279  01C97E  0E00               	movlw	0
  9280  01C980  6EE6               	movwf	postinc1,c
  9281  01C982  0E20               	movlw	32
  9282  01C984  6EE6               	movwf	postinc1,c
  9283  01C986  0E41               	movlw	65
  9284  01C988  6EE6               	movwf	postinc1,c
  9285  01C98A  EE22  F1A7         	lfsr	2,_C+168	;volatile
  9286  01C98E  006F FF7B FFE6     	movff	postinc2,postinc1
  9287  01C994  006F FF7B FFE6     	movff	postinc2,postinc1
  9288  01C99A  006F FF7B FFE6     	movff	postinc2,postinc1
  9289  01C9A0  006F FF7B FFE6     	movff	postinc2,postinc1
  9290  01C9A6  ECB8  F0C3         	call	___fldiv	;wreg free
  9291  01C9AA  0060  F0AB  FFE6   	movff	btemp,postinc1
  9292  01C9B0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9293  01C9B6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9294  01C9BC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9295  01C9C2  EC7D  F0F5         	call	___fltol	;wreg free
  9296  01C9C6  0060  F0A8  F034   	movff	btemp,btemp+10
  9297  01C9CC  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9298  01C9D2  EE22  F1F5         	lfsr	2,_C+246	;volatile
  9299  01C9D6  5034               	movf	(btemp+10)^0,w,c
  9300  01C9D8  26DE               	addwf	postinc2,f,c
  9301  01C9DA  5035               	movf	(btemp+11)^0,w,c
  9302  01C9DC  22DD               	addwfc	postdec2,f,c
  9303                           
  9304                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9305  01C9DE  EE22  F1F3         	lfsr	2,_C+244	;volatile
  9306  01C9E2  2ADE               	incf	postinc2,f,c
  9307  01C9E4  0E00               	movlw	0
  9308  01C9E6  22DD               	addwfc	postdec2,f,c
  9309                           
  9310                           ;mbmc.c: 233:  C.hist[10].h[10] = esr_rescale;
  9311                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9312  01C9E8  50E1               	movf	fsr1l,w,c
  9313  01C9EA  0FFE               	addlw	-2
  9314  01C9EC  6ED9               	movwf	fsr2l,c
  9315  01C9EE  50E2               	movf	fsr1h,w,c
  9316  01C9F0  6EDA               	movwf	fsr2h,c
  9317  01C9F2  0EFF               	movlw	255
  9318  01C9F4  22DA               	addwfc	fsr2h,f,c
  9319  01C9F6  006F FF78  FDBB    	movff	postinc2,_C+1212	;volatile
  9320  01C9FC  006F FF74  FDBC    	movff	postdec2,_C+1213	;volatile
  9321                           
  9322                           ;mbmc.c: 234:  C.hist[10].h[9] = esr_rescale;
  9323                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9324  01CA02  50E1               	movf	fsr1l,w,c
  9325  01CA04  0FFE               	addlw	-2
  9326  01CA06  6ED9               	movwf	fsr2l,c
  9327  01CA08  50E2               	movf	fsr1h,w,c
  9328  01CA0A  6EDA               	movwf	fsr2h,c
  9329  01CA0C  0EFF               	movlw	255
  9330  01CA0E  22DA               	addwfc	fsr2h,f,c
  9331  01CA10  006F FF78  FDB9    	movff	postinc2,_C+1210	;volatile
  9332  01CA16  006F FF74  FDBA    	movff	postdec2,_C+1211	;volatile
  9333                           
  9334                           ;mbmc.c: 235:  C.hist[0].h[6] = C.dynamic_ah;
  9335  01CA1C  EE22  F18F         	lfsr	2,_C+144	;volatile
  9336  01CA20  006F FF7B FFE6     	movff	postinc2,postinc1
  9337  01CA26  006F FF7B FFE6     	movff	postinc2,postinc1
  9338  01CA2C  006F FF7B FFE6     	movff	postinc2,postinc1
  9339  01CA32  006F FF7B FFE6     	movff	postinc2,postinc1
  9340  01CA38  EC7D  F0F5         	call	___fltol	;wreg free
  9341  01CA3C  0060  F0A8  F034   	movff	btemp,btemp+10
  9342  01CA42  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9343  01CA48  0060  F0D0  F9E9   	movff	btemp+10,_C+234	;volatile
  9344  01CA4E  0060  F0D4  F9EA   	movff	btemp+11,_C+235	;volatile
  9345                           
  9346                           ;mbmc.c: 236:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9347  01CA54  EE22  F19B         	lfsr	2,_C+156	;volatile
  9348  01CA58  006F FF7B FFE6     	movff	postinc2,postinc1
  9349  01CA5E  006F FF7B FFE6     	movff	postinc2,postinc1
  9350  01CA64  006F FF7B FFE6     	movff	postinc2,postinc1
  9351  01CA6A  006F FF7B FFE6     	movff	postinc2,postinc1
  9352  01CA70  EC7D  F0F5         	call	___fltol	;wreg free
  9353  01CA74  0060  F0A8  F034   	movff	btemp,btemp+10
  9354  01CA7A  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9355  01CA80  0060  F0D0  F9DD   	movff	btemp+10,_C+222	;volatile
  9356  01CA86  0060  F0D4  F9DE   	movff	btemp+11,_C+223	;volatile
  9357                           
  9358                           ;mbmc.c: 237:  C.hist[0].pclock = time(((void*)0));
  9359  01CA8C  0E00               	movlw	0
  9360  01CA8E  6EE6               	movwf	postinc1,c
  9361  01CA90  0E00               	movlw	0
  9362  01CA92  6EE6               	movwf	postinc1,c
  9363  01CA94  EC25  F00F         	call	_time	;wreg free
  9364  01CA98  52E5               	movf	postdec1,f,c
  9365  01CA9A  006F FF9C  F041    	movff	indf1,btemp+23
  9366  01CAA0  52E5               	movf	postdec1,f,c
  9367  01CAA2  006F FF9C  F040    	movff	indf1,btemp+22
  9368  01CAA8  52E5               	movf	postdec1,f,c
  9369  01CAAA  006F FF9C  F03F    	movff	indf1,btemp+21
  9370  01CAB0  52E5               	movf	postdec1,f,c
  9371  01CAB2  006F FF9C  F03E    	movff	indf1,btemp+20
  9372  01CAB8  52E5               	movf	postdec1,f,c
  9373  01CABA  006F FF9C  F03D    	movff	indf1,btemp+19
  9374  01CAC0  52E5               	movf	postdec1,f,c
  9375  01CAC2  006F FF9C  F03C    	movff	indf1,btemp+18
  9376  01CAC8  52E5               	movf	postdec1,f,c
  9377  01CACA  006F FF9C  F03B    	movff	indf1,btemp+17
  9378  01CAD0  52E5               	movf	postdec1,f,c
  9379  01CAD2  006F FF9C  F03A    	movff	indf1,btemp+16
  9380  01CAD8  EE22  F1B9         	lfsr	2,_C+186	;volatile
  9381  01CADC  0060  F0EB  FFDE   	movff	btemp+16,postinc2
  9382  01CAE2  0060  F0EF  FFDE   	movff	btemp+17,postinc2
  9383  01CAE8  0060  F0F3  FFDE   	movff	btemp+18,postinc2
  9384  01CAEE  0060  F0F7  FFDE   	movff	btemp+19,postinc2
  9385  01CAF4  0060  F0FB  FFDE   	movff	btemp+20,postinc2
  9386  01CAFA  0060  F0FF  FFDE   	movff	btemp+21,postinc2
  9387  01CB00  0060  F103  FFDE   	movff	btemp+22,postinc2
  9388  01CB06  0060  F107  FFDE   	movff	btemp+23,postinc2
  9389                           
  9390                           ; BSR set to: 57
  9391                           ;mbmc.c: 238:  C.dynamic_ah = 0.0;
  9392  01CB0C  0E00               	movlw	0
  9393  01CB0E  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9394  01CB14  0E00               	movlw	0
  9395  01CB16  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9396  01CB1C  0E00               	movlw	0
  9397  01CB1E  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9398  01CB24  0E00               	movlw	0
  9399  01CB26  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9400                           
  9401                           ; BSR set to: 57
  9402                           ;mbmc.c: 239:  C.dynamic_ah_adj = 0.0;
  9403  01CB2C  0E00               	movlw	0
  9404  01CB2E  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9405  01CB34  0E00               	movlw	0
  9406  01CB36  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9407  01CB3C  0E00               	movlw	0
  9408  01CB3E  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9409  01CB44  0E00               	movlw	0
  9410  01CB46  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9411                           
  9412                           ; BSR set to: 57
  9413                           ;mbmc.c: 240:  start_bsoc();
  9414  01CB4C  EC6B  F016         	call	_start_bsoc	;wreg free
  9415                           
  9416                           ; BSR set to: 57
  9417                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9418  01CB50  52E5               	movf	postdec1,f,c
  9419  01CB52  52E5               	movf	postdec1,f,c
  9420  01CB54  0012               	return		;funcret
  9421  01CB56                     __end_of_load_hist_data:
  9422                           	opt callstack 0
  9423                           
  9424 ;; *************** function _init_port_dma *****************
  9425 ;; Defined at:
  9426 ;;		line 104 in file "eadog.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;		None
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;		None
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  1  [STACK] void 
  9433 ;; Registers used:
  9434 ;;		wreg, status,2
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/2
  9437 ;;		On exit  : 3F/3B
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9444 ;;Total ram usage:        0 bytes
  9445 ;; Hardware stack levels used:    1
  9446 ;; Hardware stack levels required when called:   15
  9447 ;; This function calls:
  9448 ;;		Nothing
  9449 ;; This function is called by:
  9450 ;;		_main
  9451 ;; This function uses a reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text16
  9455  0027E6                     __ptext16:
  9456                           	opt callstack 0
  9457  0027E6                     _init_port_dma:
  9458                           	opt callstack 15
  9459                           
  9460                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9461                           
  9462                           ; BSR set to: 57
  9463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9464                           ;incstack = 0
  9465  0027E6  0E3F               	movlw	-193
  9466  0027E8  013B               	movlb	59	; () banked
  9467  0027EA  17DD               	andwf	221,f,b	;volatile
  9468                           
  9469                           ; BSR set to: 59
  9470                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9471  0027EC  9BDD               	bcf	221,5,b	;volatile
  9472                           
  9473                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9474  0027EE  51DD               	movf	221,w,b	;volatile
  9475  0027F0  0BF9               	andlw	-7
  9476  0027F2  0902               	iorlw	2
  9477  0027F4  6FDD               	movwf	221,b	;volatile
  9478                           
  9479                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9480  0027F6  0EE7               	movlw	-25
  9481  0027F8  17DD               	andwf	221,f,b	;volatile
  9482                           
  9483                           ; BSR set to: 59
  9484                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9485  0027FA  81DD               	bsf	221,0,b	;volatile
  9486                           
  9487                           ; BSR set to: 59
  9488                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9489  0027FC  9DDC               	bcf	220,6,b	;volatile
  9490                           
  9491                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9492  0027FE  0E3D               	movlw	61
  9493  002800  6FD1               	movwf	209,b	;volatile
  9494  002802  0EEA               	movlw	234
  9495  002804  6FD0               	movwf	208,b	;volatile
  9496                           
  9497                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9498  002806  0EFF               	movlw	low _port_data
  9499  002808  6FD9               	movwf	217,b	;volatile
  9500  00280A  0E06               	movlw	high _port_data
  9501  00280C  6FDA               	movwf	218,b	;volatile
  9502  00280E  0E00               	movlw	low (_port_data shr (0+16))
  9503  002810  6FDB               	movwf	219,b	;volatile
  9504                           
  9505                           ; BSR set to: 59
  9506                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9507  002812  9BDC               	bcf	220,5,b	;volatile
  9508                           
  9509                           ; BSR set to: 59
  9510                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9511  002814  0012               	return		;funcret
  9512  002816                     __end_of_init_port_dma:
  9513                           	opt callstack 0
  9514                           
  9515 ;; *************** function _init_display *****************
  9516 ;; Defined at:
  9517 ;;		line 38 in file "eadog.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;		None
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;		None
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1  [STACK] void 
  9524 ;; Registers used:
  9525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9526 ;; Tracked objects:
  9527 ;;		On entry : 3F/3B
  9528 ;;		On exit  : 3F/3D
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9535 ;;Total ram usage:        0 bytes
  9536 ;; Hardware stack levels used:    1
  9537 ;; Hardware stack levels required when called:   17
  9538 ;; This function calls:
  9539 ;;		_ringBufS_init
  9540 ;;		_send_lcd_cmd
  9541 ;;		_send_lcd_cmd_long
  9542 ;;		_send_lcd_data
  9543 ;;		_wdtdelay
  9544 ;; This function is called by:
  9545 ;;		_main
  9546 ;; This function uses a reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text17
  9550  000682                     __ptext17:
  9551                           	opt callstack 0
  9552  000682                     _init_display:
  9553                           	opt callstack 13
  9554                           
  9555                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9556                           
  9557                           ; BSR set to: 59
  9558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9559                           ;incstack = 0
  9560  000682  0E43               	movlw	low _ring_buf1
  9561  000684  0100               	movlb	0	; () banked
  9562  000686  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9563  000688  0E05               	movlw	high _ring_buf1
  9564  00068A  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9565                           
  9566                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9567  00068C  0E00               	movlw	low _ring_buf2
  9568  00068E  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9569  000690  0E05               	movlw	high _ring_buf2
  9570  000692  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9574  000694  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9575  00069A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9576  0006A0  ECC1  F014         	call	_ringBufS_init	;wreg free
  9577                           
  9578                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9579  0006A4  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9580  0006AA  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9581  0006B0  ECC1  F014         	call	_ringBufS_init	;wreg free
  9582                           
  9583                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9584  0006B4  84BE               	bsf	190,2,c	;volatile
  9585                           
  9586                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9587  0006B6  013D               	movlb	61	; () banked
  9588  0006B8  9F14               	bcf	20,7,b	;volatile
  9589                           
  9590                           ; BSR set to: 61
  9591                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9592  0006BA  0E20               	movlw	32
  9593  0006BC  6F15               	movwf	21,b	;volatile
  9594                           
  9595                           ; BSR set to: 61
  9596                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9597  0006BE  0E03               	movlw	3
  9598  0006C0  6F16               	movwf	22,b	;volatile
  9599                           
  9600                           ; BSR set to: 61
  9601                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9602  0006C2  0E04               	movlw	4
  9603  0006C4  6F19               	movwf	25,b	;volatile
  9604                           
  9605                           ; BSR set to: 61
  9606                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9607  0006C6  0E02               	movlw	2
  9608  0006C8  6F1C               	movwf	28,b	;volatile
  9609                           
  9610                           ; BSR set to: 61
  9611                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9612  0006CA  0E83               	movlw	131
  9613  0006CC  6F14               	movwf	20,b	;volatile
  9614                           
  9615                           ; BSR set to: 61
  9616                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9617  0006CE  8F14               	bsf	20,7,b	;volatile
  9618                           
  9619                           ; BSR set to: 61
  9620                           ;eadog.c: 60:  wdtdelay(350000);
  9621  0006D0  0E30               	movlw	48
  9622  0006D2  6EE6               	movwf	postinc1,c
  9623  0006D4  0E57               	movlw	87
  9624  0006D6  6EE6               	movwf	postinc1,c
  9625  0006D8  0E05               	movlw	5
  9626  0006DA  6EE6               	movwf	postinc1,c
  9627  0006DC  0E00               	movlw	0
  9628  0006DE  6EE6               	movwf	postinc1,c
  9629  0006E0  EC81  F00F         	call	_wdtdelay	;wreg free
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9633  0006E4  0E46               	movlw	70
  9634  0006E6  6EE6               	movwf	postinc1,c
  9635  0006E8  EC09  F012         	call	_send_lcd_cmd_long	;wreg free
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9639  0006EC  0E41               	movlw	65
  9640  0006EE  6EE6               	movwf	postinc1,c
  9641  0006F0  EC29  F012         	call	_send_lcd_cmd	;wreg free
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;eadog.c: 63:  wdtdelay(80);
  9645  0006F4  0E50               	movlw	80
  9646  0006F6  6EE6               	movwf	postinc1,c
  9647  0006F8  0E00               	movlw	0
  9648  0006FA  6EE6               	movwf	postinc1,c
  9649  0006FC  0E00               	movlw	0
  9650  0006FE  6EE6               	movwf	postinc1,c
  9651  000700  0E00               	movlw	0
  9652  000702  6EE6               	movwf	postinc1,c
  9653  000704  EC81  F00F         	call	_wdtdelay	;wreg free
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9657  000708  0E53               	movlw	83
  9658  00070A  6EE6               	movwf	postinc1,c
  9659  00070C  EC29  F012         	call	_send_lcd_cmd	;wreg free
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;eadog.c: 65:  send_lcd_data(2);
  9663  000710  0E02               	movlw	2
  9664  000712  6EE6               	movwf	postinc1,c
  9665  000714  ECEE  F015         	call	_send_lcd_data	;wreg free
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;eadog.c: 66:  wdtdelay(80);
  9669  000718  0E50               	movlw	80
  9670  00071A  6EE6               	movwf	postinc1,c
  9671  00071C  0E00               	movlw	0
  9672  00071E  6EE6               	movwf	postinc1,c
  9673  000720  0E00               	movlw	0
  9674  000722  6EE6               	movwf	postinc1,c
  9675  000724  0E00               	movlw	0
  9676  000726  6EE6               	movwf	postinc1,c
  9677  000728  EC81  F00F         	call	_wdtdelay	;wreg free
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9681  00072C  0E51               	movlw	81
  9682  00072E  6EE6               	movwf	postinc1,c
  9683  000730  EC09  F012         	call	_send_lcd_cmd_long	;wreg free
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9687  000734  013D               	movlb	61	; () banked
  9688  000736  9F14               	bcf	20,7,b	;volatile
  9689                           
  9690                           ; BSR set to: 61
  9691                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9692  000738  0E02               	movlw	2
  9693  00073A  6F16               	movwf	22,b	;volatile
  9694                           
  9695                           ; BSR set to: 61
  9696                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9697  00073C  8F14               	bsf	20,7,b	;volatile
  9698                           
  9699                           ; BSR set to: 61
  9700                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9701  00073E  931A               	bcf	26,1,b	;volatile
  9702                           
  9703                           ; BSR set to: 61
  9704                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9705  000740  0E3F               	movlw	-193
  9706  000742  013B               	movlb	59	; () banked
  9707  000744  17FD               	andwf	253,f,b	;volatile
  9708                           
  9709                           ; BSR set to: 59
  9710                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9711  000746  9BFD               	bcf	253,5,b	;volatile
  9712                           
  9713                           ; BSR set to: 59
  9714                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9715  000748  51FD               	movf	253,w,b	;volatile
  9716  00074A  0BF9               	andlw	-7
  9717  00074C  0902               	iorlw	2
  9718  00074E  6FFD               	movwf	253,b	;volatile
  9719                           
  9720                           ; BSR set to: 59
  9721                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9722  000750  0EE7               	movlw	-25
  9723  000752  17FD               	andwf	253,f,b	;volatile
  9724                           
  9725                           ; BSR set to: 59
  9726                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9727  000754  81FD               	bsf	253,0,b	;volatile
  9728                           
  9729                           ; BSR set to: 59
  9730                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9731  000756  0E43               	movlw	low _ring_buf1
  9732  000758  6FF9               	movwf	249,b	;volatile
  9733  00075A  0E05               	movlw	high _ring_buf1
  9734  00075C  6FFA               	movwf	250,b	;volatile
  9735  00075E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9736  000760  6FFB               	movwf	251,b	;volatile
  9737                           
  9738                           ; BSR set to: 59
  9739                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9740  000762  9BFC               	bcf	252,5,b	;volatile
  9741                           
  9742                           ; BSR set to: 59
  9743                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9744  000764  013D               	movlb	61	; () banked
  9745  000766  831A               	bsf	26,1,b	;volatile
  9746                           
  9747                           ; BSR set to: 61
  9748                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9749  000768  94BE               	bcf	190,2,c	;volatile
  9750                           
  9751                           ; BSR set to: 61
  9752                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9753  00076A  0012               	return		;funcret
  9754  00076C                     __end_of_init_display:
  9755                           	opt callstack 0
  9756                           
  9757 ;; *************** function _send_lcd_data *****************
  9758 ;; Defined at:
  9759 ;;		line 123 in file "eadog.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  data            1  [STACK] const unsigned char 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;		None
  9764 ;; Return value:  Size  Location     Type
  9765 ;;                  1  [STACK] void 
  9766 ;; Registers used:
  9767 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9768 ;; Tracked objects:
  9769 ;;		On entry : 3F/0
  9770 ;;		On exit  : 3F/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9777 ;;Total ram usage:        0 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; Hardware stack levels required when called:   16
  9780 ;; This function calls:
  9781 ;;		_SPI1_Exchange8bit
  9782 ;;		_wdtdelay
  9783 ;; This function is called by:
  9784 ;;		_init_display
  9785 ;; This function uses a reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text18
  9789  002BDC                     __ptext18:
  9790                           	opt callstack 0
  9791  002BDC                     _send_lcd_data:
  9792                           	opt callstack 13
  9793                           
  9794                           ; BSR set to: 61
  9795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9796                           ;incstack = 0
  9797                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9798  002BDC  94BC               	bcf	188,2,c	;volatile
  9799                           
  9800                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9801                           ;stkvar	_data @ sp[(0)+-1]
  9802  002BDE  0EFF               	movlw	-1
  9803  002BE0  50E3               	movf	plusw1,w,c
  9804  002BE2  6EE6               	movwf	postinc1,c
  9805  002BE4  ECAD  F016         	call	_SPI1_Exchange8bit	;wreg free
  9806                           
  9807                           ; BSR set to: 57
  9808                           ;eadog.c: 127:  wdtdelay(8);
  9809  002BE8  0E08               	movlw	8
  9810  002BEA  6EE6               	movwf	postinc1,c
  9811  002BEC  0E00               	movlw	0
  9812  002BEE  6EE6               	movwf	postinc1,c
  9813  002BF0  0E00               	movlw	0
  9814  002BF2  6EE6               	movwf	postinc1,c
  9815  002BF4  0E00               	movlw	0
  9816  002BF6  6EE6               	movwf	postinc1,c
  9817  002BF8  EC81  F00F         	call	_wdtdelay	;wreg free
  9818                           
  9819                           ; BSR set to: 0
  9820                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9821  002BFC  52E5               	movf	postdec1,f,c
  9822  002BFE  0012               	return		;funcret
  9823  002C00                     __end_of_send_lcd_data:
  9824                           	opt callstack 0
  9825                           
  9826 ;; *************** function _send_lcd_cmd_long *****************
  9827 ;; Defined at:
  9828 ;;		line 139 in file "eadog.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  cmd             1  [STACK] const unsigned char 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1  [STACK] void 
  9835 ;; Registers used:
  9836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9837 ;; Tracked objects:
  9838 ;;		On entry : 3F/0
  9839 ;;		On exit  : 3F/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9846 ;;Total ram usage:        0 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:   16
  9849 ;; This function calls:
  9850 ;;		_SPI1_Exchange8bit
  9851 ;;		_wdtdelay
  9852 ;; This function is called by:
  9853 ;;		_init_display
  9854 ;; This function uses a reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text19
  9858  002412                     __ptext19:
  9859                           	opt callstack 0
  9860  002412                     _send_lcd_cmd_long:
  9861                           	opt callstack 13
  9862                           
  9863                           ; BSR set to: 0
  9864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9865                           ;incstack = 0
  9866                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9867  002412  94BC               	bcf	188,2,c	;volatile
  9868                           
  9869                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9870  002414  0EFE               	movlw	254
  9871  002416  6EE6               	movwf	postinc1,c
  9872  002418  ECAD  F016         	call	_SPI1_Exchange8bit	;wreg free
  9873                           
  9874                           ; BSR set to: 57
  9875                           ;eadog.c: 143:  wdtdelay(8);
  9876  00241C  0E08               	movlw	8
  9877  00241E  6EE6               	movwf	postinc1,c
  9878  002420  0E00               	movlw	0
  9879  002422  6EE6               	movwf	postinc1,c
  9880  002424  0E00               	movlw	0
  9881  002426  6EE6               	movwf	postinc1,c
  9882  002428  0E00               	movlw	0
  9883  00242A  6EE6               	movwf	postinc1,c
  9884  00242C  EC81  F00F         	call	_wdtdelay	;wreg free
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9888                           ;stkvar	_cmd @ sp[(0)+-1]
  9889  002430  0EFF               	movlw	-1
  9890  002432  50E3               	movf	plusw1,w,c
  9891  002434  6EE6               	movwf	postinc1,c
  9892  002436  ECAD  F016         	call	_SPI1_Exchange8bit	;wreg free
  9893                           
  9894                           ;eadog.c: 145:  wdtdelay(800);
  9895  00243A  0E20               	movlw	32
  9896  00243C  6EE6               	movwf	postinc1,c
  9897  00243E  0E03               	movlw	3
  9898  002440  6EE6               	movwf	postinc1,c
  9899  002442  0E00               	movlw	0
  9900  002444  6EE6               	movwf	postinc1,c
  9901  002446  0E00               	movlw	0
  9902  002448  6EE6               	movwf	postinc1,c
  9903  00244A  EC81  F00F         	call	_wdtdelay	;wreg free
  9904                           
  9905                           ; BSR set to: 0
  9906                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9907  00244E  52E5               	movf	postdec1,f,c
  9908  002450  0012               	return		;funcret
  9909  002452                     __end_of_send_lcd_cmd_long:
  9910                           	opt callstack 0
  9911                           
  9912 ;; *************** function _send_lcd_cmd *****************
  9913 ;; Defined at:
  9914 ;;		line 130 in file "eadog.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  cmd             1  [STACK] const unsigned char 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;		None
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1  [STACK] void 
  9921 ;; Registers used:
  9922 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9923 ;; Tracked objects:
  9924 ;;		On entry : 3F/0
  9925 ;;		On exit  : 3F/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;Total ram usage:        0 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; Hardware stack levels required when called:   16
  9935 ;; This function calls:
  9936 ;;		_SPI1_Exchange8bit
  9937 ;;		_wdtdelay
  9938 ;; This function is called by:
  9939 ;;		_init_display
  9940 ;; This function uses a reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text20
  9944  002452                     __ptext20:
  9945                           	opt callstack 0
  9946  002452                     _send_lcd_cmd:
  9947                           	opt callstack 13
  9948                           
  9949                           ; BSR set to: 0
  9950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9951                           ;incstack = 0
  9952                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9953  002452  94BC               	bcf	188,2,c	;volatile
  9954                           
  9955                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9956  002454  0EFE               	movlw	254
  9957  002456  6EE6               	movwf	postinc1,c
  9958  002458  ECAD  F016         	call	_SPI1_Exchange8bit	;wreg free
  9959                           
  9960                           ; BSR set to: 57
  9961                           ;eadog.c: 134:  wdtdelay(8);
  9962  00245C  0E08               	movlw	8
  9963  00245E  6EE6               	movwf	postinc1,c
  9964  002460  0E00               	movlw	0
  9965  002462  6EE6               	movwf	postinc1,c
  9966  002464  0E00               	movlw	0
  9967  002466  6EE6               	movwf	postinc1,c
  9968  002468  0E00               	movlw	0
  9969  00246A  6EE6               	movwf	postinc1,c
  9970  00246C  EC81  F00F         	call	_wdtdelay	;wreg free
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9974                           ;stkvar	_cmd @ sp[(0)+-1]
  9975  002470  0EFF               	movlw	-1
  9976  002472  50E3               	movf	plusw1,w,c
  9977  002474  6EE6               	movwf	postinc1,c
  9978  002476  ECAD  F016         	call	_SPI1_Exchange8bit	;wreg free
  9979                           
  9980                           ;eadog.c: 136:  wdtdelay(8);
  9981  00247A  0E08               	movlw	8
  9982  00247C  6EE6               	movwf	postinc1,c
  9983  00247E  0E00               	movlw	0
  9984  002480  6EE6               	movwf	postinc1,c
  9985  002482  0E00               	movlw	0
  9986  002484  6EE6               	movwf	postinc1,c
  9987  002486  0E00               	movlw	0
  9988  002488  6EE6               	movwf	postinc1,c
  9989  00248A  EC81  F00F         	call	_wdtdelay	;wreg free
  9990                           
  9991                           ; BSR set to: 0
  9992                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9993  00248E  52E5               	movf	postdec1,f,c
  9994  002490  0012               	return		;funcret
  9995  002492                     __end_of_send_lcd_cmd:
  9996                           	opt callstack 0
  9997                           
  9998 ;; *************** function _wdtdelay *****************
  9999 ;; Defined at:
 10000 ;;		line 23 in file "eadog.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  delay           4  [STACK] const unsigned long 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;		None
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1  [STACK] void 
 10007 ;; Registers used:
 10008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10009 ;; Tracked objects:
 10010 ;;		On entry : 2/3D
 10011 ;;		On exit  : 3F/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10018 ;;Total ram usage:        0 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:   15
 10021 ;; This function calls:
 10022 ;;		Nothing
 10023 ;; This function is called by:
 10024 ;;		_init_display
 10025 ;;		_send_lcd_data
 10026 ;;		_send_lcd_cmd
 10027 ;;		_send_lcd_cmd_long
 10028 ;; This function uses a reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text21
 10032  001F02                     __ptext21:
 10033                           	opt callstack 0
 10034  001F02                     _wdtdelay:
 10035                           	opt callstack 14
 10036                           
 10037                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10038                           
 10039                           ; BSR set to: 0
 10040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10041                           ;incstack = 0
 10042  001F02  0100               	movlb	0	; () banked
 10043  001F04  6B90               	clrf	wdtdelay@dcount& (0+255),b
 10044  001F06  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10045  001F08  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10046  001F0A  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10047  001F0C                     l1625:
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;eadog.c: 28:   __nop();
 10051  001F0C  F000               	nop	
 10052  001F0E  0004               	clrwdt		;# 
 10053                           
 10054                           ;eadog.c: 30:  };
 10055  001F10  0E01               	movlw	1
 10056  001F12  0100               	movlb	0	; () banked
 10057  001F14  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 10058  001F16  0E00               	movlw	0
 10059  001F18  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10060  001F1A  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10061  001F1C  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;stkvar	_delay @ sp[(0)+-4]
 10065  001F1E  0EFC               	movlw	-4
 10066  001F20  006F FF8C  F02A    	movff	plusw1,btemp
 10067  001F26  5190               	movf	wdtdelay@dcount& (0+255),w,b
 10068  001F28  5C2A               	subwf	btemp^0,w,c
 10069  001F2A  0EFD               	movlw	-3
 10070  001F2C  006F FF8C  F02A    	movff	plusw1,btemp
 10071  001F32  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10072  001F34  582A               	subwfb	btemp^0,w,c
 10073  001F36  0EFE               	movlw	-2
 10074  001F38  006F FF8C  F02A    	movff	plusw1,btemp
 10075  001F3E  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10076  001F40  582A               	subwfb	btemp^0,w,c
 10077  001F42  0EFF               	movlw	-1
 10078  001F44  006F FF8C  F02A    	movff	plusw1,btemp
 10079  001F4A  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10080  001F4C  582A               	subwfb	btemp^0,w,c
 10081  001F4E  B0D8               	btfsc	status,0,c
 10082  001F50  D7DD               	goto	l1625
 10083                           
 10084                           ; BSR set to: 0
 10085                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10086  001F52  52E5               	movf	postdec1,f,c
 10087  001F54  52E5               	movf	postdec1,f,c
 10088  001F56  52E5               	movf	postdec1,f,c
 10089  001F58  52E5               	movf	postdec1,f,c
 10090  001F5A  0012               	return		;funcret
 10091  001F5C                     __end_of_wdtdelay:
 10092                           	opt callstack 0
 10093                           
 10094 ;; *************** function _SPI1_Exchange8bit *****************
 10095 ;; Defined at:
 10096 ;;		line 79 in file "mcc_generated_files/spi1.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  data            1  [STACK] unsigned char 
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1  [STACK] unsigned char 
 10103 ;; Registers used:
 10104 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/1
 10107 ;;		On exit  : 3F/39
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:   15
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_send_lcd_data
 10121 ;;		_send_lcd_cmd
 10122 ;;		_send_lcd_cmd_long
 10123 ;;		_set_dac
 10124 ;; This function uses a reentrant model
 10125 ;;
 10126                           
 10127                           	psect	text22
 10128  002D5A                     __ptext22:
 10129                           	opt callstack 0
 10130  002D5A                     _SPI1_Exchange8bit:
 10131                           	opt callstack 14
 10132                           
 10133                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 10134                           
 10135                           ; BSR set to: 0
 10136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10137                           ;incstack = 0
 10138  002D5A  0E01               	movlw	1
 10139  002D5C  013D               	movlb	61	; () banked
 10140  002D5E  6F12               	movwf	18,b	;volatile
 10141                           
 10142                           ; BSR set to: 61
 10143                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 10144                           ;stkvar	_data @ sp[(0)+-1]
 10145  002D60  0EFF               	movlw	-1
 10146  002D62  006F FF8F FD11     	movff	plusw1,15633	;volatile
 10147  002D68                     l809:
 10148                           
 10149                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 10150  002D68  0139               	movlb	57	; () banked
 10151  002D6A  A9A2               	btfss	162,4,b	;volatile
 10152  002D6C  D7FD               	goto	l809
 10153                           
 10154                           ; BSR set to: 57
 10155                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 10156  002D6E  006F F440  F02A    	movff	15632,btemp	;volatile
 10157                           
 10158                           ; BSR set to: 57
 10159                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10160  002D74  52E5               	movf	postdec1,f,c
 10161  002D76  0012               	return		;funcret
 10162  002D78                     __end_of_SPI1_Exchange8bit:
 10163                           	opt callstack 0
 10164                           
 10165 ;; *************** function _ringBufS_init *****************
 10166 ;; Defined at:
 10167 ;;		line 22 in file "ringbufs.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  _this           2  [STACK] PTR volatile struct ring
 10170 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;		None
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1  [STACK] void 
 10175 ;; Registers used:
 10176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10186 ;;Total ram usage:        0 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:   16
 10189 ;; This function calls:
 10190 ;;		_memset
 10191 ;; This function is called by:
 10192 ;;		_init_display
 10193 ;; This function uses a reentrant model
 10194 ;;
 10195                           
 10196                           	psect	text23
 10197  002982                     __ptext23:
 10198                           	opt callstack 0
 10199  002982                     _ringBufS_init:
 10200                           	opt callstack 13
 10201                           
 10202                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 10203                           
 10204                           ; BSR set to: 57
 10205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10206                           ;incstack = 0
 10207  002982  0E43               	movlw	67
 10208  002984  6EE6               	movwf	postinc1,c
 10209  002986  0E00               	movlw	0
 10210  002988  6EE6               	movwf	postinc1,c
 10211  00298A  0E00               	movlw	0
 10212  00298C  6EE6               	movwf	postinc1,c
 10213  00298E  0E00               	movlw	0
 10214  002990  6EE6               	movwf	postinc1,c
 10215                           
 10216                           ;stkvar	__this @ sp[(-4)+-2]
 10217  002992  0EFA               	movlw	-6
 10218  002994  006F FF8F FFE6     	movff	plusw1,postinc1
 10219  00299A  006F FF8F FFE6     	movff	plusw1,postinc1
 10220  0029A0  ECD6  F0D9         	call	_memset	;wreg free
 10221                           
 10222                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10223  0029A4  52E5               	movf	postdec1,f,c
 10224  0029A6  52E5               	movf	postdec1,f,c
 10225  0029A8  0012               	return		;funcret
 10226  0029AA                     __end_of_ringBufS_init:
 10227                           	opt callstack 0
 10228                           
 10229 ;; *************** function _init_bsoc *****************
 10230 ;; Defined at:
 10231 ;;		line 110 in file "bsoc.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;		None
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;		None
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  1  [STACK] void 
 10238 ;; Registers used:
 10239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10240 ;; Tracked objects:
 10241 ;;		On entry : 0/1
 10242 ;;		On exit  : 0/0
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;Total ram usage:        0 bytes
 10250 ;; Hardware stack levels used:    1
 10251 ;; Hardware stack levels required when called:   18
 10252 ;; This function calls:
 10253 ;;		_TMR3_SetInterruptHandler
 10254 ;;		_Volts_to_SOC
 10255 ;;		___fldiv
 10256 ;;		___flmul
 10257 ;;		___fltol
 10258 ;;		___xxtofl
 10259 ;;		_conv_raw_result
 10260 ;; This function is called by:
 10261 ;;		_main
 10262 ;; This function uses a reentrant model
 10263 ;;
 10264                           
 10265                           	psect	text24
 10266  01CB56                     __ptext24:
 10267                           	opt callstack 0
 10268  01CB56                     _init_bsoc:
 10269                           	opt callstack 12
 10270                           
 10271                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
 10272                           
 10273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10274                           ;incstack = 0
 10275  01CB56  0E00               	movlw	0
 10276  01CB58  6EE6               	movwf	postinc1,c
 10277  01CB5A  0E00               	movlw	0
 10278  01CB5C  6EE6               	movwf	postinc1,c
 10279  01CB5E  0E7A               	movlw	122
 10280  01CB60  6EE6               	movwf	postinc1,c
 10281  01CB62  0E44               	movlw	68
 10282  01CB64  6EE6               	movwf	postinc1,c
 10283  01CB66  0E00               	movlw	0
 10284  01CB68  6EE6               	movwf	postinc1,c
 10285  01CB6A  0E04               	movlw	4
 10286  01CB6C  6EE6               	movwf	postinc1,c
 10287  01CB6E  EC00  F0C9         	call	_conv_raw_result	;wreg free
 10288  01CB72  0060  F0AB  FFE6   	movff	btemp,postinc1
 10289  01CB78  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10290  01CB7E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10291  01CB84  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10292  01CB8A  EC7D  F0F5         	call	___fltol	;wreg free
 10293  01CB8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10294  01CB94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10295  01CB9A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10296  01CBA0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10297  01CBA6  0E00               	movlw	0
 10298  01CBA8  6EE6               	movwf	postinc1,c
 10299  01CBAA  EC4F  F0ED         	call	___xxtofl	;wreg free
 10300  01CBAE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10301  01CBB4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10302  01CBBA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10303  01CBC0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10304  01CBC6  EC67  F0B8         	call	___flmul	;wreg free
 10305  01CBCA  0060  F0AB  FFE6   	movff	btemp,postinc1
 10306  01CBD0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10307  01CBD6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10308  01CBDC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10309  01CBE2  EC7D  F0F5         	call	___fltol	;wreg free
 10310  01CBE6  0060  F0AB  FFE6   	movff	btemp,postinc1
 10311  01CBEC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10312  01CBF2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10313  01CBF8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10314  01CBFE  ECAA  F005         	call	_Volts_to_SOC	;wreg free
 10315  01CC02  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
 10316  01CC08  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
 10317                           
 10318                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
 10319  01CC0E  EE22  F18B         	lfsr	2,_C+140	;volatile
 10320  01CC12  006F FF7B FFE6     	movff	postinc2,postinc1
 10321  01CC18  006F FF7B FFE6     	movff	postinc2,postinc1
 10322  01CC1E  006F FF7B FFE6     	movff	postinc2,postinc1
 10323  01CC24  006F FF7B FFE6     	movff	postinc2,postinc1
 10324  01CC2A  0E00               	movlw	0
 10325  01CC2C  6EE6               	movwf	postinc1,c
 10326  01CC2E  0E00               	movlw	0
 10327  01CC30  6EE6               	movwf	postinc1,c
 10328  01CC32  0EC8               	movlw	200
 10329  01CC34  6EE6               	movwf	postinc1,c
 10330  01CC36  0E42               	movlw	66
 10331  01CC38  6EE6               	movwf	postinc1,c
 10332  01CC3A  0E00               	movlw	0
 10333  01CC3C  6EE6               	movwf	postinc1,c
 10334  01CC3E  0E00               	movlw	0
 10335  01CC40  6EE6               	movwf	postinc1,c
 10336  01CC42  0E7A               	movlw	122
 10337  01CC44  6EE6               	movwf	postinc1,c
 10338  01CC46  0E44               	movlw	68
 10339  01CC48  6EE6               	movwf	postinc1,c
 10340  01CC4A  0E00               	movlw	0
 10341  01CC4C  6EE6               	movwf	postinc1,c
 10342  01CC4E  0E04               	movlw	4
 10343  01CC50  6EE6               	movwf	postinc1,c
 10344  01CC52  EC00  F0C9         	call	_conv_raw_result	;wreg free
 10345  01CC56  0060  F0AB  FFE6   	movff	btemp,postinc1
 10346  01CC5C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10347  01CC62  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10348  01CC68  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10349  01CC6E  EC7D  F0F5         	call	___fltol	;wreg free
 10350  01CC72  0060  F0AB  FFE6   	movff	btemp,postinc1
 10351  01CC78  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10352  01CC7E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10353  01CC84  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10354  01CC8A  0E00               	movlw	0
 10355  01CC8C  6EE6               	movwf	postinc1,c
 10356  01CC8E  EC4F  F0ED         	call	___xxtofl	;wreg free
 10357  01CC92  0060  F0AB  FFE6   	movff	btemp,postinc1
 10358  01CC98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10359  01CC9E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10360  01CCA4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10361  01CCAA  EC67  F0B8         	call	___flmul	;wreg free
 10362  01CCAE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10363  01CCB4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10364  01CCBA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10365  01CCC0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10366  01CCC6  EC7D  F0F5         	call	___fltol	;wreg free
 10367  01CCCA  0060  F0AB  FFE6   	movff	btemp,postinc1
 10368  01CCD0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10369  01CCD6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10370  01CCDC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10371  01CCE2  ECAA  F005         	call	_Volts_to_SOC	;wreg free
 10372  01CCE6  0060  F0A8  F034   	movff	btemp,btemp+10
 10373  01CCEC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10374  01CCF2  5034               	movf	(btemp+10)^0,w,c
 10375  01CCF4  6E2E               	movwf	(btemp+4)^0,c
 10376  01CCF6  5035               	movf	(btemp+11)^0,w,c
 10377  01CCF8  6E2F               	movwf	(btemp+5)^0,c
 10378  01CCFA  6A30               	clrf	(btemp+6)^0,c
 10379  01CCFC  6A31               	clrf	(btemp+7)^0,c
 10380  01CCFE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 10381  01CD04  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 10382  01CD0A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 10383  01CD10  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 10384  01CD16  0E00               	movlw	0
 10385  01CD18  6EE6               	movwf	postinc1,c
 10386  01CD1A  EC4F  F0ED         	call	___xxtofl	;wreg free
 10387  01CD1E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10388  01CD24  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10389  01CD2A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10390  01CD30  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10391  01CD36  ECB8  F0C3         	call	___fldiv	;wreg free
 10392  01CD3A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10393  01CD40  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10394  01CD46  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10395  01CD4C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10396  01CD52  EC67  F0B8         	call	___flmul	;wreg free
 10397  01CD56  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
 10398  01CD5C  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
 10399  01CD62  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
 10400  01CD68  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
 10401                           
 10402                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 10403  01CD6E  EE22  F18F         	lfsr	2,_C+144	;volatile
 10404  01CD72  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 10405  01CD78  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 10406  01CD7E  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 10407  01CD84  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 10408                           
 10409                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 10410  01CD8A  0E4C               	movlw	low _calc_bsoc
 10411  01CD8C  6EE6               	movwf	postinc1,c
 10412  01CD8E  0E54               	movlw	high _calc_bsoc
 10413  01CD90  6EE6               	movwf	postinc1,c
 10414  01CD92  0E01               	movlw	low (_calc_bsoc shr (0+16))
 10415  01CD94  6EE6               	movwf	postinc1,c
 10416  01CD96  EC4D  F015         	call	_TMR3_SetInterruptHandler	;wreg free
 10417                           
 10418                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10419  01CD9A  0012               	return		;funcret
 10420  01CD9C                     __end_of_init_bsoc:
 10421                           	opt callstack 0
 10422                           
 10423 ;; *************** function _Volts_to_SOC *****************
 10424 ;; Defined at:
 10425 ;;		line 175 in file "bsoc.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  cvoltage        4  [STACK] const unsigned long 
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;  soc             2  [STACK] unsigned short 
 10430 ;;  slot            1  [STACK] unsigned char 
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  2  [STACK] unsigned short 
 10433 ;; Registers used:
 10434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/1
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10444 ;;Total ram usage:        0 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:   15
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_init_bsoc
 10451 ;; This function uses a reentrant model
 10452 ;;
 10453                           
 10454                           	psect	text25
 10455  000B54                     __ptext25:
 10456                           	opt callstack 0
 10457  000B54                     _Volts_to_SOC:
 10458                           	opt callstack 0
 10459                           
 10460                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10461  000B54  52E6               	movf	postinc1,f,c
 10462  000B56  52E6               	movf	postinc1,f,c
 10463  000B58  52E6               	movf	postinc1,f,c
 10464                           
 10465                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10466                           ;stkvar	_soc @ sp[(-3)+0]
 10467                           
 10468                           ;incstack = 0
 10469  000B5A  0EFD               	movlw	-3
 10470  000B5C  6AE3               	clrf	plusw1,c
 10471  000B5E  0EFE               	movlw	-2
 10472  000B60  6AE3               	clrf	plusw1,c
 10473                           
 10474                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10475                           ;stkvar	_slot @ sp[(-3)+2]
 10476  000B62  0EFF               	movlw	-1
 10477  000B64  6AE3               	clrf	plusw1,c
 10478  000B66                     l13991:
 10479                           
 10480                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10481                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10482                           ;stkvar	_slot @ sp[(-3)+2]
 10483  000B66  0EFF               	movlw	-1
 10484  000B68  50E3               	movf	plusw1,w,c
 10485  000B6A  0D08               	mullw	8
 10486  000B6C  0E17               	movlw	low _BVSOC_TABLE
 10487  000B6E  24F3               	addwf	243,w,c
 10488  000B70  6EF6               	movwf	tblptrl,c
 10489  000B72  0EF7               	movlw	high _BVSOC_TABLE
 10490  000B74  20F4               	addwfc	244,w,c
 10491  000B76  6EF7               	movwf	tblptrh,c
 10492  000B78                     	if	1	;There are 3 active tblptr bytes
 10493  000B78  6AF8               	clrf	tblptru,c
 10494  000B7A  0E00               	movlw	low (__mediumconst shr (0+16))
 10495  000B7C  22F8               	addwfc	tblptru,f,c
 10496  000B7E                     	endif
 10497  000B7E  0EF9               	movlw	-7
 10498  000B80  50E3               	movf	plusw1,w,c
 10499  000B82  0009               	tblrd		*+
 10500  000B84  5CF5               	subwf	tablat,w,c
 10501  000B86  0EFA               	movlw	-6
 10502  000B88  50E3               	movf	plusw1,w,c
 10503  000B8A  0009               	tblrd		*+
 10504  000B8C  58F5               	subwfb	tablat,w,c
 10505  000B8E  0EFB               	movlw	-5
 10506  000B90  50E3               	movf	plusw1,w,c
 10507  000B92  0009               	tblrd		*+
 10508  000B94  58F5               	subwfb	tablat,w,c
 10509  000B96  0EFC               	movlw	-4
 10510  000B98  50E3               	movf	plusw1,w,c
 10511  000B9A  0009               	tblrd		*+
 10512  000B9C  58F5               	subwfb	tablat,w,c
 10513  000B9E  B0D8               	btfsc	status,0,c
 10514  000BA0  D020               	goto	l13995
 10515                           
 10516                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10517                           ;stkvar	_slot @ sp[(-3)+2]
 10518  000BA2  0EFF               	movlw	-1
 10519  000BA4  50E3               	movf	plusw1,w,c
 10520  000BA6  0D08               	mullw	8
 10521  000BA8  0E04               	movlw	4
 10522  000BAA  26F3               	addwf	243,f,c
 10523  000BAC  0E00               	movlw	0
 10524  000BAE  22F4               	addwfc	244,f,c
 10525  000BB0  0E17               	movlw	low _BVSOC_TABLE
 10526  000BB2  24F3               	addwf	243,w,c
 10527  000BB4  6EF6               	movwf	tblptrl,c
 10528  000BB6  0EF7               	movlw	high _BVSOC_TABLE
 10529  000BB8  20F4               	addwfc	244,w,c
 10530  000BBA  6EF7               	movwf	tblptrh,c
 10531  000BBC                     	if	1	;There are 3 active tblptr bytes
 10532  000BBC  6AF8               	clrf	tblptru,c
 10533  000BBE  0E00               	movlw	low (__mediumconst shr (0+16))
 10534  000BC0  22F8               	addwfc	tblptru,f,c
 10535  000BC2                     	endif
 10536  000BC2  0009               	tblrd		*+
 10537  000BC4  006F FFD4  F034    	movff	tablat,btemp+10
 10538  000BCA  0009               	tblrd		*+
 10539  000BCC  006F FFD4  F035    	movff	tablat,btemp+11
 10540                           
 10541                           ;stkvar	_soc @ sp[(-3)+0]
 10542  000BD2  0EFD               	movlw	-3
 10543  000BD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10544  000BDA  0EFE               	movlw	-2
 10545  000BDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10546  000BE2                     l13995:
 10547                           
 10548                           ;bsoc.c: 187:  }
 10549                           ;stkvar	_slot @ sp[(-3)+2]
 10550  000BE2  0EFF               	movlw	-1
 10551  000BE4  2AE3               	incf	plusw1,f,c
 10552                           
 10553                           ;stkvar	_slot @ sp[(-3)+2]
 10554  000BE6  0EFF               	movlw	-1
 10555  000BE8  006F FF8C  F02A    	movff	plusw1,btemp
 10556  000BEE  0E19               	movlw	25
 10557  000BF0  642A               	cpfsgt	btemp^0,c
 10558  000BF2  D7B9               	goto	l13991
 10559                           
 10560                           ;bsoc.c: 188:  return soc;
 10561                           ;stkvar	_soc @ sp[(-3)+0]
 10562  000BF4  0EFD               	movlw	-3
 10563  000BF6  006F FF8C  F02A    	movff	plusw1,btemp
 10564  000BFC  0EFE               	movlw	-2
 10565  000BFE  006F FF8C  F02B    	movff	plusw1,btemp+1
 10566                           
 10567                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10568  000C04  0EF9               	movlw	249
 10569  000C06  26E1               	addwf	fsr1l,f,c
 10570  000C08  0EFF               	movlw	255
 10571  000C0A  22E2               	addwfc	fsr1h,f,c
 10572  000C0C  0012               	return		;funcret
 10573  000C0E                     __end_of_Volts_to_SOC:
 10574                           	opt callstack 0
 10575                           
 10576 ;; *************** function _hid_display *****************
 10577 ;; Defined at:
 10578 ;;		line 22 in file "hid.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  h               2  [STACK] PTR struct H_data
 10581 ;;		 -> H(9), 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  2  [STACK] PTR struct H_data
 10586 ;; Registers used:
 10587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/39
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10597 ;;Total ram usage:        0 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; Hardware stack levels required when called:   17
 10600 ;; This function calls:
 10601 ;;		_hid_input
 10602 ;; This function is called by:
 10603 ;;		_main
 10604 ;; This function uses a reentrant model
 10605 ;;
 10606                           
 10607                           	psect	text26
 10608  01D670                     __ptext26:
 10609                           	opt callstack 0
 10610  01D670                     _hid_display:
 10611                           	opt callstack 13
 10612                           
 10613                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10614                           ;stkvar	_h @ sp[(0)+-2]
 10615                           
 10616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10617                           ;incstack = 0
 10618  01D670  0EFE               	movlw	-2
 10619  01D672  006F FF8F FFE6     	movff	plusw1,postinc1
 10620  01D678  006F FF8F FFE6     	movff	plusw1,postinc1
 10621  01D67E  EC3C  F0FC         	call	_hid_input	;wreg free
 10622                           
 10623                           ;hid.c: 26:  switch (h->h_state) {
 10624  01D682  D0E6               	goto	l17555
 10625  01D684                     l17529:
 10626                           
 10627                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10628                           ;stkvar	_h @ sp[(0)+-2]
 10629  01D684  0EFE               	movlw	-2
 10630  01D686  006F FF8C  F034    	movff	plusw1,btemp+10
 10631  01D68C  0EFF               	movlw	-1
 10632  01D68E  006F FF8C  F035    	movff	plusw1,btemp+11
 10633  01D694  0E01               	movlw	1
 10634  01D696  2434               	addwf	(btemp+10)^0,w,c
 10635  01D698  6ED9               	movwf	fsr2l,c
 10636  01D69A  0E00               	movlw	0
 10637  01D69C  2035               	addwfc	(btemp+11)^0,w,c
 10638  01D69E  6EDA               	movwf	fsr2h,c
 10639  01D6A0  0E01               	movlw	1
 10640  01D6A2  6EDF               	movwf	indf2,c
 10641                           
 10642                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10643                           ;stkvar	_h @ sp[(0)+-2]
 10644  01D6A4  0EFE               	movlw	-2
 10645  01D6A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10646  01D6AC  0EFF               	movlw	-1
 10647  01D6AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10648  01D6B4  0E00               	movlw	0
 10649  01D6B6  6EDF               	movwf	indf2,c
 10650                           
 10651                           ;hid.c: 30:   h->wait_enter = 1;
 10652                           ;stkvar	_h @ sp[(0)+-2]
 10653  01D6B8  0EFE               	movlw	-2
 10654  01D6BA  006F FF8C  F034    	movff	plusw1,btemp+10
 10655  01D6C0  0EFF               	movlw	-1
 10656  01D6C2  006F FF8C  F035    	movff	plusw1,btemp+11
 10657  01D6C8  0E04               	movlw	4
 10658  01D6CA  2434               	addwf	(btemp+10)^0,w,c
 10659  01D6CC  6ED9               	movwf	fsr2l,c
 10660  01D6CE  0E00               	movlw	0
 10661  01D6D0  2035               	addwfc	(btemp+11)^0,w,c
 10662  01D6D2  6EDA               	movwf	fsr2h,c
 10663  01D6D4  0E01               	movlw	1
 10664  01D6D6  6EDF               	movwf	indf2,c
 10665                           
 10666                           ;hid.c: 31:   h->wait_select = 1;
 10667                           ;stkvar	_h @ sp[(0)+-2]
 10668  01D6D8  0EFE               	movlw	-2
 10669  01D6DA  006F FF8C  F034    	movff	plusw1,btemp+10
 10670  01D6E0  0EFF               	movlw	-1
 10671  01D6E2  006F FF8C  F035    	movff	plusw1,btemp+11
 10672  01D6E8  0E02               	movlw	2
 10673  01D6EA  2434               	addwf	(btemp+10)^0,w,c
 10674  01D6EC  6ED9               	movwf	fsr2l,c
 10675  01D6EE  0E00               	movlw	0
 10676  01D6F0  2035               	addwfc	(btemp+11)^0,w,c
 10677  01D6F2  6EDA               	movwf	fsr2h,c
 10678  01D6F4  0E01               	movlw	1
 10679  01D6F6  6EDF               	movwf	indf2,c
 10680                           
 10681                           ;hid.c: 32:   h->wait_calib = 1;
 10682                           ;stkvar	_h @ sp[(0)+-2]
 10683  01D6F8  0EFE               	movlw	-2
 10684  01D6FA  006F FF8C  F034    	movff	plusw1,btemp+10
 10685  01D700  0EFF               	movlw	-1
 10686  01D702  006F FF8C  F035    	movff	plusw1,btemp+11
 10687  01D708  0E06               	movlw	6
 10688  01D70A  2434               	addwf	(btemp+10)^0,w,c
 10689  01D70C  6ED9               	movwf	fsr2l,c
 10690  01D70E  0E00               	movlw	0
 10691  01D710  2035               	addwfc	(btemp+11)^0,w,c
 10692  01D712  6EDA               	movwf	fsr2h,c
 10693  01D714  0E01               	movlw	1
 10694  01D716  6EDF               	movwf	indf2,c
 10695                           
 10696                           ;hid.c: 33:   h->select_p = SW_OFF;
 10697                           ;stkvar	_h @ sp[(0)+-2]
 10698  01D718  0EFE               	movlw	-2
 10699  01D71A  006F FF8C  F034    	movff	plusw1,btemp+10
 10700  01D720  0EFF               	movlw	-1
 10701  01D722  006F FF8C  F035    	movff	plusw1,btemp+11
 10702  01D728  0E03               	movlw	3
 10703  01D72A  2434               	addwf	(btemp+10)^0,w,c
 10704  01D72C  6ED9               	movwf	fsr2l,c
 10705  01D72E  0E00               	movlw	0
 10706  01D730  2035               	addwfc	(btemp+11)^0,w,c
 10707  01D732  6EDA               	movwf	fsr2h,c
 10708  01D734  0E00               	movlw	0
 10709  01D736  6EDF               	movwf	indf2,c
 10710                           
 10711                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10712                           ;stkvar	_h @ sp[(0)+-2]
 10713  01D738  0EFE               	movlw	-2
 10714  01D73A  006F FF8C  F034    	movff	plusw1,btemp+10
 10715  01D740  0EFF               	movlw	-1
 10716  01D742  006F FF8C  F035    	movff	plusw1,btemp+11
 10717  01D748  0E05               	movlw	5
 10718  01D74A  2434               	addwf	(btemp+10)^0,w,c
 10719  01D74C  6ED9               	movwf	fsr2l,c
 10720  01D74E  0E00               	movlw	0
 10721  01D750  2035               	addwfc	(btemp+11)^0,w,c
 10722  01D752  6EDA               	movwf	fsr2h,c
 10723  01D754  0E00               	movlw	0
 10724  01D756  6EDF               	movwf	indf2,c
 10725                           
 10726                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10727                           ;stkvar	_h @ sp[(0)+-2]
 10728  01D758  0EFE               	movlw	-2
 10729  01D75A  006F FF8C  F034    	movff	plusw1,btemp+10
 10730  01D760  0EFF               	movlw	-1
 10731  01D762  006F FF8C  F035    	movff	plusw1,btemp+11
 10732  01D768  0E07               	movlw	7
 10733  01D76A  2434               	addwf	(btemp+10)^0,w,c
 10734  01D76C  6ED9               	movwf	fsr2l,c
 10735  01D76E  0E00               	movlw	0
 10736  01D770  2035               	addwfc	(btemp+11)^0,w,c
 10737  01D772  6EDA               	movwf	fsr2h,c
 10738  01D774  0E00               	movlw	0
 10739  01D776  D06A               	goto	L6
 10740  01D778                     l17545:
 10741                           
 10742                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10743                           ;stkvar	_h @ sp[(0)+-2]
 10744  01D778  0EFE               	movlw	-2
 10745  01D77A  006F FF8C  F034    	movff	plusw1,btemp+10
 10746  01D780  0EFF               	movlw	-1
 10747  01D782  006F FF8C  F035    	movff	plusw1,btemp+11
 10748  01D788  0E02               	movlw	2
 10749  01D78A  2434               	addwf	(btemp+10)^0,w,c
 10750  01D78C  6ED9               	movwf	fsr2l,c
 10751  01D78E  0E00               	movlw	0
 10752  01D790  2035               	addwfc	(btemp+11)^0,w,c
 10753  01D792  6EDA               	movwf	fsr2h,c
 10754  01D794  50DF               	movf	indf2,w,c
 10755  01D796  A4D8               	btfss	status,2,c
 10756  01D798  D076               	goto	l2301
 10757                           
 10758                           ;stkvar	_h @ sp[(0)+-2]
 10759  01D79A  0EFE               	movlw	-2
 10760  01D79C  006F FF8C  F034    	movff	plusw1,btemp+10
 10761  01D7A2  0EFF               	movlw	-1
 10762  01D7A4  006F FF8C  F035    	movff	plusw1,btemp+11
 10763  01D7AA  0E03               	movlw	3
 10764  01D7AC  2434               	addwf	(btemp+10)^0,w,c
 10765  01D7AE  6ED9               	movwf	fsr2l,c
 10766  01D7B0  0E00               	movlw	0
 10767  01D7B2  2035               	addwfc	(btemp+11)^0,w,c
 10768  01D7B4  6EDA               	movwf	fsr2h,c
 10769  01D7B6  50DF               	movf	indf2,w,c
 10770  01D7B8  A4D8               	btfss	status,2,c
 10771  01D7BA  D065               	goto	l2301
 10772                           
 10773                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10774                           ;stkvar	_h @ sp[(0)+-2]
 10775  01D7BC  0EFE               	movlw	-2
 10776  01D7BE  006F FF8C  F034    	movff	plusw1,btemp+10
 10777  01D7C4  0EFF               	movlw	-1
 10778  01D7C6  006F FF8C  F035    	movff	plusw1,btemp+11
 10779  01D7CC  0E08               	movlw	8
 10780  01D7CE  2434               	addwf	(btemp+10)^0,w,c
 10781  01D7D0  6ED9               	movwf	fsr2l,c
 10782  01D7D2  0E00               	movlw	0
 10783  01D7D4  2035               	addwfc	(btemp+11)^0,w,c
 10784  01D7D6  6EDA               	movwf	fsr2h,c
 10785                           
 10786                           ;stkvar	_h @ sp[(0)+-2]
 10787  01D7D8  0EFE               	movlw	-2
 10788  01D7DA  006F FF8C  F034    	movff	plusw1,btemp+10
 10789  01D7E0  0EFF               	movlw	-1
 10790  01D7E2  006F FF8C  F035    	movff	plusw1,btemp+11
 10791  01D7E8  0E08               	movlw	8
 10792  01D7EA  2434               	addwf	(btemp+10)^0,w,c
 10793  01D7EC  6EE9               	movwf	fsr0l,c
 10794  01D7EE  0E00               	movlw	0
 10795  01D7F0  2035               	addwfc	(btemp+11)^0,w,c
 10796  01D7F2  6EEA               	movwf	fsr0h,c
 10797  01D7F4  2AEF               	incf	indf0,f,c
 10798  01D7F6  50EF               	movf	indf0,w,c
 10799  01D7F8  0B03               	andlw	3
 10800  01D7FA  6EDF               	movwf	indf2,c
 10801                           
 10802                           ;hid.c: 41:    h->hid_display = h->sequence;
 10803                           ;stkvar	_h @ sp[(0)+-2]
 10804  01D7FC  0EFE               	movlw	-2
 10805  01D7FE  006F FF8C  F034    	movff	plusw1,btemp+10
 10806  01D804  0EFF               	movlw	-1
 10807  01D806  006F FF8C  F035    	movff	plusw1,btemp+11
 10808  01D80C  0E08               	movlw	8
 10809  01D80E  2434               	addwf	(btemp+10)^0,w,c
 10810  01D810  6ED9               	movwf	fsr2l,c
 10811  01D812  0E00               	movlw	0
 10812  01D814  2035               	addwfc	(btemp+11)^0,w,c
 10813  01D816  6EDA               	movwf	fsr2h,c
 10814                           
 10815                           ;stkvar	_h @ sp[(0)+-2]
 10816  01D818  0EFE               	movlw	-2
 10817  01D81A  006F FF8F FFE9     	movff	plusw1,fsr0l
 10818  01D820  0EFF               	movlw	-1
 10819  01D822  006F FF8F FFEA     	movff	plusw1,fsr0h
 10820  01D828  006F FF7F FFEF     	movff	indf2,indf0
 10821                           
 10822                           ;hid.c: 42:    h->wait_select = 1;
 10823                           ;stkvar	_h @ sp[(0)+-2]
 10824  01D82E  0EFE               	movlw	-2
 10825  01D830  006F FF8C  F034    	movff	plusw1,btemp+10
 10826  01D836  0EFF               	movlw	-1
 10827  01D838  006F FF8C  F035    	movff	plusw1,btemp+11
 10828  01D83E  0E02               	movlw	2
 10829  01D840  2434               	addwf	(btemp+10)^0,w,c
 10830  01D842  6ED9               	movwf	fsr2l,c
 10831  01D844  0E00               	movlw	0
 10832  01D846  2035               	addwfc	(btemp+11)^0,w,c
 10833  01D848  6EDA               	movwf	fsr2h,c
 10834  01D84A  0E01               	movlw	1
 10835  01D84C                     L6:
 10836  01D84C  6EDF               	movwf	indf2,c
 10837  01D84E  D01B               	goto	l2301
 10838  01D850                     l17555:
 10839                           
 10840                           ;stkvar	_h @ sp[(0)+-2]
 10841  01D850  0EFE               	movlw	-2
 10842  01D852  006F FF8C  F034    	movff	plusw1,btemp+10
 10843  01D858  0EFF               	movlw	-1
 10844  01D85A  006F FF8C  F035    	movff	plusw1,btemp+11
 10845  01D860  0E01               	movlw	1
 10846  01D862  2434               	addwf	(btemp+10)^0,w,c
 10847  01D864  6ED9               	movwf	fsr2l,c
 10848  01D866  0E00               	movlw	0
 10849  01D868  2035               	addwfc	(btemp+11)^0,w,c
 10850  01D86A  6EDA               	movwf	fsr2h,c
 10851  01D86C  50DF               	movf	indf2,w,c
 10852  01D86E  6E34               	movwf	(btemp+10)^0,c
 10853  01D870  6A35               	clrf	(btemp+11)^0,c
 10854                           
 10855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10856                           ; Switch size 1, requested type "simple"
 10857                           ; Number of cases is 1, Range of values is 0 to 0
 10858                           ; switch strategies available:
 10859                           ; Name         Instructions Cycles
 10860                           ; simple_byte            4     3 (average)
 10861                           ;	Chosen strategy is simple_byte
 10862  01D872  5035               	movf	(btemp+11)^0,w,c
 10863  01D874  0A00               	xorlw	0	; case 0
 10864  01D876  A4D8               	btfss	status,2,c
 10865  01D878  D77F               	goto	l17545
 10866                           
 10867                           ; Switch size 1, requested type "simple"
 10868                           ; Number of cases is 2, Range of values is 0 to 1
 10869                           ; switch strategies available:
 10870                           ; Name         Instructions Cycles
 10871                           ; simple_byte            7     4 (average)
 10872                           ;	Chosen strategy is simple_byte
 10873  01D87A  5034               	movf	(btemp+10)^0,w,c
 10874  01D87C  0A00               	xorlw	0	; case 0
 10875  01D87E  B4D8               	btfsc	status,2,c
 10876  01D880  D701               	goto	l17529
 10877  01D882  0A01               	xorlw	1	; case 1
 10878  01D884  D779               	goto	l17545
 10879  01D886                     l2301:
 10880                           
 10881                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10882  01D886  52E5               	movf	postdec1,f,c
 10883  01D888  52E5               	movf	postdec1,f,c
 10884  01D88A  0012               	return		;funcret
 10885  01D88C                     __end_of_hid_display:
 10886                           	opt callstack 0
 10887                           
 10888 ;; *************** function _hid_input *****************
 10889 ;; Defined at:
 10890 ;;		line 3 in file "hid.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;  h               2  [STACK] PTR struct H_data
 10893 ;;		 -> H(9), 
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  2  [STACK] PTR struct H_data
 10898 ;; Registers used:
 10899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/39
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:   16
 10912 ;; This function calls:
 10913 ;;		_get_switch
 10914 ;; This function is called by:
 10915 ;;		_hid_display
 10916 ;; This function uses a reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text27
 10920  01F878                     __ptext27:
 10921                           	opt callstack 0
 10922  01F878                     _hid_input:
 10923                           	opt callstack 13
 10924                           
 10925                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10926                           
 10927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10928                           ;incstack = 0
 10929  01F878  0E02               	movlw	2
 10930  01F87A  6EE6               	movwf	postinc1,c
 10931  01F87C  EC6A  F014         	call	_get_switch	;wreg free
 10932  01F880  502A               	movf	btemp^0,w,c
 10933  01F882  B4D8               	btfsc	status,2,c
 10934  01F884  D02C               	goto	l17213
 10935                           
 10936                           ;hid.c: 6:   h->wait_select = 0;
 10937                           ;stkvar	_h @ sp[(0)+-2]
 10938  01F886  0EFE               	movlw	-2
 10939  01F888  006F FF8C  F034    	movff	plusw1,btemp+10
 10940  01F88E  0EFF               	movlw	-1
 10941  01F890  006F FF8C  F035    	movff	plusw1,btemp+11
 10942  01F896  0E02               	movlw	2
 10943  01F898  2434               	addwf	(btemp+10)^0,w,c
 10944  01F89A  6ED9               	movwf	fsr2l,c
 10945  01F89C  0E00               	movlw	0
 10946  01F89E  2035               	addwfc	(btemp+11)^0,w,c
 10947  01F8A0  6EDA               	movwf	fsr2h,c
 10948  01F8A2  0E00               	movlw	0
 10949  01F8A4  6EDF               	movwf	indf2,c
 10950                           
 10951                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10952  01F8A6  0E02               	movlw	2
 10953  01F8A8  6EE6               	movwf	postinc1,c
 10954  01F8AA  EC6A  F014         	call	_get_switch	;wreg free
 10955  01F8AE  502A               	movf	btemp^0,w,c
 10956  01F8B0  B4D8               	btfsc	status,2,c
 10957  01F8B2  D003               	goto	u16730
 10958  01F8B4  6A35               	clrf	(btemp+11)^0,c
 10959  01F8B6  2A35               	incf	(btemp+11)^0,f,c
 10960  01F8B8  D001               	goto	u16748
 10961  01F8BA                     u16730:
 10962  01F8BA  6A35               	clrf	(btemp+11)^0,c
 10963  01F8BC                     u16748:
 10964                           
 10965                           ;stkvar	_h @ sp[(0)+-2]
 10966  01F8BC  0EFE               	movlw	-2
 10967  01F8BE  006F FF8C  F032    	movff	plusw1,btemp+8
 10968  01F8C4  0EFF               	movlw	-1
 10969  01F8C6  006F FF8C  F033    	movff	plusw1,btemp+9
 10970  01F8CC  0E03               	movlw	3
 10971  01F8CE  2432               	addwf	(btemp+8)^0,w,c
 10972  01F8D0  6ED9               	movwf	fsr2l,c
 10973  01F8D2  0E00               	movlw	0
 10974  01F8D4  2033               	addwfc	(btemp+9)^0,w,c
 10975  01F8D6  6EDA               	movwf	fsr2h,c
 10976  01F8D8  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10977  01F8DE                     l17213:
 10978                           
 10979                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10980  01F8DE  0E03               	movlw	3
 10981  01F8E0  6EE6               	movwf	postinc1,c
 10982  01F8E2  EC6A  F014         	call	_get_switch	;wreg free
 10983  01F8E6  502A               	movf	btemp^0,w,c
 10984  01F8E8  B4D8               	btfsc	status,2,c
 10985  01F8EA  D02C               	goto	l17219
 10986                           
 10987                           ;hid.c: 11:   h->wait_enter = 0;
 10988                           ;stkvar	_h @ sp[(0)+-2]
 10989  01F8EC  0EFE               	movlw	-2
 10990  01F8EE  006F FF8C  F034    	movff	plusw1,btemp+10
 10991  01F8F4  0EFF               	movlw	-1
 10992  01F8F6  006F FF8C  F035    	movff	plusw1,btemp+11
 10993  01F8FC  0E04               	movlw	4
 10994  01F8FE  2434               	addwf	(btemp+10)^0,w,c
 10995  01F900  6ED9               	movwf	fsr2l,c
 10996  01F902  0E00               	movlw	0
 10997  01F904  2035               	addwfc	(btemp+11)^0,w,c
 10998  01F906  6EDA               	movwf	fsr2h,c
 10999  01F908  0E00               	movlw	0
 11000  01F90A  6EDF               	movwf	indf2,c
 11001                           
 11002                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 11003  01F90C  0E03               	movlw	3
 11004  01F90E  6EE6               	movwf	postinc1,c
 11005  01F910  EC6A  F014         	call	_get_switch	;wreg free
 11006  01F914  502A               	movf	btemp^0,w,c
 11007  01F916  B4D8               	btfsc	status,2,c
 11008  01F918  D003               	goto	u16760
 11009  01F91A  6A35               	clrf	(btemp+11)^0,c
 11010  01F91C  2A35               	incf	(btemp+11)^0,f,c
 11011  01F91E  D001               	goto	u16778
 11012  01F920                     u16760:
 11013  01F920  6A35               	clrf	(btemp+11)^0,c
 11014  01F922                     u16778:
 11015                           
 11016                           ;stkvar	_h @ sp[(0)+-2]
 11017  01F922  0EFE               	movlw	-2
 11018  01F924  006F FF8C  F032    	movff	plusw1,btemp+8
 11019  01F92A  0EFF               	movlw	-1
 11020  01F92C  006F FF8C  F033    	movff	plusw1,btemp+9
 11021  01F932  0E05               	movlw	5
 11022  01F934  2432               	addwf	(btemp+8)^0,w,c
 11023  01F936  6ED9               	movwf	fsr2l,c
 11024  01F938  0E00               	movlw	0
 11025  01F93A  2033               	addwfc	(btemp+9)^0,w,c
 11026  01F93C  6EDA               	movwf	fsr2h,c
 11027  01F93E  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11028  01F944                     l17219:
 11029                           
 11030                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 11031  01F944  0E04               	movlw	4
 11032  01F946  6EE6               	movwf	postinc1,c
 11033  01F948  EC6A  F014         	call	_get_switch	;wreg free
 11034  01F94C  502A               	movf	btemp^0,w,c
 11035  01F94E  B4D8               	btfsc	status,2,c
 11036  01F950  D02C               	goto	l2292
 11037                           
 11038                           ;hid.c: 16:   h->wait_calib = 0;
 11039                           ;stkvar	_h @ sp[(0)+-2]
 11040  01F952  0EFE               	movlw	-2
 11041  01F954  006F FF8C  F034    	movff	plusw1,btemp+10
 11042  01F95A  0EFF               	movlw	-1
 11043  01F95C  006F FF8C  F035    	movff	plusw1,btemp+11
 11044  01F962  0E06               	movlw	6
 11045  01F964  2434               	addwf	(btemp+10)^0,w,c
 11046  01F966  6ED9               	movwf	fsr2l,c
 11047  01F968  0E00               	movlw	0
 11048  01F96A  2035               	addwfc	(btemp+11)^0,w,c
 11049  01F96C  6EDA               	movwf	fsr2h,c
 11050  01F96E  0E00               	movlw	0
 11051  01F970  6EDF               	movwf	indf2,c
 11052                           
 11053                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 11054  01F972  0E04               	movlw	4
 11055  01F974  6EE6               	movwf	postinc1,c
 11056  01F976  EC6A  F014         	call	_get_switch	;wreg free
 11057  01F97A  502A               	movf	btemp^0,w,c
 11058  01F97C  B4D8               	btfsc	status,2,c
 11059  01F97E  D003               	goto	u16790
 11060  01F980  6A35               	clrf	(btemp+11)^0,c
 11061  01F982  2A35               	incf	(btemp+11)^0,f,c
 11062  01F984  D001               	goto	u16808
 11063  01F986                     u16790:
 11064  01F986  6A35               	clrf	(btemp+11)^0,c
 11065  01F988                     u16808:
 11066                           
 11067                           ;stkvar	_h @ sp[(0)+-2]
 11068  01F988  0EFE               	movlw	-2
 11069  01F98A  006F FF8C  F032    	movff	plusw1,btemp+8
 11070  01F990  0EFF               	movlw	-1
 11071  01F992  006F FF8C  F033    	movff	plusw1,btemp+9
 11072  01F998  0E07               	movlw	7
 11073  01F99A  2432               	addwf	(btemp+8)^0,w,c
 11074  01F99C  6ED9               	movwf	fsr2l,c
 11075  01F99E  0E00               	movlw	0
 11076  01F9A0  2033               	addwfc	(btemp+9)^0,w,c
 11077  01F9A2  6EDA               	movwf	fsr2h,c
 11078  01F9A4  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11079  01F9AA                     l2292:
 11080                           
 11081                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 11082  01F9AA  52E5               	movf	postdec1,f,c
 11083  01F9AC  52E5               	movf	postdec1,f,c
 11084  01F9AE  0012               	return		;funcret
 11085  01F9B0                     __end_of_hid_input:
 11086                           	opt callstack 0
 11087                           
 11088 ;; *************** function _esr_check *****************
 11089 ;; Defined at:
 11090 ;;		line 197 in file "bsoc.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  fsm             1  [STACK] const unsigned char 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;		None
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  4  [STACK] float 
 11097 ;; Registers used:
 11098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11108 ;;Total ram usage:        0 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:   18
 11111 ;; This function calls:
 11112 ;;		_StartTimer
 11113 ;;		_TimerDone
 11114 ;;		___fldiv
 11115 ;;		___flsub
 11116 ;;		_conv_raw_result
 11117 ;;		_fabsf
 11118 ;;		_set_load_relay_one
 11119 ;;		_set_load_relay_two
 11120 ;;		_update_adc_result
 11121 ;; This function is called by:
 11122 ;;		_main
 11123 ;; This function uses a reentrant model
 11124 ;;
 11125                           
 11126                           	psect	text28
 11127  01B972                     __ptext28:
 11128                           	opt callstack 0
 11129  01B972                     _esr_check:
 11130                           	opt callstack 12
 11131                           
 11132                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 11133                           ;stkvar	_fsm @ sp[(0)+-1]
 11134                           
 11135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11136                           ;incstack = 0
 11137  01B972  0EFF               	movlw	-1
 11138  01B974  50E3               	movf	plusw1,w,c
 11139  01B976  B4D8               	btfsc	status,2,c
 11140  01B978  D149               	goto	l14419
 11141                           
 11142                           ;bsoc.c: 202:   esr_state = 0;
 11143  01B97A  0100               	movlb	0	; () banked
 11144  01B97C  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;bsoc.c: 203:   return -10.0;
 11148  01B97E  0E00               	movlw	0
 11149  01B980  6E2A               	movwf	btemp^0,c
 11150  01B982  0E00               	movlw	0
 11151  01B984  6E2B               	movwf	(btemp+1)^0,c
 11152  01B986  0E20               	movlw	32
 11153  01B988  6E2C               	movwf	(btemp+2)^0,c
 11154  01B98A  0EC1               	movlw	193
 11155  01B98C  D15B               	goto	L7
 11156  01B98E                     l14351:
 11157                           
 11158                           ; BSR set to: 0
 11159                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 11160  01B98E  0E10               	movlw	16
 11161  01B990  6EE6               	movwf	postinc1,c
 11162  01B992  0E27               	movlw	39
 11163  01B994  6EE6               	movwf	postinc1,c
 11164  01B996  0E0C               	movlw	12
 11165  01B998  6EE6               	movwf	postinc1,c
 11166  01B99A  EC49  F012         	call	_StartTimer	;wreg free
 11167  01B99E                     l14353:
 11168                           
 11169                           ;bsoc.c: 209:   esr_state++;
 11170  01B99E  0100               	movlb	0	; () banked
 11171  01B9A0  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 11172                           
 11173                           ;bsoc.c: 210:   break;
 11174  01B9A2  D149               	goto	l14421
 11175  01B9A4                     l14355:
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;bsoc.c: 215:   set_load_relay_one(0);
 11179  01B9A4  0E00               	movlw	0
 11180  01B9A6  6EE6               	movwf	postinc1,c
 11181  01B9A8  EC6B  F017         	call	_set_load_relay_one	;wreg free
 11182                           
 11183                           ;bsoc.c: 216:   set_load_relay_two(0);
 11184  01B9AC  0E00               	movlw	0
 11185  01B9AE  6EE6               	movwf	postinc1,c
 11186  01B9B0  EC63  F017         	call	_set_load_relay_two	;wreg free
 11187                           
 11188                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 11189  01B9B4  0E0C               	movlw	12
 11190  01B9B6  6EE6               	movwf	postinc1,c
 11191  01B9B8  ECD5  F014         	call	_TimerDone	;wreg free
 11192  01B9BC  502A               	movf	btemp^0,w,c
 11193  01B9BE  B4D8               	btfsc	status,2,c
 11194  01B9C0  D009               	goto	l14361
 11195                           
 11196                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 11197  01B9C2  0E10               	movlw	16
 11198  01B9C4  6EE6               	movwf	postinc1,c
 11199  01B9C6  0E27               	movlw	39
 11200  01B9C8  6EE6               	movwf	postinc1,c
 11201  01B9CA  0E0C               	movlw	12
 11202  01B9CC  6EE6               	movwf	postinc1,c
 11203  01B9CE  EC49  F012         	call	_StartTimer	;wreg free
 11204                           
 11205                           ;bsoc.c: 219:   } else {
 11206  01B9D2  D006               	goto	l14365
 11207  01B9D4                     l14361:
 11208                           
 11209                           ;bsoc.c: 220:    return -2.0;
 11210  01B9D4  0E00               	movlw	0
 11211  01B9D6  6E2A               	movwf	btemp^0,c
 11212  01B9D8  0E00               	movlw	0
 11213  01B9DA  6E2B               	movwf	(btemp+1)^0,c
 11214  01B9DC  0E00               	movlw	0
 11215  01B9DE  D066               	goto	L9
 11216  01B9E0                     l14365:
 11217                           
 11218                           ;bsoc.c: 225:   update_adc_result();
 11219  01B9E0  ECE7  F012         	call	_update_adc_result	;wreg free
 11220                           
 11221                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 11222  01B9E4  0E00               	movlw	0
 11223  01B9E6  6EE6               	movwf	postinc1,c
 11224  01B9E8  0E04               	movlw	4
 11225  01B9EA  6EE6               	movwf	postinc1,c
 11226  01B9EC  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11227  01B9F0  0060  F0A8  FA21   	movff	btemp,_C+290	;volatile
 11228  01B9F6  0060  F0AC  FA22   	movff	btemp+1,_C+291	;volatile
 11229  01B9FC  0060  F0B0  FA23   	movff	btemp+2,_C+292	;volatile
 11230  01BA02  0060  F0B4  FA24   	movff	btemp+3,_C+293	;volatile
 11231  01BA08  D7CA               	goto	l14353
 11232  01BA0A                     l14371:
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;bsoc.c: 230:   set_load_relay_one(1);
 11236  01BA0A  0E01               	movlw	1
 11237  01BA0C  6EE6               	movwf	postinc1,c
 11238  01BA0E  EC6B  F017         	call	_set_load_relay_one	;wreg free
 11239                           
 11240                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 11241  01BA12  0E0C               	movlw	12
 11242  01BA14  6EE6               	movwf	postinc1,c
 11243  01BA16  ECD5  F014         	call	_TimerDone	;wreg free
 11244  01BA1A  502A               	movf	btemp^0,w,c
 11245  01BA1C  B4D8               	btfsc	status,2,c
 11246  01BA1E  D009               	goto	l14377
 11247                           
 11248                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 11249  01BA20  0E10               	movlw	16
 11250  01BA22  6EE6               	movwf	postinc1,c
 11251  01BA24  0E27               	movlw	39
 11252  01BA26  6EE6               	movwf	postinc1,c
 11253  01BA28  0E0C               	movlw	12
 11254  01BA2A  6EE6               	movwf	postinc1,c
 11255  01BA2C  EC49  F012         	call	_StartTimer	;wreg free
 11256                           
 11257                           ;bsoc.c: 233:   } else {
 11258  01BA30  D006               	goto	l14381
 11259  01BA32                     l14377:
 11260                           
 11261                           ;bsoc.c: 234:    return -3.0;
 11262  01BA32  0E00               	movlw	0
 11263  01BA34  6E2A               	movwf	btemp^0,c
 11264  01BA36  0E00               	movlw	0
 11265  01BA38  6E2B               	movwf	(btemp+1)^0,c
 11266  01BA3A  0E40               	movlw	64
 11267  01BA3C  D037               	goto	L9
 11268  01BA3E                     l14381:
 11269                           
 11270                           ;bsoc.c: 237:   update_adc_result();
 11271  01BA3E  ECE7  F012         	call	_update_adc_result	;wreg free
 11272                           
 11273                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 11274  01BA42  0E00               	movlw	0
 11275  01BA44  6EE6               	movwf	postinc1,c
 11276  01BA46  0E04               	movlw	4
 11277  01BA48  6EE6               	movwf	postinc1,c
 11278  01BA4A  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11279  01BA4E  0060  F0A8  FA25   	movff	btemp,_C+294	;volatile
 11280  01BA54  0060  F0AC  FA26   	movff	btemp+1,_C+295	;volatile
 11281  01BA5A  0060  F0B0  FA27   	movff	btemp+2,_C+296	;volatile
 11282  01BA60  0060  F0B4  FA28   	movff	btemp+3,_C+297	;volatile
 11283                           
 11284                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 11285  01BA66  0E00               	movlw	0
 11286  01BA68  6EE6               	movwf	postinc1,c
 11287  01BA6A  0E00               	movlw	0
 11288  01BA6C  6EE6               	movwf	postinc1,c
 11289  01BA6E  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11290  01BA72  0060  F0A8  FA19   	movff	btemp,_C+282	;volatile
 11291  01BA78  0060  F0AC  FA1A   	movff	btemp+1,_C+283	;volatile
 11292  01BA7E  0060  F0B0  FA1B   	movff	btemp+2,_C+284	;volatile
 11293  01BA84  0060  F0B4  FA1C   	movff	btemp+3,_C+285	;volatile
 11294  01BA8A  D789               	goto	l14353
 11295  01BA8C                     l14389:
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;bsoc.c: 243:   set_load_relay_two(1);
 11299  01BA8C  0E01               	movlw	1
 11300  01BA8E  6EE6               	movwf	postinc1,c
 11301  01BA90  EC63  F017         	call	_set_load_relay_two	;wreg free
 11302                           
 11303                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 11304  01BA94  0E0C               	movlw	12
 11305  01BA96  6EE6               	movwf	postinc1,c
 11306  01BA98  ECD5  F014         	call	_TimerDone	;wreg free
 11307  01BA9C  502A               	movf	btemp^0,w,c
 11308  01BA9E  A4D8               	btfss	status,2,c
 11309  01BAA0  D008               	goto	l14397
 11310                           
 11311                           ;bsoc.c: 245:    return -4.0;
 11312  01BAA2  0E00               	movlw	0
 11313  01BAA4  6E2A               	movwf	btemp^0,c
 11314  01BAA6  0E00               	movlw	0
 11315  01BAA8  6E2B               	movwf	(btemp+1)^0,c
 11316  01BAAA  0E80               	movlw	128
 11317  01BAAC                     L9:
 11318  01BAAC  6E2C               	movwf	(btemp+2)^0,c
 11319  01BAAE  0EC0               	movlw	192
 11320  01BAB0  D0C9               	goto	L7
 11321  01BAB2                     l14397:
 11322                           
 11323                           ;bsoc.c: 247:   update_adc_result();
 11324  01BAB2  ECE7  F012         	call	_update_adc_result	;wreg free
 11325                           
 11326                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 11327  01BAB6  0E00               	movlw	0
 11328  01BAB8  6EE6               	movwf	postinc1,c
 11329  01BABA  0E04               	movlw	4
 11330  01BABC  6EE6               	movwf	postinc1,c
 11331  01BABE  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11332  01BAC2  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 11333  01BAC8  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 11334  01BACE  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 11335  01BAD4  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 11336                           
 11337                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 11338  01BADA  0E00               	movlw	0
 11339  01BADC  6EE6               	movwf	postinc1,c
 11340  01BADE  0E00               	movlw	0
 11341  01BAE0  6EE6               	movwf	postinc1,c
 11342  01BAE2  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11343  01BAE6  0060  F0A8  FA1D   	movff	btemp,_C+286	;volatile
 11344  01BAEC  0060  F0AC  FA1E   	movff	btemp+1,_C+287	;volatile
 11345  01BAF2  0060  F0B0  FA1F   	movff	btemp+2,_C+288	;volatile
 11346  01BAF8  0060  F0B4  FA20   	movff	btemp+3,_C+289	;volatile
 11347                           
 11348                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 11349  01BAFE  EE22  F21D         	lfsr	2,_C+286	;volatile
 11350  01BB02  006F FF7B FFE6     	movff	postinc2,postinc1
 11351  01BB08  006F FF7B FFE6     	movff	postinc2,postinc1
 11352  01BB0E  006F FF7B FFE6     	movff	postinc2,postinc1
 11353  01BB14  006F FF7B FFE6     	movff	postinc2,postinc1
 11354  01BB1A  EE22  F219         	lfsr	2,_C+282	;volatile
 11355  01BB1E  006F FF7B FFE6     	movff	postinc2,postinc1
 11356  01BB24  006F FF7B FFE6     	movff	postinc2,postinc1
 11357  01BB2A  006F FF7B FFE6     	movff	postinc2,postinc1
 11358  01BB30  006F FF7B FFE6     	movff	postinc2,postinc1
 11359  01BB36  ECA3  F011         	call	___flsub	;wreg free
 11360  01BB3A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11361  01BB40  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11362  01BB46  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11363  01BB4C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11364  01BB52  EE22  F229         	lfsr	2,_C+298	;volatile
 11365  01BB56  006F FF7B FFE6     	movff	postinc2,postinc1
 11366  01BB5C  006F FF7B FFE6     	movff	postinc2,postinc1
 11367  01BB62  006F FF7B FFE6     	movff	postinc2,postinc1
 11368  01BB68  006F FF7B FFE6     	movff	postinc2,postinc1
 11369  01BB6E  EE22  F225         	lfsr	2,_C+294	;volatile
 11370  01BB72  006F FF7B FFE6     	movff	postinc2,postinc1
 11371  01BB78  006F FF7B FFE6     	movff	postinc2,postinc1
 11372  01BB7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11373  01BB84  006F FF7B FFE6     	movff	postinc2,postinc1
 11374  01BB8A  ECA3  F011         	call	___flsub	;wreg free
 11375  01BB8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 11376  01BB94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11377  01BB9A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11378  01BBA0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11379  01BBA6  ECB8  F0C3         	call	___fldiv	;wreg free
 11380  01BBAA  0060  F0AB  FFE6   	movff	btemp,postinc1
 11381  01BBB0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11382  01BBB6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11383  01BBBC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11384  01BBC2  ECBE  F006         	call	_fabsf	;wreg free
 11385  01BBC6  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 11386  01BBCC  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 11387  01BBD2  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 11388  01BBD8  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 11389                           
 11390                           ;bsoc.c: 252:   set_load_relay_one(0);
 11391  01BBDE  0E00               	movlw	0
 11392  01BBE0  6EE6               	movwf	postinc1,c
 11393  01BBE2  EC6B  F017         	call	_set_load_relay_one	;wreg free
 11394                           
 11395                           ;bsoc.c: 253:   set_load_relay_two(0);
 11396  01BBE6  0E00               	movlw	0
 11397  01BBE8  6EE6               	movwf	postinc1,c
 11398  01BBEA  EC63  F017         	call	_set_load_relay_two	;wreg free
 11399                           
 11400                           ;bsoc.c: 254:   esr_state = 0;
 11401  01BBEE  0100               	movlb	0	; () banked
 11402  01BBF0  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;bsoc.c: 255:   return C.esr;
 11406  01BBF2  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 11407  01BBF8  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 11408  01BBFE  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 11409  01BC04  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 11410  01BC0A  D01D               	goto	l2417
 11411  01BC0C                     l14419:
 11412  01BC0C  0100               	movlb	0	; () banked
 11413  01BC0E  51C6               	movf	esr_check@esr_state& (0+255),w,b
 11414  01BC10  6E34               	movwf	(btemp+10)^0,c
 11415  01BC12  6A35               	clrf	(btemp+11)^0,c
 11416                           
 11417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11418                           ; Switch size 1, requested type "simple"
 11419                           ; Number of cases is 1, Range of values is 0 to 0
 11420                           ; switch strategies available:
 11421                           ; Name         Instructions Cycles
 11422                           ; simple_byte            4     3 (average)
 11423                           ;	Chosen strategy is simple_byte
 11424  01BC14  5035               	movf	(btemp+11)^0,w,c
 11425  01BC16  0A00               	xorlw	0	; case 0
 11426  01BC18  A4D8               	btfss	status,2,c
 11427  01BC1A  D00D               	goto	l14421
 11428                           
 11429                           ; BSR set to: 0
 11430                           ; Switch size 1, requested type "simple"
 11431                           ; Number of cases is 4, Range of values is 0 to 3
 11432                           ; switch strategies available:
 11433                           ; Name         Instructions Cycles
 11434                           ; simple_byte           13     7 (average)
 11435                           ;	Chosen strategy is simple_byte
 11436  01BC1C  5034               	movf	(btemp+10)^0,w,c
 11437  01BC1E  0A00               	xorlw	0	; case 0
 11438  01BC20  B4D8               	btfsc	status,2,c
 11439  01BC22  D6B5               	goto	l14351
 11440  01BC24  0A01               	xorlw	1	; case 1
 11441  01BC26  B4D8               	btfsc	status,2,c
 11442  01BC28  D6BD               	goto	l14355
 11443  01BC2A  0A03               	xorlw	3	; case 2
 11444  01BC2C  B4D8               	btfsc	status,2,c
 11445  01BC2E  D6ED               	goto	l14371
 11446  01BC30  0A01               	xorlw	1	; case 3
 11447  01BC32  B4D8               	btfsc	status,2,c
 11448  01BC34  D72B               	goto	l14389
 11449  01BC36                     l14421:
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;bsoc.c: 260:  return -1.0;
 11453  01BC36  0E00               	movlw	0
 11454  01BC38  6E2A               	movwf	btemp^0,c
 11455  01BC3A  0E00               	movlw	0
 11456  01BC3C  6E2B               	movwf	(btemp+1)^0,c
 11457  01BC3E  0E80               	movlw	128
 11458  01BC40  6E2C               	movwf	(btemp+2)^0,c
 11459  01BC42  0EBF               	movlw	191
 11460  01BC44                     L7:
 11461  01BC44  6E2D               	movwf	(btemp+3)^0,c
 11462  01BC46                     l2417:
 11463                           
 11464                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11465  01BC46  52E5               	movf	postdec1,f,c
 11466  01BC48  0012               	return		;funcret
 11467  01BC4A                     __end_of_esr_check:
 11468                           	opt callstack 0
 11469                           
 11470 ;; *************** function _update_adc_result *****************
 11471 ;; Defined at:
 11472 ;;		line 111 in file "daq.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;		None
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1  [STACK] _Bool 
 11479 ;; Registers used:
 11480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11490 ;;Total ram usage:        0 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; Hardware stack levels required when called:   17
 11493 ;; This function calls:
 11494 ;;		_StartTimer
 11495 ;;		_TimerDone
 11496 ;;		_check_adc_scan
 11497 ;;		_clear_adc_scan
 11498 ;;		_start_adc_scan
 11499 ;; This function is called by:
 11500 ;;		_esr_check
 11501 ;; This function uses a reentrant model
 11502 ;;
 11503                           
 11504                           	psect	text29
 11505  0025CE                     __ptext29:
 11506                           	opt callstack 0
 11507  0025CE                     _update_adc_result:
 11508                           	opt callstack 12
 11509                           
 11510                           ;daq.c: 113:  if (R.done) {
 11511                           
 11512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11513                           ;incstack = 0
 11514  0025CE  0101               	movlb	1	; () banked
 11515  0025D0  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11516  0025D2  B4D8               	btfsc	status,2,c
 11517  0025D4  0012               	return	
 11518                           
 11519                           ; BSR set to: 1
 11520                           ;daq.c: 114:   clear_adc_scan();
 11521  0025D6  ECED  F017         	call	_clear_adc_scan	;wreg free
 11522                           
 11523                           ; BSR set to: 1
 11524                           ;daq.c: 115:   start_adc_scan();
 11525  0025DA  EC61  F00E         	call	_start_adc_scan	;wreg free
 11526                           
 11527                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 11528  0025DE  0EC8               	movlw	200
 11529  0025E0  6EE6               	movwf	postinc1,c
 11530  0025E2  0E00               	movlw	0
 11531  0025E4  6EE6               	movwf	postinc1,c
 11532  0025E6  0E01               	movlw	1
 11533  0025E8  6EE6               	movwf	postinc1,c
 11534  0025EA  EC49  F012         	call	_StartTimer	;wreg free
 11535  0025EE                     l13779:
 11536  0025EE  0E01               	movlw	1
 11537  0025F0  6EE6               	movwf	postinc1,c
 11538  0025F2  ECD5  F014         	call	_TimerDone	;wreg free
 11539  0025F6  502A               	movf	btemp^0,w,c
 11540  0025F8  A4D8               	btfss	status,2,c
 11541  0025FA  0012               	return	
 11542  0025FC  ECD3  F017         	call	_check_adc_scan	;wreg free
 11543  002600  502A               	movf	btemp^0,w,c
 11544  002602  A4D8               	btfss	status,2,c
 11545  002604  0012               	return	
 11546  002606  D7F3               	goto	l13779
 11547  002608                     __end_of_update_adc_result:
 11548                           	opt callstack 0
 11549                           
 11550 ;; *************** function _check_adc_scan *****************
 11551 ;; Defined at:
 11552 ;;		line 95 in file "daq.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;		None
 11555 ;; Auto vars:     Size  Location     Type
 11556 ;;		None
 11557 ;; Return value:  Size  Location     Type
 11558 ;;                  1  [STACK] _Bool 
 11559 ;; Registers used:
 11560 ;;		btemp
 11561 ;; Tracked objects:
 11562 ;;		On entry : 0/2
 11563 ;;		On exit  : 0/0
 11564 ;;		Unchanged: 0/0
 11565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11570 ;;Total ram usage:        0 bytes
 11571 ;; Hardware stack levels used:    1
 11572 ;; Hardware stack levels required when called:   15
 11573 ;; This function calls:
 11574 ;;		Nothing
 11575 ;; This function is called by:
 11576 ;;		_main
 11577 ;;		_update_adc_result
 11578 ;; This function uses a reentrant model
 11579 ;;
 11580                           
 11581                           	psect	text30
 11582  002FA6                     __ptext30:
 11583                           	opt callstack 0
 11584  002FA6                     _check_adc_scan:
 11585                           	opt callstack 13
 11586                           
 11587                           ;daq.c: 97:  return R.done;
 11588                           
 11589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11590                           ;incstack = 0
 11591  002FA6  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11592                           
 11593                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11594  002FAC  0012               	return		;funcret
 11595  002FAE                     __end_of_check_adc_scan:
 11596                           	opt callstack 0
 11597                           
 11598 ;; *************** function _set_load_relay_two *****************
 11599 ;; Defined at:
 11600 ;;		line 131 in file "mbmc.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  mode            1  [STACK] const _Bool 
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;		None
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  1  [STACK] void 
 11607 ;; Registers used:
 11608 ;;		wreg, fsr1l, fsr1h
 11609 ;; Tracked objects:
 11610 ;;		On entry : 0/3D
 11611 ;;		On exit  : 0/0
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11618 ;;Total ram usage:        0 bytes
 11619 ;; Hardware stack levels used:    1
 11620 ;; Hardware stack levels required when called:   15
 11621 ;; This function calls:
 11622 ;;		Nothing
 11623 ;; This function is called by:
 11624 ;;		_main
 11625 ;;		_esr_check
 11626 ;; This function uses a reentrant model
 11627 ;;
 11628                           
 11629                           	psect	text31
 11630  002EC6                     __ptext31:
 11631                           	opt callstack 0
 11632  002EC6                     _set_load_relay_two:
 11633                           	opt callstack 15
 11634                           
 11635                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11636                           ;stkvar	_mode @ sp[(0)+-1]
 11637                           
 11638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11639                           ;incstack = 0
 11640  002EC6  0EFF               	movlw	-1
 11641  002EC8  B0E3               	btfsc	plusw1,0,c
 11642  002ECA  D002               	bra	u12595
 11643  002ECC  9ABD               	bcf	189,5,c	;volatile
 11644  002ECE  D001               	bra	u12596
 11645  002ED0                     u12595:
 11646  002ED0  8ABD               	bsf	189,5,c	;volatile
 11647  002ED2                     u12596:
 11648                           
 11649                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11650  002ED2  52E5               	movf	postdec1,f,c
 11651  002ED4  0012               	return		;funcret
 11652  002ED6                     __end_of_set_load_relay_two:
 11653                           	opt callstack 0
 11654                           
 11655 ;; *************** function _set_load_relay_one *****************
 11656 ;; Defined at:
 11657 ;;		line 126 in file "mbmc.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;  mode            1  [STACK] const _Bool 
 11660 ;; Auto vars:     Size  Location     Type
 11661 ;;		None
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  1  [STACK] void 
 11664 ;; Registers used:
 11665 ;;		wreg, fsr1l, fsr1h
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/3D
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11675 ;;Total ram usage:        0 bytes
 11676 ;; Hardware stack levels used:    1
 11677 ;; Hardware stack levels required when called:   15
 11678 ;; This function calls:
 11679 ;;		Nothing
 11680 ;; This function is called by:
 11681 ;;		_main
 11682 ;;		_esr_check
 11683 ;; This function uses a reentrant model
 11684 ;;
 11685                           
 11686                           	psect	text32
 11687  002ED6                     __ptext32:
 11688                           	opt callstack 0
 11689  002ED6                     _set_load_relay_one:
 11690                           	opt callstack 15
 11691                           
 11692                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11693                           ;stkvar	_mode @ sp[(0)+-1]
 11694                           
 11695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11696                           ;incstack = 0
 11697  002ED6  0EFF               	movlw	-1
 11698  002ED8  B0E3               	btfsc	plusw1,0,c
 11699  002EDA  D002               	bra	u12585
 11700  002EDC  98BD               	bcf	189,4,c	;volatile
 11701  002EDE  D001               	bra	u12586
 11702  002EE0                     u12585:
 11703  002EE0  88BD               	bsf	189,4,c	;volatile
 11704  002EE2                     u12586:
 11705                           
 11706                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11707  002EE2  52E5               	movf	postdec1,f,c
 11708  002EE4  0012               	return		;funcret
 11709  002EE6                     __end_of_set_load_relay_one:
 11710                           	opt callstack 0
 11711                           
 11712 ;; *************** function _eaDogM_WriteCommand *****************
 11713 ;; Defined at:
 11714 ;;		line 384 in file "eadog.c"
 11715 ;; Parameters:    Size  Location     Type
 11716 ;;  cmd             1  [STACK] const unsigned char 
 11717 ;; Auto vars:     Size  Location     Type
 11718 ;;		None
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1  [STACK] void 
 11721 ;; Registers used:
 11722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11723 ;; Tracked objects:
 11724 ;;		On entry : 3F/3D
 11725 ;;		On exit  : 3F/3D
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11732 ;;Total ram usage:        0 bytes
 11733 ;; Hardware stack levels used:    1
 11734 ;; Hardware stack levels required when called:   19
 11735 ;; This function calls:
 11736 ;;		_send_lcd_cmd_dma
 11737 ;; This function is called by:
 11738 ;;		_main
 11739 ;; This function uses a reentrant model
 11740 ;;
 11741                           
 11742                           	psect	text33
 11743  002F16                     __ptext33:
 11744                           	opt callstack 0
 11745  002F16                     _eaDogM_WriteCommand:
 11746                           	opt callstack 11
 11747                           
 11748                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11749                           ;stkvar	_cmd @ sp[(0)+-1]
 11750                           
 11751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11752                           ;incstack = 0
 11753  002F16  0EFF               	movlw	-1
 11754  002F18  50E3               	movf	plusw1,w,c
 11755  002F1A  6EE6               	movwf	postinc1,c
 11756  002F1C  ECBC  F016         	call	_send_lcd_cmd_dma	;wreg free
 11757                           
 11758                           ; BSR set to: 61
 11759                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11760  002F20  52E5               	movf	postdec1,f,c
 11761  002F22  0012               	return		;funcret
 11762  002F24                     __end_of_eaDogM_WriteCommand:
 11763                           	opt callstack 0
 11764                           
 11765 ;; *************** function _display_history *****************
 11766 ;; Defined at:
 11767 ;;		line 619 in file "main.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;		None
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;		None
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  1  [STACK] _Bool 
 11774 ;; Registers used:
 11775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/2
 11778 ;;		On exit  : 0/0
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11785 ;;Total ram usage:        0 bytes
 11786 ;; Hardware stack levels used:    1
 11787 ;; Hardware stack levels required when called:   27
 11788 ;; This function calls:
 11789 ;;		_WaitMs
 11790 ;;		_asctime
 11791 ;;		_get_switch
 11792 ;;		_get_vterm_ptr
 11793 ;;		_localtime
 11794 ;;		_sprintf
 11795 ;;		_time
 11796 ;;		_update_lcd
 11797 ;; This function is called by:
 11798 ;;		_main
 11799 ;; This function uses a reentrant model
 11800 ;;
 11801                           
 11802                           	psect	text34
 11803  01B698                     __ptext34:
 11804                           	opt callstack 0
 11805  01B698                     _display_history:
 11806                           	opt callstack 3
 11807                           
 11808                           ;main.c: 621:  static uint8_t bwait = 0;;main.c: 623:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11809                           
 11810                           ; BSR set to: 61
 11811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11812                           ;incstack = 0
 11813  01B698  0E04               	movlw	4
 11814  01B69A  6EE6               	movwf	postinc1,c
 11815  01B69C  EC6A  F014         	call	_get_switch	;wreg free
 11816  01B6A0  502A               	movf	btemp^0,w,c
 11817  01B6A2  B4D8               	btfsc	status,2,c
 11818  01B6A4  D15E               	goto	l17603
 11819  01B6A6  2A53               	incf	display_history@bwait^0,f,c
 11820  01B6A8  0E05               	movlw	5
 11821  01B6AA  6453               	cpfsgt	display_history@bwait^0,c
 11822  01B6AC  D15A               	goto	l17603
 11823                           
 11824                           ;main.c: 624:   pclock = time(((void*)0));
 11825  01B6AE  0E00               	movlw	0
 11826  01B6B0  6EE6               	movwf	postinc1,c
 11827  01B6B2  0E00               	movlw	0
 11828  01B6B4  6EE6               	movwf	postinc1,c
 11829  01B6B6  EC25  F00F         	call	_time	;wreg free
 11830  01B6BA  52E5               	movf	postdec1,f,c
 11831  01B6BC  006F FF9C  F041    	movff	indf1,btemp+23
 11832  01B6C2  52E5               	movf	postdec1,f,c
 11833  01B6C4  006F FF9C  F040    	movff	indf1,btemp+22
 11834  01B6CA  52E5               	movf	postdec1,f,c
 11835  01B6CC  006F FF9C  F03F    	movff	indf1,btemp+21
 11836  01B6D2  52E5               	movf	postdec1,f,c
 11837  01B6D4  006F FF9C  F03E    	movff	indf1,btemp+20
 11838  01B6DA  52E5               	movf	postdec1,f,c
 11839  01B6DC  006F FF9C  F03D    	movff	indf1,btemp+19
 11840  01B6E2  52E5               	movf	postdec1,f,c
 11841  01B6E4  006F FF9C  F03C    	movff	indf1,btemp+18
 11842  01B6EA  52E5               	movf	postdec1,f,c
 11843  01B6EC  006F FF9C  F03B    	movff	indf1,btemp+17
 11844  01B6F2  52E5               	movf	postdec1,f,c
 11845  01B6F4  006F FF9C  F03A    	movff	indf1,btemp+16
 11846  01B6FA  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11847  01B700  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11848  01B706  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11849  01B70C  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11850  01B712  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11851  01B718  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11852  01B71E  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11853  01B724  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11854                           
 11855                           ; BSR set to: 57
 11856                           ;main.c: 625:   t_mbmc = localtime(&pclock);
 11857  01B72A  0EDA               	movlw	_pclock& (0+255)
 11858  01B72C  6EE6               	movwf	postinc1,c
 11859  01B72E  EC1B  F017         	call	_localtime	;wreg free
 11860  01B732  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11861  01B738  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11862                           
 11863                           ;main.c: 626:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11864  01B73E  EE22  F1E3         	lfsr	2,_C+228	;volatile
 11865  01B742  006F FF78  F034    	movff	postinc2,btemp+10
 11866  01B748  006F FF74  F035    	movff	postdec2,btemp+11
 11867  01B74E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11868  01B754  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11869  01B75A  EE22  F1E1         	lfsr	2,_C+226	;volatile
 11870  01B75E  006F FF78  F034    	movff	postinc2,btemp+10
 11871  01B764  006F FF74  F035    	movff	postdec2,btemp+11
 11872  01B76A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11873  01B770  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11874  01B776  EE22  F1DF         	lfsr	2,_C+224	;volatile
 11875  01B77A  006F FF78  F034    	movff	postinc2,btemp+10
 11876  01B780  006F FF74  F035    	movff	postdec2,btemp+11
 11877  01B786  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11878  01B78C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11879  01B792  EE22  F1DD         	lfsr	2,_C+222	;volatile
 11880  01B796  006F FF78  F034    	movff	postinc2,btemp+10
 11881  01B79C  006F FF74  F035    	movff	postdec2,btemp+11
 11882  01B7A2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11883  01B7A8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11884  01B7AE  0E25               	movlw	low STR_78
 11885  01B7B0  6EE6               	movwf	postinc1,c
 11886  01B7B2  0EFA               	movlw	high STR_78
 11887  01B7B4  6EE6               	movwf	postinc1,c
 11888  01B7B6  0E00               	movlw	0
 11889  01B7B8  6EE6               	movwf	postinc1,c
 11890  01B7BA  0E00               	movlw	0
 11891  01B7BC  6EE6               	movwf	postinc1,c
 11892  01B7BE  EC53  F014         	call	_get_vterm_ptr	;wreg free
 11893  01B7C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 11894  01B7C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11895  01B7CE  0E0C               	movlw	12
 11896  01B7D0  6EE6               	movwf	postinc1,c
 11897  01B7D2  EC5B  F000         	call	_sprintf	;wreg free
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;main.c: 627:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11901  01B7D6  EE22  F1EB         	lfsr	2,_C+236	;volatile
 11902  01B7DA  006F FF78  F034    	movff	postinc2,btemp+10
 11903  01B7E0  006F FF74  F035    	movff	postdec2,btemp+11
 11904  01B7E6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11905  01B7EC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11906  01B7F2  EE22  F1E9         	lfsr	2,_C+234	;volatile
 11907  01B7F6  006F FF78  F034    	movff	postinc2,btemp+10
 11908  01B7FC  006F FF74  F035    	movff	postdec2,btemp+11
 11909  01B802  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11910  01B808  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11911  01B80E  EE22  F1E7         	lfsr	2,_C+232	;volatile
 11912  01B812  006F FF78  F034    	movff	postinc2,btemp+10
 11913  01B818  006F FF74  F035    	movff	postdec2,btemp+11
 11914  01B81E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11915  01B824  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11916  01B82A  EE22  F1E5         	lfsr	2,_C+230	;volatile
 11917  01B82E  006F FF78  F034    	movff	postinc2,btemp+10
 11918  01B834  006F FF74  F035    	movff	postdec2,btemp+11
 11919  01B83A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11920  01B840  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11921  01B846  0E25               	movlw	low STR_78
 11922  01B848  6EE6               	movwf	postinc1,c
 11923  01B84A  0EFA               	movlw	high STR_78
 11924  01B84C  6EE6               	movwf	postinc1,c
 11925  01B84E  0E00               	movlw	0
 11926  01B850  6EE6               	movwf	postinc1,c
 11927  01B852  0E01               	movlw	1
 11928  01B854  6EE6               	movwf	postinc1,c
 11929  01B856  EC53  F014         	call	_get_vterm_ptr	;wreg free
 11930  01B85A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11931  01B860  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11932  01B866  0E0C               	movlw	12
 11933  01B868  6EE6               	movwf	postinc1,c
 11934  01B86A  EC5B  F000         	call	_sprintf	;wreg free
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;main.c: 628:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 11938  01B86E  EE22  F1F5         	lfsr	2,_C+246	;volatile
 11939  01B872  006F FF78  F034    	movff	postinc2,btemp+10
 11940  01B878  006F FF74  F035    	movff	postdec2,btemp+11
 11941  01B87E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11942  01B884  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11943  01B88A  EE22  F1F1         	lfsr	2,_C+242	;volatile
 11944  01B88E  006F FF78  F034    	movff	postinc2,btemp+10
 11945  01B894  006F FF74  F035    	movff	postdec2,btemp+11
 11946  01B89A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11947  01B8A0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11948  01B8A6  EE22  F1EF         	lfsr	2,_C+240	;volatile
 11949  01B8AA  006F FF78  F034    	movff	postinc2,btemp+10
 11950  01B8B0  006F FF74  F035    	movff	postdec2,btemp+11
 11951  01B8B6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11952  01B8BC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11953  01B8C2  EE22  F1ED         	lfsr	2,_C+238	;volatile
 11954  01B8C6  006F FF78  F034    	movff	postinc2,btemp+10
 11955  01B8CC  006F FF74  F035    	movff	postdec2,btemp+11
 11956  01B8D2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11957  01B8D8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11958  01B8DE  0E25               	movlw	low STR_78
 11959  01B8E0  6EE6               	movwf	postinc1,c
 11960  01B8E2  0EFA               	movlw	high STR_78
 11961  01B8E4  6EE6               	movwf	postinc1,c
 11962  01B8E6  0E00               	movlw	0
 11963  01B8E8  6EE6               	movwf	postinc1,c
 11964  01B8EA  0E02               	movlw	2
 11965  01B8EC  6EE6               	movwf	postinc1,c
 11966  01B8EE  EC53  F014         	call	_get_vterm_ptr	;wreg free
 11967  01B8F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 11968  01B8F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11969  01B8FE  0E0C               	movlw	12
 11970  01B900  6EE6               	movwf	postinc1,c
 11971  01B902  EC5B  F000         	call	_sprintf	;wreg free
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;main.c: 629:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11975  01B906  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 11976  01B90C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 11977  01B912  EC75  F0C6         	call	_asctime	;wreg free
 11978  01B916  0060  F0AB  FFE6   	movff	btemp,postinc1
 11979  01B91C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11980  01B922  0E63               	movlw	low (STR_85+5)
 11981  01B924  6EE6               	movwf	postinc1,c
 11982  01B926  0EFF               	movlw	high (STR_85+5)
 11983  01B928  6EE6               	movwf	postinc1,c
 11984  01B92A  0E00               	movlw	0
 11985  01B92C  6EE6               	movwf	postinc1,c
 11986  01B92E  0E03               	movlw	3
 11987  01B930  6EE6               	movwf	postinc1,c
 11988  01B932  EC53  F014         	call	_get_vterm_ptr	;wreg free
 11989  01B936  0060  F0AB  FFE6   	movff	btemp,postinc1
 11990  01B93C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11991  01B942  0E06               	movlw	6
 11992  01B944  6EE6               	movwf	postinc1,c
 11993  01B946  EC5B  F000         	call	_sprintf	;wreg free
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;main.c: 630:   update_lcd(0);
 11997  01B94A  0E00               	movlw	0
 11998  01B94C  6EE6               	movwf	postinc1,c
 11999  01B94E  EC4B  F0F8         	call	_update_lcd	;wreg free
 12000                           
 12001                           ;main.c: 631:   WaitMs(2000);
 12002  01B952  0ED0               	movlw	208
 12003  01B954  6EE6               	movwf	postinc1,c
 12004  01B956  0E07               	movlw	7
 12005  01B958  6EE6               	movwf	postinc1,c
 12006  01B95A  EC57  F013         	call	_WaitMs	;wreg free
 12007  01B95E                     l17597:
 12008                           
 12009                           ;main.c: 632:   bwait = 0;
 12010  01B95E  6A53               	clrf	display_history@bwait^0,c
 12011  01B960  0012               	return	
 12012  01B962                     l17603:
 12013                           
 12014                           ;main.c: 635:   if (!get_switch(SCALIB))
 12015  01B962  0E04               	movlw	4
 12016  01B964  6EE6               	movwf	postinc1,c
 12017  01B966  EC6A  F014         	call	_get_switch	;wreg free
 12018  01B96A  502A               	movf	btemp^0,w,c
 12019  01B96C  A4D8               	btfss	status,2,c
 12020  01B96E  0012               	return	
 12021  01B970  D7F6               	goto	l17597
 12022  01B972                     __end_of_display_history:
 12023                           	opt callstack 0
 12024                           
 12025 ;; *************** function _time *****************
 12026 ;; Defined at:
 12027 ;;		line 243 in file "mbmc.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;  t               2  [STACK] PTR long long 
 12030 ;;		 -> time@current_time(8), NULL(0), 
 12031 ;; Auto vars:     Size  Location     Type
 12032 ;;		None
 12033 ;; Return value:  Size  Location     Type
 12034 ;;                  8  [STACK] long long 
 12035 ;; Registers used:
 12036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 12037 ;; Tracked objects:
 12038 ;;		On entry : 0/1
 12039 ;;		On exit  : 3F/39
 12040 ;;		Unchanged: 0/0
 12041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12046 ;;Total ram usage:        0 bytes
 12047 ;; Hardware stack levels used:    1
 12048 ;; Hardware stack levels required when called:   15
 12049 ;; This function calls:
 12050 ;;		Nothing
 12051 ;; This function is called by:
 12052 ;;		_main
 12053 ;;		_display_history
 12054 ;;		_check_day_time
 12055 ;;		_load_hist_data
 12056 ;; This function uses a reentrant model
 12057 ;;
 12058                           
 12059                           	psect	text35
 12060  001E4A                     __ptext35:
 12061                           	opt callstack 0
 12062  001E4A                     _time:
 12063                           	opt callstack 0
 12064                           
 12065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 12066  001E4A  0E06               	movlw	6
 12067  001E4C  26E1               	addwf	fsr1l,f,c
 12068  001E4E  0E00               	movlw	0
 12069  001E50  22E2               	addwfc	fsr1h,f,c
 12070                           
 12071                           ;mbmc.c: 243: time_t time(time_t * t);mbmc.c: 244: {;mbmc.c: 245:  static time_t current
      +                          _time;;mbmc.c: 246:  PIE8bits.TMR5IE = 0;
 12072                           
 12073                           ;incstack = 0
 12074 ;; hardware stack exceeded
 12075  001E52  0139               	movlb	57	; () banked
 12076  001E54  9D98               	bcf	152,6,b	;volatile
 12077                           
 12078                           ; BSR set to: 57
 12079                           ;mbmc.c: 247:  current_time = V.ticks;
 12080  001E56  0102               	movlb	2	; () banked
 12081  001E58  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 12082  001E5A  0100               	movlb	0	; () banked
 12083  001E5C  6FD2               	movwf	time@current_time& (0+255),b
 12084  001E5E  0102               	movlb	2	; () banked
 12085  001E60  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 12086  001E62  0100               	movlb	0	; () banked
 12087  001E64  6FD3               	movwf	(time@current_time+1)& (0+255),b
 12088  001E66  0102               	movlb	2	; () banked
 12089  001E68  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 12090  001E6A  0100               	movlb	0	; () banked
 12091  001E6C  6FD4               	movwf	(time@current_time+2)& (0+255),b
 12092  001E6E  0102               	movlb	2	; () banked
 12093  001E70  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 12094  001E72  0100               	movlb	0	; () banked
 12095  001E74  6FD5               	movwf	(time@current_time+3)& (0+255),b
 12096  001E76  6BD6               	clrf	(time@current_time+4)& (0+255),b
 12097  001E78  6BD7               	clrf	(time@current_time+5)& (0+255),b
 12098  001E7A  6BD8               	clrf	(time@current_time+6)& (0+255),b
 12099  001E7C  6BD9               	clrf	(time@current_time+7)& (0+255),b
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;mbmc.c: 248:  PIE8bits.TMR5IE = 1;
 12103  001E7E  0139               	movlb	57	; () banked
 12104  001E80  8D98               	bsf	152,6,b	;volatile
 12105                           
 12106                           ; BSR set to: 57
 12107                           ;mbmc.c: 249:  if (t) {
 12108                           ;stkvar	_t @ sp[(0)+-8]
 12109  001E82  0EF8               	movlw	-8
 12110  001E84  006F FF8C  F02A    	movff	plusw1,btemp
 12111  001E8A  0EF9               	movlw	-7
 12112  001E8C  50E3               	movf	plusw1,w,c
 12113  001E8E  102A               	iorwf	btemp^0,w,c
 12114                           
 12115                           ; BSR set to: 57
 12116                           ;mbmc.c: 252:  return current_time;
 12117                           
 12118                           ; BSR set to: 57
 12119  001E90  EE20  F0D2         	lfsr	2,time@current_time
 12120                           
 12121                           ;stkvar	?_time @ sp[(0)+-8]
 12122  001E94  0E08               	movlw	8
 12123  001E96  6E2A               	movwf	btemp^0,c
 12124  001E98  0EF8               	movlw	-8
 12125  001E9A                     us1167999:
 12126  001E9A  006F FF7B FFE3     	movff	postinc2,plusw1
 12127  001EA0  28E8               	incf	wreg,w,c
 12128  001EA2  2E2A               	decfsz	btemp^0,f,c
 12129  001EA4  D7FA               	bra	us1167999
 12130                           
 12131                           ; BSR set to: 57
 12132                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 12133  001EA6  0012               	return		;funcret
 12134  001EA8                     __end_of_time:
 12135                           	opt callstack 0
 12136                           
 12137 ;; *************** function _localtime *****************
 12138 ;; Defined at:
 12139 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;  t               1  [STACK] PTR const long long 
 12142 ;;		 -> pclock(8), 
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;		None
 12145 ;; Return value:  Size  Location     Type
 12146 ;;                  2  [STACK] PTR struct tm
 12147 ;; Registers used:
 12148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12149 ;; Tracked objects:
 12150 ;;		On entry : 3F/39
 12151 ;;		On exit  : 0/0
 12152 ;;		Unchanged: 0/0
 12153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12158 ;;Total ram usage:        0 bytes
 12159 ;; Hardware stack levels used:    1
 12160 ;; Hardware stack levels required when called:   21
 12161 ;; This function calls:
 12162 ;;		___localtime_r
 12163 ;; This function is called by:
 12164 ;;		_main
 12165 ;;		_display_history
 12166 ;; This function uses a reentrant model
 12167 ;;
 12168                           
 12169                           	psect	text36
 12170  002E36                     __ptext36:
 12171                           	opt callstack 0
 12172  002E36                     _localtime:
 12173                           	opt callstack 9
 12174                           
 12175                           ; BSR set to: 57
 12176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12177                           ;incstack = 0
 12178  002E36  0EDF               	movlw	low localtime@tm
 12179  002E38  6EE6               	movwf	postinc1,c
 12180  002E3A  0E03               	movlw	high localtime@tm
 12181  002E3C  6EE6               	movwf	postinc1,c
 12182                           
 12183                           ;stkvar	_t @ sp[(-2)+-1]
 12184  002E3E  0EFD               	movlw	-3
 12185  002E40  50E3               	movf	plusw1,w,c
 12186  002E42  6EE6               	movwf	postinc1,c
 12187  002E44  ECCE  F0E6         	call	___localtime_r	;wreg free
 12188                           
 12189                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12190  002E48  52E5               	movf	postdec1,f,c
 12191  002E4A  0012               	return		;funcret
 12192  002E4C                     __end_of_localtime:
 12193                           	opt callstack 0
 12194                           
 12195 ;; *************** function ___localtime_r *****************
 12196 ;; Defined at:
 12197 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;  t               1  [STACK] PTR const long long 
 12200 ;;		 -> pclock(8), 
 12201 ;;  tm              2  [STACK] PTR struct tm
 12202 ;;		 -> localtime@tm(24), 
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;		None
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  2  [STACK] PTR struct tm
 12207 ;; Registers used:
 12208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/39
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12218 ;;Total ram usage:        0 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:   20
 12221 ;; This function calls:
 12222 ;;		___secs_to_tm
 12223 ;;		___secs_to_zone
 12224 ;; This function is called by:
 12225 ;;		_localtime
 12226 ;; This function uses a reentrant model
 12227 ;;
 12228                           
 12229                           	psect	text37
 12230  01CD9C                     __ptext37:
 12231                           	opt callstack 0
 12232  01CD9C                     ___localtime_r:
 12233                           	opt callstack 9
 12234                           
 12235                           ;stkvar	_t @ sp[(0)+-1]
 12236                           
 12237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12238                           ;incstack = 0
 12239  01CD9C  0EFF               	movlw	-1
 12240  01CD9E  50E3               	movf	plusw1,w,c
 12241  01CDA0  6ED9               	movwf	fsr2l,c
 12242  01CDA2  6ADA               	clrf	fsr2h,c
 12243  01CDA4  0E07               	movlw	7
 12244  01CDA6  AEDB               	btfss	plusw2,7,c
 12245  01CDA8  D010               	goto	u16640
 12246  01CDAA  52DE               	movf	postinc2,f,c
 12247  01CDAC  52DE               	movf	postinc2,f,c
 12248  01CDAE  0E80               	movlw	128
 12249  01CDB0  5CDE               	subwf	postinc2,w,c
 12250  01CDB2  0EBD               	movlw	189
 12251  01CDB4  58DE               	subwfb	postinc2,w,c
 12252  01CDB6  0E0E               	movlw	14
 12253  01CDB8  58DE               	subwfb	postinc2,w,c
 12254  01CDBA  0EFF               	movlw	255
 12255  01CDBC  58DE               	subwfb	postinc2,w,c
 12256  01CDBE  0EFF               	movlw	255
 12257  01CDC0  58DE               	subwfb	postinc2,w,c
 12258  01CDC2  0EFF               	movlw	255
 12259  01CDC4  58DE               	subwfb	postinc2,w,c
 12260  01CDC6  A0D8               	btfss	status,0,c
 12261  01CDC8  D01B               	goto	u16650
 12262  01CDCA                     u16640:
 12263                           
 12264                           ;stkvar	_t @ sp[(0)+-1]
 12265  01CDCA  0EFF               	movlw	-1
 12266  01CDCC  50E3               	movf	plusw1,w,c
 12267  01CDCE  6ED9               	movwf	fsr2l,c
 12268  01CDD0  6ADA               	clrf	fsr2h,c
 12269  01CDD2  0E07               	movlw	7
 12270  01CDD4  BEDB               	btfsc	plusw2,7,c
 12271  01CDD6  D019               	goto	l17075
 12272  01CDD8  0E07               	movlw	7
 12273  01CDDA  50DB               	movf	plusw2,w,c
 12274  01CDDC  E111               	bnz	u16650
 12275  01CDDE  0E06               	movlw	6
 12276  01CDE0  50DB               	movf	plusw2,w,c
 12277  01CDE2  E10E               	bnz	u16650
 12278  01CDE4  0E05               	movlw	5
 12279  01CDE6  50DB               	movf	plusw2,w,c
 12280  01CDE8  E10B               	bnz	u16650
 12281  01CDEA  04DE               	decf	postinc2,w,c
 12282  01CDEC  0E7B               	movlw	123
 12283  01CDEE  58DE               	subwfb	postinc2,w,c
 12284  01CDF0  0E9D               	movlw	157
 12285  01CDF2  58DE               	subwfb	postinc2,w,c
 12286  01CDF4  0E40               	movlw	64
 12287  01CDF6  58DE               	subwfb	postinc2,w,c
 12288  01CDF8  0EF1               	movlw	241
 12289  01CDFA  58DE               	subwfb	postinc2,w,c
 12290  01CDFC  A0D8               	btfss	status,0,c
 12291  01CDFE  D005               	goto	l17075
 12292  01CE00                     u16650:
 12293  01CE00  0E00               	movlw	0
 12294  01CE02  6E2A               	movwf	btemp^0,c
 12295  01CE04  0E00               	movlw	0
 12296  01CE06  6E2B               	movwf	(btemp+1)^0,c
 12297  01CE08  D0E7               	goto	l3526
 12298  01CE0A                     l17075:
 12299                           
 12300                           ;stkvar	_tm @ sp[(0)+-3]
 12301  01CE0A  0EFD               	movlw	-3
 12302  01CE0C  50E3               	movf	plusw1,w,c
 12303  01CE0E  0F16               	addlw	22
 12304  01CE10  6E34               	movwf	(btemp+10)^0,c
 12305  01CE12  0EFE               	movlw	-2
 12306  01CE14  006F FF8C  F035    	movff	plusw1,btemp+11
 12307  01CE1A  0E00               	movlw	0
 12308  01CE1C  2235               	addwfc	(btemp+11)^0,f,c
 12309  01CE1E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12310  01CE24  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12311  01CE2A  0E00               	movlw	0
 12312  01CE2C  6EE6               	movwf	postinc1,c
 12313  01CE2E  0E00               	movlw	0
 12314  01CE30  6EE6               	movwf	postinc1,c
 12315                           
 12316                           ;stkvar	_tm @ sp[(-4)+-3]
 12317  01CE32  0EF9               	movlw	-7
 12318  01CE34  50E3               	movf	plusw1,w,c
 12319  01CE36  0F12               	addlw	18
 12320  01CE38  6E34               	movwf	(btemp+10)^0,c
 12321  01CE3A  0EFA               	movlw	-6
 12322  01CE3C  006F FF8C  F035    	movff	plusw1,btemp+11
 12323  01CE42  0E00               	movlw	0
 12324  01CE44  2235               	addwfc	(btemp+11)^0,f,c
 12325  01CE46  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12326  01CE4C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12327                           
 12328                           ;stkvar	_tm @ sp[(-6)+-3]
 12329  01CE52  0EF7               	movlw	-9
 12330  01CE54  50E3               	movf	plusw1,w,c
 12331  01CE56  0F10               	addlw	16
 12332  01CE58  6E34               	movwf	(btemp+10)^0,c
 12333  01CE5A  0EF8               	movlw	-8
 12334  01CE5C  006F FF8C  F035    	movff	plusw1,btemp+11
 12335  01CE62  0E00               	movlw	0
 12336  01CE64  2235               	addwfc	(btemp+11)^0,f,c
 12337  01CE66  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12338  01CE6C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12339  01CE72  0E00               	movlw	0
 12340  01CE74  6EE6               	movwf	postinc1,c
 12341  01CE76  0E00               	movlw	0
 12342  01CE78  6EE6               	movwf	postinc1,c
 12343                           
 12344                           ;stkvar	_t @ sp[(-10)+-1]
 12345  01CE7A  0EF5               	movlw	-11
 12346  01CE7C  50E3               	movf	plusw1,w,c
 12347  01CE7E  6ED9               	movwf	fsr2l,c
 12348  01CE80  6ADA               	clrf	fsr2h,c
 12349  01CE82  006F FF7B FFE6     	movff	postinc2,postinc1
 12350  01CE88  006F FF7B FFE6     	movff	postinc2,postinc1
 12351  01CE8E  006F FF7B FFE6     	movff	postinc2,postinc1
 12352  01CE94  006F FF7B FFE6     	movff	postinc2,postinc1
 12353  01CE9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12354  01CEA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12355  01CEA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12356  01CEAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12357  01CEB2  EC16  F0B4         	call	___secs_to_zone	;wreg free
 12358                           
 12359                           ;stkvar	_tm @ sp[(0)+-3]
 12360  01CEB6  0EFD               	movlw	-3
 12361  01CEB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12362  01CEBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12363                           
 12364                           ;stkvar	_t @ sp[(-2)+-1]
 12365  01CEC4  0EFD               	movlw	-3
 12366  01CEC6  50E3               	movf	plusw1,w,c
 12367  01CEC8  6ED9               	movwf	fsr2l,c
 12368  01CECA  6ADA               	clrf	fsr2h,c
 12369  01CECC  006F FF78  F03A    	movff	postinc2,btemp+16
 12370  01CED2  006F FF78  F03B    	movff	postinc2,btemp+17
 12371  01CED8  006F FF78  F03C    	movff	postinc2,btemp+18
 12372  01CEDE  006F FF78  F03D    	movff	postinc2,btemp+19
 12373  01CEE4  006F FF78  F03E    	movff	postinc2,btemp+20
 12374  01CEEA  006F FF78  F03F    	movff	postinc2,btemp+21
 12375  01CEF0  006F FF78  F040    	movff	postinc2,btemp+22
 12376  01CEF6  006F FF78  F041    	movff	postinc2,btemp+23
 12377                           
 12378                           ;stkvar	_tm @ sp[(-2)+-3]
 12379  01CEFC  0EFB               	movlw	-5
 12380  01CEFE  006F FF8C  F034    	movff	plusw1,btemp+10
 12381  01CF04  0EFC               	movlw	-4
 12382  01CF06  006F FF8C  F035    	movff	plusw1,btemp+11
 12383  01CF0C  0E12               	movlw	18
 12384  01CF0E  2434               	addwf	(btemp+10)^0,w,c
 12385  01CF10  6ED9               	movwf	fsr2l,c
 12386  01CF12  0E00               	movlw	0
 12387  01CF14  2035               	addwfc	(btemp+11)^0,w,c
 12388  01CF16  6EDA               	movwf	fsr2h,c
 12389  01CF18  006F FF78  F032    	movff	postinc2,btemp+8
 12390  01CF1E  006F FF78  F033    	movff	postinc2,btemp+9
 12391  01CF24  006F FF78  F034    	movff	postinc2,btemp+10
 12392  01CF2A  006F FF78  F035    	movff	postinc2,btemp+11
 12393  01CF30  0060  F0C8  F042   	movff	btemp+8,btemp+24
 12394  01CF36  0060  F0CC  F043   	movff	btemp+9,btemp+25
 12395  01CF3C  0060  F0D0  F044   	movff	btemp+10,btemp+26
 12396  01CF42  0060  F0D4  F045   	movff	btemp+11,btemp+27
 12397  01CF48  6A46               	clrf	(btemp+28)^0,c
 12398  01CF4A  BE45               	btfsc	(btemp+27)^0,7,c
 12399  01CF4C  6846               	setf	(btemp+28)^0,c
 12400  01CF4E  0060  F118  F047   	movff	btemp+28,btemp+29
 12401  01CF54  0060  F118  F048   	movff	btemp+28,btemp+30
 12402  01CF5A  0060  F118  F049   	movff	btemp+28,btemp+31
 12403  01CF60  503A               	movf	(btemp+16)^0,w,c
 12404  01CF62  2442               	addwf	(btemp+24)^0,w,c
 12405  01CF64  6E32               	movwf	(btemp+8)^0,c
 12406  01CF66  503B               	movf	(btemp+17)^0,w,c
 12407  01CF68  2043               	addwfc	(btemp+25)^0,w,c
 12408  01CF6A  6E33               	movwf	(btemp+9)^0,c
 12409  01CF6C  503C               	movf	(btemp+18)^0,w,c
 12410  01CF6E  2044               	addwfc	(btemp+26)^0,w,c
 12411  01CF70  6E34               	movwf	(btemp+10)^0,c
 12412  01CF72  503D               	movf	(btemp+19)^0,w,c
 12413  01CF74  2045               	addwfc	(btemp+27)^0,w,c
 12414  01CF76  6E35               	movwf	(btemp+11)^0,c
 12415  01CF78  503E               	movf	(btemp+20)^0,w,c
 12416  01CF7A  2046               	addwfc	(btemp+28)^0,w,c
 12417  01CF7C  6E36               	movwf	(btemp+12)^0,c
 12418  01CF7E  503F               	movf	(btemp+21)^0,w,c
 12419  01CF80  2047               	addwfc	(btemp+29)^0,w,c
 12420  01CF82  6E37               	movwf	(btemp+13)^0,c
 12421  01CF84  5040               	movf	(btemp+22)^0,w,c
 12422  01CF86  2048               	addwfc	(btemp+30)^0,w,c
 12423  01CF88  6E38               	movwf	(btemp+14)^0,c
 12424  01CF8A  5041               	movf	(btemp+23)^0,w,c
 12425  01CF8C  2049               	addwfc	(btemp+31)^0,w,c
 12426  01CF8E  6E39               	movwf	(btemp+15)^0,c
 12427  01CF90  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12428  01CF96  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12429  01CF9C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12430  01CFA2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12431  01CFA8  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12432  01CFAE  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12433  01CFB4  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12434  01CFBA  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12435  01CFC0  EC0D  F094         	call	___secs_to_tm	;wreg free
 12436  01CFC4  BE2D               	btfsc	(btemp+3)^0,7,c
 12437  01CFC6  D71C               	goto	u16650
 12438                           
 12439                           ;stkvar	_tm @ sp[(0)+-3]
 12440  01CFC8  0EFD               	movlw	-3
 12441  01CFCA  006F FF8C  F02A    	movff	plusw1,btemp
 12442  01CFD0  0EFE               	movlw	-2
 12443  01CFD2  006F FF8C  F02B    	movff	plusw1,btemp+1
 12444  01CFD8                     l3526:
 12445                           
 12446                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12447  01CFD8  52E5               	movf	postdec1,f,c
 12448  01CFDA  52E5               	movf	postdec1,f,c
 12449  01CFDC  52E5               	movf	postdec1,f,c
 12450  01CFDE  0012               	return		;funcret
 12451  01CFE0                     __end_of___localtime_r:
 12452                           	opt callstack 0
 12453                           
 12454 ;; *************** function ___secs_to_zone *****************
 12455 ;; Defined at:
 12456 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;  t               8  [STACK] long long 
 12459 ;;  local           2  [STACK] int 
 12460 ;;  isdst           2  [STACK] PTR int 
 12461 ;;		 -> localtime@tm(24), 
 12462 ;;  offset          2  [STACK] PTR long 
 12463 ;;		 -> localtime@tm(24), 
 12464 ;;  oppoff          2  [STACK] PTR long 
 12465 ;;		 -> NULL(0), 
 12466 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12467 ;;		 -> localtime@tm(24), 
 12468 ;; Auto vars:     Size  Location     Type
 12469 ;;  alt             2  [STACK] unsigned int 
 12470 ;;  i               2    0        unsigned int 
 12471 ;;  y               8  [STACK] long long 
 12472 ;;  t1              8  [STACK] long long 
 12473 ;;  t0              8  [STACK] long long 
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  1  [STACK] void 
 12476 ;; Registers used:
 12477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/39
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;Total ram usage:        0 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:   19
 12490 ;; This function calls:
 12491 ;;		___aodiv
 12492 ;;		___year_to_secs
 12493 ;;		_do_tzset
 12494 ;;		_rule_to_secs
 12495 ;;		_scan_trans
 12496 ;;		_zi_read32
 12497 ;; This function is called by:
 12498 ;;		___localtime_r
 12499 ;; This function uses a reentrant model
 12500 ;;
 12501                           
 12502                           	psect	text38
 12503  01682C                     __ptext38:
 12504                           	opt callstack 0
 12505  01682C                     ___secs_to_zone:
 12506                           	opt callstack 0
 12507                           
 12508                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12509  01682C  0E18               	movlw	24
 12510  01682E  26E1               	addwf	fsr1l,f,c
 12511  016830  0E00               	movlw	0
 12512  016832  22E2               	addwfc	fsr1h,f,c
 12513                           
 12514                           ;incstack = 0
 12515  016834  EC84  F0DF         	call	_do_tzset	;wreg free
 12516  016838  0100               	movlb	0	; () banked
 12517  01683A  51B8               	movf	___daylight& (0+255),w,b
 12518  01683C  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12519  01683E  B4D8               	btfsc	status,2,c
 12520  016840  D356               	goto	u16430
 12521                           
 12522                           ; BSR set to: 0
 12523  016842  0E58               	movlw	88
 12524  016844  6EE6               	movwf	postinc1,c
 12525  016846  0E85               	movlw	133
 12526  016848  6EE6               	movwf	postinc1,c
 12527  01684A  0EE1               	movlw	225
 12528  01684C  6EE6               	movwf	postinc1,c
 12529  01684E  0E01               	movlw	1
 12530  016850  6EE6               	movwf	postinc1,c
 12531  016852  0E00               	movlw	0
 12532  016854  6EE6               	movwf	postinc1,c
 12533  016856  0E00               	movlw	0
 12534  016858  6EE6               	movwf	postinc1,c
 12535  01685A  0E00               	movlw	0
 12536  01685C  6EE6               	movwf	postinc1,c
 12537  01685E  0E00               	movlw	0
 12538  016860  6EE6               	movwf	postinc1,c
 12539                           
 12540                           ;stkvar	_t @ sp[(-32)+-8]
 12541  016862  50E1               	movf	fsr1l,w,c
 12542  016864  0FD8               	addlw	-40
 12543  016866  6ED9               	movwf	fsr2l,c
 12544  016868  50E2               	movf	fsr1h,w,c
 12545  01686A  6EDA               	movwf	fsr2h,c
 12546  01686C  0EFF               	movlw	255
 12547  01686E  22DA               	addwfc	fsr2h,f,c
 12548  016870  006F FF7B FFE6     	movff	postinc2,postinc1
 12549  016876  006F FF7B FFE6     	movff	postinc2,postinc1
 12550  01687C  006F FF7B FFE6     	movff	postinc2,postinc1
 12551  016882  006F FF7B FFE6     	movff	postinc2,postinc1
 12552  016888  006F FF7B FFE6     	movff	postinc2,postinc1
 12553  01688E  006F FF7B FFE6     	movff	postinc2,postinc1
 12554  016894  006F FF7B FFE6     	movff	postinc2,postinc1
 12555  01689A  006F FF7B FFE6     	movff	postinc2,postinc1
 12556  0168A0  EC04  F0E2         	call	___aodiv	;wreg free
 12557  0168A4  52E5               	movf	postdec1,f,c
 12558  0168A6  006F FF9C  F041    	movff	indf1,btemp+23
 12559  0168AC  52E5               	movf	postdec1,f,c
 12560  0168AE  006F FF9C  F040    	movff	indf1,btemp+22
 12561  0168B4  52E5               	movf	postdec1,f,c
 12562  0168B6  006F FF9C  F03F    	movff	indf1,btemp+21
 12563  0168BC  52E5               	movf	postdec1,f,c
 12564  0168BE  006F FF9C  F03E    	movff	indf1,btemp+20
 12565  0168C4  52E5               	movf	postdec1,f,c
 12566  0168C6  006F FF9C  F03D    	movff	indf1,btemp+19
 12567  0168CC  52E5               	movf	postdec1,f,c
 12568  0168CE  006F FF9C  F03C    	movff	indf1,btemp+18
 12569  0168D4  52E5               	movf	postdec1,f,c
 12570  0168D6  006F FF9C  F03B    	movff	indf1,btemp+17
 12571  0168DC  52E5               	movf	postdec1,f,c
 12572  0168DE  006F FF9C  F03A    	movff	indf1,btemp+16
 12573  0168E4  0EF8               	movlw	248
 12574  0168E6  26E1               	addwf	fsr1l,f,c
 12575  0168E8  0EFF               	movlw	255
 12576  0168EA  22E2               	addwfc	fsr1h,f,c
 12577  0168EC  0E46               	movlw	70
 12578  0168EE  243A               	addwf	(btemp+16)^0,w,c
 12579  0168F0  6E42               	movwf	(btemp+24)^0,c
 12580  0168F2  0E00               	movlw	0
 12581  0168F4  203B               	addwfc	(btemp+17)^0,w,c
 12582  0168F6  6E43               	movwf	(btemp+25)^0,c
 12583  0168F8  0E00               	movlw	0
 12584  0168FA  203C               	addwfc	(btemp+18)^0,w,c
 12585  0168FC  6E44               	movwf	(btemp+26)^0,c
 12586  0168FE  0E00               	movlw	0
 12587  016900  203D               	addwfc	(btemp+19)^0,w,c
 12588  016902  6E45               	movwf	(btemp+27)^0,c
 12589  016904  0E00               	movlw	0
 12590  016906  203E               	addwfc	(btemp+20)^0,w,c
 12591  016908  6E46               	movwf	(btemp+28)^0,c
 12592  01690A  0E00               	movlw	0
 12593  01690C  203F               	addwfc	(btemp+21)^0,w,c
 12594  01690E  6E47               	movwf	(btemp+29)^0,c
 12595  016910  0E00               	movlw	0
 12596  016912  2040               	addwfc	(btemp+22)^0,w,c
 12597  016914  6E48               	movwf	(btemp+30)^0,c
 12598  016916  0E00               	movlw	0
 12599  016918  2041               	addwfc	(btemp+23)^0,w,c
 12600  01691A  6E49               	movwf	(btemp+31)^0,c
 12601                           
 12602                           ;stkvar	_y @ sp[(-24)+0]
 12603  01691C  0EE8               	movlw	-24
 12604  01691E  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12605  016924  0EE9               	movlw	-23
 12606  016926  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12607  01692C  0EEA               	movlw	-22
 12608  01692E  0060  F113  FFE3   	movff	btemp+26,plusw1
 12609  016934  0EEB               	movlw	-21
 12610  016936  0060  F117  FFE3   	movff	btemp+27,plusw1
 12611  01693C  0EEC               	movlw	-20
 12612  01693E  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12613  016944  0EED               	movlw	-19
 12614  016946  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12615  01694C  0EEE               	movlw	-18
 12616  01694E  0060  F123  FFE3   	movff	btemp+30,plusw1
 12617  016954  0EEF               	movlw	-17
 12618  016956  0060  F127  FFE3   	movff	btemp+31,plusw1
 12619  01695C  D010               	goto	l16845
 12620  01695E                     l16843:
 12621                           
 12622                           ;stkvar	_y @ sp[(-24)+0]
 12623  01695E  50E1               	movf	fsr1l,w,c
 12624  016960  0FE8               	addlw	-24
 12625  016962  6ED9               	movwf	fsr2l,c
 12626  016964  50E2               	movf	fsr1h,w,c
 12627  016966  6EDA               	movwf	fsr2h,c
 12628  016968  0EFF               	movlw	255
 12629  01696A  22DA               	addwfc	fsr2h,f,c
 12630  01696C  06DE               	decf	postinc2,f,c
 12631  01696E  0E00               	movlw	0
 12632  016970  5ADE               	subwfb	postinc2,f,c
 12633  016972  5ADE               	subwfb	postinc2,f,c
 12634  016974  5ADE               	subwfb	postinc2,f,c
 12635  016976  5ADE               	subwfb	postinc2,f,c
 12636  016978  5ADE               	subwfb	postinc2,f,c
 12637  01697A  5ADE               	subwfb	postinc2,f,c
 12638  01697C  5ADE               	subwfb	postinc2,f,c
 12639  01697E                     l16845:
 12640  01697E  0E00               	movlw	0
 12641  016980  6EE6               	movwf	postinc1,c
 12642  016982  0E00               	movlw	0
 12643  016984  6EE6               	movwf	postinc1,c
 12644                           
 12645                           ;stkvar	_y @ sp[(-26)+0]
 12646  016986  50E1               	movf	fsr1l,w,c
 12647  016988  0FE6               	addlw	-26
 12648  01698A  6ED9               	movwf	fsr2l,c
 12649  01698C  50E2               	movf	fsr1h,w,c
 12650  01698E  6EDA               	movwf	fsr2h,c
 12651  016990  0EFF               	movlw	255
 12652  016992  22DA               	addwfc	fsr2h,f,c
 12653  016994  006F FF7B FFE6     	movff	postinc2,postinc1
 12654  01699A  006F FF7B FFE6     	movff	postinc2,postinc1
 12655  0169A0  006F FF7B FFE6     	movff	postinc2,postinc1
 12656  0169A6  006F FF7B FFE6     	movff	postinc2,postinc1
 12657  0169AC  006F FF7B FFE6     	movff	postinc2,postinc1
 12658  0169B2  006F FF7B FFE6     	movff	postinc2,postinc1
 12659  0169B8  006F FF7B FFE6     	movff	postinc2,postinc1
 12660  0169BE  006F FF7B FFE6     	movff	postinc2,postinc1
 12661  0169C4  EC5D  F0AF         	call	___year_to_secs	;wreg free
 12662  0169C8  52E5               	movf	postdec1,f,c
 12663  0169CA  006F FF9C  F041    	movff	indf1,btemp+23
 12664  0169D0  52E5               	movf	postdec1,f,c
 12665  0169D2  006F FF9C  F040    	movff	indf1,btemp+22
 12666  0169D8  52E5               	movf	postdec1,f,c
 12667  0169DA  006F FF9C  F03F    	movff	indf1,btemp+21
 12668  0169E0  52E5               	movf	postdec1,f,c
 12669  0169E2  006F FF9C  F03E    	movff	indf1,btemp+20
 12670  0169E8  52E5               	movf	postdec1,f,c
 12671  0169EA  006F FF9C  F03D    	movff	indf1,btemp+19
 12672  0169F0  52E5               	movf	postdec1,f,c
 12673  0169F2  006F FF9C  F03C    	movff	indf1,btemp+18
 12674  0169F8  52E5               	movf	postdec1,f,c
 12675  0169FA  006F FF9C  F03B    	movff	indf1,btemp+17
 12676  016A00  52E5               	movf	postdec1,f,c
 12677  016A02  006F FF9C  F03A    	movff	indf1,btemp+16
 12678  016A08  52E5               	movf	postdec1,f,c
 12679  016A0A  52E5               	movf	postdec1,f,c
 12680                           
 12681                           ;stkvar	_t @ sp[(-24)+-8]
 12682  016A0C  0EE0               	movlw	-32
 12683  016A0E  006F FF8C  F02A    	movff	plusw1,btemp
 12684  016A14  503A               	movf	(btemp+16)^0,w,c
 12685  016A16  5C2A               	subwf	btemp^0,w,c
 12686  016A18  0EE1               	movlw	-31
 12687  016A1A  006F FF8C  F02A    	movff	plusw1,btemp
 12688  016A20  503B               	movf	(btemp+17)^0,w,c
 12689  016A22  582A               	subwfb	btemp^0,w,c
 12690  016A24  0EE2               	movlw	-30
 12691  016A26  006F FF8C  F02A    	movff	plusw1,btemp
 12692  016A2C  503C               	movf	(btemp+18)^0,w,c
 12693  016A2E  582A               	subwfb	btemp^0,w,c
 12694  016A30  0EE3               	movlw	-29
 12695  016A32  006F FF8C  F02A    	movff	plusw1,btemp
 12696  016A38  503D               	movf	(btemp+19)^0,w,c
 12697  016A3A  582A               	subwfb	btemp^0,w,c
 12698  016A3C  0EE4               	movlw	-28
 12699  016A3E  006F FF8C  F02A    	movff	plusw1,btemp
 12700  016A44  503E               	movf	(btemp+20)^0,w,c
 12701  016A46  582A               	subwfb	btemp^0,w,c
 12702  016A48  0EE5               	movlw	-27
 12703  016A4A  006F FF8C  F02A    	movff	plusw1,btemp
 12704  016A50  503F               	movf	(btemp+21)^0,w,c
 12705  016A52  582A               	subwfb	btemp^0,w,c
 12706  016A54  0EE6               	movlw	-26
 12707  016A56  006F FF8C  F02A    	movff	plusw1,btemp
 12708  016A5C  5040               	movf	(btemp+22)^0,w,c
 12709  016A5E  582A               	subwfb	btemp^0,w,c
 12710  016A60  0EE7               	movlw	-25
 12711  016A62  50E3               	movf	plusw1,w,c
 12712  016A64  0A80               	xorlw	128
 12713  016A66  6E2A               	movwf	btemp^0,c
 12714  016A68  5041               	movf	(btemp+23)^0,w,c
 12715  016A6A  0A80               	xorlw	128
 12716  016A6C  582A               	subwfb	btemp^0,w,c
 12717  016A6E  B0D8               	btfsc	status,0,c
 12718  016A70  D011               	goto	l16849
 12719  016A72  D775               	goto	l16843
 12720  016A74                     l16847:
 12721                           
 12722                           ;stkvar	_y @ sp[(-24)+0]
 12723  016A74  50E1               	movf	fsr1l,w,c
 12724  016A76  0FE8               	addlw	-24
 12725  016A78  6ED9               	movwf	fsr2l,c
 12726  016A7A  50E2               	movf	fsr1h,w,c
 12727  016A7C  6EDA               	movwf	fsr2h,c
 12728  016A7E  0EFF               	movlw	255
 12729  016A80  22DA               	addwfc	fsr2h,f,c
 12730  016A82  2ADE               	incf	postinc2,f,c
 12731  016A84  0E00               	movlw	0
 12732  016A86  22DE               	addwfc	postinc2,f,c
 12733  016A88  22DE               	addwfc	postinc2,f,c
 12734  016A8A  22DE               	addwfc	postinc2,f,c
 12735  016A8C  22DE               	addwfc	postinc2,f,c
 12736  016A8E  22DE               	addwfc	postinc2,f,c
 12737  016A90  22DE               	addwfc	postinc2,f,c
 12738  016A92  22DE               	addwfc	postinc2,f,c
 12739  016A94                     l16849:
 12740                           
 12741                           ;stkvar	_t @ sp[(-24)+-8]
 12742  016A94  0E00               	movlw	0
 12743  016A96  6EE6               	movwf	postinc1,c
 12744  016A98  0E00               	movlw	0
 12745  016A9A  6EE6               	movwf	postinc1,c
 12746                           
 12747                           ;stkvar	_y @ sp[(-26)+0]
 12748  016A9C  0EE6               	movlw	-26
 12749  016A9E  50E3               	movf	plusw1,w,c
 12750  016AA0  0F01               	addlw	1
 12751  016AA2  6E3A               	movwf	(btemp+16)^0,c
 12752  016AA4  0EE7               	movlw	-25
 12753  016AA6  006F FF8C  F03B    	movff	plusw1,btemp+17
 12754  016AAC  0E00               	movlw	0
 12755  016AAE  223B               	addwfc	(btemp+17)^0,f,c
 12756  016AB0  0EE8               	movlw	-24
 12757  016AB2  006F FF8C  F03C    	movff	plusw1,btemp+18
 12758  016AB8  0E00               	movlw	0
 12759  016ABA  223C               	addwfc	(btemp+18)^0,f,c
 12760  016ABC  0EE9               	movlw	-23
 12761  016ABE  006F FF8C  F03D    	movff	plusw1,btemp+19
 12762  016AC4  0E00               	movlw	0
 12763  016AC6  223D               	addwfc	(btemp+19)^0,f,c
 12764  016AC8  0EEA               	movlw	-22
 12765  016ACA  006F FF8C  F03E    	movff	plusw1,btemp+20
 12766  016AD0  0E00               	movlw	0
 12767  016AD2  223E               	addwfc	(btemp+20)^0,f,c
 12768  016AD4  0EEB               	movlw	-21
 12769  016AD6  006F FF8C  F03F    	movff	plusw1,btemp+21
 12770  016ADC  0E00               	movlw	0
 12771  016ADE  223F               	addwfc	(btemp+21)^0,f,c
 12772  016AE0  0EEC               	movlw	-20
 12773  016AE2  006F FF8C  F040    	movff	plusw1,btemp+22
 12774  016AE8  0E00               	movlw	0
 12775  016AEA  2240               	addwfc	(btemp+22)^0,f,c
 12776  016AEC  0EED               	movlw	-19
 12777  016AEE  006F FF8C  F041    	movff	plusw1,btemp+23
 12778  016AF4  0E00               	movlw	0
 12779  016AF6  2241               	addwfc	(btemp+23)^0,f,c
 12780  016AF8  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12781  016AFE  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12782  016B04  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12783  016B0A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12784  016B10  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12785  016B16  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12786  016B1C  0060  F103  FFE6   	movff	btemp+22,postinc1
 12787  016B22  0060  F107  FFE6   	movff	btemp+23,postinc1
 12788  016B28  EC5D  F0AF         	call	___year_to_secs	;wreg free
 12789  016B2C  52E5               	movf	postdec1,f,c
 12790  016B2E  006F FF9C  F041    	movff	indf1,btemp+23
 12791  016B34  52E5               	movf	postdec1,f,c
 12792  016B36  006F FF9C  F040    	movff	indf1,btemp+22
 12793  016B3C  52E5               	movf	postdec1,f,c
 12794  016B3E  006F FF9C  F03F    	movff	indf1,btemp+21
 12795  016B44  52E5               	movf	postdec1,f,c
 12796  016B46  006F FF9C  F03E    	movff	indf1,btemp+20
 12797  016B4C  52E5               	movf	postdec1,f,c
 12798  016B4E  006F FF9C  F03D    	movff	indf1,btemp+19
 12799  016B54  52E5               	movf	postdec1,f,c
 12800  016B56  006F FF9C  F03C    	movff	indf1,btemp+18
 12801  016B5C  52E5               	movf	postdec1,f,c
 12802  016B5E  006F FF9C  F03B    	movff	indf1,btemp+17
 12803  016B64  52E5               	movf	postdec1,f,c
 12804  016B66  006F FF9C  F03A    	movff	indf1,btemp+16
 12805  016B6C  52E5               	movf	postdec1,f,c
 12806  016B6E  52E5               	movf	postdec1,f,c
 12807  016B70  0EE0               	movlw	-32
 12808  016B72  50E3               	movf	plusw1,w,c
 12809  016B74  5C3A               	subwf	(btemp+16)^0,w,c
 12810  016B76  0EE1               	movlw	-31
 12811  016B78  50E3               	movf	plusw1,w,c
 12812  016B7A  583B               	subwfb	(btemp+17)^0,w,c
 12813  016B7C  0EE2               	movlw	-30
 12814  016B7E  50E3               	movf	plusw1,w,c
 12815  016B80  583C               	subwfb	(btemp+18)^0,w,c
 12816  016B82  0EE3               	movlw	-29
 12817  016B84  50E3               	movf	plusw1,w,c
 12818  016B86  583D               	subwfb	(btemp+19)^0,w,c
 12819  016B88  0EE4               	movlw	-28
 12820  016B8A  50E3               	movf	plusw1,w,c
 12821  016B8C  583E               	subwfb	(btemp+20)^0,w,c
 12822  016B8E  0EE5               	movlw	-27
 12823  016B90  50E3               	movf	plusw1,w,c
 12824  016B92  583F               	subwfb	(btemp+21)^0,w,c
 12825  016B94  0EE6               	movlw	-26
 12826  016B96  50E3               	movf	plusw1,w,c
 12827  016B98  5840               	subwfb	(btemp+22)^0,w,c
 12828  016B9A  5041               	movf	(btemp+23)^0,w,c
 12829  016B9C  0A80               	xorlw	128
 12830  016B9E  6E2A               	movwf	btemp^0,c
 12831  016BA0  0EE7               	movlw	-25
 12832  016BA2  50E3               	movf	plusw1,w,c
 12833  016BA4  0A80               	xorlw	128
 12834  016BA6  582A               	subwfb	btemp^0,w,c
 12835  016BA8  A0D8               	btfss	status,0,c
 12836  016BAA  D764               	goto	l16847
 12837                           
 12838                           ;stkvar	_y @ sp[(-24)+0]
 12839  016BAC  0EE8               	movlw	-24
 12840  016BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 12841  016BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 12842  016BBA  0EE5               	movlw	low _r0
 12843  016BBC  6EE6               	movwf	postinc1,c
 12844  016BBE  0E01               	movlw	high _r0
 12845  016BC0  6EE6               	movwf	postinc1,c
 12846  016BC2  EC5A  F0C0         	call	_rule_to_secs	;wreg free
 12847  016BC6  52E5               	movf	postdec1,f,c
 12848  016BC8  006F FF9C  F041    	movff	indf1,btemp+23
 12849  016BCE  52E5               	movf	postdec1,f,c
 12850  016BD0  006F FF9C  F040    	movff	indf1,btemp+22
 12851  016BD6  52E5               	movf	postdec1,f,c
 12852  016BD8  006F FF9C  F03F    	movff	indf1,btemp+21
 12853  016BDE  52E5               	movf	postdec1,f,c
 12854  016BE0  006F FF9C  F03E    	movff	indf1,btemp+20
 12855  016BE6  52E5               	movf	postdec1,f,c
 12856  016BE8  006F FF9C  F03D    	movff	indf1,btemp+19
 12857  016BEE  52E5               	movf	postdec1,f,c
 12858  016BF0  006F FF9C  F03C    	movff	indf1,btemp+18
 12859  016BF6  52E5               	movf	postdec1,f,c
 12860  016BF8  006F FF9C  F03B    	movff	indf1,btemp+17
 12861  016BFE  52E5               	movf	postdec1,f,c
 12862  016C00  006F FF9C  F03A    	movff	indf1,btemp+16
 12863                           
 12864                           ;stkvar	_t0 @ sp[(-24)+16]
 12865  016C06  0EF8               	movlw	-8
 12866  016C08  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12867  016C0E  0EF9               	movlw	-7
 12868  016C10  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12869  016C16  0EFA               	movlw	-6
 12870  016C18  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12871  016C1E  0EFB               	movlw	-5
 12872  016C20  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12873  016C26  0EFC               	movlw	-4
 12874  016C28  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12875  016C2E  0EFD               	movlw	-3
 12876  016C30  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12877  016C36  0EFE               	movlw	-2
 12878  016C38  0060  F103  FFE3   	movff	btemp+22,plusw1
 12879  016C3E  0EFF               	movlw	-1
 12880  016C40  0060  F107  FFE3   	movff	btemp+23,plusw1
 12881                           
 12882                           ;stkvar	_y @ sp[(-24)+0]
 12883  016C46  0EE8               	movlw	-24
 12884  016C48  006F FF8F FFE6     	movff	plusw1,postinc1
 12885  016C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 12886  016C54  0EDB               	movlw	low _r1
 12887  016C56  6EE6               	movwf	postinc1,c
 12888  016C58  0E01               	movlw	high _r1
 12889  016C5A  6EE6               	movwf	postinc1,c
 12890  016C5C  EC5A  F0C0         	call	_rule_to_secs	;wreg free
 12891  016C60  52E5               	movf	postdec1,f,c
 12892  016C62  006F FF9C  F041    	movff	indf1,btemp+23
 12893  016C68  52E5               	movf	postdec1,f,c
 12894  016C6A  006F FF9C  F040    	movff	indf1,btemp+22
 12895  016C70  52E5               	movf	postdec1,f,c
 12896  016C72  006F FF9C  F03F    	movff	indf1,btemp+21
 12897  016C78  52E5               	movf	postdec1,f,c
 12898  016C7A  006F FF9C  F03E    	movff	indf1,btemp+20
 12899  016C80  52E5               	movf	postdec1,f,c
 12900  016C82  006F FF9C  F03D    	movff	indf1,btemp+19
 12901  016C88  52E5               	movf	postdec1,f,c
 12902  016C8A  006F FF9C  F03C    	movff	indf1,btemp+18
 12903  016C90  52E5               	movf	postdec1,f,c
 12904  016C92  006F FF9C  F03B    	movff	indf1,btemp+17
 12905  016C98  52E5               	movf	postdec1,f,c
 12906  016C9A  006F FF9C  F03A    	movff	indf1,btemp+16
 12907                           
 12908                           ;stkvar	_t1 @ sp[(-24)+8]
 12909  016CA0  0EF0               	movlw	-16
 12910  016CA2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12911  016CA8  0EF1               	movlw	-15
 12912  016CAA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12913  016CB0  0EF2               	movlw	-14
 12914  016CB2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12915  016CB8  0EF3               	movlw	-13
 12916  016CBA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12917  016CC0  0EF4               	movlw	-12
 12918  016CC2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12919  016CC8  0EF5               	movlw	-11
 12920  016CCA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12921  016CD0  0EF6               	movlw	-10
 12922  016CD2  0060  F103  FFE3   	movff	btemp+22,plusw1
 12923  016CD8  0EF7               	movlw	-9
 12924  016CDA  0060  F107  FFE3   	movff	btemp+23,plusw1
 12925                           
 12926                           ;stkvar	_local @ sp[(-24)+-10]
 12927  016CE0  0EDE               	movlw	-34
 12928  016CE2  006F FF8C  F02A    	movff	plusw1,btemp
 12929  016CE8  0EDF               	movlw	-33
 12930  016CEA  50E3               	movf	plusw1,w,c
 12931  016CEC  102A               	iorwf	btemp^0,w,c
 12932  016CEE  A4D8               	btfss	status,2,c
 12933  016CF0  D044               	goto	l16859
 12934  016CF2  0060  F1C0  F03A   	movff	___timezone,btemp+16
 12935  016CF8  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 12936  016CFE  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 12937  016D04  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 12938  016D0A  6A3E               	clrf	(btemp+20)^0,c
 12939  016D0C  BE3D               	btfsc	(btemp+19)^0,7,c
 12940  016D0E  683E               	setf	(btemp+20)^0,c
 12941  016D10  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12942  016D16  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12943  016D1C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12944                           
 12945                           ;stkvar	_t0 @ sp[(-24)+16]
 12946  016D22  50E1               	movf	fsr1l,w,c
 12947  016D24  0FF8               	addlw	-8
 12948  016D26  6ED9               	movwf	fsr2l,c
 12949  016D28  50E2               	movf	fsr1h,w,c
 12950  016D2A  6EDA               	movwf	fsr2h,c
 12951  016D2C  0EFF               	movlw	255
 12952  016D2E  22DA               	addwfc	fsr2h,f,c
 12953  016D30  503A               	movf	(btemp+16)^0,w,c
 12954  016D32  26DE               	addwf	postinc2,f,c
 12955  016D34  503B               	movf	(btemp+17)^0,w,c
 12956  016D36  22DE               	addwfc	postinc2,f,c
 12957  016D38  503C               	movf	(btemp+18)^0,w,c
 12958  016D3A  22DE               	addwfc	postinc2,f,c
 12959  016D3C  503D               	movf	(btemp+19)^0,w,c
 12960  016D3E  22DE               	addwfc	postinc2,f,c
 12961  016D40  503E               	movf	(btemp+20)^0,w,c
 12962  016D42  22DE               	addwfc	postinc2,f,c
 12963  016D44  503F               	movf	(btemp+21)^0,w,c
 12964  016D46  22DE               	addwfc	postinc2,f,c
 12965  016D48  5040               	movf	(btemp+22)^0,w,c
 12966  016D4A  22DE               	addwfc	postinc2,f,c
 12967  016D4C  5041               	movf	(btemp+23)^0,w,c
 12968  016D4E  22DE               	addwfc	postinc2,f,c
 12969                           
 12970                           ;stkvar	_t1 @ sp[(-24)+8]
 12971  016D50  50E1               	movf	fsr1l,w,c
 12972  016D52  0FF0               	addlw	-16
 12973  016D54  6ED9               	movwf	fsr2l,c
 12974  016D56  50E2               	movf	fsr1h,w,c
 12975  016D58  6EDA               	movwf	fsr2h,c
 12976  016D5A  0EFF               	movlw	255
 12977  016D5C  22DA               	addwfc	fsr2h,f,c
 12978  016D5E  0100               	movlb	0	; () banked
 12979  016D60  51B6               	movf	_dst_off& (0+255),w,b
 12980  016D62  26DE               	addwf	postinc2,f,c
 12981  016D64  51B7               	movf	(_dst_off+1)& (0+255),w,b
 12982  016D66  22DE               	addwfc	postinc2,f,c
 12983  016D68  0E00               	movlw	0
 12984  016D6A  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 12985  016D6C  0EFF               	movlw	255
 12986  016D6E  22DE               	addwfc	postinc2,f,c
 12987  016D70  22DE               	addwfc	postinc2,f,c
 12988  016D72  22DE               	addwfc	postinc2,f,c
 12989  016D74  22DE               	addwfc	postinc2,f,c
 12990  016D76  22DE               	addwfc	postinc2,f,c
 12991  016D78  22DE               	addwfc	postinc2,f,c
 12992  016D7A                     l16859:
 12993                           
 12994                           ;stkvar	_t1 @ sp[(-24)+8]
 12995                           ;stkvar	_t0 @ sp[(-24)+16]
 12996  016D7A  50E1               	movf	fsr1l,w,c
 12997  016D7C  0FF8               	addlw	-8
 12998  016D7E  6ED9               	movwf	fsr2l,c
 12999  016D80  50E2               	movf	fsr1h,w,c
 13000  016D82  6EDA               	movwf	fsr2h,c
 13001  016D84  0EFF               	movlw	255
 13002  016D86  22DA               	addwfc	fsr2h,f,c
 13003  016D88  0EF0               	movlw	-16
 13004  016D8A  50E3               	movf	plusw1,w,c
 13005  016D8C  5CDE               	subwf	postinc2,w,c
 13006  016D8E  0EF1               	movlw	-15
 13007  016D90  50E3               	movf	plusw1,w,c
 13008  016D92  58DE               	subwfb	postinc2,w,c
 13009  016D94  0EF2               	movlw	-14
 13010  016D96  50E3               	movf	plusw1,w,c
 13011  016D98  58DE               	subwfb	postinc2,w,c
 13012  016D9A  0EF3               	movlw	-13
 13013  016D9C  50E3               	movf	plusw1,w,c
 13014  016D9E  58DE               	subwfb	postinc2,w,c
 13015  016DA0  0EF4               	movlw	-12
 13016  016DA2  50E3               	movf	plusw1,w,c
 13017  016DA4  58DE               	subwfb	postinc2,w,c
 13018  016DA6  0EF5               	movlw	-11
 13019  016DA8  50E3               	movf	plusw1,w,c
 13020  016DAA  58DE               	subwfb	postinc2,w,c
 13021  016DAC  0EF6               	movlw	-10
 13022  016DAE  50E3               	movf	plusw1,w,c
 13023  016DB0  58DE               	subwfb	postinc2,w,c
 13024  016DB2  50DE               	movf	postinc2,w,c
 13025  016DB4  0A80               	xorlw	128
 13026  016DB6  6E2A               	movwf	btemp^0,c
 13027  016DB8  0EF7               	movlw	-9
 13028  016DBA  50E3               	movf	plusw1,w,c
 13029  016DBC  0A80               	xorlw	128
 13030  016DBE  582A               	subwfb	btemp^0,w,c
 13031  016DC0  B0D8               	btfsc	status,0,c
 13032  016DC2  D04B               	goto	l16869
 13033                           
 13034                           ;stkvar	_t0 @ sp[(-24)+16]
 13035                           ;stkvar	_t @ sp[(-24)+-8]
 13036  016DC4  50E1               	movf	fsr1l,w,c
 13037  016DC6  0FE0               	addlw	-32
 13038  016DC8  6ED9               	movwf	fsr2l,c
 13039  016DCA  50E2               	movf	fsr1h,w,c
 13040  016DCC  6EDA               	movwf	fsr2h,c
 13041  016DCE  0EFF               	movlw	255
 13042  016DD0  22DA               	addwfc	fsr2h,f,c
 13043  016DD2  0EF8               	movlw	-8
 13044  016DD4  50E3               	movf	plusw1,w,c
 13045  016DD6  5CDE               	subwf	postinc2,w,c
 13046  016DD8  0EF9               	movlw	-7
 13047  016DDA  50E3               	movf	plusw1,w,c
 13048  016DDC  58DE               	subwfb	postinc2,w,c
 13049  016DDE  0EFA               	movlw	-6
 13050  016DE0  50E3               	movf	plusw1,w,c
 13051  016DE2  58DE               	subwfb	postinc2,w,c
 13052  016DE4  0EFB               	movlw	-5
 13053  016DE6  50E3               	movf	plusw1,w,c
 13054  016DE8  58DE               	subwfb	postinc2,w,c
 13055  016DEA  0EFC               	movlw	-4
 13056  016DEC  50E3               	movf	plusw1,w,c
 13057  016DEE  58DE               	subwfb	postinc2,w,c
 13058  016DF0  0EFD               	movlw	-3
 13059  016DF2  50E3               	movf	plusw1,w,c
 13060  016DF4  58DE               	subwfb	postinc2,w,c
 13061  016DF6  0EFE               	movlw	-2
 13062  016DF8  50E3               	movf	plusw1,w,c
 13063  016DFA  58DE               	subwfb	postinc2,w,c
 13064  016DFC  50DE               	movf	postinc2,w,c
 13065  016DFE  0A80               	xorlw	128
 13066  016E00  6E2A               	movwf	btemp^0,c
 13067  016E02  0EFF               	movlw	-1
 13068  016E04  50E3               	movf	plusw1,w,c
 13069  016E06  0A80               	xorlw	128
 13070  016E08  582A               	subwfb	btemp^0,w,c
 13071  016E0A  A0D8               	btfss	status,0,c
 13072  016E0C  D070               	goto	u16430
 13073                           
 13074                           ;stkvar	_t1 @ sp[(-24)+8]
 13075                           ;stkvar	_t @ sp[(-24)+-8]
 13076  016E0E  50E1               	movf	fsr1l,w,c
 13077  016E10  0FE0               	addlw	-32
 13078  016E12  6ED9               	movwf	fsr2l,c
 13079  016E14  50E2               	movf	fsr1h,w,c
 13080  016E16  6EDA               	movwf	fsr2h,c
 13081  016E18  0EFF               	movlw	255
 13082  016E1A  22DA               	addwfc	fsr2h,f,c
 13083  016E1C  0EF0               	movlw	-16
 13084  016E1E  50E3               	movf	plusw1,w,c
 13085  016E20  5CDE               	subwf	postinc2,w,c
 13086  016E22  0EF1               	movlw	-15
 13087  016E24  50E3               	movf	plusw1,w,c
 13088  016E26  58DE               	subwfb	postinc2,w,c
 13089  016E28  0EF2               	movlw	-14
 13090  016E2A  50E3               	movf	plusw1,w,c
 13091  016E2C  58DE               	subwfb	postinc2,w,c
 13092  016E2E  0EF3               	movlw	-13
 13093  016E30  50E3               	movf	plusw1,w,c
 13094  016E32  58DE               	subwfb	postinc2,w,c
 13095  016E34  0EF4               	movlw	-12
 13096  016E36  50E3               	movf	plusw1,w,c
 13097  016E38  58DE               	subwfb	postinc2,w,c
 13098  016E3A  0EF5               	movlw	-11
 13099  016E3C  50E3               	movf	plusw1,w,c
 13100  016E3E  58DE               	subwfb	postinc2,w,c
 13101  016E40  0EF6               	movlw	-10
 13102  016E42  50E3               	movf	plusw1,w,c
 13103  016E44  58DE               	subwfb	postinc2,w,c
 13104  016E46  50DE               	movf	postinc2,w,c
 13105  016E48  0A80               	xorlw	128
 13106  016E4A  6E2A               	movwf	btemp^0,c
 13107  016E4C  0EF7               	movlw	-9
 13108  016E4E  50E3               	movf	plusw1,w,c
 13109  016E50  0A80               	xorlw	128
 13110  016E52  582A               	subwfb	btemp^0,w,c
 13111  016E54  A0D8               	btfss	status,0,c
 13112  016E56  D0C1               	goto	l16887
 13113  016E58  D04A               	goto	u16430
 13114  016E5A                     l16869:
 13115                           
 13116                           ;stkvar	_t1 @ sp[(-24)+8]
 13117                           ;stkvar	_t @ sp[(-24)+-8]
 13118  016E5A  50E1               	movf	fsr1l,w,c
 13119  016E5C  0FE0               	addlw	-32
 13120  016E5E  6ED9               	movwf	fsr2l,c
 13121  016E60  50E2               	movf	fsr1h,w,c
 13122  016E62  6EDA               	movwf	fsr2h,c
 13123  016E64  0EFF               	movlw	255
 13124  016E66  22DA               	addwfc	fsr2h,f,c
 13125  016E68  0EF0               	movlw	-16
 13126  016E6A  50E3               	movf	plusw1,w,c
 13127  016E6C  5CDE               	subwf	postinc2,w,c
 13128  016E6E  0EF1               	movlw	-15
 13129  016E70  50E3               	movf	plusw1,w,c
 13130  016E72  58DE               	subwfb	postinc2,w,c
 13131  016E74  0EF2               	movlw	-14
 13132  016E76  50E3               	movf	plusw1,w,c
 13133  016E78  58DE               	subwfb	postinc2,w,c
 13134  016E7A  0EF3               	movlw	-13
 13135  016E7C  50E3               	movf	plusw1,w,c
 13136  016E7E  58DE               	subwfb	postinc2,w,c
 13137  016E80  0EF4               	movlw	-12
 13138  016E82  50E3               	movf	plusw1,w,c
 13139  016E84  58DE               	subwfb	postinc2,w,c
 13140  016E86  0EF5               	movlw	-11
 13141  016E88  50E3               	movf	plusw1,w,c
 13142  016E8A  58DE               	subwfb	postinc2,w,c
 13143  016E8C  0EF6               	movlw	-10
 13144  016E8E  50E3               	movf	plusw1,w,c
 13145  016E90  58DE               	subwfb	postinc2,w,c
 13146  016E92  50DE               	movf	postinc2,w,c
 13147  016E94  0A80               	xorlw	128
 13148  016E96  6E2A               	movwf	btemp^0,c
 13149  016E98  0EF7               	movlw	-9
 13150  016E9A  50E3               	movf	plusw1,w,c
 13151  016E9C  0A80               	xorlw	128
 13152  016E9E  582A               	subwfb	btemp^0,w,c
 13153  016EA0  A0D8               	btfss	status,0,c
 13154  016EA2  D09B               	goto	l16887
 13155                           
 13156                           ;stkvar	_t0 @ sp[(-24)+16]
 13157                           ;stkvar	_t @ sp[(-24)+-8]
 13158  016EA4  50E1               	movf	fsr1l,w,c
 13159  016EA6  0FE0               	addlw	-32
 13160  016EA8  6ED9               	movwf	fsr2l,c
 13161  016EAA  50E2               	movf	fsr1h,w,c
 13162  016EAC  6EDA               	movwf	fsr2h,c
 13163  016EAE  0EFF               	movlw	255
 13164  016EB0  22DA               	addwfc	fsr2h,f,c
 13165  016EB2  0EF8               	movlw	-8
 13166  016EB4  50E3               	movf	plusw1,w,c
 13167  016EB6  5CDE               	subwf	postinc2,w,c
 13168  016EB8  0EF9               	movlw	-7
 13169  016EBA  50E3               	movf	plusw1,w,c
 13170  016EBC  58DE               	subwfb	postinc2,w,c
 13171  016EBE  0EFA               	movlw	-6
 13172  016EC0  50E3               	movf	plusw1,w,c
 13173  016EC2  58DE               	subwfb	postinc2,w,c
 13174  016EC4  0EFB               	movlw	-5
 13175  016EC6  50E3               	movf	plusw1,w,c
 13176  016EC8  58DE               	subwfb	postinc2,w,c
 13177  016ECA  0EFC               	movlw	-4
 13178  016ECC  50E3               	movf	plusw1,w,c
 13179  016ECE  58DE               	subwfb	postinc2,w,c
 13180  016ED0  0EFD               	movlw	-3
 13181  016ED2  50E3               	movf	plusw1,w,c
 13182  016ED4  58DE               	subwfb	postinc2,w,c
 13183  016ED6  0EFE               	movlw	-2
 13184  016ED8  50E3               	movf	plusw1,w,c
 13185  016EDA  58DE               	subwfb	postinc2,w,c
 13186  016EDC  50DE               	movf	postinc2,w,c
 13187  016EDE  0A80               	xorlw	128
 13188  016EE0  6E2A               	movwf	btemp^0,c
 13189  016EE2  0EFF               	movlw	-1
 13190  016EE4  50E3               	movf	plusw1,w,c
 13191  016EE6  0A80               	xorlw	128
 13192  016EE8  582A               	subwfb	btemp^0,w,c
 13193  016EEA  B0D8               	btfsc	status,0,c
 13194  016EEC  D076               	goto	l16887
 13195  016EEE                     u16430:
 13196                           
 13197                           ;stkvar	_isdst @ sp[(-24)+-12]
 13198  016EEE  0EDC               	movlw	-36
 13199  016EF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13200  016EF6  0EDD               	movlw	-35
 13201  016EF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13202  016EFE  0E00               	movlw	0
 13203  016F00  6EDE               	movwf	postinc2,c
 13204  016F02  0E00               	movlw	0
 13205  016F04  6EDD               	movwf	postdec2,c
 13206  016F06  0060  F1C0  F032   	movff	___timezone,btemp+8
 13207  016F0C  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13208  016F12  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13209  016F18  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13210  016F1E  1E32               	comf	(btemp+8)^0,f,c
 13211  016F20  1E33               	comf	(btemp+9)^0,f,c
 13212  016F22  1E34               	comf	(btemp+10)^0,f,c
 13213  016F24  1E35               	comf	(btemp+11)^0,f,c
 13214  016F26  2A32               	incf	(btemp+8)^0,f,c
 13215  016F28  0E00               	movlw	0
 13216  016F2A  2233               	addwfc	(btemp+9)^0,f,c
 13217  016F2C  2234               	addwfc	(btemp+10)^0,f,c
 13218  016F2E  2235               	addwfc	(btemp+11)^0,f,c
 13219                           
 13220                           ;stkvar	_offset @ sp[(-24)+-14]
 13221  016F30  0EDA               	movlw	-38
 13222  016F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 13223  016F38  0EDB               	movlw	-37
 13224  016F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13225  016F40  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13226  016F46  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13227  016F4C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13228  016F52  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13229                           
 13230                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13231  016F58  0ED8               	movlw	-40
 13232  016F5A  006F FF8C  F02A    	movff	plusw1,btemp
 13233  016F60  0ED9               	movlw	-39
 13234  016F62  50E3               	movf	plusw1,w,c
 13235  016F64  102A               	iorwf	btemp^0,w,c
 13236  016F66  B4D8               	btfsc	status,2,c
 13237  016F68  D029               	goto	l16883
 13238  016F6A  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13239  016F70  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13240  016F76  1E34               	comf	(btemp+10)^0,f,c
 13241  016F78  1E35               	comf	(btemp+11)^0,f,c
 13242  016F7A  4A34               	infsnz	(btemp+10)^0,f,c
 13243  016F7C  2A35               	incf	(btemp+11)^0,f,c
 13244  016F7E  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13245  016F84  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13246  016F8A  0E00               	movlw	0
 13247  016F8C  BE2F               	btfsc	(btemp+5)^0,7,c
 13248  016F8E  0EFF               	movlw	255
 13249  016F90  6E30               	movwf	(btemp+6)^0,c
 13250  016F92  6E31               	movwf	(btemp+7)^0,c
 13251                           
 13252                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13253  016F94  0ED8               	movlw	-40
 13254  016F96  006F FF8F FFD9     	movff	plusw1,fsr2l
 13255  016F9C  0ED9               	movlw	-39
 13256  016F9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13257  016FA4  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13258  016FAA  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13259  016FB0  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13260  016FB6  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13261  016FBC                     l16883:
 13262                           
 13263                           ;stkvar	_zonename @ sp[(-24)+-18]
 13264  016FBC  0ED6               	movlw	-42
 13265  016FBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13266  016FC4  0ED7               	movlw	-41
 13267  016FC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13268  016FCC  0060  F1B3  FFDE   	movff	___tzname,postinc2
 13269  016FD2  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 13270  016FD8  D075               	goto	l4038
 13271  016FDA                     l16887:
 13272                           
 13273                           ;stkvar	_isdst @ sp[(-24)+-12]
 13274  016FDA  0EDC               	movlw	-36
 13275  016FDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13276  016FE2  0EDD               	movlw	-35
 13277  016FE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13278  016FEA  0E01               	movlw	1
 13279  016FEC  6EDE               	movwf	postinc2,c
 13280  016FEE  0E00               	movlw	0
 13281  016FF0  6EDD               	movwf	postdec2,c
 13282  016FF2  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13283  016FF8  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13284  016FFE  1E34               	comf	(btemp+10)^0,f,c
 13285  017000  1E35               	comf	(btemp+11)^0,f,c
 13286  017002  4A34               	infsnz	(btemp+10)^0,f,c
 13287  017004  2A35               	incf	(btemp+11)^0,f,c
 13288  017006  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13289  01700C  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13290  017012  0E00               	movlw	0
 13291  017014  BE2F               	btfsc	(btemp+5)^0,7,c
 13292  017016  0EFF               	movlw	255
 13293  017018  6E30               	movwf	(btemp+6)^0,c
 13294  01701A  6E31               	movwf	(btemp+7)^0,c
 13295                           
 13296                           ;stkvar	_offset @ sp[(-24)+-14]
 13297  01701C  0EDA               	movlw	-38
 13298  01701E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13299  017024  0EDB               	movlw	-37
 13300  017026  006F FF8F FFDA     	movff	plusw1,fsr2h
 13301  01702C  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13302  017032  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13303  017038  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13304  01703E  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13305                           
 13306                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13307  017044  0ED8               	movlw	-40
 13308  017046  006F FF8C  F02A    	movff	plusw1,btemp
 13309  01704C  0ED9               	movlw	-39
 13310  01704E  50E3               	movf	plusw1,w,c
 13311  017050  102A               	iorwf	btemp^0,w,c
 13312  017052  B4D8               	btfsc	status,2,c
 13313  017054  D029               	goto	l16895
 13314  017056  0060  F1C0  F032   	movff	___timezone,btemp+8
 13315  01705C  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13316  017062  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13317  017068  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13318  01706E  1E32               	comf	(btemp+8)^0,f,c
 13319  017070  1E33               	comf	(btemp+9)^0,f,c
 13320  017072  1E34               	comf	(btemp+10)^0,f,c
 13321  017074  1E35               	comf	(btemp+11)^0,f,c
 13322  017076  2A32               	incf	(btemp+8)^0,f,c
 13323  017078  0E00               	movlw	0
 13324  01707A  2233               	addwfc	(btemp+9)^0,f,c
 13325  01707C  2234               	addwfc	(btemp+10)^0,f,c
 13326  01707E  2235               	addwfc	(btemp+11)^0,f,c
 13327                           
 13328                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13329  017080  0ED8               	movlw	-40
 13330  017082  006F FF8F FFD9     	movff	plusw1,fsr2l
 13331  017088  0ED9               	movlw	-39
 13332  01708A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13333  017090  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13334  017096  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13335  01709C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13336  0170A2  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13337  0170A8                     l16895:
 13338                           
 13339                           ;stkvar	_zonename @ sp[(-24)+-18]
 13340  0170A8  0ED6               	movlw	-42
 13341  0170AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13342  0170B0  0ED7               	movlw	-41
 13343  0170B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13344  0170B8  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 13345  0170BE  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 13346  0170C4                     l4038:
 13347                           
 13348                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 13349  0170C4  0ED6               	movlw	214
 13350  0170C6  26E1               	addwf	fsr1l,f,c
 13351  0170C8  0EFF               	movlw	255
 13352  0170CA  22E2               	addwfc	fsr1h,f,c
 13353  0170CC  0012               	return		;funcret
 13354  0170CE                     __end_of___secs_to_zone:
 13355                           	opt callstack 0
 13356                           
 13357 ;; *************** function _scan_trans *****************
 13358 ;; Defined at:
 13359 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13360 ;; Parameters:    Size  Location     Type
 13361 ;;  t               8  [STACK] long long 
 13362 ;;  local           2  [STACK] int 
 13363 ;;  alt             2  [STACK] PTR unsigned int 
 13364 ;;		 -> alt(2), 
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;  x               8    0        unsigned long long 
 13367 ;;  a               2    0        unsigned int 
 13368 ;;  scale           2    0        int 
 13369 ;;  n               2    0        unsigned int 
 13370 ;;  m               2    0        unsigned int 
 13371 ;;  off             2    0        int 
 13372 ;; Return value:  Size  Location     Type
 13373 ;;                  2  [STACK] unsigned int 
 13374 ;; Registers used:
 13375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13376 ;; Tracked objects:
 13377 ;;		On entry : 0/0
 13378 ;;		On exit  : 0/0
 13379 ;;		Unchanged: 0/0
 13380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13385 ;;Total ram usage:        0 bytes
 13386 ;; Hardware stack levels used:    1
 13387 ;; Hardware stack levels required when called:   16
 13388 ;; This function calls:
 13389 ;;		_zi_read32
 13390 ;; This function is called by:
 13391 ;;		___secs_to_zone
 13392 ;; This function uses a reentrant model
 13393 ;;
 13394                           
 13395                           	psect	text39
 13396  002592                     __ptext39:
 13397                           	opt callstack 0
 13398  002592                     _scan_trans:
 13399                           	opt callstack 11
 13400                           
 13401                           ;stkvar	_alt @ sp[(0)+-12]
 13402                           
 13403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13404                           ;incstack = 0
 13405  002592  0EF4               	movlw	-12
 13406  002594  006F FF8C  F02A    	movff	plusw1,btemp
 13407  00259A  0EF5               	movlw	-11
 13408  00259C  50E3               	movf	plusw1,w,c
 13409  00259E  102A               	iorwf	btemp^0,w,c
 13410  0025A0  B4D8               	btfsc	status,2,c
 13411  0025A2  D00C               	goto	l16623
 13412                           
 13413                           ;stkvar	_alt @ sp[(0)+-12]
 13414  0025A4  0EF4               	movlw	-12
 13415  0025A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13416  0025AC  0EF5               	movlw	-11
 13417  0025AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13418  0025B4  0E00               	movlw	0
 13419  0025B6  6EDE               	movwf	postinc2,c
 13420  0025B8  0E00               	movlw	0
 13421  0025BA  6EDD               	movwf	postdec2,c
 13422  0025BC                     l16623:
 13423  0025BC  0E00               	movlw	0
 13424  0025BE  6E2A               	movwf	btemp^0,c
 13425  0025C0  0E00               	movlw	0
 13426  0025C2  6E2B               	movwf	(btemp+1)^0,c
 13427                           
 13428                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13429  0025C4  0EF4               	movlw	244
 13430  0025C6  26E1               	addwf	fsr1l,f,c
 13431  0025C8  0EFF               	movlw	255
 13432  0025CA  22E2               	addwfc	fsr1h,f,c
 13433  0025CC  0012               	return		;funcret
 13434  0025CE                     __end_of_scan_trans:
 13435                           	opt callstack 0
 13436                           
 13437 ;; *************** function _zi_read32 *****************
 13438 ;; Defined at:
 13439 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;  z               2  [STACK] PTR const unsigned char 
 13442 ;;		 -> NULL(0), 
 13443 ;; Auto vars:     Size  Location     Type
 13444 ;;		None
 13445 ;; Return value:  Size  Location     Type
 13446 ;;                  4  [STACK] unsigned long 
 13447 ;; Registers used:
 13448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13449 ;; Tracked objects:
 13450 ;;		On entry : 0/0
 13451 ;;		On exit  : 0/0
 13452 ;;		Unchanged: 0/0
 13453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13458 ;;Total ram usage:        0 bytes
 13459 ;; Hardware stack levels used:    1
 13460 ;; Hardware stack levels required when called:   15
 13461 ;; This function calls:
 13462 ;;		Nothing
 13463 ;; This function is called by:
 13464 ;;		_scan_trans
 13465 ;;		___secs_to_zone
 13466 ;; This function uses a reentrant model
 13467 ;;
 13468                           
 13469                           	psect	text40
 13470  0002B8                     __ptext40:
 13471                           	opt callstack 0
 13472  0002B8                     _zi_read32:
 13473                           	opt callstack 12
 13474                           
 13475                           ;stkvar	_z @ sp[(0)+-2]
 13476                           
 13477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13478                           ;incstack = 0
 13479  0002B8  0EFE               	movlw	-2
 13480  0002BA  006F FF8C  F034    	movff	plusw1,btemp+10
 13481  0002C0  0EFF               	movlw	-1
 13482  0002C2  006F FF8C  F035    	movff	plusw1,btemp+11
 13483  0002C8  0E02               	movlw	2
 13484  0002CA  2434               	addwf	(btemp+10)^0,w,c
 13485  0002CC  6ED9               	movwf	fsr2l,c
 13486  0002CE  0E00               	movlw	0
 13487  0002D0  2035               	addwfc	(btemp+11)^0,w,c
 13488  0002D2  6EDA               	movwf	fsr2h,c
 13489  0002D4  50DF               	movf	indf2,w,c
 13490  0002D6  6E35               	movwf	(btemp+11)^0,c
 13491  0002D8  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13492  0002DE  6A2F               	clrf	(btemp+5)^0,c
 13493  0002E0  6A30               	clrf	(btemp+6)^0,c
 13494  0002E2  6A31               	clrf	(btemp+7)^0,c
 13495  0002E4  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13496  0002EA  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13497  0002F0  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13498  0002F6  6A2E               	clrf	(btemp+4)^0,c
 13499                           
 13500                           ;stkvar	_z @ sp[(0)+-2]
 13501  0002F8  0EFE               	movlw	-2
 13502  0002FA  006F FF8C  F034    	movff	plusw1,btemp+10
 13503  000300  0EFF               	movlw	-1
 13504  000302  006F FF8C  F035    	movff	plusw1,btemp+11
 13505  000308  0E01               	movlw	1
 13506  00030A  2434               	addwf	(btemp+10)^0,w,c
 13507  00030C  6ED9               	movwf	fsr2l,c
 13508  00030E  0E00               	movlw	0
 13509  000310  2035               	addwfc	(btemp+11)^0,w,c
 13510  000312  6EDA               	movwf	fsr2h,c
 13511  000314  50DF               	movf	indf2,w,c
 13512  000316  6E35               	movwf	(btemp+11)^0,c
 13513  000318  0060  F0D4  F02A   	movff	btemp+11,btemp
 13514  00031E  6A2B               	clrf	(btemp+1)^0,c
 13515  000320  6A2C               	clrf	(btemp+2)^0,c
 13516  000322  6A2D               	clrf	(btemp+3)^0,c
 13517  000324  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13518  00032A  0060  F0A8  F02C   	movff	btemp,btemp+2
 13519  000330  6A2B               	clrf	(btemp+1)^0,c
 13520  000332  6A2A               	clrf	btemp^0,c
 13521                           
 13522                           ;stkvar	_z @ sp[(0)+-2]
 13523  000334  0EFE               	movlw	-2
 13524  000336  006F FF8F FFD9     	movff	plusw1,fsr2l
 13525  00033C  0EFF               	movlw	-1
 13526  00033E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13527  000344  50DF               	movf	indf2,w,c
 13528  000346  6E32               	movwf	(btemp+8)^0,c
 13529  000348  6A33               	clrf	(btemp+9)^0,c
 13530  00034A  6A34               	clrf	(btemp+10)^0,c
 13531  00034C  6A35               	clrf	(btemp+11)^0,c
 13532  00034E  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13533  000354  6A34               	clrf	(btemp+10)^0,c
 13534  000356  6A33               	clrf	(btemp+9)^0,c
 13535  000358  6A32               	clrf	(btemp+8)^0,c
 13536  00035A  502A               	movf	btemp^0,w,c
 13537  00035C  1232               	iorwf	(btemp+8)^0,f,c
 13538  00035E  502B               	movf	(btemp+1)^0,w,c
 13539  000360  1233               	iorwf	(btemp+9)^0,f,c
 13540  000362  502C               	movf	(btemp+2)^0,w,c
 13541  000364  1234               	iorwf	(btemp+10)^0,f,c
 13542  000366  502D               	movf	(btemp+3)^0,w,c
 13543  000368  1235               	iorwf	(btemp+11)^0,f,c
 13544  00036A  502E               	movf	(btemp+4)^0,w,c
 13545  00036C  1232               	iorwf	(btemp+8)^0,f,c
 13546  00036E  502F               	movf	(btemp+5)^0,w,c
 13547  000370  1233               	iorwf	(btemp+9)^0,f,c
 13548  000372  5030               	movf	(btemp+6)^0,w,c
 13549  000374  1234               	iorwf	(btemp+10)^0,f,c
 13550  000376  5031               	movf	(btemp+7)^0,w,c
 13551  000378  1235               	iorwf	(btemp+11)^0,f,c
 13552                           
 13553                           ;stkvar	_z @ sp[(0)+-2]
 13554  00037A  0EFE               	movlw	-2
 13555  00037C  006F FF8C  F030    	movff	plusw1,btemp+6
 13556  000382  0EFF               	movlw	-1
 13557  000384  006F FF8C  F031    	movff	plusw1,btemp+7
 13558  00038A  0E03               	movlw	3
 13559  00038C  2430               	addwf	(btemp+6)^0,w,c
 13560  00038E  6ED9               	movwf	fsr2l,c
 13561  000390  0E00               	movlw	0
 13562  000392  2031               	addwfc	(btemp+7)^0,w,c
 13563  000394  6EDA               	movwf	fsr2h,c
 13564  000396  50DF               	movf	indf2,w,c
 13565  000398  1032               	iorwf	(btemp+8)^0,w,c
 13566  00039A  6E2A               	movwf	btemp^0,c
 13567  00039C  5033               	movf	(btemp+9)^0,w,c
 13568  00039E  6E2B               	movwf	(btemp+1)^0,c
 13569  0003A0  5034               	movf	(btemp+10)^0,w,c
 13570  0003A2  6E2C               	movwf	(btemp+2)^0,c
 13571  0003A4  5035               	movf	(btemp+11)^0,w,c
 13572  0003A6  6E2D               	movwf	(btemp+3)^0,c
 13573                           
 13574                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13575  0003A8  52E5               	movf	postdec1,f,c
 13576  0003AA  52E5               	movf	postdec1,f,c
 13577  0003AC  0012               	return		;funcret
 13578  0003AE                     __end_of_zi_read32:
 13579                           	opt callstack 0
 13580                           
 13581 ;; *************** function _rule_to_secs *****************
 13582 ;; Defined at:
 13583 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;  rule            2  [STACK] PTR const int 
 13586 ;;		 -> r1(10), r0(10), 
 13587 ;;  year            2  [STACK] int 
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;  days            2  [STACK] int 
 13590 ;;  wday            2  [STACK] int 
 13591 ;;  t               8  [STACK] long long 
 13592 ;;  is_leap         2  [STACK] int 
 13593 ;;  n               2  [STACK] int 
 13594 ;;  x               2  [STACK] int 
 13595 ;;  m               2  [STACK] int 
 13596 ;;  d               2  [STACK] int 
 13597 ;; Return value:  Size  Location     Type
 13598 ;;                  8  [STACK] long long 
 13599 ;; Registers used:
 13600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13601 ;; Tracked objects:
 13602 ;;		On entry : 0/0
 13603 ;;		On exit  : 0/0
 13604 ;;		Unchanged: 0/0
 13605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13610 ;;Total ram usage:        0 bytes
 13611 ;; Hardware stack levels used:    1
 13612 ;; Hardware stack levels required when called:   17
 13613 ;; This function calls:
 13614 ;;		___aldiv
 13615 ;;		___aomod
 13616 ;;		___lmul
 13617 ;;		___month_to_secs
 13618 ;;		___year_to_secs
 13619 ;;		_days_in_month
 13620 ;; This function is called by:
 13621 ;;		___secs_to_zone
 13622 ;; This function uses a reentrant model
 13623 ;;
 13624                           
 13625                           	psect	text41
 13626  0180B4                     __ptext41:
 13627                           	opt callstack 0
 13628  0180B4                     _rule_to_secs:
 13629                           	opt callstack 0
 13630                           
 13631                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13632  0180B4  0E1A               	movlw	26
 13633  0180B6  26E1               	addwf	fsr1l,f,c
 13634  0180B8  0E00               	movlw	0
 13635  0180BA  22E2               	addwfc	fsr1h,f,c
 13636                           
 13637                           ;stkvar	_is_leap @ sp[(-22)+12]
 13638                           
 13639                           ;incstack = 0
 13640  0180BC  0EF6               	movlw	246
 13641  0180BE  24E1               	addwf	fsr1l,w,c
 13642  0180C0  6E2A               	movwf	btemp^0,c
 13643  0180C2  0EFF               	movlw	255
 13644  0180C4  20E2               	addwfc	fsr1h,w,c
 13645  0180C6  6E2B               	movwf	(btemp+1)^0,c
 13646  0180C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 13647  0180CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13648                           
 13649                           ;stkvar	_year @ sp[(-24)+-8]
 13650  0180D4  0EE0               	movlw	-32
 13651  0180D6  006F FF8C  F03A    	movff	plusw1,btemp+16
 13652  0180DC  0EE1               	movlw	-31
 13653  0180DE  006F FF8C  F03B    	movff	plusw1,btemp+17
 13654  0180E4  6A3C               	clrf	(btemp+18)^0,c
 13655  0180E6  BE3B               	btfsc	(btemp+17)^0,7,c
 13656  0180E8  683C               	setf	(btemp+18)^0,c
 13657  0180EA  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13658  0180F0  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13659  0180F6  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13660  0180FC  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13661  018102  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13662  018108  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13663  01810E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13664  018114  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13665  01811A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13666  018120  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13667  018126  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13668  01812C  0060  F103  FFE6   	movff	btemp+22,postinc1
 13669  018132  0060  F107  FFE6   	movff	btemp+23,postinc1
 13670  018138  EC5D  F0AF         	call	___year_to_secs	;wreg free
 13671  01813C  52E5               	movf	postdec1,f,c
 13672  01813E  006F FF9C  F041    	movff	indf1,btemp+23
 13673  018144  52E5               	movf	postdec1,f,c
 13674  018146  006F FF9C  F040    	movff	indf1,btemp+22
 13675  01814C  52E5               	movf	postdec1,f,c
 13676  01814E  006F FF9C  F03F    	movff	indf1,btemp+21
 13677  018154  52E5               	movf	postdec1,f,c
 13678  018156  006F FF9C  F03E    	movff	indf1,btemp+20
 13679  01815C  52E5               	movf	postdec1,f,c
 13680  01815E  006F FF9C  F03D    	movff	indf1,btemp+19
 13681  018164  52E5               	movf	postdec1,f,c
 13682  018166  006F FF9C  F03C    	movff	indf1,btemp+18
 13683  01816C  52E5               	movf	postdec1,f,c
 13684  01816E  006F FF9C  F03B    	movff	indf1,btemp+17
 13685  018174  52E5               	movf	postdec1,f,c
 13686  018176  006F FF9C  F03A    	movff	indf1,btemp+16
 13687  01817C  52E5               	movf	postdec1,f,c
 13688  01817E  52E5               	movf	postdec1,f,c
 13689                           
 13690                           ;stkvar	_t @ sp[(-22)+4]
 13691  018180  0EEE               	movlw	-18
 13692  018182  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13693  018188  0EEF               	movlw	-17
 13694  01818A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13695  018190  0EF0               	movlw	-16
 13696  018192  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13697  018198  0EF1               	movlw	-15
 13698  01819A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13699  0181A0  0EF2               	movlw	-14
 13700  0181A2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13701  0181A8  0EF3               	movlw	-13
 13702  0181AA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13703  0181B0  0EF4               	movlw	-12
 13704  0181B2  0060  F103  FFE3   	movff	btemp+22,plusw1
 13705  0181B8  0EF5               	movlw	-11
 13706  0181BA  0060  F107  FFE3   	movff	btemp+23,plusw1
 13707                           
 13708                           ;stkvar	_rule @ sp[(-22)+-6]
 13709  0181C0  0EE4               	movlw	-28
 13710  0181C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13711  0181C8  0EE5               	movlw	-27
 13712  0181CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13713  0181D0  0E4D               	movlw	77
 13714  0181D2  18DE               	xorwf	postinc2,w,c
 13715  0181D4  10DE               	iorwf	postinc2,w,c
 13716  0181D6  B4D8               	btfsc	status,2,c
 13717  0181D8  D074               	goto	l16739
 13718                           
 13719                           ;stkvar	_rule @ sp[(-22)+-6]
 13720  0181DA  0EE4               	movlw	-28
 13721  0181DC  006F FF8C  F034    	movff	plusw1,btemp+10
 13722  0181E2  0EE5               	movlw	-27
 13723  0181E4  006F FF8C  F035    	movff	plusw1,btemp+11
 13724  0181EA  0E02               	movlw	2
 13725  0181EC  2434               	addwf	(btemp+10)^0,w,c
 13726  0181EE  6ED9               	movwf	fsr2l,c
 13727  0181F0  0E00               	movlw	0
 13728  0181F2  2035               	addwfc	(btemp+11)^0,w,c
 13729  0181F4  6EDA               	movwf	fsr2h,c
 13730  0181F6  006F FF78  F034    	movff	postinc2,btemp+10
 13731  0181FC  006F FF74  F035    	movff	postdec2,btemp+11
 13732                           
 13733                           ;stkvar	_x @ sp[(-22)+16]
 13734  018202  0EFA               	movlw	-6
 13735  018204  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13736  01820A  0EFB               	movlw	-5
 13737  01820C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13738                           
 13739                           ;stkvar	_rule @ sp[(-22)+-6]
 13740  018212  0EE4               	movlw	-28
 13741  018214  006F FF8F FFD9     	movff	plusw1,fsr2l
 13742  01821A  0EE5               	movlw	-27
 13743  01821C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13744  018222  0E4A               	movlw	74
 13745  018224  18DE               	xorwf	postinc2,w,c
 13746  018226  10DE               	iorwf	postinc2,w,c
 13747  018228  A4D8               	btfss	status,2,c
 13748  01822A  D021               	goto	l16737
 13749                           
 13750                           ;stkvar	_x @ sp[(-22)+16]
 13751  01822C  0EFB               	movlw	-5
 13752  01822E  BEE3               	btfsc	plusw1,7,c
 13753  018230  D014               	goto	u16260
 13754  018232  0EFB               	movlw	-5
 13755  018234  50E3               	movf	plusw1,w,c
 13756  018236  E108               	bnz	u16250
 13757  018238  0EFA               	movlw	-6
 13758  01823A  006F FF8C  F02A    	movff	plusw1,btemp
 13759  018240  0E3C               	movlw	60
 13760  018242  5E2A               	subwf	btemp^0,f,c
 13761  018244  A0D8               	btfss	status,0,c
 13762  018246  D009               	goto	u16260
 13763  018248                     u16250:
 13764                           
 13765                           ;stkvar	_is_leap @ sp[(-22)+12]
 13766  018248  0EF6               	movlw	-10
 13767  01824A  006F FF8C  F02A    	movff	plusw1,btemp
 13768  018250  0EF7               	movlw	-9
 13769  018252  50E3               	movf	plusw1,w,c
 13770  018254  102A               	iorwf	btemp^0,w,c
 13771  018256  A4D8               	btfss	status,2,c
 13772  018258  D00A               	goto	l16737
 13773  01825A                     u16260:
 13774                           
 13775                           ;stkvar	_x @ sp[(-22)+16]
 13776  01825A  50E1               	movf	fsr1l,w,c
 13777  01825C  0FFA               	addlw	-6
 13778  01825E  6ED9               	movwf	fsr2l,c
 13779  018260  50E2               	movf	fsr1h,w,c
 13780  018262  6EDA               	movwf	fsr2h,c
 13781  018264  0EFF               	movlw	255
 13782  018266  22DA               	addwfc	fsr2h,f,c
 13783  018268  06DE               	decf	postinc2,f,c
 13784  01826A  0E00               	movlw	0
 13785  01826C  5ADD               	subwfb	postdec2,f,c
 13786  01826E                     l16737:
 13787  01826E  0E80               	movlw	128
 13788  018270  6EE6               	movwf	postinc1,c
 13789  018272  0E51               	movlw	81
 13790  018274  6EE6               	movwf	postinc1,c
 13791  018276  0E01               	movlw	1
 13792  018278  6EE6               	movwf	postinc1,c
 13793  01827A  0E00               	movlw	0
 13794  01827C  6EE6               	movwf	postinc1,c
 13795                           
 13796                           ;stkvar	_x @ sp[(-26)+16]
 13797  01827E  0EF6               	movlw	-10
 13798  018280  006F FF8C  F034    	movff	plusw1,btemp+10
 13799  018286  0EF7               	movlw	-9
 13800  018288  006F FF8C  F035    	movff	plusw1,btemp+11
 13801  01828E  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13802  018294  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13803  01829A  0E00               	movlw	0
 13804  01829C  BE2F               	btfsc	(btemp+5)^0,7,c
 13805  01829E  0EFF               	movlw	255
 13806  0182A0  6E30               	movwf	(btemp+6)^0,c
 13807  0182A2  6E31               	movwf	(btemp+7)^0,c
 13808  0182A4  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13809  0182AA  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13810  0182B0  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13811  0182B6  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13812  0182BC  ECB6  F003         	call	___lmul	;wreg free
 13813  0182C0  D1EC               	goto	L10
 13814  0182C2                     l16739:
 13815                           
 13816                           ;stkvar	_rule @ sp[(-22)+-6]
 13817  0182C2  0EE4               	movlw	-28
 13818  0182C4  006F FF8C  F034    	movff	plusw1,btemp+10
 13819  0182CA  0EE5               	movlw	-27
 13820  0182CC  006F FF8C  F035    	movff	plusw1,btemp+11
 13821  0182D2  0E02               	movlw	2
 13822  0182D4  2434               	addwf	(btemp+10)^0,w,c
 13823  0182D6  6ED9               	movwf	fsr2l,c
 13824  0182D8  0E00               	movlw	0
 13825  0182DA  2035               	addwfc	(btemp+11)^0,w,c
 13826  0182DC  6EDA               	movwf	fsr2h,c
 13827  0182DE  006F FF78  F034    	movff	postinc2,btemp+10
 13828  0182E4  006F FF74  F035    	movff	postdec2,btemp+11
 13829                           
 13830                           ;stkvar	_m @ sp[(-22)+18]
 13831  0182EA  0EFC               	movlw	-4
 13832  0182EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13833  0182F2  0EFD               	movlw	-3
 13834  0182F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13835                           
 13836                           ;stkvar	_rule @ sp[(-22)+-6]
 13837  0182FA  0EE4               	movlw	-28
 13838  0182FC  006F FF8C  F034    	movff	plusw1,btemp+10
 13839  018302  0EE5               	movlw	-27
 13840  018304  006F FF8C  F035    	movff	plusw1,btemp+11
 13841  01830A  0E04               	movlw	4
 13842  01830C  2434               	addwf	(btemp+10)^0,w,c
 13843  01830E  6ED9               	movwf	fsr2l,c
 13844  018310  0E00               	movlw	0
 13845  018312  2035               	addwfc	(btemp+11)^0,w,c
 13846  018314  6EDA               	movwf	fsr2h,c
 13847  018316  006F FF78  F034    	movff	postinc2,btemp+10
 13848  01831C  006F FF74  F035    	movff	postdec2,btemp+11
 13849                           
 13850                           ;stkvar	_n @ sp[(-22)+14]
 13851  018322  0EF8               	movlw	-8
 13852  018324  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13853  01832A  0EF9               	movlw	-7
 13854  01832C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13855                           
 13856                           ;stkvar	_rule @ sp[(-22)+-6]
 13857  018332  0EE4               	movlw	-28
 13858  018334  006F FF8C  F034    	movff	plusw1,btemp+10
 13859  01833A  0EE5               	movlw	-27
 13860  01833C  006F FF8C  F035    	movff	plusw1,btemp+11
 13861  018342  0E06               	movlw	6
 13862  018344  2434               	addwf	(btemp+10)^0,w,c
 13863  018346  6ED9               	movwf	fsr2l,c
 13864  018348  0E00               	movlw	0
 13865  01834A  2035               	addwfc	(btemp+11)^0,w,c
 13866  01834C  6EDA               	movwf	fsr2h,c
 13867  01834E  006F FF78  F034    	movff	postinc2,btemp+10
 13868  018354  006F FF74  F035    	movff	postdec2,btemp+11
 13869                           
 13870                           ;stkvar	_d @ sp[(-22)+20]
 13871  01835A  0EFE               	movlw	-2
 13872  01835C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13873  018362  0EFF               	movlw	-1
 13874  018364  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13875                           
 13876                           ;stkvar	_is_leap @ sp[(-22)+12]
 13877  01836A  0EF6               	movlw	-10
 13878  01836C  006F FF8F FFE6     	movff	plusw1,postinc1
 13879  018372  006F FF8F FFE6     	movff	plusw1,postinc1
 13880                           
 13881                           ;stkvar	_m @ sp[(-24)+18]
 13882  018378  0EFA               	movlw	-6
 13883  01837A  50E3               	movf	plusw1,w,c
 13884  01837C  0FFF               	addlw	255
 13885  01837E  6E34               	movwf	(btemp+10)^0,c
 13886  018380  0EFB               	movlw	-5
 13887  018382  006F FF8C  F035    	movff	plusw1,btemp+11
 13888  018388  0EFF               	movlw	255
 13889  01838A  2235               	addwfc	(btemp+11)^0,f,c
 13890  01838C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13891  018392  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13892  018398  ECCB  F002         	call	___month_to_secs	;wreg free
 13893  01839C  0060  F0A8  F03A   	movff	btemp,btemp+16
 13894  0183A2  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13895  0183A8  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13896  0183AE  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13897  0183B4  6A3E               	clrf	(btemp+20)^0,c
 13898  0183B6  BE3D               	btfsc	(btemp+19)^0,7,c
 13899  0183B8  683E               	setf	(btemp+20)^0,c
 13900  0183BA  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13901  0183C0  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13902  0183C6  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13903                           
 13904                           ;stkvar	_t @ sp[(-22)+4]
 13905  0183CC  50E1               	movf	fsr1l,w,c
 13906  0183CE  0FEE               	addlw	-18
 13907  0183D0  6ED9               	movwf	fsr2l,c
 13908  0183D2  50E2               	movf	fsr1h,w,c
 13909  0183D4  6EDA               	movwf	fsr2h,c
 13910  0183D6  0EFF               	movlw	255
 13911  0183D8  22DA               	addwfc	fsr2h,f,c
 13912  0183DA  503A               	movf	(btemp+16)^0,w,c
 13913  0183DC  26DE               	addwf	postinc2,f,c
 13914  0183DE  503B               	movf	(btemp+17)^0,w,c
 13915  0183E0  22DE               	addwfc	postinc2,f,c
 13916  0183E2  503C               	movf	(btemp+18)^0,w,c
 13917  0183E4  22DE               	addwfc	postinc2,f,c
 13918  0183E6  503D               	movf	(btemp+19)^0,w,c
 13919  0183E8  22DE               	addwfc	postinc2,f,c
 13920  0183EA  503E               	movf	(btemp+20)^0,w,c
 13921  0183EC  22DE               	addwfc	postinc2,f,c
 13922  0183EE  503F               	movf	(btemp+21)^0,w,c
 13923  0183F0  22DE               	addwfc	postinc2,f,c
 13924  0183F2  5040               	movf	(btemp+22)^0,w,c
 13925  0183F4  22DE               	addwfc	postinc2,f,c
 13926  0183F6  5041               	movf	(btemp+23)^0,w,c
 13927  0183F8  22DE               	addwfc	postinc2,f,c
 13928  0183FA  0E80               	movlw	128
 13929  0183FC  6EE6               	movwf	postinc1,c
 13930  0183FE  0E51               	movlw	81
 13931  018400  6EE6               	movwf	postinc1,c
 13932  018402  0E01               	movlw	1
 13933  018404  6EE6               	movwf	postinc1,c
 13934  018406  0E00               	movlw	0
 13935  018408  6EE6               	movwf	postinc1,c
 13936  01840A  0E80               	movlw	128
 13937  01840C  6EE6               	movwf	postinc1,c
 13938  01840E  0E3A               	movlw	58
 13939  018410  6EE6               	movwf	postinc1,c
 13940  018412  0E09               	movlw	9
 13941  018414  6EE6               	movwf	postinc1,c
 13942  018416  0E00               	movlw	0
 13943  018418  6EE6               	movwf	postinc1,c
 13944  01841A  0E00               	movlw	0
 13945  01841C  6EE6               	movwf	postinc1,c
 13946  01841E  0E00               	movlw	0
 13947  018420  6EE6               	movwf	postinc1,c
 13948  018422  0E00               	movlw	0
 13949  018424  6EE6               	movwf	postinc1,c
 13950  018426  0E00               	movlw	0
 13951  018428  6EE6               	movwf	postinc1,c
 13952                           
 13953                           ;stkvar	_t @ sp[(-34)+4]
 13954  01842A  0EE2               	movlw	-30
 13955  01842C  50E3               	movf	plusw1,w,c
 13956  01842E  0F00               	addlw	0
 13957  018430  6E3A               	movwf	(btemp+16)^0,c
 13958  018432  0EE3               	movlw	-29
 13959  018434  006F FF8C  F03B    	movff	plusw1,btemp+17
 13960  01843A  0E46               	movlw	70
 13961  01843C  223B               	addwfc	(btemp+17)^0,f,c
 13962  01843E  0EE4               	movlw	-28
 13963  018440  006F FF8C  F03C    	movff	plusw1,btemp+18
 13964  018446  0E05               	movlw	5
 13965  018448  223C               	addwfc	(btemp+18)^0,f,c
 13966  01844A  0EE5               	movlw	-27
 13967  01844C  006F FF8C  F03D    	movff	plusw1,btemp+19
 13968  018452  0E00               	movlw	0
 13969  018454  223D               	addwfc	(btemp+19)^0,f,c
 13970  018456  0EE6               	movlw	-26
 13971  018458  006F FF8C  F03E    	movff	plusw1,btemp+20
 13972  01845E  0E00               	movlw	0
 13973  018460  223E               	addwfc	(btemp+20)^0,f,c
 13974  018462  0EE7               	movlw	-25
 13975  018464  006F FF8C  F03F    	movff	plusw1,btemp+21
 13976  01846A  0E00               	movlw	0
 13977  01846C  223F               	addwfc	(btemp+21)^0,f,c
 13978  01846E  0EE8               	movlw	-24
 13979  018470  006F FF8C  F040    	movff	plusw1,btemp+22
 13980  018476  0E00               	movlw	0
 13981  018478  2240               	addwfc	(btemp+22)^0,f,c
 13982  01847A  0EE9               	movlw	-23
 13983  01847C  006F FF8C  F041    	movff	plusw1,btemp+23
 13984  018482  0E00               	movlw	0
 13985  018484  2241               	addwfc	(btemp+23)^0,f,c
 13986  018486  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13987  01848C  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13988  018492  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13989  018498  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13990  01849E  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13991  0184A4  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13992  0184AA  0060  F103  FFE6   	movff	btemp+22,postinc1
 13993  0184B0  0060  F107  FFE6   	movff	btemp+23,postinc1
 13994  0184B6  ECF0  F0E7         	call	___aomod	;wreg free
 13995  0184BA  52E5               	movf	postdec1,f,c
 13996  0184BC  006F FF9C  F041    	movff	indf1,btemp+23
 13997  0184C2  52E5               	movf	postdec1,f,c
 13998  0184C4  006F FF9C  F040    	movff	indf1,btemp+22
 13999  0184CA  52E5               	movf	postdec1,f,c
 14000  0184CC  006F FF9C  F03F    	movff	indf1,btemp+21
 14001  0184D2  52E5               	movf	postdec1,f,c
 14002  0184D4  006F FF9C  F03E    	movff	indf1,btemp+20
 14003  0184DA  52E5               	movf	postdec1,f,c
 14004  0184DC  006F FF9C  F03D    	movff	indf1,btemp+19
 14005  0184E2  52E5               	movf	postdec1,f,c
 14006  0184E4  006F FF9C  F03C    	movff	indf1,btemp+18
 14007  0184EA  52E5               	movf	postdec1,f,c
 14008  0184EC  006F FF9C  F03B    	movff	indf1,btemp+17
 14009  0184F2  52E5               	movf	postdec1,f,c
 14010  0184F4  006F FF9C  F03A    	movff	indf1,btemp+16
 14011  0184FA  0EF8               	movlw	248
 14012  0184FC  26E1               	addwf	fsr1l,f,c
 14013  0184FE  0EFF               	movlw	255
 14014  018500  22E2               	addwfc	fsr1h,f,c
 14015  018502  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14016  018508  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14017  01850E  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14018  018514  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14019  01851A  0E00               	movlw	0
 14020  01851C  BE2F               	btfsc	(btemp+5)^0,7,c
 14021  01851E  0EFF               	movlw	255
 14022  018520  6E30               	movwf	(btemp+6)^0,c
 14023  018522  6E31               	movwf	(btemp+7)^0,c
 14024  018524  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14025  01852A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14026  018530  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14027  018536  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14028  01853C  ECB0  F0F1         	call	___aldiv	;wreg free
 14029  018540  0060  F0A8  F034   	movff	btemp,btemp+10
 14030  018546  0060  F0AC  F035   	movff	btemp+1,btemp+11
 14031                           
 14032                           ;stkvar	_wday @ sp[(-22)+2]
 14033  01854C  0EEC               	movlw	-20
 14034  01854E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14035  018554  0EED               	movlw	-19
 14036  018556  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14037                           
 14038                           ;stkvar	_wday @ sp[(-22)+2]
 14039                           ;stkvar	_d @ sp[(-22)+20]
 14040  01855C  0EFE               	movlw	-2
 14041  01855E  006F FF8C  F034    	movff	plusw1,btemp+10
 14042  018564  0EFF               	movlw	-1
 14043  018566  006F FF8C  F035    	movff	plusw1,btemp+11
 14044  01856C  0EEC               	movlw	-20
 14045  01856E  50E3               	movf	plusw1,w,c
 14046  018570  5E34               	subwf	(btemp+10)^0,f,c
 14047  018572  0EED               	movlw	-19
 14048  018574  50E3               	movf	plusw1,w,c
 14049  018576  5A35               	subwfb	(btemp+11)^0,f,c
 14050                           
 14051                           ;stkvar	_days @ sp[(-22)+0]
 14052  018578  0EEA               	movlw	-22
 14053  01857A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14054  018580  0EEB               	movlw	-21
 14055  018582  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14056                           
 14057                           ;stkvar	_days @ sp[(-22)+0]
 14058  018588  0EEB               	movlw	-21
 14059  01858A  AEE3               	btfss	plusw1,7,c
 14060  01858C  D011               	goto	l4030
 14061                           
 14062                           ;stkvar	_days @ sp[(-22)+0]
 14063  01858E  0EEA               	movlw	-22
 14064  018590  50E3               	movf	plusw1,w,c
 14065  018592  0F07               	addlw	7
 14066  018594  6E2A               	movwf	btemp^0,c
 14067  018596  0EEA               	movlw	-22
 14068  018598  0060  F0AB  FFE3   	movff	btemp,plusw1
 14069  01859E  6A2A               	clrf	btemp^0,c
 14070  0185A0  0EEB               	movlw	-21
 14071  0185A2  50E3               	movf	plusw1,w,c
 14072  0185A4  202A               	addwfc	btemp^0,w,c
 14073  0185A6  6E2A               	movwf	btemp^0,c
 14074  0185A8  0EEB               	movlw	-21
 14075  0185AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 14076  0185B0                     l4030:
 14077                           
 14078                           ;stkvar	_n @ sp[(-22)+14]
 14079  0185B0  0EF8               	movlw	-8
 14080  0185B2  006F FF8C  F02A    	movff	plusw1,btemp
 14081  0185B8  0E05               	movlw	5
 14082  0185BA  182A               	xorwf	btemp^0,w,c
 14083  0185BC  E134               	bnz	l16755
 14084  0185BE  0EF9               	movlw	-7
 14085  0185C0  50E3               	movf	plusw1,w,c
 14086  0185C2  A4D8               	btfss	status,2,c
 14087  0185C4  D030               	goto	l16755
 14088                           
 14089                           ;stkvar	_is_leap @ sp[(-22)+12]
 14090  0185C6  0EF6               	movlw	-10
 14091  0185C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14092  0185CE  006F FF8F FFE6     	movff	plusw1,postinc1
 14093                           
 14094                           ;stkvar	_m @ sp[(-24)+18]
 14095  0185D4  0EFA               	movlw	-6
 14096  0185D6  006F FF8F FFE6     	movff	plusw1,postinc1
 14097  0185DC  006F FF8F FFE6     	movff	plusw1,postinc1
 14098  0185E2  EC2F  F00E         	call	_days_in_month	;wreg free
 14099                           
 14100                           ;stkvar	_days @ sp[(-22)+0]
 14101  0185E6  0EEA               	movlw	-22
 14102  0185E8  50E3               	movf	plusw1,w,c
 14103  0185EA  0F1C               	addlw	28
 14104  0185EC  6E34               	movwf	(btemp+10)^0,c
 14105  0185EE  0EEB               	movlw	-21
 14106  0185F0  006F FF8C  F035    	movff	plusw1,btemp+11
 14107  0185F6  0E00               	movlw	0
 14108  0185F8  2235               	addwfc	(btemp+11)^0,f,c
 14109  0185FA  502A               	movf	btemp^0,w,c
 14110  0185FC  5C34               	subwf	(btemp+10)^0,w,c
 14111  0185FE  5035               	movf	(btemp+11)^0,w,c
 14112  018600  0A80               	xorlw	128
 14113  018602  6E2C               	movwf	(btemp+2)^0,c
 14114  018604  502B               	movf	(btemp+1)^0,w,c
 14115  018606  0A80               	xorlw	128
 14116  018608  582C               	subwfb	(btemp+2)^0,w,c
 14117  01860A  A0D8               	btfss	status,0,c
 14118  01860C  D00C               	goto	l16755
 14119  01860E  0E04               	movlw	4
 14120  018610  6E34               	movwf	(btemp+10)^0,c
 14121  018612  0E00               	movlw	0
 14122  018614  6E35               	movwf	(btemp+11)^0,c
 14123                           
 14124                           ;stkvar	_n @ sp[(-22)+14]
 14125  018616  0EF8               	movlw	-8
 14126  018618  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14127  01861E  0EF9               	movlw	-7
 14128  018620  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14129  018626                     l16755:
 14130  018626  0E80               	movlw	128
 14131  018628  6EE6               	movwf	postinc1,c
 14132  01862A  0E51               	movlw	81
 14133  01862C  6EE6               	movwf	postinc1,c
 14134  01862E  0E01               	movlw	1
 14135  018630  6EE6               	movwf	postinc1,c
 14136  018632  0E00               	movlw	0
 14137  018634  6EE6               	movwf	postinc1,c
 14138                           
 14139                           ;stkvar	_days @ sp[(-26)+0]
 14140                           ;stkvar	_n @ sp[(-26)+14]
 14141  018636  0EF4               	movlw	-12
 14142  018638  006F FF8C  F034    	movff	plusw1,btemp+10
 14143  01863E  0EF5               	movlw	-11
 14144  018640  006F FF8C  F035    	movff	plusw1,btemp+11
 14145  018646  0E07               	movlw	7
 14146  018648  0234               	mulwf	(btemp+10)^0,c
 14147  01864A  006F FFCC  F032    	movff	prodl,btemp+8
 14148  018650  006F FFD0  F033    	movff	prodh,btemp+9
 14149  018656  0235               	mulwf	(btemp+11)^0,c
 14150  018658  50F3               	movf	prodl,w,c
 14151  01865A  2633               	addwf	(btemp+9)^0,f,c
 14152  01865C  0EE6               	movlw	-26
 14153  01865E  50E3               	movf	plusw1,w,c
 14154  018660  2632               	addwf	(btemp+8)^0,f,c
 14155  018662  0EE7               	movlw	-25
 14156  018664  50E3               	movf	plusw1,w,c
 14157  018666  2233               	addwfc	(btemp+9)^0,f,c
 14158  018668  0EF9               	movlw	249
 14159  01866A  2432               	addwf	(btemp+8)^0,w,c
 14160  01866C  6E2E               	movwf	(btemp+4)^0,c
 14161  01866E  0EFF               	movlw	255
 14162  018670  2033               	addwfc	(btemp+9)^0,w,c
 14163  018672  6E2F               	movwf	(btemp+5)^0,c
 14164  018674  6A30               	clrf	(btemp+6)^0,c
 14165  018676  BE2F               	btfsc	(btemp+5)^0,7,c
 14166  018678  0630               	decf	(btemp+6)^0,f,c
 14167  01867A  5030               	movf	(btemp+6)^0,w,c
 14168  01867C  6E31               	movwf	(btemp+7)^0,c
 14169  01867E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14170  018684  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14171  01868A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14172  018690  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14173  018696  ECB6  F003         	call	___lmul	;wreg free
 14174  01869A                     L10:
 14175  01869A  0060  F0A8  F03A   	movff	btemp,btemp+16
 14176  0186A0  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14177  0186A6  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14178  0186AC  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14179  0186B2  6A3E               	clrf	(btemp+20)^0,c
 14180  0186B4  BE3D               	btfsc	(btemp+19)^0,7,c
 14181  0186B6  683E               	setf	(btemp+20)^0,c
 14182  0186B8  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14183  0186BE  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14184  0186C4  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14185                           
 14186                           ;stkvar	_t @ sp[(-22)+4]
 14187  0186CA  50E1               	movf	fsr1l,w,c
 14188  0186CC  0FEE               	addlw	-18
 14189  0186CE  6ED9               	movwf	fsr2l,c
 14190  0186D0  50E2               	movf	fsr1h,w,c
 14191  0186D2  6EDA               	movwf	fsr2h,c
 14192  0186D4  0EFF               	movlw	255
 14193  0186D6  22DA               	addwfc	fsr2h,f,c
 14194  0186D8  503A               	movf	(btemp+16)^0,w,c
 14195  0186DA  26DE               	addwf	postinc2,f,c
 14196  0186DC  503B               	movf	(btemp+17)^0,w,c
 14197  0186DE  22DE               	addwfc	postinc2,f,c
 14198  0186E0  503C               	movf	(btemp+18)^0,w,c
 14199  0186E2  22DE               	addwfc	postinc2,f,c
 14200  0186E4  503D               	movf	(btemp+19)^0,w,c
 14201  0186E6  22DE               	addwfc	postinc2,f,c
 14202  0186E8  503E               	movf	(btemp+20)^0,w,c
 14203  0186EA  22DE               	addwfc	postinc2,f,c
 14204  0186EC  503F               	movf	(btemp+21)^0,w,c
 14205  0186EE  22DE               	addwfc	postinc2,f,c
 14206  0186F0  5040               	movf	(btemp+22)^0,w,c
 14207  0186F2  22DE               	addwfc	postinc2,f,c
 14208  0186F4  5041               	movf	(btemp+23)^0,w,c
 14209  0186F6  22DE               	addwfc	postinc2,f,c
 14210                           
 14211                           ;stkvar	_rule @ sp[(-22)+-6]
 14212  0186F8  0EE4               	movlw	-28
 14213  0186FA  006F FF8C  F034    	movff	plusw1,btemp+10
 14214  018700  0EE5               	movlw	-27
 14215  018702  006F FF8C  F035    	movff	plusw1,btemp+11
 14216  018708  0E08               	movlw	8
 14217  01870A  2434               	addwf	(btemp+10)^0,w,c
 14218  01870C  6ED9               	movwf	fsr2l,c
 14219  01870E  0E00               	movlw	0
 14220  018710  2035               	addwfc	(btemp+11)^0,w,c
 14221  018712  6EDA               	movwf	fsr2h,c
 14222  018714  006F FF78  F034    	movff	postinc2,btemp+10
 14223  01871A  006F FF74  F035    	movff	postdec2,btemp+11
 14224                           
 14225                           ;stkvar	_t @ sp[(-22)+4]
 14226  018720  50E1               	movf	fsr1l,w,c
 14227  018722  0FEE               	addlw	-18
 14228  018724  6ED9               	movwf	fsr2l,c
 14229  018726  50E2               	movf	fsr1h,w,c
 14230  018728  6EDA               	movwf	fsr2h,c
 14231  01872A  0EFF               	movlw	255
 14232  01872C  22DA               	addwfc	fsr2h,f,c
 14233  01872E  5034               	movf	(btemp+10)^0,w,c
 14234  018730  26DE               	addwf	postinc2,f,c
 14235  018732  5035               	movf	(btemp+11)^0,w,c
 14236  018734  22DE               	addwfc	postinc2,f,c
 14237  018736  0E00               	movlw	0
 14238  018738  BE35               	btfsc	(btemp+11)^0,7,c
 14239  01873A  0EFF               	movlw	255
 14240  01873C  22DE               	addwfc	postinc2,f,c
 14241  01873E  22DE               	addwfc	postinc2,f,c
 14242  018740  22DE               	addwfc	postinc2,f,c
 14243  018742  22DE               	addwfc	postinc2,f,c
 14244  018744  22DE               	addwfc	postinc2,f,c
 14245  018746  22DE               	addwfc	postinc2,f,c
 14246                           
 14247                           ;stkvar	_t @ sp[(-22)+4]
 14248  018748  0EEE               	movlw	238
 14249  01874A  24E1               	addwf	fsr1l,w,c
 14250  01874C  6ED9               	movwf	fsr2l,c
 14251  01874E  0EFF               	movlw	255
 14252  018750  20E2               	addwfc	fsr1h,w,c
 14253  018752  6EDA               	movwf	fsr2h,c
 14254                           
 14255                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 14256  018754  0E08               	movlw	8
 14257  018756  6E2A               	movwf	btemp^0,c
 14258  018758  0EE2               	movlw	-30
 14259  01875A                     us1630999:
 14260  01875A  006F FF7B FFE3     	movff	postinc2,plusw1
 14261  018760  28E8               	incf	wreg,w,c
 14262  018762  2E2A               	decfsz	btemp^0,f,c
 14263  018764  D7FA               	bra	us1630999
 14264                           
 14265                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 14266  018766  0EEA               	movlw	234
 14267  018768  26E1               	addwf	fsr1l,f,c
 14268  01876A  0EFF               	movlw	255
 14269  01876C  22E2               	addwfc	fsr1h,f,c
 14270  01876E  0012               	return		;funcret
 14271  018770                     __end_of_rule_to_secs:
 14272                           	opt callstack 0
 14273                           
 14274 ;; *************** function _days_in_month *****************
 14275 ;; Defined at:
 14276 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14277 ;; Parameters:    Size  Location     Type
 14278 ;;  m               2  [STACK] int 
 14279 ;;  is_leap         2  [STACK] int 
 14280 ;; Auto vars:     Size  Location     Type
 14281 ;;		None
 14282 ;; Return value:  Size  Location     Type
 14283 ;;                  2  [STACK] int 
 14284 ;; Registers used:
 14285 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14286 ;; Tracked objects:
 14287 ;;		On entry : 0/0
 14288 ;;		On exit  : 0/0
 14289 ;;		Unchanged: 0/0
 14290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14295 ;;Total ram usage:        0 bytes
 14296 ;; Hardware stack levels used:    1
 14297 ;; Hardware stack levels required when called:   15
 14298 ;; This function calls:
 14299 ;;		Nothing
 14300 ;; This function is called by:
 14301 ;;		_rule_to_secs
 14302 ;; This function uses a reentrant model
 14303 ;;
 14304                           
 14305                           	psect	text42
 14306  001C5E                     __ptext42:
 14307                           	opt callstack 0
 14308  001C5E                     _days_in_month:
 14309                           	opt callstack 11
 14310                           
 14311                           ;stkvar	_m @ sp[(0)+-2]
 14312                           
 14313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14314                           ;incstack = 0
 14315  001C5E  0EFE               	movlw	-2
 14316  001C60  006F FF8C  F02A    	movff	plusw1,btemp
 14317  001C66  0E02               	movlw	2
 14318  001C68  182A               	xorwf	btemp^0,w,c
 14319  001C6A  E10D               	bnz	l11729
 14320  001C6C  0EFF               	movlw	-1
 14321  001C6E  50E3               	movf	plusw1,w,c
 14322  001C70  A4D8               	btfss	status,2,c
 14323  001C72  D009               	goto	l11729
 14324                           
 14325                           ;stkvar	_is_leap @ sp[(0)+-4]
 14326  001C74  0EFC               	movlw	-4
 14327  001C76  50E3               	movf	plusw1,w,c
 14328  001C78  0F1C               	addlw	28
 14329  001C7A  6E2A               	movwf	btemp^0,c
 14330  001C7C  0EFD               	movlw	-3
 14331  001C7E  006F FF8C  F02B    	movff	plusw1,btemp+1
 14332  001C84  D017               	goto	L11
 14333  001C86                     l11729:
 14334  001C86  0EFF               	movlw	255
 14335  001C88  6E35               	movwf	(btemp+11)^0,c
 14336                           
 14337                           ;stkvar	_m @ sp[(0)+-2]
 14338  001C8A  0EFE               	movlw	-2
 14339  001C8C  50E3               	movf	plusw1,w,c
 14340  001C8E  2435               	addwf	(btemp+11)^0,w,c
 14341  001C90  6E34               	movwf	(btemp+10)^0,c
 14342  001C92  0ED5               	movlw	213
 14343  001C94  6E2A               	movwf	btemp^0,c
 14344  001C96  0E0A               	movlw	10
 14345  001C98  6E2B               	movwf	(btemp+1)^0,c
 14346  001C9A  2A34               	incf	(btemp+10)^0,f,c
 14347  001C9C  D003               	goto	u10794
 14348  001C9E                     u10795:
 14349  001C9E  342B               	rlcf	(btemp+1)^0,w,c
 14350  001CA0  322B               	rrcf	(btemp+1)^0,f,c
 14351  001CA2  322A               	rrcf	btemp^0,f,c
 14352  001CA4                     u10794:
 14353  001CA4  2E34               	decfsz	(btemp+10)^0,f,c
 14354  001CA6  D7FB               	goto	u10795
 14355  001CA8  0E01               	movlw	1
 14356  001CAA  162A               	andwf	btemp^0,f,c
 14357  001CAC  0E00               	movlw	0
 14358  001CAE  162B               	andwf	(btemp+1)^0,f,c
 14359  001CB0  0E1E               	movlw	30
 14360  001CB2  262A               	addwf	btemp^0,f,c
 14361  001CB4                     L11:
 14362  001CB4  0E00               	movlw	0
 14363  001CB6  222B               	addwfc	(btemp+1)^0,f,c
 14364                           
 14365                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14366  001CB8  52E5               	movf	postdec1,f,c
 14367  001CBA  52E5               	movf	postdec1,f,c
 14368  001CBC  52E5               	movf	postdec1,f,c
 14369  001CBE  52E5               	movf	postdec1,f,c
 14370  001CC0  0012               	return		;funcret
 14371  001CC2                     __end_of_days_in_month:
 14372                           	opt callstack 0
 14373                           
 14374 ;; *************** function ___year_to_secs *****************
 14375 ;; Defined at:
 14376 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  year            8  [STACK] long long 
 14379 ;;  is_leap         2  [STACK] PTR int 
 14380 ;;		 -> F5(2), is_leap(2), NULL(0), 
 14381 ;; Auto vars:     Size  Location     Type
 14382 ;;  y               2  [STACK] int 
 14383 ;;  leaps           2  [STACK] int 
 14384 ;;  rem             2  [STACK] int 
 14385 ;;  5               2  [STACK] int 
 14386 ;;  centuries       2  [STACK] int 
 14387 ;;  leaps           2  [STACK] int 
 14388 ;;  cycles          2  [STACK] int 
 14389 ;; Return value:  Size  Location     Type
 14390 ;;                  8  [STACK] long long 
 14391 ;; Registers used:
 14392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 14393 ;; Tracked objects:
 14394 ;;		On entry : 0/0
 14395 ;;		On exit  : 0/0
 14396 ;;		Unchanged: 0/0
 14397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14402 ;;Total ram usage:        0 bytes
 14403 ;; Hardware stack levels used:    1
 14404 ;; Hardware stack levels required when called:   16
 14405 ;; This function calls:
 14406 ;;		___aodiv
 14407 ;;		___aomod
 14408 ;;		___lmul
 14409 ;;		___omul
 14410 ;; This function is called by:
 14411 ;;		_rule_to_secs
 14412 ;;		___secs_to_zone
 14413 ;; This function uses a reentrant model
 14414 ;;
 14415                           
 14416                           	psect	text43
 14417  015EBA                     __ptext43:
 14418                           	opt callstack 0
 14419  015EBA                     ___year_to_secs:
 14420                           	opt callstack 0
 14421                           
 14422                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14423  015EBA  0E0E               	movlw	14
 14424  015EBC  26E1               	addwf	fsr1l,f,c
 14425  015EBE  0E00               	movlw	0
 14426  015EC0  22E2               	addwfc	fsr1h,f,c
 14427                           
 14428                           ;stkvar	_year @ sp[(-14)+-8]
 14429                           
 14430                           ;incstack = 0
 14431  015EC2  0EEA               	movlw	-22
 14432  015EC4  50E3               	movf	plusw1,w,c
 14433  015EC6  0FFE               	addlw	254
 14434  015EC8  6E3A               	movwf	(btemp+16)^0,c
 14435  015ECA  0EEB               	movlw	-21
 14436  015ECC  006F FF8C  F03B    	movff	plusw1,btemp+17
 14437  015ED2  0EFF               	movlw	255
 14438  015ED4  223B               	addwfc	(btemp+17)^0,f,c
 14439  015ED6  0EEC               	movlw	-20
 14440  015ED8  006F FF8C  F03C    	movff	plusw1,btemp+18
 14441  015EDE  0EFF               	movlw	255
 14442  015EE0  223C               	addwfc	(btemp+18)^0,f,c
 14443  015EE2  0EED               	movlw	-19
 14444  015EE4  006F FF8C  F03D    	movff	plusw1,btemp+19
 14445  015EEA  0EFF               	movlw	255
 14446  015EEC  223D               	addwfc	(btemp+19)^0,f,c
 14447  015EEE  0EEE               	movlw	-18
 14448  015EF0  006F FF8C  F03E    	movff	plusw1,btemp+20
 14449  015EF6  0EFF               	movlw	255
 14450  015EF8  223E               	addwfc	(btemp+20)^0,f,c
 14451  015EFA  0EEF               	movlw	-17
 14452  015EFC  006F FF8C  F03F    	movff	plusw1,btemp+21
 14453  015F02  0EFF               	movlw	255
 14454  015F04  223F               	addwfc	(btemp+21)^0,f,c
 14455  015F06  0EF0               	movlw	-16
 14456  015F08  006F FF8C  F040    	movff	plusw1,btemp+22
 14457  015F0E  0EFF               	movlw	255
 14458  015F10  2240               	addwfc	(btemp+22)^0,f,c
 14459  015F12  0EF1               	movlw	-15
 14460  015F14  006F FF8C  F041    	movff	plusw1,btemp+23
 14461  015F1A  0EFF               	movlw	255
 14462  015F1C  2241               	addwfc	(btemp+23)^0,f,c
 14463  015F1E  5041               	movf	(btemp+23)^0,w,c
 14464  015F20  1040               	iorwf	(btemp+22)^0,w,c
 14465  015F22  103F               	iorwf	(btemp+21)^0,w,c
 14466  015F24  103E               	iorwf	(btemp+20)^0,w,c
 14467  015F26  103D               	iorwf	(btemp+19)^0,w,c
 14468  015F28  103C               	iorwf	(btemp+18)^0,w,c
 14469  015F2A  103B               	iorwf	(btemp+17)^0,w,c
 14470  015F2C  E103               	bnz	u10801
 14471  015F2E  0E89               	movlw	137
 14472  015F30  5C3A               	subwf	(btemp+16)^0,w,c
 14473  015F32  B0D8               	btfsc	status,0,c
 14474  015F34                     u10801:
 14475  015F34  D0E7               	goto	l11755
 14476                           
 14477                           ;stkvar	_year @ sp[(-14)+-8]
 14478                           ;stkvar	_y @ sp[(-14)+0]
 14479  015F36  0EEA               	movlw	-22
 14480  015F38  006F FF8C  F02A    	movff	plusw1,btemp
 14481  015F3E  0EF2               	movlw	-14
 14482  015F40  0060  F0AB  FFE3   	movff	btemp,plusw1
 14483  015F46  0EEB               	movlw	-21
 14484  015F48  006F FF8C  F02A    	movff	plusw1,btemp
 14485  015F4E  0EF3               	movlw	-13
 14486  015F50  0060  F0AB  FFE3   	movff	btemp,plusw1
 14487                           
 14488                           ;stkvar	_y @ sp[(-14)+0]
 14489  015F56  0EF2               	movlw	-14
 14490  015F58  50E3               	movf	plusw1,w,c
 14491  015F5A  0FBC               	addlw	188
 14492  015F5C  6E34               	movwf	(btemp+10)^0,c
 14493  015F5E  0EF3               	movlw	-13
 14494  015F60  006F FF8C  F035    	movff	plusw1,btemp+11
 14495  015F66  0EFF               	movlw	255
 14496  015F68  2235               	addwfc	(btemp+11)^0,f,c
 14497  015F6A  3435               	rlcf	(btemp+11)^0,w,c
 14498  015F6C  3235               	rrcf	(btemp+11)^0,f,c
 14499  015F6E  3234               	rrcf	(btemp+10)^0,f,c
 14500  015F70  3435               	rlcf	(btemp+11)^0,w,c
 14501  015F72  3235               	rrcf	(btemp+11)^0,f,c
 14502  015F74  3234               	rrcf	(btemp+10)^0,f,c
 14503                           
 14504                           ;stkvar	_leaps @ sp[(-14)+2]
 14505  015F76  0EF4               	movlw	-12
 14506  015F78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14507  015F7E  0EF5               	movlw	-11
 14508  015F80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14509  015F86  0EBC               	movlw	188
 14510  015F88  6E35               	movwf	(btemp+11)^0,c
 14511                           
 14512                           ;stkvar	_y @ sp[(-14)+0]
 14513  015F8A  0EF2               	movlw	-14
 14514  015F8C  50E3               	movf	plusw1,w,c
 14515  015F8E  2435               	addwf	(btemp+11)^0,w,c
 14516  015F90  6E34               	movwf	(btemp+10)^0,c
 14517  015F92  0E03               	movlw	3
 14518  015F94  1634               	andwf	(btemp+10)^0,f,c
 14519  015F96  A4D8               	btfss	status,2,c
 14520  015F98  D01D               	goto	l11747
 14521                           
 14522                           ;stkvar	_leaps @ sp[(-14)+2]
 14523  015F9A  50E1               	movf	fsr1l,w,c
 14524  015F9C  0FF4               	addlw	-12
 14525  015F9E  6ED9               	movwf	fsr2l,c
 14526  015FA0  50E2               	movf	fsr1h,w,c
 14527  015FA2  6EDA               	movwf	fsr2h,c
 14528  015FA4  0EFF               	movlw	255
 14529  015FA6  22DA               	addwfc	fsr2h,f,c
 14530  015FA8  06DE               	decf	postinc2,f,c
 14531  015FAA  0E00               	movlw	0
 14532  015FAC  5ADD               	subwfb	postdec2,f,c
 14533                           
 14534                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14535  015FAE  0EE8               	movlw	-24
 14536  015FB0  006F FF8C  F02A    	movff	plusw1,btemp
 14537  015FB6  0EE9               	movlw	-23
 14538  015FB8  50E3               	movf	plusw1,w,c
 14539  015FBA  102A               	iorwf	btemp^0,w,c
 14540  015FBC  B4D8               	btfsc	status,2,c
 14541  015FBE  D01F               	goto	l11751
 14542                           
 14543                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14544  015FC0  0EE8               	movlw	-24
 14545  015FC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14546  015FC8  0EE9               	movlw	-23
 14547  015FCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14548  015FD0  0E01               	movlw	1
 14549  015FD2  D012               	goto	L12
 14550  015FD4                     l11747:
 14551                           
 14552                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14553  015FD4  0EE8               	movlw	-24
 14554  015FD6  006F FF8C  F02A    	movff	plusw1,btemp
 14555  015FDC  0EE9               	movlw	-23
 14556  015FDE  50E3               	movf	plusw1,w,c
 14557  015FE0  102A               	iorwf	btemp^0,w,c
 14558  015FE2  B4D8               	btfsc	status,2,c
 14559  015FE4  D00C               	goto	l11751
 14560                           
 14561                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14562  015FE6  0EE8               	movlw	-24
 14563  015FE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14564  015FEE  0EE9               	movlw	-23
 14565  015FF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14566  015FF6  0E00               	movlw	0
 14567  015FF8                     L12:
 14568  015FF8  6EDE               	movwf	postinc2,c
 14569  015FFA  0E00               	movlw	0
 14570  015FFC  6EDD               	movwf	postdec2,c
 14571  015FFE                     l11751:
 14572  015FFE  0E80               	movlw	128
 14573  016000  6EE6               	movwf	postinc1,c
 14574  016002  0E33               	movlw	51
 14575  016004  6EE6               	movwf	postinc1,c
 14576  016006  0EE1               	movlw	225
 14577  016008  6EE6               	movwf	postinc1,c
 14578  01600A  0E01               	movlw	1
 14579  01600C  6EE6               	movwf	postinc1,c
 14580                           
 14581                           ;stkvar	_y @ sp[(-18)+0]
 14582  01600E  0EEE               	movlw	-18
 14583  016010  006F FF8C  F034    	movff	plusw1,btemp+10
 14584  016016  0EEF               	movlw	-17
 14585  016018  006F FF8C  F035    	movff	plusw1,btemp+11
 14586  01601E  0EBA               	movlw	186
 14587  016020  2434               	addwf	(btemp+10)^0,w,c
 14588  016022  6E2E               	movwf	(btemp+4)^0,c
 14589  016024  0EFF               	movlw	255
 14590  016026  2035               	addwfc	(btemp+11)^0,w,c
 14591  016028  6E2F               	movwf	(btemp+5)^0,c
 14592  01602A  6A30               	clrf	(btemp+6)^0,c
 14593  01602C  BE2F               	btfsc	(btemp+5)^0,7,c
 14594  01602E  0630               	decf	(btemp+6)^0,f,c
 14595  016030  5030               	movf	(btemp+6)^0,w,c
 14596  016032  6E31               	movwf	(btemp+7)^0,c
 14597  016034  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14598  01603A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14599  016040  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14600  016046  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14601  01604C  ECB6  F003         	call	___lmul	;wreg free
 14602  016050  0060  F0A8  F032   	movff	btemp,btemp+8
 14603  016056  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14604  01605C  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14605  016062  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14606  016068  0E80               	movlw	128
 14607  01606A  6EE6               	movwf	postinc1,c
 14608  01606C  0E51               	movlw	81
 14609  01606E  6EE6               	movwf	postinc1,c
 14610  016070  0E01               	movlw	1
 14611  016072  6EE6               	movwf	postinc1,c
 14612  016074  0E00               	movlw	0
 14613  016076  6EE6               	movwf	postinc1,c
 14614                           
 14615                           ;stkvar	_leaps @ sp[(-18)+2]
 14616  016078  0EF0               	movlw	-16
 14617  01607A  006F FF8C  F030    	movff	plusw1,btemp+6
 14618  016080  0EF1               	movlw	-15
 14619  016082  006F FF8C  F031    	movff	plusw1,btemp+7
 14620  016088  0060  F0C0  F02A   	movff	btemp+6,btemp
 14621  01608E  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14622  016094  0E00               	movlw	0
 14623  016096  BE2B               	btfsc	(btemp+1)^0,7,c
 14624  016098  0EFF               	movlw	255
 14625  01609A  6E2C               	movwf	(btemp+2)^0,c
 14626  01609C  6E2D               	movwf	(btemp+3)^0,c
 14627  01609E  0060  F0AB  FFE6   	movff	btemp,postinc1
 14628  0160A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14629  0160AA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14630  0160B0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14631  0160B6  ECB6  F003         	call	___lmul	;wreg free
 14632  0160BA  502A               	movf	btemp^0,w,c
 14633  0160BC  2432               	addwf	(btemp+8)^0,w,c
 14634  0160BE  6E2E               	movwf	(btemp+4)^0,c
 14635  0160C0  502B               	movf	(btemp+1)^0,w,c
 14636  0160C2  2033               	addwfc	(btemp+9)^0,w,c
 14637  0160C4  6E2F               	movwf	(btemp+5)^0,c
 14638  0160C6  502C               	movf	(btemp+2)^0,w,c
 14639  0160C8  2034               	addwfc	(btemp+10)^0,w,c
 14640  0160CA  6E30               	movwf	(btemp+6)^0,c
 14641  0160CC  502D               	movf	(btemp+3)^0,w,c
 14642  0160CE  2035               	addwfc	(btemp+11)^0,w,c
 14643  0160D0  6E31               	movwf	(btemp+7)^0,c
 14644  0160D2  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14645  0160D8  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14646  0160DE  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14647  0160E4  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14648  0160EA  6A3E               	clrf	(btemp+20)^0,c
 14649  0160EC  BE3D               	btfsc	(btemp+19)^0,7,c
 14650  0160EE  683E               	setf	(btemp+20)^0,c
 14651  0160F0  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14652  0160F6  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14653  0160FC  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14654  016102  D36F               	goto	L13
 14655  016104                     l11755:
 14656                           
 14657                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14658  016104  0EE8               	movlw	-24
 14659  016106  006F FF8C  F02A    	movff	plusw1,btemp
 14660  01610C  0EE9               	movlw	-23
 14661  01610E  50E3               	movf	plusw1,w,c
 14662  016110  102A               	iorwf	btemp^0,w,c
 14663  016112  A4D8               	btfss	status,2,c
 14664  016114  D012               	goto	l11761
 14665                           
 14666                           ;stkvar	F5 @ sp[(-14)+6]
 14667  016116  0EF8               	movlw	-8
 14668  016118  6AE3               	clrf	plusw1,c
 14669  01611A  0EF9               	movlw	-7
 14670  01611C  6AE3               	clrf	plusw1,c
 14671                           
 14672                           ;stkvar	F5 @ sp[(-14)+6]
 14673  01611E  0EF8               	movlw	248
 14674  016120  24E1               	addwf	fsr1l,w,c
 14675  016122  6E34               	movwf	(btemp+10)^0,c
 14676  016124  0EFF               	movlw	255
 14677  016126  20E2               	addwfc	fsr1h,w,c
 14678  016128  6E35               	movwf	(btemp+11)^0,c
 14679                           
 14680                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14681  01612A  0EE9               	movlw	-23
 14682  01612C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14683  016132  0EE8               	movlw	-24
 14684  016134  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14685  01613A                     l11761:
 14686  01613A  0E90               	movlw	144
 14687  01613C  6EE6               	movwf	postinc1,c
 14688  01613E  0E01               	movlw	1
 14689  016140  6EE6               	movwf	postinc1,c
 14690  016142  0E00               	movlw	0
 14691  016144  6EE6               	movwf	postinc1,c
 14692  016146  0E00               	movlw	0
 14693  016148  6EE6               	movwf	postinc1,c
 14694  01614A  0E00               	movlw	0
 14695  01614C  6EE6               	movwf	postinc1,c
 14696  01614E  0E00               	movlw	0
 14697  016150  6EE6               	movwf	postinc1,c
 14698  016152  0E00               	movlw	0
 14699  016154  6EE6               	movwf	postinc1,c
 14700  016156  0E00               	movlw	0
 14701  016158  6EE6               	movwf	postinc1,c
 14702                           
 14703                           ;stkvar	_year @ sp[(-22)+-8]
 14704  01615A  0EE2               	movlw	-30
 14705  01615C  50E3               	movf	plusw1,w,c
 14706  01615E  0F9C               	addlw	156
 14707  016160  6E3A               	movwf	(btemp+16)^0,c
 14708  016162  0EE3               	movlw	-29
 14709  016164  006F FF8C  F03B    	movff	plusw1,btemp+17
 14710  01616A  0EFF               	movlw	255
 14711  01616C  223B               	addwfc	(btemp+17)^0,f,c
 14712  01616E  0EE4               	movlw	-28
 14713  016170  006F FF8C  F03C    	movff	plusw1,btemp+18
 14714  016176  0EFF               	movlw	255
 14715  016178  223C               	addwfc	(btemp+18)^0,f,c
 14716  01617A  0EE5               	movlw	-27
 14717  01617C  006F FF8C  F03D    	movff	plusw1,btemp+19
 14718  016182  0EFF               	movlw	255
 14719  016184  223D               	addwfc	(btemp+19)^0,f,c
 14720  016186  0EE6               	movlw	-26
 14721  016188  006F FF8C  F03E    	movff	plusw1,btemp+20
 14722  01618E  0EFF               	movlw	255
 14723  016190  223E               	addwfc	(btemp+20)^0,f,c
 14724  016192  0EE7               	movlw	-25
 14725  016194  006F FF8C  F03F    	movff	plusw1,btemp+21
 14726  01619A  0EFF               	movlw	255
 14727  01619C  223F               	addwfc	(btemp+21)^0,f,c
 14728  01619E  0EE8               	movlw	-24
 14729  0161A0  006F FF8C  F040    	movff	plusw1,btemp+22
 14730  0161A6  0EFF               	movlw	255
 14731  0161A8  2240               	addwfc	(btemp+22)^0,f,c
 14732  0161AA  0EE9               	movlw	-23
 14733  0161AC  006F FF8C  F041    	movff	plusw1,btemp+23
 14734  0161B2  0EFF               	movlw	255
 14735  0161B4  2241               	addwfc	(btemp+23)^0,f,c
 14736  0161B6  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14737  0161BC  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14738  0161C2  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14739  0161C8  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14740  0161CE  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14741  0161D4  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14742  0161DA  0060  F103  FFE6   	movff	btemp+22,postinc1
 14743  0161E0  0060  F107  FFE6   	movff	btemp+23,postinc1
 14744  0161E6  EC04  F0E2         	call	___aodiv	;wreg free
 14745  0161EA  52E5               	movf	postdec1,f,c
 14746  0161EC  006F FF9C  F041    	movff	indf1,btemp+23
 14747  0161F2  52E5               	movf	postdec1,f,c
 14748  0161F4  006F FF9C  F040    	movff	indf1,btemp+22
 14749  0161FA  52E5               	movf	postdec1,f,c
 14750  0161FC  006F FF9C  F03F    	movff	indf1,btemp+21
 14751  016202  52E5               	movf	postdec1,f,c
 14752  016204  006F FF9C  F03E    	movff	indf1,btemp+20
 14753  01620A  52E5               	movf	postdec1,f,c
 14754  01620C  006F FF9C  F03D    	movff	indf1,btemp+19
 14755  016212  52E5               	movf	postdec1,f,c
 14756  016214  006F FF9C  F03C    	movff	indf1,btemp+18
 14757  01621A  52E5               	movf	postdec1,f,c
 14758  01621C  006F FF9C  F03B    	movff	indf1,btemp+17
 14759  016222  52E5               	movf	postdec1,f,c
 14760  016224  006F FF9C  F03A    	movff	indf1,btemp+16
 14761  01622A  0EF8               	movlw	248
 14762  01622C  26E1               	addwf	fsr1l,f,c
 14763  01622E  0EFF               	movlw	255
 14764  016230  22E2               	addwfc	fsr1h,f,c
 14765  016232  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14766  016238  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14767                           
 14768                           ;stkvar	_cycles @ sp[(-14)+12]
 14769  01623E  0EFE               	movlw	-2
 14770  016240  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14771  016246  0EFF               	movlw	-1
 14772  016248  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14773  01624E  0E90               	movlw	144
 14774  016250  6EE6               	movwf	postinc1,c
 14775  016252  0E01               	movlw	1
 14776  016254  6EE6               	movwf	postinc1,c
 14777  016256  0E00               	movlw	0
 14778  016258  6EE6               	movwf	postinc1,c
 14779  01625A  0E00               	movlw	0
 14780  01625C  6EE6               	movwf	postinc1,c
 14781  01625E  0E00               	movlw	0
 14782  016260  6EE6               	movwf	postinc1,c
 14783  016262  0E00               	movlw	0
 14784  016264  6EE6               	movwf	postinc1,c
 14785  016266  0E00               	movlw	0
 14786  016268  6EE6               	movwf	postinc1,c
 14787  01626A  0E00               	movlw	0
 14788  01626C  6EE6               	movwf	postinc1,c
 14789                           
 14790                           ;stkvar	_year @ sp[(-22)+-8]
 14791  01626E  0EE2               	movlw	-30
 14792  016270  50E3               	movf	plusw1,w,c
 14793  016272  0F9C               	addlw	156
 14794  016274  6E3A               	movwf	(btemp+16)^0,c
 14795  016276  0EE3               	movlw	-29
 14796  016278  006F FF8C  F03B    	movff	plusw1,btemp+17
 14797  01627E  0EFF               	movlw	255
 14798  016280  223B               	addwfc	(btemp+17)^0,f,c
 14799  016282  0EE4               	movlw	-28
 14800  016284  006F FF8C  F03C    	movff	plusw1,btemp+18
 14801  01628A  0EFF               	movlw	255
 14802  01628C  223C               	addwfc	(btemp+18)^0,f,c
 14803  01628E  0EE5               	movlw	-27
 14804  016290  006F FF8C  F03D    	movff	plusw1,btemp+19
 14805  016296  0EFF               	movlw	255
 14806  016298  223D               	addwfc	(btemp+19)^0,f,c
 14807  01629A  0EE6               	movlw	-26
 14808  01629C  006F FF8C  F03E    	movff	plusw1,btemp+20
 14809  0162A2  0EFF               	movlw	255
 14810  0162A4  223E               	addwfc	(btemp+20)^0,f,c
 14811  0162A6  0EE7               	movlw	-25
 14812  0162A8  006F FF8C  F03F    	movff	plusw1,btemp+21
 14813  0162AE  0EFF               	movlw	255
 14814  0162B0  223F               	addwfc	(btemp+21)^0,f,c
 14815  0162B2  0EE8               	movlw	-24
 14816  0162B4  006F FF8C  F040    	movff	plusw1,btemp+22
 14817  0162BA  0EFF               	movlw	255
 14818  0162BC  2240               	addwfc	(btemp+22)^0,f,c
 14819  0162BE  0EE9               	movlw	-23
 14820  0162C0  006F FF8C  F041    	movff	plusw1,btemp+23
 14821  0162C6  0EFF               	movlw	255
 14822  0162C8  2241               	addwfc	(btemp+23)^0,f,c
 14823  0162CA  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14824  0162D0  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14825  0162D6  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14826  0162DC  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14827  0162E2  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14828  0162E8  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14829  0162EE  0060  F103  FFE6   	movff	btemp+22,postinc1
 14830  0162F4  0060  F107  FFE6   	movff	btemp+23,postinc1
 14831  0162FA  ECF0  F0E7         	call	___aomod	;wreg free
 14832  0162FE  52E5               	movf	postdec1,f,c
 14833  016300  006F FF9C  F041    	movff	indf1,btemp+23
 14834  016306  52E5               	movf	postdec1,f,c
 14835  016308  006F FF9C  F040    	movff	indf1,btemp+22
 14836  01630E  52E5               	movf	postdec1,f,c
 14837  016310  006F FF9C  F03F    	movff	indf1,btemp+21
 14838  016316  52E5               	movf	postdec1,f,c
 14839  016318  006F FF9C  F03E    	movff	indf1,btemp+20
 14840  01631E  52E5               	movf	postdec1,f,c
 14841  016320  006F FF9C  F03D    	movff	indf1,btemp+19
 14842  016326  52E5               	movf	postdec1,f,c
 14843  016328  006F FF9C  F03C    	movff	indf1,btemp+18
 14844  01632E  52E5               	movf	postdec1,f,c
 14845  016330  006F FF9C  F03B    	movff	indf1,btemp+17
 14846  016336  52E5               	movf	postdec1,f,c
 14847  016338  006F FF9C  F03A    	movff	indf1,btemp+16
 14848  01633E  0EF8               	movlw	248
 14849  016340  26E1               	addwf	fsr1l,f,c
 14850  016342  0EFF               	movlw	255
 14851  016344  22E2               	addwfc	fsr1h,f,c
 14852  016346  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14853  01634C  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14854                           
 14855                           ;stkvar	_rem @ sp[(-14)+4]
 14856  016352  0EF6               	movlw	-10
 14857  016354  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14858  01635A  0EF7               	movlw	-9
 14859  01635C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14860                           
 14861                           ;stkvar	_rem @ sp[(-14)+4]
 14862  016362  0EF7               	movlw	-9
 14863  016364  AEE3               	btfss	plusw1,7,c
 14864  016366  D015               	goto	l11771
 14865                           
 14866                           ;stkvar	_cycles @ sp[(-14)+12]
 14867  016368  50E1               	movf	fsr1l,w,c
 14868  01636A  0FFE               	addlw	-2
 14869  01636C  6ED9               	movwf	fsr2l,c
 14870  01636E  50E2               	movf	fsr1h,w,c
 14871  016370  6EDA               	movwf	fsr2h,c
 14872  016372  0EFF               	movlw	255
 14873  016374  22DA               	addwfc	fsr2h,f,c
 14874  016376  06DE               	decf	postinc2,f,c
 14875  016378  0E00               	movlw	0
 14876  01637A  5ADD               	subwfb	postdec2,f,c
 14877                           
 14878                           ;stkvar	_rem @ sp[(-14)+4]
 14879  01637C  50E1               	movf	fsr1l,w,c
 14880  01637E  0FF6               	addlw	-10
 14881  016380  6ED9               	movwf	fsr2l,c
 14882  016382  50E2               	movf	fsr1h,w,c
 14883  016384  6EDA               	movwf	fsr2h,c
 14884  016386  0EFF               	movlw	255
 14885  016388  22DA               	addwfc	fsr2h,f,c
 14886  01638A  0E90               	movlw	144
 14887  01638C  26DE               	addwf	postinc2,f,c
 14888  01638E  0E01               	movlw	1
 14889  016390  22DD               	addwfc	postdec2,f,c
 14890  016392                     l11771:
 14891                           
 14892                           ;stkvar	_rem @ sp[(-14)+4]
 14893  016392  0EF6               	movlw	-10
 14894  016394  006F FF8C  F02A    	movff	plusw1,btemp
 14895  01639A  0EF7               	movlw	-9
 14896  01639C  50E3               	movf	plusw1,w,c
 14897  01639E  102A               	iorwf	btemp^0,w,c
 14898  0163A0  A4D8               	btfss	status,2,c
 14899  0163A2  D015               	goto	l11779
 14900                           
 14901                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14902  0163A4  0EE8               	movlw	-24
 14903  0163A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 14904  0163AC  0EE9               	movlw	-23
 14905  0163AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 14906  0163B4  0E01               	movlw	1
 14907  0163B6  6EDE               	movwf	postinc2,c
 14908  0163B8  0E00               	movlw	0
 14909  0163BA  6EDD               	movwf	postdec2,c
 14910                           
 14911                           ;stkvar	_centuries @ sp[(-14)+8]
 14912  0163BC  0EFA               	movlw	-6
 14913  0163BE  6AE3               	clrf	plusw1,c
 14914  0163C0  0EFB               	movlw	-5
 14915  0163C2  6AE3               	clrf	plusw1,c
 14916  0163C4                     l11777:
 14917                           
 14918                           ;stkvar	_leaps @ sp[(-14)+10]
 14919  0163C4  0EFC               	movlw	-4
 14920  0163C6  6AE3               	clrf	plusw1,c
 14921  0163C8  0EFD               	movlw	-3
 14922  0163CA  6AE3               	clrf	plusw1,c
 14923  0163CC  D0D6               	goto	l11811
 14924  0163CE                     l11779:
 14925                           
 14926                           ;stkvar	_rem @ sp[(-14)+4]
 14927  0163CE  0EF7               	movlw	-9
 14928  0163D0  BEE3               	btfsc	plusw1,7,c
 14929  0163D2  D04A               	goto	l11791
 14930  0163D4  0EF7               	movlw	-9
 14931  0163D6  50E3               	movf	plusw1,w,c
 14932  0163D8  E108               	bnz	u10870
 14933  0163DA  0EF6               	movlw	-10
 14934  0163DC  006F FF8C  F02A    	movff	plusw1,btemp
 14935  0163E2  0EC8               	movlw	200
 14936  0163E4  5E2A               	subwf	btemp^0,f,c
 14937  0163E6  A0D8               	btfss	status,0,c
 14938  0163E8  D03F               	goto	l11791
 14939  0163EA                     u10870:
 14940                           
 14941                           ;stkvar	_rem @ sp[(-14)+4]
 14942  0163EA  0EF7               	movlw	-9
 14943  0163EC  BEE3               	btfsc	plusw1,7,c
 14944  0163EE  D025               	goto	l11787
 14945  0163F0  0EF6               	movlw	-10
 14946  0163F2  006F FF8C  F02A    	movff	plusw1,btemp
 14947  0163F8  0E2C               	movlw	44
 14948  0163FA  5E2A               	subwf	btemp^0,f,c
 14949  0163FC  0EF7               	movlw	-9
 14950  0163FE  006F FF8C  F02A    	movff	plusw1,btemp
 14951  016404  0E01               	movlw	1
 14952  016406  5A2A               	subwfb	btemp^0,f,c
 14953  016408  A0D8               	btfss	status,0,c
 14954  01640A  D017               	goto	l11787
 14955  01640C  0E03               	movlw	3
 14956  01640E  6E34               	movwf	(btemp+10)^0,c
 14957  016410  0E00               	movlw	0
 14958  016412  6E35               	movwf	(btemp+11)^0,c
 14959                           
 14960                           ;stkvar	_centuries @ sp[(-14)+8]
 14961  016414  0EFA               	movlw	-6
 14962  016416  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14963  01641C  0EFB               	movlw	-5
 14964  01641E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14965                           
 14966                           ;stkvar	_rem @ sp[(-14)+4]
 14967  016424  50E1               	movf	fsr1l,w,c
 14968  016426  0FF6               	addlw	-10
 14969  016428  6ED9               	movwf	fsr2l,c
 14970  01642A  50E2               	movf	fsr1h,w,c
 14971  01642C  6EDA               	movwf	fsr2h,c
 14972  01642E  0EFF               	movlw	255
 14973  016430  22DA               	addwfc	fsr2h,f,c
 14974  016432  0ED4               	movlw	212
 14975  016434  26DE               	addwf	postinc2,f,c
 14976  016436  0EFE               	movlw	254
 14977  016438  D015               	goto	L14
 14978  01643A                     l11787:
 14979  01643A  0E02               	movlw	2
 14980  01643C  6E34               	movwf	(btemp+10)^0,c
 14981  01643E  0E00               	movlw	0
 14982  016440  6E35               	movwf	(btemp+11)^0,c
 14983                           
 14984                           ;stkvar	_centuries @ sp[(-14)+8]
 14985  016442  0EFA               	movlw	-6
 14986  016444  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14987  01644A  0EFB               	movlw	-5
 14988  01644C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14989                           
 14990                           ;stkvar	_rem @ sp[(-14)+4]
 14991  016452  50E1               	movf	fsr1l,w,c
 14992  016454  0FF6               	addlw	-10
 14993  016456  6ED9               	movwf	fsr2l,c
 14994  016458  50E2               	movf	fsr1h,w,c
 14995  01645A  6EDA               	movwf	fsr2h,c
 14996  01645C  0EFF               	movlw	255
 14997  01645E  22DA               	addwfc	fsr2h,f,c
 14998  016460  0E38               	movlw	56
 14999  016462  D024               	goto	L15
 15000  016464                     L14:
 15001  016464  22DD               	addwfc	postdec2,f,c
 15002  016466  D029               	goto	l11799
 15003  016468                     l11791:
 15004                           
 15005                           ;stkvar	_rem @ sp[(-14)+4]
 15006  016468  0EF7               	movlw	-9
 15007  01646A  BEE3               	btfsc	plusw1,7,c
 15008  01646C  D022               	goto	l11797
 15009  01646E  0EF7               	movlw	-9
 15010  016470  50E3               	movf	plusw1,w,c
 15011  016472  E108               	bnz	u10890
 15012  016474  0EF6               	movlw	-10
 15013  016476  006F FF8C  F02A    	movff	plusw1,btemp
 15014  01647C  0E64               	movlw	100
 15015  01647E  5E2A               	subwf	btemp^0,f,c
 15016  016480  A0D8               	btfss	status,0,c
 15017  016482  D017               	goto	l11797
 15018  016484                     u10890:
 15019  016484  0E01               	movlw	1
 15020  016486  6E34               	movwf	(btemp+10)^0,c
 15021  016488  0E00               	movlw	0
 15022  01648A  6E35               	movwf	(btemp+11)^0,c
 15023                           
 15024                           ;stkvar	_centuries @ sp[(-14)+8]
 15025  01648C  0EFA               	movlw	-6
 15026  01648E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15027  016494  0EFB               	movlw	-5
 15028  016496  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15029                           
 15030                           ;stkvar	_rem @ sp[(-14)+4]
 15031  01649C  50E1               	movf	fsr1l,w,c
 15032  01649E  0FF6               	addlw	-10
 15033  0164A0  6ED9               	movwf	fsr2l,c
 15034  0164A2  50E2               	movf	fsr1h,w,c
 15035  0164A4  6EDA               	movwf	fsr2h,c
 15036  0164A6  0EFF               	movlw	255
 15037  0164A8  22DA               	addwfc	fsr2h,f,c
 15038  0164AA  0E9C               	movlw	156
 15039  0164AC                     L15:
 15040  0164AC  26DE               	addwf	postinc2,f,c
 15041  0164AE  0EFF               	movlw	255
 15042  0164B0  D7D9               	goto	L14
 15043  0164B2                     l11797:
 15044                           
 15045                           ;stkvar	_centuries @ sp[(-14)+8]
 15046  0164B2  0EFA               	movlw	-6
 15047  0164B4  6AE3               	clrf	plusw1,c
 15048  0164B6  0EFB               	movlw	-5
 15049  0164B8  6AE3               	clrf	plusw1,c
 15050  0164BA                     l11799:
 15051                           
 15052                           ;stkvar	_rem @ sp[(-14)+4]
 15053  0164BA  0EF6               	movlw	-10
 15054  0164BC  006F FF8C  F02A    	movff	plusw1,btemp
 15055  0164C2  0EF7               	movlw	-9
 15056  0164C4  50E3               	movf	plusw1,w,c
 15057  0164C6  102A               	iorwf	btemp^0,w,c
 15058  0164C8  A4D8               	btfss	status,2,c
 15059  0164CA  D00D               	goto	l11805
 15060                           
 15061                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15062  0164CC  0EE8               	movlw	-24
 15063  0164CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15064  0164D4  0EE9               	movlw	-23
 15065  0164D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15066  0164DC  0E00               	movlw	0
 15067  0164DE  6EDE               	movwf	postinc2,c
 15068  0164E0  0E00               	movlw	0
 15069  0164E2  6EDD               	movwf	postdec2,c
 15070  0164E4  D76F               	goto	l11777
 15071  0164E6                     l11805:
 15072                           
 15073                           ;stkvar	_rem @ sp[(-14)+4]
 15074  0164E6  0EF6               	movlw	-10
 15075  0164E8  006F FF8C  F034    	movff	plusw1,btemp+10
 15076  0164EE  0EF7               	movlw	-9
 15077  0164F0  006F FF8C  F035    	movff	plusw1,btemp+11
 15078  0164F6  90D8               	bcf	status,0,c
 15079  0164F8  3235               	rrcf	(btemp+11)^0,f,c
 15080  0164FA  3234               	rrcf	(btemp+10)^0,f,c
 15081  0164FC  90D8               	bcf	status,0,c
 15082  0164FE  3235               	rrcf	(btemp+11)^0,f,c
 15083  016500  3234               	rrcf	(btemp+10)^0,f,c
 15084                           
 15085                           ;stkvar	_leaps @ sp[(-14)+10]
 15086  016502  0EFC               	movlw	-4
 15087  016504  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15088  01650A  0EFD               	movlw	-3
 15089  01650C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15090  016512  0E03               	movlw	3
 15091  016514  6E34               	movwf	(btemp+10)^0,c
 15092  016516  0E00               	movlw	0
 15093  016518  6E35               	movwf	(btemp+11)^0,c
 15094                           
 15095                           ;stkvar	_rem @ sp[(-14)+4]
 15096  01651A  0EF6               	movlw	-10
 15097  01651C  006F FF8C  F02A    	movff	plusw1,btemp
 15098  016522  5034               	movf	(btemp+10)^0,w,c
 15099  016524  162A               	andwf	btemp^0,f,c
 15100  016526  0EF6               	movlw	-10
 15101  016528  0060  F0AB  FFE3   	movff	btemp,plusw1
 15102  01652E  0EF7               	movlw	-9
 15103  016530  006F FF8C  F02A    	movff	plusw1,btemp
 15104  016536  5035               	movf	(btemp+11)^0,w,c
 15105  016538  162A               	andwf	btemp^0,f,c
 15106  01653A  0EF7               	movlw	-9
 15107  01653C  0060  F0AB  FFE3   	movff	btemp,plusw1
 15108                           
 15109                           ;stkvar	_rem @ sp[(-14)+4]
 15110  016542  0EF6               	movlw	-10
 15111  016544  006F FF8C  F02A    	movff	plusw1,btemp
 15112  01654A  0EF7               	movlw	-9
 15113  01654C  50E3               	movf	plusw1,w,c
 15114  01654E  102A               	iorwf	btemp^0,w,c
 15115  016550  A4D8               	btfss	status,2,c
 15116  016552  D002               	goto	u10910
 15117  016554  0E01               	movlw	1
 15118  016556  D001               	goto	u10920
 15119  016558                     u10910:
 15120  016558  0E00               	movlw	0
 15121  01655A                     u10920:
 15122  01655A  6E34               	movwf	(btemp+10)^0,c
 15123  01655C  6A35               	clrf	(btemp+11)^0,c
 15124                           
 15125                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15126  01655E  0EE8               	movlw	-24
 15127  016560  006F FF8F FFD9     	movff	plusw1,fsr2l
 15128  016566  0EE9               	movlw	-23
 15129  016568  006F FF8F FFDA     	movff	plusw1,fsr2h
 15130  01656E  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15131  016574  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15132  01657A                     l11811:
 15133                           
 15134                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15135  01657A  0EE8               	movlw	-24
 15136  01657C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15137  016582  0EE9               	movlw	-23
 15138  016584  006F FF8F FFDA     	movff	plusw1,fsr2h
 15139  01658A  006F FF78  F034    	movff	postinc2,btemp+10
 15140  016590  006F FF74  F035    	movff	postdec2,btemp+11
 15141                           
 15142                           ;stkvar	_centuries @ sp[(-14)+8]
 15143  016596  0EFA               	movlw	-6
 15144  016598  006F FF8C  F032    	movff	plusw1,btemp+8
 15145  01659E  0EFB               	movlw	-5
 15146  0165A0  006F FF8C  F033    	movff	plusw1,btemp+9
 15147  0165A6  0E18               	movlw	24
 15148  0165A8  0232               	mulwf	(btemp+8)^0,c
 15149  0165AA  006F FFCC  F030    	movff	prodl,btemp+6
 15150  0165B0  006F FFD0  F031    	movff	prodh,btemp+7
 15151  0165B6  0233               	mulwf	(btemp+9)^0,c
 15152  0165B8  50F3               	movf	prodl,w,c
 15153  0165BA  2631               	addwf	(btemp+7)^0,f,c
 15154                           
 15155                           ;stkvar	_cycles @ sp[(-14)+12]
 15156  0165BC  0EFE               	movlw	-2
 15157  0165BE  006F FF8C  F032    	movff	plusw1,btemp+8
 15158  0165C4  0EFF               	movlw	-1
 15159  0165C6  006F FF8C  F033    	movff	plusw1,btemp+9
 15160  0165CC  0E61               	movlw	97
 15161  0165CE  0232               	mulwf	(btemp+8)^0,c
 15162  0165D0  006F FFCC  F02E    	movff	prodl,btemp+4
 15163  0165D6  006F FFD0  F02F    	movff	prodh,btemp+5
 15164  0165DC  0233               	mulwf	(btemp+9)^0,c
 15165  0165DE  50F3               	movf	prodl,w,c
 15166  0165E0  262F               	addwf	(btemp+5)^0,f,c
 15167  0165E2  5030               	movf	(btemp+6)^0,w,c
 15168  0165E4  262E               	addwf	(btemp+4)^0,f,c
 15169  0165E6  5031               	movf	(btemp+7)^0,w,c
 15170  0165E8  222F               	addwfc	(btemp+5)^0,f,c
 15171  0165EA  5034               	movf	(btemp+10)^0,w,c
 15172  0165EC  5E2E               	subwf	(btemp+4)^0,f,c
 15173  0165EE  5035               	movf	(btemp+11)^0,w,c
 15174  0165F0  5A2F               	subwfb	(btemp+5)^0,f,c
 15175                           
 15176                           ;stkvar	_leaps @ sp[(-14)+10]
 15177  0165F2  50E1               	movf	fsr1l,w,c
 15178  0165F4  0FFC               	addlw	-4
 15179  0165F6  6ED9               	movwf	fsr2l,c
 15180  0165F8  50E2               	movf	fsr1h,w,c
 15181  0165FA  6EDA               	movwf	fsr2h,c
 15182  0165FC  0EFF               	movlw	255
 15183  0165FE  22DA               	addwfc	fsr2h,f,c
 15184  016600  502E               	movf	(btemp+4)^0,w,c
 15185  016602  26DE               	addwf	postinc2,f,c
 15186  016604  502F               	movf	(btemp+5)^0,w,c
 15187  016606  22DD               	addwfc	postdec2,f,c
 15188  016608  0E80               	movlw	128
 15189  01660A  6EE6               	movwf	postinc1,c
 15190  01660C  0E51               	movlw	81
 15191  01660E  6EE6               	movwf	postinc1,c
 15192  016610  0E01               	movlw	1
 15193  016612  6EE6               	movwf	postinc1,c
 15194  016614  0E00               	movlw	0
 15195  016616  6EE6               	movwf	postinc1,c
 15196  016618  0E00               	movlw	0
 15197  01661A  6EE6               	movwf	postinc1,c
 15198  01661C  0E00               	movlw	0
 15199  01661E  6EE6               	movwf	postinc1,c
 15200  016620  0E00               	movlw	0
 15201  016622  6EE6               	movwf	postinc1,c
 15202  016624  0E00               	movlw	0
 15203  016626  6EE6               	movwf	postinc1,c
 15204                           
 15205                           ;stkvar	_leaps @ sp[(-22)+10]
 15206  016628  0EF4               	movlw	-12
 15207  01662A  006F FF8C  F03A    	movff	plusw1,btemp+16
 15208  016630  0EF5               	movlw	-11
 15209  016632  006F FF8C  F03B    	movff	plusw1,btemp+17
 15210  016638  6A3C               	clrf	(btemp+18)^0,c
 15211  01663A  BE3B               	btfsc	(btemp+17)^0,7,c
 15212  01663C  683C               	setf	(btemp+18)^0,c
 15213  01663E  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 15214  016644  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 15215  01664A  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 15216  016650  0060  F0F0  F040   	movff	btemp+18,btemp+22
 15217  016656  0060  F0F0  F041   	movff	btemp+18,btemp+23
 15218  01665C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15219  016662  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15220  016668  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15221  01666E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15222  016674  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15223  01667A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15224  016680  0060  F103  FFE6   	movff	btemp+22,postinc1
 15225  016686  0060  F107  FFE6   	movff	btemp+23,postinc1
 15226  01668C  ECFB  F0F8         	call	___omul	;wreg free
 15227  016690  52E5               	movf	postdec1,f,c
 15228  016692  006F FF9C  F041    	movff	indf1,btemp+23
 15229  016698  52E5               	movf	postdec1,f,c
 15230  01669A  006F FF9C  F040    	movff	indf1,btemp+22
 15231  0166A0  52E5               	movf	postdec1,f,c
 15232  0166A2  006F FF9C  F03F    	movff	indf1,btemp+21
 15233  0166A8  52E5               	movf	postdec1,f,c
 15234  0166AA  006F FF9C  F03E    	movff	indf1,btemp+20
 15235  0166B0  52E5               	movf	postdec1,f,c
 15236  0166B2  006F FF9C  F03D    	movff	indf1,btemp+19
 15237  0166B8  52E5               	movf	postdec1,f,c
 15238  0166BA  006F FF9C  F03C    	movff	indf1,btemp+18
 15239  0166C0  52E5               	movf	postdec1,f,c
 15240  0166C2  006F FF9C  F03B    	movff	indf1,btemp+17
 15241  0166C8  52E5               	movf	postdec1,f,c
 15242  0166CA  006F FF9C  F03A    	movff	indf1,btemp+16
 15243  0166D0  0EF8               	movlw	248
 15244  0166D2  26E1               	addwf	fsr1l,f,c
 15245  0166D4  0EFF               	movlw	255
 15246  0166D6  22E2               	addwfc	fsr1h,f,c
 15247  0166D8  0E80               	movlw	128
 15248  0166DA  6EE6               	movwf	postinc1,c
 15249  0166DC  0E33               	movlw	51
 15250  0166DE  6EE6               	movwf	postinc1,c
 15251  0166E0  0EE1               	movlw	225
 15252  0166E2  6EE6               	movwf	postinc1,c
 15253  0166E4  0E01               	movlw	1
 15254  0166E6  6EE6               	movwf	postinc1,c
 15255  0166E8  0E00               	movlw	0
 15256  0166EA  6EE6               	movwf	postinc1,c
 15257  0166EC  0E00               	movlw	0
 15258  0166EE  6EE6               	movwf	postinc1,c
 15259  0166F0  0E00               	movlw	0
 15260  0166F2  6EE6               	movwf	postinc1,c
 15261  0166F4  0E00               	movlw	0
 15262  0166F6  6EE6               	movwf	postinc1,c
 15263                           
 15264                           ;stkvar	_year @ sp[(-22)+-8]
 15265  0166F8  50E1               	movf	fsr1l,w,c
 15266  0166FA  0FE2               	addlw	-30
 15267  0166FC  6ED9               	movwf	fsr2l,c
 15268  0166FE  50E2               	movf	fsr1h,w,c
 15269  016700  6EDA               	movwf	fsr2h,c
 15270  016702  0EFF               	movlw	255
 15271  016704  22DA               	addwfc	fsr2h,f,c
 15272  016706  006F FF7B FFE6     	movff	postinc2,postinc1
 15273  01670C  006F FF7B FFE6     	movff	postinc2,postinc1
 15274  016712  006F FF7B FFE6     	movff	postinc2,postinc1
 15275  016718  006F FF7B FFE6     	movff	postinc2,postinc1
 15276  01671E  006F FF7B FFE6     	movff	postinc2,postinc1
 15277  016724  006F FF7B FFE6     	movff	postinc2,postinc1
 15278  01672A  006F FF7B FFE6     	movff	postinc2,postinc1
 15279  016730  006F FF7B FFE6     	movff	postinc2,postinc1
 15280  016736  ECFB  F0F8         	call	___omul	;wreg free
 15281  01673A  52E5               	movf	postdec1,f,c
 15282  01673C  006F FF9C  F049    	movff	indf1,btemp+31
 15283  016742  52E5               	movf	postdec1,f,c
 15284  016744  006F FF9C  F048    	movff	indf1,btemp+30
 15285  01674A  52E5               	movf	postdec1,f,c
 15286  01674C  006F FF9C  F047    	movff	indf1,btemp+29
 15287  016752  52E5               	movf	postdec1,f,c
 15288  016754  006F FF9C  F046    	movff	indf1,btemp+28
 15289  01675A  52E5               	movf	postdec1,f,c
 15290  01675C  006F FF9C  F045    	movff	indf1,btemp+27
 15291  016762  52E5               	movf	postdec1,f,c
 15292  016764  006F FF9C  F044    	movff	indf1,btemp+26
 15293  01676A  52E5               	movf	postdec1,f,c
 15294  01676C  006F FF9C  F043    	movff	indf1,btemp+25
 15295  016772  52E5               	movf	postdec1,f,c
 15296  016774  006F FF9C  F042    	movff	indf1,btemp+24
 15297  01677A  0EF8               	movlw	248
 15298  01677C  26E1               	addwf	fsr1l,f,c
 15299  01677E  0EFF               	movlw	255
 15300  016780  22E2               	addwfc	fsr1h,f,c
 15301  016782  503A               	movf	(btemp+16)^0,w,c
 15302  016784  2442               	addwf	(btemp+24)^0,w,c
 15303  016786  6E32               	movwf	(btemp+8)^0,c
 15304  016788  503B               	movf	(btemp+17)^0,w,c
 15305  01678A  2043               	addwfc	(btemp+25)^0,w,c
 15306  01678C  6E33               	movwf	(btemp+9)^0,c
 15307  01678E  503C               	movf	(btemp+18)^0,w,c
 15308  016790  2044               	addwfc	(btemp+26)^0,w,c
 15309  016792  6E34               	movwf	(btemp+10)^0,c
 15310  016794  503D               	movf	(btemp+19)^0,w,c
 15311  016796  2045               	addwfc	(btemp+27)^0,w,c
 15312  016798  6E35               	movwf	(btemp+11)^0,c
 15313  01679A  503E               	movf	(btemp+20)^0,w,c
 15314  01679C  2046               	addwfc	(btemp+28)^0,w,c
 15315  01679E  6E36               	movwf	(btemp+12)^0,c
 15316  0167A0  503F               	movf	(btemp+21)^0,w,c
 15317  0167A2  2047               	addwfc	(btemp+29)^0,w,c
 15318  0167A4  6E37               	movwf	(btemp+13)^0,c
 15319  0167A6  5040               	movf	(btemp+22)^0,w,c
 15320  0167A8  2048               	addwfc	(btemp+30)^0,w,c
 15321  0167AA  6E38               	movwf	(btemp+14)^0,c
 15322  0167AC  5041               	movf	(btemp+23)^0,w,c
 15323  0167AE  2049               	addwfc	(btemp+31)^0,w,c
 15324  0167B0  6E39               	movwf	(btemp+15)^0,c
 15325  0167B2  0E00               	movlw	0
 15326  0167B4  2432               	addwf	(btemp+8)^0,w,c
 15327  0167B6  6E3A               	movwf	(btemp+16)^0,c
 15328  0167B8  0E77               	movlw	119
 15329  0167BA  2033               	addwfc	(btemp+9)^0,w,c
 15330  0167BC  6E3B               	movwf	(btemp+17)^0,c
 15331  0167BE  0E76               	movlw	118
 15332  0167C0  2034               	addwfc	(btemp+10)^0,w,c
 15333  0167C2  6E3C               	movwf	(btemp+18)^0,c
 15334  0167C4  0E7C               	movlw	124
 15335  0167C6  2035               	addwfc	(btemp+11)^0,w,c
 15336  0167C8  6E3D               	movwf	(btemp+19)^0,c
 15337  0167CA  0EFF               	movlw	255
 15338  0167CC  2036               	addwfc	(btemp+12)^0,w,c
 15339  0167CE  6E3E               	movwf	(btemp+20)^0,c
 15340  0167D0  0EFF               	movlw	255
 15341  0167D2  2037               	addwfc	(btemp+13)^0,w,c
 15342  0167D4  6E3F               	movwf	(btemp+21)^0,c
 15343  0167D6  0EFF               	movlw	255
 15344  0167D8  2038               	addwfc	(btemp+14)^0,w,c
 15345  0167DA  6E40               	movwf	(btemp+22)^0,c
 15346  0167DC  0EFF               	movlw	255
 15347  0167DE  2039               	addwfc	(btemp+15)^0,w,c
 15348  0167E0  6E41               	movwf	(btemp+23)^0,c
 15349  0167E2                     L13:
 15350                           
 15351                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 15352  0167E2  0EEA               	movlw	-22
 15353  0167E4  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 15354  0167EA  0EEB               	movlw	-21
 15355  0167EC  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 15356  0167F2  0EEC               	movlw	-20
 15357  0167F4  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 15358  0167FA  0EED               	movlw	-19
 15359  0167FC  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 15360  016802  0EEE               	movlw	-18
 15361  016804  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 15362  01680A  0EEF               	movlw	-17
 15363  01680C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 15364  016812  0EF0               	movlw	-16
 15365  016814  0060  F103  FFE3   	movff	btemp+22,plusw1
 15366  01681A  0EF1               	movlw	-15
 15367  01681C  0060  F107  FFE3   	movff	btemp+23,plusw1
 15368                           
 15369                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 15370  016822  0EF2               	movlw	242
 15371  016824  26E1               	addwf	fsr1l,f,c
 15372  016826  0EFF               	movlw	255
 15373  016828  22E2               	addwfc	fsr1h,f,c
 15374  01682A  0012               	return		;funcret
 15375  01682C                     __end_of___year_to_secs:
 15376                           	opt callstack 0
 15377                           
 15378 ;; *************** function ___month_to_secs *****************
 15379 ;; Defined at:
 15380 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;  month           2  [STACK] int 
 15383 ;;  is_leap         2  [STACK] int 
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;  t               4  [STACK] long 
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  4  [STACK] long 
 15388 ;; Registers used:
 15389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15399 ;;Total ram usage:        0 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; Hardware stack levels required when called:   15
 15402 ;; This function calls:
 15403 ;;		Nothing
 15404 ;; This function is called by:
 15405 ;;		_rule_to_secs
 15406 ;; This function uses a reentrant model
 15407 ;;
 15408                           
 15409                           	psect	text44
 15410  000596                     __ptext44:
 15411                           	opt callstack 0
 15412  000596                     ___month_to_secs:
 15413                           	opt callstack 0
 15414                           
 15415                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15416  000596  52E6               	movf	postinc1,f,c
 15417  000598  52E6               	movf	postinc1,f,c
 15418  00059A  52E6               	movf	postinc1,f,c
 15419  00059C  52E6               	movf	postinc1,f,c
 15420                           
 15421                           ;stkvar	_month @ sp[(-4)+-2]
 15422                           
 15423                           ;incstack = 0
 15424  00059E  0EFA               	movlw	-6
 15425  0005A0  006F FF8C  F034    	movff	plusw1,btemp+10
 15426  0005A6  0EFB               	movlw	-5
 15427  0005A8  006F FF8C  F035    	movff	plusw1,btemp+11
 15428  0005AE  90D8               	bcf	status,0,c
 15429  0005B0  3634               	rlcf	(btemp+10)^0,f,c
 15430  0005B2  3635               	rlcf	(btemp+11)^0,f,c
 15431  0005B4  90D8               	bcf	status,0,c
 15432  0005B6  3634               	rlcf	(btemp+10)^0,f,c
 15433  0005B8  3635               	rlcf	(btemp+11)^0,f,c
 15434  0005BA  0EE7               	movlw	low ___month_to_secs@secs_through_month
 15435  0005BC  2434               	addwf	(btemp+10)^0,w,c
 15436  0005BE  6EF6               	movwf	tblptrl,c
 15437  0005C0  0EF7               	movlw	high ___month_to_secs@secs_through_month
 15438  0005C2  2035               	addwfc	(btemp+11)^0,w,c
 15439  0005C4  6EF7               	movwf	tblptrh,c
 15440  0005C6                     	if	1	;There are 3 active tblptr bytes
 15441  0005C6  6AF8               	clrf	tblptru,c
 15442  0005C8  0E00               	movlw	low (__mediumconst shr (0+16))
 15443  0005CA  22F8               	addwfc	tblptru,f,c
 15444  0005CC                     	endif
 15445  0005CC  0009               	tblrd		*+
 15446  0005CE  006F FFD4  F032    	movff	tablat,btemp+8
 15447  0005D4  0009               	tblrd		*+
 15448  0005D6  006F FFD4  F033    	movff	tablat,btemp+9
 15449  0005DC  0009               	tblrd		*+
 15450  0005DE  006F FFD4  F034    	movff	tablat,btemp+10
 15451  0005E4  0009               	tblrd		*+
 15452  0005E6  006F FFD4  F035    	movff	tablat,btemp+11
 15453                           
 15454                           ;stkvar	_t @ sp[(-4)+0]
 15455  0005EC  0EFC               	movlw	-4
 15456  0005EE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15457  0005F4  0EFD               	movlw	-3
 15458  0005F6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15459  0005FC  0EFE               	movlw	-2
 15460  0005FE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15461  000604  0EFF               	movlw	-1
 15462  000606  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15463                           
 15464                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15465  00060C  0EF8               	movlw	-8
 15466  00060E  006F FF8C  F02A    	movff	plusw1,btemp
 15467  000614  0EF9               	movlw	-7
 15468  000616  50E3               	movf	plusw1,w,c
 15469  000618  102A               	iorwf	btemp^0,w,c
 15470  00061A  B4D8               	btfsc	status,2,c
 15471  00061C  D01D               	goto	l11825
 15472                           
 15473                           ;stkvar	_month @ sp[(-4)+-2]
 15474  00061E  0EFB               	movlw	-5
 15475  000620  BEE3               	btfsc	plusw1,7,c
 15476  000622  D01A               	goto	l11825
 15477  000624  0EFB               	movlw	-5
 15478  000626  50E3               	movf	plusw1,w,c
 15479  000628  E108               	bnz	u10940
 15480  00062A  0EFA               	movlw	-6
 15481  00062C  006F FF8C  F02A    	movff	plusw1,btemp
 15482  000632  0E02               	movlw	2
 15483  000634  5E2A               	subwf	btemp^0,f,c
 15484  000636  A0D8               	btfss	status,0,c
 15485  000638  D00F               	goto	l11825
 15486  00063A                     u10940:
 15487                           
 15488                           ;stkvar	_t @ sp[(-4)+0]
 15489  00063A  50E1               	movf	fsr1l,w,c
 15490  00063C  0FFC               	addlw	-4
 15491  00063E  6ED9               	movwf	fsr2l,c
 15492  000640  50E2               	movf	fsr1h,w,c
 15493  000642  6EDA               	movwf	fsr2h,c
 15494  000644  0EFF               	movlw	255
 15495  000646  22DA               	addwfc	fsr2h,f,c
 15496  000648  0E80               	movlw	128
 15497  00064A  26DE               	addwf	postinc2,f,c
 15498  00064C  0E51               	movlw	81
 15499  00064E  22DE               	addwfc	postinc2,f,c
 15500  000650  0E01               	movlw	1
 15501  000652  22DE               	addwfc	postinc2,f,c
 15502  000654  0E00               	movlw	0
 15503  000656  22DE               	addwfc	postinc2,f,c
 15504  000658                     l11825:
 15505                           
 15506                           ;stkvar	_t @ sp[(-4)+0]
 15507  000658  0EFC               	movlw	-4
 15508  00065A  006F FF8C  F02A    	movff	plusw1,btemp
 15509  000660  0EFD               	movlw	-3
 15510  000662  006F FF8C  F02B    	movff	plusw1,btemp+1
 15511  000668  0EFE               	movlw	-2
 15512  00066A  006F FF8C  F02C    	movff	plusw1,btemp+2
 15513  000670  0EFF               	movlw	-1
 15514  000672  006F FF8C  F02D    	movff	plusw1,btemp+3
 15515                           
 15516                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15517  000678  0EF8               	movlw	248
 15518  00067A  26E1               	addwf	fsr1l,f,c
 15519  00067C  0EFF               	movlw	255
 15520  00067E  22E2               	addwfc	fsr1h,f,c
 15521  000680  0012               	return		;funcret
 15522  000682                     __end_of___month_to_secs:
 15523                           	opt callstack 0
 15524                           
 15525 ;; *************** function _do_tzset *****************
 15526 ;; Defined at:
 15527 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15528 ;; Parameters:    Size  Location     Type
 15529 ;;		None
 15530 ;; Auto vars:     Size  Location     Type
 15531 ;;  s               2  [STACK] PTR const unsigned char 
 15532 ;;		 -> __gmt(4), 
 15533 ;; Return value:  Size  Location     Type
 15534 ;;                  1  [STACK] void 
 15535 ;; Registers used:
 15536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/39
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15546 ;;Total ram usage:        0 bytes
 15547 ;; Hardware stack levels used:    1
 15548 ;; Hardware stack levels required when called:   18
 15549 ;; This function calls:
 15550 ;;		_getname
 15551 ;;		_getoff
 15552 ;;		_getrule
 15553 ;; This function is called by:
 15554 ;;		___secs_to_zone
 15555 ;; This function uses a reentrant model
 15556 ;;
 15557                           
 15558                           	psect	text45
 15559  01BF08                     __ptext45:
 15560                           	opt callstack 0
 15561  01BF08                     _do_tzset:
 15562                           	opt callstack 0
 15563                           
 15564                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15565  01BF08  52E6               	movf	postinc1,f,c
 15566  01BF0A  52E6               	movf	postinc1,f,c
 15567                           
 15568                           ;stkvar	_s @ sp[(-2)+0]
 15569                           
 15570                           ;incstack = 0
 15571  01BF0C  0EF9               	movlw	high ___gmt
 15572  01BF0E  6E2A               	movwf	btemp^0,c
 15573  01BF10  0EFF               	movlw	-1
 15574  01BF12  0060  F0AB  FFE3   	movff	btemp,plusw1
 15575  01BF18  0E53               	movlw	low ___gmt
 15576  01BF1A  6E2A               	movwf	btemp^0,c
 15577  01BF1C  0EFE               	movlw	-2
 15578  01BF1E  0060  F0AB  FFE3   	movff	btemp,plusw1
 15579                           
 15580                           ;stkvar	_s @ sp[(-2)+0]
 15581  01BF24  0EFE               	movlw	254
 15582  01BF26  24E1               	addwf	fsr1l,w,c
 15583  01BF28  6E2A               	movwf	btemp^0,c
 15584  01BF2A  0EFF               	movlw	255
 15585  01BF2C  20E2               	addwfc	fsr1h,w,c
 15586  01BF2E  6E2B               	movwf	(btemp+1)^0,c
 15587  01BF30  0060  F0AB  FFE6   	movff	btemp,postinc1
 15588  01BF36  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15589  01BF3C  0EF6               	movlw	low _std_name
 15590  01BF3E  6EE6               	movwf	postinc1,c
 15591  01BF40  0E01               	movlw	high _std_name
 15592  01BF42  6EE6               	movwf	postinc1,c
 15593  01BF44  EC58  F0D8         	call	_getname	;wreg free
 15594  01BF48  0EF6               	movlw	low _std_name
 15595  01BF4A  0100               	movlb	0	; () banked
 15596  01BF4C  6F6C               	movwf	___tzname& (0+255),b
 15597  01BF4E  0E01               	movlw	high _std_name
 15598  01BF50  6F6D               	movwf	(___tzname+1)& (0+255),b
 15599                           
 15600                           ; BSR set to: 0
 15601                           ;stkvar	_s @ sp[(-2)+0]
 15602  01BF52  0EFE               	movlw	254
 15603  01BF54  24E1               	addwf	fsr1l,w,c
 15604  01BF56  6E2A               	movwf	btemp^0,c
 15605  01BF58  0EFF               	movlw	255
 15606  01BF5A  20E2               	addwfc	fsr1h,w,c
 15607  01BF5C  6E2B               	movwf	(btemp+1)^0,c
 15608  01BF5E  0060  F0AB  FFE6   	movff	btemp,postinc1
 15609  01BF64  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15610  01BF6A  EC10  F0E9         	call	_getoff	;wreg free
 15611  01BF6E  0060  F0A8  F070   	movff	btemp,___timezone
 15612  01BF74  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15613  01BF7A  0100               	movlb	0	; () banked
 15614  01BF7C  0E00               	movlw	0
 15615  01BF7E  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15616  01BF80  0EFF               	movlw	-1
 15617  01BF82  6F72               	movwf	(___timezone+2)& (0+255),b
 15618  01BF84  6F73               	movwf	(___timezone+3)& (0+255),b
 15619                           
 15620                           ; BSR set to: 0
 15621                           ;stkvar	_s @ sp[(-2)+0]
 15622  01BF86  0EFE               	movlw	254
 15623  01BF88  24E1               	addwf	fsr1l,w,c
 15624  01BF8A  6E2A               	movwf	btemp^0,c
 15625  01BF8C  0EFF               	movlw	255
 15626  01BF8E  20E2               	addwfc	fsr1h,w,c
 15627  01BF90  6E2B               	movwf	(btemp+1)^0,c
 15628  01BF92  0060  F0AB  FFE6   	movff	btemp,postinc1
 15629  01BF98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15630  01BF9E  0EEF               	movlw	low _dst_name
 15631  01BFA0  6EE6               	movwf	postinc1,c
 15632  01BFA2  0E01               	movlw	high _dst_name
 15633  01BFA4  6EE6               	movwf	postinc1,c
 15634  01BFA6  EC58  F0D8         	call	_getname	;wreg free
 15635  01BFAA  0EEF               	movlw	low _dst_name
 15636  01BFAC  0100               	movlb	0	; () banked
 15637  01BFAE  6F6E               	movwf	(___tzname+2)& (0+255),b
 15638  01BFB0  0E01               	movlw	high _dst_name
 15639  01BFB2  6F6F               	movwf	(___tzname+3)& (0+255),b
 15640                           
 15641                           ; BSR set to: 0
 15642  01BFB4  0101               	movlb	1	; () banked
 15643  01BFB6  51EF               	movf	_dst_name& (0+255),w,b
 15644  01BFB8  B4D8               	btfsc	status,2,c
 15645  01BFBA  D070               	goto	l3978
 15646                           
 15647                           ; BSR set to: 1
 15648  01BFBC  0E00               	movlw	0
 15649  01BFBE  0100               	movlb	0	; () banked
 15650  01BFC0  6FB9               	movwf	(___daylight+1)& (0+255),b
 15651  01BFC2  0E01               	movlw	1
 15652  01BFC4  6FB8               	movwf	___daylight& (0+255),b
 15653                           
 15654                           ; BSR set to: 0
 15655                           ;stkvar	_s @ sp[(-2)+0]
 15656  01BFC6  50E1               	movf	fsr1l,w,c
 15657  01BFC8  0FFE               	addlw	-2
 15658  01BFCA  6ED9               	movwf	fsr2l,c
 15659  01BFCC  50E2               	movf	fsr1h,w,c
 15660  01BFCE  6EDA               	movwf	fsr2h,c
 15661  01BFD0  0EFF               	movlw	255
 15662  01BFD2  22DA               	addwfc	fsr2h,f,c
 15663  01BFD4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15664  01BFDA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15665  01BFE0                     	if	0	;tblptru may be non-zero
 15666  01BFE0                     	endif
 15667  01BFE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15668  01BFE0  0E00               	movlw	low (__mediumconst shr (0+16))
 15669  01BFE2  6EF8               	movwf	tblptru,c
 15670  01BFE4                     	endif
 15671  01BFE4  0008               	tblrd		*
 15672  01BFE6  50F5               	movf	tablat,w,c
 15673  01BFE8  0A2B               	xorlw	43
 15674  01BFEA  B4D8               	btfsc	status,2,c
 15675  01BFEC  D035               	goto	u16190
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;stkvar	_s @ sp[(-2)+0]
 15679  01BFEE  50E1               	movf	fsr1l,w,c
 15680  01BFF0  0FFE               	addlw	-2
 15681  01BFF2  6ED9               	movwf	fsr2l,c
 15682  01BFF4  50E2               	movf	fsr1h,w,c
 15683  01BFF6  6EDA               	movwf	fsr2h,c
 15684  01BFF8  0EFF               	movlw	255
 15685  01BFFA  22DA               	addwfc	fsr2h,f,c
 15686  01BFFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15687  01C002  006F FF77 FFF7     	movff	postdec2,tblptrh
 15688  01C008                     	if	0	;tblptru may be non-zero
 15689  01C008                     	endif
 15690  01C008                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15691  01C008  0E00               	movlw	low (__mediumconst shr (0+16))
 15692  01C00A  6EF8               	movwf	tblptru,c
 15693  01C00C                     	endif
 15694  01C00C  0008               	tblrd		*
 15695  01C00E  50F5               	movf	tablat,w,c
 15696  01C010  0A2D               	xorlw	45
 15697  01C012  B4D8               	btfsc	status,2,c
 15698  01C014  D021               	goto	u16190
 15699                           
 15700                           ; BSR set to: 0
 15701  01C016  0ED0               	movlw	208
 15702  01C018  6E34               	movwf	(btemp+10)^0,c
 15703  01C01A  0EFF               	movlw	255
 15704  01C01C  6E35               	movwf	(btemp+11)^0,c
 15705                           
 15706                           ;stkvar	_s @ sp[(-2)+0]
 15707  01C01E  50E1               	movf	fsr1l,w,c
 15708  01C020  0FFE               	addlw	-2
 15709  01C022  6ED9               	movwf	fsr2l,c
 15710  01C024  50E2               	movf	fsr1h,w,c
 15711  01C026  6EDA               	movwf	fsr2h,c
 15712  01C028  0EFF               	movlw	255
 15713  01C02A  22DA               	addwfc	fsr2h,f,c
 15714  01C02C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15715  01C032  006F FF77 FFF7     	movff	postdec2,tblptrh
 15716  01C038                     	if	0	;tblptru may be non-zero
 15717  01C038                     	endif
 15718  01C038                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15719  01C038  0E00               	movlw	low (__mediumconst shr (0+16))
 15720  01C03A  6EF8               	movwf	tblptru,c
 15721  01C03C                     	endif
 15722  01C03C  0008               	tblrd		*
 15723  01C03E  50F5               	movf	tablat,w,c
 15724  01C040  6E32               	movwf	(btemp+8)^0,c
 15725  01C042  6A33               	clrf	(btemp+9)^0,c
 15726  01C044  5034               	movf	(btemp+10)^0,w,c
 15727  01C046  2632               	addwf	(btemp+8)^0,f,c
 15728  01C048  5035               	movf	(btemp+11)^0,w,c
 15729  01C04A  2233               	addwfc	(btemp+9)^0,f,c
 15730  01C04C  5033               	movf	(btemp+9)^0,w,c
 15731  01C04E  E119               	bnz	l16595
 15732  01C050  0E0A               	movlw	10
 15733  01C052  5C32               	subwf	(btemp+8)^0,w,c
 15734  01C054  B0D8               	btfsc	status,0,c
 15735  01C056  D015               	goto	l16595
 15736  01C058                     u16190:
 15737                           
 15738                           ; BSR set to: 0
 15739                           ;stkvar	_s @ sp[(-2)+0]
 15740  01C058  0EFE               	movlw	254
 15741  01C05A  24E1               	addwf	fsr1l,w,c
 15742  01C05C  6E2A               	movwf	btemp^0,c
 15743  01C05E  0EFF               	movlw	255
 15744  01C060  20E2               	addwfc	fsr1h,w,c
 15745  01C062  6E2B               	movwf	(btemp+1)^0,c
 15746  01C064  0060  F0AB  FFE6   	movff	btemp,postinc1
 15747  01C06A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15748  01C070  EC10  F0E9         	call	_getoff	;wreg free
 15749  01C074  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15750  01C07A  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15751  01C080  D012               	goto	l16597
 15752  01C082                     l16595:
 15753                           
 15754                           ; BSR set to: 0
 15755  01C082  0060  F1C0  F034   	movff	___timezone,btemp+10
 15756  01C088  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15757  01C08E  0EF0               	movlw	240
 15758  01C090  2434               	addwf	(btemp+10)^0,w,c
 15759  01C092  6FB6               	movwf	_dst_off& (0+255),b
 15760  01C094  0EF1               	movlw	241
 15761  01C096  2035               	addwfc	(btemp+11)^0,w,c
 15762  01C098  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15763  01C09A  D005               	goto	l16597
 15764  01C09C                     l3978:
 15765                           
 15766                           ; BSR set to: 1
 15767  01C09C  0100               	movlb	0	; () banked
 15768  01C09E  6BB8               	clrf	___daylight& (0+255),b
 15769  01C0A0  6BB9               	clrf	(___daylight+1)& (0+255),b
 15770  01C0A2  6BB6               	clrf	_dst_off& (0+255),b
 15771  01C0A4  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15772  01C0A6                     l16597:
 15773                           
 15774                           ;stkvar	_s @ sp[(-2)+0]
 15775  01C0A6  50E1               	movf	fsr1l,w,c
 15776  01C0A8  0FFE               	addlw	-2
 15777  01C0AA  6ED9               	movwf	fsr2l,c
 15778  01C0AC  50E2               	movf	fsr1h,w,c
 15779  01C0AE  6EDA               	movwf	fsr2h,c
 15780  01C0B0  0EFF               	movlw	255
 15781  01C0B2  22DA               	addwfc	fsr2h,f,c
 15782  01C0B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15783  01C0BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15784  01C0C0                     	if	0	;tblptru may be non-zero
 15785  01C0C0                     	endif
 15786  01C0C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15787  01C0C0  0E00               	movlw	low (__mediumconst shr (0+16))
 15788  01C0C2  6EF8               	movwf	tblptru,c
 15789  01C0C4                     	endif
 15790  01C0C4  0008               	tblrd		*
 15791  01C0C6  50F5               	movf	tablat,w,c
 15792  01C0C8  0A2C               	xorlw	44
 15793  01C0CA  A4D8               	btfss	status,2,c
 15794  01C0CC  D023               	goto	l16603
 15795                           
 15796                           ;stkvar	_s @ sp[(-2)+0]
 15797  01C0CE  0EFE               	movlw	-2
 15798  01C0D0  50E3               	movf	plusw1,w,c
 15799  01C0D2  0F01               	addlw	1
 15800  01C0D4  6E2A               	movwf	btemp^0,c
 15801  01C0D6  0EFE               	movlw	-2
 15802  01C0D8  0060  F0AB  FFE3   	movff	btemp,plusw1
 15803  01C0DE  6A2A               	clrf	btemp^0,c
 15804  01C0E0  0EFF               	movlw	-1
 15805  01C0E2  50E3               	movf	plusw1,w,c
 15806  01C0E4  202A               	addwfc	btemp^0,w,c
 15807  01C0E6  6E2A               	movwf	btemp^0,c
 15808  01C0E8  0EFF               	movlw	-1
 15809  01C0EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 15810  01C0F0  0EE5               	movlw	low _r0
 15811  01C0F2  6EE6               	movwf	postinc1,c
 15812  01C0F4  0E01               	movlw	high _r0
 15813  01C0F6  6EE6               	movwf	postinc1,c
 15814                           
 15815                           ;stkvar	_s @ sp[(-4)+0]
 15816  01C0F8  0EFC               	movlw	252
 15817  01C0FA  24E1               	addwf	fsr1l,w,c
 15818  01C0FC  6E2A               	movwf	btemp^0,c
 15819  01C0FE  0EFF               	movlw	255
 15820  01C100  20E2               	addwfc	fsr1h,w,c
 15821  01C102  6E2B               	movwf	(btemp+1)^0,c
 15822  01C104  0060  F0AB  FFE6   	movff	btemp,postinc1
 15823  01C10A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15824  01C110  ECC4  F0E0         	call	_getrule	;wreg free
 15825  01C114                     l16603:
 15826                           
 15827                           ;stkvar	_s @ sp[(-2)+0]
 15828  01C114  50E1               	movf	fsr1l,w,c
 15829  01C116  0FFE               	addlw	-2
 15830  01C118  6ED9               	movwf	fsr2l,c
 15831  01C11A  50E2               	movf	fsr1h,w,c
 15832  01C11C  6EDA               	movwf	fsr2h,c
 15833  01C11E  0EFF               	movlw	255
 15834  01C120  22DA               	addwfc	fsr2h,f,c
 15835  01C122  006F FF7B FFF6     	movff	postinc2,tblptrl
 15836  01C128  006F FF77 FFF7     	movff	postdec2,tblptrh
 15837  01C12E                     	if	0	;tblptru may be non-zero
 15838  01C12E                     	endif
 15839  01C12E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15840  01C12E  0E00               	movlw	low (__mediumconst shr (0+16))
 15841  01C130  6EF8               	movwf	tblptru,c
 15842  01C132                     	endif
 15843  01C132  0008               	tblrd		*
 15844  01C134  50F5               	movf	tablat,w,c
 15845  01C136  0A2C               	xorlw	44
 15846  01C138  A4D8               	btfss	status,2,c
 15847  01C13A  D023               	goto	l3986
 15848                           
 15849                           ;stkvar	_s @ sp[(-2)+0]
 15850  01C13C  0EFE               	movlw	-2
 15851  01C13E  50E3               	movf	plusw1,w,c
 15852  01C140  0F01               	addlw	1
 15853  01C142  6E2A               	movwf	btemp^0,c
 15854  01C144  0EFE               	movlw	-2
 15855  01C146  0060  F0AB  FFE3   	movff	btemp,plusw1
 15856  01C14C  6A2A               	clrf	btemp^0,c
 15857  01C14E  0EFF               	movlw	-1
 15858  01C150  50E3               	movf	plusw1,w,c
 15859  01C152  202A               	addwfc	btemp^0,w,c
 15860  01C154  6E2A               	movwf	btemp^0,c
 15861  01C156  0EFF               	movlw	-1
 15862  01C158  0060  F0AB  FFE3   	movff	btemp,plusw1
 15863  01C15E  0EDB               	movlw	low _r1
 15864  01C160  6EE6               	movwf	postinc1,c
 15865  01C162  0E01               	movlw	high _r1
 15866  01C164  6EE6               	movwf	postinc1,c
 15867                           
 15868                           ;stkvar	_s @ sp[(-4)+0]
 15869  01C166  0EFC               	movlw	252
 15870  01C168  24E1               	addwf	fsr1l,w,c
 15871  01C16A  6E2A               	movwf	btemp^0,c
 15872  01C16C  0EFF               	movlw	255
 15873  01C16E  20E2               	addwfc	fsr1h,w,c
 15874  01C170  6E2B               	movwf	(btemp+1)^0,c
 15875  01C172  0060  F0AB  FFE6   	movff	btemp,postinc1
 15876  01C178  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15877  01C17E  ECC4  F0E0         	call	_getrule	;wreg free
 15878  01C182                     l3986:
 15879                           
 15880                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15881  01C182  52E5               	movf	postdec1,f,c
 15882  01C184  52E5               	movf	postdec1,f,c
 15883  01C186  0012               	return		;funcret
 15884  01C188                     __end_of_do_tzset:
 15885                           	opt callstack 0
 15886                           
 15887 ;; *************** function _getrule *****************
 15888 ;; Defined at:
 15889 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;  p               2  [STACK] PTR PTR const unsigned c
 15892 ;;		 -> s(2), 
 15893 ;;  rule            2  [STACK] PTR int 
 15894 ;;		 -> r1(10), r0(10), 
 15895 ;; Auto vars:     Size  Location     Type
 15896 ;;  r               2  [STACK] int 
 15897 ;; Return value:  Size  Location     Type
 15898 ;;                  1  [STACK] void 
 15899 ;; Registers used:
 15900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15901 ;; Tracked objects:
 15902 ;;		On entry : 0/0
 15903 ;;		On exit  : 0/0
 15904 ;;		Unchanged: 0/0
 15905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15910 ;;Total ram usage:        0 bytes
 15911 ;; Hardware stack levels used:    1
 15912 ;; Hardware stack levels required when called:   17
 15913 ;; This function calls:
 15914 ;;		_getint
 15915 ;;		_getoff
 15916 ;; This function is called by:
 15917 ;;		_do_tzset
 15918 ;; This function uses a reentrant model
 15919 ;;
 15920                           
 15921                           	psect	text46
 15922  01C188                     __ptext46:
 15923                           	opt callstack 0
 15924  01C188                     _getrule:
 15925                           	opt callstack 0
 15926                           
 15927                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15928  01C188  52E6               	movf	postinc1,f,c
 15929  01C18A  52E6               	movf	postinc1,f,c
 15930                           
 15931                           ;stkvar	_p @ sp[(-2)+-2]
 15932                           
 15933                           ;incstack = 0
 15934  01C18C  0EFC               	movlw	-4
 15935  01C18E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15936  01C194  0EFD               	movlw	-3
 15937  01C196  006F FF8F FFDA     	movff	plusw1,fsr2h
 15938  01C19C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15939  01C1A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15940  01C1A8                     	if	0	;tblptru may be non-zero
 15941  01C1A8                     	endif
 15942  01C1A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15943  01C1A8  0E00               	movlw	low (__mediumconst shr (0+16))
 15944  01C1AA  6EF8               	movwf	tblptru,c
 15945  01C1AC                     	endif
 15946  01C1AC  0008               	tblrd		*
 15947  01C1AE  50F5               	movf	tablat,w,c
 15948  01C1B0  6E34               	movwf	(btemp+10)^0,c
 15949  01C1B2  6A35               	clrf	(btemp+11)^0,c
 15950                           
 15951                           ;stkvar	_rule @ sp[(-2)+-4]
 15952  01C1B4  0EFA               	movlw	-6
 15953  01C1B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15954  01C1BC  0EFB               	movlw	-5
 15955  01C1BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15956  01C1C4  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15957  01C1CA  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15958  01C1D0  006F FF78  F034    	movff	postinc2,btemp+10
 15959  01C1D6  006F FF74  F035    	movff	postdec2,btemp+11
 15960                           
 15961                           ;stkvar	_r @ sp[(-2)+0]
 15962  01C1DC  0EFE               	movlw	-2
 15963  01C1DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15964  01C1E4  0EFF               	movlw	-1
 15965  01C1E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15966                           
 15967                           ;stkvar	_r @ sp[(-2)+0]
 15968  01C1EC  0EFE               	movlw	-2
 15969  01C1EE  006F FF8C  F02A    	movff	plusw1,btemp
 15970  01C1F4  0E4D               	movlw	77
 15971  01C1F6  182A               	xorwf	btemp^0,w,c
 15972  01C1F8  E104               	bnz	u15770
 15973  01C1FA  0EFF               	movlw	-1
 15974  01C1FC  50E3               	movf	plusw1,w,c
 15975  01C1FE  B4D8               	btfsc	status,2,c
 15976  01C200  D036               	goto	l16293
 15977  01C202                     u15770:
 15978                           
 15979                           ;stkvar	_r @ sp[(-2)+0]
 15980  01C202  0EFE               	movlw	-2
 15981  01C204  006F FF8C  F02A    	movff	plusw1,btemp
 15982  01C20A  0E4A               	movlw	74
 15983  01C20C  182A               	xorwf	btemp^0,w,c
 15984  01C20E  E110               	bnz	l16289
 15985  01C210  0EFF               	movlw	-1
 15986  01C212  50E3               	movf	plusw1,w,c
 15987  01C214  A4D8               	btfss	status,2,c
 15988  01C216  D00C               	goto	l16289
 15989                           
 15990                           ;stkvar	_p @ sp[(-2)+-2]
 15991  01C218  0EFC               	movlw	-4
 15992  01C21A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15993  01C220  0EFD               	movlw	-3
 15994  01C222  006F FF8F FFDA     	movff	plusw1,fsr2h
 15995  01C228  2ADE               	incf	postinc2,f,c
 15996  01C22A  0E00               	movlw	0
 15997  01C22C  22DD               	addwfc	postdec2,f,c
 15998  01C22E  D00C               	goto	l16291
 15999  01C230                     l16289:
 16000                           
 16001                           ;stkvar	_rule @ sp[(-2)+-4]
 16002  01C230  0EFA               	movlw	-6
 16003  01C232  006F FF8F FFD9     	movff	plusw1,fsr2l
 16004  01C238  0EFB               	movlw	-5
 16005  01C23A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16006  01C240  0E00               	movlw	0
 16007  01C242  6EDE               	movwf	postinc2,c
 16008  01C244  0E00               	movlw	0
 16009  01C246  6EDD               	movwf	postdec2,c
 16010  01C248                     l16291:
 16011                           
 16012                           ;stkvar	_p @ sp[(-2)+-2]
 16013  01C248  0EFC               	movlw	-4
 16014  01C24A  006F FF8F FFE6     	movff	plusw1,postinc1
 16015  01C250  006F FF8F FFE6     	movff	plusw1,postinc1
 16016  01C256  EC52  F002         	call	_getint	;wreg free
 16017                           
 16018                           ;stkvar	_rule @ sp[(-2)+-4]
 16019  01C25A  0EFA               	movlw	-6
 16020  01C25C  006F FF8C  F034    	movff	plusw1,btemp+10
 16021  01C262  0EFB               	movlw	-5
 16022  01C264  006F FF8C  F035    	movff	plusw1,btemp+11
 16023  01C26A  0E02               	movlw	2
 16024  01C26C  D06D               	goto	L16
 16025  01C26E                     l16293:
 16026                           
 16027                           ;stkvar	_p @ sp[(-2)+-2]
 16028  01C26E  0EFC               	movlw	-4
 16029  01C270  006F FF8F FFD9     	movff	plusw1,fsr2l
 16030  01C276  0EFD               	movlw	-3
 16031  01C278  006F FF8F FFDA     	movff	plusw1,fsr2h
 16032  01C27E  2ADE               	incf	postinc2,f,c
 16033  01C280  0E00               	movlw	0
 16034  01C282  22DD               	addwfc	postdec2,f,c
 16035                           
 16036                           ;stkvar	_p @ sp[(-2)+-2]
 16037  01C284  0EFC               	movlw	-4
 16038  01C286  006F FF8F FFE6     	movff	plusw1,postinc1
 16039  01C28C  006F FF8F FFE6     	movff	plusw1,postinc1
 16040  01C292  EC52  F002         	call	_getint	;wreg free
 16041                           
 16042                           ;stkvar	_rule @ sp[(-2)+-4]
 16043  01C296  0EFA               	movlw	-6
 16044  01C298  006F FF8C  F034    	movff	plusw1,btemp+10
 16045  01C29E  0EFB               	movlw	-5
 16046  01C2A0  006F FF8C  F035    	movff	plusw1,btemp+11
 16047  01C2A6  0E02               	movlw	2
 16048  01C2A8  2434               	addwf	(btemp+10)^0,w,c
 16049  01C2AA  6ED9               	movwf	fsr2l,c
 16050  01C2AC  0E00               	movlw	0
 16051  01C2AE  2035               	addwfc	(btemp+11)^0,w,c
 16052  01C2B0  6EDA               	movwf	fsr2h,c
 16053  01C2B2  0060  F0AB  FFDE   	movff	btemp,postinc2
 16054  01C2B8  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16055                           
 16056                           ;stkvar	_p @ sp[(-2)+-2]
 16057  01C2BE  0EFC               	movlw	-4
 16058  01C2C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16059  01C2C6  0EFD               	movlw	-3
 16060  01C2C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16061  01C2CE  2ADE               	incf	postinc2,f,c
 16062  01C2D0  0E00               	movlw	0
 16063  01C2D2  22DD               	addwfc	postdec2,f,c
 16064                           
 16065                           ;stkvar	_p @ sp[(-2)+-2]
 16066  01C2D4  0EFC               	movlw	-4
 16067  01C2D6  006F FF8F FFE6     	movff	plusw1,postinc1
 16068  01C2DC  006F FF8F FFE6     	movff	plusw1,postinc1
 16069  01C2E2  EC52  F002         	call	_getint	;wreg free
 16070                           
 16071                           ;stkvar	_rule @ sp[(-2)+-4]
 16072  01C2E6  0EFA               	movlw	-6
 16073  01C2E8  006F FF8C  F034    	movff	plusw1,btemp+10
 16074  01C2EE  0EFB               	movlw	-5
 16075  01C2F0  006F FF8C  F035    	movff	plusw1,btemp+11
 16076  01C2F6  0E04               	movlw	4
 16077  01C2F8  2434               	addwf	(btemp+10)^0,w,c
 16078  01C2FA  6ED9               	movwf	fsr2l,c
 16079  01C2FC  0E00               	movlw	0
 16080  01C2FE  2035               	addwfc	(btemp+11)^0,w,c
 16081  01C300  6EDA               	movwf	fsr2h,c
 16082  01C302  0060  F0AB  FFDE   	movff	btemp,postinc2
 16083  01C308  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16084                           
 16085                           ;stkvar	_p @ sp[(-2)+-2]
 16086  01C30E  0EFC               	movlw	-4
 16087  01C310  006F FF8F FFD9     	movff	plusw1,fsr2l
 16088  01C316  0EFD               	movlw	-3
 16089  01C318  006F FF8F FFDA     	movff	plusw1,fsr2h
 16090  01C31E  2ADE               	incf	postinc2,f,c
 16091  01C320  0E00               	movlw	0
 16092  01C322  22DD               	addwfc	postdec2,f,c
 16093                           
 16094                           ;stkvar	_p @ sp[(-2)+-2]
 16095  01C324  0EFC               	movlw	-4
 16096  01C326  006F FF8F FFE6     	movff	plusw1,postinc1
 16097  01C32C  006F FF8F FFE6     	movff	plusw1,postinc1
 16098  01C332  EC52  F002         	call	_getint	;wreg free
 16099                           
 16100                           ;stkvar	_rule @ sp[(-2)+-4]
 16101  01C336  0EFA               	movlw	-6
 16102  01C338  006F FF8C  F034    	movff	plusw1,btemp+10
 16103  01C33E  0EFB               	movlw	-5
 16104  01C340  006F FF8C  F035    	movff	plusw1,btemp+11
 16105  01C346  0E06               	movlw	6
 16106  01C348                     L16:
 16107  01C348  2434               	addwf	(btemp+10)^0,w,c
 16108  01C34A  6ED9               	movwf	fsr2l,c
 16109  01C34C  0E00               	movlw	0
 16110  01C34E  2035               	addwfc	(btemp+11)^0,w,c
 16111  01C350  6EDA               	movwf	fsr2h,c
 16112  01C352  0060  F0AB  FFDE   	movff	btemp,postinc2
 16113  01C358  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16114                           
 16115                           ;stkvar	_p @ sp[(-2)+-2]
 16116  01C35E  0EFC               	movlw	-4
 16117  01C360  006F FF8F FFD9     	movff	plusw1,fsr2l
 16118  01C366  0EFD               	movlw	-3
 16119  01C368  006F FF8F FFDA     	movff	plusw1,fsr2h
 16120  01C36E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16121  01C374  006F FF77 FFF7     	movff	postdec2,tblptrh
 16122  01C37A                     	if	0	;tblptru may be non-zero
 16123  01C37A                     	endif
 16124  01C37A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16125  01C37A  0E00               	movlw	low (__mediumconst shr (0+16))
 16126  01C37C  6EF8               	movwf	tblptru,c
 16127  01C37E                     	endif
 16128  01C37E  0008               	tblrd		*
 16129  01C380  50F5               	movf	tablat,w,c
 16130  01C382  0A2F               	xorlw	47
 16131  01C384  A4D8               	btfss	status,2,c
 16132  01C386  D029               	goto	l16309
 16133                           
 16134                           ;stkvar	_p @ sp[(-2)+-2]
 16135  01C388  0EFC               	movlw	-4
 16136  01C38A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16137  01C390  0EFD               	movlw	-3
 16138  01C392  006F FF8F FFDA     	movff	plusw1,fsr2h
 16139  01C398  2ADE               	incf	postinc2,f,c
 16140  01C39A  0E00               	movlw	0
 16141  01C39C  22DD               	addwfc	postdec2,f,c
 16142                           
 16143                           ;stkvar	_p @ sp[(-2)+-2]
 16144  01C39E  0EFC               	movlw	-4
 16145  01C3A0  006F FF8F FFE6     	movff	plusw1,postinc1
 16146  01C3A6  006F FF8F FFE6     	movff	plusw1,postinc1
 16147  01C3AC  EC10  F0E9         	call	_getoff	;wreg free
 16148                           
 16149                           ;stkvar	_rule @ sp[(-2)+-4]
 16150  01C3B0  0EFA               	movlw	-6
 16151  01C3B2  006F FF8C  F034    	movff	plusw1,btemp+10
 16152  01C3B8  0EFB               	movlw	-5
 16153  01C3BA  006F FF8C  F035    	movff	plusw1,btemp+11
 16154  01C3C0  0E08               	movlw	8
 16155  01C3C2  2434               	addwf	(btemp+10)^0,w,c
 16156  01C3C4  6ED9               	movwf	fsr2l,c
 16157  01C3C6  0E00               	movlw	0
 16158  01C3C8  2035               	addwfc	(btemp+11)^0,w,c
 16159  01C3CA  6EDA               	movwf	fsr2h,c
 16160  01C3CC  0060  F0AB  FFDE   	movff	btemp,postinc2
 16161  01C3D2  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16162  01C3D8  D012               	goto	l3951
 16163  01C3DA                     l16309:
 16164                           
 16165                           ;stkvar	_rule @ sp[(-2)+-4]
 16166  01C3DA  0EFA               	movlw	-6
 16167  01C3DC  006F FF8C  F034    	movff	plusw1,btemp+10
 16168  01C3E2  0EFB               	movlw	-5
 16169  01C3E4  006F FF8C  F035    	movff	plusw1,btemp+11
 16170  01C3EA  0E08               	movlw	8
 16171  01C3EC  2434               	addwf	(btemp+10)^0,w,c
 16172  01C3EE  6ED9               	movwf	fsr2l,c
 16173  01C3F0  0E00               	movlw	0
 16174  01C3F2  2035               	addwfc	(btemp+11)^0,w,c
 16175  01C3F4  6EDA               	movwf	fsr2h,c
 16176  01C3F6  0E20               	movlw	32
 16177  01C3F8  6EDE               	movwf	postinc2,c
 16178  01C3FA  0E1C               	movlw	28
 16179  01C3FC  6EDD               	movwf	postdec2,c
 16180  01C3FE                     l3951:
 16181                           
 16182                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16183  01C3FE  0EFA               	movlw	250
 16184  01C400  26E1               	addwf	fsr1l,f,c
 16185  01C402  0EFF               	movlw	255
 16186  01C404  22E2               	addwfc	fsr1h,f,c
 16187  01C406  0012               	return		;funcret
 16188  01C408                     __end_of_getrule:
 16189                           	opt callstack 0
 16190                           
 16191 ;; *************** function _getoff *****************
 16192 ;; Defined at:
 16193 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16194 ;; Parameters:    Size  Location     Type
 16195 ;;  p               2  [STACK] PTR PTR const unsigned c
 16196 ;;		 -> s(2), 
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;  off             2  [STACK] int 
 16199 ;;  neg             2  [STACK] int 
 16200 ;; Return value:  Size  Location     Type
 16201 ;;                  2  [STACK] int 
 16202 ;; Registers used:
 16203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16204 ;; Tracked objects:
 16205 ;;		On entry : 0/0
 16206 ;;		On exit  : 0/0
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16213 ;;Total ram usage:        0 bytes
 16214 ;; Hardware stack levels used:    1
 16215 ;; Hardware stack levels required when called:   16
 16216 ;; This function calls:
 16217 ;;		_getint
 16218 ;; This function is called by:
 16219 ;;		_getrule
 16220 ;;		_do_tzset
 16221 ;; This function uses a reentrant model
 16222 ;;
 16223                           
 16224                           	psect	text47
 16225  01D220                     __ptext47:
 16226                           	opt callstack 0
 16227  01D220                     _getoff:
 16228                           	opt callstack 0
 16229                           
 16230                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16231  01D220  52E6               	movf	postinc1,f,c
 16232  01D222  52E6               	movf	postinc1,f,c
 16233  01D224  52E6               	movf	postinc1,f,c
 16234  01D226  52E6               	movf	postinc1,f,c
 16235                           
 16236                           ;stkvar	_neg @ sp[(-4)+2]
 16237                           
 16238                           ;incstack = 0
 16239  01D228  0EFE               	movlw	-2
 16240  01D22A  6AE3               	clrf	plusw1,c
 16241  01D22C  0EFF               	movlw	-1
 16242  01D22E  6AE3               	clrf	plusw1,c
 16243                           
 16244                           ;stkvar	_p @ sp[(-4)+-2]
 16245  01D230  0EFA               	movlw	-6
 16246  01D232  006F FF8F FFD9     	movff	plusw1,fsr2l
 16247  01D238  0EFB               	movlw	-5
 16248  01D23A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16249  01D240  006F FF7B FFF6     	movff	postinc2,tblptrl
 16250  01D246  006F FF77 FFF7     	movff	postdec2,tblptrh
 16251  01D24C                     	if	0	;tblptru may be non-zero
 16252  01D24C                     	endif
 16253  01D24C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16254  01D24C  0E00               	movlw	low (__mediumconst shr (0+16))
 16255  01D24E  6EF8               	movwf	tblptru,c
 16256  01D250                     	endif
 16257  01D250  0008               	tblrd		*
 16258  01D252  50F5               	movf	tablat,w,c
 16259  01D254  0A2D               	xorlw	45
 16260  01D256  A4D8               	btfss	status,2,c
 16261  01D258  D018               	goto	l10961
 16262                           
 16263                           ;stkvar	_p @ sp[(-4)+-2]
 16264  01D25A  0EFA               	movlw	-6
 16265  01D25C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16266  01D262  0EFB               	movlw	-5
 16267  01D264  006F FF8F FFDA     	movff	plusw1,fsr2h
 16268  01D26A  2ADE               	incf	postinc2,f,c
 16269  01D26C  0E00               	movlw	0
 16270  01D26E  22DD               	addwfc	postdec2,f,c
 16271  01D270  0E01               	movlw	1
 16272  01D272  6E34               	movwf	(btemp+10)^0,c
 16273  01D274  0E00               	movlw	0
 16274  01D276  6E35               	movwf	(btemp+11)^0,c
 16275                           
 16276                           ;stkvar	_neg @ sp[(-4)+2]
 16277  01D278  0EFE               	movlw	-2
 16278  01D27A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16279  01D280  0EFF               	movlw	-1
 16280  01D282  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16281  01D288  D020               	goto	l10965
 16282  01D28A                     l10961:
 16283                           
 16284                           ;stkvar	_p @ sp[(-4)+-2]
 16285  01D28A  0EFA               	movlw	-6
 16286  01D28C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16287  01D292  0EFB               	movlw	-5
 16288  01D294  006F FF8F FFDA     	movff	plusw1,fsr2h
 16289  01D29A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16290  01D2A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 16291  01D2A6                     	if	0	;tblptru may be non-zero
 16292  01D2A6                     	endif
 16293  01D2A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16294  01D2A6  0E00               	movlw	low (__mediumconst shr (0+16))
 16295  01D2A8  6EF8               	movwf	tblptru,c
 16296  01D2AA                     	endif
 16297  01D2AA  0008               	tblrd		*
 16298  01D2AC  50F5               	movf	tablat,w,c
 16299  01D2AE  0A2B               	xorlw	43
 16300  01D2B0  A4D8               	btfss	status,2,c
 16301  01D2B2  D00B               	goto	l10965
 16302                           
 16303                           ;stkvar	_p @ sp[(-4)+-2]
 16304  01D2B4  0EFA               	movlw	-6
 16305  01D2B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16306  01D2BC  0EFB               	movlw	-5
 16307  01D2BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16308  01D2C4  2ADE               	incf	postinc2,f,c
 16309  01D2C6  0E00               	movlw	0
 16310  01D2C8  22DD               	addwfc	postdec2,f,c
 16311  01D2CA                     l10965:
 16312                           
 16313                           ;stkvar	_p @ sp[(-4)+-2]
 16314  01D2CA  0EFA               	movlw	-6
 16315  01D2CC  006F FF8F FFE6     	movff	plusw1,postinc1
 16316  01D2D2  006F FF8F FFE6     	movff	plusw1,postinc1
 16317  01D2D8  EC52  F002         	call	_getint	;wreg free
 16318  01D2DC  0060  F0A8  F034   	movff	btemp,btemp+10
 16319  01D2E2  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16320  01D2E8  0E10               	movlw	16
 16321  01D2EA  0234               	mulwf	(btemp+10)^0,c
 16322  01D2EC  006F FFCC  F032    	movff	prodl,btemp+8
 16323  01D2F2  006F FFD0  F033    	movff	prodh,btemp+9
 16324  01D2F8  0235               	mulwf	(btemp+11)^0,c
 16325  01D2FA  50F3               	movf	prodl,w,c
 16326  01D2FC  2633               	addwf	(btemp+9)^0,f,c
 16327  01D2FE  0E0E               	movlw	14
 16328  01D300  0234               	mulwf	(btemp+10)^0,c
 16329  01D302  50F3               	movf	prodl,w,c
 16330  01D304  2633               	addwf	(btemp+9)^0,f,c
 16331                           
 16332                           ;stkvar	_off @ sp[(-4)+0]
 16333  01D306  0EFC               	movlw	-4
 16334  01D308  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16335  01D30E  0EFD               	movlw	-3
 16336  01D310  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16337                           
 16338                           ;stkvar	_p @ sp[(-4)+-2]
 16339  01D316  0EFA               	movlw	-6
 16340  01D318  006F FF8F FFD9     	movff	plusw1,fsr2l
 16341  01D31E  0EFB               	movlw	-5
 16342  01D320  006F FF8F FFDA     	movff	plusw1,fsr2h
 16343  01D326  006F FF7B FFF6     	movff	postinc2,tblptrl
 16344  01D32C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16345  01D332                     	if	0	;tblptru may be non-zero
 16346  01D332                     	endif
 16347  01D332                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16348  01D332  0E00               	movlw	low (__mediumconst shr (0+16))
 16349  01D334  6EF8               	movwf	tblptru,c
 16350  01D336                     	endif
 16351  01D336  0008               	tblrd		*
 16352  01D338  50F5               	movf	tablat,w,c
 16353  01D33A  0A3A               	xorlw	58
 16354  01D33C  A4D8               	btfss	status,2,c
 16355  01D33E  D064               	goto	l10979
 16356                           
 16357                           ;stkvar	_p @ sp[(-4)+-2]
 16358  01D340  0EFA               	movlw	-6
 16359  01D342  006F FF8F FFD9     	movff	plusw1,fsr2l
 16360  01D348  0EFB               	movlw	-5
 16361  01D34A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16362  01D350  2ADE               	incf	postinc2,f,c
 16363  01D352  0E00               	movlw	0
 16364  01D354  22DD               	addwfc	postdec2,f,c
 16365                           
 16366                           ;stkvar	_p @ sp[(-4)+-2]
 16367  01D356  0EFA               	movlw	-6
 16368  01D358  006F FF8F FFE6     	movff	plusw1,postinc1
 16369  01D35E  006F FF8F FFE6     	movff	plusw1,postinc1
 16370  01D364  EC52  F002         	call	_getint	;wreg free
 16371  01D368  0060  F0A8  F034   	movff	btemp,btemp+10
 16372  01D36E  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16373  01D374  0E3C               	movlw	60
 16374  01D376  0234               	mulwf	(btemp+10)^0,c
 16375  01D378  006F FFCC  F032    	movff	prodl,btemp+8
 16376  01D37E  006F FFD0  F033    	movff	prodh,btemp+9
 16377  01D384  0235               	mulwf	(btemp+11)^0,c
 16378  01D386  50F3               	movf	prodl,w,c
 16379  01D388  2633               	addwf	(btemp+9)^0,f,c
 16380                           
 16381                           ;stkvar	_off @ sp[(-4)+0]
 16382  01D38A  50E1               	movf	fsr1l,w,c
 16383  01D38C  0FFC               	addlw	-4
 16384  01D38E  6ED9               	movwf	fsr2l,c
 16385  01D390  50E2               	movf	fsr1h,w,c
 16386  01D392  6EDA               	movwf	fsr2h,c
 16387  01D394  0EFF               	movlw	255
 16388  01D396  22DA               	addwfc	fsr2h,f,c
 16389  01D398  5032               	movf	(btemp+8)^0,w,c
 16390  01D39A  26DE               	addwf	postinc2,f,c
 16391  01D39C  5033               	movf	(btemp+9)^0,w,c
 16392  01D39E  22DD               	addwfc	postdec2,f,c
 16393                           
 16394                           ;stkvar	_p @ sp[(-4)+-2]
 16395  01D3A0  0EFA               	movlw	-6
 16396  01D3A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16397  01D3A8  0EFB               	movlw	-5
 16398  01D3AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16399  01D3B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16400  01D3B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16401  01D3BC                     	if	0	;tblptru may be non-zero
 16402  01D3BC                     	endif
 16403  01D3BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16404  01D3BC  0E00               	movlw	low (__mediumconst shr (0+16))
 16405  01D3BE  6EF8               	movwf	tblptru,c
 16406  01D3C0                     	endif
 16407  01D3C0  0008               	tblrd		*
 16408  01D3C2  50F5               	movf	tablat,w,c
 16409  01D3C4  0A3A               	xorlw	58
 16410  01D3C6  A4D8               	btfss	status,2,c
 16411  01D3C8  D01F               	goto	l10979
 16412                           
 16413                           ;stkvar	_p @ sp[(-4)+-2]
 16414  01D3CA  0EFA               	movlw	-6
 16415  01D3CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16416  01D3D2  0EFB               	movlw	-5
 16417  01D3D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16418  01D3DA  2ADE               	incf	postinc2,f,c
 16419  01D3DC  0E00               	movlw	0
 16420  01D3DE  22DD               	addwfc	postdec2,f,c
 16421                           
 16422                           ;stkvar	_p @ sp[(-4)+-2]
 16423  01D3E0  0EFA               	movlw	-6
 16424  01D3E2  006F FF8F FFE6     	movff	plusw1,postinc1
 16425  01D3E8  006F FF8F FFE6     	movff	plusw1,postinc1
 16426  01D3EE  EC52  F002         	call	_getint	;wreg free
 16427                           
 16428                           ;stkvar	_off @ sp[(-4)+0]
 16429  01D3F2  50E1               	movf	fsr1l,w,c
 16430  01D3F4  0FFC               	addlw	-4
 16431  01D3F6  6ED9               	movwf	fsr2l,c
 16432  01D3F8  50E2               	movf	fsr1h,w,c
 16433  01D3FA  6EDA               	movwf	fsr2h,c
 16434  01D3FC  0EFF               	movlw	255
 16435  01D3FE  22DA               	addwfc	fsr2h,f,c
 16436  01D400  502A               	movf	btemp^0,w,c
 16437  01D402  26DE               	addwf	postinc2,f,c
 16438  01D404  502B               	movf	(btemp+1)^0,w,c
 16439  01D406  22DD               	addwfc	postdec2,f,c
 16440  01D408                     l10979:
 16441                           
 16442                           ;stkvar	_neg @ sp[(-4)+2]
 16443  01D408  0EFE               	movlw	-2
 16444  01D40A  006F FF8C  F02A    	movff	plusw1,btemp
 16445  01D410  0EFF               	movlw	-1
 16446  01D412  50E3               	movf	plusw1,w,c
 16447  01D414  102A               	iorwf	btemp^0,w,c
 16448  01D416  A4D8               	btfss	status,2,c
 16449  01D418  D009               	goto	l10983
 16450                           
 16451                           ;stkvar	_off @ sp[(-4)+0]
 16452  01D41A  0EFC               	movlw	-4
 16453  01D41C  006F FF8C  F02A    	movff	plusw1,btemp
 16454  01D422  0EFD               	movlw	-3
 16455  01D424  006F FF8C  F02B    	movff	plusw1,btemp+1
 16456  01D42A  D00D               	goto	l3942
 16457  01D42C                     l10983:
 16458                           
 16459                           ;stkvar	_off @ sp[(-4)+0]
 16460  01D42C  0EFC               	movlw	-4
 16461  01D42E  006F FF8C  F02A    	movff	plusw1,btemp
 16462  01D434  1E2A               	comf	btemp^0,f,c
 16463  01D436  0EFD               	movlw	-3
 16464  01D438  006F FF8C  F02B    	movff	plusw1,btemp+1
 16465  01D43E  1E2B               	comf	(btemp+1)^0,f,c
 16466  01D440  2A2A               	incf	btemp^0,f,c
 16467  01D442  B4D8               	btfsc	status,2,c
 16468  01D444  2A2B               	incf	(btemp+1)^0,f,c
 16469  01D446                     l3942:
 16470                           
 16471                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16472  01D446  0EFA               	movlw	250
 16473  01D448  26E1               	addwf	fsr1l,f,c
 16474  01D44A  0EFF               	movlw	255
 16475  01D44C  22E2               	addwfc	fsr1h,f,c
 16476  01D44E  0012               	return		;funcret
 16477  01D450                     __end_of_getoff:
 16478                           	opt callstack 0
 16479                           
 16480 ;; *************** function _getint *****************
 16481 ;; Defined at:
 16482 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16483 ;; Parameters:    Size  Location     Type
 16484 ;;  p               2  [STACK] PTR PTR const unsigned c
 16485 ;;		 -> s(2), 
 16486 ;; Auto vars:     Size  Location     Type
 16487 ;;  x               2  [STACK] unsigned int 
 16488 ;; Return value:  Size  Location     Type
 16489 ;;                  2  [STACK] int 
 16490 ;; Registers used:
 16491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16492 ;; Tracked objects:
 16493 ;;		On entry : 0/0
 16494 ;;		On exit  : 0/0
 16495 ;;		Unchanged: 0/0
 16496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16501 ;;Total ram usage:        0 bytes
 16502 ;; Hardware stack levels used:    1
 16503 ;; Hardware stack levels required when called:   15
 16504 ;; This function calls:
 16505 ;;		Nothing
 16506 ;; This function is called by:
 16507 ;;		_getoff
 16508 ;;		_getrule
 16509 ;; This function uses a reentrant model
 16510 ;;
 16511                           
 16512                           	psect	text48
 16513  0004A4                     __ptext48:
 16514                           	opt callstack 0
 16515  0004A4                     _getint:
 16516                           	opt callstack 0
 16517                           
 16518                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16519  0004A4  52E6               	movf	postinc1,f,c
 16520  0004A6  52E6               	movf	postinc1,f,c
 16521                           
 16522                           ;stkvar	_x @ sp[(-2)+0]
 16523                           
 16524                           ;incstack = 0
 16525  0004A8  0EFE               	movlw	-2
 16526  0004AA  6AE3               	clrf	plusw1,c
 16527  0004AC  0EFF               	movlw	-1
 16528  0004AE  6AE3               	clrf	plusw1,c
 16529  0004B0  D043               	goto	l10117
 16530  0004B2                     l10113:
 16531  0004B2  0ED0               	movlw	208
 16532  0004B4  6E34               	movwf	(btemp+10)^0,c
 16533  0004B6  0EFF               	movlw	255
 16534  0004B8  6E35               	movwf	(btemp+11)^0,c
 16535                           
 16536                           ;stkvar	_x @ sp[(-2)+0]
 16537  0004BA  0EFE               	movlw	-2
 16538  0004BC  006F FF8C  F032    	movff	plusw1,btemp+8
 16539  0004C2  0EFF               	movlw	-1
 16540  0004C4  006F FF8C  F033    	movff	plusw1,btemp+9
 16541  0004CA  0E0A               	movlw	10
 16542  0004CC  0232               	mulwf	(btemp+8)^0,c
 16543  0004CE  006F FFCC  F030    	movff	prodl,btemp+6
 16544  0004D4  006F FFD0  F031    	movff	prodh,btemp+7
 16545  0004DA  0233               	mulwf	(btemp+9)^0,c
 16546  0004DC  50F3               	movf	prodl,w,c
 16547  0004DE  2631               	addwf	(btemp+7)^0,f,c
 16548                           
 16549                           ;stkvar	_p @ sp[(-2)+-2]
 16550  0004E0  0EFC               	movlw	-4
 16551  0004E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16552  0004E8  0EFD               	movlw	-3
 16553  0004EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16554  0004F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16555  0004F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16556  0004FC                     	if	0	;tblptru may be non-zero
 16557  0004FC                     	endif
 16558  0004FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16559  0004FC  0E00               	movlw	low (__mediumconst shr (0+16))
 16560  0004FE  6EF8               	movwf	tblptru,c
 16561  000500                     	endif
 16562  000500  0008               	tblrd		*
 16563  000502  50F5               	movf	tablat,w,c
 16564  000504  2630               	addwf	(btemp+6)^0,f,c
 16565  000506  0E00               	movlw	0
 16566  000508  2231               	addwfc	(btemp+7)^0,f,c
 16567  00050A  5034               	movf	(btemp+10)^0,w,c
 16568  00050C  2630               	addwf	(btemp+6)^0,f,c
 16569  00050E  5035               	movf	(btemp+11)^0,w,c
 16570  000510  2231               	addwfc	(btemp+7)^0,f,c
 16571                           
 16572                           ;stkvar	_x @ sp[(-2)+0]
 16573  000512  0EFE               	movlw	-2
 16574  000514  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16575  00051A  0EFF               	movlw	-1
 16576  00051C  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16577                           
 16578                           ;stkvar	_p @ sp[(-2)+-2]
 16579  000522  0EFC               	movlw	-4
 16580  000524  006F FF8F FFD9     	movff	plusw1,fsr2l
 16581  00052A  0EFD               	movlw	-3
 16582  00052C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16583  000532  2ADE               	incf	postinc2,f,c
 16584  000534  0E00               	movlw	0
 16585  000536  22DD               	addwfc	postdec2,f,c
 16586  000538                     l10117:
 16587  000538  0ED0               	movlw	208
 16588  00053A  6E34               	movwf	(btemp+10)^0,c
 16589  00053C  0EFF               	movlw	255
 16590  00053E  6E35               	movwf	(btemp+11)^0,c
 16591                           
 16592                           ;stkvar	_p @ sp[(-2)+-2]
 16593  000540  0EFC               	movlw	-4
 16594  000542  006F FF8F FFD9     	movff	plusw1,fsr2l
 16595  000548  0EFD               	movlw	-3
 16596  00054A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16597  000550  006F FF7B FFF6     	movff	postinc2,tblptrl
 16598  000556  006F FF77 FFF7     	movff	postdec2,tblptrh
 16599  00055C                     	if	0	;tblptru may be non-zero
 16600  00055C                     	endif
 16601  00055C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16602  00055C  0E00               	movlw	low (__mediumconst shr (0+16))
 16603  00055E  6EF8               	movwf	tblptru,c
 16604  000560                     	endif
 16605  000560  0008               	tblrd		*
 16606  000562  50F5               	movf	tablat,w,c
 16607  000564  6E32               	movwf	(btemp+8)^0,c
 16608  000566  6A33               	clrf	(btemp+9)^0,c
 16609  000568  5034               	movf	(btemp+10)^0,w,c
 16610  00056A  2632               	addwf	(btemp+8)^0,f,c
 16611  00056C  5035               	movf	(btemp+11)^0,w,c
 16612  00056E  2233               	addwfc	(btemp+9)^0,f,c
 16613  000570  5033               	movf	(btemp+9)^0,w,c
 16614  000572  E104               	bnz	u7730
 16615  000574  0E0A               	movlw	10
 16616  000576  5C32               	subwf	(btemp+8)^0,w,c
 16617  000578  A0D8               	btfss	status,0,c
 16618  00057A  D79B               	goto	l10113
 16619  00057C                     u7730:
 16620                           
 16621                           ;stkvar	_x @ sp[(-2)+0]
 16622  00057C  0EFE               	movlw	-2
 16623  00057E  006F FF8C  F02A    	movff	plusw1,btemp
 16624  000584  0EFF               	movlw	-1
 16625  000586  006F FF8C  F02B    	movff	plusw1,btemp+1
 16626                           
 16627                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16628  00058C  52E5               	movf	postdec1,f,c
 16629  00058E  52E5               	movf	postdec1,f,c
 16630  000590  52E5               	movf	postdec1,f,c
 16631  000592  52E5               	movf	postdec1,f,c
 16632  000594  0012               	return		;funcret
 16633  000596                     __end_of_getint:
 16634                           	opt callstack 0
 16635                           
 16636 ;; *************** function _getname *****************
 16637 ;; Defined at:
 16638 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16639 ;; Parameters:    Size  Location     Type
 16640 ;;  d               2  [STACK] PTR unsigned char 
 16641 ;;		 -> dst_name(7), std_name(7), 
 16642 ;;  p               2  [STACK] PTR PTR const unsigned c
 16643 ;;		 -> s(2), 
 16644 ;; Auto vars:     Size  Location     Type
 16645 ;;  i               2  [STACK] int 
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  1  [STACK] void 
 16648 ;; Registers used:
 16649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/39
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16659 ;;Total ram usage:        0 bytes
 16660 ;; Hardware stack levels used:    1
 16661 ;; Hardware stack levels required when called:   15
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		_do_tzset
 16666 ;; This function uses a reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text49
 16670  01B0B0                     __ptext49:
 16671                           	opt callstack 0
 16672  01B0B0                     _getname:
 16673                           	opt callstack 0
 16674                           
 16675                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16676  01B0B0  52E6               	movf	postinc1,f,c
 16677  01B0B2  52E6               	movf	postinc1,f,c
 16678                           
 16679                           ;stkvar	_p @ sp[(-2)+-4]
 16680                           
 16681                           ;incstack = 0
 16682  01B0B4  0EFA               	movlw	-6
 16683  01B0B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16684  01B0BC  0EFB               	movlw	-5
 16685  01B0BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16686  01B0C4  006F FF7B FFF6     	movff	postinc2,tblptrl
 16687  01B0CA  006F FF77 FFF7     	movff	postdec2,tblptrh
 16688  01B0D0                     	if	0	;tblptru may be non-zero
 16689  01B0D0                     	endif
 16690  01B0D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16691  01B0D0  0E00               	movlw	low (__mediumconst shr (0+16))
 16692  01B0D2  6EF8               	movwf	tblptru,c
 16693  01B0D4                     	endif
 16694  01B0D4  0008               	tblrd		*
 16695  01B0D6  50F5               	movf	tablat,w,c
 16696  01B0D8  0A3C               	xorlw	60
 16697  01B0DA  A4D8               	btfss	status,2,c
 16698  01B0DC  D09E               	goto	l16327
 16699                           
 16700                           ;stkvar	_p @ sp[(-2)+-4]
 16701  01B0DE  0EFA               	movlw	-6
 16702  01B0E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16703  01B0E6  0EFB               	movlw	-5
 16704  01B0E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16705  01B0EE  2ADE               	incf	postinc2,f,c
 16706  01B0F0  0E00               	movlw	0
 16707  01B0F2  22DD               	addwfc	postdec2,f,c
 16708                           
 16709                           ;stkvar	_i @ sp[(-2)+0]
 16710  01B0F4  0EFE               	movlw	-2
 16711  01B0F6  6AE3               	clrf	plusw1,c
 16712  01B0F8  0EFF               	movlw	-1
 16713  01B0FA  6AE3               	clrf	plusw1,c
 16714  01B0FC  D04D               	goto	l16321
 16715  01B0FE                     l16317:
 16716                           
 16717                           ;stkvar	_i @ sp[(-2)+0]
 16718  01B0FE  0EFE               	movlw	-2
 16719  01B100  006F FF8C  F034    	movff	plusw1,btemp+10
 16720  01B106  0EFF               	movlw	-1
 16721  01B108  006F FF8C  F035    	movff	plusw1,btemp+11
 16722                           
 16723                           ;stkvar	_p @ sp[(-2)+-4]
 16724  01B10E  0EFA               	movlw	-6
 16725  01B110  006F FF8F FFD9     	movff	plusw1,fsr2l
 16726  01B116  0EFB               	movlw	-5
 16727  01B118  006F FF8F FFDA     	movff	plusw1,fsr2h
 16728  01B11E  006F FF78  F032    	movff	postinc2,btemp+8
 16729  01B124  006F FF74  F033    	movff	postdec2,btemp+9
 16730  01B12A  5034               	movf	(btemp+10)^0,w,c
 16731  01B12C  2632               	addwf	(btemp+8)^0,f,c
 16732  01B12E  5035               	movf	(btemp+11)^0,w,c
 16733  01B130  2233               	addwfc	(btemp+9)^0,f,c
 16734  01B132  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16735  01B138  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16736  01B13E                     	if	0	;tblptru may be non-zero
 16737  01B13E                     	endif
 16738  01B13E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16739  01B13E  0E00               	movlw	low (__mediumconst shr (0+16))
 16740  01B140  6EF8               	movwf	tblptru,c
 16741  01B142                     	endif
 16742                           
 16743                           ;stkvar	_i @ sp[(-2)+0]
 16744  01B142  0EFE               	movlw	-2
 16745  01B144  006F FF8C  F034    	movff	plusw1,btemp+10
 16746  01B14A  0EFF               	movlw	-1
 16747  01B14C  006F FF8C  F035    	movff	plusw1,btemp+11
 16748                           
 16749                           ;stkvar	_d @ sp[(-2)+-2]
 16750  01B152  0EFC               	movlw	-4
 16751  01B154  006F FF8C  F032    	movff	plusw1,btemp+8
 16752  01B15A  0EFD               	movlw	-3
 16753  01B15C  006F FF8C  F033    	movff	plusw1,btemp+9
 16754  01B162  5034               	movf	(btemp+10)^0,w,c
 16755  01B164  2432               	addwf	(btemp+8)^0,w,c
 16756  01B166  6ED9               	movwf	fsr2l,c
 16757  01B168  5035               	movf	(btemp+11)^0,w,c
 16758  01B16A  2033               	addwfc	(btemp+9)^0,w,c
 16759  01B16C  6EDA               	movwf	fsr2h,c
 16760  01B16E  0008               	tblrd		*
 16761  01B170  006F FFD7 FFDF     	movff	tablat,indf2
 16762                           
 16763                           ;stkvar	_i @ sp[(-2)+0]
 16764  01B176  0EFE               	movlw	-2
 16765  01B178  50E3               	movf	plusw1,w,c
 16766  01B17A  0F01               	addlw	1
 16767  01B17C  6E2A               	movwf	btemp^0,c
 16768  01B17E  0EFE               	movlw	-2
 16769  01B180  0060  F0AB  FFE3   	movff	btemp,plusw1
 16770  01B186  6A2A               	clrf	btemp^0,c
 16771  01B188  0EFF               	movlw	-1
 16772  01B18A  50E3               	movf	plusw1,w,c
 16773  01B18C  202A               	addwfc	btemp^0,w,c
 16774  01B18E  6E2A               	movwf	btemp^0,c
 16775  01B190  0EFF               	movlw	-1
 16776  01B192  0060  F0AB  FFE3   	movff	btemp,plusw1
 16777  01B198                     l16321:
 16778                           
 16779                           ;stkvar	_i @ sp[(-2)+0]
 16780  01B198  0EFE               	movlw	-2
 16781  01B19A  006F FF8C  F034    	movff	plusw1,btemp+10
 16782  01B1A0  0EFF               	movlw	-1
 16783  01B1A2  006F FF8C  F035    	movff	plusw1,btemp+11
 16784                           
 16785                           ;stkvar	_p @ sp[(-2)+-4]
 16786  01B1A8  0EFA               	movlw	-6
 16787  01B1AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16788  01B1B0  0EFB               	movlw	-5
 16789  01B1B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16790  01B1B8  006F FF78  F032    	movff	postinc2,btemp+8
 16791  01B1BE  006F FF74  F033    	movff	postdec2,btemp+9
 16792  01B1C4  5034               	movf	(btemp+10)^0,w,c
 16793  01B1C6  2632               	addwf	(btemp+8)^0,f,c
 16794  01B1C8  5035               	movf	(btemp+11)^0,w,c
 16795  01B1CA  2233               	addwfc	(btemp+9)^0,f,c
 16796  01B1CC  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16797  01B1D2  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16798  01B1D8                     	if	0	;tblptru may be non-zero
 16799  01B1D8                     	endif
 16800  01B1D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16801  01B1D8  0E00               	movlw	low (__mediumconst shr (0+16))
 16802  01B1DA  6EF8               	movwf	tblptru,c
 16803  01B1DC                     	endif
 16804  01B1DC  0008               	tblrd		*
 16805  01B1DE  50F5               	movf	tablat,w,c
 16806  01B1E0  0A3E               	xorlw	62
 16807  01B1E2  B4D8               	btfsc	status,2,c
 16808  01B1E4  D00E               	goto	u15820
 16809                           
 16810                           ;stkvar	_i @ sp[(-2)+0]
 16811  01B1E6  0EFF               	movlw	-1
 16812  01B1E8  BEE3               	btfsc	plusw1,7,c
 16813  01B1EA  D789               	goto	l16317
 16814  01B1EC  0EFF               	movlw	-1
 16815  01B1EE  50E3               	movf	plusw1,w,c
 16816  01B1F0  E108               	bnz	u15820
 16817  01B1F2  0EFE               	movlw	-2
 16818  01B1F4  006F FF8C  F02A    	movff	plusw1,btemp
 16819  01B1FA  0E06               	movlw	6
 16820  01B1FC  5E2A               	subwf	btemp^0,f,c
 16821  01B1FE  A0D8               	btfss	status,0,c
 16822  01B200  D77E               	goto	l16317
 16823  01B202                     u15820:
 16824                           
 16825                           ;stkvar	_p @ sp[(-2)+-4]
 16826  01B202  0EFA               	movlw	-6
 16827  01B204  006F FF8F FFD9     	movff	plusw1,fsr2l
 16828  01B20A  0EFB               	movlw	-5
 16829  01B20C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16830  01B212  2ADE               	incf	postinc2,f,c
 16831  01B214  0E00               	movlw	0
 16832  01B216  22DD               	addwfc	postdec2,f,c
 16833  01B218  D098               	goto	u15840
 16834  01B21A                     l16327:
 16835                           
 16836                           ;stkvar	_i @ sp[(-2)+0]
 16837  01B21A  0EFE               	movlw	-2
 16838  01B21C  6AE3               	clrf	plusw1,c
 16839  01B21E  0EFF               	movlw	-1
 16840  01B220  6AE3               	clrf	plusw1,c
 16841  01B222  D04D               	goto	l16333
 16842  01B224                     l16329:
 16843                           
 16844                           ;stkvar	_i @ sp[(-2)+0]
 16845  01B224  0EFE               	movlw	-2
 16846  01B226  006F FF8C  F034    	movff	plusw1,btemp+10
 16847  01B22C  0EFF               	movlw	-1
 16848  01B22E  006F FF8C  F035    	movff	plusw1,btemp+11
 16849                           
 16850                           ;stkvar	_p @ sp[(-2)+-4]
 16851  01B234  0EFA               	movlw	-6
 16852  01B236  006F FF8F FFD9     	movff	plusw1,fsr2l
 16853  01B23C  0EFB               	movlw	-5
 16854  01B23E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16855  01B244  006F FF78  F032    	movff	postinc2,btemp+8
 16856  01B24A  006F FF74  F033    	movff	postdec2,btemp+9
 16857  01B250  5034               	movf	(btemp+10)^0,w,c
 16858  01B252  2632               	addwf	(btemp+8)^0,f,c
 16859  01B254  5035               	movf	(btemp+11)^0,w,c
 16860  01B256  2233               	addwfc	(btemp+9)^0,f,c
 16861  01B258  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16862  01B25E  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16863  01B264                     	if	0	;tblptru may be non-zero
 16864  01B264                     	endif
 16865  01B264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16866  01B264  0E00               	movlw	low (__mediumconst shr (0+16))
 16867  01B266  6EF8               	movwf	tblptru,c
 16868  01B268                     	endif
 16869                           
 16870                           ;stkvar	_i @ sp[(-2)+0]
 16871  01B268  0EFE               	movlw	-2
 16872  01B26A  006F FF8C  F034    	movff	plusw1,btemp+10
 16873  01B270  0EFF               	movlw	-1
 16874  01B272  006F FF8C  F035    	movff	plusw1,btemp+11
 16875                           
 16876                           ;stkvar	_d @ sp[(-2)+-2]
 16877  01B278  0EFC               	movlw	-4
 16878  01B27A  006F FF8C  F032    	movff	plusw1,btemp+8
 16879  01B280  0EFD               	movlw	-3
 16880  01B282  006F FF8C  F033    	movff	plusw1,btemp+9
 16881  01B288  5034               	movf	(btemp+10)^0,w,c
 16882  01B28A  2432               	addwf	(btemp+8)^0,w,c
 16883  01B28C  6ED9               	movwf	fsr2l,c
 16884  01B28E  5035               	movf	(btemp+11)^0,w,c
 16885  01B290  2033               	addwfc	(btemp+9)^0,w,c
 16886  01B292  6EDA               	movwf	fsr2h,c
 16887  01B294  0008               	tblrd		*
 16888  01B296  006F FFD7 FFDF     	movff	tablat,indf2
 16889                           
 16890                           ;stkvar	_i @ sp[(-2)+0]
 16891  01B29C  0EFE               	movlw	-2
 16892  01B29E  50E3               	movf	plusw1,w,c
 16893  01B2A0  0F01               	addlw	1
 16894  01B2A2  6E2A               	movwf	btemp^0,c
 16895  01B2A4  0EFE               	movlw	-2
 16896  01B2A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 16897  01B2AC  6A2A               	clrf	btemp^0,c
 16898  01B2AE  0EFF               	movlw	-1
 16899  01B2B0  50E3               	movf	plusw1,w,c
 16900  01B2B2  202A               	addwfc	btemp^0,w,c
 16901  01B2B4  6E2A               	movwf	btemp^0,c
 16902  01B2B6  0EFF               	movlw	-1
 16903  01B2B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 16904  01B2BE                     l16333:
 16905  01B2BE  0E9F               	movlw	159
 16906  01B2C0  6E34               	movwf	(btemp+10)^0,c
 16907  01B2C2  0EFF               	movlw	255
 16908  01B2C4  6E35               	movwf	(btemp+11)^0,c
 16909                           
 16910                           ;stkvar	_i @ sp[(-2)+0]
 16911  01B2C6  0EFE               	movlw	-2
 16912  01B2C8  006F FF8C  F032    	movff	plusw1,btemp+8
 16913  01B2CE  0EFF               	movlw	-1
 16914  01B2D0  006F FF8C  F033    	movff	plusw1,btemp+9
 16915                           
 16916                           ;stkvar	_p @ sp[(-2)+-4]
 16917  01B2D6  0EFA               	movlw	-6
 16918  01B2D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16919  01B2DE  0EFB               	movlw	-5
 16920  01B2E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16921  01B2E6  006F FF78  F030    	movff	postinc2,btemp+6
 16922  01B2EC  006F FF74  F031    	movff	postdec2,btemp+7
 16923  01B2F2  5032               	movf	(btemp+8)^0,w,c
 16924  01B2F4  2630               	addwf	(btemp+6)^0,f,c
 16925  01B2F6  5033               	movf	(btemp+9)^0,w,c
 16926  01B2F8  2231               	addwfc	(btemp+7)^0,f,c
 16927  01B2FA  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16928  01B300  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16929  01B306                     	if	0	;tblptru may be non-zero
 16930  01B306                     	endif
 16931  01B306                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16932  01B306  0E00               	movlw	low (__mediumconst shr (0+16))
 16933  01B308  6EF8               	movwf	tblptru,c
 16934  01B30A                     	endif
 16935  01B30A  0008               	tblrd		*
 16936  01B30C  50F5               	movf	tablat,w,c
 16937  01B30E  6E32               	movwf	(btemp+8)^0,c
 16938  01B310  6A33               	clrf	(btemp+9)^0,c
 16939  01B312  0E20               	movlw	32
 16940  01B314  1232               	iorwf	(btemp+8)^0,f,c
 16941  01B316  0E00               	movlw	0
 16942  01B318  1233               	iorwf	(btemp+9)^0,f,c
 16943  01B31A  5034               	movf	(btemp+10)^0,w,c
 16944  01B31C  2632               	addwf	(btemp+8)^0,f,c
 16945  01B31E  5035               	movf	(btemp+11)^0,w,c
 16946  01B320  2233               	addwfc	(btemp+9)^0,f,c
 16947  01B322  5033               	movf	(btemp+9)^0,w,c
 16948  01B324  E112               	bnz	l16337
 16949  01B326  0E1A               	movlw	26
 16950  01B328  5C32               	subwf	(btemp+8)^0,w,c
 16951  01B32A  B0D8               	btfsc	status,0,c
 16952  01B32C  D00E               	goto	u15840
 16953                           
 16954                           ;stkvar	_i @ sp[(-2)+0]
 16955  01B32E  0EFF               	movlw	-1
 16956  01B330  BEE3               	btfsc	plusw1,7,c
 16957  01B332  D778               	goto	l16329
 16958  01B334  0EFF               	movlw	-1
 16959  01B336  50E3               	movf	plusw1,w,c
 16960  01B338  E108               	bnz	u15840
 16961  01B33A  0EFE               	movlw	-2
 16962  01B33C  006F FF8C  F02A    	movff	plusw1,btemp
 16963  01B342  0E06               	movlw	6
 16964  01B344  5E2A               	subwf	btemp^0,f,c
 16965  01B346  A0D8               	btfss	status,0,c
 16966  01B348  D76D               	goto	l16329
 16967  01B34A                     u15840:
 16968  01B34A                     l16337:
 16969                           
 16970                           ;stkvar	_i @ sp[(-2)+0]
 16971  01B34A  0EFE               	movlw	-2
 16972  01B34C  006F FF8C  F034    	movff	plusw1,btemp+10
 16973  01B352  0EFF               	movlw	-1
 16974  01B354  006F FF8C  F035    	movff	plusw1,btemp+11
 16975                           
 16976                           ;stkvar	_p @ sp[(-2)+-4]
 16977  01B35A  0EFA               	movlw	-6
 16978  01B35C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16979  01B362  0EFB               	movlw	-5
 16980  01B364  006F FF8F FFDA     	movff	plusw1,fsr2h
 16981  01B36A  5034               	movf	(btemp+10)^0,w,c
 16982  01B36C  26DE               	addwf	postinc2,f,c
 16983  01B36E  5035               	movf	(btemp+11)^0,w,c
 16984  01B370  22DD               	addwfc	postdec2,f,c
 16985                           
 16986                           ;stkvar	_i @ sp[(-2)+0]
 16987  01B372  0EFE               	movlw	-2
 16988  01B374  006F FF8C  F034    	movff	plusw1,btemp+10
 16989  01B37A  0EFF               	movlw	-1
 16990  01B37C  006F FF8C  F035    	movff	plusw1,btemp+11
 16991                           
 16992                           ;stkvar	_d @ sp[(-2)+-2]
 16993  01B382  0EFC               	movlw	-4
 16994  01B384  006F FF8C  F032    	movff	plusw1,btemp+8
 16995  01B38A  0EFD               	movlw	-3
 16996  01B38C  006F FF8C  F033    	movff	plusw1,btemp+9
 16997  01B392  5034               	movf	(btemp+10)^0,w,c
 16998  01B394  2432               	addwf	(btemp+8)^0,w,c
 16999  01B396  6ED9               	movwf	fsr2l,c
 17000  01B398  5035               	movf	(btemp+11)^0,w,c
 17001  01B39A  2033               	addwfc	(btemp+9)^0,w,c
 17002  01B39C  6EDA               	movwf	fsr2h,c
 17003  01B39E  0E00               	movlw	0
 17004  01B3A0  6EDF               	movwf	indf2,c
 17005                           
 17006                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17007  01B3A2  0EFA               	movlw	250
 17008  01B3A4  26E1               	addwf	fsr1l,f,c
 17009  01B3A6  0EFF               	movlw	255
 17010  01B3A8  22E2               	addwfc	fsr1h,f,c
 17011  01B3AA  0012               	return		;funcret
 17012  01B3AC                     __end_of_getname:
 17013                           	opt callstack 0
 17014                           
 17015 ;; *************** function ___secs_to_tm *****************
 17016 ;; Defined at:
 17017 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  t               8  [STACK] long long 
 17020 ;;  tm              2  [STACK] PTR struct tm
 17021 ;;		 -> localtime@tm(24), 
 17022 ;; Auto vars:     Size  Location     Type
 17023 ;;  years           8  [STACK] long long 
 17024 ;;  days            8  [STACK] long long 
 17025 ;;  secs            8  [STACK] long long 
 17026 ;;  remdays         4  [STACK] long 
 17027 ;;  q_cycles        4  [STACK] long 
 17028 ;;  c_cycles        4  [STACK] long 
 17029 ;;  remyears        4  [STACK] long 
 17030 ;;  remsecs         4  [STACK] long 
 17031 ;;  qc_cycles       4  [STACK] long 
 17032 ;;  months          2  [STACK] int 
 17033 ;;  leap            2  [STACK] int 
 17034 ;;  yday            2  [STACK] int 
 17035 ;;  wday            2  [STACK] int 
 17036 ;; Return value:  Size  Location     Type
 17037 ;;                  4  [STACK] long 
 17038 ;; Registers used:
 17039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 17040 ;; Tracked objects:
 17041 ;;		On entry : 0/39
 17042 ;;		On exit  : 0/0
 17043 ;;		Unchanged: 0/0
 17044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17049 ;;Total ram usage:        0 bytes
 17050 ;; Hardware stack levels used:    1
 17051 ;; Hardware stack levels required when called:   16
 17052 ;; This function calls:
 17053 ;;		___aldiv
 17054 ;;		___almod
 17055 ;;		___aodiv
 17056 ;;		___aomod
 17057 ;;		___lmul
 17058 ;;		___omul
 17059 ;; This function is called by:
 17060 ;;		___localtime_r
 17061 ;; This function uses a reentrant model
 17062 ;;
 17063                           
 17064                           	psect	text50
 17065  01281A                     __ptext50:
 17066                           	opt callstack 0
 17067  01281A                     ___secs_to_tm:
 17068                           	opt callstack 0
 17069                           
 17070                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17071  01281A  0E39               	movlw	57
 17072  01281C  26E1               	addwf	fsr1l,f,c
 17073  01281E  0E00               	movlw	0
 17074  012820  22E2               	addwfc	fsr1h,f,c
 17075                           
 17076                           ;stkvar	_t @ sp[(-57)+-8]
 17077                           
 17078                           ;incstack = 0
 17079  012822  0EC6               	movlw	-58
 17080  012824  AEE3               	btfss	plusw1,7,c
 17081  012826  D026               	goto	u16460
 17082  012828  0EC1               	movlw	-63
 17083  01282A  006F FF8C  F02A    	movff	plusw1,btemp
 17084  012830  0E80               	movlw	128
 17085  012832  5E2A               	subwf	btemp^0,f,c
 17086  012834  0EC2               	movlw	-62
 17087  012836  006F FF8C  F02A    	movff	plusw1,btemp
 17088  01283C  0EBD               	movlw	189
 17089  01283E  5A2A               	subwfb	btemp^0,f,c
 17090  012840  0EC3               	movlw	-61
 17091  012842  006F FF8C  F02A    	movff	plusw1,btemp
 17092  012848  0E0E               	movlw	14
 17093  01284A  5A2A               	subwfb	btemp^0,f,c
 17094  01284C  0EC4               	movlw	-60
 17095  01284E  006F FF8C  F02A    	movff	plusw1,btemp
 17096  012854  0EFF               	movlw	255
 17097  012856  5A2A               	subwfb	btemp^0,f,c
 17098  012858  0EC5               	movlw	-59
 17099  01285A  006F FF8C  F02A    	movff	plusw1,btemp
 17100  012860  0EFF               	movlw	255
 17101  012862  5A2A               	subwfb	btemp^0,f,c
 17102  012864  0EC6               	movlw	-58
 17103  012866  006F FF8C  F02A    	movff	plusw1,btemp
 17104  01286C  0EFF               	movlw	255
 17105  01286E  5A2A               	subwfb	btemp^0,f,c
 17106  012870  A0D8               	btfss	status,0,c
 17107  012872  D028               	goto	u16470
 17108  012874                     u16460:
 17109                           
 17110                           ;stkvar	_t @ sp[(-57)+-8]
 17111  012874  0EC6               	movlw	-58
 17112  012876  BEE3               	btfsc	plusw1,7,c
 17113  012878  D02F               	goto	l16905
 17114  01287A  0EC6               	movlw	-58
 17115  01287C  50E3               	movf	plusw1,w,c
 17116  01287E  E122               	bnz	u16470
 17117  012880  0EC5               	movlw	-59
 17118  012882  50E3               	movf	plusw1,w,c
 17119  012884  E11F               	bnz	u16470
 17120  012886  0EC4               	movlw	-60
 17121  012888  50E3               	movf	plusw1,w,c
 17122  01288A  E11C               	bnz	u16470
 17123  01288C  0EBF               	movlw	-65
 17124  01288E  04E3               	decf	plusw1,w,c
 17125  012890  0EC0               	movlw	-64
 17126  012892  006F FF8C  F02A    	movff	plusw1,btemp
 17127  012898  0E7B               	movlw	123
 17128  01289A  5A2A               	subwfb	btemp^0,f,c
 17129  01289C  0EC1               	movlw	-63
 17130  01289E  006F FF8C  F02A    	movff	plusw1,btemp
 17131  0128A4  0E9D               	movlw	157
 17132  0128A6  5A2A               	subwfb	btemp^0,f,c
 17133  0128A8  0EC2               	movlw	-62
 17134  0128AA  006F FF8C  F02A    	movff	plusw1,btemp
 17135  0128B0  0E40               	movlw	64
 17136  0128B2  5A2A               	subwfb	btemp^0,f,c
 17137  0128B4  0EC3               	movlw	-61
 17138  0128B6  006F FF8C  F02A    	movff	plusw1,btemp
 17139  0128BC  0EF1               	movlw	241
 17140  0128BE  5A2A               	subwfb	btemp^0,f,c
 17141  0128C0  A0D8               	btfss	status,0,c
 17142  0128C2  D00A               	goto	l16905
 17143  0128C4                     u16470:
 17144  0128C4  0EFF               	movlw	255
 17145  0128C6  6E2A               	movwf	btemp^0,c
 17146  0128C8  0EFF               	movlw	255
 17147  0128CA  6E2B               	movwf	(btemp+1)^0,c
 17148  0128CC  0EFF               	movlw	255
 17149  0128CE  6E2C               	movwf	(btemp+2)^0,c
 17150  0128D0  0EFF               	movlw	255
 17151  0128D2  6E2D               	movwf	(btemp+3)^0,c
 17152  0128D4  EF71  F09C         	goto	l3858
 17153  0128D8                     l16905:
 17154                           
 17155                           ;stkvar	_t @ sp[(-57)+-8]
 17156  0128D8  0EBF               	movlw	-65
 17157  0128DA  50E3               	movf	plusw1,w,c
 17158  0128DC  0F80               	addlw	128
 17159  0128DE  6E3A               	movwf	(btemp+16)^0,c
 17160  0128E0  0EC0               	movlw	-64
 17161  0128E2  006F FF8C  F03B    	movff	plusw1,btemp+17
 17162  0128E8  0EA2               	movlw	162
 17163  0128EA  223B               	addwfc	(btemp+17)^0,f,c
 17164  0128EC  0EC1               	movlw	-63
 17165  0128EE  006F FF8C  F03C    	movff	plusw1,btemp+18
 17166  0128F4  0E43               	movlw	67
 17167  0128F6  223C               	addwfc	(btemp+18)^0,f,c
 17168  0128F8  0EC2               	movlw	-62
 17169  0128FA  006F FF8C  F03D    	movff	plusw1,btemp+19
 17170  012900  0EC7               	movlw	199
 17171  012902  223D               	addwfc	(btemp+19)^0,f,c
 17172  012904  0EC3               	movlw	-61
 17173  012906  006F FF8C  F03E    	movff	plusw1,btemp+20
 17174  01290C  0EFF               	movlw	255
 17175  01290E  223E               	addwfc	(btemp+20)^0,f,c
 17176  012910  0EC4               	movlw	-60
 17177  012912  006F FF8C  F03F    	movff	plusw1,btemp+21
 17178  012918  0EFF               	movlw	255
 17179  01291A  223F               	addwfc	(btemp+21)^0,f,c
 17180  01291C  0EC5               	movlw	-59
 17181  01291E  006F FF8C  F040    	movff	plusw1,btemp+22
 17182  012924  0EFF               	movlw	255
 17183  012926  2240               	addwfc	(btemp+22)^0,f,c
 17184  012928  0EC6               	movlw	-58
 17185  01292A  006F FF8C  F041    	movff	plusw1,btemp+23
 17186  012930  0EFF               	movlw	255
 17187  012932  2241               	addwfc	(btemp+23)^0,f,c
 17188                           
 17189                           ;stkvar	_secs @ sp[(-57)+17]
 17190  012934  0ED8               	movlw	-40
 17191  012936  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17192  01293C  0ED9               	movlw	-39
 17193  01293E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17194  012944  0EDA               	movlw	-38
 17195  012946  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17196  01294C  0EDB               	movlw	-37
 17197  01294E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17198  012954  0EDC               	movlw	-36
 17199  012956  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17200  01295C  0EDD               	movlw	-35
 17201  01295E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17202  012964  0EDE               	movlw	-34
 17203  012966  0060  F103  FFE3   	movff	btemp+22,plusw1
 17204  01296C  0EDF               	movlw	-33
 17205  01296E  0060  F107  FFE3   	movff	btemp+23,plusw1
 17206  012974  0E80               	movlw	128
 17207  012976  6EE6               	movwf	postinc1,c
 17208  012978  0E51               	movlw	81
 17209  01297A  6EE6               	movwf	postinc1,c
 17210  01297C  0E01               	movlw	1
 17211  01297E  6EE6               	movwf	postinc1,c
 17212  012980  0E00               	movlw	0
 17213  012982  6EE6               	movwf	postinc1,c
 17214  012984  0E00               	movlw	0
 17215  012986  6EE6               	movwf	postinc1,c
 17216  012988  0E00               	movlw	0
 17217  01298A  6EE6               	movwf	postinc1,c
 17218  01298C  0E00               	movlw	0
 17219  01298E  6EE6               	movwf	postinc1,c
 17220  012990  0E00               	movlw	0
 17221  012992  6EE6               	movwf	postinc1,c
 17222                           
 17223                           ;stkvar	_secs @ sp[(-65)+17]
 17224  012994  50E1               	movf	fsr1l,w,c
 17225  012996  0FD0               	addlw	-48
 17226  012998  6ED9               	movwf	fsr2l,c
 17227  01299A  50E2               	movf	fsr1h,w,c
 17228  01299C  6EDA               	movwf	fsr2h,c
 17229  01299E  0EFF               	movlw	255
 17230  0129A0  22DA               	addwfc	fsr2h,f,c
 17231  0129A2  006F FF7B FFE6     	movff	postinc2,postinc1
 17232  0129A8  006F FF7B FFE6     	movff	postinc2,postinc1
 17233  0129AE  006F FF7B FFE6     	movff	postinc2,postinc1
 17234  0129B4  006F FF7B FFE6     	movff	postinc2,postinc1
 17235  0129BA  006F FF7B FFE6     	movff	postinc2,postinc1
 17236  0129C0  006F FF7B FFE6     	movff	postinc2,postinc1
 17237  0129C6  006F FF7B FFE6     	movff	postinc2,postinc1
 17238  0129CC  006F FF7B FFE6     	movff	postinc2,postinc1
 17239  0129D2  EC04  F0E2         	call	___aodiv	;wreg free
 17240  0129D6  52E5               	movf	postdec1,f,c
 17241  0129D8  006F FF9C  F041    	movff	indf1,btemp+23
 17242  0129DE  52E5               	movf	postdec1,f,c
 17243  0129E0  006F FF9C  F040    	movff	indf1,btemp+22
 17244  0129E6  52E5               	movf	postdec1,f,c
 17245  0129E8  006F FF9C  F03F    	movff	indf1,btemp+21
 17246  0129EE  52E5               	movf	postdec1,f,c
 17247  0129F0  006F FF9C  F03E    	movff	indf1,btemp+20
 17248  0129F6  52E5               	movf	postdec1,f,c
 17249  0129F8  006F FF9C  F03D    	movff	indf1,btemp+19
 17250  0129FE  52E5               	movf	postdec1,f,c
 17251  012A00  006F FF9C  F03C    	movff	indf1,btemp+18
 17252  012A06  52E5               	movf	postdec1,f,c
 17253  012A08  006F FF9C  F03B    	movff	indf1,btemp+17
 17254  012A0E  52E5               	movf	postdec1,f,c
 17255  012A10  006F FF9C  F03A    	movff	indf1,btemp+16
 17256  012A16  0EF8               	movlw	248
 17257  012A18  26E1               	addwf	fsr1l,f,c
 17258  012A1A  0EFF               	movlw	255
 17259  012A1C  22E2               	addwfc	fsr1h,f,c
 17260                           
 17261                           ;stkvar	_days @ sp[(-57)+9]
 17262  012A1E  0ED0               	movlw	-48
 17263  012A20  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17264  012A26  0ED1               	movlw	-47
 17265  012A28  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17266  012A2E  0ED2               	movlw	-46
 17267  012A30  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17268  012A36  0ED3               	movlw	-45
 17269  012A38  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17270  012A3E  0ED4               	movlw	-44
 17271  012A40  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17272  012A46  0ED5               	movlw	-43
 17273  012A48  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17274  012A4E  0ED6               	movlw	-42
 17275  012A50  0060  F103  FFE3   	movff	btemp+22,plusw1
 17276  012A56  0ED7               	movlw	-41
 17277  012A58  0060  F107  FFE3   	movff	btemp+23,plusw1
 17278  012A5E  0E80               	movlw	128
 17279  012A60  6EE6               	movwf	postinc1,c
 17280  012A62  0E51               	movlw	81
 17281  012A64  6EE6               	movwf	postinc1,c
 17282  012A66  0E01               	movlw	1
 17283  012A68  6EE6               	movwf	postinc1,c
 17284  012A6A  0E00               	movlw	0
 17285  012A6C  6EE6               	movwf	postinc1,c
 17286  012A6E  0E00               	movlw	0
 17287  012A70  6EE6               	movwf	postinc1,c
 17288  012A72  0E00               	movlw	0
 17289  012A74  6EE6               	movwf	postinc1,c
 17290  012A76  0E00               	movlw	0
 17291  012A78  6EE6               	movwf	postinc1,c
 17292  012A7A  0E00               	movlw	0
 17293  012A7C  6EE6               	movwf	postinc1,c
 17294                           
 17295                           ;stkvar	_secs @ sp[(-65)+17]
 17296  012A7E  50E1               	movf	fsr1l,w,c
 17297  012A80  0FD0               	addlw	-48
 17298  012A82  6ED9               	movwf	fsr2l,c
 17299  012A84  50E2               	movf	fsr1h,w,c
 17300  012A86  6EDA               	movwf	fsr2h,c
 17301  012A88  0EFF               	movlw	255
 17302  012A8A  22DA               	addwfc	fsr2h,f,c
 17303  012A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17304  012A92  006F FF7B FFE6     	movff	postinc2,postinc1
 17305  012A98  006F FF7B FFE6     	movff	postinc2,postinc1
 17306  012A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17307  012AA4  006F FF7B FFE6     	movff	postinc2,postinc1
 17308  012AAA  006F FF7B FFE6     	movff	postinc2,postinc1
 17309  012AB0  006F FF7B FFE6     	movff	postinc2,postinc1
 17310  012AB6  006F FF7B FFE6     	movff	postinc2,postinc1
 17311  012ABC  ECF0  F0E7         	call	___aomod	;wreg free
 17312  012AC0  52E5               	movf	postdec1,f,c
 17313  012AC2  006F FF9C  F041    	movff	indf1,btemp+23
 17314  012AC8  52E5               	movf	postdec1,f,c
 17315  012ACA  006F FF9C  F040    	movff	indf1,btemp+22
 17316  012AD0  52E5               	movf	postdec1,f,c
 17317  012AD2  006F FF9C  F03F    	movff	indf1,btemp+21
 17318  012AD8  52E5               	movf	postdec1,f,c
 17319  012ADA  006F FF9C  F03E    	movff	indf1,btemp+20
 17320  012AE0  52E5               	movf	postdec1,f,c
 17321  012AE2  006F FF9C  F03D    	movff	indf1,btemp+19
 17322  012AE8  52E5               	movf	postdec1,f,c
 17323  012AEA  006F FF9C  F03C    	movff	indf1,btemp+18
 17324  012AF0  52E5               	movf	postdec1,f,c
 17325  012AF2  006F FF9C  F03B    	movff	indf1,btemp+17
 17326  012AF8  52E5               	movf	postdec1,f,c
 17327  012AFA  006F FF9C  F03A    	movff	indf1,btemp+16
 17328  012B00  0EF8               	movlw	248
 17329  012B02  26E1               	addwf	fsr1l,f,c
 17330  012B04  0EFF               	movlw	255
 17331  012B06  22E2               	addwfc	fsr1h,f,c
 17332  012B08  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17333  012B0E  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17334  012B14  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17335  012B1A  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17336                           
 17337                           ;stkvar	_remsecs @ sp[(-57)+41]
 17338  012B20  0EF0               	movlw	-16
 17339  012B22  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17340  012B28  0EF1               	movlw	-15
 17341  012B2A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17342  012B30  0EF2               	movlw	-14
 17343  012B32  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17344  012B38  0EF3               	movlw	-13
 17345  012B3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17346                           
 17347                           ;stkvar	_remsecs @ sp[(-57)+41]
 17348  012B40  0EF3               	movlw	-13
 17349  012B42  AEE3               	btfss	plusw1,7,c
 17350  012B44  D01F               	goto	l16917
 17351                           
 17352                           ;stkvar	_remsecs @ sp[(-57)+41]
 17353  012B46  50E1               	movf	fsr1l,w,c
 17354  012B48  0FF0               	addlw	-16
 17355  012B4A  6ED9               	movwf	fsr2l,c
 17356  012B4C  50E2               	movf	fsr1h,w,c
 17357  012B4E  6EDA               	movwf	fsr2h,c
 17358  012B50  0EFF               	movlw	255
 17359  012B52  22DA               	addwfc	fsr2h,f,c
 17360  012B54  0E80               	movlw	128
 17361  012B56  26DE               	addwf	postinc2,f,c
 17362  012B58  0E51               	movlw	81
 17363  012B5A  22DE               	addwfc	postinc2,f,c
 17364  012B5C  0E01               	movlw	1
 17365  012B5E  22DE               	addwfc	postinc2,f,c
 17366  012B60  0E00               	movlw	0
 17367  012B62  22DE               	addwfc	postinc2,f,c
 17368                           
 17369                           ;stkvar	_days @ sp[(-57)+9]
 17370  012B64  50E1               	movf	fsr1l,w,c
 17371  012B66  0FD0               	addlw	-48
 17372  012B68  6ED9               	movwf	fsr2l,c
 17373  012B6A  50E2               	movf	fsr1h,w,c
 17374  012B6C  6EDA               	movwf	fsr2h,c
 17375  012B6E  0EFF               	movlw	255
 17376  012B70  22DA               	addwfc	fsr2h,f,c
 17377  012B72  06DE               	decf	postinc2,f,c
 17378  012B74  0E00               	movlw	0
 17379  012B76  5ADE               	subwfb	postinc2,f,c
 17380  012B78  5ADE               	subwfb	postinc2,f,c
 17381  012B7A  5ADE               	subwfb	postinc2,f,c
 17382  012B7C  5ADE               	subwfb	postinc2,f,c
 17383  012B7E  5ADE               	subwfb	postinc2,f,c
 17384  012B80  5ADE               	subwfb	postinc2,f,c
 17385  012B82  5ADE               	subwfb	postinc2,f,c
 17386  012B84                     l16917:
 17387  012B84  0E07               	movlw	7
 17388  012B86  6EE6               	movwf	postinc1,c
 17389  012B88  0E00               	movlw	0
 17390  012B8A  6EE6               	movwf	postinc1,c
 17391  012B8C  0E00               	movlw	0
 17392  012B8E  6EE6               	movwf	postinc1,c
 17393  012B90  0E00               	movlw	0
 17394  012B92  6EE6               	movwf	postinc1,c
 17395  012B94  0E00               	movlw	0
 17396  012B96  6EE6               	movwf	postinc1,c
 17397  012B98  0E00               	movlw	0
 17398  012B9A  6EE6               	movwf	postinc1,c
 17399  012B9C  0E00               	movlw	0
 17400  012B9E  6EE6               	movwf	postinc1,c
 17401  012BA0  0E00               	movlw	0
 17402  012BA2  6EE6               	movwf	postinc1,c
 17403                           
 17404                           ;stkvar	_days @ sp[(-65)+9]
 17405  012BA4  0EC8               	movlw	-56
 17406  012BA6  50E3               	movf	plusw1,w,c
 17407  012BA8  0F03               	addlw	3
 17408  012BAA  6E3A               	movwf	(btemp+16)^0,c
 17409  012BAC  0EC9               	movlw	-55
 17410  012BAE  006F FF8C  F03B    	movff	plusw1,btemp+17
 17411  012BB4  0E00               	movlw	0
 17412  012BB6  223B               	addwfc	(btemp+17)^0,f,c
 17413  012BB8  0ECA               	movlw	-54
 17414  012BBA  006F FF8C  F03C    	movff	plusw1,btemp+18
 17415  012BC0  0E00               	movlw	0
 17416  012BC2  223C               	addwfc	(btemp+18)^0,f,c
 17417  012BC4  0ECB               	movlw	-53
 17418  012BC6  006F FF8C  F03D    	movff	plusw1,btemp+19
 17419  012BCC  0E00               	movlw	0
 17420  012BCE  223D               	addwfc	(btemp+19)^0,f,c
 17421  012BD0  0ECC               	movlw	-52
 17422  012BD2  006F FF8C  F03E    	movff	plusw1,btemp+20
 17423  012BD8  0E00               	movlw	0
 17424  012BDA  223E               	addwfc	(btemp+20)^0,f,c
 17425  012BDC  0ECD               	movlw	-51
 17426  012BDE  006F FF8C  F03F    	movff	plusw1,btemp+21
 17427  012BE4  0E00               	movlw	0
 17428  012BE6  223F               	addwfc	(btemp+21)^0,f,c
 17429  012BE8  0ECE               	movlw	-50
 17430  012BEA  006F FF8C  F040    	movff	plusw1,btemp+22
 17431  012BF0  0E00               	movlw	0
 17432  012BF2  2240               	addwfc	(btemp+22)^0,f,c
 17433  012BF4  0ECF               	movlw	-49
 17434  012BF6  006F FF8C  F041    	movff	plusw1,btemp+23
 17435  012BFC  0E00               	movlw	0
 17436  012BFE  2241               	addwfc	(btemp+23)^0,f,c
 17437  012C00  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17438  012C06  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17439  012C0C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17440  012C12  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17441  012C18  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17442  012C1E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17443  012C24  0060  F103  FFE6   	movff	btemp+22,postinc1
 17444  012C2A  0060  F107  FFE6   	movff	btemp+23,postinc1
 17445  012C30  ECF0  F0E7         	call	___aomod	;wreg free
 17446  012C34  52E5               	movf	postdec1,f,c
 17447  012C36  006F FF9C  F041    	movff	indf1,btemp+23
 17448  012C3C  52E5               	movf	postdec1,f,c
 17449  012C3E  006F FF9C  F040    	movff	indf1,btemp+22
 17450  012C44  52E5               	movf	postdec1,f,c
 17451  012C46  006F FF9C  F03F    	movff	indf1,btemp+21
 17452  012C4C  52E5               	movf	postdec1,f,c
 17453  012C4E  006F FF9C  F03E    	movff	indf1,btemp+20
 17454  012C54  52E5               	movf	postdec1,f,c
 17455  012C56  006F FF9C  F03D    	movff	indf1,btemp+19
 17456  012C5C  52E5               	movf	postdec1,f,c
 17457  012C5E  006F FF9C  F03C    	movff	indf1,btemp+18
 17458  012C64  52E5               	movf	postdec1,f,c
 17459  012C66  006F FF9C  F03B    	movff	indf1,btemp+17
 17460  012C6C  52E5               	movf	postdec1,f,c
 17461  012C6E  006F FF9C  F03A    	movff	indf1,btemp+16
 17462  012C74  0EF8               	movlw	248
 17463  012C76  26E1               	addwf	fsr1l,f,c
 17464  012C78  0EFF               	movlw	255
 17465  012C7A  22E2               	addwfc	fsr1h,f,c
 17466  012C7C  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17467  012C82  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17468                           
 17469                           ;stkvar	_wday @ sp[(-57)+55]
 17470  012C88  0EFE               	movlw	-2
 17471  012C8A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17472  012C90  0EFF               	movlw	-1
 17473  012C92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17474                           
 17475                           ;stkvar	_wday @ sp[(-57)+55]
 17476  012C98  0EFF               	movlw	-1
 17477  012C9A  AEE3               	btfss	plusw1,7,c
 17478  012C9C  D011               	goto	l16923
 17479                           
 17480                           ;stkvar	_wday @ sp[(-57)+55]
 17481  012C9E  0EFE               	movlw	-2
 17482  012CA0  50E3               	movf	plusw1,w,c
 17483  012CA2  0F07               	addlw	7
 17484  012CA4  6E2A               	movwf	btemp^0,c
 17485  012CA6  0EFE               	movlw	-2
 17486  012CA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 17487  012CAE  6A2A               	clrf	btemp^0,c
 17488  012CB0  0EFF               	movlw	-1
 17489  012CB2  50E3               	movf	plusw1,w,c
 17490  012CB4  202A               	addwfc	btemp^0,w,c
 17491  012CB6  6E2A               	movwf	btemp^0,c
 17492  012CB8  0EFF               	movlw	-1
 17493  012CBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 17494  012CC0                     l16923:
 17495  012CC0  0EB1               	movlw	177
 17496  012CC2  6EE6               	movwf	postinc1,c
 17497  012CC4  0E3A               	movlw	58
 17498  012CC6  6EE6               	movwf	postinc1,c
 17499  012CC8  0E02               	movlw	2
 17500  012CCA  6EE6               	movwf	postinc1,c
 17501  012CCC  0E00               	movlw	0
 17502  012CCE  6EE6               	movwf	postinc1,c
 17503  012CD0  0E00               	movlw	0
 17504  012CD2  6EE6               	movwf	postinc1,c
 17505  012CD4  0E00               	movlw	0
 17506  012CD6  6EE6               	movwf	postinc1,c
 17507  012CD8  0E00               	movlw	0
 17508  012CDA  6EE6               	movwf	postinc1,c
 17509  012CDC  0E00               	movlw	0
 17510  012CDE  6EE6               	movwf	postinc1,c
 17511                           
 17512                           ;stkvar	_days @ sp[(-65)+9]
 17513  012CE0  50E1               	movf	fsr1l,w,c
 17514  012CE2  0FC8               	addlw	-56
 17515  012CE4  6ED9               	movwf	fsr2l,c
 17516  012CE6  50E2               	movf	fsr1h,w,c
 17517  012CE8  6EDA               	movwf	fsr2h,c
 17518  012CEA  0EFF               	movlw	255
 17519  012CEC  22DA               	addwfc	fsr2h,f,c
 17520  012CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 17521  012CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 17522  012CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 17523  012D00  006F FF7B FFE6     	movff	postinc2,postinc1
 17524  012D06  006F FF7B FFE6     	movff	postinc2,postinc1
 17525  012D0C  006F FF7B FFE6     	movff	postinc2,postinc1
 17526  012D12  006F FF7B FFE6     	movff	postinc2,postinc1
 17527  012D18  006F FF7B FFE6     	movff	postinc2,postinc1
 17528  012D1E  EC04  F0E2         	call	___aodiv	;wreg free
 17529  012D22  52E5               	movf	postdec1,f,c
 17530  012D24  006F FF9C  F041    	movff	indf1,btemp+23
 17531  012D2A  52E5               	movf	postdec1,f,c
 17532  012D2C  006F FF9C  F040    	movff	indf1,btemp+22
 17533  012D32  52E5               	movf	postdec1,f,c
 17534  012D34  006F FF9C  F03F    	movff	indf1,btemp+21
 17535  012D3A  52E5               	movf	postdec1,f,c
 17536  012D3C  006F FF9C  F03E    	movff	indf1,btemp+20
 17537  012D42  52E5               	movf	postdec1,f,c
 17538  012D44  006F FF9C  F03D    	movff	indf1,btemp+19
 17539  012D4A  52E5               	movf	postdec1,f,c
 17540  012D4C  006F FF9C  F03C    	movff	indf1,btemp+18
 17541  012D52  52E5               	movf	postdec1,f,c
 17542  012D54  006F FF9C  F03B    	movff	indf1,btemp+17
 17543  012D5A  52E5               	movf	postdec1,f,c
 17544  012D5C  006F FF9C  F03A    	movff	indf1,btemp+16
 17545  012D62  0EF8               	movlw	248
 17546  012D64  26E1               	addwf	fsr1l,f,c
 17547  012D66  0EFF               	movlw	255
 17548  012D68  22E2               	addwfc	fsr1h,f,c
 17549  012D6A  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17550  012D70  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17551  012D76  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17552  012D7C  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17553                           
 17554                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17555  012D82  0EF4               	movlw	-12
 17556  012D84  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17557  012D8A  0EF5               	movlw	-11
 17558  012D8C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17559  012D92  0EF6               	movlw	-10
 17560  012D94  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17561  012D9A  0EF7               	movlw	-9
 17562  012D9C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17563  012DA2  0EB1               	movlw	177
 17564  012DA4  6EE6               	movwf	postinc1,c
 17565  012DA6  0E3A               	movlw	58
 17566  012DA8  6EE6               	movwf	postinc1,c
 17567  012DAA  0E02               	movlw	2
 17568  012DAC  6EE6               	movwf	postinc1,c
 17569  012DAE  0E00               	movlw	0
 17570  012DB0  6EE6               	movwf	postinc1,c
 17571  012DB2  0E00               	movlw	0
 17572  012DB4  6EE6               	movwf	postinc1,c
 17573  012DB6  0E00               	movlw	0
 17574  012DB8  6EE6               	movwf	postinc1,c
 17575  012DBA  0E00               	movlw	0
 17576  012DBC  6EE6               	movwf	postinc1,c
 17577  012DBE  0E00               	movlw	0
 17578  012DC0  6EE6               	movwf	postinc1,c
 17579                           
 17580                           ;stkvar	_days @ sp[(-65)+9]
 17581  012DC2  50E1               	movf	fsr1l,w,c
 17582  012DC4  0FC8               	addlw	-56
 17583  012DC6  6ED9               	movwf	fsr2l,c
 17584  012DC8  50E2               	movf	fsr1h,w,c
 17585  012DCA  6EDA               	movwf	fsr2h,c
 17586  012DCC  0EFF               	movlw	255
 17587  012DCE  22DA               	addwfc	fsr2h,f,c
 17588  012DD0  006F FF7B FFE6     	movff	postinc2,postinc1
 17589  012DD6  006F FF7B FFE6     	movff	postinc2,postinc1
 17590  012DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 17591  012DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 17592  012DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 17593  012DEE  006F FF7B FFE6     	movff	postinc2,postinc1
 17594  012DF4  006F FF7B FFE6     	movff	postinc2,postinc1
 17595  012DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 17596  012E00  ECF0  F0E7         	call	___aomod	;wreg free
 17597  012E04  52E5               	movf	postdec1,f,c
 17598  012E06  006F FF9C  F041    	movff	indf1,btemp+23
 17599  012E0C  52E5               	movf	postdec1,f,c
 17600  012E0E  006F FF9C  F040    	movff	indf1,btemp+22
 17601  012E14  52E5               	movf	postdec1,f,c
 17602  012E16  006F FF9C  F03F    	movff	indf1,btemp+21
 17603  012E1C  52E5               	movf	postdec1,f,c
 17604  012E1E  006F FF9C  F03E    	movff	indf1,btemp+20
 17605  012E24  52E5               	movf	postdec1,f,c
 17606  012E26  006F FF9C  F03D    	movff	indf1,btemp+19
 17607  012E2C  52E5               	movf	postdec1,f,c
 17608  012E2E  006F FF9C  F03C    	movff	indf1,btemp+18
 17609  012E34  52E5               	movf	postdec1,f,c
 17610  012E36  006F FF9C  F03B    	movff	indf1,btemp+17
 17611  012E3C  52E5               	movf	postdec1,f,c
 17612  012E3E  006F FF9C  F03A    	movff	indf1,btemp+16
 17613  012E44  0EF8               	movlw	248
 17614  012E46  26E1               	addwf	fsr1l,f,c
 17615  012E48  0EFF               	movlw	255
 17616  012E4A  22E2               	addwfc	fsr1h,f,c
 17617  012E4C  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17618  012E52  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17619  012E58  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17620  012E5E  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17621                           
 17622                           ;stkvar	_remdays @ sp[(-57)+25]
 17623  012E64  0EE0               	movlw	-32
 17624  012E66  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17625  012E6C  0EE1               	movlw	-31
 17626  012E6E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17627  012E74  0EE2               	movlw	-30
 17628  012E76  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17629  012E7C  0EE3               	movlw	-29
 17630  012E7E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17631                           
 17632                           ;stkvar	_remdays @ sp[(-57)+25]
 17633  012E84  0EE3               	movlw	-29
 17634  012E86  AEE3               	btfss	plusw1,7,c
 17635  012E88  D01B               	goto	l16931
 17636                           
 17637                           ;stkvar	_remdays @ sp[(-57)+25]
 17638  012E8A  50E1               	movf	fsr1l,w,c
 17639  012E8C  0FE0               	addlw	-32
 17640  012E8E  6ED9               	movwf	fsr2l,c
 17641  012E90  50E2               	movf	fsr1h,w,c
 17642  012E92  6EDA               	movwf	fsr2h,c
 17643  012E94  0EFF               	movlw	255
 17644  012E96  22DA               	addwfc	fsr2h,f,c
 17645  012E98  0EB1               	movlw	177
 17646  012E9A  26DE               	addwf	postinc2,f,c
 17647  012E9C  0E3A               	movlw	58
 17648  012E9E  22DE               	addwfc	postinc2,f,c
 17649  012EA0  0E02               	movlw	2
 17650  012EA2  22DE               	addwfc	postinc2,f,c
 17651  012EA4  0E00               	movlw	0
 17652  012EA6  22DE               	addwfc	postinc2,f,c
 17653                           
 17654                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17655  012EA8  50E1               	movf	fsr1l,w,c
 17656  012EAA  0FF4               	addlw	-12
 17657  012EAC  6ED9               	movwf	fsr2l,c
 17658  012EAE  50E2               	movf	fsr1h,w,c
 17659  012EB0  6EDA               	movwf	fsr2h,c
 17660  012EB2  0EFF               	movlw	255
 17661  012EB4  22DA               	addwfc	fsr2h,f,c
 17662  012EB6  06DE               	decf	postinc2,f,c
 17663  012EB8  0E00               	movlw	0
 17664  012EBA  5ADE               	subwfb	postinc2,f,c
 17665  012EBC  5ADE               	subwfb	postinc2,f,c
 17666  012EBE  5ADE               	subwfb	postinc2,f,c
 17667  012EC0                     l16931:
 17668  012EC0  0EAC               	movlw	172
 17669  012EC2  6EE6               	movwf	postinc1,c
 17670  012EC4  0E8E               	movlw	142
 17671  012EC6  6EE6               	movwf	postinc1,c
 17672  012EC8  0E00               	movlw	0
 17673  012ECA  6EE6               	movwf	postinc1,c
 17674  012ECC  0E00               	movlw	0
 17675  012ECE  6EE6               	movwf	postinc1,c
 17676                           
 17677                           ;stkvar	_remdays @ sp[(-61)+25]
 17678  012ED0  0EDC               	movlw	-36
 17679  012ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 17680  012ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 17681  012EDE  006F FF8F FFE6     	movff	plusw1,postinc1
 17682  012EE4  006F FF8F FFE6     	movff	plusw1,postinc1
 17683  012EEA  ECB0  F0F1         	call	___aldiv	;wreg free
 17684                           
 17685                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17686  012EEE  0EE8               	movlw	-24
 17687  012EF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 17688  012EF6  0EE9               	movlw	-23
 17689  012EF8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17690  012EFE  0EEA               	movlw	-22
 17691  012F00  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17692  012F06  0EEB               	movlw	-21
 17693  012F08  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17694                           
 17695                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17696  012F0E  0EE8               	movlw	-24
 17697  012F10  006F FF8C  F02A    	movff	plusw1,btemp
 17698  012F16  0E04               	movlw	4
 17699  012F18  182A               	xorwf	btemp^0,w,c
 17700  012F1A  E116               	bnz	l16937
 17701  012F1C  0EE9               	movlw	-23
 17702  012F1E  50E3               	movf	plusw1,w,c
 17703  012F20  E113               	bnz	l16937
 17704  012F22  0EEA               	movlw	-22
 17705  012F24  50E3               	movf	plusw1,w,c
 17706  012F26  E110               	bnz	l16937
 17707  012F28  0EEB               	movlw	-21
 17708  012F2A  50E3               	movf	plusw1,w,c
 17709  012F2C  A4D8               	btfss	status,2,c
 17710  012F2E  D00C               	goto	l16937
 17711                           
 17712                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17713  012F30  50E1               	movf	fsr1l,w,c
 17714  012F32  0FE8               	addlw	-24
 17715  012F34  6ED9               	movwf	fsr2l,c
 17716  012F36  50E2               	movf	fsr1h,w,c
 17717  012F38  6EDA               	movwf	fsr2h,c
 17718  012F3A  0EFF               	movlw	255
 17719  012F3C  22DA               	addwfc	fsr2h,f,c
 17720  012F3E  06DE               	decf	postinc2,f,c
 17721  012F40  0E00               	movlw	0
 17722  012F42  5ADE               	subwfb	postinc2,f,c
 17723  012F44  5ADE               	subwfb	postinc2,f,c
 17724  012F46  5ADE               	subwfb	postinc2,f,c
 17725  012F48                     l16937:
 17726  012F48  0EAC               	movlw	172
 17727  012F4A  6EE6               	movwf	postinc1,c
 17728  012F4C  0E8E               	movlw	142
 17729  012F4E  6EE6               	movwf	postinc1,c
 17730  012F50  0E00               	movlw	0
 17731  012F52  6EE6               	movwf	postinc1,c
 17732  012F54  0E00               	movlw	0
 17733  012F56  6EE6               	movwf	postinc1,c
 17734                           
 17735                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17736  012F58  0EE4               	movlw	-28
 17737  012F5A  006F FF8F FFE6     	movff	plusw1,postinc1
 17738  012F60  006F FF8F FFE6     	movff	plusw1,postinc1
 17739  012F66  006F FF8F FFE6     	movff	plusw1,postinc1
 17740  012F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 17741  012F72  ECB6  F003         	call	___lmul	;wreg free
 17742                           
 17743                           ;stkvar	_remdays @ sp[(-57)+25]
 17744  012F76  50E1               	movf	fsr1l,w,c
 17745  012F78  0FE0               	addlw	-32
 17746  012F7A  6ED9               	movwf	fsr2l,c
 17747  012F7C  50E2               	movf	fsr1h,w,c
 17748  012F7E  6EDA               	movwf	fsr2h,c
 17749  012F80  0EFF               	movlw	255
 17750  012F82  22DA               	addwfc	fsr2h,f,c
 17751  012F84  502A               	movf	btemp^0,w,c
 17752  012F86  5EDE               	subwf	postinc2,f,c
 17753  012F88  502B               	movf	(btemp+1)^0,w,c
 17754  012F8A  5ADE               	subwfb	postinc2,f,c
 17755  012F8C  502C               	movf	(btemp+2)^0,w,c
 17756  012F8E  5ADE               	subwfb	postinc2,f,c
 17757  012F90  502D               	movf	(btemp+3)^0,w,c
 17758  012F92  5ADE               	subwfb	postinc2,f,c
 17759  012F94  0EB5               	movlw	181
 17760  012F96  6EE6               	movwf	postinc1,c
 17761  012F98  0E05               	movlw	5
 17762  012F9A  6EE6               	movwf	postinc1,c
 17763  012F9C  0E00               	movlw	0
 17764  012F9E  6EE6               	movwf	postinc1,c
 17765  012FA0  0E00               	movlw	0
 17766  012FA2  6EE6               	movwf	postinc1,c
 17767                           
 17768                           ;stkvar	_remdays @ sp[(-61)+25]
 17769  012FA4  0EDC               	movlw	-36
 17770  012FA6  006F FF8F FFE6     	movff	plusw1,postinc1
 17771  012FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17772  012FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17773  012FB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17774  012FBE  ECB0  F0F1         	call	___aldiv	;wreg free
 17775                           
 17776                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17777  012FC2  0EE4               	movlw	-28
 17778  012FC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 17779  012FCA  0EE5               	movlw	-27
 17780  012FCC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17781  012FD2  0EE6               	movlw	-26
 17782  012FD4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17783  012FDA  0EE7               	movlw	-25
 17784  012FDC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17785                           
 17786                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17787  012FE2  0EE4               	movlw	-28
 17788  012FE4  006F FF8C  F02A    	movff	plusw1,btemp
 17789  012FEA  0E19               	movlw	25
 17790  012FEC  182A               	xorwf	btemp^0,w,c
 17791  012FEE  E116               	bnz	l16945
 17792  012FF0  0EE5               	movlw	-27
 17793  012FF2  50E3               	movf	plusw1,w,c
 17794  012FF4  E113               	bnz	l16945
 17795  012FF6  0EE6               	movlw	-26
 17796  012FF8  50E3               	movf	plusw1,w,c
 17797  012FFA  E110               	bnz	l16945
 17798  012FFC  0EE7               	movlw	-25
 17799  012FFE  50E3               	movf	plusw1,w,c
 17800  013000  A4D8               	btfss	status,2,c
 17801  013002  D00C               	goto	l16945
 17802                           
 17803                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17804  013004  50E1               	movf	fsr1l,w,c
 17805  013006  0FE4               	addlw	-28
 17806  013008  6ED9               	movwf	fsr2l,c
 17807  01300A  50E2               	movf	fsr1h,w,c
 17808  01300C  6EDA               	movwf	fsr2h,c
 17809  01300E  0EFF               	movlw	255
 17810  013010  22DA               	addwfc	fsr2h,f,c
 17811  013012  06DE               	decf	postinc2,f,c
 17812  013014  0E00               	movlw	0
 17813  013016  5ADE               	subwfb	postinc2,f,c
 17814  013018  5ADE               	subwfb	postinc2,f,c
 17815  01301A  5ADE               	subwfb	postinc2,f,c
 17816  01301C                     l16945:
 17817  01301C  0EB5               	movlw	181
 17818  01301E  6EE6               	movwf	postinc1,c
 17819  013020  0E05               	movlw	5
 17820  013022  6EE6               	movwf	postinc1,c
 17821  013024  0E00               	movlw	0
 17822  013026  6EE6               	movwf	postinc1,c
 17823  013028  0E00               	movlw	0
 17824  01302A  6EE6               	movwf	postinc1,c
 17825                           
 17826                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17827  01302C  0EE0               	movlw	-32
 17828  01302E  006F FF8F FFE6     	movff	plusw1,postinc1
 17829  013034  006F FF8F FFE6     	movff	plusw1,postinc1
 17830  01303A  006F FF8F FFE6     	movff	plusw1,postinc1
 17831  013040  006F FF8F FFE6     	movff	plusw1,postinc1
 17832  013046  ECB6  F003         	call	___lmul	;wreg free
 17833                           
 17834                           ;stkvar	_remdays @ sp[(-57)+25]
 17835  01304A  50E1               	movf	fsr1l,w,c
 17836  01304C  0FE0               	addlw	-32
 17837  01304E  6ED9               	movwf	fsr2l,c
 17838  013050  50E2               	movf	fsr1h,w,c
 17839  013052  6EDA               	movwf	fsr2h,c
 17840  013054  0EFF               	movlw	255
 17841  013056  22DA               	addwfc	fsr2h,f,c
 17842  013058  502A               	movf	btemp^0,w,c
 17843  01305A  5EDE               	subwf	postinc2,f,c
 17844  01305C  502B               	movf	(btemp+1)^0,w,c
 17845  01305E  5ADE               	subwfb	postinc2,f,c
 17846  013060  502C               	movf	(btemp+2)^0,w,c
 17847  013062  5ADE               	subwfb	postinc2,f,c
 17848  013064  502D               	movf	(btemp+3)^0,w,c
 17849  013066  5ADE               	subwfb	postinc2,f,c
 17850  013068  0E6D               	movlw	109
 17851  01306A  6EE6               	movwf	postinc1,c
 17852  01306C  0E01               	movlw	1
 17853  01306E  6EE6               	movwf	postinc1,c
 17854  013070  0E00               	movlw	0
 17855  013072  6EE6               	movwf	postinc1,c
 17856  013074  0E00               	movlw	0
 17857  013076  6EE6               	movwf	postinc1,c
 17858                           
 17859                           ;stkvar	_remdays @ sp[(-61)+25]
 17860  013078  0EDC               	movlw	-36
 17861  01307A  006F FF8F FFE6     	movff	plusw1,postinc1
 17862  013080  006F FF8F FFE6     	movff	plusw1,postinc1
 17863  013086  006F FF8F FFE6     	movff	plusw1,postinc1
 17864  01308C  006F FF8F FFE6     	movff	plusw1,postinc1
 17865  013092  ECB0  F0F1         	call	___aldiv	;wreg free
 17866                           
 17867                           ;stkvar	_remyears @ sp[(-57)+37]
 17868  013096  0EEC               	movlw	-20
 17869  013098  0060  F0AB  FFE3   	movff	btemp,plusw1
 17870  01309E  0EED               	movlw	-19
 17871  0130A0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17872  0130A6  0EEE               	movlw	-18
 17873  0130A8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17874  0130AE  0EEF               	movlw	-17
 17875  0130B0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17876                           
 17877                           ;stkvar	_remyears @ sp[(-57)+37]
 17878  0130B6  0EEC               	movlw	-20
 17879  0130B8  006F FF8C  F02A    	movff	plusw1,btemp
 17880  0130BE  0E04               	movlw	4
 17881  0130C0  182A               	xorwf	btemp^0,w,c
 17882  0130C2  E116               	bnz	l16953
 17883  0130C4  0EED               	movlw	-19
 17884  0130C6  50E3               	movf	plusw1,w,c
 17885  0130C8  E113               	bnz	l16953
 17886  0130CA  0EEE               	movlw	-18
 17887  0130CC  50E3               	movf	plusw1,w,c
 17888  0130CE  E110               	bnz	l16953
 17889  0130D0  0EEF               	movlw	-17
 17890  0130D2  50E3               	movf	plusw1,w,c
 17891  0130D4  A4D8               	btfss	status,2,c
 17892  0130D6  D00C               	goto	l16953
 17893                           
 17894                           ;stkvar	_remyears @ sp[(-57)+37]
 17895  0130D8  50E1               	movf	fsr1l,w,c
 17896  0130DA  0FEC               	addlw	-20
 17897  0130DC  6ED9               	movwf	fsr2l,c
 17898  0130DE  50E2               	movf	fsr1h,w,c
 17899  0130E0  6EDA               	movwf	fsr2h,c
 17900  0130E2  0EFF               	movlw	255
 17901  0130E4  22DA               	addwfc	fsr2h,f,c
 17902  0130E6  06DE               	decf	postinc2,f,c
 17903  0130E8  0E00               	movlw	0
 17904  0130EA  5ADE               	subwfb	postinc2,f,c
 17905  0130EC  5ADE               	subwfb	postinc2,f,c
 17906  0130EE  5ADE               	subwfb	postinc2,f,c
 17907  0130F0                     l16953:
 17908  0130F0  0E6D               	movlw	109
 17909  0130F2  6EE6               	movwf	postinc1,c
 17910  0130F4  0E01               	movlw	1
 17911  0130F6  6EE6               	movwf	postinc1,c
 17912  0130F8  0E00               	movlw	0
 17913  0130FA  6EE6               	movwf	postinc1,c
 17914  0130FC  0E00               	movlw	0
 17915  0130FE  6EE6               	movwf	postinc1,c
 17916                           
 17917                           ;stkvar	_remyears @ sp[(-61)+37]
 17918  013100  0EE8               	movlw	-24
 17919  013102  006F FF8F FFE6     	movff	plusw1,postinc1
 17920  013108  006F FF8F FFE6     	movff	plusw1,postinc1
 17921  01310E  006F FF8F FFE6     	movff	plusw1,postinc1
 17922  013114  006F FF8F FFE6     	movff	plusw1,postinc1
 17923  01311A  ECB6  F003         	call	___lmul	;wreg free
 17924                           
 17925                           ;stkvar	_remdays @ sp[(-57)+25]
 17926  01311E  50E1               	movf	fsr1l,w,c
 17927  013120  0FE0               	addlw	-32
 17928  013122  6ED9               	movwf	fsr2l,c
 17929  013124  50E2               	movf	fsr1h,w,c
 17930  013126  6EDA               	movwf	fsr2h,c
 17931  013128  0EFF               	movlw	255
 17932  01312A  22DA               	addwfc	fsr2h,f,c
 17933  01312C  502A               	movf	btemp^0,w,c
 17934  01312E  5EDE               	subwf	postinc2,f,c
 17935  013130  502B               	movf	(btemp+1)^0,w,c
 17936  013132  5ADE               	subwfb	postinc2,f,c
 17937  013134  502C               	movf	(btemp+2)^0,w,c
 17938  013136  5ADE               	subwfb	postinc2,f,c
 17939  013138  502D               	movf	(btemp+3)^0,w,c
 17940  01313A  5ADE               	subwfb	postinc2,f,c
 17941                           
 17942                           ;stkvar	___secs_to_tm$7650 @ sp[(-57)+0]
 17943  01313C  0EC7               	movlw	-57
 17944  01313E  6AE3               	clrf	plusw1,c
 17945                           
 17946                           ;stkvar	_remyears @ sp[(-57)+37]
 17947  013140  0EEC               	movlw	-20
 17948  013142  50E3               	movf	plusw1,w,c
 17949  013144  E127               	bnz	l16965
 17950  013146  0EED               	movlw	-19
 17951  013148  50E3               	movf	plusw1,w,c
 17952  01314A  E124               	bnz	l16965
 17953  01314C  0EEE               	movlw	-18
 17954  01314E  50E3               	movf	plusw1,w,c
 17955  013150  E121               	bnz	l16965
 17956  013152  0EEF               	movlw	-17
 17957  013154  50E3               	movf	plusw1,w,c
 17958  013156  A4D8               	btfss	status,2,c
 17959  013158  D01D               	goto	l16965
 17960                           
 17961                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17962  01315A  0EE4               	movlw	-28
 17963  01315C  50E3               	movf	plusw1,w,c
 17964  01315E  E117               	bnz	l16963
 17965  013160  0EE5               	movlw	-27
 17966  013162  50E3               	movf	plusw1,w,c
 17967  013164  E114               	bnz	l16963
 17968  013166  0EE6               	movlw	-26
 17969  013168  50E3               	movf	plusw1,w,c
 17970  01316A  E111               	bnz	l16963
 17971  01316C  0EE7               	movlw	-25
 17972  01316E  50E3               	movf	plusw1,w,c
 17973  013170  A4D8               	btfss	status,2,c
 17974  013172  D00D               	goto	u16560
 17975                           
 17976                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17977  013174  0EE8               	movlw	-24
 17978  013176  50E3               	movf	plusw1,w,c
 17979  013178  E10D               	bnz	l16965
 17980  01317A  0EE9               	movlw	-23
 17981  01317C  50E3               	movf	plusw1,w,c
 17982  01317E  E10A               	bnz	l16965
 17983  013180  0EEA               	movlw	-22
 17984  013182  50E3               	movf	plusw1,w,c
 17985  013184  E107               	bnz	l16965
 17986  013186  0EEB               	movlw	-21
 17987  013188  50E3               	movf	plusw1,w,c
 17988  01318A  A4D8               	btfss	status,2,c
 17989  01318C  D003               	goto	l16965
 17990  01318E                     u16560:
 17991  01318E                     l16963:
 17992                           
 17993                           ;stkvar	___secs_to_tm$7650 @ sp[(-57)+0]
 17994  01318E  0EC7               	movlw	-57
 17995  013190  6AE3               	clrf	plusw1,c
 17996  013192  2AE3               	incf	plusw1,f,c
 17997  013194                     l16965:
 17998                           
 17999                           ;stkvar	___secs_to_tm$7650 @ sp[(-57)+0]
 18000  013194  0EC7               	movlw	-57
 18001  013196  50E3               	movf	plusw1,w,c
 18002  013198  6E34               	movwf	(btemp+10)^0,c
 18003  01319A  6A35               	clrf	(btemp+11)^0,c
 18004                           
 18005                           ;stkvar	_leap @ sp[(-57)+51]
 18006  01319C  0EFA               	movlw	-6
 18007  01319E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18008  0131A4  0EFB               	movlw	-5
 18009  0131A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18010                           
 18011                           ;stkvar	_remdays @ sp[(-57)+25]
 18012                           ;stkvar	_leap @ sp[(-57)+51]
 18013  0131AC  0EFA               	movlw	-6
 18014  0131AE  006F FF8C  F034    	movff	plusw1,btemp+10
 18015  0131B4  0EFB               	movlw	-5
 18016  0131B6  006F FF8C  F035    	movff	plusw1,btemp+11
 18017  0131BC  0EE0               	movlw	-32
 18018  0131BE  50E3               	movf	plusw1,w,c
 18019  0131C0  2634               	addwf	(btemp+10)^0,f,c
 18020  0131C2  0EE1               	movlw	-31
 18021  0131C4  50E3               	movf	plusw1,w,c
 18022  0131C6  2235               	addwfc	(btemp+11)^0,f,c
 18023  0131C8  0E3B               	movlw	59
 18024  0131CA  2634               	addwf	(btemp+10)^0,f,c
 18025  0131CC  0E00               	movlw	0
 18026  0131CE  2235               	addwfc	(btemp+11)^0,f,c
 18027                           
 18028                           ;stkvar	_yday @ sp[(-57)+53]
 18029  0131D0  0EFC               	movlw	-4
 18030  0131D2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18031  0131D8  0EFD               	movlw	-3
 18032  0131DA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18033                           
 18034                           ;stkvar	_leap @ sp[(-57)+51]
 18035  0131E0  0EFA               	movlw	-6
 18036  0131E2  50E3               	movf	plusw1,w,c
 18037  0131E4  0F6D               	addlw	109
 18038  0131E6  6E34               	movwf	(btemp+10)^0,c
 18039  0131E8  0EFB               	movlw	-5
 18040  0131EA  006F FF8C  F035    	movff	plusw1,btemp+11
 18041  0131F0  0E01               	movlw	1
 18042  0131F2  2235               	addwfc	(btemp+11)^0,f,c
 18043                           
 18044                           ;stkvar	_yday @ sp[(-57)+53]
 18045  0131F4  0EFC               	movlw	-4
 18046  0131F6  006F FF8C  F02A    	movff	plusw1,btemp
 18047  0131FC  5034               	movf	(btemp+10)^0,w,c
 18048  0131FE  5C2A               	subwf	btemp^0,w,c
 18049  013200  0EFD               	movlw	-3
 18050  013202  50E3               	movf	plusw1,w,c
 18051  013204  0A80               	xorlw	128
 18052  013206  6E2A               	movwf	btemp^0,c
 18053  013208  5035               	movf	(btemp+11)^0,w,c
 18054  01320A  0A80               	xorlw	128
 18055  01320C  582A               	subwfb	btemp^0,w,c
 18056  01320E  A0D8               	btfss	status,0,c
 18057  013210  D01E               	goto	l16973
 18058                           
 18059                           ;stkvar	_leap @ sp[(-57)+51]
 18060  013212  0EFA               	movlw	-6
 18061  013214  50E3               	movf	plusw1,w,c
 18062  013216  0F6D               	addlw	109
 18063  013218  6E34               	movwf	(btemp+10)^0,c
 18064  01321A  0EFB               	movlw	-5
 18065  01321C  006F FF8C  F035    	movff	plusw1,btemp+11
 18066  013222  0E01               	movlw	1
 18067  013224  2235               	addwfc	(btemp+11)^0,f,c
 18068                           
 18069                           ;stkvar	_yday @ sp[(-57)+53]
 18070  013226  0EFC               	movlw	-4
 18071  013228  006F FF8C  F02A    	movff	plusw1,btemp
 18072  01322E  5034               	movf	(btemp+10)^0,w,c
 18073  013230  5E2A               	subwf	btemp^0,f,c
 18074  013232  0EFC               	movlw	-4
 18075  013234  0060  F0AB  FFE3   	movff	btemp,plusw1
 18076  01323A  0EFD               	movlw	-3
 18077  01323C  006F FF8C  F02A    	movff	plusw1,btemp
 18078  013242  5035               	movf	(btemp+11)^0,w,c
 18079  013244  5A2A               	subwfb	btemp^0,f,c
 18080  013246  0EFD               	movlw	-3
 18081  013248  0060  F0AB  FFE3   	movff	btemp,plusw1
 18082  01324E                     l16973:
 18083                           
 18084                           ;stkvar	_remyears @ sp[(-57)+37]
 18085                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18086  01324E  0EE4               	movlw	-28
 18087  013250  006F FF8C  F032    	movff	plusw1,btemp+8
 18088  013256  0EE5               	movlw	-27
 18089  013258  006F FF8C  F033    	movff	plusw1,btemp+9
 18090  01325E  0EE6               	movlw	-26
 18091  013260  006F FF8C  F034    	movff	plusw1,btemp+10
 18092  013266  0EE7               	movlw	-25
 18093  013268  006F FF8C  F035    	movff	plusw1,btemp+11
 18094  01326E  0E02               	movlw	2
 18095  013270                     u16585:
 18096  013270  90D8               	bcf	status,0,c
 18097  013272  3632               	rlcf	(btemp+8)^0,f,c
 18098  013274  3633               	rlcf	(btemp+9)^0,f,c
 18099  013276  3634               	rlcf	(btemp+10)^0,f,c
 18100  013278  3635               	rlcf	(btemp+11)^0,f,c
 18101  01327A  2EE8               	decfsz	wreg,f,c
 18102  01327C  D7F9               	goto	u16585
 18103  01327E  0E64               	movlw	100
 18104  013280  6EE6               	movwf	postinc1,c
 18105  013282  0E00               	movlw	0
 18106  013284  6EE6               	movwf	postinc1,c
 18107  013286  0E00               	movlw	0
 18108  013288  6EE6               	movwf	postinc1,c
 18109  01328A  0E00               	movlw	0
 18110  01328C  6EE6               	movwf	postinc1,c
 18111                           
 18112                           ;stkvar	_c_cycles @ sp[(-61)+33]
 18113  01328E  0EE4               	movlw	-28
 18114  013290  006F FF8F FFE6     	movff	plusw1,postinc1
 18115  013296  006F FF8F FFE6     	movff	plusw1,postinc1
 18116  01329C  006F FF8F FFE6     	movff	plusw1,postinc1
 18117  0132A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18118  0132A8  ECB6  F003         	call	___lmul	;wreg free
 18119  0132AC  5032               	movf	(btemp+8)^0,w,c
 18120  0132AE  242A               	addwf	btemp^0,w,c
 18121  0132B0  6E2E               	movwf	(btemp+4)^0,c
 18122  0132B2  5033               	movf	(btemp+9)^0,w,c
 18123  0132B4  202B               	addwfc	(btemp+1)^0,w,c
 18124  0132B6  6E2F               	movwf	(btemp+5)^0,c
 18125  0132B8  5034               	movf	(btemp+10)^0,w,c
 18126  0132BA  202C               	addwfc	(btemp+2)^0,w,c
 18127  0132BC  6E30               	movwf	(btemp+6)^0,c
 18128  0132BE  5035               	movf	(btemp+11)^0,w,c
 18129  0132C0  202D               	addwfc	(btemp+3)^0,w,c
 18130  0132C2  6E31               	movwf	(btemp+7)^0,c
 18131  0132C4  0EEC               	movlw	-20
 18132  0132C6  50E3               	movf	plusw1,w,c
 18133  0132C8  262E               	addwf	(btemp+4)^0,f,c
 18134  0132CA  0EED               	movlw	-19
 18135  0132CC  50E3               	movf	plusw1,w,c
 18136  0132CE  222F               	addwfc	(btemp+5)^0,f,c
 18137  0132D0  0EEE               	movlw	-18
 18138  0132D2  50E3               	movf	plusw1,w,c
 18139  0132D4  2230               	addwfc	(btemp+6)^0,f,c
 18140  0132D6  0EEF               	movlw	-17
 18141  0132D8  50E3               	movf	plusw1,w,c
 18142  0132DA  2231               	addwfc	(btemp+7)^0,f,c
 18143  0132DC  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 18144  0132E2  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 18145  0132E8  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 18146  0132EE  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 18147  0132F4  6A3E               	clrf	(btemp+20)^0,c
 18148  0132F6  BE3D               	btfsc	(btemp+19)^0,7,c
 18149  0132F8  683E               	setf	(btemp+20)^0,c
 18150  0132FA  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 18151  013300  0060  F0F8  F040   	movff	btemp+20,btemp+22
 18152  013306  0060  F0F8  F041   	movff	btemp+20,btemp+23
 18153  01330C  0E90               	movlw	144
 18154  01330E  6EE6               	movwf	postinc1,c
 18155  013310  0E01               	movlw	1
 18156  013312  6EE6               	movwf	postinc1,c
 18157  013314  0E00               	movlw	0
 18158  013316  6EE6               	movwf	postinc1,c
 18159  013318  0E00               	movlw	0
 18160  01331A  6EE6               	movwf	postinc1,c
 18161  01331C  0E00               	movlw	0
 18162  01331E  6EE6               	movwf	postinc1,c
 18163  013320  0E00               	movlw	0
 18164  013322  6EE6               	movwf	postinc1,c
 18165  013324  0E00               	movlw	0
 18166  013326  6EE6               	movwf	postinc1,c
 18167  013328  0E00               	movlw	0
 18168  01332A  6EE6               	movwf	postinc1,c
 18169                           
 18170                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 18171  01332C  0EEC               	movlw	-20
 18172  01332E  006F FF8C  F042    	movff	plusw1,btemp+24
 18173  013334  0EED               	movlw	-19
 18174  013336  006F FF8C  F043    	movff	plusw1,btemp+25
 18175  01333C  0EEE               	movlw	-18
 18176  01333E  006F FF8C  F044    	movff	plusw1,btemp+26
 18177  013344  0EEF               	movlw	-17
 18178  013346  006F FF8C  F045    	movff	plusw1,btemp+27
 18179  01334C  6A46               	clrf	(btemp+28)^0,c
 18180  01334E  BE45               	btfsc	(btemp+27)^0,7,c
 18181  013350  6846               	setf	(btemp+28)^0,c
 18182  013352  0060  F118  F047   	movff	btemp+28,btemp+29
 18183  013358  0060  F118  F048   	movff	btemp+28,btemp+30
 18184  01335E  0060  F118  F049   	movff	btemp+28,btemp+31
 18185  013364  0060  F10B  FFE6   	movff	btemp+24,postinc1
 18186  01336A  0060  F10F  FFE6   	movff	btemp+25,postinc1
 18187  013370  0060  F113  FFE6   	movff	btemp+26,postinc1
 18188  013376  0060  F117  FFE6   	movff	btemp+27,postinc1
 18189  01337C  0060  F11B  FFE6   	movff	btemp+28,postinc1
 18190  013382  0060  F11F  FFE6   	movff	btemp+29,postinc1
 18191  013388  0060  F123  FFE6   	movff	btemp+30,postinc1
 18192  01338E  0060  F127  FFE6   	movff	btemp+31,postinc1
 18193  013394  ECFB  F0F8         	call	___omul	;wreg free
 18194  013398  52E5               	movf	postdec1,f,c
 18195  01339A  006F FF9C  F049    	movff	indf1,btemp+31
 18196  0133A0  52E5               	movf	postdec1,f,c
 18197  0133A2  006F FF9C  F048    	movff	indf1,btemp+30
 18198  0133A8  52E5               	movf	postdec1,f,c
 18199  0133AA  006F FF9C  F047    	movff	indf1,btemp+29
 18200  0133B0  52E5               	movf	postdec1,f,c
 18201  0133B2  006F FF9C  F046    	movff	indf1,btemp+28
 18202  0133B8  52E5               	movf	postdec1,f,c
 18203  0133BA  006F FF9C  F045    	movff	indf1,btemp+27
 18204  0133C0  52E5               	movf	postdec1,f,c
 18205  0133C2  006F FF9C  F044    	movff	indf1,btemp+26
 18206  0133C8  52E5               	movf	postdec1,f,c
 18207  0133CA  006F FF9C  F043    	movff	indf1,btemp+25
 18208  0133D0  52E5               	movf	postdec1,f,c
 18209  0133D2  006F FF9C  F042    	movff	indf1,btemp+24
 18210  0133D8  0EF8               	movlw	248
 18211  0133DA  26E1               	addwf	fsr1l,f,c
 18212  0133DC  0EFF               	movlw	255
 18213  0133DE  22E2               	addwfc	fsr1h,f,c
 18214  0133E0  503A               	movf	(btemp+16)^0,w,c
 18215  0133E2  2442               	addwf	(btemp+24)^0,w,c
 18216  0133E4  6E32               	movwf	(btemp+8)^0,c
 18217  0133E6  503B               	movf	(btemp+17)^0,w,c
 18218  0133E8  2043               	addwfc	(btemp+25)^0,w,c
 18219  0133EA  6E33               	movwf	(btemp+9)^0,c
 18220  0133EC  503C               	movf	(btemp+18)^0,w,c
 18221  0133EE  2044               	addwfc	(btemp+26)^0,w,c
 18222  0133F0  6E34               	movwf	(btemp+10)^0,c
 18223  0133F2  503D               	movf	(btemp+19)^0,w,c
 18224  0133F4  2045               	addwfc	(btemp+27)^0,w,c
 18225  0133F6  6E35               	movwf	(btemp+11)^0,c
 18226  0133F8  503E               	movf	(btemp+20)^0,w,c
 18227  0133FA  2046               	addwfc	(btemp+28)^0,w,c
 18228  0133FC  6E36               	movwf	(btemp+12)^0,c
 18229  0133FE  503F               	movf	(btemp+21)^0,w,c
 18230  013400  2047               	addwfc	(btemp+29)^0,w,c
 18231  013402  6E37               	movwf	(btemp+13)^0,c
 18232  013404  5040               	movf	(btemp+22)^0,w,c
 18233  013406  2048               	addwfc	(btemp+30)^0,w,c
 18234  013408  6E38               	movwf	(btemp+14)^0,c
 18235  01340A  5041               	movf	(btemp+23)^0,w,c
 18236  01340C  2049               	addwfc	(btemp+31)^0,w,c
 18237  01340E  6E39               	movwf	(btemp+15)^0,c
 18238                           
 18239                           ;stkvar	_years @ sp[(-57)+1]
 18240  013410  0EC8               	movlw	-56
 18241  013412  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18242  013418  0EC9               	movlw	-55
 18243  01341A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18244  013420  0ECA               	movlw	-54
 18245  013422  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18246  013428  0ECB               	movlw	-53
 18247  01342A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18248  013430  0ECC               	movlw	-52
 18249  013432  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 18250  013438  0ECD               	movlw	-51
 18251  01343A  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 18252  013440  0ECE               	movlw	-50
 18253  013442  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 18254  013448  0ECF               	movlw	-49
 18255  01344A  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 18256                           
 18257                           ;stkvar	_months @ sp[(-57)+49]
 18258  013450  0EF8               	movlw	-8
 18259  013452  6AE3               	clrf	plusw1,c
 18260  013454  0EF9               	movlw	-7
 18261  013456  6AE3               	clrf	plusw1,c
 18262  013458  D030               	goto	l16981
 18263  01345A                     l16977:
 18264                           
 18265                           ;stkvar	_remdays @ sp[(-57)+25]
 18266  01345A  50E1               	movf	fsr1l,w,c
 18267  01345C  0FE0               	addlw	-32
 18268  01345E  6ED9               	movwf	fsr2l,c
 18269  013460  50E2               	movf	fsr1h,w,c
 18270  013462  6EDA               	movwf	fsr2h,c
 18271  013464  0EFF               	movlw	255
 18272  013466  22DA               	addwfc	fsr2h,f,c
 18273                           
 18274                           ;stkvar	_months @ sp[(-57)+49]
 18275  013468  0EF8               	movlw	-8
 18276  01346A  006F FF8C  F034    	movff	plusw1,btemp+10
 18277  013470  0EF9               	movlw	-7
 18278  013472  006F FF8C  F035    	movff	plusw1,btemp+11
 18279  013478  0E17               	movlw	low ___secs_to_tm@days_in_month
 18280  01347A  2434               	addwf	(btemp+10)^0,w,c
 18281  01347C  6EF6               	movwf	tblptrl,c
 18282  01347E  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18283  013480  2035               	addwfc	(btemp+11)^0,w,c
 18284  013482  6EF7               	movwf	tblptrh,c
 18285  013484                     	if	1	;There are 3 active tblptr bytes
 18286  013484  6AF8               	clrf	tblptru,c
 18287  013486  0E00               	movlw	low (__mediumconst shr (0+16))
 18288  013488  22F8               	addwfc	tblptru,f,c
 18289  01348A                     	endif
 18290  01348A  0008               	tblrd		*
 18291  01348C  50F5               	movf	tablat,w,c
 18292  01348E  5EDE               	subwf	postinc2,f,c
 18293  013490  0E00               	movlw	0
 18294  013492  5ADE               	subwfb	postinc2,f,c
 18295  013494  5ADE               	subwfb	postinc2,f,c
 18296  013496  5ADE               	subwfb	postinc2,f,c
 18297                           
 18298                           ;stkvar	_months @ sp[(-57)+49]
 18299  013498  0EF8               	movlw	-8
 18300  01349A  50E3               	movf	plusw1,w,c
 18301  01349C  0F01               	addlw	1
 18302  01349E  6E2A               	movwf	btemp^0,c
 18303  0134A0  0EF8               	movlw	-8
 18304  0134A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 18305  0134A8  6A2A               	clrf	btemp^0,c
 18306  0134AA  0EF9               	movlw	-7
 18307  0134AC  50E3               	movf	plusw1,w,c
 18308  0134AE  202A               	addwfc	btemp^0,w,c
 18309  0134B0  6E2A               	movwf	btemp^0,c
 18310  0134B2  0EF9               	movlw	-7
 18311  0134B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18312  0134BA                     l16981:
 18313                           
 18314                           ;stkvar	_months @ sp[(-57)+49]
 18315  0134BA  0EF8               	movlw	-8
 18316  0134BC  006F FF8C  F034    	movff	plusw1,btemp+10
 18317  0134C2  0EF9               	movlw	-7
 18318  0134C4  006F FF8C  F035    	movff	plusw1,btemp+11
 18319  0134CA  0E17               	movlw	low ___secs_to_tm@days_in_month
 18320  0134CC  2434               	addwf	(btemp+10)^0,w,c
 18321  0134CE  6EF6               	movwf	tblptrl,c
 18322  0134D0  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18323  0134D2  2035               	addwfc	(btemp+11)^0,w,c
 18324  0134D4  6EF7               	movwf	tblptrh,c
 18325  0134D6                     	if	1	;There are 3 active tblptr bytes
 18326  0134D6  6AF8               	clrf	tblptru,c
 18327  0134D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18328  0134DA  22F8               	addwfc	tblptru,f,c
 18329  0134DC                     	endif
 18330  0134DC  0008               	tblrd		*
 18331  0134DE  006F FFD4  F035    	movff	tablat,btemp+11
 18332  0134E4  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 18333  0134EA  6A2F               	clrf	(btemp+5)^0,c
 18334  0134EC  6A30               	clrf	(btemp+6)^0,c
 18335  0134EE  6A31               	clrf	(btemp+7)^0,c
 18336                           
 18337                           ;stkvar	_remdays @ sp[(-57)+25]
 18338  0134F0  0EE0               	movlw	-32
 18339  0134F2  006F FF8C  F02A    	movff	plusw1,btemp
 18340  0134F8  502E               	movf	(btemp+4)^0,w,c
 18341  0134FA  5C2A               	subwf	btemp^0,w,c
 18342  0134FC  0EE1               	movlw	-31
 18343  0134FE  006F FF8C  F02A    	movff	plusw1,btemp
 18344  013504  502F               	movf	(btemp+5)^0,w,c
 18345  013506  582A               	subwfb	btemp^0,w,c
 18346  013508  0EE2               	movlw	-30
 18347  01350A  006F FF8C  F02A    	movff	plusw1,btemp
 18348  013510  5030               	movf	(btemp+6)^0,w,c
 18349  013512  582A               	subwfb	btemp^0,w,c
 18350  013514  0EE3               	movlw	-29
 18351  013516  50E3               	movf	plusw1,w,c
 18352  013518  0A80               	xorlw	128
 18353  01351A  6E2A               	movwf	btemp^0,c
 18354  01351C  5031               	movf	(btemp+7)^0,w,c
 18355  01351E  0A80               	xorlw	128
 18356  013520  582A               	subwfb	btemp^0,w,c
 18357  013522  B0D8               	btfsc	status,0,c
 18358  013524  D79A               	goto	l16977
 18359                           
 18360                           ;stkvar	_months @ sp[(-57)+49]
 18361  013526  0EF9               	movlw	-7
 18362  013528  BEE3               	btfsc	plusw1,7,c
 18363  01352A  D026               	goto	l16989
 18364  01352C  0EF9               	movlw	-7
 18365  01352E  50E3               	movf	plusw1,w,c
 18366  013530  E108               	bnz	u16600
 18367  013532  0EF8               	movlw	-8
 18368  013534  006F FF8C  F02A    	movff	plusw1,btemp
 18369  01353A  0E0A               	movlw	10
 18370  01353C  5E2A               	subwf	btemp^0,f,c
 18371  01353E  A0D8               	btfss	status,0,c
 18372  013540  D01B               	goto	l16989
 18373  013542                     u16600:
 18374                           
 18375                           ;stkvar	_months @ sp[(-57)+49]
 18376  013542  50E1               	movf	fsr1l,w,c
 18377  013544  0FF8               	addlw	-8
 18378  013546  6ED9               	movwf	fsr2l,c
 18379  013548  50E2               	movf	fsr1h,w,c
 18380  01354A  6EDA               	movwf	fsr2h,c
 18381  01354C  0EFF               	movlw	255
 18382  01354E  22DA               	addwfc	fsr2h,f,c
 18383  013550  0EF4               	movlw	244
 18384  013552  26DE               	addwf	postinc2,f,c
 18385  013554  0EFF               	movlw	255
 18386  013556  22DD               	addwfc	postdec2,f,c
 18387                           
 18388                           ;stkvar	_years @ sp[(-57)+1]
 18389  013558  50E1               	movf	fsr1l,w,c
 18390  01355A  0FC8               	addlw	-56
 18391  01355C  6ED9               	movwf	fsr2l,c
 18392  01355E  50E2               	movf	fsr1h,w,c
 18393  013560  6EDA               	movwf	fsr2h,c
 18394  013562  0EFF               	movlw	255
 18395  013564  22DA               	addwfc	fsr2h,f,c
 18396  013566  2ADE               	incf	postinc2,f,c
 18397  013568  0E00               	movlw	0
 18398  01356A  22DE               	addwfc	postinc2,f,c
 18399  01356C  22DE               	addwfc	postinc2,f,c
 18400  01356E  22DE               	addwfc	postinc2,f,c
 18401  013570  22DE               	addwfc	postinc2,f,c
 18402  013572  22DE               	addwfc	postinc2,f,c
 18403  013574  22DE               	addwfc	postinc2,f,c
 18404  013576  22DE               	addwfc	postinc2,f,c
 18405  013578                     l16989:
 18406                           
 18407                           ;stkvar	_years @ sp[(-57)+1]
 18408  013578  0EC8               	movlw	-56
 18409  01357A  50E3               	movf	plusw1,w,c
 18410  01357C  0F64               	addlw	100
 18411  01357E  6E3A               	movwf	(btemp+16)^0,c
 18412  013580  0EC9               	movlw	-55
 18413  013582  006F FF8C  F03B    	movff	plusw1,btemp+17
 18414  013588  0E00               	movlw	0
 18415  01358A  223B               	addwfc	(btemp+17)^0,f,c
 18416  01358C  0ECA               	movlw	-54
 18417  01358E  006F FF8C  F03C    	movff	plusw1,btemp+18
 18418  013594  0E00               	movlw	0
 18419  013596  223C               	addwfc	(btemp+18)^0,f,c
 18420  013598  0ECB               	movlw	-53
 18421  01359A  006F FF8C  F03D    	movff	plusw1,btemp+19
 18422  0135A0  0E00               	movlw	0
 18423  0135A2  223D               	addwfc	(btemp+19)^0,f,c
 18424  0135A4  0ECC               	movlw	-52
 18425  0135A6  006F FF8C  F03E    	movff	plusw1,btemp+20
 18426  0135AC  0E00               	movlw	0
 18427  0135AE  223E               	addwfc	(btemp+20)^0,f,c
 18428  0135B0  0ECD               	movlw	-51
 18429  0135B2  006F FF8C  F03F    	movff	plusw1,btemp+21
 18430  0135B8  0E00               	movlw	0
 18431  0135BA  223F               	addwfc	(btemp+21)^0,f,c
 18432  0135BC  0ECE               	movlw	-50
 18433  0135BE  006F FF8C  F040    	movff	plusw1,btemp+22
 18434  0135C4  0E00               	movlw	0
 18435  0135C6  2240               	addwfc	(btemp+22)^0,f,c
 18436  0135C8  0ECF               	movlw	-49
 18437  0135CA  006F FF8C  F041    	movff	plusw1,btemp+23
 18438  0135D0  0E00               	movlw	0
 18439  0135D2  2241               	addwfc	(btemp+23)^0,f,c
 18440  0135D4  BE41               	btfsc	(btemp+23)^0,7,c
 18441  0135D6  D00C               	goto	u16610
 18442  0135D8  5041               	movf	(btemp+23)^0,w,c
 18443  0135DA  1040               	iorwf	(btemp+22)^0,w,c
 18444  0135DC  103F               	iorwf	(btemp+21)^0,w,c
 18445  0135DE  103E               	iorwf	(btemp+20)^0,w,c
 18446  0135E0  103D               	iorwf	(btemp+19)^0,w,c
 18447  0135E2  103C               	iorwf	(btemp+18)^0,w,c
 18448  0135E4  E103               	bnz	u16611
 18449  0135E6  0E80               	movlw	128
 18450  0135E8  5C3B               	subwf	(btemp+17)^0,w,c
 18451  0135EA  B0D8               	btfsc	status,0,c
 18452  0135EC                     u16611:
 18453  0135EC  EF62  F094         	goto	u16470
 18454  0135F0                     u16610:
 18455                           
 18456                           ;stkvar	_years @ sp[(-57)+1]
 18457  0135F0  0EC8               	movlw	-56
 18458  0135F2  50E3               	movf	plusw1,w,c
 18459  0135F4  0F64               	addlw	100
 18460  0135F6  6E3A               	movwf	(btemp+16)^0,c
 18461  0135F8  0EC9               	movlw	-55
 18462  0135FA  006F FF8C  F03B    	movff	plusw1,btemp+17
 18463  013600  0E00               	movlw	0
 18464  013602  223B               	addwfc	(btemp+17)^0,f,c
 18465  013604  0ECA               	movlw	-54
 18466  013606  006F FF8C  F03C    	movff	plusw1,btemp+18
 18467  01360C  0E00               	movlw	0
 18468  01360E  223C               	addwfc	(btemp+18)^0,f,c
 18469  013610  0ECB               	movlw	-53
 18470  013612  006F FF8C  F03D    	movff	plusw1,btemp+19
 18471  013618  0E00               	movlw	0
 18472  01361A  223D               	addwfc	(btemp+19)^0,f,c
 18473  01361C  0ECC               	movlw	-52
 18474  01361E  006F FF8C  F03E    	movff	plusw1,btemp+20
 18475  013624  0E00               	movlw	0
 18476  013626  223E               	addwfc	(btemp+20)^0,f,c
 18477  013628  0ECD               	movlw	-51
 18478  01362A  006F FF8C  F03F    	movff	plusw1,btemp+21
 18479  013630  0E00               	movlw	0
 18480  013632  223F               	addwfc	(btemp+21)^0,f,c
 18481  013634  0ECE               	movlw	-50
 18482  013636  006F FF8C  F040    	movff	plusw1,btemp+22
 18483  01363C  0E00               	movlw	0
 18484  01363E  2240               	addwfc	(btemp+22)^0,f,c
 18485  013640  0ECF               	movlw	-49
 18486  013642  006F FF8C  F041    	movff	plusw1,btemp+23
 18487  013648  0E00               	movlw	0
 18488  01364A  2241               	addwfc	(btemp+23)^0,f,c
 18489  01364C  AE41               	btfss	(btemp+23)^0,7,c
 18490  01364E  D011               	goto	l16997
 18491  013650  0E80               	movlw	128
 18492  013652  5C3B               	subwf	(btemp+17)^0,w,c
 18493  013654  0EFF               	movlw	255
 18494  013656  583C               	subwfb	(btemp+18)^0,w,c
 18495  013658  0EFF               	movlw	255
 18496  01365A  583D               	subwfb	(btemp+19)^0,w,c
 18497  01365C  0EFF               	movlw	255
 18498  01365E  583E               	subwfb	(btemp+20)^0,w,c
 18499  013660  0EFF               	movlw	255
 18500  013662  583F               	subwfb	(btemp+21)^0,w,c
 18501  013664  0EFF               	movlw	255
 18502  013666  5840               	subwfb	(btemp+22)^0,w,c
 18503  013668  0EFF               	movlw	255
 18504  01366A  5841               	subwfb	(btemp+23)^0,w,c
 18505  01366C  A0D8               	btfss	status,0,c
 18506  01366E  EF62  F094         	goto	u16470
 18507  013672                     l16997:
 18508                           
 18509                           ;stkvar	_years @ sp[(-57)+1]
 18510  013672  0EC8               	movlw	-56
 18511  013674  50E3               	movf	plusw1,w,c
 18512  013676  0F64               	addlw	100
 18513  013678  6E34               	movwf	(btemp+10)^0,c
 18514  01367A  0EC9               	movlw	-55
 18515  01367C  006F FF8C  F035    	movff	plusw1,btemp+11
 18516  013682  0E00               	movlw	0
 18517  013684  2235               	addwfc	(btemp+11)^0,f,c
 18518                           
 18519                           ;stkvar	_tm @ sp[(-57)+-10]
 18520  013686  0EBD               	movlw	-67
 18521  013688  006F FF8C  F032    	movff	plusw1,btemp+8
 18522  01368E  0EBE               	movlw	-66
 18523  013690  006F FF8C  F033    	movff	plusw1,btemp+9
 18524  013696  0E0A               	movlw	10
 18525  013698  2432               	addwf	(btemp+8)^0,w,c
 18526  01369A  6ED9               	movwf	fsr2l,c
 18527  01369C  0E00               	movlw	0
 18528  01369E  2033               	addwfc	(btemp+9)^0,w,c
 18529  0136A0  6EDA               	movwf	fsr2h,c
 18530  0136A2  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18531  0136A8  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18532                           
 18533                           ;stkvar	_months @ sp[(-57)+49]
 18534  0136AE  0EF8               	movlw	-8
 18535  0136B0  50E3               	movf	plusw1,w,c
 18536  0136B2  0F02               	addlw	2
 18537  0136B4  6E34               	movwf	(btemp+10)^0,c
 18538  0136B6  0EF9               	movlw	-7
 18539  0136B8  006F FF8C  F035    	movff	plusw1,btemp+11
 18540  0136BE  0E00               	movlw	0
 18541  0136C0  2235               	addwfc	(btemp+11)^0,f,c
 18542                           
 18543                           ;stkvar	_tm @ sp[(-57)+-10]
 18544  0136C2  0EBD               	movlw	-67
 18545  0136C4  006F FF8C  F032    	movff	plusw1,btemp+8
 18546  0136CA  0EBE               	movlw	-66
 18547  0136CC  006F FF8C  F033    	movff	plusw1,btemp+9
 18548  0136D2  0E08               	movlw	8
 18549  0136D4  2432               	addwf	(btemp+8)^0,w,c
 18550  0136D6  6ED9               	movwf	fsr2l,c
 18551  0136D8  0E00               	movlw	0
 18552  0136DA  2033               	addwfc	(btemp+9)^0,w,c
 18553  0136DC  6EDA               	movwf	fsr2h,c
 18554  0136DE  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18555  0136E4  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18556                           
 18557                           ;stkvar	_remdays @ sp[(-57)+25]
 18558  0136EA  0EE0               	movlw	-32
 18559  0136EC  50E3               	movf	plusw1,w,c
 18560  0136EE  0F01               	addlw	1
 18561  0136F0  6E34               	movwf	(btemp+10)^0,c
 18562  0136F2  0EE1               	movlw	-31
 18563  0136F4  006F FF8C  F035    	movff	plusw1,btemp+11
 18564  0136FA  0E00               	movlw	0
 18565  0136FC  2235               	addwfc	(btemp+11)^0,f,c
 18566                           
 18567                           ;stkvar	_tm @ sp[(-57)+-10]
 18568  0136FE  0EBD               	movlw	-67
 18569  013700  006F FF8C  F032    	movff	plusw1,btemp+8
 18570  013706  0EBE               	movlw	-66
 18571  013708  006F FF8C  F033    	movff	plusw1,btemp+9
 18572  01370E  0E06               	movlw	6
 18573  013710  2432               	addwf	(btemp+8)^0,w,c
 18574  013712  6ED9               	movwf	fsr2l,c
 18575  013714  0E00               	movlw	0
 18576  013716  2033               	addwfc	(btemp+9)^0,w,c
 18577  013718  6EDA               	movwf	fsr2h,c
 18578  01371A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18579  013720  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18580                           
 18581                           ;stkvar	_wday @ sp[(-57)+55]
 18582  013726  50E1               	movf	fsr1l,w,c
 18583  013728  0FFE               	addlw	-2
 18584  01372A  6ED9               	movwf	fsr2l,c
 18585  01372C  50E2               	movf	fsr1h,w,c
 18586  01372E  6EDA               	movwf	fsr2h,c
 18587  013730  0EFF               	movlw	255
 18588  013732  22DA               	addwfc	fsr2h,f,c
 18589                           
 18590                           ;stkvar	_tm @ sp[(-57)+-10]
 18591  013734  0EBD               	movlw	-67
 18592  013736  006F FF8C  F034    	movff	plusw1,btemp+10
 18593  01373C  0EBE               	movlw	-66
 18594  01373E  006F FF8C  F035    	movff	plusw1,btemp+11
 18595  013744  0E0C               	movlw	12
 18596  013746  2434               	addwf	(btemp+10)^0,w,c
 18597  013748  6EE9               	movwf	fsr0l,c
 18598  01374A  0E00               	movlw	0
 18599  01374C  2035               	addwfc	(btemp+11)^0,w,c
 18600  01374E  6EEA               	movwf	fsr0h,c
 18601  013750  006F FF7B FFEE     	movff	postinc2,postinc0
 18602  013756  006F FF77 FFED     	movff	postdec2,postdec0
 18603                           
 18604                           ;stkvar	_yday @ sp[(-57)+53]
 18605  01375C  50E1               	movf	fsr1l,w,c
 18606  01375E  0FFC               	addlw	-4
 18607  013760  6ED9               	movwf	fsr2l,c
 18608  013762  50E2               	movf	fsr1h,w,c
 18609  013764  6EDA               	movwf	fsr2h,c
 18610  013766  0EFF               	movlw	255
 18611  013768  22DA               	addwfc	fsr2h,f,c
 18612                           
 18613                           ;stkvar	_tm @ sp[(-57)+-10]
 18614  01376A  0EBD               	movlw	-67
 18615  01376C  006F FF8C  F034    	movff	plusw1,btemp+10
 18616  013772  0EBE               	movlw	-66
 18617  013774  006F FF8C  F035    	movff	plusw1,btemp+11
 18618  01377A  0E0E               	movlw	14
 18619  01377C  2434               	addwf	(btemp+10)^0,w,c
 18620  01377E  6EE9               	movwf	fsr0l,c
 18621  013780  0E00               	movlw	0
 18622  013782  2035               	addwfc	(btemp+11)^0,w,c
 18623  013784  6EEA               	movwf	fsr0h,c
 18624  013786  006F FF7B FFEE     	movff	postinc2,postinc0
 18625  01378C  006F FF77 FFED     	movff	postdec2,postdec0
 18626  013792  0E10               	movlw	16
 18627  013794  6EE6               	movwf	postinc1,c
 18628  013796  0E0E               	movlw	14
 18629  013798  6EE6               	movwf	postinc1,c
 18630  01379A  0E00               	movlw	0
 18631  01379C  6EE6               	movwf	postinc1,c
 18632  01379E  0E00               	movlw	0
 18633  0137A0  6EE6               	movwf	postinc1,c
 18634                           
 18635                           ;stkvar	_remsecs @ sp[(-61)+41]
 18636  0137A2  0EEC               	movlw	-20
 18637  0137A4  006F FF8F FFE6     	movff	plusw1,postinc1
 18638  0137AA  006F FF8F FFE6     	movff	plusw1,postinc1
 18639  0137B0  006F FF8F FFE6     	movff	plusw1,postinc1
 18640  0137B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18641  0137BC  ECB0  F0F1         	call	___aldiv	;wreg free
 18642  0137C0  0060  F0A8  F034   	movff	btemp,btemp+10
 18643  0137C6  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18644                           
 18645                           ;stkvar	_tm @ sp[(-57)+-10]
 18646  0137CC  0EBD               	movlw	-67
 18647  0137CE  006F FF8C  F032    	movff	plusw1,btemp+8
 18648  0137D4  0EBE               	movlw	-66
 18649  0137D6  006F FF8C  F033    	movff	plusw1,btemp+9
 18650  0137DC  0E04               	movlw	4
 18651  0137DE  2432               	addwf	(btemp+8)^0,w,c
 18652  0137E0  6ED9               	movwf	fsr2l,c
 18653  0137E2  0E00               	movlw	0
 18654  0137E4  2033               	addwfc	(btemp+9)^0,w,c
 18655  0137E6  6EDA               	movwf	fsr2h,c
 18656  0137E8  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18657  0137EE  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18658  0137F4  0E3C               	movlw	60
 18659  0137F6  6EE6               	movwf	postinc1,c
 18660  0137F8  0E00               	movlw	0
 18661  0137FA  6EE6               	movwf	postinc1,c
 18662  0137FC  0E00               	movlw	0
 18663  0137FE  6EE6               	movwf	postinc1,c
 18664  013800  0E00               	movlw	0
 18665  013802  6EE6               	movwf	postinc1,c
 18666  013804  0E3C               	movlw	60
 18667  013806  6EE6               	movwf	postinc1,c
 18668  013808  0E00               	movlw	0
 18669  01380A  6EE6               	movwf	postinc1,c
 18670  01380C  0E00               	movlw	0
 18671  01380E  6EE6               	movwf	postinc1,c
 18672  013810  0E00               	movlw	0
 18673  013812  6EE6               	movwf	postinc1,c
 18674                           
 18675                           ;stkvar	_remsecs @ sp[(-65)+41]
 18676  013814  0EE8               	movlw	-24
 18677  013816  006F FF8F FFE6     	movff	plusw1,postinc1
 18678  01381C  006F FF8F FFE6     	movff	plusw1,postinc1
 18679  013822  006F FF8F FFE6     	movff	plusw1,postinc1
 18680  013828  006F FF8F FFE6     	movff	plusw1,postinc1
 18681  01382E  ECB0  F0F1         	call	___aldiv	;wreg free
 18682  013832  0060  F0AB  FFE6   	movff	btemp,postinc1
 18683  013838  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18684  01383E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18685  013844  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18686  01384A  EC36  F0F6         	call	___almod	;wreg free
 18687  01384E  0060  F0A8  F034   	movff	btemp,btemp+10
 18688  013854  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18689                           
 18690                           ;stkvar	_tm @ sp[(-57)+-10]
 18691  01385A  0EBD               	movlw	-67
 18692  01385C  006F FF8C  F032    	movff	plusw1,btemp+8
 18693  013862  0EBE               	movlw	-66
 18694  013864  006F FF8C  F033    	movff	plusw1,btemp+9
 18695  01386A  0E02               	movlw	2
 18696  01386C  2432               	addwf	(btemp+8)^0,w,c
 18697  01386E  6ED9               	movwf	fsr2l,c
 18698  013870  0E00               	movlw	0
 18699  013872  2033               	addwfc	(btemp+9)^0,w,c
 18700  013874  6EDA               	movwf	fsr2h,c
 18701  013876  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18702  01387C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18703  013882  0E3C               	movlw	60
 18704  013884  6EE6               	movwf	postinc1,c
 18705  013886  0E00               	movlw	0
 18706  013888  6EE6               	movwf	postinc1,c
 18707  01388A  0E00               	movlw	0
 18708  01388C  6EE6               	movwf	postinc1,c
 18709  01388E  0E00               	movlw	0
 18710  013890  6EE6               	movwf	postinc1,c
 18711                           
 18712                           ;stkvar	_remsecs @ sp[(-61)+41]
 18713  013892  0EEC               	movlw	-20
 18714  013894  006F FF8F FFE6     	movff	plusw1,postinc1
 18715  01389A  006F FF8F FFE6     	movff	plusw1,postinc1
 18716  0138A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18717  0138A6  006F FF8F FFE6     	movff	plusw1,postinc1
 18718  0138AC  EC36  F0F6         	call	___almod	;wreg free
 18719  0138B0  0060  F0A8  F034   	movff	btemp,btemp+10
 18720  0138B6  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18721                           
 18722                           ;stkvar	_tm @ sp[(-57)+-10]
 18723  0138BC  0EBD               	movlw	-67
 18724  0138BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 18725  0138C4  0EBE               	movlw	-66
 18726  0138C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 18727  0138CC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18728  0138D2  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18729  0138D8  0E00               	movlw	0
 18730  0138DA  6E2A               	movwf	btemp^0,c
 18731  0138DC  6A2B               	clrf	(btemp+1)^0,c
 18732  0138DE  6A2C               	clrf	(btemp+2)^0,c
 18733  0138E0  6A2D               	clrf	(btemp+3)^0,c
 18734  0138E2                     l3858:
 18735                           
 18736                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18737  0138E2  0EBD               	movlw	189
 18738  0138E4  26E1               	addwf	fsr1l,f,c
 18739  0138E6  0EFF               	movlw	255
 18740  0138E8  22E2               	addwfc	fsr1h,f,c
 18741  0138EA  0012               	return		;funcret
 18742  0138EC                     __end_of___secs_to_tm:
 18743                           	opt callstack 0
 18744                           
 18745 ;; *************** function ___omul *****************
 18746 ;; Defined at:
 18747 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18748 ;; Parameters:    Size  Location     Type
 18749 ;;  multiplier      8  [STACK] unsigned long long 
 18750 ;;  multiplicand    8  [STACK] unsigned long long 
 18751 ;; Auto vars:     Size  Location     Type
 18752 ;;  product         8  [STACK] unsigned long long 
 18753 ;; Return value:  Size  Location     Type
 18754 ;;                  8  [STACK] unsigned long long 
 18755 ;; Registers used:
 18756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18757 ;; Tracked objects:
 18758 ;;		On entry : 0/0
 18759 ;;		On exit  : 0/0
 18760 ;;		Unchanged: 0/0
 18761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18766 ;;Total ram usage:        0 bytes
 18767 ;; Hardware stack levels used:    1
 18768 ;; Hardware stack levels required when called:   15
 18769 ;; This function calls:
 18770 ;;		Nothing
 18771 ;; This function is called by:
 18772 ;;		___secs_to_tm
 18773 ;;		___year_to_secs
 18774 ;; This function uses a reentrant model
 18775 ;;
 18776                           
 18777                           	psect	text51
 18778  01F1F6                     __ptext51:
 18779                           	opt callstack 0
 18780  01F1F6                     ___omul:
 18781                           	opt callstack 0
 18782                           
 18783                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18784  01F1F6  0E08               	movlw	8
 18785  01F1F8  26E1               	addwf	fsr1l,f,c
 18786  01F1FA  0E00               	movlw	0
 18787  01F1FC  22E2               	addwfc	fsr1h,f,c
 18788                           
 18789                           ;stkvar	_product @ sp[(-8)+0]
 18790                           
 18791                           ;incstack = 0
 18792  01F1FE  0E07               	movlw	7
 18793  01F200  6E2A               	movwf	btemp^0,c
 18794  01F202  0EF8               	movlw	-8
 18795  01F204                     u8151:
 18796  01F204  6AE3               	clrf	plusw1,c
 18797  01F206  2AE8               	incf	wreg,f,c
 18798  01F208  062A               	decf	btemp^0,f,c
 18799  01F20A  E2FC               	bc	u8151
 18800  01F20C                     l10311:
 18801                           
 18802                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18803  01F20C  0EF0               	movlw	-16
 18804  01F20E  A0E3               	btfss	plusw1,0,c
 18805  01F210  D050               	goto	l10315
 18806                           
 18807                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18808                           ;stkvar	_product @ sp[(-8)+0]
 18809  01F212  0EF8               	movlw	-8
 18810  01F214  50E3               	movf	plusw1,w,c
 18811  01F216  6E2A               	movwf	btemp^0,c
 18812  01F218  0EE8               	movlw	-24
 18813  01F21A  50E3               	movf	plusw1,w,c
 18814  01F21C  262A               	addwf	btemp^0,f,c
 18815  01F21E  0EF8               	movlw	-8
 18816  01F220  0060  F0AB  FFE3   	movff	btemp,plusw1
 18817  01F226  0EF9               	movlw	-7
 18818  01F228  50E3               	movf	plusw1,w,c
 18819  01F22A  6E2A               	movwf	btemp^0,c
 18820  01F22C  0EE9               	movlw	-23
 18821  01F22E  50E3               	movf	plusw1,w,c
 18822  01F230  222A               	addwfc	btemp^0,f,c
 18823  01F232  0EF9               	movlw	-7
 18824  01F234  0060  F0AB  FFE3   	movff	btemp,plusw1
 18825  01F23A  0EFA               	movlw	-6
 18826  01F23C  50E3               	movf	plusw1,w,c
 18827  01F23E  6E2A               	movwf	btemp^0,c
 18828  01F240  0EEA               	movlw	-22
 18829  01F242  50E3               	movf	plusw1,w,c
 18830  01F244  222A               	addwfc	btemp^0,f,c
 18831  01F246  0EFA               	movlw	-6
 18832  01F248  0060  F0AB  FFE3   	movff	btemp,plusw1
 18833  01F24E  0EFB               	movlw	-5
 18834  01F250  50E3               	movf	plusw1,w,c
 18835  01F252  6E2A               	movwf	btemp^0,c
 18836  01F254  0EEB               	movlw	-21
 18837  01F256  50E3               	movf	plusw1,w,c
 18838  01F258  222A               	addwfc	btemp^0,f,c
 18839  01F25A  0EFB               	movlw	-5
 18840  01F25C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18841  01F262  0EFC               	movlw	-4
 18842  01F264  50E3               	movf	plusw1,w,c
 18843  01F266  6E2A               	movwf	btemp^0,c
 18844  01F268  0EEC               	movlw	-20
 18845  01F26A  50E3               	movf	plusw1,w,c
 18846  01F26C  222A               	addwfc	btemp^0,f,c
 18847  01F26E  0EFC               	movlw	-4
 18848  01F270  0060  F0AB  FFE3   	movff	btemp,plusw1
 18849  01F276  0EFD               	movlw	-3
 18850  01F278  50E3               	movf	plusw1,w,c
 18851  01F27A  6E2A               	movwf	btemp^0,c
 18852  01F27C  0EED               	movlw	-19
 18853  01F27E  50E3               	movf	plusw1,w,c
 18854  01F280  222A               	addwfc	btemp^0,f,c
 18855  01F282  0EFD               	movlw	-3
 18856  01F284  0060  F0AB  FFE3   	movff	btemp,plusw1
 18857  01F28A  0EFE               	movlw	-2
 18858  01F28C  50E3               	movf	plusw1,w,c
 18859  01F28E  6E2A               	movwf	btemp^0,c
 18860  01F290  0EEE               	movlw	-18
 18861  01F292  50E3               	movf	plusw1,w,c
 18862  01F294  222A               	addwfc	btemp^0,f,c
 18863  01F296  0EFE               	movlw	-2
 18864  01F298  0060  F0AB  FFE3   	movff	btemp,plusw1
 18865  01F29E  0EFF               	movlw	-1
 18866  01F2A0  50E3               	movf	plusw1,w,c
 18867  01F2A2  6E2A               	movwf	btemp^0,c
 18868  01F2A4  0EEF               	movlw	-17
 18869  01F2A6  50E3               	movf	plusw1,w,c
 18870  01F2A8  222A               	addwfc	btemp^0,f,c
 18871  01F2AA  0EFF               	movlw	-1
 18872  01F2AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18873  01F2B2                     l10315:
 18874                           
 18875                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18876  01F2B2  90D8               	bcf	status,0,c
 18877  01F2B4  0EE8               	movlw	-24
 18878  01F2B6  36E3               	rlcf	plusw1,f,c
 18879  01F2B8  0EE9               	movlw	-23
 18880  01F2BA  36E3               	rlcf	plusw1,f,c
 18881  01F2BC  0EEA               	movlw	-22
 18882  01F2BE  36E3               	rlcf	plusw1,f,c
 18883  01F2C0  0EEB               	movlw	-21
 18884  01F2C2  36E3               	rlcf	plusw1,f,c
 18885  01F2C4  0EEC               	movlw	-20
 18886  01F2C6  36E3               	rlcf	plusw1,f,c
 18887  01F2C8  0EED               	movlw	-19
 18888  01F2CA  36E3               	rlcf	plusw1,f,c
 18889  01F2CC  0EEE               	movlw	-18
 18890  01F2CE  36E3               	rlcf	plusw1,f,c
 18891  01F2D0  0EEF               	movlw	-17
 18892  01F2D2  36E3               	rlcf	plusw1,f,c
 18893                           
 18894                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18895  01F2D4  90D8               	bcf	status,0,c
 18896  01F2D6  0EF7               	movlw	-9
 18897  01F2D8  32E3               	rrcf	plusw1,f,c
 18898  01F2DA  0EF6               	movlw	-10
 18899  01F2DC  32E3               	rrcf	plusw1,f,c
 18900  01F2DE  0EF5               	movlw	-11
 18901  01F2E0  32E3               	rrcf	plusw1,f,c
 18902  01F2E2  0EF4               	movlw	-12
 18903  01F2E4  32E3               	rrcf	plusw1,f,c
 18904  01F2E6  0EF3               	movlw	-13
 18905  01F2E8  32E3               	rrcf	plusw1,f,c
 18906  01F2EA  0EF2               	movlw	-14
 18907  01F2EC  32E3               	rrcf	plusw1,f,c
 18908  01F2EE  0EF1               	movlw	-15
 18909  01F2F0  32E3               	rrcf	plusw1,f,c
 18910  01F2F2  0EF0               	movlw	-16
 18911  01F2F4  32E3               	rrcf	plusw1,f,c
 18912                           
 18913                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18914  01F2F6  0EF0               	movlw	-16
 18915  01F2F8  50E3               	movf	plusw1,w,c
 18916  01F2FA  E188               	bnz	l10311
 18917  01F2FC  0EF1               	movlw	-15
 18918  01F2FE  50E3               	movf	plusw1,w,c
 18919  01F300  E185               	bnz	l10311
 18920  01F302  0EF2               	movlw	-14
 18921  01F304  50E3               	movf	plusw1,w,c
 18922  01F306  E182               	bnz	l10311
 18923  01F308  0EF3               	movlw	-13
 18924  01F30A  50E3               	movf	plusw1,w,c
 18925  01F30C  E10C               	bnz	u8171
 18926  01F30E  0EF4               	movlw	-12
 18927  01F310  50E3               	movf	plusw1,w,c
 18928  01F312  E109               	bnz	u8171
 18929  01F314  0EF5               	movlw	-11
 18930  01F316  50E3               	movf	plusw1,w,c
 18931  01F318  E106               	bnz	u8171
 18932  01F31A  0EF6               	movlw	-10
 18933  01F31C  50E3               	movf	plusw1,w,c
 18934  01F31E  E103               	bnz	u8171
 18935  01F320  0EF7               	movlw	-9
 18936  01F322  50E3               	movf	plusw1,w,c
 18937  01F324  A4D8               	btfss	status,2,c
 18938  01F326                     u8171:
 18939  01F326  D772               	goto	l10311
 18940                           
 18941                           ;stkvar	_product @ sp[(-8)+0]
 18942  01F328  0EF8               	movlw	248
 18943  01F32A  24E1               	addwf	fsr1l,w,c
 18944  01F32C  6ED9               	movwf	fsr2l,c
 18945  01F32E  0EFF               	movlw	255
 18946  01F330  20E2               	addwfc	fsr1h,w,c
 18947  01F332  6EDA               	movwf	fsr2h,c
 18948                           
 18949                           ;stkvar	?___omul @ sp[(-8)+-8]
 18950  01F334  0E08               	movlw	8
 18951  01F336  6E2A               	movwf	btemp^0,c
 18952  01F338  0EF0               	movlw	-16
 18953  01F33A                     us818999:
 18954  01F33A  006F FF7B FFE3     	movff	postinc2,plusw1
 18955  01F340  28E8               	incf	wreg,w,c
 18956  01F342  2E2A               	decfsz	btemp^0,f,c
 18957  01F344  D7FA               	bra	us818999
 18958                           
 18959                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18960  01F346  0EF8               	movlw	248
 18961  01F348  26E1               	addwf	fsr1l,f,c
 18962  01F34A  0EFF               	movlw	255
 18963  01F34C  22E2               	addwfc	fsr1h,f,c
 18964  01F34E  0012               	return		;funcret
 18965  01F350                     __end_of___omul:
 18966                           	opt callstack 0
 18967                           
 18968 ;; *************** function ___lmul *****************
 18969 ;; Defined at:
 18970 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18971 ;; Parameters:    Size  Location     Type
 18972 ;;  multiplier      4  [STACK] unsigned long 
 18973 ;;  multiplicand    4  [STACK] unsigned long 
 18974 ;; Auto vars:     Size  Location     Type
 18975 ;;  product         4  [STACK] unsigned long 
 18976 ;; Return value:  Size  Location     Type
 18977 ;;                  4  [STACK] unsigned long 
 18978 ;; Registers used:
 18979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18980 ;; Tracked objects:
 18981 ;;		On entry : 0/0
 18982 ;;		On exit  : 0/0
 18983 ;;		Unchanged: 0/0
 18984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18989 ;;Total ram usage:        0 bytes
 18990 ;; Hardware stack levels used:    1
 18991 ;; Hardware stack levels required when called:   15
 18992 ;; This function calls:
 18993 ;;		Nothing
 18994 ;; This function is called by:
 18995 ;;		___secs_to_tm
 18996 ;;		_rule_to_secs
 18997 ;;		___year_to_secs
 18998 ;; This function uses a reentrant model
 18999 ;;
 19000                           
 19001                           	psect	text52
 19002  00076C                     __ptext52:
 19003                           	opt callstack 0
 19004  00076C                     ___lmul:
 19005                           	opt callstack 0
 19006                           
 19007                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19008  00076C  52E6               	movf	postinc1,f,c
 19009  00076E  52E6               	movf	postinc1,f,c
 19010  000770  52E6               	movf	postinc1,f,c
 19011  000772  52E6               	movf	postinc1,f,c
 19012                           
 19013                           ;stkvar	_product @ sp[(-4)+0]
 19014                           
 19015                           ;incstack = 0
 19016  000774  0EFC               	movlw	-4
 19017  000776  6AE3               	clrf	plusw1,c
 19018  000778  0EFD               	movlw	-3
 19019  00077A  6AE3               	clrf	plusw1,c
 19020  00077C  0EFE               	movlw	-2
 19021  00077E  6AE3               	clrf	plusw1,c
 19022  000780  0EFF               	movlw	-1
 19023  000782  6AE3               	clrf	plusw1,c
 19024  000784                     l2742:
 19025                           
 19026                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19027  000784  0EF8               	movlw	-8
 19028  000786  A0E3               	btfss	plusw1,0,c
 19029  000788  D028               	goto	l10301
 19030                           
 19031                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19032                           ;stkvar	_product @ sp[(-4)+0]
 19033  00078A  0EFC               	movlw	-4
 19034  00078C  50E3               	movf	plusw1,w,c
 19035  00078E  6E2A               	movwf	btemp^0,c
 19036  000790  0EF4               	movlw	-12
 19037  000792  50E3               	movf	plusw1,w,c
 19038  000794  262A               	addwf	btemp^0,f,c
 19039  000796  0EFC               	movlw	-4
 19040  000798  0060  F0AB  FFE3   	movff	btemp,plusw1
 19041  00079E  0EFD               	movlw	-3
 19042  0007A0  50E3               	movf	plusw1,w,c
 19043  0007A2  6E2A               	movwf	btemp^0,c
 19044  0007A4  0EF5               	movlw	-11
 19045  0007A6  50E3               	movf	plusw1,w,c
 19046  0007A8  222A               	addwfc	btemp^0,f,c
 19047  0007AA  0EFD               	movlw	-3
 19048  0007AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19049  0007B2  0EFE               	movlw	-2
 19050  0007B4  50E3               	movf	plusw1,w,c
 19051  0007B6  6E2A               	movwf	btemp^0,c
 19052  0007B8  0EF6               	movlw	-10
 19053  0007BA  50E3               	movf	plusw1,w,c
 19054  0007BC  222A               	addwfc	btemp^0,f,c
 19055  0007BE  0EFE               	movlw	-2
 19056  0007C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19057  0007C6  0EFF               	movlw	-1
 19058  0007C8  50E3               	movf	plusw1,w,c
 19059  0007CA  6E2A               	movwf	btemp^0,c
 19060  0007CC  0EF7               	movlw	-9
 19061  0007CE  50E3               	movf	plusw1,w,c
 19062  0007D0  222A               	addwfc	btemp^0,f,c
 19063  0007D2  0EFF               	movlw	-1
 19064  0007D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19065  0007DA                     l10301:
 19066                           
 19067                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19068  0007DA  90D8               	bcf	status,0,c
 19069  0007DC  0EF4               	movlw	-12
 19070  0007DE  36E3               	rlcf	plusw1,f,c
 19071  0007E0  0EF5               	movlw	-11
 19072  0007E2  36E3               	rlcf	plusw1,f,c
 19073  0007E4  0EF6               	movlw	-10
 19074  0007E6  36E3               	rlcf	plusw1,f,c
 19075  0007E8  0EF7               	movlw	-9
 19076  0007EA  36E3               	rlcf	plusw1,f,c
 19077                           
 19078                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19079  0007EC  90D8               	bcf	status,0,c
 19080  0007EE  0EFB               	movlw	-5
 19081  0007F0  32E3               	rrcf	plusw1,f,c
 19082  0007F2  0EFA               	movlw	-6
 19083  0007F4  32E3               	rrcf	plusw1,f,c
 19084  0007F6  0EF9               	movlw	-7
 19085  0007F8  32E3               	rrcf	plusw1,f,c
 19086  0007FA  0EF8               	movlw	-8
 19087  0007FC  32E3               	rrcf	plusw1,f,c
 19088                           
 19089                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19090  0007FE  0EF8               	movlw	-8
 19091  000800  50E3               	movf	plusw1,w,c
 19092  000802  E1C0               	bnz	l2742
 19093  000804  0EF9               	movlw	-7
 19094  000806  50E3               	movf	plusw1,w,c
 19095  000808  E1BD               	bnz	l2742
 19096  00080A  0EFA               	movlw	-6
 19097  00080C  50E3               	movf	plusw1,w,c
 19098  00080E  E1BA               	bnz	l2742
 19099  000810  0EFB               	movlw	-5
 19100  000812  50E3               	movf	plusw1,w,c
 19101  000814  A4D8               	btfss	status,2,c
 19102  000816  D7B6               	goto	l2742
 19103                           
 19104                           ;stkvar	_product @ sp[(-4)+0]
 19105  000818  0EFC               	movlw	-4
 19106  00081A  006F FF8C  F02A    	movff	plusw1,btemp
 19107  000820  0EFD               	movlw	-3
 19108  000822  006F FF8C  F02B    	movff	plusw1,btemp+1
 19109  000828  0EFE               	movlw	-2
 19110  00082A  006F FF8C  F02C    	movff	plusw1,btemp+2
 19111  000830  0EFF               	movlw	-1
 19112  000832  006F FF8C  F02D    	movff	plusw1,btemp+3
 19113                           
 19114                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19115  000838  0EF4               	movlw	244
 19116  00083A  26E1               	addwf	fsr1l,f,c
 19117  00083C  0EFF               	movlw	255
 19118  00083E  22E2               	addwfc	fsr1h,f,c
 19119  000840  0012               	return		;funcret
 19120  000842                     __end_of___lmul:
 19121                           	opt callstack 0
 19122                           
 19123 ;; *************** function ___almod *****************
 19124 ;; Defined at:
 19125 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 19126 ;; Parameters:    Size  Location     Type
 19127 ;;  dividend        4  [STACK] long 
 19128 ;;  divisor         4  [STACK] long 
 19129 ;; Auto vars:     Size  Location     Type
 19130 ;;  sign            1  [STACK] unsigned char 
 19131 ;;  counter         1  [STACK] unsigned char 
 19132 ;; Return value:  Size  Location     Type
 19133 ;;                  4  [STACK] long 
 19134 ;; Registers used:
 19135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19136 ;; Tracked objects:
 19137 ;;		On entry : 0/39
 19138 ;;		On exit  : 0/0
 19139 ;;		Unchanged: 0/0
 19140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19145 ;;Total ram usage:        0 bytes
 19146 ;; Hardware stack levels used:    1
 19147 ;; Hardware stack levels required when called:   15
 19148 ;; This function calls:
 19149 ;;		Nothing
 19150 ;; This function is called by:
 19151 ;;		___secs_to_tm
 19152 ;; This function uses a reentrant model
 19153 ;;
 19154                           
 19155                           	psect	text53
 19156  01EC6C                     __ptext53:
 19157                           	opt callstack 0
 19158  01EC6C                     ___almod:
 19159                           	opt callstack 0
 19160                           
 19161                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19162  01EC6C  52E6               	movf	postinc1,f,c
 19163  01EC6E  52E6               	movf	postinc1,f,c
 19164                           
 19165                           ;stkvar	_sign @ sp[(-2)+0]
 19166                           
 19167                           ;incstack = 0
 19168  01EC70  0EFE               	movlw	-2
 19169  01EC72  6AE3               	clrf	plusw1,c
 19170                           
 19171                           ;stkvar	_dividend @ sp[(-2)+-4]
 19172  01EC74  0EFD               	movlw	-3
 19173  01EC76  AEE3               	btfss	plusw1,7,c
 19174  01EC78  D014               	goto	l12079
 19175                           
 19176                           ;stkvar	_dividend @ sp[(-2)+-4]
 19177                           ;stkvar	_dividend @ sp[(-2)+-4]
 19178  01EC7A  0EFA               	movlw	-6
 19179  01EC7C  6CE3               	negf	plusw1,c
 19180  01EC7E  0EFB               	movlw	-5
 19181  01EC80  1EE3               	comf	plusw1,f,c
 19182  01EC82  0EFC               	movlw	-4
 19183  01EC84  1EE3               	comf	plusw1,f,c
 19184  01EC86  0EFD               	movlw	-3
 19185  01EC88  1EE3               	comf	plusw1,f,c
 19186  01EC8A  E308               	bnc	u11290
 19187  01EC8C  0EFB               	movlw	-5
 19188  01EC8E  2AE3               	incf	plusw1,f,c
 19189  01EC90  E305               	bnc	u11290
 19190  01EC92  0EFC               	movlw	-4
 19191  01EC94  2AE3               	incf	plusw1,f,c
 19192  01EC96  E302               	bnc	u11290
 19193  01EC98  0EFD               	movlw	-3
 19194  01EC9A  2AE3               	incf	plusw1,f,c
 19195  01EC9C                     u11290:
 19196                           
 19197                           ;stkvar	_sign @ sp[(-2)+0]
 19198  01EC9C  0EFE               	movlw	-2
 19199  01EC9E  6AE3               	clrf	plusw1,c
 19200  01ECA0  2AE3               	incf	plusw1,f,c
 19201  01ECA2                     l12079:
 19202                           
 19203                           ;stkvar	_divisor @ sp[(-2)+-8]
 19204  01ECA2  0EF9               	movlw	-7
 19205  01ECA4  AEE3               	btfss	plusw1,7,c
 19206  01ECA6  D011               	goto	u11310
 19207                           
 19208                           ;stkvar	_divisor @ sp[(-2)+-8]
 19209                           ;stkvar	_divisor @ sp[(-2)+-8]
 19210  01ECA8  0EF6               	movlw	-10
 19211  01ECAA  6CE3               	negf	plusw1,c
 19212  01ECAC  0EF7               	movlw	-9
 19213  01ECAE  1EE3               	comf	plusw1,f,c
 19214  01ECB0  0EF8               	movlw	-8
 19215  01ECB2  1EE3               	comf	plusw1,f,c
 19216  01ECB4  0EF9               	movlw	-7
 19217  01ECB6  1EE3               	comf	plusw1,f,c
 19218  01ECB8  E308               	bnc	u11310
 19219  01ECBA  0EF7               	movlw	-9
 19220  01ECBC  2AE3               	incf	plusw1,f,c
 19221  01ECBE  E305               	bnc	u11310
 19222  01ECC0  0EF8               	movlw	-8
 19223  01ECC2  2AE3               	incf	plusw1,f,c
 19224  01ECC4  E302               	bnc	u11310
 19225  01ECC6  0EF9               	movlw	-7
 19226  01ECC8  2AE3               	incf	plusw1,f,c
 19227  01ECCA                     u11310:
 19228                           
 19229                           ;stkvar	_divisor @ sp[(-2)+-8]
 19230  01ECCA  0EF6               	movlw	-10
 19231  01ECCC  50E3               	movf	plusw1,w,c
 19232  01ECCE  E10A               	bnz	u11320
 19233  01ECD0  0EF7               	movlw	-9
 19234  01ECD2  50E3               	movf	plusw1,w,c
 19235  01ECD4  E107               	bnz	u11320
 19236  01ECD6  0EF8               	movlw	-8
 19237  01ECD8  50E3               	movf	plusw1,w,c
 19238  01ECDA  E104               	bnz	u11320
 19239  01ECDC  0EF9               	movlw	-7
 19240  01ECDE  50E3               	movf	plusw1,w,c
 19241  01ECE0  B4D8               	btfsc	status,2,c
 19242  01ECE2  D04D               	goto	u11350
 19243  01ECE4                     u11320:
 19244                           
 19245                           ;stkvar	_counter @ sp[(-2)+1]
 19246  01ECE4  0EFF               	movlw	-1
 19247  01ECE6  6AE3               	clrf	plusw1,c
 19248  01ECE8  D00A               	goto	L17
 19249  01ECEA                     l12087:
 19250                           
 19251                           ;stkvar	_divisor @ sp[(-2)+-8]
 19252  01ECEA  90D8               	bcf	status,0,c
 19253  01ECEC  0EF6               	movlw	-10
 19254  01ECEE  36E3               	rlcf	plusw1,f,c
 19255  01ECF0  0EF7               	movlw	-9
 19256  01ECF2  36E3               	rlcf	plusw1,f,c
 19257  01ECF4  0EF8               	movlw	-8
 19258  01ECF6  36E3               	rlcf	plusw1,f,c
 19259  01ECF8  0EF9               	movlw	-7
 19260  01ECFA  36E3               	rlcf	plusw1,f,c
 19261                           
 19262                           ;stkvar	_counter @ sp[(-2)+1]
 19263  01ECFC  0EFF               	movlw	-1
 19264  01ECFE                     L17:
 19265  01ECFE  2AE3               	incf	plusw1,f,c
 19266                           
 19267                           ;stkvar	_divisor @ sp[(-2)+-8]
 19268  01ED00  0EF9               	movlw	-7
 19269  01ED02  AEE3               	btfss	plusw1,7,c
 19270  01ED04  D7F2               	goto	l12087
 19271  01ED06                     u11330:
 19272                           
 19273                           ;stkvar	_divisor @ sp[(-2)+-8]
 19274                           ;stkvar	_dividend @ sp[(-2)+-4]
 19275  01ED06  50E1               	movf	fsr1l,w,c
 19276  01ED08  0FFA               	addlw	-6
 19277  01ED0A  6ED9               	movwf	fsr2l,c
 19278  01ED0C  50E2               	movf	fsr1h,w,c
 19279  01ED0E  6EDA               	movwf	fsr2h,c
 19280  01ED10  0EFF               	movlw	255
 19281  01ED12  22DA               	addwfc	fsr2h,f,c
 19282  01ED14  0EF6               	movlw	-10
 19283  01ED16  50E3               	movf	plusw1,w,c
 19284  01ED18  5CDE               	subwf	postinc2,w,c
 19285  01ED1A  0EF7               	movlw	-9
 19286  01ED1C  50E3               	movf	plusw1,w,c
 19287  01ED1E  58DE               	subwfb	postinc2,w,c
 19288  01ED20  0EF8               	movlw	-8
 19289  01ED22  50E3               	movf	plusw1,w,c
 19290  01ED24  58DE               	subwfb	postinc2,w,c
 19291  01ED26  0EF9               	movlw	-7
 19292  01ED28  50E3               	movf	plusw1,w,c
 19293  01ED2A  58DE               	subwfb	postinc2,w,c
 19294  01ED2C  A0D8               	btfss	status,0,c
 19295  01ED2E  D013               	goto	l12095
 19296                           
 19297                           ;stkvar	_divisor @ sp[(-2)+-8]
 19298                           ;stkvar	_dividend @ sp[(-2)+-4]
 19299  01ED30  50E1               	movf	fsr1l,w,c
 19300  01ED32  0FFA               	addlw	-6
 19301  01ED34  6ED9               	movwf	fsr2l,c
 19302  01ED36  50E2               	movf	fsr1h,w,c
 19303  01ED38  6EDA               	movwf	fsr2h,c
 19304  01ED3A  0EFF               	movlw	255
 19305  01ED3C  22DA               	addwfc	fsr2h,f,c
 19306  01ED3E  0EF6               	movlw	-10
 19307  01ED40  50E3               	movf	plusw1,w,c
 19308  01ED42  5EDE               	subwf	postinc2,f,c
 19309  01ED44  0EF7               	movlw	-9
 19310  01ED46  50E3               	movf	plusw1,w,c
 19311  01ED48  5ADE               	subwfb	postinc2,f,c
 19312  01ED4A  0EF8               	movlw	-8
 19313  01ED4C  50E3               	movf	plusw1,w,c
 19314  01ED4E  5ADE               	subwfb	postinc2,f,c
 19315  01ED50  0EF9               	movlw	-7
 19316  01ED52  50E3               	movf	plusw1,w,c
 19317  01ED54  5ADE               	subwfb	postinc2,f,c
 19318  01ED56                     l12095:
 19319                           
 19320                           ;stkvar	_divisor @ sp[(-2)+-8]
 19321  01ED56  90D8               	bcf	status,0,c
 19322  01ED58  0EF9               	movlw	-7
 19323  01ED5A  32E3               	rrcf	plusw1,f,c
 19324  01ED5C  0EF8               	movlw	-8
 19325  01ED5E  32E3               	rrcf	plusw1,f,c
 19326  01ED60  0EF7               	movlw	-9
 19327  01ED62  32E3               	rrcf	plusw1,f,c
 19328  01ED64  0EF6               	movlw	-10
 19329  01ED66  32E3               	rrcf	plusw1,f,c
 19330                           
 19331                           ;stkvar	_counter @ sp[(-2)+1]
 19332  01ED68  0EFF               	movlw	-1
 19333  01ED6A  50E3               	movf	plusw1,w,c
 19334  01ED6C  6E2A               	movwf	btemp^0,c
 19335  01ED6E  0E01               	movlw	1
 19336  01ED70  5E2A               	subwf	btemp^0,f,c
 19337  01ED72  0EFF               	movlw	-1
 19338  01ED74  0060  F0AB  FFE3   	movff	btemp,plusw1
 19339  01ED7A  A4D8               	btfss	status,2,c
 19340  01ED7C  D7C4               	goto	u11330
 19341  01ED7E                     u11350:
 19342                           
 19343                           ;stkvar	_sign @ sp[(-2)+0]
 19344  01ED7E  0EFE               	movlw	-2
 19345  01ED80  50E3               	movf	plusw1,w,c
 19346  01ED82  B4D8               	btfsc	status,2,c
 19347  01ED84  D011               	goto	u11370
 19348                           
 19349                           ;stkvar	_dividend @ sp[(-2)+-4]
 19350                           ;stkvar	_dividend @ sp[(-2)+-4]
 19351  01ED86  0EFA               	movlw	-6
 19352  01ED88  6CE3               	negf	plusw1,c
 19353  01ED8A  0EFB               	movlw	-5
 19354  01ED8C  1EE3               	comf	plusw1,f,c
 19355  01ED8E  0EFC               	movlw	-4
 19356  01ED90  1EE3               	comf	plusw1,f,c
 19357  01ED92  0EFD               	movlw	-3
 19358  01ED94  1EE3               	comf	plusw1,f,c
 19359  01ED96  E308               	bnc	u11370
 19360  01ED98  0EFB               	movlw	-5
 19361  01ED9A  2AE3               	incf	plusw1,f,c
 19362  01ED9C  E305               	bnc	u11370
 19363  01ED9E  0EFC               	movlw	-4
 19364  01EDA0  2AE3               	incf	plusw1,f,c
 19365  01EDA2  E302               	bnc	u11370
 19366  01EDA4  0EFD               	movlw	-3
 19367  01EDA6  2AE3               	incf	plusw1,f,c
 19368  01EDA8                     u11370:
 19369                           
 19370                           ;stkvar	_dividend @ sp[(-2)+-4]
 19371  01EDA8  0EFA               	movlw	-6
 19372  01EDAA  006F FF8C  F02A    	movff	plusw1,btemp
 19373  01EDB0  0EFB               	movlw	-5
 19374  01EDB2  006F FF8C  F02B    	movff	plusw1,btemp+1
 19375  01EDB8  0EFC               	movlw	-4
 19376  01EDBA  006F FF8C  F02C    	movff	plusw1,btemp+2
 19377  01EDC0  0EFD               	movlw	-3
 19378  01EDC2  006F FF8C  F02D    	movff	plusw1,btemp+3
 19379                           
 19380                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19381  01EDC8  0EF6               	movlw	246
 19382  01EDCA  26E1               	addwf	fsr1l,f,c
 19383  01EDCC  0EFF               	movlw	255
 19384  01EDCE  22E2               	addwfc	fsr1h,f,c
 19385  01EDD0  0012               	return		;funcret
 19386  01EDD2                     __end_of___almod:
 19387                           	opt callstack 0
 19388                           
 19389 ;; *************** function ___aldiv *****************
 19390 ;; Defined at:
 19391 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19392 ;; Parameters:    Size  Location     Type
 19393 ;;  dividend        4  [STACK] long 
 19394 ;;  divisor         4  [STACK] long 
 19395 ;; Auto vars:     Size  Location     Type
 19396 ;;  quotient        4  [STACK] long 
 19397 ;;  sign            1  [STACK] unsigned char 
 19398 ;;  counter         1  [STACK] unsigned char 
 19399 ;; Return value:  Size  Location     Type
 19400 ;;                  4  [STACK] long 
 19401 ;; Registers used:
 19402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19403 ;; Tracked objects:
 19404 ;;		On entry : 0/0
 19405 ;;		On exit  : 0/0
 19406 ;;		Unchanged: 0/0
 19407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19412 ;;Total ram usage:        0 bytes
 19413 ;; Hardware stack levels used:    1
 19414 ;; Hardware stack levels required when called:   15
 19415 ;; This function calls:
 19416 ;;		Nothing
 19417 ;; This function is called by:
 19418 ;;		___secs_to_tm
 19419 ;;		_rule_to_secs
 19420 ;; This function uses a reentrant model
 19421 ;;
 19422                           
 19423                           	psect	text54
 19424  01E360                     __ptext54:
 19425                           	opt callstack 0
 19426  01E360                     ___aldiv:
 19427                           	opt callstack 0
 19428                           
 19429                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19430  01E360  0E06               	movlw	6
 19431  01E362  26E1               	addwf	fsr1l,f,c
 19432  01E364  0E00               	movlw	0
 19433  01E366  22E2               	addwfc	fsr1h,f,c
 19434                           
 19435                           ;stkvar	_sign @ sp[(-6)+4]
 19436                           
 19437                           ;incstack = 0
 19438  01E368  0EFE               	movlw	-2
 19439  01E36A  6AE3               	clrf	plusw1,c
 19440                           
 19441                           ;stkvar	_divisor @ sp[(-6)+-8]
 19442  01E36C  0EF5               	movlw	-11
 19443  01E36E  AEE3               	btfss	plusw1,7,c
 19444  01E370  D014               	goto	l11621
 19445                           
 19446                           ;stkvar	_divisor @ sp[(-6)+-8]
 19447                           ;stkvar	_divisor @ sp[(-6)+-8]
 19448  01E372  0EF2               	movlw	-14
 19449  01E374  6CE3               	negf	plusw1,c
 19450  01E376  0EF3               	movlw	-13
 19451  01E378  1EE3               	comf	plusw1,f,c
 19452  01E37A  0EF4               	movlw	-12
 19453  01E37C  1EE3               	comf	plusw1,f,c
 19454  01E37E  0EF5               	movlw	-11
 19455  01E380  1EE3               	comf	plusw1,f,c
 19456  01E382  E308               	bnc	u10610
 19457  01E384  0EF3               	movlw	-13
 19458  01E386  2AE3               	incf	plusw1,f,c
 19459  01E388  E305               	bnc	u10610
 19460  01E38A  0EF4               	movlw	-12
 19461  01E38C  2AE3               	incf	plusw1,f,c
 19462  01E38E  E302               	bnc	u10610
 19463  01E390  0EF5               	movlw	-11
 19464  01E392  2AE3               	incf	plusw1,f,c
 19465  01E394                     u10610:
 19466                           
 19467                           ;stkvar	_sign @ sp[(-6)+4]
 19468  01E394  0EFE               	movlw	-2
 19469  01E396  6AE3               	clrf	plusw1,c
 19470  01E398  2AE3               	incf	plusw1,f,c
 19471  01E39A                     l11621:
 19472                           
 19473                           ;stkvar	_dividend @ sp[(-6)+-4]
 19474  01E39A  0EF9               	movlw	-7
 19475  01E39C  AEE3               	btfss	plusw1,7,c
 19476  01E39E  D013               	goto	l11627
 19477                           
 19478                           ;stkvar	_dividend @ sp[(-6)+-4]
 19479                           ;stkvar	_dividend @ sp[(-6)+-4]
 19480  01E3A0  0EF6               	movlw	-10
 19481  01E3A2  6CE3               	negf	plusw1,c
 19482  01E3A4  0EF7               	movlw	-9
 19483  01E3A6  1EE3               	comf	plusw1,f,c
 19484  01E3A8  0EF8               	movlw	-8
 19485  01E3AA  1EE3               	comf	plusw1,f,c
 19486  01E3AC  0EF9               	movlw	-7
 19487  01E3AE  1EE3               	comf	plusw1,f,c
 19488  01E3B0  E308               	bnc	u10630
 19489  01E3B2  0EF7               	movlw	-9
 19490  01E3B4  2AE3               	incf	plusw1,f,c
 19491  01E3B6  E305               	bnc	u10630
 19492  01E3B8  0EF8               	movlw	-8
 19493  01E3BA  2AE3               	incf	plusw1,f,c
 19494  01E3BC  E302               	bnc	u10630
 19495  01E3BE  0EF9               	movlw	-7
 19496  01E3C0  2AE3               	incf	plusw1,f,c
 19497  01E3C2                     u10630:
 19498                           
 19499                           ;stkvar	_sign @ sp[(-6)+4]
 19500  01E3C2  0EFE               	movlw	-2
 19501  01E3C4  70E3               	btg	plusw1,0,c
 19502  01E3C6                     l11627:
 19503                           
 19504                           ;stkvar	_quotient @ sp[(-6)+0]
 19505  01E3C6  0EFA               	movlw	-6
 19506  01E3C8  6AE3               	clrf	plusw1,c
 19507  01E3CA  0EFB               	movlw	-5
 19508  01E3CC  6AE3               	clrf	plusw1,c
 19509  01E3CE  0EFC               	movlw	-4
 19510  01E3D0  6AE3               	clrf	plusw1,c
 19511  01E3D2  0EFD               	movlw	-3
 19512  01E3D4  6AE3               	clrf	plusw1,c
 19513                           
 19514                           ;stkvar	_divisor @ sp[(-6)+-8]
 19515  01E3D6  0EF2               	movlw	-14
 19516  01E3D8  50E3               	movf	plusw1,w,c
 19517  01E3DA  E10A               	bnz	u10640
 19518  01E3DC  0EF3               	movlw	-13
 19519  01E3DE  50E3               	movf	plusw1,w,c
 19520  01E3E0  E107               	bnz	u10640
 19521  01E3E2  0EF4               	movlw	-12
 19522  01E3E4  50E3               	movf	plusw1,w,c
 19523  01E3E6  E104               	bnz	u10640
 19524  01E3E8  0EF5               	movlw	-11
 19525  01E3EA  50E3               	movf	plusw1,w,c
 19526  01E3EC  B4D8               	btfsc	status,2,c
 19527  01E3EE  D058               	goto	u10670
 19528  01E3F0                     u10640:
 19529                           
 19530                           ;stkvar	_counter @ sp[(-6)+5]
 19531  01E3F0  0EFF               	movlw	-1
 19532  01E3F2  6AE3               	clrf	plusw1,c
 19533  01E3F4  D00A               	goto	L18
 19534  01E3F6                     l11633:
 19535                           
 19536                           ;stkvar	_divisor @ sp[(-6)+-8]
 19537  01E3F6  90D8               	bcf	status,0,c
 19538  01E3F8  0EF2               	movlw	-14
 19539  01E3FA  36E3               	rlcf	plusw1,f,c
 19540  01E3FC  0EF3               	movlw	-13
 19541  01E3FE  36E3               	rlcf	plusw1,f,c
 19542  01E400  0EF4               	movlw	-12
 19543  01E402  36E3               	rlcf	plusw1,f,c
 19544  01E404  0EF5               	movlw	-11
 19545  01E406  36E3               	rlcf	plusw1,f,c
 19546                           
 19547                           ;stkvar	_counter @ sp[(-6)+5]
 19548  01E408  0EFF               	movlw	-1
 19549  01E40A                     L18:
 19550  01E40A  2AE3               	incf	plusw1,f,c
 19551                           
 19552                           ;stkvar	_divisor @ sp[(-6)+-8]
 19553  01E40C  0EF5               	movlw	-11
 19554  01E40E  AEE3               	btfss	plusw1,7,c
 19555  01E410  D7F2               	goto	l11633
 19556  01E412                     u10650:
 19557                           
 19558                           ;stkvar	_quotient @ sp[(-6)+0]
 19559  01E412  90D8               	bcf	status,0,c
 19560  01E414  0EFA               	movlw	-6
 19561  01E416  36E3               	rlcf	plusw1,f,c
 19562  01E418  0EFB               	movlw	-5
 19563  01E41A  36E3               	rlcf	plusw1,f,c
 19564  01E41C  0EFC               	movlw	-4
 19565  01E41E  36E3               	rlcf	plusw1,f,c
 19566  01E420  0EFD               	movlw	-3
 19567  01E422  36E3               	rlcf	plusw1,f,c
 19568                           
 19569                           ;stkvar	_divisor @ sp[(-6)+-8]
 19570                           ;stkvar	_dividend @ sp[(-6)+-4]
 19571  01E424  50E1               	movf	fsr1l,w,c
 19572  01E426  0FF6               	addlw	-10
 19573  01E428  6ED9               	movwf	fsr2l,c
 19574  01E42A  50E2               	movf	fsr1h,w,c
 19575  01E42C  6EDA               	movwf	fsr2h,c
 19576  01E42E  0EFF               	movlw	255
 19577  01E430  22DA               	addwfc	fsr2h,f,c
 19578  01E432  0EF2               	movlw	-14
 19579  01E434  50E3               	movf	plusw1,w,c
 19580  01E436  5CDE               	subwf	postinc2,w,c
 19581  01E438  0EF3               	movlw	-13
 19582  01E43A  50E3               	movf	plusw1,w,c
 19583  01E43C  58DE               	subwfb	postinc2,w,c
 19584  01E43E  0EF4               	movlw	-12
 19585  01E440  50E3               	movf	plusw1,w,c
 19586  01E442  58DE               	subwfb	postinc2,w,c
 19587  01E444  0EF5               	movlw	-11
 19588  01E446  50E3               	movf	plusw1,w,c
 19589  01E448  58DE               	subwfb	postinc2,w,c
 19590  01E44A  A0D8               	btfss	status,0,c
 19591  01E44C  D015               	goto	l11645
 19592                           
 19593                           ;stkvar	_divisor @ sp[(-6)+-8]
 19594                           ;stkvar	_dividend @ sp[(-6)+-4]
 19595  01E44E  50E1               	movf	fsr1l,w,c
 19596  01E450  0FF6               	addlw	-10
 19597  01E452  6ED9               	movwf	fsr2l,c
 19598  01E454  50E2               	movf	fsr1h,w,c
 19599  01E456  6EDA               	movwf	fsr2h,c
 19600  01E458  0EFF               	movlw	255
 19601  01E45A  22DA               	addwfc	fsr2h,f,c
 19602  01E45C  0EF2               	movlw	-14
 19603  01E45E  50E3               	movf	plusw1,w,c
 19604  01E460  5EDE               	subwf	postinc2,f,c
 19605  01E462  0EF3               	movlw	-13
 19606  01E464  50E3               	movf	plusw1,w,c
 19607  01E466  5ADE               	subwfb	postinc2,f,c
 19608  01E468  0EF4               	movlw	-12
 19609  01E46A  50E3               	movf	plusw1,w,c
 19610  01E46C  5ADE               	subwfb	postinc2,f,c
 19611  01E46E  0EF5               	movlw	-11
 19612  01E470  50E3               	movf	plusw1,w,c
 19613  01E472  5ADE               	subwfb	postinc2,f,c
 19614                           
 19615                           ;stkvar	_quotient @ sp[(-6)+0]
 19616  01E474  0EFA               	movlw	-6
 19617  01E476  80E3               	bsf	plusw1,0,c
 19618  01E478                     l11645:
 19619                           
 19620                           ;stkvar	_divisor @ sp[(-6)+-8]
 19621  01E478  90D8               	bcf	status,0,c
 19622  01E47A  0EF5               	movlw	-11
 19623  01E47C  32E3               	rrcf	plusw1,f,c
 19624  01E47E  0EF4               	movlw	-12
 19625  01E480  32E3               	rrcf	plusw1,f,c
 19626  01E482  0EF3               	movlw	-13
 19627  01E484  32E3               	rrcf	plusw1,f,c
 19628  01E486  0EF2               	movlw	-14
 19629  01E488  32E3               	rrcf	plusw1,f,c
 19630                           
 19631                           ;stkvar	_counter @ sp[(-6)+5]
 19632  01E48A  0EFF               	movlw	-1
 19633  01E48C  50E3               	movf	plusw1,w,c
 19634  01E48E  6E2A               	movwf	btemp^0,c
 19635  01E490  0E01               	movlw	1
 19636  01E492  5E2A               	subwf	btemp^0,f,c
 19637  01E494  0EFF               	movlw	-1
 19638  01E496  0060  F0AB  FFE3   	movff	btemp,plusw1
 19639  01E49C  A4D8               	btfss	status,2,c
 19640  01E49E  D7B9               	goto	u10650
 19641  01E4A0                     u10670:
 19642                           
 19643                           ;stkvar	_sign @ sp[(-6)+4]
 19644  01E4A0  0EFE               	movlw	-2
 19645  01E4A2  50E3               	movf	plusw1,w,c
 19646  01E4A4  B4D8               	btfsc	status,2,c
 19647  01E4A6  D011               	goto	u10690
 19648                           
 19649                           ;stkvar	_quotient @ sp[(-6)+0]
 19650                           ;stkvar	_quotient @ sp[(-6)+0]
 19651  01E4A8  0EFA               	movlw	-6
 19652  01E4AA  6CE3               	negf	plusw1,c
 19653  01E4AC  0EFB               	movlw	-5
 19654  01E4AE  1EE3               	comf	plusw1,f,c
 19655  01E4B0  0EFC               	movlw	-4
 19656  01E4B2  1EE3               	comf	plusw1,f,c
 19657  01E4B4  0EFD               	movlw	-3
 19658  01E4B6  1EE3               	comf	plusw1,f,c
 19659  01E4B8  E308               	bnc	u10690
 19660  01E4BA  0EFB               	movlw	-5
 19661  01E4BC  2AE3               	incf	plusw1,f,c
 19662  01E4BE  E305               	bnc	u10690
 19663  01E4C0  0EFC               	movlw	-4
 19664  01E4C2  2AE3               	incf	plusw1,f,c
 19665  01E4C4  E302               	bnc	u10690
 19666  01E4C6  0EFD               	movlw	-3
 19667  01E4C8  2AE3               	incf	plusw1,f,c
 19668  01E4CA                     u10690:
 19669                           
 19670                           ;stkvar	_quotient @ sp[(-6)+0]
 19671  01E4CA  0EFA               	movlw	-6
 19672  01E4CC  006F FF8C  F02A    	movff	plusw1,btemp
 19673  01E4D2  0EFB               	movlw	-5
 19674  01E4D4  006F FF8C  F02B    	movff	plusw1,btemp+1
 19675  01E4DA  0EFC               	movlw	-4
 19676  01E4DC  006F FF8C  F02C    	movff	plusw1,btemp+2
 19677  01E4E2  0EFD               	movlw	-3
 19678  01E4E4  006F FF8C  F02D    	movff	plusw1,btemp+3
 19679                           
 19680                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19681  01E4EA  0EF2               	movlw	242
 19682  01E4EC  26E1               	addwf	fsr1l,f,c
 19683  01E4EE  0EFF               	movlw	255
 19684  01E4F0  22E2               	addwfc	fsr1h,f,c
 19685  01E4F2  0012               	return		;funcret
 19686  01E4F4                     __end_of___aldiv:
 19687                           	opt callstack 0
 19688                           
 19689 ;; *************** function _asctime *****************
 19690 ;; Defined at:
 19691 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19692 ;; Parameters:    Size  Location     Type
 19693 ;;  tim             2  [STACK] PTR const struct tm
 19694 ;;		 -> localtime@tm(24), NULL(0), 
 19695 ;; Auto vars:     Size  Location     Type
 19696 ;;  cp              2  [STACK] PTR unsigned char 
 19697 ;;		 -> asctime@buf(27), 
 19698 ;;  s               2  [STACK] PTR const unsigned char 
 19699 ;;		 -> STR_141(37), STR_140(22), 
 19700 ;; Return value:  Size  Location     Type
 19701 ;;                  2  [STACK] PTR unsigned char 
 19702 ;; Registers used:
 19703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19704 ;; Tracked objects:
 19705 ;;		On entry : 0/39
 19706 ;;		On exit  : 0/0
 19707 ;;		Unchanged: 0/0
 19708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19713 ;;Total ram usage:        0 bytes
 19714 ;; Hardware stack levels used:    1
 19715 ;; Hardware stack levels required when called:   17
 19716 ;; This function calls:
 19717 ;;		___awdiv
 19718 ;;		___awmod
 19719 ;;		_put2d
 19720 ;; This function is called by:
 19721 ;;		_main
 19722 ;;		_display_history
 19723 ;; This function uses a reentrant model
 19724 ;;
 19725                           
 19726                           	psect	text55
 19727  018CEA                     __ptext55:
 19728                           	opt callstack 0
 19729  018CEA                     _asctime:
 19730                           	opt callstack 0
 19731                           
 19732                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19733  018CEA  52E6               	movf	postinc1,f,c
 19734  018CEC  52E6               	movf	postinc1,f,c
 19735  018CEE  52E6               	movf	postinc1,f,c
 19736  018CF0  52E6               	movf	postinc1,f,c
 19737                           
 19738                           ;stkvar	_tim @ sp[(-4)+-2]
 19739                           
 19740                           ;incstack = 0
 19741  018CF2  0EFA               	movlw	-6
 19742  018CF4  006F FF8C  F034    	movff	plusw1,btemp+10
 19743  018CFA  0EFB               	movlw	-5
 19744  018CFC  006F FF8C  F035    	movff	plusw1,btemp+11
 19745  018D02  0E0C               	movlw	12
 19746  018D04  2434               	addwf	(btemp+10)^0,w,c
 19747  018D06  6ED9               	movwf	fsr2l,c
 19748  018D08  0E00               	movlw	0
 19749  018D0A  2035               	addwfc	(btemp+11)^0,w,c
 19750  018D0C  6EDA               	movwf	fsr2h,c
 19751  018D0E  006F FF78  F034    	movff	postinc2,btemp+10
 19752  018D14  006F FF74  F035    	movff	postdec2,btemp+11
 19753  018D1A  0E03               	movlw	3
 19754  018D1C  0234               	mulwf	(btemp+10)^0,c
 19755  018D1E  006F FFCC  F032    	movff	prodl,btemp+8
 19756  018D24  006F FFD0  F033    	movff	prodh,btemp+9
 19757  018D2A  0235               	mulwf	(btemp+11)^0,c
 19758  018D2C  50F3               	movf	prodl,w,c
 19759  018D2E  2633               	addwf	(btemp+9)^0,f,c
 19760  018D30  0E93               	movlw	low STR_140
 19761  018D32  6E34               	movwf	(btemp+10)^0,c
 19762  018D34  0EFC               	movlw	high STR_140
 19763  018D36  6E35               	movwf	(btemp+11)^0,c
 19764  018D38  5032               	movf	(btemp+8)^0,w,c
 19765  018D3A  2634               	addwf	(btemp+10)^0,f,c
 19766  018D3C  5033               	movf	(btemp+9)^0,w,c
 19767  018D3E  2235               	addwfc	(btemp+11)^0,f,c
 19768                           
 19769                           ;stkvar	_s @ sp[(-4)+2]
 19770  018D40  0EFF               	movlw	-1
 19771  018D42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19772  018D48  0EFE               	movlw	-2
 19773  018D4A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19774                           
 19775                           ;stkvar	_cp @ sp[(-4)+0]
 19776  018D50  0E03               	movlw	high asctime@buf
 19777  018D52  6E2A               	movwf	btemp^0,c
 19778  018D54  0EFD               	movlw	-3
 19779  018D56  0060  F0AB  FFE3   	movff	btemp,plusw1
 19780  018D5C  0EC4               	movlw	low asctime@buf
 19781  018D5E  6E2A               	movwf	btemp^0,c
 19782  018D60  0EFC               	movlw	-4
 19783  018D62  0060  F0AB  FFE3   	movff	btemp,plusw1
 19784                           
 19785                           ;stkvar	_s @ sp[(-4)+2]
 19786  018D68  50E1               	movf	fsr1l,w,c
 19787  018D6A  0FFE               	addlw	-2
 19788  018D6C  6ED9               	movwf	fsr2l,c
 19789  018D6E  50E2               	movf	fsr1h,w,c
 19790  018D70  6EDA               	movwf	fsr2h,c
 19791  018D72  0EFF               	movlw	255
 19792  018D74  22DA               	addwfc	fsr2h,f,c
 19793  018D76  006F FF7B FFF6     	movff	postinc2,tblptrl
 19794  018D7C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19795  018D82                     	if	0	;tblptru may be non-zero
 19796  018D82                     	endif
 19797  018D82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19798  018D82  0E00               	movlw	low (__mediumconst shr (0+16))
 19799  018D84  6EF8               	movwf	tblptru,c
 19800  018D86                     	endif
 19801                           
 19802                           ;stkvar	_cp @ sp[(-4)+0]
 19803  018D86  0EFC               	movlw	-4
 19804  018D88  006F FF8F FFD9     	movff	plusw1,fsr2l
 19805  018D8E  0EFD               	movlw	-3
 19806  018D90  006F FF8F FFDA     	movff	plusw1,fsr2h
 19807  018D96  0008               	tblrd		*
 19808  018D98  006F FFD7 FFDF     	movff	tablat,indf2
 19809                           
 19810                           ;stkvar	_s @ sp[(-4)+2]
 19811  018D9E  0EFE               	movlw	-2
 19812  018DA0  50E3               	movf	plusw1,w,c
 19813  018DA2  0F01               	addlw	1
 19814  018DA4  6E2A               	movwf	btemp^0,c
 19815  018DA6  0EFE               	movlw	-2
 19816  018DA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19817  018DAE  6A2A               	clrf	btemp^0,c
 19818  018DB0  0EFF               	movlw	-1
 19819  018DB2  50E3               	movf	plusw1,w,c
 19820  018DB4  202A               	addwfc	btemp^0,w,c
 19821  018DB6  6E2A               	movwf	btemp^0,c
 19822  018DB8  0EFF               	movlw	-1
 19823  018DBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19824                           
 19825                           ;stkvar	_cp @ sp[(-4)+0]
 19826  018DC0  0EFC               	movlw	-4
 19827  018DC2  50E3               	movf	plusw1,w,c
 19828  018DC4  0F01               	addlw	1
 19829  018DC6  6E2A               	movwf	btemp^0,c
 19830  018DC8  0EFC               	movlw	-4
 19831  018DCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19832  018DD0  6A2A               	clrf	btemp^0,c
 19833  018DD2  0EFD               	movlw	-3
 19834  018DD4  50E3               	movf	plusw1,w,c
 19835  018DD6  202A               	addwfc	btemp^0,w,c
 19836  018DD8  6E2A               	movwf	btemp^0,c
 19837  018DDA  0EFD               	movlw	-3
 19838  018DDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19839                           
 19840                           ;stkvar	_s @ sp[(-4)+2]
 19841  018DE2  50E1               	movf	fsr1l,w,c
 19842  018DE4  0FFE               	addlw	-2
 19843  018DE6  6ED9               	movwf	fsr2l,c
 19844  018DE8  50E2               	movf	fsr1h,w,c
 19845  018DEA  6EDA               	movwf	fsr2h,c
 19846  018DEC  0EFF               	movlw	255
 19847  018DEE  22DA               	addwfc	fsr2h,f,c
 19848  018DF0  006F FF7B FFF6     	movff	postinc2,tblptrl
 19849  018DF6  006F FF77 FFF7     	movff	postdec2,tblptrh
 19850  018DFC                     	if	0	;tblptru may be non-zero
 19851  018DFC                     	endif
 19852  018DFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19853  018DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 19854  018DFE  6EF8               	movwf	tblptru,c
 19855  018E00                     	endif
 19856                           
 19857                           ;stkvar	_cp @ sp[(-4)+0]
 19858  018E00  0EFC               	movlw	-4
 19859  018E02  006F FF8F FFD9     	movff	plusw1,fsr2l
 19860  018E08  0EFD               	movlw	-3
 19861  018E0A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19862  018E10  0008               	tblrd		*
 19863  018E12  006F FFD7 FFDF     	movff	tablat,indf2
 19864                           
 19865                           ;stkvar	_s @ sp[(-4)+2]
 19866  018E18  0EFE               	movlw	-2
 19867  018E1A  50E3               	movf	plusw1,w,c
 19868  018E1C  0F01               	addlw	1
 19869  018E1E  6E2A               	movwf	btemp^0,c
 19870  018E20  0EFE               	movlw	-2
 19871  018E22  0060  F0AB  FFE3   	movff	btemp,plusw1
 19872  018E28  6A2A               	clrf	btemp^0,c
 19873  018E2A  0EFF               	movlw	-1
 19874  018E2C  50E3               	movf	plusw1,w,c
 19875  018E2E  202A               	addwfc	btemp^0,w,c
 19876  018E30  6E2A               	movwf	btemp^0,c
 19877  018E32  0EFF               	movlw	-1
 19878  018E34  0060  F0AB  FFE3   	movff	btemp,plusw1
 19879                           
 19880                           ;stkvar	_cp @ sp[(-4)+0]
 19881  018E3A  0EFC               	movlw	-4
 19882  018E3C  50E3               	movf	plusw1,w,c
 19883  018E3E  0F01               	addlw	1
 19884  018E40  6E2A               	movwf	btemp^0,c
 19885  018E42  0EFC               	movlw	-4
 19886  018E44  0060  F0AB  FFE3   	movff	btemp,plusw1
 19887  018E4A  6A2A               	clrf	btemp^0,c
 19888  018E4C  0EFD               	movlw	-3
 19889  018E4E  50E3               	movf	plusw1,w,c
 19890  018E50  202A               	addwfc	btemp^0,w,c
 19891  018E52  6E2A               	movwf	btemp^0,c
 19892  018E54  0EFD               	movlw	-3
 19893  018E56  0060  F0AB  FFE3   	movff	btemp,plusw1
 19894                           
 19895                           ;stkvar	_s @ sp[(-4)+2]
 19896  018E5C  50E1               	movf	fsr1l,w,c
 19897  018E5E  0FFE               	addlw	-2
 19898  018E60  6ED9               	movwf	fsr2l,c
 19899  018E62  50E2               	movf	fsr1h,w,c
 19900  018E64  6EDA               	movwf	fsr2h,c
 19901  018E66  0EFF               	movlw	255
 19902  018E68  22DA               	addwfc	fsr2h,f,c
 19903  018E6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19904  018E70  006F FF77 FFF7     	movff	postdec2,tblptrh
 19905  018E76                     	if	0	;tblptru may be non-zero
 19906  018E76                     	endif
 19907  018E76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19908  018E76  0E00               	movlw	low (__mediumconst shr (0+16))
 19909  018E78  6EF8               	movwf	tblptru,c
 19910  018E7A                     	endif
 19911                           
 19912                           ;stkvar	_cp @ sp[(-4)+0]
 19913  018E7A  0EFC               	movlw	-4
 19914  018E7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19915  018E82  0EFD               	movlw	-3
 19916  018E84  006F FF8F FFDA     	movff	plusw1,fsr2h
 19917  018E8A  0008               	tblrd		*
 19918  018E8C  006F FFD7 FFDF     	movff	tablat,indf2
 19919                           
 19920                           ;stkvar	_cp @ sp[(-4)+0]
 19921  018E92  0EFC               	movlw	-4
 19922  018E94  50E3               	movf	plusw1,w,c
 19923  018E96  0F01               	addlw	1
 19924  018E98  6E2A               	movwf	btemp^0,c
 19925  018E9A  0EFC               	movlw	-4
 19926  018E9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19927  018EA2  6A2A               	clrf	btemp^0,c
 19928  018EA4  0EFD               	movlw	-3
 19929  018EA6  50E3               	movf	plusw1,w,c
 19930  018EA8  202A               	addwfc	btemp^0,w,c
 19931  018EAA  6E2A               	movwf	btemp^0,c
 19932  018EAC  0EFD               	movlw	-3
 19933  018EAE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19934                           
 19935                           ;stkvar	_cp @ sp[(-4)+0]
 19936  018EB4  0EFC               	movlw	-4
 19937  018EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19938  018EBC  0EFD               	movlw	-3
 19939  018EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19940  018EC4  0E20               	movlw	32
 19941  018EC6  6EDF               	movwf	indf2,c
 19942                           
 19943                           ;stkvar	_cp @ sp[(-4)+0]
 19944  018EC8  0EFC               	movlw	-4
 19945  018ECA  50E3               	movf	plusw1,w,c
 19946  018ECC  0F01               	addlw	1
 19947  018ECE  6E2A               	movwf	btemp^0,c
 19948  018ED0  0EFC               	movlw	-4
 19949  018ED2  0060  F0AB  FFE3   	movff	btemp,plusw1
 19950  018ED8  6A2A               	clrf	btemp^0,c
 19951  018EDA  0EFD               	movlw	-3
 19952  018EDC  50E3               	movf	plusw1,w,c
 19953  018EDE  202A               	addwfc	btemp^0,w,c
 19954  018EE0  6E2A               	movwf	btemp^0,c
 19955  018EE2  0EFD               	movlw	-3
 19956  018EE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19957                           
 19958                           ;stkvar	_tim @ sp[(-4)+-2]
 19959  018EEA  0EFA               	movlw	-6
 19960  018EEC  006F FF8C  F034    	movff	plusw1,btemp+10
 19961  018EF2  0EFB               	movlw	-5
 19962  018EF4  006F FF8C  F035    	movff	plusw1,btemp+11
 19963  018EFA  0E08               	movlw	8
 19964  018EFC  2434               	addwf	(btemp+10)^0,w,c
 19965  018EFE  6ED9               	movwf	fsr2l,c
 19966  018F00  0E00               	movlw	0
 19967  018F02  2035               	addwfc	(btemp+11)^0,w,c
 19968  018F04  6EDA               	movwf	fsr2h,c
 19969  018F06  006F FF78  F034    	movff	postinc2,btemp+10
 19970  018F0C  006F FF74  F035    	movff	postdec2,btemp+11
 19971  018F12  0E03               	movlw	3
 19972  018F14  0234               	mulwf	(btemp+10)^0,c
 19973  018F16  006F FFCC  F032    	movff	prodl,btemp+8
 19974  018F1C  006F FFD0  F033    	movff	prodh,btemp+9
 19975  018F22  0235               	mulwf	(btemp+11)^0,c
 19976  018F24  50F3               	movf	prodl,w,c
 19977  018F26  2633               	addwf	(btemp+9)^0,f,c
 19978  018F28  0EE2               	movlw	low STR_141
 19979  018F2A  6E34               	movwf	(btemp+10)^0,c
 19980  018F2C  0EF9               	movlw	high STR_141
 19981  018F2E  6E35               	movwf	(btemp+11)^0,c
 19982  018F30  5032               	movf	(btemp+8)^0,w,c
 19983  018F32  2634               	addwf	(btemp+10)^0,f,c
 19984  018F34  5033               	movf	(btemp+9)^0,w,c
 19985  018F36  2235               	addwfc	(btemp+11)^0,f,c
 19986                           
 19987                           ;stkvar	_s @ sp[(-4)+2]
 19988  018F38  0EFF               	movlw	-1
 19989  018F3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19990  018F40  0EFE               	movlw	-2
 19991  018F42  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19992                           
 19993                           ;stkvar	_s @ sp[(-4)+2]
 19994  018F48  50E1               	movf	fsr1l,w,c
 19995  018F4A  0FFE               	addlw	-2
 19996  018F4C  6ED9               	movwf	fsr2l,c
 19997  018F4E  50E2               	movf	fsr1h,w,c
 19998  018F50  6EDA               	movwf	fsr2h,c
 19999  018F52  0EFF               	movlw	255
 20000  018F54  22DA               	addwfc	fsr2h,f,c
 20001  018F56  006F FF7B FFF6     	movff	postinc2,tblptrl
 20002  018F5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20003  018F62                     	if	0	;tblptru may be non-zero
 20004  018F62                     	endif
 20005  018F62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20006  018F62  0E00               	movlw	low (__mediumconst shr (0+16))
 20007  018F64  6EF8               	movwf	tblptru,c
 20008  018F66                     	endif
 20009                           
 20010                           ;stkvar	_cp @ sp[(-4)+0]
 20011  018F66  0EFC               	movlw	-4
 20012  018F68  006F FF8F FFD9     	movff	plusw1,fsr2l
 20013  018F6E  0EFD               	movlw	-3
 20014  018F70  006F FF8F FFDA     	movff	plusw1,fsr2h
 20015  018F76  0008               	tblrd		*
 20016  018F78  006F FFD7 FFDF     	movff	tablat,indf2
 20017                           
 20018                           ;stkvar	_s @ sp[(-4)+2]
 20019  018F7E  0EFE               	movlw	-2
 20020  018F80  50E3               	movf	plusw1,w,c
 20021  018F82  0F01               	addlw	1
 20022  018F84  6E2A               	movwf	btemp^0,c
 20023  018F86  0EFE               	movlw	-2
 20024  018F88  0060  F0AB  FFE3   	movff	btemp,plusw1
 20025  018F8E  6A2A               	clrf	btemp^0,c
 20026  018F90  0EFF               	movlw	-1
 20027  018F92  50E3               	movf	plusw1,w,c
 20028  018F94  202A               	addwfc	btemp^0,w,c
 20029  018F96  6E2A               	movwf	btemp^0,c
 20030  018F98  0EFF               	movlw	-1
 20031  018F9A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20032                           
 20033                           ;stkvar	_cp @ sp[(-4)+0]
 20034  018FA0  0EFC               	movlw	-4
 20035  018FA2  50E3               	movf	plusw1,w,c
 20036  018FA4  0F01               	addlw	1
 20037  018FA6  6E2A               	movwf	btemp^0,c
 20038  018FA8  0EFC               	movlw	-4
 20039  018FAA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20040  018FB0  6A2A               	clrf	btemp^0,c
 20041  018FB2  0EFD               	movlw	-3
 20042  018FB4  50E3               	movf	plusw1,w,c
 20043  018FB6  202A               	addwfc	btemp^0,w,c
 20044  018FB8  6E2A               	movwf	btemp^0,c
 20045  018FBA  0EFD               	movlw	-3
 20046  018FBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 20047                           
 20048                           ;stkvar	_s @ sp[(-4)+2]
 20049  018FC2  50E1               	movf	fsr1l,w,c
 20050  018FC4  0FFE               	addlw	-2
 20051  018FC6  6ED9               	movwf	fsr2l,c
 20052  018FC8  50E2               	movf	fsr1h,w,c
 20053  018FCA  6EDA               	movwf	fsr2h,c
 20054  018FCC  0EFF               	movlw	255
 20055  018FCE  22DA               	addwfc	fsr2h,f,c
 20056  018FD0  006F FF7B FFF6     	movff	postinc2,tblptrl
 20057  018FD6  006F FF77 FFF7     	movff	postdec2,tblptrh
 20058  018FDC                     	if	0	;tblptru may be non-zero
 20059  018FDC                     	endif
 20060  018FDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20061  018FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 20062  018FDE  6EF8               	movwf	tblptru,c
 20063  018FE0                     	endif
 20064                           
 20065                           ;stkvar	_cp @ sp[(-4)+0]
 20066  018FE0  0EFC               	movlw	-4
 20067  018FE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 20068  018FE8  0EFD               	movlw	-3
 20069  018FEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 20070  018FF0  0008               	tblrd		*
 20071  018FF2  006F FFD7 FFDF     	movff	tablat,indf2
 20072                           
 20073                           ;stkvar	_s @ sp[(-4)+2]
 20074  018FF8  0EFE               	movlw	-2
 20075  018FFA  50E3               	movf	plusw1,w,c
 20076  018FFC  0F01               	addlw	1
 20077  018FFE  6E2A               	movwf	btemp^0,c
 20078  019000  0EFE               	movlw	-2
 20079  019002  0060  F0AB  FFE3   	movff	btemp,plusw1
 20080  019008  6A2A               	clrf	btemp^0,c
 20081  01900A  0EFF               	movlw	-1
 20082  01900C  50E3               	movf	plusw1,w,c
 20083  01900E  202A               	addwfc	btemp^0,w,c
 20084  019010  6E2A               	movwf	btemp^0,c
 20085  019012  0EFF               	movlw	-1
 20086  019014  0060  F0AB  FFE3   	movff	btemp,plusw1
 20087                           
 20088                           ;stkvar	_cp @ sp[(-4)+0]
 20089  01901A  0EFC               	movlw	-4
 20090  01901C  50E3               	movf	plusw1,w,c
 20091  01901E  0F01               	addlw	1
 20092  019020  6E2A               	movwf	btemp^0,c
 20093  019022  0EFC               	movlw	-4
 20094  019024  0060  F0AB  FFE3   	movff	btemp,plusw1
 20095  01902A  6A2A               	clrf	btemp^0,c
 20096  01902C  0EFD               	movlw	-3
 20097  01902E  50E3               	movf	plusw1,w,c
 20098  019030  202A               	addwfc	btemp^0,w,c
 20099  019032  6E2A               	movwf	btemp^0,c
 20100  019034  0EFD               	movlw	-3
 20101  019036  0060  F0AB  FFE3   	movff	btemp,plusw1
 20102                           
 20103                           ;stkvar	_s @ sp[(-4)+2]
 20104  01903C  50E1               	movf	fsr1l,w,c
 20105  01903E  0FFE               	addlw	-2
 20106  019040  6ED9               	movwf	fsr2l,c
 20107  019042  50E2               	movf	fsr1h,w,c
 20108  019044  6EDA               	movwf	fsr2h,c
 20109  019046  0EFF               	movlw	255
 20110  019048  22DA               	addwfc	fsr2h,f,c
 20111  01904A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20112  019050  006F FF77 FFF7     	movff	postdec2,tblptrh
 20113  019056                     	if	0	;tblptru may be non-zero
 20114  019056                     	endif
 20115  019056                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20116  019056  0E00               	movlw	low (__mediumconst shr (0+16))
 20117  019058  6EF8               	movwf	tblptru,c
 20118  01905A                     	endif
 20119                           
 20120                           ;stkvar	_cp @ sp[(-4)+0]
 20121  01905A  0EFC               	movlw	-4
 20122  01905C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20123  019062  0EFD               	movlw	-3
 20124  019064  006F FF8F FFDA     	movff	plusw1,fsr2h
 20125  01906A  0008               	tblrd		*
 20126  01906C  006F FFD7 FFDF     	movff	tablat,indf2
 20127  019072  0E20               	movlw	32
 20128  019074  0103               	movlb	3	; () banked
 20129  019076  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 20130                           
 20131                           ; BSR set to: 3
 20132  019078  0E20               	movlw	32
 20133  01907A  6EE6               	movwf	postinc1,c
 20134  01907C  0E20               	movlw	32
 20135  01907E  6EE6               	movwf	postinc1,c
 20136                           
 20137                           ;stkvar	_tim @ sp[(-6)+-2]
 20138  019080  0EF8               	movlw	-8
 20139  019082  006F FF8C  F034    	movff	plusw1,btemp+10
 20140  019088  0EF9               	movlw	-7
 20141  01908A  006F FF8C  F035    	movff	plusw1,btemp+11
 20142  019090  0E06               	movlw	6
 20143  019092  2434               	addwf	(btemp+10)^0,w,c
 20144  019094  6ED9               	movwf	fsr2l,c
 20145  019096  0E00               	movlw	0
 20146  019098  2035               	addwfc	(btemp+11)^0,w,c
 20147  01909A  6EDA               	movwf	fsr2h,c
 20148  01909C  50DF               	movf	indf2,w,c
 20149  01909E  6EE6               	movwf	postinc1,c
 20150  0190A0  0ECE               	movlw	low (asctime@buf+10)
 20151  0190A2  6EE6               	movwf	postinc1,c
 20152  0190A4  0E03               	movlw	high (asctime@buf+10)
 20153  0190A6  6EE6               	movwf	postinc1,c
 20154  0190A8  EC6A  F0FD         	call	_put2d	;wreg free
 20155  0190AC  0E3A               	movlw	58
 20156  0190AE  6EE6               	movwf	postinc1,c
 20157  0190B0  0E30               	movlw	48
 20158  0190B2  6EE6               	movwf	postinc1,c
 20159                           
 20160                           ;stkvar	_tim @ sp[(-6)+-2]
 20161  0190B4  0EF8               	movlw	-8
 20162  0190B6  006F FF8C  F034    	movff	plusw1,btemp+10
 20163  0190BC  0EF9               	movlw	-7
 20164  0190BE  006F FF8C  F035    	movff	plusw1,btemp+11
 20165  0190C4  0E04               	movlw	4
 20166  0190C6  2434               	addwf	(btemp+10)^0,w,c
 20167  0190C8  6ED9               	movwf	fsr2l,c
 20168  0190CA  0E00               	movlw	0
 20169  0190CC  2035               	addwfc	(btemp+11)^0,w,c
 20170  0190CE  6EDA               	movwf	fsr2h,c
 20171  0190D0  50DF               	movf	indf2,w,c
 20172  0190D2  6EE6               	movwf	postinc1,c
 20173  0190D4  0ED1               	movlw	low (asctime@buf+13)
 20174  0190D6  6EE6               	movwf	postinc1,c
 20175  0190D8  0E03               	movlw	high (asctime@buf+13)
 20176  0190DA  6EE6               	movwf	postinc1,c
 20177  0190DC  EC6A  F0FD         	call	_put2d	;wreg free
 20178  0190E0  0E3A               	movlw	58
 20179  0190E2  6EE6               	movwf	postinc1,c
 20180  0190E4  0E30               	movlw	48
 20181  0190E6  6EE6               	movwf	postinc1,c
 20182                           
 20183                           ;stkvar	_tim @ sp[(-6)+-2]
 20184  0190E8  0EF8               	movlw	-8
 20185  0190EA  006F FF8C  F034    	movff	plusw1,btemp+10
 20186  0190F0  0EF9               	movlw	-7
 20187  0190F2  006F FF8C  F035    	movff	plusw1,btemp+11
 20188  0190F8  0E02               	movlw	2
 20189  0190FA  2434               	addwf	(btemp+10)^0,w,c
 20190  0190FC  6ED9               	movwf	fsr2l,c
 20191  0190FE  0E00               	movlw	0
 20192  019100  2035               	addwfc	(btemp+11)^0,w,c
 20193  019102  6EDA               	movwf	fsr2h,c
 20194  019104  50DF               	movf	indf2,w,c
 20195  019106  6EE6               	movwf	postinc1,c
 20196  019108  0ED4               	movlw	low (asctime@buf+16)
 20197  01910A  6EE6               	movwf	postinc1,c
 20198  01910C  0E03               	movlw	high (asctime@buf+16)
 20199  01910E  6EE6               	movwf	postinc1,c
 20200  019110  EC6A  F0FD         	call	_put2d	;wreg free
 20201  019114  0E20               	movlw	32
 20202  019116  6EE6               	movwf	postinc1,c
 20203  019118  0E30               	movlw	48
 20204  01911A  6EE6               	movwf	postinc1,c
 20205                           
 20206                           ;stkvar	_tim @ sp[(-6)+-2]
 20207  01911C  0EF8               	movlw	-8
 20208  01911E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20209  019124  0EF9               	movlw	-7
 20210  019126  006F FF8F FFDA     	movff	plusw1,fsr2h
 20211  01912C  50DF               	movf	indf2,w,c
 20212  01912E  6EE6               	movwf	postinc1,c
 20213  019130  0ED7               	movlw	low (asctime@buf+19)
 20214  019132  6EE6               	movwf	postinc1,c
 20215  019134  0E03               	movlw	high (asctime@buf+19)
 20216  019136  6EE6               	movwf	postinc1,c
 20217  019138  EC6A  F0FD         	call	_put2d	;wreg free
 20218  01913C  0E00               	movlw	0
 20219  01913E  6EE6               	movwf	postinc1,c
 20220  019140  0E20               	movlw	32
 20221  019142  6EE6               	movwf	postinc1,c
 20222  019144  0E64               	movlw	100
 20223  019146  6EE6               	movwf	postinc1,c
 20224  019148  0E00               	movlw	0
 20225  01914A  6EE6               	movwf	postinc1,c
 20226                           
 20227                           ;stkvar	_tim @ sp[(-8)+-2]
 20228  01914C  0EF6               	movlw	-10
 20229  01914E  006F FF8C  F034    	movff	plusw1,btemp+10
 20230  019154  0EF7               	movlw	-9
 20231  019156  006F FF8C  F035    	movff	plusw1,btemp+11
 20232  01915C  0E0A               	movlw	10
 20233  01915E  2434               	addwf	(btemp+10)^0,w,c
 20234  019160  6ED9               	movwf	fsr2l,c
 20235  019162  0E00               	movlw	0
 20236  019164  2035               	addwfc	(btemp+11)^0,w,c
 20237  019166  6EDA               	movwf	fsr2h,c
 20238  019168  006F FF78  F034    	movff	postinc2,btemp+10
 20239  01916E  006F FF74  F035    	movff	postdec2,btemp+11
 20240  019174  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20241  01917A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20242  019180  EC54  F0FA         	call	___awdiv	;wreg free
 20243  019184  502A               	movf	btemp^0,w,c
 20244  019186  0F13               	addlw	19
 20245  019188  6EE6               	movwf	postinc1,c
 20246  01918A  0EDA               	movlw	low (asctime@buf+22)
 20247  01918C  6EE6               	movwf	postinc1,c
 20248  01918E  0E03               	movlw	high (asctime@buf+22)
 20249  019190  6EE6               	movwf	postinc1,c
 20250  019192  EC6A  F0FD         	call	_put2d	;wreg free
 20251  019196  0E0A               	movlw	10
 20252  019198  6EE6               	movwf	postinc1,c
 20253  01919A  0E30               	movlw	48
 20254  01919C  6EE6               	movwf	postinc1,c
 20255  01919E  0E64               	movlw	100
 20256  0191A0  6EE6               	movwf	postinc1,c
 20257  0191A2  0E00               	movlw	0
 20258  0191A4  6EE6               	movwf	postinc1,c
 20259                           
 20260                           ;stkvar	_tim @ sp[(-8)+-2]
 20261  0191A6  0EF6               	movlw	-10
 20262  0191A8  006F FF8C  F034    	movff	plusw1,btemp+10
 20263  0191AE  0EF7               	movlw	-9
 20264  0191B0  006F FF8C  F035    	movff	plusw1,btemp+11
 20265  0191B6  0E0A               	movlw	10
 20266  0191B8  2434               	addwf	(btemp+10)^0,w,c
 20267  0191BA  6ED9               	movwf	fsr2l,c
 20268  0191BC  0E00               	movlw	0
 20269  0191BE  2035               	addwfc	(btemp+11)^0,w,c
 20270  0191C0  6EDA               	movwf	fsr2h,c
 20271  0191C2  006F FF78  F034    	movff	postinc2,btemp+10
 20272  0191C8  006F FF74  F035    	movff	postdec2,btemp+11
 20273  0191CE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20274  0191D4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20275  0191DA  EC83  F0FE         	call	___awmod	;wreg free
 20276  0191DE  502A               	movf	btemp^0,w,c
 20277  0191E0  6EE6               	movwf	postinc1,c
 20278  0191E2  0EDC               	movlw	low (asctime@buf+24)
 20279  0191E4  6EE6               	movwf	postinc1,c
 20280  0191E6  0E03               	movlw	high (asctime@buf+24)
 20281  0191E8  6EE6               	movwf	postinc1,c
 20282  0191EA  EC6A  F0FD         	call	_put2d	;wreg free
 20283  0191EE  0EC4               	movlw	low asctime@buf
 20284  0191F0  6E2A               	movwf	btemp^0,c
 20285  0191F2  0E03               	movlw	high asctime@buf
 20286  0191F4  6E2B               	movwf	(btemp+1)^0,c
 20287                           
 20288                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20289  0191F6  0EFA               	movlw	250
 20290  0191F8  26E1               	addwf	fsr1l,f,c
 20291  0191FA  0EFF               	movlw	255
 20292  0191FC  22E2               	addwfc	fsr1h,f,c
 20293  0191FE  0012               	return		;funcret
 20294  019200                     __end_of_asctime:
 20295                           	opt callstack 0
 20296                           
 20297 ;; *************** function _put2d *****************
 20298 ;; Defined at:
 20299 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 20300 ;; Parameters:    Size  Location     Type
 20301 ;;  cp              2  [STACK] PTR unsigned char 
 20302 ;;		 -> asctime@buf(27), 
 20303 ;;  i               1  [STACK] unsigned char 
 20304 ;;  cl              1  [STACK] unsigned char 
 20305 ;;  ct              1  [STACK] unsigned char 
 20306 ;; Auto vars:     Size  Location     Type
 20307 ;;		None
 20308 ;; Return value:  Size  Location     Type
 20309 ;;                  1  [STACK] void 
 20310 ;; Registers used:
 20311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20312 ;; Tracked objects:
 20313 ;;		On entry : 0/3
 20314 ;;		On exit  : 0/0
 20315 ;;		Unchanged: 0/0
 20316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20321 ;;Total ram usage:        0 bytes
 20322 ;; Hardware stack levels used:    1
 20323 ;; Hardware stack levels required when called:   16
 20324 ;; This function calls:
 20325 ;;		___awdiv
 20326 ;;		___lbmod
 20327 ;; This function is called by:
 20328 ;;		_asctime
 20329 ;; This function uses a reentrant model
 20330 ;;
 20331                           
 20332                           	psect	text56
 20333  01FAD4                     __ptext56:
 20334                           	opt callstack 0
 20335  01FAD4                     _put2d:
 20336                           	opt callstack 12
 20337                           
 20338                           ;stkvar	_ct @ sp[(0)+-5]
 20339                           ;stkvar	_cp @ sp[(0)+-2]
 20340                           
 20341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20342                           ;incstack = 0
 20343  01FAD4  0EFE               	movlw	-2
 20344  01FAD6  006F FF8F FFD9     	movff	plusw1,fsr2l
 20345  01FADC  0EFF               	movlw	-1
 20346  01FADE  006F FF8F FFDA     	movff	plusw1,fsr2h
 20347  01FAE4  0EFB               	movlw	-5
 20348  01FAE6  006F FF8F FFDF     	movff	plusw1,indf2
 20349  01FAEC  0E0A               	movlw	10
 20350  01FAEE  6EE6               	movwf	postinc1,c
 20351                           
 20352                           ;stkvar	_i @ sp[(-1)+-3]
 20353  01FAF0  0EFC               	movlw	-4
 20354  01FAF2  50E3               	movf	plusw1,w,c
 20355  01FAF4  6EE6               	movwf	postinc1,c
 20356  01FAF6  ECB6  F008         	call	___lbmod	;wreg free
 20357  01FAFA  0E30               	movlw	48
 20358  01FAFC  262A               	addwf	btemp^0,f,c
 20359                           
 20360                           ;stkvar	_cp @ sp[(0)+-2]
 20361  01FAFE  0EFE               	movlw	-2
 20362  01FB00  006F FF8C  F02B    	movff	plusw1,btemp+1
 20363  01FB06  0E01               	movlw	1
 20364  01FB08  5E2B               	subwf	(btemp+1)^0,f,c
 20365  01FB0A  0EFE               	movlw	-2
 20366  01FB0C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20367  01FB12  0EFF               	movlw	-1
 20368  01FB14  006F FF8C  F02B    	movff	plusw1,btemp+1
 20369  01FB1A  0E00               	movlw	0
 20370  01FB1C  5A2B               	subwfb	(btemp+1)^0,f,c
 20371  01FB1E  0EFF               	movlw	-1
 20372  01FB20  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20373  01FB26  0EFE               	movlw	-2
 20374  01FB28  006F FF8F FFD9     	movff	plusw1,fsr2l
 20375  01FB2E  0EFF               	movlw	-1
 20376  01FB30  006F FF8F FFDA     	movff	plusw1,fsr2h
 20377  01FB36  0060  F0AB  FFDF   	movff	btemp,indf2
 20378  01FB3C  0E0A               	movlw	10
 20379  01FB3E  6EE6               	movwf	postinc1,c
 20380  01FB40  0E00               	movlw	0
 20381  01FB42  6EE6               	movwf	postinc1,c
 20382                           
 20383                           ;stkvar	_i @ sp[(-2)+-3]
 20384  01FB44  0EFB               	movlw	-5
 20385  01FB46  50E3               	movf	plusw1,w,c
 20386  01FB48  6EE6               	movwf	postinc1,c
 20387  01FB4A  0E00               	movlw	0
 20388  01FB4C  6EE6               	movwf	postinc1,c
 20389  01FB4E  EC54  F0FA         	call	___awdiv	;wreg free
 20390                           
 20391                           ;stkvar	_i @ sp[(0)+-3]
 20392  01FB52  0EFD               	movlw	-3
 20393  01FB54  0060  F0AB  FFE3   	movff	btemp,plusw1
 20394  01FB5A  0EFD               	movlw	-3
 20395  01FB5C  50E3               	movf	plusw1,w,c
 20396  01FB5E  B4D8               	btfsc	status,2,c
 20397  01FB60  D021               	goto	l17065
 20398                           
 20399                           ;stkvar	_cp @ sp[(0)+-2]
 20400  01FB62  0EFE               	movlw	-2
 20401  01FB64  006F FF8C  F02A    	movff	plusw1,btemp
 20402  01FB6A  0E01               	movlw	1
 20403  01FB6C  5E2A               	subwf	btemp^0,f,c
 20404  01FB6E  0EFE               	movlw	-2
 20405  01FB70  0060  F0AB  FFE3   	movff	btemp,plusw1
 20406  01FB76  0EFF               	movlw	-1
 20407  01FB78  006F FF8C  F02A    	movff	plusw1,btemp
 20408  01FB7E  0E00               	movlw	0
 20409  01FB80  5A2A               	subwfb	btemp^0,f,c
 20410  01FB82  0EFF               	movlw	-1
 20411  01FB84  0060  F0AB  FFE3   	movff	btemp,plusw1
 20412  01FB8A  0EFE               	movlw	-2
 20413  01FB8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20414  01FB92  0EFF               	movlw	-1
 20415  01FB94  006F FF8F FFDA     	movff	plusw1,fsr2h
 20416                           
 20417                           ;stkvar	_i @ sp[(0)+-3]
 20418  01FB9A  0EFD               	movlw	-3
 20419  01FB9C  50E3               	movf	plusw1,w,c
 20420  01FB9E  0F30               	addlw	48
 20421  01FBA0  6EDF               	movwf	indf2,c
 20422  01FBA2  D020               	goto	l3427
 20423  01FBA4                     l17065:
 20424                           
 20425                           ;stkvar	_cl @ sp[(0)+-4]
 20426                           ;stkvar	_cp @ sp[(0)+-2]
 20427  01FBA4  0EFE               	movlw	-2
 20428  01FBA6  006F FF8C  F02A    	movff	plusw1,btemp
 20429  01FBAC  0E01               	movlw	1
 20430  01FBAE  5E2A               	subwf	btemp^0,f,c
 20431  01FBB0  0EFE               	movlw	-2
 20432  01FBB2  0060  F0AB  FFE3   	movff	btemp,plusw1
 20433  01FBB8  0EFF               	movlw	-1
 20434  01FBBA  006F FF8C  F02A    	movff	plusw1,btemp
 20435  01FBC0  0E00               	movlw	0
 20436  01FBC2  5A2A               	subwfb	btemp^0,f,c
 20437  01FBC4  0EFF               	movlw	-1
 20438  01FBC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 20439  01FBCC  0EFE               	movlw	-2
 20440  01FBCE  006F FF8F FFD9     	movff	plusw1,fsr2l
 20441  01FBD4  0EFF               	movlw	-1
 20442  01FBD6  006F FF8F FFDA     	movff	plusw1,fsr2h
 20443  01FBDC  0EFC               	movlw	-4
 20444  01FBDE  006F FF8F FFDF     	movff	plusw1,indf2
 20445  01FBE4                     l3427:
 20446                           
 20447                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20448  01FBE4  0EFB               	movlw	251
 20449  01FBE6  26E1               	addwf	fsr1l,f,c
 20450  01FBE8  0EFF               	movlw	255
 20451  01FBEA  22E2               	addwfc	fsr1h,f,c
 20452  01FBEC  0012               	return		;funcret
 20453  01FBEE                     __end_of_put2d:
 20454                           	opt callstack 0
 20455                           
 20456 ;; *************** function ___lbmod *****************
 20457 ;; Defined at:
 20458 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20459 ;; Parameters:    Size  Location     Type
 20460 ;;  dividend        1  [STACK] unsigned char 
 20461 ;;  divisor         1  [STACK] unsigned char 
 20462 ;; Auto vars:     Size  Location     Type
 20463 ;;  rem             1  [STACK] unsigned char 
 20464 ;;  counter         1  [STACK] unsigned char 
 20465 ;; Return value:  Size  Location     Type
 20466 ;;                  1  [STACK] unsigned char 
 20467 ;; Registers used:
 20468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20469 ;; Tracked objects:
 20470 ;;		On entry : 0/3
 20471 ;;		On exit  : 0/0
 20472 ;;		Unchanged: 0/0
 20473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20478 ;;Total ram usage:        0 bytes
 20479 ;; Hardware stack levels used:    1
 20480 ;; Hardware stack levels required when called:   15
 20481 ;; This function calls:
 20482 ;;		Nothing
 20483 ;; This function is called by:
 20484 ;;		_put2d
 20485 ;; This function uses a reentrant model
 20486 ;;
 20487                           
 20488                           	psect	text57
 20489  00116C                     __ptext57:
 20490                           	opt callstack 0
 20491  00116C                     ___lbmod:
 20492                           	opt callstack 0
 20493                           
 20494                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20495  00116C  52E6               	movf	postinc1,f,c
 20496  00116E  52E6               	movf	postinc1,f,c
 20497                           
 20498                           ;stkvar	_counter @ sp[(-2)+1]
 20499                           
 20500                           ;incstack = 0
 20501  001170  0EFF               	movlw	-1
 20502  001172  6AE3               	clrf	plusw1,c
 20503  001174  86E3               	bsf	plusw1,3,c
 20504                           
 20505                           ;stkvar	_rem @ sp[(-2)+0]
 20506  001176  0EFE               	movlw	-2
 20507  001178  6AE3               	clrf	plusw1,c
 20508  00117A                     l16805:
 20509                           
 20510                           ;stkvar	_dividend @ sp[(-2)+-1]
 20511  00117A  0EFD               	movlw	-3
 20512  00117C  006F FF8C  F035    	movff	plusw1,btemp+11
 20513                           
 20514                           ;stkvar	_rem @ sp[(-2)+0]
 20515  001182  0EFE               	movlw	-2
 20516  001184  006F FF8C  F034    	movff	plusw1,btemp+10
 20517  00118A  90D8               	bcf	status,0,c
 20518  00118C  3435               	rlcf	(btemp+11)^0,w,c
 20519  00118E  3434               	rlcf	(btemp+10)^0,w,c
 20520  001190  6E35               	movwf	(btemp+11)^0,c
 20521                           
 20522                           ;stkvar	_rem @ sp[(-2)+0]
 20523  001192  0EFE               	movlw	-2
 20524  001194  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20525                           
 20526                           ;stkvar	_dividend @ sp[(-2)+-1]
 20527  00119A  50E1               	movf	fsr1l,w,c
 20528  00119C  0FFD               	addlw	-3
 20529  00119E  6ED9               	movwf	fsr2l,c
 20530  0011A0  50E2               	movf	fsr1h,w,c
 20531  0011A2  6EDA               	movwf	fsr2h,c
 20532  0011A4  0EFF               	movlw	255
 20533  0011A6  22DA               	addwfc	fsr2h,f,c
 20534  0011A8  90D8               	bcf	status,0,c
 20535  0011AA  36DF               	rlcf	indf2,f,c
 20536                           
 20537                           ;stkvar	_divisor @ sp[(-2)+-2]
 20538                           ;stkvar	_rem @ sp[(-2)+0]
 20539  0011AC  50E1               	movf	fsr1l,w,c
 20540  0011AE  0FFE               	addlw	-2
 20541  0011B0  6ED9               	movwf	fsr2l,c
 20542  0011B2  50E2               	movf	fsr1h,w,c
 20543  0011B4  6EDA               	movwf	fsr2h,c
 20544  0011B6  0EFF               	movlw	255
 20545  0011B8  22DA               	addwfc	fsr2h,f,c
 20546  0011BA  0EFC               	movlw	-4
 20547  0011BC  50E3               	movf	plusw1,w,c
 20548  0011BE  5CDE               	subwf	postinc2,w,c
 20549  0011C0  A0D8               	btfss	status,0,c
 20550  0011C2  D00D               	goto	l16813
 20551                           
 20552                           ;stkvar	_divisor @ sp[(-2)+-2]
 20553  0011C4  0EFC               	movlw	-4
 20554  0011C6  006F FF8C  F035    	movff	plusw1,btemp+11
 20555                           
 20556                           ;stkvar	_rem @ sp[(-2)+0]
 20557  0011CC  50E1               	movf	fsr1l,w,c
 20558  0011CE  0FFE               	addlw	-2
 20559  0011D0  6ED9               	movwf	fsr2l,c
 20560  0011D2  50E2               	movf	fsr1h,w,c
 20561  0011D4  6EDA               	movwf	fsr2h,c
 20562  0011D6  0EFF               	movlw	255
 20563  0011D8  22DA               	addwfc	fsr2h,f,c
 20564  0011DA  5035               	movf	(btemp+11)^0,w,c
 20565  0011DC  5EDF               	subwf	indf2,f,c
 20566  0011DE                     l16813:
 20567                           
 20568                           ;stkvar	_counter @ sp[(-2)+1]
 20569  0011DE  0EFF               	movlw	-1
 20570  0011E0  50E3               	movf	plusw1,w,c
 20571  0011E2  6E2A               	movwf	btemp^0,c
 20572  0011E4  0E01               	movlw	1
 20573  0011E6  5E2A               	subwf	btemp^0,f,c
 20574  0011E8  0EFF               	movlw	-1
 20575  0011EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20576  0011F0  A4D8               	btfss	status,2,c
 20577  0011F2  D7C3               	goto	l16805
 20578                           
 20579                           ;stkvar	_rem @ sp[(-2)+0]
 20580  0011F4  0EFE               	movlw	-2
 20581  0011F6  006F FF8C  F02A    	movff	plusw1,btemp
 20582                           
 20583                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20584  0011FC  52E5               	movf	postdec1,f,c
 20585  0011FE  52E5               	movf	postdec1,f,c
 20586  001200  52E5               	movf	postdec1,f,c
 20587  001202  52E5               	movf	postdec1,f,c
 20588  001204  0012               	return		;funcret
 20589  001206                     __end_of___lbmod:
 20590                           	opt callstack 0
 20591                           
 20592 ;; *************** function _current_sensor_cal *****************
 20593 ;; Defined at:
 20594 ;;		line 510 in file "main.c"
 20595 ;; Parameters:    Size  Location     Type
 20596 ;;		None
 20597 ;; Auto vars:     Size  Location     Type
 20598 ;;  cp              4  [STACK] unsigned long 
 20599 ;;  cb              4  [STACK] unsigned long 
 20600 ;;  cpz             4  [STACK] unsigned long 
 20601 ;;  cbz             4  [STACK] unsigned long 
 20602 ;;  x               1  [STACK] unsigned char 
 20603 ;; Return value:  Size  Location     Type
 20604 ;;                  1  [STACK] _Bool 
 20605 ;; Registers used:
 20606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20607 ;; Tracked objects:
 20608 ;;		On entry : 0/2
 20609 ;;		On exit  : 0/0
 20610 ;;		Unchanged: 0/0
 20611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20616 ;;Total ram usage:        0 bytes
 20617 ;; Hardware stack levels used:    1
 20618 ;; Hardware stack levels required when called:   27
 20619 ;; This function calls:
 20620 ;;		_WaitMs
 20621 ;;		___fldiv
 20622 ;;		___xxtofl
 20623 ;;		_cal_current_10A
 20624 ;;		_cal_current_zero
 20625 ;;		_clear_adc_scan
 20626 ;;		_clear_switch
 20627 ;;		_get_raw_result
 20628 ;;		_get_switch
 20629 ;;		_get_vterm_ptr
 20630 ;;		_spinners
 20631 ;;		_sprintf
 20632 ;;		_start_adc_scan
 20633 ;;		_update_lcd
 20634 ;;		_write_cal_data
 20635 ;; This function is called by:
 20636 ;;		_main
 20637 ;; This function uses a reentrant model
 20638 ;;
 20639                           
 20640                           	psect	text58
 20641  014898                     __ptext58:
 20642                           	opt callstack 0
 20643  014898                     _current_sensor_cal:
 20644                           	opt callstack 0
 20645                           
 20646                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20647  014898  0E11               	movlw	17
 20648  01489A  26E1               	addwf	fsr1l,f,c
 20649  01489C  0E00               	movlw	0
 20650  01489E  22E2               	addwfc	fsr1h,f,c
 20651                           
 20652                           ;main.c: 512:  uint8_t x = 0;
 20653                           ;stkvar	_x @ sp[(-17)+16]
 20654                           
 20655                           ;incstack = 0
 20656  0148A0  0EFF               	movlw	-1
 20657  0148A2  6AE3               	clrf	plusw1,c
 20658                           
 20659                           ;main.c: 513:  uint32_t cb = 0, cp = 0;
 20660                           ;stkvar	_cb @ sp[(-17)+4]
 20661  0148A4  0EF3               	movlw	-13
 20662  0148A6  6AE3               	clrf	plusw1,c
 20663  0148A8  0EF4               	movlw	-12
 20664  0148AA  6AE3               	clrf	plusw1,c
 20665  0148AC  0EF5               	movlw	-11
 20666  0148AE  6AE3               	clrf	plusw1,c
 20667  0148B0  0EF6               	movlw	-10
 20668  0148B2  6AE3               	clrf	plusw1,c
 20669                           
 20670                           ;stkvar	_cp @ sp[(-17)+0]
 20671  0148B4  0EEF               	movlw	-17
 20672  0148B6  6AE3               	clrf	plusw1,c
 20673  0148B8  0EF0               	movlw	-16
 20674  0148BA  6AE3               	clrf	plusw1,c
 20675  0148BC  0EF1               	movlw	-15
 20676  0148BE  6AE3               	clrf	plusw1,c
 20677  0148C0  0EF2               	movlw	-14
 20678  0148C2  6AE3               	clrf	plusw1,c
 20679                           
 20680                           ;main.c: 515:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20681  0148C4  0E9B               	movlw	low STR_52
 20682  0148C6  6EE6               	movwf	postinc1,c
 20683  0148C8  0EFD               	movlw	high STR_52
 20684  0148CA  6EE6               	movwf	postinc1,c
 20685  0148CC  0E00               	movlw	0
 20686  0148CE  6EE6               	movwf	postinc1,c
 20687  0148D0  0E00               	movlw	0
 20688  0148D2  6EE6               	movwf	postinc1,c
 20689  0148D4  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20690  0148D8  0060  F0AB  FFE6   	movff	btemp,postinc1
 20691  0148DE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20692  0148E4  0E04               	movlw	4
 20693  0148E6  6EE6               	movwf	postinc1,c
 20694  0148E8  EC5B  F000         	call	_sprintf	;wreg free
 20695                           
 20696                           ; BSR set to: 0
 20697                           ;main.c: 516:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 20698  0148EC  0E59               	movlw	low STR_53
 20699  0148EE  6EE6               	movwf	postinc1,c
 20700  0148F0  0EFD               	movlw	high STR_53
 20701  0148F2  6EE6               	movwf	postinc1,c
 20702  0148F4  0E00               	movlw	0
 20703  0148F6  6EE6               	movwf	postinc1,c
 20704  0148F8  0E01               	movlw	1
 20705  0148FA  6EE6               	movwf	postinc1,c
 20706  0148FC  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20707  014900  0060  F0AB  FFE6   	movff	btemp,postinc1
 20708  014906  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20709  01490C  0E04               	movlw	4
 20710  01490E  6EE6               	movwf	postinc1,c
 20711  014910  EC5B  F000         	call	_sprintf	;wreg free
 20712                           
 20713                           ; BSR set to: 0
 20714                           ;main.c: 517:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 20715  014914  0E43               	movlw	low STR_54
 20716  014916  6EE6               	movwf	postinc1,c
 20717  014918  0EFD               	movlw	high STR_54
 20718  01491A  6EE6               	movwf	postinc1,c
 20719  01491C  0E00               	movlw	0
 20720  01491E  6EE6               	movwf	postinc1,c
 20721  014920  0E02               	movlw	2
 20722  014922  6EE6               	movwf	postinc1,c
 20723  014924  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20724  014928  0060  F0AB  FFE6   	movff	btemp,postinc1
 20725  01492E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20726  014934  0E04               	movlw	4
 20727  014936  6EE6               	movwf	postinc1,c
 20728  014938  EC5B  F000         	call	_sprintf	;wreg free
 20729                           
 20730                           ; BSR set to: 0
 20731                           ;main.c: 518:  update_lcd(0);
 20732  01493C  0E00               	movlw	0
 20733  01493E  6EE6               	movwf	postinc1,c
 20734  014940  EC4B  F0F8         	call	_update_lcd	;wreg free
 20735                           
 20736                           ;main.c: 519:  WaitMs(2000);
 20737  014944  0ED0               	movlw	208
 20738  014946  6EE6               	movwf	postinc1,c
 20739  014948  0E07               	movlw	7
 20740  01494A  6EE6               	movwf	postinc1,c
 20741  01494C  EC57  F013         	call	_WaitMs	;wreg free
 20742  014950                     l17393:
 20743                           
 20744                           ;main.c: 521:   if (++x > 64)
 20745                           ;stkvar	_x @ sp[(-17)+16]
 20746  014950  0EFF               	movlw	-1
 20747  014952  2AE3               	incf	plusw1,f,c
 20748  014954  0EFF               	movlw	-1
 20749  014956  006F FF8C  F02A    	movff	plusw1,btemp
 20750  01495C  0E40               	movlw	64
 20751  01495E  642A               	cpfsgt	btemp^0,c
 20752  014960  D002               	goto	l17397
 20753  014962  EF21  F0AA         	goto	l1524
 20754  014966                     l17397:
 20755                           
 20756                           ;main.c: 523:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 20757  014966  0E00               	movlw	0
 20758  014968  6EE6               	movwf	postinc1,c
 20759  01496A  0E04               	movlw	4
 20760  01496C  6EE6               	movwf	postinc1,c
 20761  01496E  ECD7  F001         	call	_spinners	;wreg free
 20762  014972  502A               	movf	btemp^0,w,c
 20763  014974  6EE6               	movwf	postinc1,c
 20764  014976  0E00               	movlw	0
 20765  014978  6EE6               	movwf	postinc1,c
 20766  01497A  0E34               	movlw	low STR_55
 20767  01497C  6EE6               	movwf	postinc1,c
 20768  01497E  0EFF               	movlw	high STR_55
 20769  014980  6EE6               	movwf	postinc1,c
 20770  014982  0E00               	movlw	0
 20771  014984  6EE6               	movwf	postinc1,c
 20772  014986  0E02               	movlw	2
 20773  014988  6EE6               	movwf	postinc1,c
 20774  01498A  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20775  01498E  0060  F0AB  FFE6   	movff	btemp,postinc1
 20776  014994  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20777  01499A  0E06               	movlw	6
 20778  01499C  6EE6               	movwf	postinc1,c
 20779  01499E  EC5B  F000         	call	_sprintf	;wreg free
 20780                           
 20781                           ;main.c: 524:   update_lcd(0);
 20782  0149A2  0E00               	movlw	0
 20783  0149A4  6EE6               	movwf	postinc1,c
 20784  0149A6  EC4B  F0F8         	call	_update_lcd	;wreg free
 20785                           
 20786                           ;main.c: 525:   WaitMs(100);
 20787  0149AA  0E64               	movlw	100
 20788  0149AC  6EE6               	movwf	postinc1,c
 20789  0149AE  0E00               	movlw	0
 20790  0149B0  6EE6               	movwf	postinc1,c
 20791  0149B2  EC57  F013         	call	_WaitMs	;wreg free
 20792                           
 20793                           ;main.c: 526:  } while (get_switch(SCALIB));
 20794  0149B6  0E04               	movlw	4
 20795  0149B8  6EE6               	movwf	postinc1,c
 20796  0149BA  EC6A  F014         	call	_get_switch	;wreg free
 20797  0149BE  502A               	movf	btemp^0,w,c
 20798  0149C0  A4D8               	btfss	status,2,c
 20799  0149C2  D7C6               	goto	l17393
 20800                           
 20801                           ;main.c: 528:  x = 0;
 20802                           ;stkvar	_x @ sp[(-17)+16]
 20803  0149C4  0EFF               	movlw	-1
 20804  0149C6  6AE3               	clrf	plusw1,c
 20805  0149C8                     l17405:
 20806                           
 20807                           ;main.c: 530:   cb += get_raw_result(C_BATT);
 20808  0149C8  0E00               	movlw	0
 20809  0149CA  6EE6               	movwf	postinc1,c
 20810  0149CC  EC5A  F016         	call	_get_raw_result	;wreg free
 20811                           
 20812                           ;stkvar	_cb @ sp[(-17)+4]
 20813  0149D0  50E1               	movf	fsr1l,w,c
 20814  0149D2  0FF3               	addlw	-13
 20815  0149D4  6ED9               	movwf	fsr2l,c
 20816  0149D6  50E2               	movf	fsr1h,w,c
 20817  0149D8  6EDA               	movwf	fsr2h,c
 20818  0149DA  0EFF               	movlw	255
 20819  0149DC  22DA               	addwfc	fsr2h,f,c
 20820  0149DE  502A               	movf	btemp^0,w,c
 20821  0149E0  26DE               	addwf	postinc2,f,c
 20822  0149E2  502B               	movf	(btemp+1)^0,w,c
 20823  0149E4  22DE               	addwfc	postinc2,f,c
 20824  0149E6  0E00               	movlw	0
 20825  0149E8  22DE               	addwfc	postinc2,f,c
 20826  0149EA  22DE               	addwfc	postinc2,f,c
 20827                           
 20828                           ;main.c: 531:   cp += get_raw_result(C_PV);
 20829  0149EC  0E01               	movlw	1
 20830  0149EE  6EE6               	movwf	postinc1,c
 20831  0149F0  EC5A  F016         	call	_get_raw_result	;wreg free
 20832                           
 20833                           ;stkvar	_cp @ sp[(-17)+0]
 20834  0149F4  50E1               	movf	fsr1l,w,c
 20835  0149F6  0FEF               	addlw	-17
 20836  0149F8  6ED9               	movwf	fsr2l,c
 20837  0149FA  50E2               	movf	fsr1h,w,c
 20838  0149FC  6EDA               	movwf	fsr2h,c
 20839  0149FE  0EFF               	movlw	255
 20840  014A00  22DA               	addwfc	fsr2h,f,c
 20841  014A02  502A               	movf	btemp^0,w,c
 20842  014A04  26DE               	addwf	postinc2,f,c
 20843  014A06  502B               	movf	(btemp+1)^0,w,c
 20844  014A08  22DE               	addwfc	postinc2,f,c
 20845  014A0A  0E00               	movlw	0
 20846  014A0C  22DE               	addwfc	postinc2,f,c
 20847  014A0E  22DE               	addwfc	postinc2,f,c
 20848                           
 20849                           ;main.c: 532:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 20850  014A10  0EDD               	movlw	low STR_56
 20851  014A12  6EE6               	movwf	postinc1,c
 20852  014A14  0EFD               	movlw	high STR_56
 20853  014A16  6EE6               	movwf	postinc1,c
 20854  014A18  0E00               	movlw	0
 20855  014A1A  6EE6               	movwf	postinc1,c
 20856  014A1C  0E00               	movlw	0
 20857  014A1E  6EE6               	movwf	postinc1,c
 20858  014A20  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20859  014A24  0060  F0AB  FFE6   	movff	btemp,postinc1
 20860  014A2A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20861  014A30  0E04               	movlw	4
 20862  014A32  6EE6               	movwf	postinc1,c
 20863  014A34  EC5B  F000         	call	_sprintf	;wreg free
 20864                           
 20865                           ; BSR set to: 0
 20866                           ;main.c: 533:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20867  014A38  0E01               	movlw	1
 20868  014A3A  6EE6               	movwf	postinc1,c
 20869  014A3C  EC5A  F016         	call	_get_raw_result	;wreg free
 20870  014A40  0060  F0AB  FFE6   	movff	btemp,postinc1
 20871  014A46  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20872  014A4C  0E00               	movlw	0
 20873  014A4E  6EE6               	movwf	postinc1,c
 20874  014A50  EC5A  F016         	call	_get_raw_result	;wreg free
 20875  014A54  0060  F0AB  FFE6   	movff	btemp,postinc1
 20876  014A5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20877  014A60  0EA9               	movlw	low STR_57
 20878  014A62  6EE6               	movwf	postinc1,c
 20879  014A64  0EFC               	movlw	high STR_57
 20880  014A66  6EE6               	movwf	postinc1,c
 20881  014A68  0E00               	movlw	0
 20882  014A6A  6EE6               	movwf	postinc1,c
 20883  014A6C  0E01               	movlw	1
 20884  014A6E  6EE6               	movwf	postinc1,c
 20885  014A70  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20886  014A74  0060  F0AB  FFE6   	movff	btemp,postinc1
 20887  014A7A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20888  014A80  0E08               	movlw	8
 20889  014A82  6EE6               	movwf	postinc1,c
 20890  014A84  EC5B  F000         	call	_sprintf	;wreg free
 20891                           
 20892                           ; BSR set to: 0
 20893                           ;main.c: 534:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 20894                           ;stkvar	_x @ sp[(-17)+16]
 20895  014A88  0EFF               	movlw	-1
 20896  014A8A  50E3               	movf	plusw1,w,c
 20897  014A8C  6EE6               	movwf	postinc1,c
 20898  014A8E  0E00               	movlw	0
 20899  014A90  6EE6               	movwf	postinc1,c
 20900  014A92  0E4B               	movlw	low STR_58
 20901  014A94  6EE6               	movwf	postinc1,c
 20902  014A96  0EFE               	movlw	high STR_58
 20903  014A98  6EE6               	movwf	postinc1,c
 20904  014A9A  0E00               	movlw	0
 20905  014A9C  6EE6               	movwf	postinc1,c
 20906  014A9E  0E02               	movlw	2
 20907  014AA0  6EE6               	movwf	postinc1,c
 20908  014AA2  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20909  014AA6  0060  F0AB  FFE6   	movff	btemp,postinc1
 20910  014AAC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20911  014AB2  0E06               	movlw	6
 20912  014AB4  6EE6               	movwf	postinc1,c
 20913  014AB6  EC5B  F000         	call	_sprintf	;wreg free
 20914                           
 20915                           ; BSR set to: 0
 20916                           ;main.c: 535:   update_lcd(0);
 20917  014ABA  0E00               	movlw	0
 20918  014ABC  6EE6               	movwf	postinc1,c
 20919  014ABE  EC4B  F0F8         	call	_update_lcd	;wreg free
 20920                           
 20921                           ;main.c: 536:   clear_adc_scan();
 20922  014AC2  ECED  F017         	call	_clear_adc_scan	;wreg free
 20923                           
 20924                           ; BSR set to: 1
 20925                           ;main.c: 537:   start_adc_scan();
 20926  014AC6  EC61  F00E         	call	_start_adc_scan	;wreg free
 20927                           
 20928                           ;main.c: 538:   WaitMs(100);
 20929  014ACA  0E64               	movlw	100
 20930  014ACC  6EE6               	movwf	postinc1,c
 20931  014ACE  0E00               	movlw	0
 20932  014AD0  6EE6               	movwf	postinc1,c
 20933  014AD2  EC57  F013         	call	_WaitMs	;wreg free
 20934                           
 20935                           ;main.c: 539:  } while (++x < 64);
 20936                           ;stkvar	_x @ sp[(-17)+16]
 20937  014AD6  0EFF               	movlw	-1
 20938  014AD8  2AE3               	incf	plusw1,f,c
 20939  014ADA  0EFF               	movlw	-1
 20940  014ADC  006F FF8C  F02A    	movff	plusw1,btemp
 20941  014AE2  0E3F               	movlw	63
 20942  014AE4  642A               	cpfsgt	btemp^0,c
 20943  014AE6  D770               	goto	l17405
 20944                           
 20945                           ;main.c: 540:  cb = cb >> 6;
 20946  014AE8  0E06               	movlw	6
 20947  014AEA  6E35               	movwf	(btemp+11)^0,c
 20948                           
 20949                           ;stkvar	_cb @ sp[(-17)+4]
 20950  014AEC  50E1               	movf	fsr1l,w,c
 20951  014AEE  0FF3               	addlw	-13
 20952  014AF0  6ED9               	movwf	fsr2l,c
 20953  014AF2  50E2               	movf	fsr1h,w,c
 20954  014AF4  6EDA               	movwf	fsr2h,c
 20955  014AF6  0EFF               	movlw	255
 20956  014AF8  22DA               	addwfc	fsr2h,f,c
 20957  014AFA  2835               	incf	(btemp+11)^0,w,c
 20958  014AFC  52DE               	movf	postinc2,f,c
 20959  014AFE  D007               	goto	u17000
 20960  014B00                     u17005:
 20961  014B00  52DE               	movf	postinc2,f,c
 20962  014B02  52DE               	movf	postinc2,f,c
 20963  014B04  90D8               	bcf	status,0,c
 20964  014B06  32DD               	rrcf	postdec2,f,c
 20965  014B08  32DD               	rrcf	postdec2,f,c
 20966  014B0A  32DD               	rrcf	postdec2,f,c
 20967  014B0C  32DE               	rrcf	postinc2,f,c
 20968  014B0E                     u17000:
 20969  014B0E  2EE8               	decfsz	wreg,f,c
 20970  014B10  D7F7               	goto	u17005
 20971                           
 20972                           ;main.c: 541:  cp = cp >> 6;
 20973  014B12  0E06               	movlw	6
 20974  014B14  6E35               	movwf	(btemp+11)^0,c
 20975                           
 20976                           ;stkvar	_cp @ sp[(-17)+0]
 20977  014B16  50E1               	movf	fsr1l,w,c
 20978  014B18  0FEF               	addlw	-17
 20979  014B1A  6ED9               	movwf	fsr2l,c
 20980  014B1C  50E2               	movf	fsr1h,w,c
 20981  014B1E  6EDA               	movwf	fsr2h,c
 20982  014B20  0EFF               	movlw	255
 20983  014B22  22DA               	addwfc	fsr2h,f,c
 20984  014B24  2835               	incf	(btemp+11)^0,w,c
 20985  014B26  52DE               	movf	postinc2,f,c
 20986  014B28  D007               	goto	u17010
 20987  014B2A                     u17015:
 20988  014B2A  52DE               	movf	postinc2,f,c
 20989  014B2C  52DE               	movf	postinc2,f,c
 20990  014B2E  90D8               	bcf	status,0,c
 20991  014B30  32DD               	rrcf	postdec2,f,c
 20992  014B32  32DD               	rrcf	postdec2,f,c
 20993  014B34  32DD               	rrcf	postdec2,f,c
 20994  014B36  32DE               	rrcf	postinc2,f,c
 20995  014B38                     u17010:
 20996  014B38  2EE8               	decfsz	wreg,f,c
 20997  014B3A  D7F7               	goto	u17015
 20998                           
 20999                           ;main.c: 543:  if (cal_current_zero(0, cb, cp)) {
 21000                           ;stkvar	_cp @ sp[(-17)+0]
 21001  014B3C  0EEF               	movlw	-17
 21002  014B3E  006F FF8F FFE6     	movff	plusw1,postinc1
 21003  014B44  006F FF8F FFE6     	movff	plusw1,postinc1
 21004                           
 21005                           ;stkvar	_cb @ sp[(-19)+4]
 21006  014B4A  0EF1               	movlw	-15
 21007  014B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 21008  014B52  006F FF8F FFE6     	movff	plusw1,postinc1
 21009  014B58  0E00               	movlw	0
 21010  014B5A  6EE6               	movwf	postinc1,c
 21011  014B5C  EC4F  F009         	call	_cal_current_zero	;wreg free
 21012  014B60  502A               	movf	btemp^0,w,c
 21013  014B62  B4D8               	btfsc	status,2,c
 21014  014B64  D075               	goto	l17443
 21015                           
 21016                           ;main.c: 544:   cal_current_zero(1, cb, cp);
 21017                           ;stkvar	_cp @ sp[(-17)+0]
 21018  014B66  0EEF               	movlw	-17
 21019  014B68  006F FF8F FFE6     	movff	plusw1,postinc1
 21020  014B6E  006F FF8F FFE6     	movff	plusw1,postinc1
 21021                           
 21022                           ;stkvar	_cb @ sp[(-19)+4]
 21023  014B74  0EF1               	movlw	-15
 21024  014B76  006F FF8F FFE6     	movff	plusw1,postinc1
 21025  014B7C  006F FF8F FFE6     	movff	plusw1,postinc1
 21026  014B82  0E01               	movlw	1
 21027  014B84  6EE6               	movwf	postinc1,c
 21028  014B86  EC4F  F009         	call	_cal_current_zero	;wreg free
 21029                           
 21030                           ;main.c: 545:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21031  014B8A  0E9B               	movlw	low STR_52
 21032  014B8C  6EE6               	movwf	postinc1,c
 21033  014B8E  0EFD               	movlw	high STR_52
 21034  014B90  6EE6               	movwf	postinc1,c
 21035  014B92  0E00               	movlw	0
 21036  014B94  6EE6               	movwf	postinc1,c
 21037  014B96  0E00               	movlw	0
 21038  014B98  6EE6               	movwf	postinc1,c
 21039  014B9A  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21040  014B9E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21041  014BA4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21042  014BAA  0E04               	movlw	4
 21043  014BAC  6EE6               	movwf	postinc1,c
 21044  014BAE  EC5B  F000         	call	_sprintf	;wreg free
 21045                           
 21046                           ; BSR set to: 0
 21047                           ;main.c: 546:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 21048                           ;stkvar	_cp @ sp[(-17)+0]
 21049  014BB2  0EEF               	movlw	-17
 21050  014BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 21051  014BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 21052  014BC0  006F FF8F FFE6     	movff	plusw1,postinc1
 21053  014BC6  006F FF8F FFE6     	movff	plusw1,postinc1
 21054                           
 21055                           ;stkvar	_cb @ sp[(-21)+4]
 21056  014BCC  0EEF               	movlw	-17
 21057  014BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 21058  014BD4  006F FF8F FFE6     	movff	plusw1,postinc1
 21059  014BDA  006F FF8F FFE6     	movff	plusw1,postinc1
 21060  014BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 21061  014BE6  0ED5               	movlw	low STR_60
 21062  014BE8  6EE6               	movwf	postinc1,c
 21063  014BEA  0EFC               	movlw	high STR_60
 21064  014BEC  6EE6               	movwf	postinc1,c
 21065  014BEE  0E00               	movlw	0
 21066  014BF0  6EE6               	movwf	postinc1,c
 21067  014BF2  0E01               	movlw	1
 21068  014BF4  6EE6               	movwf	postinc1,c
 21069  014BF6  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21070  014BFA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21071  014C00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21072  014C06  0E0C               	movlw	12
 21073  014C08  6EE6               	movwf	postinc1,c
 21074  014C0A  EC5B  F000         	call	_sprintf	;wreg free
 21075                           
 21076                           ; BSR set to: 0
 21077                           ;main.c: 547:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 21078  014C0E  0E85               	movlw	low STR_61
 21079  014C10  6EE6               	movwf	postinc1,c
 21080  014C12  0EFD               	movlw	high STR_61
 21081  014C14  6EE6               	movwf	postinc1,c
 21082  014C16  0E00               	movlw	0
 21083  014C18  6EE6               	movwf	postinc1,c
 21084  014C1A  0E02               	movlw	2
 21085  014C1C  6EE6               	movwf	postinc1,c
 21086  014C1E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21087  014C22  0060  F0AB  FFE6   	movff	btemp,postinc1
 21088  014C28  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21089  014C2E  0E04               	movlw	4
 21090  014C30  6EE6               	movwf	postinc1,c
 21091  014C32  EC5B  F000         	call	_sprintf	;wreg free
 21092                           
 21093                           ; BSR set to: 0
 21094                           ;main.c: 548:   update_lcd(0);
 21095  014C36  0E00               	movlw	0
 21096  014C38  6EE6               	movwf	postinc1,c
 21097  014C3A  EC4B  F0F8         	call	_update_lcd	;wreg free
 21098                           
 21099                           ;main.c: 549:   WaitMs(2000);
 21100  014C3E  0ED0               	movlw	208
 21101  014C40  6EE6               	movwf	postinc1,c
 21102  014C42  0E07               	movlw	7
 21103  014C44  6EE6               	movwf	postinc1,c
 21104  014C46  EC57  F013         	call	_WaitMs	;wreg free
 21105                           
 21106                           ;main.c: 550:   write_cal_data();
 21107  014C4A  ECA8  F0F9         	call	_write_cal_data	;wreg free
 21108                           
 21109                           ;main.c: 551:  } else {
 21110  014C4E  D05B               	goto	l17449
 21111  014C50                     l17443:
 21112                           
 21113                           ;main.c: 552:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21114  014C50  0E9B               	movlw	low STR_52
 21115  014C52  6EE6               	movwf	postinc1,c
 21116  014C54  0EFD               	movlw	high STR_52
 21117  014C56  6EE6               	movwf	postinc1,c
 21118  014C58  0E00               	movlw	0
 21119  014C5A  6EE6               	movwf	postinc1,c
 21120  014C5C  0E00               	movlw	0
 21121  014C5E  6EE6               	movwf	postinc1,c
 21122  014C60  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21123  014C64  0060  F0AB  FFE6   	movff	btemp,postinc1
 21124  014C6A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21125  014C70  0E04               	movlw	4
 21126  014C72  6EE6               	movwf	postinc1,c
 21127  014C74  EC5B  F000         	call	_sprintf	;wreg free
 21128                           
 21129                           ;main.c: 553:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21130  014C78  0E01               	movlw	1
 21131  014C7A  6EE6               	movwf	postinc1,c
 21132  014C7C  EC5A  F016         	call	_get_raw_result	;wreg free
 21133  014C80  0060  F0AB  FFE6   	movff	btemp,postinc1
 21134  014C86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21135  014C8C  0E00               	movlw	0
 21136  014C8E  6EE6               	movwf	postinc1,c
 21137  014C90  EC5A  F016         	call	_get_raw_result	;wreg free
 21138  014C94  0060  F0AB  FFE6   	movff	btemp,postinc1
 21139  014C9A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21140  014CA0  0ED5               	movlw	low STR_60
 21141  014CA2  6EE6               	movwf	postinc1,c
 21142  014CA4  0EFC               	movlw	high STR_60
 21143  014CA6  6EE6               	movwf	postinc1,c
 21144  014CA8  0E00               	movlw	0
 21145  014CAA  6EE6               	movwf	postinc1,c
 21146  014CAC  0E01               	movlw	1
 21147  014CAE  6EE6               	movwf	postinc1,c
 21148  014CB0  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21149  014CB4  0060  F0AB  FFE6   	movff	btemp,postinc1
 21150  014CBA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21151  014CC0  0E08               	movlw	8
 21152  014CC2  6EE6               	movwf	postinc1,c
 21153  014CC4  EC5B  F000         	call	_sprintf	;wreg free
 21154                           
 21155                           ;main.c: 554:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 21156  014CC8  0E1F               	movlw	low STR_64
 21157  014CCA  6EE6               	movwf	postinc1,c
 21158  014CCC  0EFE               	movlw	high STR_64
 21159  014CCE  6EE6               	movwf	postinc1,c
 21160  014CD0  0E00               	movlw	0
 21161  014CD2  6EE6               	movwf	postinc1,c
 21162  014CD4  0E02               	movlw	2
 21163  014CD6  6EE6               	movwf	postinc1,c
 21164  014CD8  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21165  014CDC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21166  014CE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21167  014CE8  0E04               	movlw	4
 21168  014CEA  6EE6               	movwf	postinc1,c
 21169  014CEC  EC5B  F000         	call	_sprintf	;wreg free
 21170                           
 21171                           ;main.c: 555:   update_lcd(0);
 21172  014CF0  0E00               	movlw	0
 21173  014CF2  6EE6               	movwf	postinc1,c
 21174  014CF4  EC4B  F0F8         	call	_update_lcd	;wreg free
 21175  014CF8                     l17445:
 21176                           
 21177                           ;main.c: 556:   WaitMs(2000);
 21178  014CF8  0ED0               	movlw	208
 21179  014CFA  6EE6               	movwf	postinc1,c
 21180  014CFC  0E07               	movlw	7
 21181  014CFE  6EE6               	movwf	postinc1,c
 21182  014D00  EC57  F013         	call	_WaitMs	;wreg free
 21183  014D04  D39E               	goto	l1524
 21184  014D06                     l17449:
 21185                           
 21186                           ;main.c: 561:  uint32_t cbz, cpz;;main.c: 563:  clear_switch(SCALIB);
 21187  014D06  0E04               	movlw	4
 21188  014D08  6EE6               	movwf	postinc1,c
 21189  014D0A  EC58  F010         	call	_clear_switch	;wreg free
 21190                           
 21191                           ;main.c: 564:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 21192  014D0E  0E0A               	movlw	low STR_65
 21193  014D10  6EE6               	movwf	postinc1,c
 21194  014D12  0EFF               	movlw	high STR_65
 21195  014D14  6EE6               	movwf	postinc1,c
 21196  014D16  0E00               	movlw	0
 21197  014D18  6EE6               	movwf	postinc1,c
 21198  014D1A  0E00               	movlw	0
 21199  014D1C  6EE6               	movwf	postinc1,c
 21200  014D1E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21201  014D22  0060  F0AB  FFE6   	movff	btemp,postinc1
 21202  014D28  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21203  014D2E  0E04               	movlw	4
 21204  014D30  6EE6               	movwf	postinc1,c
 21205  014D32  EC5B  F000         	call	_sprintf	;wreg free
 21206                           
 21207                           ; BSR set to: 0
 21208                           ;main.c: 565:  sprintf(get_vterm_ptr(1, 0), "10 Amp Sensor       ");
 21209  014D36  0EE0               	movlw	low STR_66
 21210  014D38  6EE6               	movwf	postinc1,c
 21211  014D3A  0EFE               	movlw	high STR_66
 21212  014D3C  6EE6               	movwf	postinc1,c
 21213  014D3E  0E00               	movlw	0
 21214  014D40  6EE6               	movwf	postinc1,c
 21215  014D42  0E01               	movlw	1
 21216  014D44  6EE6               	movwf	postinc1,c
 21217  014D46  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21218  014D4A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21219  014D50  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21220  014D56  0E04               	movlw	4
 21221  014D58  6EE6               	movwf	postinc1,c
 21222  014D5A  EC5B  F000         	call	_sprintf	;wreg free
 21223                           
 21224                           ; BSR set to: 0
 21225                           ;main.c: 566:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 21226  014D5E  0EB6               	movlw	low STR_67
 21227  014D60  6EE6               	movwf	postinc1,c
 21228  014D62  0EFE               	movlw	high STR_67
 21229  014D64  6EE6               	movwf	postinc1,c
 21230  014D66  0E00               	movlw	0
 21231  014D68  6EE6               	movwf	postinc1,c
 21232  014D6A  0E02               	movlw	2
 21233  014D6C  6EE6               	movwf	postinc1,c
 21234  014D6E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21235  014D72  0060  F0AB  FFE6   	movff	btemp,postinc1
 21236  014D78  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21237  014D7E  0E04               	movlw	4
 21238  014D80  6EE6               	movwf	postinc1,c
 21239  014D82  EC5B  F000         	call	_sprintf	;wreg free
 21240                           
 21241                           ; BSR set to: 0
 21242                           ;main.c: 567:  update_lcd(0);
 21243  014D86  0E00               	movlw	0
 21244  014D88  6EE6               	movwf	postinc1,c
 21245  014D8A  EC4B  F0F8         	call	_update_lcd	;wreg free
 21246                           
 21247                           ;main.c: 568:  WaitMs(2000);
 21248  014D8E  0ED0               	movlw	208
 21249  014D90  6EE6               	movwf	postinc1,c
 21250  014D92  0E07               	movlw	7
 21251  014D94  6EE6               	movwf	postinc1,c
 21252  014D96  EC57  F013         	call	_WaitMs	;wreg free
 21253                           
 21254                           ;main.c: 569:  x = 0;
 21255                           ;stkvar	_x @ sp[(-17)+16]
 21256  014D9A  0EFF               	movlw	-1
 21257  014D9C  6AE3               	clrf	plusw1,c
 21258  014D9E                     l17463:
 21259                           
 21260                           ;main.c: 571:   if (++x > 64)
 21261                           ;stkvar	_x @ sp[(-17)+16]
 21262  014D9E  0EFF               	movlw	-1
 21263  014DA0  2AE3               	incf	plusw1,f,c
 21264  014DA2  0EFF               	movlw	-1
 21265  014DA4  006F FF8C  F02A    	movff	plusw1,btemp
 21266  014DAA  0E40               	movlw	64
 21267  014DAC  642A               	cpfsgt	btemp^0,c
 21268  014DAE  D001               	goto	l17467
 21269  014DB0  D348               	goto	l1524
 21270  014DB2                     l17467:
 21271                           
 21272                           ;main.c: 573:   sprintf(get_vterm_ptr(2, 0), "Press button %c   ", spinners(4, 0));
 21273  014DB2  0E00               	movlw	0
 21274  014DB4  6EE6               	movwf	postinc1,c
 21275  014DB6  0E04               	movlw	4
 21276  014DB8  6EE6               	movwf	postinc1,c
 21277  014DBA  ECD7  F001         	call	_spinners	;wreg free
 21278  014DBE  502A               	movf	btemp^0,w,c
 21279  014DC0  6EE6               	movwf	postinc1,c
 21280  014DC2  0E00               	movlw	0
 21281  014DC4  6EE6               	movwf	postinc1,c
 21282  014DC6  0E71               	movlw	low STR_68
 21283  014DC8  6EE6               	movwf	postinc1,c
 21284  014DCA  0EFF               	movlw	high STR_68
 21285  014DCC  6EE6               	movwf	postinc1,c
 21286  014DCE  0E00               	movlw	0
 21287  014DD0  6EE6               	movwf	postinc1,c
 21288  014DD2  0E02               	movlw	2
 21289  014DD4  6EE6               	movwf	postinc1,c
 21290  014DD6  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21291  014DDA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21292  014DE0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21293  014DE6  0E06               	movlw	6
 21294  014DE8  6EE6               	movwf	postinc1,c
 21295  014DEA  EC5B  F000         	call	_sprintf	;wreg free
 21296                           
 21297                           ;main.c: 574:   update_lcd(0);
 21298  014DEE  0E00               	movlw	0
 21299  014DF0  6EE6               	movwf	postinc1,c
 21300  014DF2  EC4B  F0F8         	call	_update_lcd	;wreg free
 21301                           
 21302                           ;main.c: 575:   WaitMs(100);
 21303  014DF6  0E64               	movlw	100
 21304  014DF8  6EE6               	movwf	postinc1,c
 21305  014DFA  0E00               	movlw	0
 21306  014DFC  6EE6               	movwf	postinc1,c
 21307  014DFE  EC57  F013         	call	_WaitMs	;wreg free
 21308                           
 21309                           ;main.c: 576:  } while (!get_switch(SCALIB));
 21310  014E02  0E04               	movlw	4
 21311  014E04  6EE6               	movwf	postinc1,c
 21312  014E06  EC6A  F014         	call	_get_switch	;wreg free
 21313  014E0A  502A               	movf	btemp^0,w,c
 21314  014E0C  B4D8               	btfsc	status,2,c
 21315  014E0E  D7C7               	goto	l17463
 21316                           
 21317                           ;main.c: 578:  x = 0;
 21318                           ;stkvar	_x @ sp[(-17)+16]
 21319  014E10  0EFF               	movlw	-1
 21320  014E12  6AE3               	clrf	plusw1,c
 21321                           
 21322                           ;main.c: 579:  cbz = cb;
 21323                           ;stkvar	_cb @ sp[(-17)+4]
 21324  014E14  0EF3               	movlw	-13
 21325  014E16  006F FF8C  F032    	movff	plusw1,btemp+8
 21326  014E1C  0EF4               	movlw	-12
 21327  014E1E  006F FF8C  F033    	movff	plusw1,btemp+9
 21328  014E24  0EF5               	movlw	-11
 21329  014E26  006F FF8C  F034    	movff	plusw1,btemp+10
 21330  014E2C  0EF6               	movlw	-10
 21331  014E2E  006F FF8C  F035    	movff	plusw1,btemp+11
 21332                           
 21333                           ;stkvar	_cbz @ sp[(-17)+12]
 21334  014E34  0EFB               	movlw	-5
 21335  014E36  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 21336  014E3C  0EFC               	movlw	-4
 21337  014E3E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 21338  014E44  0EFD               	movlw	-3
 21339  014E46  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21340  014E4C  0EFE               	movlw	-2
 21341  014E4E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21342                           
 21343                           ;main.c: 580:  cpz = cp;
 21344                           ;stkvar	_cp @ sp[(-17)+0]
 21345  014E54  0EEF               	movlw	-17
 21346  014E56  006F FF8C  F032    	movff	plusw1,btemp+8
 21347  014E5C  0EF0               	movlw	-16
 21348  014E5E  006F FF8C  F033    	movff	plusw1,btemp+9
 21349  014E64  0EF1               	movlw	-15
 21350  014E66  006F FF8C  F034    	movff	plusw1,btemp+10
 21351  014E6C  0EF2               	movlw	-14
 21352  014E6E  006F FF8C  F035    	movff	plusw1,btemp+11
 21353                           
 21354                           ;stkvar	_cpz @ sp[(-17)+8]
 21355  014E74  0EF7               	movlw	-9
 21356  014E76  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 21357  014E7C  0EF8               	movlw	-8
 21358  014E7E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 21359  014E84  0EF9               	movlw	-7
 21360  014E86  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21361  014E8C  0EFA               	movlw	-6
 21362  014E8E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21363                           
 21364                           ;main.c: 581:  cb = 0;
 21365                           ;stkvar	_cb @ sp[(-17)+4]
 21366  014E94  0EF3               	movlw	-13
 21367  014E96  6AE3               	clrf	plusw1,c
 21368  014E98  0EF4               	movlw	-12
 21369  014E9A  6AE3               	clrf	plusw1,c
 21370  014E9C  0EF5               	movlw	-11
 21371  014E9E  6AE3               	clrf	plusw1,c
 21372  014EA0  0EF6               	movlw	-10
 21373  014EA2  6AE3               	clrf	plusw1,c
 21374                           
 21375                           ;main.c: 582:  cp = 0;
 21376                           ;stkvar	_cp @ sp[(-17)+0]
 21377  014EA4  0EEF               	movlw	-17
 21378  014EA6  6AE3               	clrf	plusw1,c
 21379  014EA8  0EF0               	movlw	-16
 21380  014EAA  6AE3               	clrf	plusw1,c
 21381  014EAC  0EF1               	movlw	-15
 21382  014EAE  6AE3               	clrf	plusw1,c
 21383  014EB0  0EF2               	movlw	-14
 21384  014EB2  6AE3               	clrf	plusw1,c
 21385  014EB4                     l17483:
 21386                           
 21387                           ;main.c: 584:   cb += get_raw_result(C_BATT);
 21388  014EB4  0E00               	movlw	0
 21389  014EB6  6EE6               	movwf	postinc1,c
 21390  014EB8  EC5A  F016         	call	_get_raw_result	;wreg free
 21391                           
 21392                           ;stkvar	_cb @ sp[(-17)+4]
 21393  014EBC  50E1               	movf	fsr1l,w,c
 21394  014EBE  0FF3               	addlw	-13
 21395  014EC0  6ED9               	movwf	fsr2l,c
 21396  014EC2  50E2               	movf	fsr1h,w,c
 21397  014EC4  6EDA               	movwf	fsr2h,c
 21398  014EC6  0EFF               	movlw	255
 21399  014EC8  22DA               	addwfc	fsr2h,f,c
 21400  014ECA  502A               	movf	btemp^0,w,c
 21401  014ECC  26DE               	addwf	postinc2,f,c
 21402  014ECE  502B               	movf	(btemp+1)^0,w,c
 21403  014ED0  22DE               	addwfc	postinc2,f,c
 21404  014ED2  0E00               	movlw	0
 21405  014ED4  22DE               	addwfc	postinc2,f,c
 21406  014ED6  22DE               	addwfc	postinc2,f,c
 21407                           
 21408                           ;main.c: 585:   cp += get_raw_result(C_PV);
 21409  014ED8  0E01               	movlw	1
 21410  014EDA  6EE6               	movwf	postinc1,c
 21411  014EDC  EC5A  F016         	call	_get_raw_result	;wreg free
 21412                           
 21413                           ;stkvar	_cp @ sp[(-17)+0]
 21414  014EE0  50E1               	movf	fsr1l,w,c
 21415  014EE2  0FEF               	addlw	-17
 21416  014EE4  6ED9               	movwf	fsr2l,c
 21417  014EE6  50E2               	movf	fsr1h,w,c
 21418  014EE8  6EDA               	movwf	fsr2h,c
 21419  014EEA  0EFF               	movlw	255
 21420  014EEC  22DA               	addwfc	fsr2h,f,c
 21421  014EEE  502A               	movf	btemp^0,w,c
 21422  014EF0  26DE               	addwf	postinc2,f,c
 21423  014EF2  502B               	movf	(btemp+1)^0,w,c
 21424  014EF4  22DE               	addwfc	postinc2,f,c
 21425  014EF6  0E00               	movlw	0
 21426  014EF8  22DE               	addwfc	postinc2,f,c
 21427  014EFA  22DE               	addwfc	postinc2,f,c
 21428                           
 21429                           ;main.c: 586:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 21430  014EFC  0EDD               	movlw	low STR_56
 21431  014EFE  6EE6               	movwf	postinc1,c
 21432  014F00  0EFD               	movlw	high STR_56
 21433  014F02  6EE6               	movwf	postinc1,c
 21434  014F04  0E00               	movlw	0
 21435  014F06  6EE6               	movwf	postinc1,c
 21436  014F08  0E00               	movlw	0
 21437  014F0A  6EE6               	movwf	postinc1,c
 21438  014F0C  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21439  014F10  0060  F0AB  FFE6   	movff	btemp,postinc1
 21440  014F16  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21441  014F1C  0E04               	movlw	4
 21442  014F1E  6EE6               	movwf	postinc1,c
 21443  014F20  EC5B  F000         	call	_sprintf	;wreg free
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;main.c: 587:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21447  014F24  0E01               	movlw	1
 21448  014F26  6EE6               	movwf	postinc1,c
 21449  014F28  EC5A  F016         	call	_get_raw_result	;wreg free
 21450  014F2C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21451  014F32  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21452  014F38  0E00               	movlw	0
 21453  014F3A  6EE6               	movwf	postinc1,c
 21454  014F3C  EC5A  F016         	call	_get_raw_result	;wreg free
 21455  014F40  0060  F0AB  FFE6   	movff	btemp,postinc1
 21456  014F46  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21457  014F4C  0EA9               	movlw	low STR_57
 21458  014F4E  6EE6               	movwf	postinc1,c
 21459  014F50  0EFC               	movlw	high STR_57
 21460  014F52  6EE6               	movwf	postinc1,c
 21461  014F54  0E00               	movlw	0
 21462  014F56  6EE6               	movwf	postinc1,c
 21463  014F58  0E01               	movlw	1
 21464  014F5A  6EE6               	movwf	postinc1,c
 21465  014F5C  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21466  014F60  0060  F0AB  FFE6   	movff	btemp,postinc1
 21467  014F66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21468  014F6C  0E08               	movlw	8
 21469  014F6E  6EE6               	movwf	postinc1,c
 21470  014F70  EC5B  F000         	call	_sprintf	;wreg free
 21471                           
 21472                           ; BSR set to: 0
 21473                           ;main.c: 588:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 21474                           ;stkvar	_x @ sp[(-17)+16]
 21475  014F74  0EFF               	movlw	-1
 21476  014F76  50E3               	movf	plusw1,w,c
 21477  014F78  6EE6               	movwf	postinc1,c
 21478  014F7A  0E00               	movlw	0
 21479  014F7C  6EE6               	movwf	postinc1,c
 21480  014F7E  0E4B               	movlw	low STR_58
 21481  014F80  6EE6               	movwf	postinc1,c
 21482  014F82  0EFE               	movlw	high STR_58
 21483  014F84  6EE6               	movwf	postinc1,c
 21484  014F86  0E00               	movlw	0
 21485  014F88  6EE6               	movwf	postinc1,c
 21486  014F8A  0E02               	movlw	2
 21487  014F8C  6EE6               	movwf	postinc1,c
 21488  014F8E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21489  014F92  0060  F0AB  FFE6   	movff	btemp,postinc1
 21490  014F98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21491  014F9E  0E06               	movlw	6
 21492  014FA0  6EE6               	movwf	postinc1,c
 21493  014FA2  EC5B  F000         	call	_sprintf	;wreg free
 21494                           
 21495                           ; BSR set to: 0
 21496                           ;main.c: 589:   update_lcd(0);
 21497  014FA6  0E00               	movlw	0
 21498  014FA8  6EE6               	movwf	postinc1,c
 21499  014FAA  EC4B  F0F8         	call	_update_lcd	;wreg free
 21500                           
 21501                           ;main.c: 590:   clear_adc_scan();
 21502  014FAE  ECED  F017         	call	_clear_adc_scan	;wreg free
 21503                           
 21504                           ; BSR set to: 1
 21505                           ;main.c: 591:   start_adc_scan();
 21506  014FB2  EC61  F00E         	call	_start_adc_scan	;wreg free
 21507                           
 21508                           ;main.c: 592:   WaitMs(100);
 21509  014FB6  0E64               	movlw	100
 21510  014FB8  6EE6               	movwf	postinc1,c
 21511  014FBA  0E00               	movlw	0
 21512  014FBC  6EE6               	movwf	postinc1,c
 21513  014FBE  EC57  F013         	call	_WaitMs	;wreg free
 21514                           
 21515                           ;main.c: 593:  } while (++x < 64);
 21516                           ;stkvar	_x @ sp[(-17)+16]
 21517  014FC2  0EFF               	movlw	-1
 21518  014FC4  2AE3               	incf	plusw1,f,c
 21519  014FC6  0EFF               	movlw	-1
 21520  014FC8  006F FF8C  F02A    	movff	plusw1,btemp
 21521  014FCE  0E3F               	movlw	63
 21522  014FD0  642A               	cpfsgt	btemp^0,c
 21523  014FD2  D770               	goto	l17483
 21524                           
 21525                           ;main.c: 594:  cb = cb >> 6;
 21526  014FD4  0E06               	movlw	6
 21527  014FD6  6E35               	movwf	(btemp+11)^0,c
 21528                           
 21529                           ;stkvar	_cb @ sp[(-17)+4]
 21530  014FD8  50E1               	movf	fsr1l,w,c
 21531  014FDA  0FF3               	addlw	-13
 21532  014FDC  6ED9               	movwf	fsr2l,c
 21533  014FDE  50E2               	movf	fsr1h,w,c
 21534  014FE0  6EDA               	movwf	fsr2h,c
 21535  014FE2  0EFF               	movlw	255
 21536  014FE4  22DA               	addwfc	fsr2h,f,c
 21537  014FE6  2835               	incf	(btemp+11)^0,w,c
 21538  014FE8  52DE               	movf	postinc2,f,c
 21539  014FEA  D007               	goto	u17060
 21540  014FEC                     u17065:
 21541  014FEC  52DE               	movf	postinc2,f,c
 21542  014FEE  52DE               	movf	postinc2,f,c
 21543  014FF0  90D8               	bcf	status,0,c
 21544  014FF2  32DD               	rrcf	postdec2,f,c
 21545  014FF4  32DD               	rrcf	postdec2,f,c
 21546  014FF6  32DD               	rrcf	postdec2,f,c
 21547  014FF8  32DE               	rrcf	postinc2,f,c
 21548  014FFA                     u17060:
 21549  014FFA  2EE8               	decfsz	wreg,f,c
 21550  014FFC  D7F7               	goto	u17065
 21551                           
 21552                           ;main.c: 595:  cp = cp >> 6;
 21553  014FFE  0E06               	movlw	6
 21554  015000  6E35               	movwf	(btemp+11)^0,c
 21555                           
 21556                           ;stkvar	_cp @ sp[(-17)+0]
 21557  015002  50E1               	movf	fsr1l,w,c
 21558  015004  0FEF               	addlw	-17
 21559  015006  6ED9               	movwf	fsr2l,c
 21560  015008  50E2               	movf	fsr1h,w,c
 21561  01500A  6EDA               	movwf	fsr2h,c
 21562  01500C  0EFF               	movlw	255
 21563  01500E  22DA               	addwfc	fsr2h,f,c
 21564  015010  2835               	incf	(btemp+11)^0,w,c
 21565  015012  52DE               	movf	postinc2,f,c
 21566  015014  D007               	goto	u17070
 21567  015016                     u17075:
 21568  015016  52DE               	movf	postinc2,f,c
 21569  015018  52DE               	movf	postinc2,f,c
 21570  01501A  90D8               	bcf	status,0,c
 21571  01501C  32DD               	rrcf	postdec2,f,c
 21572  01501E  32DD               	rrcf	postdec2,f,c
 21573  015020  32DD               	rrcf	postdec2,f,c
 21574  015022  32DE               	rrcf	postinc2,f,c
 21575  015024                     u17070:
 21576  015024  2EE8               	decfsz	wreg,f,c
 21577  015026  D7F7               	goto	u17075
 21578                           
 21579                           ;main.c: 597:  if (cal_current_10A(0, cb, cp, 0.0, 0.0)) {
 21580  015028  0E00               	movlw	0
 21581  01502A  6EE6               	movwf	postinc1,c
 21582  01502C  0E00               	movlw	0
 21583  01502E  6EE6               	movwf	postinc1,c
 21584  015030  0E00               	movlw	0
 21585  015032  6EE6               	movwf	postinc1,c
 21586  015034  0E00               	movlw	0
 21587  015036  6EE6               	movwf	postinc1,c
 21588  015038  0E00               	movlw	0
 21589  01503A  6EE6               	movwf	postinc1,c
 21590  01503C  0E00               	movlw	0
 21591  01503E  6EE6               	movwf	postinc1,c
 21592  015040  0E00               	movlw	0
 21593  015042  6EE6               	movwf	postinc1,c
 21594  015044  0E00               	movlw	0
 21595  015046  6EE6               	movwf	postinc1,c
 21596                           
 21597                           ;stkvar	_cp @ sp[(-25)+0]
 21598  015048  0EE7               	movlw	-25
 21599  01504A  006F FF8F FFE6     	movff	plusw1,postinc1
 21600  015050  006F FF8F FFE6     	movff	plusw1,postinc1
 21601                           
 21602                           ;stkvar	_cb @ sp[(-27)+4]
 21603  015056  0EE9               	movlw	-23
 21604  015058  006F FF8F FFE6     	movff	plusw1,postinc1
 21605  01505E  006F FF8F FFE6     	movff	plusw1,postinc1
 21606  015064  0E00               	movlw	0
 21607  015066  6EE6               	movwf	postinc1,c
 21608  015068  ECED  F004         	call	_cal_current_10A	;wreg free
 21609  01506C  502A               	movf	btemp^0,w,c
 21610  01506E  B4D8               	btfsc	status,2,c
 21611  015070  D193               	goto	l17521
 21612                           
 21613                           ;main.c: 598:   cal_current_10A(1, cb, cp, 10.0 / (float) (cb - cbz), 10.0 / (float) (cp
      +                           - cpz));
 21614                           ;stkvar	_cpz @ sp[(-17)+8]
 21615                           ;stkvar	_cp @ sp[(-17)+0]
 21616  015072  0EEF               	movlw	-17
 21617  015074  006F FF8C  F032    	movff	plusw1,btemp+8
 21618  01507A  0EF0               	movlw	-16
 21619  01507C  006F FF8C  F033    	movff	plusw1,btemp+9
 21620  015082  0EF1               	movlw	-15
 21621  015084  006F FF8C  F034    	movff	plusw1,btemp+10
 21622  01508A  0EF2               	movlw	-14
 21623  01508C  006F FF8C  F035    	movff	plusw1,btemp+11
 21624  015092  0EF7               	movlw	-9
 21625  015094  50E3               	movf	plusw1,w,c
 21626  015096  5E32               	subwf	(btemp+8)^0,f,c
 21627  015098  0EF8               	movlw	-8
 21628  01509A  50E3               	movf	plusw1,w,c
 21629  01509C  5A33               	subwfb	(btemp+9)^0,f,c
 21630  01509E  0EF9               	movlw	-7
 21631  0150A0  50E3               	movf	plusw1,w,c
 21632  0150A2  5A34               	subwfb	(btemp+10)^0,f,c
 21633  0150A4  0EFA               	movlw	-6
 21634  0150A6  50E3               	movf	plusw1,w,c
 21635  0150A8  5A35               	subwfb	(btemp+11)^0,f,c
 21636  0150AA  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21637  0150B0  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21638  0150B6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21639  0150BC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21640  0150C2  0E00               	movlw	0
 21641  0150C4  6EE6               	movwf	postinc1,c
 21642  0150C6  EC4F  F0ED         	call	___xxtofl	;wreg free
 21643  0150CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21644  0150D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21645  0150D6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21646  0150DC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21647  0150E2  0E00               	movlw	0
 21648  0150E4  6EE6               	movwf	postinc1,c
 21649  0150E6  0E00               	movlw	0
 21650  0150E8  6EE6               	movwf	postinc1,c
 21651  0150EA  0E20               	movlw	32
 21652  0150EC  6EE6               	movwf	postinc1,c
 21653  0150EE  0E41               	movlw	65
 21654  0150F0  6EE6               	movwf	postinc1,c
 21655  0150F2  ECB8  F0C3         	call	___fldiv	;wreg free
 21656  0150F6  0060  F0AB  FFE6   	movff	btemp,postinc1
 21657  0150FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21658  015102  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21659  015108  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21660                           
 21661                           ;stkvar	_cbz @ sp[(-21)+12]
 21662                           ;stkvar	_cb @ sp[(-21)+4]
 21663  01510E  0EEF               	movlw	-17
 21664  015110  006F FF8C  F032    	movff	plusw1,btemp+8
 21665  015116  0EF0               	movlw	-16
 21666  015118  006F FF8C  F033    	movff	plusw1,btemp+9
 21667  01511E  0EF1               	movlw	-15
 21668  015120  006F FF8C  F034    	movff	plusw1,btemp+10
 21669  015126  0EF2               	movlw	-14
 21670  015128  006F FF8C  F035    	movff	plusw1,btemp+11
 21671  01512E  0EF7               	movlw	-9
 21672  015130  50E3               	movf	plusw1,w,c
 21673  015132  5E32               	subwf	(btemp+8)^0,f,c
 21674  015134  0EF8               	movlw	-8
 21675  015136  50E3               	movf	plusw1,w,c
 21676  015138  5A33               	subwfb	(btemp+9)^0,f,c
 21677  01513A  0EF9               	movlw	-7
 21678  01513C  50E3               	movf	plusw1,w,c
 21679  01513E  5A34               	subwfb	(btemp+10)^0,f,c
 21680  015140  0EFA               	movlw	-6
 21681  015142  50E3               	movf	plusw1,w,c
 21682  015144  5A35               	subwfb	(btemp+11)^0,f,c
 21683  015146  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21684  01514C  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21685  015152  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21686  015158  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21687  01515E  0E00               	movlw	0
 21688  015160  6EE6               	movwf	postinc1,c
 21689  015162  EC4F  F0ED         	call	___xxtofl	;wreg free
 21690  015166  0060  F0AB  FFE6   	movff	btemp,postinc1
 21691  01516C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21692  015172  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21693  015178  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21694  01517E  0E00               	movlw	0
 21695  015180  6EE6               	movwf	postinc1,c
 21696  015182  0E00               	movlw	0
 21697  015184  6EE6               	movwf	postinc1,c
 21698  015186  0E20               	movlw	32
 21699  015188  6EE6               	movwf	postinc1,c
 21700  01518A  0E41               	movlw	65
 21701  01518C  6EE6               	movwf	postinc1,c
 21702  01518E  ECB8  F0C3         	call	___fldiv	;wreg free
 21703  015192  0060  F0AB  FFE6   	movff	btemp,postinc1
 21704  015198  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21705  01519E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21706  0151A4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21707                           
 21708                           ;stkvar	_cp @ sp[(-25)+0]
 21709  0151AA  0EE7               	movlw	-25
 21710  0151AC  006F FF8F FFE6     	movff	plusw1,postinc1
 21711  0151B2  006F FF8F FFE6     	movff	plusw1,postinc1
 21712                           
 21713                           ;stkvar	_cb @ sp[(-27)+4]
 21714  0151B8  0EE9               	movlw	-23
 21715  0151BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21716  0151C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21717  0151C6  0E01               	movlw	1
 21718  0151C8  6EE6               	movwf	postinc1,c
 21719  0151CA  ECED  F004         	call	_cal_current_10A	;wreg free
 21720                           
 21721                           ;main.c: 599:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21722  0151CE  0E9B               	movlw	low STR_52
 21723  0151D0  6EE6               	movwf	postinc1,c
 21724  0151D2  0EFD               	movlw	high STR_52
 21725  0151D4  6EE6               	movwf	postinc1,c
 21726  0151D6  0E00               	movlw	0
 21727  0151D8  6EE6               	movwf	postinc1,c
 21728  0151DA  0E00               	movlw	0
 21729  0151DC  6EE6               	movwf	postinc1,c
 21730  0151DE  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21731  0151E2  0060  F0AB  FFE6   	movff	btemp,postinc1
 21732  0151E8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21733  0151EE  0E04               	movlw	4
 21734  0151F0  6EE6               	movwf	postinc1,c
 21735  0151F2  EC5B  F000         	call	_sprintf	;wreg free
 21736                           
 21737                           ; BSR set to: 0
 21738                           ;main.c: 600:   sprintf(get_vterm_ptr(1, 0), " %f %f               ", 10.0 / (float) (cb
      +                           - cbz), 10.0 / (float) (cp - cpz));
 21739                           ;stkvar	_cpz @ sp[(-17)+8]
 21740                           ;stkvar	_cp @ sp[(-17)+0]
 21741  0151F6  0EEF               	movlw	-17
 21742  0151F8  006F FF8C  F032    	movff	plusw1,btemp+8
 21743  0151FE  0EF0               	movlw	-16
 21744  015200  006F FF8C  F033    	movff	plusw1,btemp+9
 21745  015206  0EF1               	movlw	-15
 21746  015208  006F FF8C  F034    	movff	plusw1,btemp+10
 21747  01520E  0EF2               	movlw	-14
 21748  015210  006F FF8C  F035    	movff	plusw1,btemp+11
 21749  015216  0EF7               	movlw	-9
 21750  015218  50E3               	movf	plusw1,w,c
 21751  01521A  5E32               	subwf	(btemp+8)^0,f,c
 21752  01521C  0EF8               	movlw	-8
 21753  01521E  50E3               	movf	plusw1,w,c
 21754  015220  5A33               	subwfb	(btemp+9)^0,f,c
 21755  015222  0EF9               	movlw	-7
 21756  015224  50E3               	movf	plusw1,w,c
 21757  015226  5A34               	subwfb	(btemp+10)^0,f,c
 21758  015228  0EFA               	movlw	-6
 21759  01522A  50E3               	movf	plusw1,w,c
 21760  01522C  5A35               	subwfb	(btemp+11)^0,f,c
 21761  01522E  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21762  015234  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21763  01523A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21764  015240  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21765  015246  0E00               	movlw	0
 21766  015248  6EE6               	movwf	postinc1,c
 21767  01524A  EC4F  F0ED         	call	___xxtofl	;wreg free
 21768  01524E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21769  015254  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21770  01525A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21771  015260  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21772  015266  0E00               	movlw	0
 21773  015268  6EE6               	movwf	postinc1,c
 21774  01526A  0E00               	movlw	0
 21775  01526C  6EE6               	movwf	postinc1,c
 21776  01526E  0E20               	movlw	32
 21777  015270  6EE6               	movwf	postinc1,c
 21778  015272  0E41               	movlw	65
 21779  015274  6EE6               	movwf	postinc1,c
 21780  015276  ECB8  F0C3         	call	___fldiv	;wreg free
 21781  01527A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21782  015280  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21783  015286  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21784  01528C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21785                           
 21786                           ;stkvar	_cbz @ sp[(-21)+12]
 21787                           ;stkvar	_cb @ sp[(-21)+4]
 21788  015292  0EEF               	movlw	-17
 21789  015294  006F FF8C  F032    	movff	plusw1,btemp+8
 21790  01529A  0EF0               	movlw	-16
 21791  01529C  006F FF8C  F033    	movff	plusw1,btemp+9
 21792  0152A2  0EF1               	movlw	-15
 21793  0152A4  006F FF8C  F034    	movff	plusw1,btemp+10
 21794  0152AA  0EF2               	movlw	-14
 21795  0152AC  006F FF8C  F035    	movff	plusw1,btemp+11
 21796  0152B2  0EF7               	movlw	-9
 21797  0152B4  50E3               	movf	plusw1,w,c
 21798  0152B6  5E32               	subwf	(btemp+8)^0,f,c
 21799  0152B8  0EF8               	movlw	-8
 21800  0152BA  50E3               	movf	plusw1,w,c
 21801  0152BC  5A33               	subwfb	(btemp+9)^0,f,c
 21802  0152BE  0EF9               	movlw	-7
 21803  0152C0  50E3               	movf	plusw1,w,c
 21804  0152C2  5A34               	subwfb	(btemp+10)^0,f,c
 21805  0152C4  0EFA               	movlw	-6
 21806  0152C6  50E3               	movf	plusw1,w,c
 21807  0152C8  5A35               	subwfb	(btemp+11)^0,f,c
 21808  0152CA  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21809  0152D0  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21810  0152D6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21811  0152DC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21812  0152E2  0E00               	movlw	0
 21813  0152E4  6EE6               	movwf	postinc1,c
 21814  0152E6  EC4F  F0ED         	call	___xxtofl	;wreg free
 21815  0152EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21816  0152F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21817  0152F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21818  0152FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21819  015302  0E00               	movlw	0
 21820  015304  6EE6               	movwf	postinc1,c
 21821  015306  0E00               	movlw	0
 21822  015308  6EE6               	movwf	postinc1,c
 21823  01530A  0E20               	movlw	32
 21824  01530C  6EE6               	movwf	postinc1,c
 21825  01530E  0E41               	movlw	65
 21826  015310  6EE6               	movwf	postinc1,c
 21827  015312  ECB8  F0C3         	call	___fldiv	;wreg free
 21828  015316  0060  F0AB  FFE6   	movff	btemp,postinc1
 21829  01531C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21830  015322  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21831  015328  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21832  01532E  0EBF               	movlw	low STR_73
 21833  015330  6EE6               	movwf	postinc1,c
 21834  015332  0EFC               	movlw	high STR_73
 21835  015334  6EE6               	movwf	postinc1,c
 21836  015336  0E00               	movlw	0
 21837  015338  6EE6               	movwf	postinc1,c
 21838  01533A  0E01               	movlw	1
 21839  01533C  6EE6               	movwf	postinc1,c
 21840  01533E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21841  015342  0060  F0AB  FFE6   	movff	btemp,postinc1
 21842  015348  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21843  01534E  0E0C               	movlw	12
 21844  015350  6EE6               	movwf	postinc1,c
 21845  015352  EC5B  F000         	call	_sprintf	;wreg free
 21846                           
 21847                           ; BSR set to: 0
 21848                           ;main.c: 601:   sprintf(get_vterm_ptr(2, 0), "10A Cal Set          ");
 21849  015356  0E6F               	movlw	low STR_74
 21850  015358  6EE6               	movwf	postinc1,c
 21851  01535A  0EFD               	movlw	high STR_74
 21852  01535C  6EE6               	movwf	postinc1,c
 21853  01535E  0E00               	movlw	0
 21854  015360  6EE6               	movwf	postinc1,c
 21855  015362  0E02               	movlw	2
 21856  015364  6EE6               	movwf	postinc1,c
 21857  015366  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21858  01536A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21859  015370  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21860  015376  0E04               	movlw	4
 21861  015378  6EE6               	movwf	postinc1,c
 21862  01537A  EC5B  F000         	call	_sprintf	;wreg free
 21863                           
 21864                           ; BSR set to: 0
 21865                           ;main.c: 602:   update_lcd(0);
 21866  01537E  0E00               	movlw	0
 21867  015380  6EE6               	movwf	postinc1,c
 21868  015382  EC4B  F0F8         	call	_update_lcd	;wreg free
 21869                           
 21870                           ;main.c: 603:   WaitMs(5000);
 21871  015386  0E88               	movlw	136
 21872  015388  6EE6               	movwf	postinc1,c
 21873  01538A  0E13               	movlw	19
 21874  01538C  6EE6               	movwf	postinc1,c
 21875  01538E  EC57  F013         	call	_WaitMs	;wreg free
 21876                           
 21877                           ;main.c: 604:   write_cal_data();
 21878  015392  ECA8  F0F9         	call	_write_cal_data	;wreg free
 21879                           
 21880                           ;main.c: 605:  } else {
 21881  015396  D055               	goto	l1524
 21882  015398                     l17521:
 21883                           
 21884                           ;main.c: 606:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21885  015398  0E9B               	movlw	low STR_52
 21886  01539A  6EE6               	movwf	postinc1,c
 21887  01539C  0EFD               	movlw	high STR_52
 21888  01539E  6EE6               	movwf	postinc1,c
 21889  0153A0  0E00               	movlw	0
 21890  0153A2  6EE6               	movwf	postinc1,c
 21891  0153A4  0E00               	movlw	0
 21892  0153A6  6EE6               	movwf	postinc1,c
 21893  0153A8  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21894  0153AC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21895  0153B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21896  0153B8  0E04               	movlw	4
 21897  0153BA  6EE6               	movwf	postinc1,c
 21898  0153BC  EC5B  F000         	call	_sprintf	;wreg free
 21899                           
 21900                           ;main.c: 607:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21901  0153C0  0E01               	movlw	1
 21902  0153C2  6EE6               	movwf	postinc1,c
 21903  0153C4  EC5A  F016         	call	_get_raw_result	;wreg free
 21904  0153C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 21905  0153CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21906  0153D4  0E00               	movlw	0
 21907  0153D6  6EE6               	movwf	postinc1,c
 21908  0153D8  EC5A  F016         	call	_get_raw_result	;wreg free
 21909  0153DC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21910  0153E2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21911  0153E8  0ED5               	movlw	low STR_60
 21912  0153EA  6EE6               	movwf	postinc1,c
 21913  0153EC  0EFC               	movlw	high STR_60
 21914  0153EE  6EE6               	movwf	postinc1,c
 21915  0153F0  0E00               	movlw	0
 21916  0153F2  6EE6               	movwf	postinc1,c
 21917  0153F4  0E01               	movlw	1
 21918  0153F6  6EE6               	movwf	postinc1,c
 21919  0153F8  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21920  0153FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21921  015402  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21922  015408  0E08               	movlw	8
 21923  01540A  6EE6               	movwf	postinc1,c
 21924  01540C  EC5B  F000         	call	_sprintf	;wreg free
 21925                           
 21926                           ;main.c: 608:   sprintf(get_vterm_ptr(2, 0), "10A Out Of Range     ");
 21927  015410  0EF3               	movlw	low STR_77
 21928  015412  6EE6               	movwf	postinc1,c
 21929  015414  0EFD               	movlw	high STR_77
 21930  015416  6EE6               	movwf	postinc1,c
 21931  015418  0E00               	movlw	0
 21932  01541A  6EE6               	movwf	postinc1,c
 21933  01541C  0E02               	movlw	2
 21934  01541E  6EE6               	movwf	postinc1,c
 21935  015420  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21936  015424  0060  F0AB  FFE6   	movff	btemp,postinc1
 21937  01542A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21938  015430  0E04               	movlw	4
 21939  015432  6EE6               	movwf	postinc1,c
 21940  015434  EC5B  F000         	call	_sprintf	;wreg free
 21941                           
 21942                           ;main.c: 609:   update_lcd(0);
 21943  015438  0E00               	movlw	0
 21944  01543A  6EE6               	movwf	postinc1,c
 21945  01543C  EC4B  F0F8         	call	_update_lcd	;wreg free
 21946  015440  D45B               	goto	l17445
 21947  015442                     l1524:
 21948                           
 21949                           ; _current_sensor_cal: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 0, argsize = 0, vargsize = 0
 21950  015442  0EEF               	movlw	239
 21951  015444  26E1               	addwf	fsr1l,f,c
 21952  015446  0EFF               	movlw	255
 21953  015448  22E2               	addwfc	fsr1h,f,c
 21954  01544A  0012               	return		;funcret
 21955  01544C                     __end_of_current_sensor_cal:
 21956                           	opt callstack 0
 21957                           
 21958 ;; *************** function _write_cal_data *****************
 21959 ;; Defined at:
 21960 ;;		line 408 in file "daq.c"
 21961 ;; Parameters:    Size  Location     Type
 21962 ;;		None
 21963 ;; Auto vars:     Size  Location     Type
 21964 ;;  x               2  [STACK] unsigned short 
 21965 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21966 ;;		 -> R(155), 
 21967 ;;  y               2  [STACK] unsigned short 
 21968 ;;  crcVal          1  [STACK] unsigned char 
 21969 ;; Return value:  Size  Location     Type
 21970 ;;                  1  [STACK] void 
 21971 ;; Registers used:
 21972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21973 ;; Tracked objects:
 21974 ;;		On entry : 0/39
 21975 ;;		On exit  : 0/0
 21976 ;;		Unchanged: 0/0
 21977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21982 ;;Total ram usage:        0 bytes
 21983 ;; Hardware stack levels used:    1
 21984 ;; Hardware stack levels required when called:   17
 21985 ;; This function calls:
 21986 ;;		_CRC_8BitDataWrite
 21987 ;;		_CRC_CalculatedResultGet
 21988 ;;		_CRC_Initialize
 21989 ;;		_CRC_IsBusy
 21990 ;;		_CRC_Start
 21991 ;;		_DATAEE_WriteByte
 21992 ;; This function is called by:
 21993 ;;		_main
 21994 ;;		_current_sensor_cal
 21995 ;; This function uses a reentrant model
 21996 ;;
 21997                           
 21998                           	psect	text59
 21999  01F350                     __ptext59:
 22000                           	opt callstack 0
 22001  01F350                     _write_cal_data:
 22002                           	opt callstack 0
 22003                           
 22004                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22005  01F350  0E07               	movlw	7
 22006  01F352  26E1               	addwf	fsr1l,f,c
 22007  01F354  0E00               	movlw	0
 22008  01F356  22E2               	addwfc	fsr1h,f,c
 22009                           
 22010                           ;daq.c: 410:  uint16_t x = 0, y;
 22011                           ;stkvar	_x @ sp[(-7)+0]
 22012                           
 22013                           ;incstack = 0
 22014  01F358  0EF9               	movlw	-7
 22015  01F35A  6AE3               	clrf	plusw1,c
 22016  01F35C  0EFA               	movlw	-6
 22017  01F35E  6AE3               	clrf	plusw1,c
 22018                           
 22019                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 22020  01F360  0E9B               	movlw	155
 22021  01F362  6E34               	movwf	(btemp+10)^0,c
 22022  01F364  0E00               	movlw	0
 22023  01F366  6E35               	movwf	(btemp+11)^0,c
 22024                           
 22025                           ;stkvar	_y @ sp[(-7)+4]
 22026  01F368  0EFD               	movlw	-3
 22027  01F36A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 22028  01F370  0EFE               	movlw	-2
 22029  01F372  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22030                           
 22031                           ;daq.c: 414:  R.crc = 0x42;
 22032  01F378  0E42               	movlw	66
 22033  01F37A  0101               	movlb	1	; () banked
 22034  01F37C  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 22035                           
 22036                           ; BSR set to: 1
 22037                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 22038                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 22039  01F37E  0E01               	movlw	high _R
 22040  01F380  6E2A               	movwf	btemp^0,c
 22041  01F382  0EFC               	movlw	-4
 22042  01F384  0060  F0AB  FFE3   	movff	btemp,plusw1
 22043  01F38A  0E00               	movlw	low _R
 22044  01F38C  6E2A               	movwf	btemp^0,c
 22045  01F38E  0EFB               	movlw	-5
 22046  01F390  0060  F0AB  FFE3   	movff	btemp,plusw1
 22047                           
 22048                           ; BSR set to: 1
 22049                           ;daq.c: 416:  R.checkmark = 0x1957;
 22050  01F396  0E19               	movlw	25
 22051  01F398  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 22052  01F39A  0E57               	movlw	87
 22053  01F39C  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 22054                           
 22055                           ; BSR set to: 1
 22056                           ;daq.c: 418:  CRC_Initialize();
 22057  01F39E  EC73  F00A         	call	_CRC_Initialize	;wreg free
 22058                           
 22059                           ; BSR set to: 0
 22060                           ;daq.c: 421:  CRC_Start();
 22061  01F3A2  ECEA  F017         	call	_CRC_Start	;wreg free
 22062  01F3A6                     l13613:
 22063                           
 22064                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 22065                           ;stkvar	_x @ sp[(-7)+0]
 22066  01F3A6  0EF9               	movlw	-7
 22067  01F3A8  006F FF8C  F034    	movff	plusw1,btemp+10
 22068  01F3AE  0EFA               	movlw	-6
 22069  01F3B0  006F FF8C  F035    	movff	plusw1,btemp+11
 22070                           
 22071                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 22072  01F3B6  0EFB               	movlw	-5
 22073  01F3B8  006F FF8C  F032    	movff	plusw1,btemp+8
 22074  01F3BE  0EFC               	movlw	-4
 22075  01F3C0  006F FF8C  F033    	movff	plusw1,btemp+9
 22076  01F3C6  5034               	movf	(btemp+10)^0,w,c
 22077  01F3C8  2432               	addwf	(btemp+8)^0,w,c
 22078  01F3CA  6ED9               	movwf	fsr2l,c
 22079  01F3CC  5035               	movf	(btemp+11)^0,w,c
 22080  01F3CE  2033               	addwfc	(btemp+9)^0,w,c
 22081  01F3D0  6EDA               	movwf	fsr2h,c
 22082  01F3D2  50DF               	movf	indf2,w,c
 22083  01F3D4  6EE6               	movwf	postinc1,c
 22084                           
 22085                           ;stkvar	_x @ sp[(-8)+0]
 22086  01F3D6  0EF8               	movlw	-8
 22087  01F3D8  006F FF8F FFE6     	movff	plusw1,postinc1
 22088  01F3DE  006F FF8F FFE6     	movff	plusw1,postinc1
 22089  01F3E4  EC95  F00D         	call	_DATAEE_WriteByte	;wreg free
 22090                           
 22091                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 22092                           ;stkvar	_x @ sp[(-7)+0]
 22093  01F3E8  0EF9               	movlw	-7
 22094  01F3EA  006F FF8C  F034    	movff	plusw1,btemp+10
 22095  01F3F0  0EFA               	movlw	-6
 22096  01F3F2  006F FF8C  F035    	movff	plusw1,btemp+11
 22097                           
 22098                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 22099  01F3F8  0EFB               	movlw	-5
 22100  01F3FA  006F FF8C  F032    	movff	plusw1,btemp+8
 22101  01F400  0EFC               	movlw	-4
 22102  01F402  006F FF8C  F033    	movff	plusw1,btemp+9
 22103  01F408  5034               	movf	(btemp+10)^0,w,c
 22104  01F40A  2432               	addwf	(btemp+8)^0,w,c
 22105  01F40C  6ED9               	movwf	fsr2l,c
 22106  01F40E  5035               	movf	(btemp+11)^0,w,c
 22107  01F410  2033               	addwfc	(btemp+9)^0,w,c
 22108  01F412  6EDA               	movwf	fsr2h,c
 22109  01F414  50DF               	movf	indf2,w,c
 22110  01F416  6EE6               	movwf	postinc1,c
 22111  01F418  EC51  F017         	call	_CRC_8BitDataWrite	;wreg free
 22112  01F41C                     l13617:
 22113  01F41C  EC73  F017         	call	_CRC_IsBusy	;wreg free
 22114  01F420  502A               	movf	btemp^0,w,c
 22115  01F422  A4D8               	btfss	status,2,c
 22116  01F424  D7FB               	goto	l13617
 22117                           
 22118                           ;daq.c: 427:  } while (++x < y);
 22119                           ;stkvar	_y @ sp[(-7)+4]
 22120  01F426  0EFD               	movlw	-3
 22121  01F428  006F FF8C  F034    	movff	plusw1,btemp+10
 22122  01F42E  0EFE               	movlw	-2
 22123  01F430  006F FF8C  F035    	movff	plusw1,btemp+11
 22124                           
 22125                           ;stkvar	_x @ sp[(-7)+0]
 22126  01F436  0EF9               	movlw	-7
 22127  01F438  50E3               	movf	plusw1,w,c
 22128  01F43A  0F01               	addlw	1
 22129  01F43C  6E2A               	movwf	btemp^0,c
 22130  01F43E  0EF9               	movlw	-7
 22131  01F440  0060  F0AB  FFE3   	movff	btemp,plusw1
 22132  01F446  6A2A               	clrf	btemp^0,c
 22133  01F448  0EFA               	movlw	-6
 22134  01F44A  50E3               	movf	plusw1,w,c
 22135  01F44C  202A               	addwfc	btemp^0,w,c
 22136  01F44E  6E2A               	movwf	btemp^0,c
 22137  01F450  0EFA               	movlw	-6
 22138  01F452  0060  F0AB  FFE3   	movff	btemp,plusw1
 22139  01F458  0EF9               	movlw	-7
 22140  01F45A  006F FF8C  F032    	movff	plusw1,btemp+8
 22141  01F460  0EFA               	movlw	-6
 22142  01F462  006F FF8C  F033    	movff	plusw1,btemp+9
 22143  01F468  5034               	movf	(btemp+10)^0,w,c
 22144  01F46A  5C32               	subwf	(btemp+8)^0,w,c
 22145  01F46C  5035               	movf	(btemp+11)^0,w,c
 22146  01F46E  5833               	subwfb	(btemp+9)^0,w,c
 22147  01F470  A0D8               	btfss	status,0,c
 22148  01F472  D799               	goto	l13613
 22149                           
 22150                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 22151  01F474  0E00               	movlw	0
 22152  01F476  6EE6               	movwf	postinc1,c
 22153  01F478  0E00               	movlw	0
 22154  01F47A  6EE6               	movwf	postinc1,c
 22155  01F47C  0E00               	movlw	0
 22156  01F47E  6EE6               	movwf	postinc1,c
 22157  01F480  ECC4  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
 22158                           
 22159                           ;stkvar	_crcVal @ sp[(-7)+6]
 22160  01F484  0EFF               	movlw	-1
 22161  01F486  0060  F0AB  FFE3   	movff	btemp,plusw1
 22162                           
 22163                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 22164                           ;stkvar	_crcVal @ sp[(-7)+6]
 22165  01F48C  0EFF               	movlw	-1
 22166  01F48E  50E3               	movf	plusw1,w,c
 22167  01F490  6EE6               	movwf	postinc1,c
 22168  01F492  0E9A               	movlw	154
 22169  01F494  6EE6               	movwf	postinc1,c
 22170  01F496  0E00               	movlw	0
 22171  01F498  6EE6               	movwf	postinc1,c
 22172  01F49A  EC95  F00D         	call	_DATAEE_WriteByte	;wreg free
 22173                           
 22174                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22175  01F49E  0EF9               	movlw	249
 22176  01F4A0  26E1               	addwf	fsr1l,f,c
 22177  01F4A2  0EFF               	movlw	255
 22178  01F4A4  22E2               	addwfc	fsr1h,f,c
 22179  01F4A6  0012               	return		;funcret
 22180  01F4A8                     __end_of_write_cal_data:
 22181                           	opt callstack 0
 22182                           
 22183 ;; *************** function _DATAEE_WriteByte *****************
 22184 ;; Defined at:
 22185 ;;		line 172 in file "mcc_generated_files/memory.c"
 22186 ;; Parameters:    Size  Location     Type
 22187 ;;  bAdd            2  [STACK] unsigned short 
 22188 ;;  bData           1  [STACK] unsigned char 
 22189 ;; Auto vars:     Size  Location     Type
 22190 ;;  GIEBitValue     1  [STACK] unsigned char 
 22191 ;; Return value:  Size  Location     Type
 22192 ;;                  1  [STACK] void 
 22193 ;; Registers used:
 22194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22195 ;; Tracked objects:
 22196 ;;		On entry : 0/39
 22197 ;;		On exit  : 0/0
 22198 ;;		Unchanged: 0/0
 22199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22204 ;;Total ram usage:        0 bytes
 22205 ;; Hardware stack levels used:    1
 22206 ;; Hardware stack levels required when called:   15
 22207 ;; This function calls:
 22208 ;;		Nothing
 22209 ;; This function is called by:
 22210 ;;		_write_cal_data
 22211 ;; This function uses a reentrant model
 22212 ;;
 22213                           
 22214                           	psect	text60
 22215  001B2A                     __ptext60:
 22216                           	opt callstack 0
 22217  001B2A                     _DATAEE_WriteByte:
 22218                           	opt callstack 0
 22219                           
 22220                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22221  001B2A  52E6               	movf	postinc1,f,c
 22222                           
 22223                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 22224                           
 22225                           ;incstack = 0
 22226  001B2C  AED2               	btfss	210,7,c	;volatile
 22227  001B2E  D003               	goto	u12150
 22228  001B30  6A35               	clrf	(btemp+11)^0,c
 22229  001B32  2A35               	incf	(btemp+11)^0,f,c
 22230  001B34  D001               	goto	u12158
 22231  001B36                     u12150:
 22232  001B36  6A35               	clrf	(btemp+11)^0,c
 22233  001B38                     u12158:
 22234                           
 22235                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22236  001B38  0EFF               	movlw	-1
 22237  001B3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22238                           
 22239                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 22240                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22241  001B40  0EFE               	movlw	254
 22242  001B42  24E1               	addwf	fsr1l,w,c
 22243  001B44  6ED9               	movwf	fsr2l,c
 22244  001B46  0EFF               	movlw	255
 22245  001B48  20E2               	addwfc	fsr1h,w,c
 22246  001B4A  6EDA               	movwf	fsr2h,c
 22247  001B4C  50DF               	movf	indf2,w,c
 22248  001B4E  0B03               	andlw	3
 22249  001B50  0139               	movlb	57	; () banked
 22250  001B52  6FE1               	movwf	225,b	;volatile
 22251                           
 22252                           ; BSR set to: 57
 22253                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 22254                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22255  001B54  0EFD               	movlw	-3
 22256  001B56  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 22257                           
 22258                           ; BSR set to: 57
 22259                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 22260                           ;stkvar	_bData @ sp[(-1)+-3]
 22261  001B5C  0EFC               	movlw	-4
 22262  001B5E  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 22263                           
 22264                           ; BSR set to: 57
 22265                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 22266  001B64  0E3F               	movlw	-193
 22267  001B66  17E5               	andwf	229,f,b	;volsfr
 22268                           
 22269                           ; BSR set to: 57
 22270                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 22271  001B68  85E5               	bsf	229,2,b	;volsfr
 22272                           
 22273                           ; BSR set to: 57
 22274                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 22275  001B6A  9ED2               	bcf	210,7,c	;volatile
 22276                           
 22277                           ; BSR set to: 57
 22278                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 22279  001B6C  0E55               	movlw	85
 22280  001B6E  6FE6               	movwf	230,b	;volsfr
 22281                           
 22282                           ; BSR set to: 57
 22283                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 22284  001B70  0EAA               	movlw	170
 22285  001B72  6FE6               	movwf	230,b	;volsfr
 22286                           
 22287                           ; BSR set to: 57
 22288                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 22289  001B74  83E5               	bsf	229,1,b	;volsfr
 22290  001B76                     l942:
 22291                           
 22292                           ; BSR set to: 57
 22293                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 22294  001B76  B3E5               	btfsc	229,1,b	;volsfr
 22295  001B78  D7FE               	goto	l942
 22296                           
 22297                           ; BSR set to: 57
 22298                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 22299  001B7A  95E5               	bcf	229,2,b	;volsfr
 22300                           
 22301                           ; BSR set to: 57
 22302                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 22303                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22304  001B7C  0EFF               	movlw	-1
 22305  001B7E  B0E3               	btfsc	plusw1,0,c
 22306  001B80  D002               	bra	u12175
 22307  001B82  9ED2               	bcf	210,7,c	;volatile
 22308  001B84  D001               	bra	u12176
 22309  001B86                     u12175:
 22310  001B86  8ED2               	bsf	210,7,c	;volatile
 22311  001B88                     u12176:
 22312                           
 22313                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22314  001B88  52E5               	movf	postdec1,f,c
 22315  001B8A  52E5               	movf	postdec1,f,c
 22316  001B8C  52E5               	movf	postdec1,f,c
 22317  001B8E  52E5               	movf	postdec1,f,c
 22318  001B90  0012               	return		;funcret
 22319  001B92                     __end_of_DATAEE_WriteByte:
 22320                           	opt callstack 0
 22321                           
 22322 ;; *************** function _CRC_Start *****************
 22323 ;; Defined at:
 22324 ;;		line 119 in file "mcc_generated_files/crc.c"
 22325 ;; Parameters:    Size  Location     Type
 22326 ;;		None
 22327 ;; Auto vars:     Size  Location     Type
 22328 ;;		None
 22329 ;; Return value:  Size  Location     Type
 22330 ;;                  1  [STACK] void 
 22331 ;; Registers used:
 22332 ;;		None
 22333 ;; Tracked objects:
 22334 ;;		On entry : 3F/0
 22335 ;;		On exit  : 3F/39
 22336 ;;		Unchanged: 0/0
 22337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22342 ;;Total ram usage:        0 bytes
 22343 ;; Hardware stack levels used:    1
 22344 ;; Hardware stack levels required when called:   15
 22345 ;; This function calls:
 22346 ;;		Nothing
 22347 ;; This function is called by:
 22348 ;;		_read_cal_data
 22349 ;;		_write_cal_data
 22350 ;; This function uses a reentrant model
 22351 ;;
 22352                           
 22353                           	psect	text61
 22354  002FD4                     __ptext61:
 22355                           	opt callstack 0
 22356  002FD4                     _CRC_Start:
 22357                           	opt callstack 14
 22358                           
 22359                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 22360                           
 22361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22362                           ;incstack = 0
 22363  002FD4  0139               	movlb	57	; () banked
 22364  002FD6  8D68               	bsf	104,6,b	;volatile
 22365                           
 22366                           ; BSR set to: 57
 22367                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 22368  002FD8  0012               	return		;funcret
 22369  002FDA                     __end_of_CRC_Start:
 22370                           	opt callstack 0
 22371                           
 22372 ;; *************** function _CRC_IsBusy *****************
 22373 ;; Defined at:
 22374 ;;		line 201 in file "mcc_generated_files/crc.c"
 22375 ;; Parameters:    Size  Location     Type
 22376 ;;		None
 22377 ;; Auto vars:     Size  Location     Type
 22378 ;;		None
 22379 ;; Return value:  Size  Location     Type
 22380 ;;                  1  [STACK] _Bool 
 22381 ;; Registers used:
 22382 ;;		btemp
 22383 ;; Tracked objects:
 22384 ;;		On entry : 0/39
 22385 ;;		On exit  : 0/0
 22386 ;;		Unchanged: 0/0
 22387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22392 ;;Total ram usage:        0 bytes
 22393 ;; Hardware stack levels used:    1
 22394 ;; Hardware stack levels required when called:   15
 22395 ;; This function calls:
 22396 ;;		Nothing
 22397 ;; This function is called by:
 22398 ;;		_read_cal_data
 22399 ;;		_write_cal_data
 22400 ;; This function uses a reentrant model
 22401 ;;
 22402                           
 22403                           	psect	text62
 22404  002EE6                     __ptext62:
 22405                           	opt callstack 0
 22406  002EE6                     _CRC_IsBusy:
 22407                           	opt callstack 14
 22408                           
 22409                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 22410                           
 22411                           ; BSR set to: 57
 22412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22413                           ;incstack = 0
 22414  002EE6  0139               	movlb	57	; () banked
 22415  002EE8  AB68               	btfss	104,5,b	;volatile
 22416  002EEA  D003               	goto	u12380
 22417  002EEC  6A2A               	clrf	btemp^0,c
 22418  002EEE  2A2A               	incf	btemp^0,f,c
 22419  002EF0  0012               	return	
 22420  002EF2                     u12380:
 22421  002EF2  6A2A               	clrf	btemp^0,c
 22422                           
 22423                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 22424  002EF4  0012               	return		;funcret
 22425  002EF6                     __end_of_CRC_IsBusy:
 22426                           	opt callstack 0
 22427                           
 22428 ;; *************** function _CRC_CalculatedResultGet *****************
 22429 ;; Defined at:
 22430 ;;		line 159 in file "mcc_generated_files/crc.c"
 22431 ;; Parameters:    Size  Location     Type
 22432 ;;  reverse         1  [STACK] _Bool 
 22433 ;;  xorValue        2  [STACK] unsigned short 
 22434 ;; Auto vars:     Size  Location     Type
 22435 ;;  result          2  [STACK] unsigned short 
 22436 ;;  mask            2  [STACK] unsigned short 
 22437 ;; Return value:  Size  Location     Type
 22438 ;;                  2  [STACK] unsigned short 
 22439 ;; Registers used:
 22440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 22441 ;; Tracked objects:
 22442 ;;		On entry : 0/39
 22443 ;;		On exit  : 0/0
 22444 ;;		Unchanged: 0/0
 22445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22450 ;;Total ram usage:        0 bytes
 22451 ;; Hardware stack levels used:    1
 22452 ;; Hardware stack levels required when called:   16
 22453 ;; This function calls:
 22454 ;;		_CRC_ReverseValue
 22455 ;; This function is called by:
 22456 ;;		_read_cal_data
 22457 ;;		_write_cal_data
 22458 ;; This function uses a reentrant model
 22459 ;;
 22460                           
 22461                           	psect	text63
 22462  01E988                     __ptext63:
 22463                           	opt callstack 0
 22464  01E988                     _CRC_CalculatedResultGet:
 22465                           	opt callstack 0
 22466                           
 22467                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22468  01E988  52E6               	movf	postinc1,f,c
 22469  01E98A  52E6               	movf	postinc1,f,c
 22470  01E98C  52E6               	movf	postinc1,f,c
 22471  01E98E  52E6               	movf	postinc1,f,c
 22472                           
 22473                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 22474                           
 22475                           ;incstack = 0
 22476  01E990  0139               	movlb	57	; () banked
 22477  01E992  9D68               	bcf	104,6,b	;volatile
 22478                           
 22479                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 22480  01E994  9DA0               	bcf	160,6,b	;volatile
 22481                           
 22482                           ; BSR set to: 57
 22483                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 22484  01E996  5169               	movf	105,w,b	;volatile
 22485  01E998  0B0F               	andlw	15
 22486  01E99A  6E35               	movwf	(btemp+11)^0,c
 22487  01E99C  3A35               	swapf	(btemp+11)^0,f,c
 22488  01E99E  5169               	movf	105,w,b	;volatile
 22489  01E9A0  1835               	xorwf	(btemp+11)^0,w,c
 22490  01E9A2  0B0F               	andlw	-241
 22491  01E9A4  1835               	xorwf	(btemp+11)^0,w,c
 22492  01E9A6  6F69               	movwf	105,b	;volatile
 22493                           
 22494                           ; BSR set to: 57
 22495                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 22496  01E9A8  0E08               	movlw	8
 22497  01E9AA  0100               	movlb	0	; () banked
 22498  01E9AC  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 22499  01E9AE  D003               	goto	l1282
 22500                           
 22501                           ; BSR set to: 0
 22502                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 22503  01E9B0  0139               	movlb	57	; () banked
 22504  01E9B2  6B61               	clrf	97,b	;volatile
 22505  01E9B4  D001               	goto	L19
 22506  01E9B6                     l1282:
 22507                           
 22508                           ; BSR set to: 0
 22509                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 22510  01E9B6  0139               	movlb	57	; () banked
 22511  01E9B8                     L19:
 22512  01E9B8  6B60               	clrf	96,b	;volatile
 22513                           
 22514                           ; BSR set to: 57
 22515                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 22516                           
 22517                           ;mcc_generated_files/crc.c: 176:      }
 22518  01E9BA  8D68               	bsf	104,6,b	;volatile
 22519  01E9BC                     l1284:
 22520                           
 22521                           ; BSR set to: 57
 22522  01E9BC  ADA0               	btfss	160,6,b	;volatile
 22523  01E9BE  D7FE               	goto	l1284
 22524                           
 22525                           ; BSR set to: 57
 22526                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 22527  01E9C0  9DA0               	bcf	160,6,b	;volatile
 22528                           
 22529                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 22530  01E9C2  9D68               	bcf	104,6,b	;volatile
 22531                           
 22532                           ; BSR set to: 57
 22533                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 22534  01E9C4  0060  F388  F035   	movff	_crcObj,btemp+11
 22535  01E9CA  0EFF               	movlw	255
 22536  01E9CC  2635               	addwf	(btemp+11)^0,f,c
 22537  01E9CE  3A35               	swapf	(btemp+11)^0,f,c
 22538  01E9D0  5169               	movf	105,w,b	;volatile
 22539  01E9D2  1835               	xorwf	(btemp+11)^0,w,c
 22540  01E9D4  0B0F               	andlw	-241
 22541  01E9D6  1835               	xorwf	(btemp+11)^0,w,c
 22542  01E9D8  6F69               	movwf	105,b	;volatile
 22543                           
 22544                           ; BSR set to: 57
 22545                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 22546  01E9DA  5162               	movf	98,w,b	;volatile
 22547  01E9DC  006E F58C  F02A    	movff	14691,btemp	;volatile
 22548  01E9E2  6A2B               	clrf	(btemp+1)^0,c
 22549  01E9E4  0060  F0A8  F02B   	movff	btemp,btemp+1
 22550  01E9EA  6A2A               	clrf	btemp^0,c
 22551  01E9EC  122A               	iorwf	btemp^0,f,c
 22552  01E9EE  0E00               	movlw	0
 22553  01E9F0  122B               	iorwf	(btemp+1)^0,f,c
 22554                           
 22555                           ;stkvar	_result @ sp[(-4)+0]
 22556  01E9F2  0EFC               	movlw	-4
 22557  01E9F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 22558  01E9FA  0EFD               	movlw	-3
 22559  01E9FC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22560                           
 22561                           ; BSR set to: 57
 22562                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 22563  01EA02  0E10               	movlw	16
 22564  01EA04  0100               	movlb	0	; () banked
 22565  01EA06  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 22566  01EA08  D03A               	goto	l12885
 22567                           
 22568                           ; BSR set to: 0
 22569                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 22570  01EA0A  0EFF               	movlw	255
 22571  01EA0C  6E34               	movwf	(btemp+10)^0,c
 22572  01EA0E  0EFF               	movlw	255
 22573  01EA10  6E35               	movwf	(btemp+11)^0,c
 22574  01EA12  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 22575  01EA18  0E01               	movlw	1
 22576  01EA1A  6E30               	movwf	(btemp+6)^0,c
 22577  01EA1C  0E00               	movlw	0
 22578  01EA1E  6E31               	movwf	(btemp+7)^0,c
 22579  01EA20  2A33               	incf	(btemp+9)^0,f,c
 22580  01EA22  D003               	goto	u12364
 22581  01EA24                     u12365:
 22582  01EA24  90D8               	bcf	status,0,c
 22583  01EA26  3630               	rlcf	(btemp+6)^0,f,c
 22584  01EA28  3631               	rlcf	(btemp+7)^0,f,c
 22585  01EA2A                     u12364:
 22586  01EA2A  2E33               	decfsz	(btemp+9)^0,f,c
 22587  01EA2C  D7FB               	goto	u12365
 22588  01EA2E  5034               	movf	(btemp+10)^0,w,c
 22589  01EA30  2630               	addwf	(btemp+6)^0,f,c
 22590  01EA32  5035               	movf	(btemp+11)^0,w,c
 22591  01EA34  2231               	addwfc	(btemp+7)^0,f,c
 22592                           
 22593                           ;stkvar	_mask @ sp[(-4)+2]
 22594  01EA36  0EFE               	movlw	-2
 22595  01EA38  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 22596  01EA3E  0EFF               	movlw	-1
 22597  01EA40  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 22598                           
 22599                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 22600                           ;stkvar	_mask @ sp[(-4)+2]
 22601  01EA46  0EFE               	movlw	-2
 22602  01EA48  006F FF8C  F034    	movff	plusw1,btemp+10
 22603  01EA4E  0EFF               	movlw	-1
 22604  01EA50  006F FF8C  F035    	movff	plusw1,btemp+11
 22605                           
 22606                           ;stkvar	_result @ sp[(-4)+0]
 22607  01EA56  0EFC               	movlw	-4
 22608  01EA58  006F FF8C  F02A    	movff	plusw1,btemp
 22609  01EA5E  5034               	movf	(btemp+10)^0,w,c
 22610  01EA60  162A               	andwf	btemp^0,f,c
 22611  01EA62  0EFC               	movlw	-4
 22612  01EA64  0060  F0AB  FFE3   	movff	btemp,plusw1
 22613  01EA6A  0EFD               	movlw	-3
 22614  01EA6C  006F FF8C  F02A    	movff	plusw1,btemp
 22615  01EA72  5035               	movf	(btemp+11)^0,w,c
 22616  01EA74  162A               	andwf	btemp^0,f,c
 22617  01EA76  0EFD               	movlw	-3
 22618  01EA78  0060  F0AB  FFE3   	movff	btemp,plusw1
 22619  01EA7E                     l12885:
 22620                           
 22621                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 22622                           ;stkvar	_reverse @ sp[(-4)+-1]
 22623  01EA7E  0EFB               	movlw	-5
 22624  01EA80  50E3               	movf	plusw1,w,c
 22625  01EA82  B4D8               	btfsc	status,2,c
 22626  01EA84  D011               	goto	l12889
 22627                           
 22628                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 22629                           ;stkvar	_result @ sp[(-4)+0]
 22630  01EA86  0EFC               	movlw	-4
 22631  01EA88  006F FF8F FFE6     	movff	plusw1,postinc1
 22632  01EA8E  006F FF8F FFE6     	movff	plusw1,postinc1
 22633  01EA94  EC99  F0FF         	call	_CRC_ReverseValue	;wreg free
 22634                           
 22635                           ;stkvar	_result @ sp[(-4)+0]
 22636  01EA98  0EFC               	movlw	-4
 22637  01EA9A  0060  F0AB  FFE3   	movff	btemp,plusw1
 22638  01EAA0  0EFD               	movlw	-3
 22639  01EAA2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22640  01EAA8                     l12889:
 22641                           
 22642                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 22643                           ;stkvar	_xorValue @ sp[(-4)+-3]
 22644  01EAA8  0EF9               	movlw	-7
 22645  01EAAA  006F FF8C  F034    	movff	plusw1,btemp+10
 22646  01EAB0  0EFA               	movlw	-6
 22647  01EAB2  006F FF8C  F035    	movff	plusw1,btemp+11
 22648                           
 22649                           ;stkvar	_result @ sp[(-4)+0]
 22650  01EAB8  0EFC               	movlw	-4
 22651  01EABA  006F FF8C  F02A    	movff	plusw1,btemp
 22652  01EAC0  5034               	movf	(btemp+10)^0,w,c
 22653  01EAC2  1A2A               	xorwf	btemp^0,f,c
 22654  01EAC4  0EFC               	movlw	-4
 22655  01EAC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 22656  01EACC  0EFD               	movlw	-3
 22657  01EACE  006F FF8C  F02A    	movff	plusw1,btemp
 22658  01EAD4  5035               	movf	(btemp+11)^0,w,c
 22659  01EAD6  1A2A               	xorwf	btemp^0,f,c
 22660  01EAD8  0EFD               	movlw	-3
 22661  01EADA  0060  F0AB  FFE3   	movff	btemp,plusw1
 22662                           
 22663                           ;mcc_generated_files/crc.c: 198:     return result;
 22664                           ;stkvar	_result @ sp[(-4)+0]
 22665  01EAE0  0EFC               	movlw	-4
 22666  01EAE2  006F FF8C  F02A    	movff	plusw1,btemp
 22667  01EAE8  0EFD               	movlw	-3
 22668  01EAEA  006F FF8C  F02B    	movff	plusw1,btemp+1
 22669                           
 22670                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 22671  01EAF0  0EF9               	movlw	249
 22672  01EAF2  26E1               	addwf	fsr1l,f,c
 22673  01EAF4  0EFF               	movlw	255
 22674  01EAF6  22E2               	addwfc	fsr1h,f,c
 22675  01EAF8  0012               	return		;funcret
 22676  01EAFA                     __end_of_CRC_CalculatedResultGet:
 22677                           	opt callstack 0
 22678                           
 22679 ;; *************** function _CRC_ReverseValue *****************
 22680 ;; Defined at:
 22681 ;;		line 138 in file "mcc_generated_files/crc.c"
 22682 ;; Parameters:    Size  Location     Type
 22683 ;;  crc             2  [STACK] unsigned short 
 22684 ;; Auto vars:     Size  Location     Type
 22685 ;;  mask            2  [STACK] unsigned short 
 22686 ;;  reverse         2  [STACK] unsigned short 
 22687 ;; Return value:  Size  Location     Type
 22688 ;;                  2  [STACK] unsigned short 
 22689 ;; Registers used:
 22690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22691 ;; Tracked objects:
 22692 ;;		On entry : 0/0
 22693 ;;		On exit  : 0/0
 22694 ;;		Unchanged: 0/0
 22695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22700 ;;Total ram usage:        0 bytes
 22701 ;; Hardware stack levels used:    1
 22702 ;; Hardware stack levels required when called:   15
 22703 ;; This function calls:
 22704 ;;		Nothing
 22705 ;; This function is called by:
 22706 ;;		_CRC_CalculatedResultGet
 22707 ;; This function uses a reentrant model
 22708 ;;
 22709                           
 22710                           	psect	text64
 22711  01FF32                     __ptext64:
 22712                           	opt callstack 0
 22713  01FF32                     _CRC_ReverseValue:
 22714                           	opt callstack 0
 22715                           
 22716                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22717  01FF32  52E6               	movf	postinc1,f,c
 22718  01FF34  52E6               	movf	postinc1,f,c
 22719  01FF36  52E6               	movf	postinc1,f,c
 22720  01FF38  52E6               	movf	postinc1,f,c
 22721                           
 22722                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 22723                           
 22724                           ;incstack = 0
 22725  01FF3A  0E01               	movlw	1
 22726  01FF3C  6E34               	movwf	(btemp+10)^0,c
 22727  01FF3E  0E00               	movlw	0
 22728  01FF40  6E35               	movwf	(btemp+11)^0,c
 22729                           
 22730                           ;stkvar	_mask @ sp[(-4)+0]
 22731  01FF42  0EFC               	movlw	-4
 22732  01FF44  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 22733  01FF4A  0EFD               	movlw	-3
 22734  01FF4C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22735                           
 22736                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 22737  01FF52  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 22738  01FF58  0EFF               	movlw	255
 22739  01FF5A  2635               	addwf	(btemp+11)^0,f,c
 22740                           
 22741                           ;stkvar	_mask @ sp[(-4)+0]
 22742  01FF5C  50E1               	movf	fsr1l,w,c
 22743  01FF5E  0FFC               	addlw	-4
 22744  01FF60  6ED9               	movwf	fsr2l,c
 22745  01FF62  50E2               	movf	fsr1h,w,c
 22746  01FF64  6EDA               	movwf	fsr2h,c
 22747  01FF66  0EFF               	movlw	255
 22748  01FF68  22DA               	addwfc	fsr2h,f,c
 22749  01FF6A  2835               	incf	(btemp+11)^0,w,c
 22750  01FF6C  D003               	goto	u11630
 22751  01FF6E                     u11635:
 22752  01FF6E  90D8               	bcf	status,0,c
 22753  01FF70  36DE               	rlcf	postinc2,f,c
 22754  01FF72  36DD               	rlcf	postdec2,f,c
 22755  01FF74                     u11630:
 22756  01FF74  2EE8               	decfsz	wreg,f,c
 22757  01FF76  D7FB               	goto	u11635
 22758                           
 22759                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 22760                           ;stkvar	_reverse @ sp[(-4)+2]
 22761  01FF78  0EFE               	movlw	-2
 22762  01FF7A  6AE3               	clrf	plusw1,c
 22763  01FF7C  0EFF               	movlw	-1
 22764  01FF7E  6AE3               	clrf	plusw1,c
 22765                           
 22766                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22767  01FF80  D029               	goto	l12369
 22768  01FF82                     l12361:
 22769                           
 22770                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 22771                           ;stkvar	_crc @ sp[(-4)+-2]
 22772  01FF82  0EFA               	movlw	-6
 22773  01FF84  A0E3               	btfss	plusw1,0,c
 22774  01FF86  D01C               	goto	l12365
 22775                           
 22776                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 22777                           ;stkvar	_mask @ sp[(-4)+0]
 22778  01FF88  0EFC               	movlw	-4
 22779  01FF8A  006F FF8C  F034    	movff	plusw1,btemp+10
 22780  01FF90  0EFD               	movlw	-3
 22781  01FF92  006F FF8C  F035    	movff	plusw1,btemp+11
 22782                           
 22783                           ;stkvar	_reverse @ sp[(-4)+2]
 22784  01FF98  0EFE               	movlw	-2
 22785  01FF9A  006F FF8C  F02A    	movff	plusw1,btemp
 22786  01FFA0  5034               	movf	(btemp+10)^0,w,c
 22787  01FFA2  122A               	iorwf	btemp^0,f,c
 22788  01FFA4  0EFE               	movlw	-2
 22789  01FFA6  0060  F0AB  FFE3   	movff	btemp,plusw1
 22790  01FFAC  0EFF               	movlw	-1
 22791  01FFAE  006F FF8C  F02A    	movff	plusw1,btemp
 22792  01FFB4  5035               	movf	(btemp+11)^0,w,c
 22793  01FFB6  122A               	iorwf	btemp^0,f,c
 22794  01FFB8  0EFF               	movlw	-1
 22795  01FFBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 22796  01FFC0                     l12365:
 22797                           
 22798                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 22799                           ;stkvar	_mask @ sp[(-4)+0]
 22800  01FFC0  90D8               	bcf	status,0,c
 22801  01FFC2  0EFD               	movlw	-3
 22802  01FFC4  32E3               	rrcf	plusw1,f,c
 22803  01FFC6  0EFC               	movlw	-4
 22804  01FFC8  32E3               	rrcf	plusw1,f,c
 22805                           
 22806                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 22807                           ;stkvar	_crc @ sp[(-4)+-2]
 22808  01FFCA  90D8               	bcf	status,0,c
 22809  01FFCC  0EFB               	movlw	-5
 22810  01FFCE  32E3               	rrcf	plusw1,f,c
 22811  01FFD0  0EFA               	movlw	-6
 22812  01FFD2  32E3               	rrcf	plusw1,f,c
 22813  01FFD4                     l12369:
 22814                           
 22815                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22816                           ;stkvar	_crc @ sp[(-4)+-2]
 22817  01FFD4  0EFA               	movlw	-6
 22818  01FFD6  006F FF8C  F02A    	movff	plusw1,btemp
 22819  01FFDC  0EFB               	movlw	-5
 22820  01FFDE  50E3               	movf	plusw1,w,c
 22821  01FFE0  102A               	iorwf	btemp^0,w,c
 22822  01FFE2  A4D8               	btfss	status,2,c
 22823  01FFE4  D7CE               	goto	l12361
 22824                           
 22825                           ;mcc_generated_files/crc.c: 156:     return reverse;
 22826                           ;stkvar	_reverse @ sp[(-4)+2]
 22827  01FFE6  0EFE               	movlw	-2
 22828  01FFE8  006F FF8C  F02A    	movff	plusw1,btemp
 22829  01FFEE  0EFF               	movlw	-1
 22830  01FFF0  006F FF8C  F02B    	movff	plusw1,btemp+1
 22831                           
 22832                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22833  01FFF6  0EFA               	movlw	250
 22834  01FFF8  26E1               	addwf	fsr1l,f,c
 22835  01FFFA  0EFF               	movlw	255
 22836  01FFFC  22E2               	addwfc	fsr1h,f,c
 22837  01FFFE  0012               	return		;funcret
 22838  020000                     __end_of_CRC_ReverseValue:
 22839                           	opt callstack 0
 22840                           
 22841 ;; *************** function _CRC_8BitDataWrite *****************
 22842 ;; Defined at:
 22843 ;;		line 125 in file "mcc_generated_files/crc.c"
 22844 ;; Parameters:    Size  Location     Type
 22845 ;;  data            1  [STACK] unsigned char 
 22846 ;; Auto vars:     Size  Location     Type
 22847 ;;		None
 22848 ;; Return value:  Size  Location     Type
 22849 ;;                  1  [STACK] _Bool 
 22850 ;; Registers used:
 22851 ;;		fsr1l, fsr1h
 22852 ;; Tracked objects:
 22853 ;;		On entry : 0/4
 22854 ;;		On exit  : 3F/39
 22855 ;;		Unchanged: 0/0
 22856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;Total ram usage:        0 bytes
 22862 ;; Hardware stack levels used:    1
 22863 ;; Hardware stack levels required when called:   15
 22864 ;; This function calls:
 22865 ;;		Nothing
 22866 ;; This function is called by:
 22867 ;;		_read_cal_data
 22868 ;;		_write_cal_data
 22869 ;; This function uses a reentrant model
 22870 ;;
 22871                           
 22872                           	psect	text65
 22873  002EA2                     __ptext65:
 22874                           	opt callstack 0
 22875  002EA2                     _CRC_8BitDataWrite:
 22876                           	opt callstack 14
 22877                           
 22878                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 22879                           
 22880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22881                           ;incstack = 0
 22882  002EA2  0139               	movlb	57	; () banked
 22883  002EA4  B168               	btfsc	104,0,b	;volatile
 22884  002EA6  D004               	goto	l1271
 22885                           
 22886                           ; BSR set to: 57
 22887                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 22888                           ;stkvar	_data @ sp[(0)+-1]
 22889  002EA8  0EFF               	movlw	-1
 22890  002EAA  006F FF8F F960     	movff	plusw1,14688	;volatile
 22891  002EB0                     l1271:
 22892                           
 22893                           ; BSR set to: 57
 22894                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 22895  002EB0  52E5               	movf	postdec1,f,c
 22896  002EB2  0012               	return		;funcret
 22897  002EB4                     __end_of_CRC_8BitDataWrite:
 22898                           	opt callstack 0
 22899                           
 22900 ;; *************** function _start_adc_scan *****************
 22901 ;; Defined at:
 22902 ;;		line 72 in file "daq.c"
 22903 ;; Parameters:    Size  Location     Type
 22904 ;;		None
 22905 ;; Auto vars:     Size  Location     Type
 22906 ;;		None
 22907 ;; Return value:  Size  Location     Type
 22908 ;;                  1  [STACK] _Bool 
 22909 ;; Registers used:
 22910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22911 ;; Tracked objects:
 22912 ;;		On entry : 0/0
 22913 ;;		On exit  : 0/0
 22914 ;;		Unchanged: 0/0
 22915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22920 ;;Total ram usage:        0 bytes
 22921 ;; Hardware stack levels used:    1
 22922 ;; Hardware stack levels required when called:   16
 22923 ;; This function calls:
 22924 ;;		_ADCC_DischargeSampleCapacitor
 22925 ;;		_ADCC_SetADIInterruptHandler
 22926 ;;		_ADCC_SetADTIInterruptHandler
 22927 ;;		_ADCC_StartConversion
 22928 ;; This function is called by:
 22929 ;;		_main
 22930 ;;		_current_sensor_cal
 22931 ;;		_update_adc_result
 22932 ;; This function uses a reentrant model
 22933 ;;
 22934                           
 22935                           	psect	text66
 22936  001CC2                     __ptext66:
 22937                           	opt callstack 0
 22938  001CC2                     _start_adc_scan:
 22939                           	opt callstack 14
 22940                           
 22941                           ;daq.c: 74:  if (R.done)
 22942                           
 22943                           ; BSR set to: 57
 22944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22945                           ;incstack = 0
 22946  001CC2  0101               	movlb	1	; () banked
 22947  001CC4  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 22948  001CC6  A4D8               	btfss	status,2,c
 22949  001CC8  0012               	return	
 22950                           
 22951                           ; BSR set to: 1
 22952                           ;daq.c: 77:  R.scan_index = 0;
 22953  001CCA  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22954                           
 22955                           ; BSR set to: 1
 22956                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22957  001CCC  013A               	movlb	58	; () banked
 22958  001CCE  5140               	movf	64,w,b	;volatile
 22959  001CD0  006E F940  F02A    	movff	14928,btemp	;volatile
 22960  001CD6  6A2B               	clrf	(btemp+1)^0,c
 22961  001CD8  0060  F0A8  F02B   	movff	btemp,btemp+1
 22962  001CDE  6A2A               	clrf	btemp^0,c
 22963  001CE0  262A               	addwf	btemp^0,f,c
 22964  001CE2  0E00               	movlw	0
 22965  001CE4  222B               	addwfc	(btemp+1)^0,f,c
 22966  001CE6  0E77               	movlw	119
 22967  001CE8  142A               	andwf	btemp^0,w,c
 22968  001CEA  0101               	movlb	1	; () banked
 22969  001CEC  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22970  001CEE  0E3C               	movlw	60
 22971  001CF0  142B               	andwf	(btemp+1)^0,w,c
 22972  001CF2  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22973                           
 22974                           ; BSR set to: 1
 22975                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22976  001CF4  0E02               	movlw	low _adc_int_handler
 22977  001CF6  6EE6               	movwf	postinc1,c
 22978  001CF8  0E30               	movlw	high _adc_int_handler
 22979  001CFA  6EE6               	movwf	postinc1,c
 22980  001CFC  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22981  001CFE  6EE6               	movwf	postinc1,c
 22982  001D00  EC9D  F015         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22983                           
 22984                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22985  001D04  0E08               	movlw	low _adc_int_t_handler
 22986  001D06  6EE6               	movwf	postinc1,c
 22987  001D08  0E17               	movlw	high _adc_int_t_handler
 22988  001D0A  6EE6               	movwf	postinc1,c
 22989  001D0C  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 22990  001D0E  6EE6               	movwf	postinc1,c
 22991  001D10  EC89  F015         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22992                           
 22993                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 22994  001D14  ECD7  F017         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22995                           
 22996                           ; BSR set to: 62
 22997                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 22998  001D18  0101               	movlb	1	; () banked
 22999  001D1A  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 23000  001D1C  0B0F               	andlw	15
 23001  001D1E  6EE6               	movwf	postinc1,c
 23002  001D20  EC5A  F017         	call	_ADCC_StartConversion	;wreg free
 23003                           
 23004                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23005  001D24  0012               	return		;funcret
 23006  001D26                     __end_of_start_adc_scan:
 23007                           	opt callstack 0
 23008                           
 23009 ;; *************** function _ADCC_StartConversion *****************
 23010 ;; Defined at:
 23011 ;;		line 128 in file "mcc_generated_files/adcc.c"
 23012 ;; Parameters:    Size  Location     Type
 23013 ;;  channel         1  [STACK] enum E16136
 23014 ;; Auto vars:     Size  Location     Type
 23015 ;;		None
 23016 ;; Return value:  Size  Location     Type
 23017 ;;                  1  [STACK] void 
 23018 ;; Registers used:
 23019 ;;		fsr1l, fsr1h
 23020 ;; Tracked objects:
 23021 ;;		On entry : 3F/1
 23022 ;;		On exit  : 3F/3E
 23023 ;;		Unchanged: 0/0
 23024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23029 ;;Total ram usage:        0 bytes
 23030 ;; Hardware stack levels used:    1
 23031 ;; Hardware stack levels required when called:   15
 23032 ;; This function calls:
 23033 ;;		Nothing
 23034 ;; This function is called by:
 23035 ;;		_start_adc_scan
 23036 ;;		_adc_int_t_handler
 23037 ;; This function uses a reentrant model
 23038 ;;
 23039                           
 23040                           	psect	text67
 23041  002EB4                     __ptext67:
 23042                           	opt callstack 0
 23043  002EB4                     _ADCC_StartConversion:
 23044                           	opt callstack 0
 23045                           
 23046                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 23047                           ;stkvar	_channel @ sp[(0)+-1]
 23048                           
 23049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23050                           ;incstack = 0
 23051 ;; hardware stack exceeded
 23052  002EB4  0EFF               	movlw	-1
 23053  002EB6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 23054                           
 23055                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 23056  002EBC  013E               	movlb	62	; () banked
 23057  002EBE  8FF8               	bsf	248,7,b	;volatile
 23058                           
 23059                           ; BSR set to: 62
 23060                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 23061  002EC0  81F8               	bsf	248,0,b	;volatile
 23062                           
 23063                           ; BSR set to: 62
 23064                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 23065  002EC2  52E5               	movf	postdec1,f,c
 23066  002EC4  0012               	return		;funcret
 23067  002EC6                     __end_of_ADCC_StartConversion:
 23068                           	opt callstack 0
 23069                           
 23070 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 23071 ;; Defined at:
 23072 ;;		line 189 in file "mcc_generated_files/adcc.c"
 23073 ;; Parameters:    Size  Location     Type
 23074 ;;		None
 23075 ;; Auto vars:     Size  Location     Type
 23076 ;;		None
 23077 ;; Return value:  Size  Location     Type
 23078 ;;                  1  [STACK] void 
 23079 ;; Registers used:
 23080 ;;		wreg, status,2
 23081 ;; Tracked objects:
 23082 ;;		On entry : 0/1
 23083 ;;		On exit  : 3F/3E
 23084 ;;		Unchanged: 0/0
 23085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23090 ;;Total ram usage:        0 bytes
 23091 ;; Hardware stack levels used:    1
 23092 ;; Hardware stack levels required when called:   15
 23093 ;; This function calls:
 23094 ;;		Nothing
 23095 ;; This function is called by:
 23096 ;;		_start_adc_scan
 23097 ;;		_adc_int_t_handler
 23098 ;; This function uses a reentrant model
 23099 ;;
 23100                           
 23101                           	psect	text68
 23102  002FAE                     __ptext68:
 23103                           	opt callstack 0
 23104  002FAE                     _ADCC_DischargeSampleCapacitor:
 23105                           	opt callstack 0
 23106                           
 23107                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 23108                           
 23109                           ; BSR set to: 62
 23110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23111                           ;incstack = 0
 23112 ;; hardware stack exceeded
 23113  002FAE  0E3B               	movlw	59
 23114  002FB0  013E               	movlb	62	; () banked
 23115  002FB2  6FF1               	movwf	241,b	;volatile
 23116                           
 23117                           ; BSR set to: 62
 23118                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 23119  002FB4  0012               	return		;funcret
 23120  002FB6                     __end_of_ADCC_DischargeSampleCapacitor:
 23121                           	opt callstack 0
 23122                           
 23123 ;; *************** function _spinners *****************
 23124 ;; Defined at:
 23125 ;;		line 147 in file "mbmc.c"
 23126 ;; Parameters:    Size  Location     Type
 23127 ;;  shape           1  [STACK] unsigned char 
 23128 ;;  reset           1  [STACK] const unsigned char 
 23129 ;; Auto vars:     Size  Location     Type
 23130 ;;  c               1  [STACK] unsigned char 
 23131 ;; Return value:  Size  Location     Type
 23132 ;;                  1  [STACK] unsigned char 
 23133 ;; Registers used:
 23134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 23135 ;; Tracked objects:
 23136 ;;		On entry : 0/0
 23137 ;;		On exit  : 0/0
 23138 ;;		Unchanged: 0/0
 23139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23144 ;;Total ram usage:        0 bytes
 23145 ;; Hardware stack levels used:    1
 23146 ;; Hardware stack levels required when called:   16
 23147 ;; This function calls:
 23148 ;;		_strlen
 23149 ;; This function is called by:
 23150 ;;		_main
 23151 ;;		_current_sensor_cal
 23152 ;; This function uses a reentrant model
 23153 ;;
 23154                           
 23155                           	psect	text69
 23156  0003AE                     __ptext69:
 23157                           	opt callstack 0
 23158  0003AE                     _spinners:
 23159                           	opt callstack 0
 23160                           
 23161                           ; BSR set to: 62
 23162                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23163  0003AE  52E6               	movf	postinc1,f,c
 23164                           
 23165                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 23166                           ;stkvar	_shape @ sp[(-1)+-1]
 23167                           
 23168                           ;incstack = 0
 23169  0003B0  0EFE               	movlw	-2
 23170  0003B2  006F FF8C  F02A    	movff	plusw1,btemp
 23171  0003B8  0E05               	movlw	5
 23172  0003BA  642A               	cpfsgt	btemp^0,c
 23173  0003BC  D002               	goto	l2195
 23174                           
 23175                           ;mbmc.c: 153:   shape = 0;
 23176                           ;stkvar	_shape @ sp[(-1)+-1]
 23177  0003BE  0EFE               	movlw	-2
 23178  0003C0  6AE3               	clrf	plusw1,c
 23179  0003C2                     l2195:
 23180                           
 23181                           ;mbmc.c: 154:  if (reset)
 23182                           ;stkvar	_reset @ sp[(-1)+-2]
 23183  0003C2  0EFD               	movlw	-3
 23184  0003C4  50E3               	movf	plusw1,w,c
 23185  0003C6  B4D8               	btfsc	status,2,c
 23186  0003C8  D00C               	goto	l17121
 23187                           
 23188                           ;mbmc.c: 155:   s[shape] = 0;
 23189                           ;stkvar	_shape @ sp[(-1)+-1]
 23190  0003CA  0EFE               	movlw	-2
 23191  0003CC  50E3               	movf	plusw1,w,c
 23192  0003CE  6E34               	movwf	(btemp+10)^0,c
 23193  0003D0  6A35               	clrf	(btemp+11)^0,c
 23194  0003D2  0ECD               	movlw	low spinners@s
 23195  0003D4  2434               	addwf	(btemp+10)^0,w,c
 23196  0003D6  6ED9               	movwf	fsr2l,c
 23197  0003D8  0E01               	movlw	high spinners@s
 23198  0003DA  2035               	addwfc	(btemp+11)^0,w,c
 23199  0003DC  6EDA               	movwf	fsr2h,c
 23200  0003DE  0E00               	movlw	0
 23201  0003E0  6EDF               	movwf	indf2,c
 23202  0003E2                     l17121:
 23203                           
 23204                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 23205                           ;stkvar	_shape @ sp[(-1)+-1]
 23206  0003E2  0EFE               	movlw	-2
 23207  0003E4  50E3               	movf	plusw1,w,c
 23208  0003E6  0D14               	mullw	20
 23209  0003E8  0ED3               	movlw	low _spin
 23210  0003EA  6E34               	movwf	(btemp+10)^0,c
 23211  0003EC  0EF8               	movlw	high _spin
 23212  0003EE  6E35               	movwf	(btemp+11)^0,c
 23213  0003F0  50F3               	movf	243,w,c
 23214  0003F2  2634               	addwf	(btemp+10)^0,f,c
 23215  0003F4  50F4               	movf	244,w,c
 23216  0003F6  2235               	addwfc	(btemp+11)^0,f,c
 23217                           
 23218                           ;stkvar	_shape @ sp[(-1)+-1]
 23219  0003F8  0EFE               	movlw	-2
 23220  0003FA  50E3               	movf	plusw1,w,c
 23221  0003FC  6E32               	movwf	(btemp+8)^0,c
 23222  0003FE  6A33               	clrf	(btemp+9)^0,c
 23223  000400  0ECD               	movlw	low spinners@s
 23224  000402  2432               	addwf	(btemp+8)^0,w,c
 23225  000404  6ED9               	movwf	fsr2l,c
 23226  000406  0E01               	movlw	high spinners@s
 23227  000408  2033               	addwfc	(btemp+9)^0,w,c
 23228  00040A  6EDA               	movwf	fsr2h,c
 23229  00040C  50DF               	movf	indf2,w,c
 23230  00040E  2634               	addwf	(btemp+10)^0,f,c
 23231  000410  0E00               	movlw	0
 23232  000412  2235               	addwfc	(btemp+11)^0,f,c
 23233  000414  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 23234  00041A  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 23235  000420                     	if	0	;tblptru may be non-zero
 23236  000420                     	endif
 23237  000420                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23238  000420  0E00               	movlw	low (__mediumconst shr (0+16))
 23239  000422  6EF8               	movwf	tblptru,c
 23240  000424                     	endif
 23241                           
 23242                           ;stkvar	_c @ sp[(-1)+0]
 23243  000424  0008               	tblrd		*
 23244  000426  0EFF               	movlw	-1
 23245  000428  006F FFD7 FFE3     	movff	tablat,plusw1
 23246                           
 23247                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 23248                           ;stkvar	_shape @ sp[(-1)+-1]
 23249  00042E  0EFE               	movlw	-2
 23250  000430  50E3               	movf	plusw1,w,c
 23251  000432  0D14               	mullw	20
 23252  000434  0ED3               	movlw	low _spin
 23253  000436  6E34               	movwf	(btemp+10)^0,c
 23254  000438  0EF8               	movlw	high _spin
 23255  00043A  6E35               	movwf	(btemp+11)^0,c
 23256  00043C  50F3               	movf	243,w,c
 23257  00043E  2634               	addwf	(btemp+10)^0,f,c
 23258  000440  50F4               	movf	244,w,c
 23259  000442  2235               	addwfc	(btemp+11)^0,f,c
 23260  000444  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23261  00044A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23262  000450  EC65  F008         	call	_strlen	;wreg free
 23263                           
 23264                           ;stkvar	_shape @ sp[(-1)+-1]
 23265  000454  0EFE               	movlw	-2
 23266  000456  50E3               	movf	plusw1,w,c
 23267  000458  6E34               	movwf	(btemp+10)^0,c
 23268  00045A  6A35               	clrf	(btemp+11)^0,c
 23269  00045C  0ECD               	movlw	low spinners@s
 23270  00045E  2434               	addwf	(btemp+10)^0,w,c
 23271  000460  6ED9               	movwf	fsr2l,c
 23272  000462  0E01               	movlw	high spinners@s
 23273  000464  2035               	addwfc	(btemp+11)^0,w,c
 23274  000466  6EDA               	movwf	fsr2h,c
 23275  000468  2ADF               	incf	indf2,f,c
 23276  00046A  50DF               	movf	indf2,w,c
 23277  00046C  6E34               	movwf	(btemp+10)^0,c
 23278  00046E  6A35               	clrf	(btemp+11)^0,c
 23279  000470  502A               	movf	btemp^0,w,c
 23280  000472  5C34               	subwf	(btemp+10)^0,w,c
 23281  000474  502B               	movf	(btemp+1)^0,w,c
 23282  000476  5835               	subwfb	(btemp+11)^0,w,c
 23283  000478  A0D8               	btfss	status,0,c
 23284  00047A  D00C               	goto	l17127
 23285                           
 23286                           ;mbmc.c: 158:   s[shape] = 0;
 23287                           ;stkvar	_shape @ sp[(-1)+-1]
 23288  00047C  0EFE               	movlw	-2
 23289  00047E  50E3               	movf	plusw1,w,c
 23290  000480  6E34               	movwf	(btemp+10)^0,c
 23291  000482  6A35               	clrf	(btemp+11)^0,c
 23292  000484  0ECD               	movlw	low spinners@s
 23293  000486  2434               	addwf	(btemp+10)^0,w,c
 23294  000488  6ED9               	movwf	fsr2l,c
 23295  00048A  0E01               	movlw	high spinners@s
 23296  00048C  2035               	addwfc	(btemp+11)^0,w,c
 23297  00048E  6EDA               	movwf	fsr2h,c
 23298  000490  0E00               	movlw	0
 23299  000492  6EDF               	movwf	indf2,c
 23300  000494                     l17127:
 23301                           
 23302                           ;mbmc.c: 159:  return c;
 23303                           ;stkvar	_c @ sp[(-1)+0]
 23304  000494  0EFF               	movlw	-1
 23305  000496  006F FF8C  F02A    	movff	plusw1,btemp
 23306                           
 23307                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 23308  00049C  52E5               	movf	postdec1,f,c
 23309  00049E  52E5               	movf	postdec1,f,c
 23310  0004A0  52E5               	movf	postdec1,f,c
 23311  0004A2  0012               	return		;funcret
 23312  0004A4                     __end_of_spinners:
 23313                           	opt callstack 0
 23314                           
 23315 ;; *************** function _get_switch *****************
 23316 ;; Defined at:
 23317 ;;		line 18 in file "dio.c"
 23318 ;; Parameters:    Size  Location     Type
 23319 ;;  i               1  [STACK] const unsigned char 
 23320 ;; Auto vars:     Size  Location     Type
 23321 ;;		None
 23322 ;; Return value:  Size  Location     Type
 23323 ;;                  1  [STACK] enum E17187
 23324 ;; Registers used:
 23325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23326 ;; Tracked objects:
 23327 ;;		On entry : 0/0
 23328 ;;		On exit  : 0/0
 23329 ;;		Unchanged: 0/0
 23330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23335 ;;Total ram usage:        0 bytes
 23336 ;; Hardware stack levels used:    1
 23337 ;; Hardware stack levels required when called:   15
 23338 ;; This function calls:
 23339 ;;		Nothing
 23340 ;; This function is called by:
 23341 ;;		_main
 23342 ;;		_current_sensor_cal
 23343 ;;		_display_history
 23344 ;;		_hid_input
 23345 ;; This function uses a reentrant model
 23346 ;;
 23347                           
 23348                           	psect	text70
 23349  0028D4                     __ptext70:
 23350                           	opt callstack 0
 23351  0028D4                     _get_switch:
 23352                           	opt callstack 13
 23353                           
 23354                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 23355                           ;stkvar	_i @ sp[(0)+-1]
 23356                           
 23357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23358                           ;incstack = 0
 23359  0028D4  0EFF               	movlw	-1
 23360  0028D6  006F FF8C  F02A    	movff	plusw1,btemp
 23361  0028DC  0E05               	movlw	5
 23362  0028DE  642A               	cpfsgt	btemp^0,c
 23363  0028E0  D002               	goto	l12955
 23364                           
 23365                           ;dio.c: 21:   return SW_OFF;
 23366  0028E2  0E00               	movlw	0
 23367  0028E4  D00A               	goto	L20
 23368  0028E6                     l12955:
 23369                           
 23370                           ;dio.c: 23:  return S.button[i].sw;
 23371                           ;stkvar	_i @ sp[(0)+-1]
 23372  0028E6  0EFF               	movlw	-1
 23373  0028E8  50E3               	movf	plusw1,w,c
 23374  0028EA  0D05               	mullw	5
 23375  0028EC  0EA4               	movlw	low _S
 23376  0028EE  24F3               	addwf	243,w,c
 23377  0028F0  6ED9               	movwf	fsr2l,c
 23378  0028F2  0E01               	movlw	high _S
 23379  0028F4  20F4               	addwfc	prodh,w,c
 23380  0028F6  6EDA               	movwf	fsr2h,c
 23381  0028F8  50DF               	movf	indf2,w,c
 23382  0028FA                     L20:
 23383  0028FA  6E2A               	movwf	btemp^0,c
 23384                           
 23385                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23386  0028FC  52E5               	movf	postdec1,f,c
 23387  0028FE  0012               	return		;funcret
 23388  002900                     __end_of_get_switch:
 23389                           	opt callstack 0
 23390                           
 23391 ;; *************** function _clear_switch *****************
 23392 ;; Defined at:
 23393 ;;		line 49 in file "dio.c"
 23394 ;; Parameters:    Size  Location     Type
 23395 ;;  i               1  [STACK] const unsigned char 
 23396 ;; Auto vars:     Size  Location     Type
 23397 ;;		None
 23398 ;; Return value:  Size  Location     Type
 23399 ;;                  1  [STACK] void 
 23400 ;; Registers used:
 23401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 23402 ;; Tracked objects:
 23403 ;;		On entry : 0/0
 23404 ;;		On exit  : 0/0
 23405 ;;		Unchanged: 0/0
 23406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23411 ;;Total ram usage:        0 bytes
 23412 ;; Hardware stack levels used:    1
 23413 ;; Hardware stack levels required when called:   15
 23414 ;; This function calls:
 23415 ;;		Nothing
 23416 ;; This function is called by:
 23417 ;;		_current_sensor_cal
 23418 ;; This function uses a reentrant model
 23419 ;;
 23420                           
 23421                           	psect	text71
 23422  0020B0                     __ptext71:
 23423                           	opt callstack 0
 23424  0020B0                     _clear_switch:
 23425                           	opt callstack 14
 23426                           
 23427                           ;dio.c: 49: void clear_switch(const uint8_t i);dio.c: 50: {;dio.c: 51:  if (i >= 6)
 23428                           ;stkvar	_i @ sp[(0)+-1]
 23429                           
 23430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23431                           ;incstack = 0
 23432  0020B0  0EFF               	movlw	-1
 23433  0020B2  006F FF8C  F02A    	movff	plusw1,btemp
 23434  0020B8  0E05               	movlw	5
 23435  0020BA  642A               	cpfsgt	btemp^0,c
 23436  0020BC  D001               	goto	l13679
 23437  0020BE  D01D               	goto	l2260
 23438  0020C0                     l13679:
 23439                           
 23440                           ;dio.c: 54:  S.button[i].count = 0;
 23441                           ;stkvar	_i @ sp[(0)+-1]
 23442  0020C0  0EFF               	movlw	-1
 23443  0020C2  50E3               	movf	plusw1,w,c
 23444  0020C4  0D05               	mullw	5
 23445  0020C6  0EA5               	movlw	low (_S+1)
 23446  0020C8  24F3               	addwf	243,w,c
 23447  0020CA  6ED9               	movwf	fsr2l,c
 23448  0020CC  0E01               	movlw	high (_S+1)
 23449  0020CE  20F4               	addwfc	prodh,w,c
 23450  0020D0  6EDA               	movwf	fsr2h,c
 23451  0020D2  6ADE               	clrf	postinc2,c
 23452  0020D4  6ADE               	clrf	postinc2,c
 23453  0020D6  6ADE               	clrf	postinc2,c
 23454  0020D8  6ADD               	clrf	postdec2,c
 23455                           
 23456                           ;dio.c: 55:  S.sw_bitmap &= ~(1 << i);
 23457                           ;stkvar	_i @ sp[(0)+-1]
 23458  0020DA  0EFF               	movlw	-1
 23459  0020DC  006F FF8C  F035    	movff	plusw1,btemp+11
 23460  0020E2  0E01               	movlw	1
 23461  0020E4  6E34               	movwf	(btemp+10)^0,c
 23462  0020E6  2A35               	incf	(btemp+11)^0,f,c
 23463  0020E8  D002               	goto	u12754
 23464  0020EA                     u12755:
 23465  0020EA  90D8               	bcf	status,0,c
 23466  0020EC  3634               	rlcf	(btemp+10)^0,f,c
 23467  0020EE                     u12754:
 23468  0020EE  2E35               	decfsz	(btemp+11)^0,f,c
 23469  0020F0  D7FC               	goto	u12755
 23470  0020F2  5034               	movf	(btemp+10)^0,w,c
 23471  0020F4  0AFF               	xorlw	255
 23472  0020F6  0101               	movlb	1	; () banked
 23473  0020F8  17CC               	andwf	(_S+40)& (0+255),f,b	;volatile
 23474  0020FA                     l2260:
 23475                           
 23476                           ; _clear_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 23477  0020FA  52E5               	movf	postdec1,f,c
 23478  0020FC  0012               	return		;funcret
 23479  0020FE                     __end_of_clear_switch:
 23480                           	opt callstack 0
 23481                           
 23482 ;; *************** function _clear_adc_scan *****************
 23483 ;; Defined at:
 23484 ;;		line 103 in file "daq.c"
 23485 ;; Parameters:    Size  Location     Type
 23486 ;;		None
 23487 ;; Auto vars:     Size  Location     Type
 23488 ;;		None
 23489 ;; Return value:  Size  Location     Type
 23490 ;;                  1  [STACK] void 
 23491 ;; Registers used:
 23492 ;;		None
 23493 ;; Tracked objects:
 23494 ;;		On entry : 0/0
 23495 ;;		On exit  : 3F/1
 23496 ;;		Unchanged: 0/0
 23497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23502 ;;Total ram usage:        0 bytes
 23503 ;; Hardware stack levels used:    1
 23504 ;; Hardware stack levels required when called:   15
 23505 ;; This function calls:
 23506 ;;		Nothing
 23507 ;; This function is called by:
 23508 ;;		_main
 23509 ;;		_current_sensor_cal
 23510 ;;		_update_adc_result
 23511 ;; This function uses a reentrant model
 23512 ;;
 23513                           
 23514                           	psect	text72
 23515  002FDA                     __ptext72:
 23516                           	opt callstack 0
 23517  002FDA                     _clear_adc_scan:
 23518                           	opt callstack 13
 23519                           
 23520                           ;daq.c: 105:  R.done = 0;
 23521                           
 23522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23523                           ;incstack = 0
 23524  002FDA  0101               	movlb	1	; () banked
 23525  002FDC  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 23526                           
 23527                           ; BSR set to: 1
 23528                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23529  002FDE  0012               	return		;funcret
 23530  002FE0                     __end_of_clear_adc_scan:
 23531                           	opt callstack 0
 23532                           
 23533 ;; *************** function _cal_current_zero *****************
 23534 ;; Defined at:
 23535 ;;		line 329 in file "daq.c"
 23536 ;; Parameters:    Size  Location     Type
 23537 ;;  mode            1  [STACK] const _Bool 
 23538 ;;  cb              2  [STACK] const short 
 23539 ;;  cp              2  [STACK] const short 
 23540 ;; Auto vars:     Size  Location     Type
 23541 ;;		None
 23542 ;; Return value:  Size  Location     Type
 23543 ;;                  1  [STACK] _Bool 
 23544 ;; Registers used:
 23545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23546 ;; Tracked objects:
 23547 ;;		On entry : 0/1
 23548 ;;		On exit  : 0/0
 23549 ;;		Unchanged: 0/0
 23550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23555 ;;Total ram usage:        0 bytes
 23556 ;; Hardware stack levels used:    1
 23557 ;; Hardware stack levels required when called:   16
 23558 ;; This function calls:
 23559 ;;		_check_range
 23560 ;; This function is called by:
 23561 ;;		_current_sensor_cal
 23562 ;; This function uses a reentrant model
 23563 ;;
 23564                           
 23565                           	psect	text73
 23566  00129E                     __ptext73:
 23567                           	opt callstack 0
 23568  00129E                     _cal_current_zero:
 23569                           	opt callstack 13
 23570                           
 23571                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 23572                           
 23573                           ; BSR set to: 1
 23574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23575                           ;incstack = 0
 23576  00129E  0EA0               	movlw	160
 23577  0012A0  6EE6               	movwf	postinc1,c
 23578  0012A2  0E0F               	movlw	15
 23579  0012A4  6EE6               	movwf	postinc1,c
 23580  0012A6  0E64               	movlw	100
 23581  0012A8  6EE6               	movwf	postinc1,c
 23582  0012AA  0E00               	movlw	0
 23583  0012AC  6EE6               	movwf	postinc1,c
 23584                           
 23585                           ;stkvar	_cb @ sp[(-4)+-3]
 23586  0012AE  0EF9               	movlw	-7
 23587  0012B0  006F FF8F FFE6     	movff	plusw1,postinc1
 23588  0012B6  006F FF8F FFE6     	movff	plusw1,postinc1
 23589  0012BC  ECC5  F00B         	call	_check_range	;wreg free
 23590  0012C0  502A               	movf	btemp^0,w,c
 23591  0012C2  A4D8               	btfss	status,2,c
 23592  0012C4  D002               	goto	l13655
 23593  0012C6                     u12710:
 23594                           
 23595                           ;daq.c: 333:   return 0;
 23596  0012C6  0E00               	movlw	0
 23597  0012C8  D019               	goto	L21
 23598  0012CA                     l13655:
 23599                           
 23600                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 23601  0012CA  0EA0               	movlw	160
 23602  0012CC  6EE6               	movwf	postinc1,c
 23603  0012CE  0E0F               	movlw	15
 23604  0012D0  6EE6               	movwf	postinc1,c
 23605  0012D2  0E64               	movlw	100
 23606  0012D4  6EE6               	movwf	postinc1,c
 23607  0012D6  0E00               	movlw	0
 23608  0012D8  6EE6               	movwf	postinc1,c
 23609                           
 23610                           ;stkvar	_cp @ sp[(-4)+-5]
 23611  0012DA  0EF7               	movlw	-9
 23612  0012DC  006F FF8F FFE6     	movff	plusw1,postinc1
 23613  0012E2  006F FF8F FFE6     	movff	plusw1,postinc1
 23614  0012E8  ECC5  F00B         	call	_check_range	;wreg free
 23615  0012EC  502A               	movf	btemp^0,w,c
 23616  0012EE  B4D8               	btfsc	status,2,c
 23617  0012F0  D7EA               	goto	u12710
 23618                           
 23619                           ;daq.c: 338:  if (!mode)
 23620                           ;stkvar	_mode @ sp[(0)+-1]
 23621  0012F2  0EFF               	movlw	-1
 23622  0012F4  50E3               	movf	plusw1,w,c
 23623  0012F6  A4D8               	btfss	status,2,c
 23624  0012F8  D003               	goto	l13667
 23625  0012FA                     u12730:
 23626                           
 23627                           ;daq.c: 339:   return 1;
 23628  0012FA  0E01               	movlw	1
 23629  0012FC                     L21:
 23630  0012FC  6E2A               	movwf	btemp^0,c
 23631  0012FE  D013               	goto	l2069
 23632  001300                     l13667:
 23633                           
 23634                           ;daq.c: 341:  R.n_offset[0] = cb;
 23635                           ;stkvar	_cb @ sp[(0)+-3]
 23636  001300  0EFD               	movlw	-3
 23637  001302  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 23638  001308  0EFE               	movlw	-2
 23639  00130A  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 23640                           
 23641                           ;daq.c: 342:  R.n_offset[1] = cp;
 23642                           ;stkvar	_cp @ sp[(0)+-5]
 23643  001310  0EFB               	movlw	-5
 23644  001312  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 23645  001318  0EFC               	movlw	-4
 23646  00131A  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 23647                           
 23648                           ;daq.c: 343:  R.c_zero_cal = 1;
 23649  001320  0101               	movlb	1	; () banked
 23650  001322  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 23651  001324  D7EA               	goto	u12730
 23652  001326                     l2069:
 23653                           
 23654                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 23655  001326  0EFB               	movlw	251
 23656  001328  26E1               	addwf	fsr1l,f,c
 23657  00132A  0EFF               	movlw	255
 23658  00132C  22E2               	addwfc	fsr1h,f,c
 23659  00132E  0012               	return		;funcret
 23660  001330                     __end_of_cal_current_zero:
 23661                           	opt callstack 0
 23662                           
 23663 ;; *************** function _cal_current_10A *****************
 23664 ;; Defined at:
 23665 ;;		line 350 in file "daq.c"
 23666 ;; Parameters:    Size  Location     Type
 23667 ;;  mode            1  [STACK] const _Bool 
 23668 ;;  cb              2  [STACK] const short 
 23669 ;;  cp              2  [STACK] const short 
 23670 ;;  scaleb          4  [STACK] const float 
 23671 ;;  scalep          4  [STACK] const float 
 23672 ;; Auto vars:     Size  Location     Type
 23673 ;;		None
 23674 ;; Return value:  Size  Location     Type
 23675 ;;                  1  [STACK] _Bool 
 23676 ;; Registers used:
 23677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 23678 ;; Tracked objects:
 23679 ;;		On entry : 0/1
 23680 ;;		On exit  : 0/0
 23681 ;;		Unchanged: 0/0
 23682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23687 ;;Total ram usage:        0 bytes
 23688 ;; Hardware stack levels used:    1
 23689 ;; Hardware stack levels required when called:   16
 23690 ;; This function calls:
 23691 ;;		_check_range
 23692 ;; This function is called by:
 23693 ;;		_current_sensor_cal
 23694 ;; This function uses a reentrant model
 23695 ;;
 23696                           
 23697                           	psect	text74
 23698  0009DA                     __ptext74:
 23699                           	opt callstack 0
 23700  0009DA                     _cal_current_10A:
 23701                           	opt callstack 13
 23702                           
 23703                           ;daq.c: 350: _Bool cal_current_10A(const _Bool mode, const int16_t cb, const int16_t cp,
      +                           const float scaleb, const float scalep);daq.c: 351: {;daq.c: 352:  if (!check_range(cb,
      +                           100, 4050))
 23704                           
 23705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 13, argsize = 13 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 23706                           ;incstack = 0
 23707  0009DA  0ED2               	movlw	210
 23708  0009DC  6EE6               	movwf	postinc1,c
 23709  0009DE  0E0F               	movlw	15
 23710  0009E0  6EE6               	movwf	postinc1,c
 23711  0009E2  0E64               	movlw	100
 23712  0009E4  6EE6               	movwf	postinc1,c
 23713  0009E6  0E00               	movlw	0
 23714  0009E8  6EE6               	movwf	postinc1,c
 23715                           
 23716                           ;stkvar	_cb @ sp[(-4)+-3]
 23717  0009EA  0EF9               	movlw	-7
 23718  0009EC  006F FF8F FFE6     	movff	plusw1,postinc1
 23719  0009F2  006F FF8F FFE6     	movff	plusw1,postinc1
 23720  0009F8  ECC5  F00B         	call	_check_range	;wreg free
 23721  0009FC  502A               	movf	btemp^0,w,c
 23722  0009FE  A4D8               	btfss	status,2,c
 23723  000A00  D002               	goto	l13689
 23724  000A02                     u12760:
 23725                           
 23726                           ;daq.c: 353:   return 0;
 23727  000A02  0E00               	movlw	0
 23728  000A04  D019               	goto	L22
 23729  000A06                     l13689:
 23730                           
 23731                           ;daq.c: 355:  if (!check_range(cp, 100, 4278))
 23732  000A06  0EB6               	movlw	182
 23733  000A08  6EE6               	movwf	postinc1,c
 23734  000A0A  0E10               	movlw	16
 23735  000A0C  6EE6               	movwf	postinc1,c
 23736  000A0E  0E64               	movlw	100
 23737  000A10  6EE6               	movwf	postinc1,c
 23738  000A12  0E00               	movlw	0
 23739  000A14  6EE6               	movwf	postinc1,c
 23740                           
 23741                           ;stkvar	_cp @ sp[(-4)+-5]
 23742  000A16  0EF7               	movlw	-9
 23743  000A18  006F FF8F FFE6     	movff	plusw1,postinc1
 23744  000A1E  006F FF8F FFE6     	movff	plusw1,postinc1
 23745  000A24  ECC5  F00B         	call	_check_range	;wreg free
 23746  000A28  502A               	movf	btemp^0,w,c
 23747  000A2A  B4D8               	btfsc	status,2,c
 23748  000A2C  D7EA               	goto	u12760
 23749                           
 23750                           ;daq.c: 358:  if (!mode)
 23751                           ;stkvar	_mode @ sp[(0)+-1]
 23752  000A2E  0EFF               	movlw	-1
 23753  000A30  50E3               	movf	plusw1,w,c
 23754  000A32  A4D8               	btfss	status,2,c
 23755  000A34  D003               	goto	l13701
 23756  000A36                     u12780:
 23757                           
 23758                           ;daq.c: 359:   return 1;
 23759  000A36  0E01               	movlw	1
 23760  000A38                     L22:
 23761  000A38  6E2A               	movwf	btemp^0,c
 23762  000A3A  D029               	goto	l2075
 23763  000A3C                     l13701:
 23764                           
 23765                           ;daq.c: 361:  R.n_scalar[0] = scaleb;
 23766                           ;stkvar	_scaleb @ sp[(0)+-9]
 23767  000A3C  50E1               	movf	fsr1l,w,c
 23768  000A3E  0FF7               	addlw	-9
 23769  000A40  6ED9               	movwf	fsr2l,c
 23770  000A42  50E2               	movf	fsr1h,w,c
 23771  000A44  6EDA               	movwf	fsr2h,c
 23772  000A46  0EFF               	movlw	255
 23773  000A48  22DA               	addwfc	fsr2h,f,c
 23774  000A4A  006F FF78  F12A    	movff	postinc2,_R+42	;volatile
 23775  000A50  006F FF78  F12B    	movff	postinc2,_R+43	;volatile
 23776  000A56  006F FF78  F12C    	movff	postinc2,_R+44	;volatile
 23777  000A5C  006F FF78  F12D    	movff	postinc2,_R+45	;volatile
 23778                           
 23779                           ;daq.c: 362:  R.n_scalar[1] = scalep;
 23780                           ;stkvar	_scalep @ sp[(0)+-13]
 23781  000A62  50E1               	movf	fsr1l,w,c
 23782  000A64  0FF3               	addlw	-13
 23783  000A66  6ED9               	movwf	fsr2l,c
 23784  000A68  50E2               	movf	fsr1h,w,c
 23785  000A6A  6EDA               	movwf	fsr2h,c
 23786  000A6C  0EFF               	movlw	255
 23787  000A6E  22DA               	addwfc	fsr2h,f,c
 23788  000A70  006F FF78  F12E    	movff	postinc2,_R+46	;volatile
 23789  000A76  006F FF78  F12F    	movff	postinc2,_R+47	;volatile
 23790  000A7C  006F FF78  F130    	movff	postinc2,_R+48	;volatile
 23791  000A82  006F FF78  F131    	movff	postinc2,_R+49	;volatile
 23792                           
 23793                           ;daq.c: 363:  R.c_scale_cal = 1;
 23794  000A88  0101               	movlb	1	; () banked
 23795  000A8A  8797               	bsf	(_R+151)& (0+255),3,b	;volatile
 23796  000A8C  D7D4               	goto	u12780
 23797  000A8E                     l2075:
 23798                           
 23799                           ; _cal_current_10A: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          13, argsize = 13, vargsize = 0
 23800  000A8E  0EF3               	movlw	243
 23801  000A90  26E1               	addwf	fsr1l,f,c
 23802  000A92  0EFF               	movlw	255
 23803  000A94  22E2               	addwfc	fsr1h,f,c
 23804  000A96  0012               	return		;funcret
 23805  000A98                     __end_of_cal_current_10A:
 23806                           	opt callstack 0
 23807                           
 23808 ;; *************** function _check_range *****************
 23809 ;; Defined at:
 23810 ;;		line 317 in file "daq.c"
 23811 ;; Parameters:    Size  Location     Type
 23812 ;;  value           2  [STACK] const short 
 23813 ;;  window          2  [STACK] const short 
 23814 ;;  standard        2  [STACK] const short 
 23815 ;; Auto vars:     Size  Location     Type
 23816 ;;		None
 23817 ;; Return value:  Size  Location     Type
 23818 ;;                  1  [STACK] _Bool 
 23819 ;; Registers used:
 23820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23821 ;; Tracked objects:
 23822 ;;		On entry : 0/1
 23823 ;;		On exit  : 0/0
 23824 ;;		Unchanged: 0/0
 23825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23830 ;;Total ram usage:        0 bytes
 23831 ;; Hardware stack levels used:    1
 23832 ;; Hardware stack levels required when called:   15
 23833 ;; This function calls:
 23834 ;;		Nothing
 23835 ;; This function is called by:
 23836 ;;		_cal_current_zero
 23837 ;;		_cal_current_10A
 23838 ;; This function uses a reentrant model
 23839 ;;
 23840                           
 23841                           	psect	text75
 23842  00178A                     __ptext75:
 23843                           	opt callstack 0
 23844  00178A                     _check_range:
 23845                           	opt callstack 13
 23846                           
 23847                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 23848                           ;stkvar	_value @ sp[(0)+-2]
 23849                           ;stkvar	_window @ sp[(0)+-4]
 23850                           ;stkvar	_standard @ sp[(0)+-6]
 23851                           
 23852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23853                           ;incstack = 0
 23854  00178A  0EFA               	movlw	-6
 23855  00178C  006F FF8C  F034    	movff	plusw1,btemp+10
 23856  001792  0EFB               	movlw	-5
 23857  001794  006F FF8C  F035    	movff	plusw1,btemp+11
 23858  00179A  0EFC               	movlw	-4
 23859  00179C  50E3               	movf	plusw1,w,c
 23860  00179E  2634               	addwf	(btemp+10)^0,f,c
 23861  0017A0  0EFD               	movlw	-3
 23862  0017A2  50E3               	movf	plusw1,w,c
 23863  0017A4  2235               	addwfc	(btemp+11)^0,f,c
 23864  0017A6  0EFE               	movlw	-2
 23865  0017A8  50E3               	movf	plusw1,w,c
 23866  0017AA  5C34               	subwf	(btemp+10)^0,w,c
 23867  0017AC  5035               	movf	(btemp+11)^0,w,c
 23868  0017AE  0A80               	xorlw	128
 23869  0017B0  6E2A               	movwf	btemp^0,c
 23870  0017B2  0EFF               	movlw	-1
 23871  0017B4  50E3               	movf	plusw1,w,c
 23872  0017B6  0A80               	xorlw	128
 23873  0017B8  582A               	subwfb	btemp^0,w,c
 23874  0017BA  B0D8               	btfsc	status,0,c
 23875  0017BC  D002               	goto	l13027
 23876  0017BE                     u12440:
 23877                           
 23878                           ;daq.c: 320:   return 0;
 23879  0017BE  0E00               	movlw	0
 23880  0017C0  D01E               	goto	L23
 23881  0017C2                     l13027:
 23882                           
 23883                           ;daq.c: 321:  if (value < (standard - window))
 23884                           ;stkvar	_window @ sp[(0)+-4]
 23885                           ;stkvar	_standard @ sp[(0)+-6]
 23886  0017C2  0EFA               	movlw	-6
 23887  0017C4  006F FF8C  F034    	movff	plusw1,btemp+10
 23888  0017CA  0EFB               	movlw	-5
 23889  0017CC  006F FF8C  F035    	movff	plusw1,btemp+11
 23890  0017D2  0EFC               	movlw	-4
 23891  0017D4  50E3               	movf	plusw1,w,c
 23892  0017D6  5E34               	subwf	(btemp+10)^0,f,c
 23893  0017D8  0EFD               	movlw	-3
 23894  0017DA  50E3               	movf	plusw1,w,c
 23895  0017DC  5A35               	subwfb	(btemp+11)^0,f,c
 23896                           
 23897                           ;stkvar	_value @ sp[(0)+-2]
 23898  0017DE  0EFE               	movlw	-2
 23899  0017E0  006F FF8C  F02A    	movff	plusw1,btemp
 23900  0017E6  5034               	movf	(btemp+10)^0,w,c
 23901  0017E8  5C2A               	subwf	btemp^0,w,c
 23902  0017EA  0EFF               	movlw	-1
 23903  0017EC  50E3               	movf	plusw1,w,c
 23904  0017EE  0A80               	xorlw	128
 23905  0017F0  6E2A               	movwf	btemp^0,c
 23906  0017F2  5035               	movf	(btemp+11)^0,w,c
 23907  0017F4  0A80               	xorlw	128
 23908  0017F6  582A               	subwfb	btemp^0,w,c
 23909  0017F8  A0D8               	btfss	status,0,c
 23910  0017FA  D7E1               	goto	u12440
 23911                           
 23912                           ;daq.c: 323:  return 1;
 23913  0017FC  0E01               	movlw	1
 23914  0017FE                     L23:
 23915  0017FE  6E2A               	movwf	btemp^0,c
 23916                           
 23917                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 23918  001800  0EFA               	movlw	250
 23919  001802  26E1               	addwf	fsr1l,f,c
 23920  001804  0EFF               	movlw	255
 23921  001806  22E2               	addwfc	fsr1h,f,c
 23922  001808  0012               	return		;funcret
 23923  00180A                     __end_of_check_range:
 23924                           	opt callstack 0
 23925                           
 23926 ;; *************** function _convert_adc_data *****************
 23927 ;; Defined at:
 23928 ;;		line 51 in file "mbmc.c"
 23929 ;; Parameters:    Size  Location     Type
 23930 ;;		None
 23931 ;; Auto vars:     Size  Location     Type
 23932 ;;  i               1  [STACK] unsigned char 
 23933 ;; Return value:  Size  Location     Type
 23934 ;;                  1  [STACK] void 
 23935 ;; Registers used:
 23936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23937 ;; Tracked objects:
 23938 ;;		On entry : 0/2
 23939 ;;		On exit  : 0/0
 23940 ;;		Unchanged: 0/0
 23941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23946 ;;Total ram usage:        0 bytes
 23947 ;; Hardware stack levels used:    1
 23948 ;; Hardware stack levels required when called:   18
 23949 ;; This function calls:
 23950 ;;		_conv_raw_result
 23951 ;;		_lp_filter
 23952 ;; This function is called by:
 23953 ;;		_main
 23954 ;; This function uses a reentrant model
 23955 ;;
 23956                           
 23957                           	psect	text76
 23958  000C0E                     __ptext76:
 23959                           	opt callstack 0
 23960  000C0E                     _convert_adc_data:
 23961                           	opt callstack 0
 23962                           
 23963                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23964  000C0E  52E6               	movf	postinc1,f,c
 23965                           
 23966                           ;mbmc.c: 53:  uint8_t i = 0;
 23967                           ;stkvar	_i @ sp[(-1)+0]
 23968                           
 23969                           ;incstack = 0
 23970  000C10  0EFF               	movlw	-1
 23971  000C12  6AE3               	clrf	plusw1,c
 23972  000C14                     l14581:
 23973                           
 23974                           ;mbmc.c: 56:   if (V.calib) {
 23975  000C14  0102               	movlb	2	; () banked
 23976  000C16  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 23977  000C18  B4D8               	btfsc	status,2,c
 23978  000C1A  D01B               	goto	l14585
 23979                           
 23980                           ; BSR set to: 2
 23981                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 23982  000C1C  0E01               	movlw	1
 23983  000C1E  6EE6               	movwf	postinc1,c
 23984                           
 23985                           ;stkvar	_i @ sp[(-2)+0]
 23986  000C20  0EFE               	movlw	-2
 23987  000C22  50E3               	movf	plusw1,w,c
 23988  000C24  6EE6               	movwf	postinc1,c
 23989  000C26  0E01               	movlw	1
 23990  000C28  6EE6               	movwf	postinc1,c
 23991                           
 23992                           ;stkvar	_i @ sp[(-4)+0]
 23993  000C2A  0EFC               	movlw	-4
 23994  000C2C  50E3               	movf	plusw1,w,c
 23995  000C2E  6EE6               	movwf	postinc1,c
 23996  000C30  EC00  F0C9         	call	_conv_raw_result	;wreg free
 23997  000C34  0060  F0AB  FFE6   	movff	btemp,postinc1
 23998  000C3A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23999  000C40  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 24000  000C46  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 24001  000C4C  EC36  F0EF         	call	_lp_filter	;wreg free
 24002  000C50  D01A               	goto	L24
 24003  000C52                     l14585:
 24004                           
 24005                           ; BSR set to: 2
 24006                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 24007  000C52  0E00               	movlw	0
 24008  000C54  6EE6               	movwf	postinc1,c
 24009                           
 24010                           ;stkvar	_i @ sp[(-2)+0]
 24011  000C56  0EFE               	movlw	-2
 24012  000C58  50E3               	movf	plusw1,w,c
 24013  000C5A  6EE6               	movwf	postinc1,c
 24014  000C5C  0E00               	movlw	0
 24015  000C5E  6EE6               	movwf	postinc1,c
 24016                           
 24017                           ;stkvar	_i @ sp[(-4)+0]
 24018  000C60  0EFC               	movlw	-4
 24019  000C62  50E3               	movf	plusw1,w,c
 24020  000C64  6EE6               	movwf	postinc1,c
 24021  000C66  EC00  F0C9         	call	_conv_raw_result	;wreg free
 24022  000C6A  0060  F0AB  FFE6   	movff	btemp,postinc1
 24023  000C70  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24024  000C76  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 24025  000C7C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 24026  000C82  EC36  F0EF         	call	_lp_filter	;wreg free
 24027  000C86                     L24:
 24028                           
 24029                           ;stkvar	_i @ sp[(-1)+0]
 24030  000C86  0EFF               	movlw	-1
 24031  000C88  50E3               	movf	plusw1,w,c
 24032  000C8A  0D04               	mullw	4
 24033  000C8C  0EFF               	movlw	low _C
 24034  000C8E  24F3               	addwf	243,w,c
 24035  000C90  6ED9               	movwf	fsr2l,c
 24036  000C92  0E08               	movlw	high _C
 24037  000C94  20F4               	addwfc	prodh,w,c
 24038  000C96  6EDA               	movwf	fsr2h,c
 24039  000C98  0060  F0AB  FFDE   	movff	btemp,postinc2
 24040  000C9E  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 24041  000CA4  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 24042  000CAA  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 24043                           
 24044                           ;mbmc.c: 61:  } while (++i < 16);
 24045                           ;stkvar	_i @ sp[(-1)+0]
 24046  000CB0  0EFF               	movlw	-1
 24047  000CB2  2AE3               	incf	plusw1,f,c
 24048  000CB4  0EFF               	movlw	-1
 24049  000CB6  006F FF8C  F02A    	movff	plusw1,btemp
 24050  000CBC  0E0F               	movlw	15
 24051  000CBE  642A               	cpfsgt	btemp^0,c
 24052  000CC0  D7A9               	goto	l14581
 24053                           
 24054                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24055  000CC2  52E5               	movf	postdec1,f,c
 24056  000CC4  0012               	return		;funcret
 24057  000CC6                     __end_of_convert_adc_data:
 24058                           	opt callstack 0
 24059                           
 24060 ;; *************** function _clear_hid_pflags *****************
 24061 ;; Defined at:
 24062 ;;		line 67 in file "hid.c"
 24063 ;; Parameters:    Size  Location     Type
 24064 ;;  h               2  [STACK] PTR struct H_data
 24065 ;;		 -> H(9), 
 24066 ;; Auto vars:     Size  Location     Type
 24067 ;;		None
 24068 ;; Return value:  Size  Location     Type
 24069 ;;                  1  [STACK] void 
 24070 ;; Registers used:
 24071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 24072 ;; Tracked objects:
 24073 ;;		On entry : 3E/0
 24074 ;;		On exit  : 0/0
 24075 ;;		Unchanged: 0/0
 24076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24081 ;;Total ram usage:        0 bytes
 24082 ;; Hardware stack levels used:    1
 24083 ;; Hardware stack levels required when called:   15
 24084 ;; This function calls:
 24085 ;;		Nothing
 24086 ;; This function is called by:
 24087 ;;		_main
 24088 ;; This function uses a reentrant model
 24089 ;;
 24090                           
 24091                           	psect	text77
 24092  001B92                     __ptext77:
 24093                           	opt callstack 0
 24094  001B92                     _clear_hid_pflags:
 24095                           	opt callstack 15
 24096                           
 24097                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 24098                           ;stkvar	_h @ sp[(0)+-2]
 24099                           
 24100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24101                           ;incstack = 0
 24102  001B92  0EFE               	movlw	-2
 24103  001B94  006F FF8C  F034    	movff	plusw1,btemp+10
 24104  001B9A  0EFF               	movlw	-1
 24105  001B9C  006F FF8C  F035    	movff	plusw1,btemp+11
 24106  001BA2  0E03               	movlw	3
 24107  001BA4  2434               	addwf	(btemp+10)^0,w,c
 24108  001BA6  6ED9               	movwf	fsr2l,c
 24109  001BA8  0E00               	movlw	0
 24110  001BAA  2035               	addwfc	(btemp+11)^0,w,c
 24111  001BAC  6EDA               	movwf	fsr2h,c
 24112  001BAE  0E00               	movlw	0
 24113  001BB0  6EDF               	movwf	indf2,c
 24114                           
 24115                           ;hid.c: 70:  h->enter_p = SW_OFF;
 24116                           ;stkvar	_h @ sp[(0)+-2]
 24117  001BB2  0EFE               	movlw	-2
 24118  001BB4  006F FF8C  F034    	movff	plusw1,btemp+10
 24119  001BBA  0EFF               	movlw	-1
 24120  001BBC  006F FF8C  F035    	movff	plusw1,btemp+11
 24121  001BC2  0E05               	movlw	5
 24122  001BC4  2434               	addwf	(btemp+10)^0,w,c
 24123  001BC6  6ED9               	movwf	fsr2l,c
 24124  001BC8  0E00               	movlw	0
 24125  001BCA  2035               	addwfc	(btemp+11)^0,w,c
 24126  001BCC  6EDA               	movwf	fsr2h,c
 24127  001BCE  0E00               	movlw	0
 24128  001BD0  6EDF               	movwf	indf2,c
 24129                           
 24130                           ;hid.c: 71:  h->calib_p = SW_OFF;
 24131                           ;stkvar	_h @ sp[(0)+-2]
 24132  001BD2  0EFE               	movlw	-2
 24133  001BD4  006F FF8C  F034    	movff	plusw1,btemp+10
 24134  001BDA  0EFF               	movlw	-1
 24135  001BDC  006F FF8C  F035    	movff	plusw1,btemp+11
 24136  001BE2  0E07               	movlw	7
 24137  001BE4  2434               	addwf	(btemp+10)^0,w,c
 24138  001BE6  6ED9               	movwf	fsr2l,c
 24139  001BE8  0E00               	movlw	0
 24140  001BEA  2035               	addwfc	(btemp+11)^0,w,c
 24141  001BEC  6EDA               	movwf	fsr2h,c
 24142  001BEE  0E00               	movlw	0
 24143  001BF0  6EDF               	movwf	indf2,c
 24144                           
 24145                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 24146  001BF2  52E5               	movf	postdec1,f,c
 24147  001BF4  52E5               	movf	postdec1,f,c
 24148  001BF6  0012               	return		;funcret
 24149  001BF8                     __end_of_clear_hid_pflags:
 24150                           	opt callstack 0
 24151                           
 24152 ;; *************** function _check_help *****************
 24153 ;; Defined at:
 24154 ;;		line 40 in file "mconfig.c"
 24155 ;; Parameters:    Size  Location     Type
 24156 ;;  flipper         1  [STACK] const _Bool 
 24157 ;; Auto vars:     Size  Location     Type
 24158 ;;  estatus         1    0        _Bool 
 24159 ;; Return value:  Size  Location     Type
 24160 ;;                  1  [STACK] _Bool 
 24161 ;; Registers used:
 24162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24163 ;; Tracked objects:
 24164 ;;		On entry : 3F/2
 24165 ;;		On exit  : 0/0
 24166 ;;		Unchanged: 0/0
 24167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24172 ;;Total ram usage:        0 bytes
 24173 ;; Hardware stack levels used:    1
 24174 ;; Hardware stack levels required when called:   27
 24175 ;; This function calls:
 24176 ;;		_StartTimer
 24177 ;;		_TimerDone
 24178 ;;		_display_help
 24179 ;;		_display_info
 24180 ;;		_get_vterm_ptr
 24181 ;;		_help_button
 24182 ;;		_mode_lamp_bright
 24183 ;;		_mode_lamp_dim
 24184 ;;		_set_display_info
 24185 ;;		_set_temp_display_help
 24186 ;;		_set_vterm
 24187 ;;		_sprintf
 24188 ;;		_update_lcd
 24189 ;;		_vterm_dump
 24190 ;; This function is called by:
 24191 ;;		_main
 24192 ;; This function uses a reentrant model
 24193 ;;
 24194                           
 24195                           	psect	text78
 24196  01D88C                     __ptext78:
 24197                           	opt callstack 0
 24198  01D88C                     _check_help:
 24199                           	opt callstack 3
 24200                           
 24201                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 24202                           
 24203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24204                           ;incstack = 0
 24205  01D88C  EC04  F013         	call	_help_button	;wreg free
 24206  01D890  502A               	movf	btemp^0,w,c
 24207  01D892  B4D8               	btfsc	status,2,c
 24208  01D894  D0D0               	goto	l17643
 24209  01D896  ECDB  F017         	call	_display_info	;wreg free
 24210  01D89A  042A               	decf	btemp^0,w,c
 24211  01D89C  B4D8               	btfsc	status,2,c
 24212  01D89E  D0CB               	goto	l17643
 24213                           
 24214                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 24215  01D8A0  0EDC               	movlw	220
 24216  01D8A2  6EE6               	movwf	postinc1,c
 24217  01D8A4  0E05               	movlw	5
 24218  01D8A6  6EE6               	movwf	postinc1,c
 24219  01D8A8  0E0B               	movlw	11
 24220  01D8AA  6EE6               	movwf	postinc1,c
 24221  01D8AC  EC49  F012         	call	_StartTimer	;wreg free
 24222                           
 24223                           ;mconfig.c: 48:   if (V.debug)
 24224  01D8B0  0102               	movlb	2	; () banked
 24225  01D8B2  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 24226                           
 24227                           ; BSR set to: 2
 24228                           ;mconfig.c: 49:    vterm_dump();
 24229  01D8B4  EC7A  F0F2         	call	_vterm_dump	;wreg free
 24230                           
 24231                           ;mconfig.c: 51:   set_vterm(1);
 24232  01D8B8  0E01               	movlw	1
 24233  01D8BA  6EE6               	movwf	postinc1,c
 24234  01D8BC  ECCB  F016         	call	_set_vterm	;wreg free
 24235                           
 24236                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 24237  01D8C0  ECDB  F017         	call	_display_info	;wreg free
 24238  01D8C4  502A               	movf	btemp^0,w,c
 24239  01D8C6  6EE6               	movwf	postinc1,c
 24240  01D8C8  EC7B  F017         	call	_set_temp_display_help	;wreg free
 24241                           
 24242                           ; BSR set to: 2
 24243                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 24244  01D8CC  0E01               	movlw	1
 24245  01D8CE  6EE6               	movwf	postinc1,c
 24246  01D8D0  ECDA  F016         	call	_set_display_info	;wreg free
 24247                           
 24248                           ;mconfig.c: 54:   if (flipper) {
 24249                           ;stkvar	_flipper @ sp[(0)+-1]
 24250  01D8D4  0EFF               	movlw	-1
 24251  01D8D6  50E3               	movf	plusw1,w,c
 24252  01D8D8  B4D8               	btfsc	status,2,c
 24253  01D8DA  D019               	goto	l17629
 24254                           
 24255                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 24256  01D8DC  0EB6               	movlw	low STR_83
 24257  01D8DE  6EE6               	movwf	postinc1,c
 24258  01D8E0  0EFF               	movlw	high STR_83
 24259  01D8E2  6EE6               	movwf	postinc1,c
 24260  01D8E4  0E5E               	movlw	low STR_85
 24261  01D8E6  6EE6               	movwf	postinc1,c
 24262  01D8E8  0EFF               	movlw	high STR_85
 24263  01D8EA  6EE6               	movwf	postinc1,c
 24264  01D8EC  0E01               	movlw	1
 24265  01D8EE  6EE6               	movwf	postinc1,c
 24266  01D8F0  0E00               	movlw	0
 24267  01D8F2  6EE6               	movwf	postinc1,c
 24268  01D8F4  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24269  01D8F8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24270  01D8FE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24271  01D904  0E06               	movlw	6
 24272  01D906  6EE6               	movwf	postinc1,c
 24273  01D908  EC5B  F000         	call	_sprintf	;wreg free
 24274                           
 24275                           ;mconfig.c: 56:   } else {
 24276  01D90C  D018               	goto	l1840
 24277  01D90E                     l17629:
 24278                           
 24279                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 24280  01D90E  0ECC               	movlw	low STR_84
 24281  01D910  6EE6               	movwf	postinc1,c
 24282  01D912  0EFF               	movlw	high STR_84
 24283  01D914  6EE6               	movwf	postinc1,c
 24284  01D916  0E5E               	movlw	low STR_85
 24285  01D918  6EE6               	movwf	postinc1,c
 24286  01D91A  0EFF               	movlw	high STR_85
 24287  01D91C  6EE6               	movwf	postinc1,c
 24288  01D91E  0E01               	movlw	1
 24289  01D920  6EE6               	movwf	postinc1,c
 24290  01D922  0E00               	movlw	0
 24291  01D924  6EE6               	movwf	postinc1,c
 24292  01D926  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24293  01D92A  0060  F0AB  FFE6   	movff	btemp,postinc1
 24294  01D930  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24295  01D936  0E06               	movlw	6
 24296  01D938  6EE6               	movwf	postinc1,c
 24297  01D93A  EC5B  F000         	call	_sprintf	;wreg free
 24298  01D93E                     l1840:
 24299                           
 24300                           ; BSR set to: 0
 24301                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 24302  01D93E  0102               	movlb	2	; () banked
 24303  01D940  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24304  01D942  32E8               	rrcf	wreg,f,c
 24305  01D944  32E8               	rrcf	wreg,f,c
 24306  01D946  0B03               	andlw	3
 24307  01D948  0D2C               	mullw	44
 24308  01D94A  0E16               	movlw	22
 24309  01D94C  26F3               	addwf	243,f,c
 24310  01D94E  0E00               	movlw	0
 24311  01D950  22F4               	addwfc	244,f,c
 24312  01D952  0E23               	movlw	low _T
 24313  01D954  6E34               	movwf	(btemp+10)^0,c
 24314  01D956  0EF8               	movlw	high _T
 24315  01D958  6E35               	movwf	(btemp+11)^0,c
 24316  01D95A  50F3               	movf	243,w,c
 24317  01D95C  2634               	addwf	(btemp+10)^0,f,c
 24318  01D95E  50F4               	movf	244,w,c
 24319  01D960  2235               	addwfc	(btemp+11)^0,f,c
 24320  01D962  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24321  01D968  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24322  01D96E  0EC2               	movlw	low STR_87
 24323  01D970  6EE6               	movwf	postinc1,c
 24324  01D972  0EFF               	movlw	high STR_87
 24325  01D974  6EE6               	movwf	postinc1,c
 24326  01D976  0E01               	movlw	1
 24327  01D978  6EE6               	movwf	postinc1,c
 24328  01D97A  0E01               	movlw	1
 24329  01D97C  6EE6               	movwf	postinc1,c
 24330  01D97E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24331  01D982  0060  F0AB  FFE6   	movff	btemp,postinc1
 24332  01D988  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24333  01D98E  0E06               	movlw	6
 24334  01D990  6EE6               	movwf	postinc1,c
 24335  01D992  EC5B  F000         	call	_sprintf	;wreg free
 24336                           
 24337                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 24338  01D996  0102               	movlb	2	; () banked
 24339  01D998  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24340  01D99A  32E8               	rrcf	wreg,f,c
 24341  01D99C  32E8               	rrcf	wreg,f,c
 24342  01D99E  0B03               	andlw	3
 24343  01D9A0  0D2C               	mullw	44
 24344  01D9A2  0E23               	movlw	low _T
 24345  01D9A4  6E34               	movwf	(btemp+10)^0,c
 24346  01D9A6  0EF8               	movlw	high _T
 24347  01D9A8  6E35               	movwf	(btemp+11)^0,c
 24348  01D9AA  50F3               	movf	243,w,c
 24349  01D9AC  2634               	addwf	(btemp+10)^0,f,c
 24350  01D9AE  50F4               	movf	244,w,c
 24351  01D9B0  2235               	addwfc	(btemp+11)^0,f,c
 24352  01D9B2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24353  01D9B8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24354  01D9BE  0EC2               	movlw	low STR_87
 24355  01D9C0  6EE6               	movwf	postinc1,c
 24356  01D9C2  0EFF               	movlw	high STR_87
 24357  01D9C4  6EE6               	movwf	postinc1,c
 24358  01D9C6  0E01               	movlw	1
 24359  01D9C8  6EE6               	movwf	postinc1,c
 24360  01D9CA  0E02               	movlw	2
 24361  01D9CC  6EE6               	movwf	postinc1,c
 24362  01D9CE  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24363  01D9D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 24364  01D9D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24365  01D9DE  0E06               	movlw	6
 24366  01D9E0  6EE6               	movwf	postinc1,c
 24367  01D9E2  EC5B  F000         	call	_sprintf	;wreg free
 24368                           
 24369                           ; BSR set to: 0
 24370                           ;mconfig.c: 61:   V.help_id++;
 24371  01D9E6  EE20  F29F         	lfsr	2,_V+152	;volatile
 24372  01D9EA  38DF               	swapf	223,w,c
 24373  01D9EC  6E35               	movwf	(btemp+11)^0,c
 24374  01D9EE  3235               	rrcf	(btemp+11)^0,f,c
 24375  01D9F0  3035               	rrcf	(btemp+11)^0,w,c
 24376  01D9F2  0B03               	andlw	3
 24377  01D9F4  6E35               	movwf	(btemp+11)^0,c
 24378  01D9F6  2A35               	incf	(btemp+11)^0,f,c
 24379  01D9F8  3A35               	swapf	(btemp+11)^0,f,c
 24380  01D9FA  3635               	rlcf	(btemp+11)^0,f,c
 24381  01D9FC  3635               	rlcf	(btemp+11)^0,f,c
 24382  01D9FE  50DF               	movf	223,w,c
 24383  01DA00  1835               	xorwf	(btemp+11)^0,w,c
 24384  01DA02  0B3F               	andlw	-193
 24385  01DA04  1835               	xorwf	(btemp+11)^0,w,c
 24386  01DA06  6EDF               	movwf	223,c
 24387                           
 24388                           ; BSR set to: 0
 24389                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 24390  01DA08  0EB8               	movlw	184
 24391  01DA0A  6EE6               	movwf	postinc1,c
 24392  01DA0C  0E0B               	movlw	11
 24393  01DA0E  6EE6               	movwf	postinc1,c
 24394  01DA10  0E09               	movlw	9
 24395  01DA12  6EE6               	movwf	postinc1,c
 24396  01DA14  EC49  F012         	call	_StartTimer	;wreg free
 24397                           
 24398                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 24399  01DA18  0EB8               	movlw	184
 24400  01DA1A  6EE6               	movwf	postinc1,c
 24401  01DA1C  0E0B               	movlw	11
 24402  01DA1E  6EE6               	movwf	postinc1,c
 24403  01DA20  0E07               	movlw	7
 24404  01DA22  6EE6               	movwf	postinc1,c
 24405  01DA24  EC49  F012         	call	_StartTimer	;wreg free
 24406                           
 24407                           ;mconfig.c: 64:   mode_lamp_bright();
 24408  01DA28  EC99  F017         	call	_mode_lamp_bright	;wreg free
 24409                           
 24410                           ;mconfig.c: 65:   update_lcd(1);
 24411  01DA2C  0E01               	movlw	1
 24412  01DA2E  6EE6               	movwf	postinc1,c
 24413  01DA30  EC4B  F0F8         	call	_update_lcd	;wreg free
 24414                           
 24415                           ;mconfig.c: 67:  } else {
 24416  01DA34  D032               	goto	l1841
 24417  01DA36                     l17643:
 24418                           
 24419                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 24420  01DA36  0E09               	movlw	9
 24421  01DA38  6EE6               	movwf	postinc1,c
 24422  01DA3A  ECD5  F014         	call	_TimerDone	;wreg free
 24423  01DA3E  502A               	movf	btemp^0,w,c
 24424  01DA40  B4D8               	btfsc	status,2,c
 24425  01DA42  D02B               	goto	l1841
 24426                           
 24427                           ;mconfig.c: 69:    set_vterm(0);
 24428  01DA44  0E00               	movlw	0
 24429  01DA46  6EE6               	movwf	postinc1,c
 24430  01DA48  ECCB  F016         	call	_set_vterm	;wreg free
 24431                           
 24432                           ;mconfig.c: 70:    V.help = 0;
 24433  01DA4C  0102               	movlb	2	; () banked
 24434  01DA4E  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 24435                           
 24436                           ; BSR set to: 2
 24437                           ;mconfig.c: 71:    set_display_info(display_help());
 24438  01DA50  ECDF  F017         	call	_display_help	;wreg free
 24439  01DA54  502A               	movf	btemp^0,w,c
 24440  01DA56  6EE6               	movwf	postinc1,c
 24441  01DA58  ECDA  F016         	call	_set_display_info	;wreg free
 24442                           
 24443                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 24444  01DA5C  0060  FA67  FFE6   	movff	_V+146,postinc1
 24445  01DA62  0060  FA6B  FFE6   	movff	_V+147,postinc1
 24446  01DA68  EC03  F017         	call	_mode_lamp_dim	;wreg free
 24447                           
 24448                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 24449  01DA6C  0E0B               	movlw	11
 24450  01DA6E  6EE6               	movwf	postinc1,c
 24451  01DA70  ECD5  F014         	call	_TimerDone	;wreg free
 24452  01DA74  502A               	movf	btemp^0,w,c
 24453  01DA76  B4D8               	btfsc	status,2,c
 24454  01DA78  D010               	goto	l1841
 24455                           
 24456                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 24457  01DA7A  0102               	movlb	2	; () banked
 24458  01DA7C  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 24459  01DA7E  A4D8               	btfss	status,2,c
 24460  01DA80  D002               	goto	u17220
 24461  01DA82  0E01               	movlw	1
 24462  01DA84  D001               	goto	u17230
 24463  01DA86                     u17220:
 24464  01DA86  0E00               	movlw	0
 24465  01DA88                     u17230:
 24466  01DA88  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 24467                           
 24468                           ; BSR set to: 2
 24469                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 24470  01DA8A  0EDC               	movlw	220
 24471  01DA8C  6EE6               	movwf	postinc1,c
 24472  01DA8E  0E05               	movlw	5
 24473  01DA90  6EE6               	movwf	postinc1,c
 24474  01DA92  0E0B               	movlw	11
 24475  01DA94  6EE6               	movwf	postinc1,c
 24476  01DA96  EC49  F012         	call	_StartTimer	;wreg free
 24477  01DA9A                     l1841:
 24478                           
 24479                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24480  01DA9A  52E5               	movf	postdec1,f,c
 24481  01DA9C  0012               	return		;funcret
 24482  01DA9E                     __end_of_check_help:
 24483                           	opt callstack 0
 24484                           
 24485 ;; *************** function _vterm_dump *****************
 24486 ;; Defined at:
 24487 ;;		line 124 in file "mconfig.c"
 24488 ;; Parameters:    Size  Location     Type
 24489 ;;		None
 24490 ;; Auto vars:     Size  Location     Type
 24491 ;;		None
 24492 ;; Return value:  Size  Location     Type
 24493 ;;                  1  [STACK] void 
 24494 ;; Registers used:
 24495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24496 ;; Tracked objects:
 24497 ;;		On entry : 3F/2
 24498 ;;		On exit  : 0/0
 24499 ;;		Unchanged: 0/0
 24500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24505 ;;Total ram usage:        0 bytes
 24506 ;; Hardware stack levels used:    1
 24507 ;; Hardware stack levels required when called:   26
 24508 ;; This function calls:
 24509 ;;		_WaitMs
 24510 ;;		_eaDogM_WriteStringAtPos
 24511 ;;		_get_vterm_ptr
 24512 ;;		_sprintf
 24513 ;;		_wait_lcd_done
 24514 ;; This function is called by:
 24515 ;;		_check_help
 24516 ;; This function uses a reentrant model
 24517 ;;
 24518                           
 24519                           	psect	text79
 24520  01E4F4                     __ptext79:
 24521                           	opt callstack 0
 24522  01E4F4                     _vterm_dump:
 24523                           	opt callstack 3
 24524                           
 24525                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 24526                           
 24527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24528                           ;incstack = 0
 24529  01E4F4  0E01               	movlw	1
 24530  01E4F6  6EE6               	movwf	postinc1,c
 24531  01E4F8  0E00               	movlw	0
 24532  01E4FA  6EE6               	movwf	postinc1,c
 24533  01E4FC  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24534  01E500  0060  F0AB  FFE6   	movff	btemp,postinc1
 24535  01E506  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24536  01E50C  0E00               	movlw	0
 24537  01E50E  6EE6               	movwf	postinc1,c
 24538  01E510  0E00               	movlw	0
 24539  01E512  6EE6               	movwf	postinc1,c
 24540  01E514  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24541  01E518  0060  F0AB  FFE6   	movff	btemp,postinc1
 24542  01E51E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24543  01E524  0EA7               	movlw	low STR_89
 24544  01E526  6EE6               	movwf	postinc1,c
 24545  01E528  0EFF               	movlw	high STR_89
 24546  01E52A  6EE6               	movwf	postinc1,c
 24547  01E52C  0E08               	movlw	low (_V+1)
 24548  01E52E  6EE6               	movwf	postinc1,c
 24549  01E530  0E02               	movlw	high (_V+1)
 24550  01E532  6EE6               	movwf	postinc1,c
 24551  01E534  0E08               	movlw	8
 24552  01E536  6EE6               	movwf	postinc1,c
 24553  01E538  EC5B  F000         	call	_sprintf	;wreg free
 24554                           
 24555                           ; BSR set to: 0
 24556                           ;mconfig.c: 127:  wait_lcd_done();
 24557  01E53C  EC92  F017         	call	_wait_lcd_done	;wreg free
 24558                           
 24559                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 24560  01E540  0E08               	movlw	low (_V+1)
 24561  01E542  6EE6               	movwf	postinc1,c
 24562  01E544  0E02               	movlw	high (_V+1)
 24563  01E546  6EE6               	movwf	postinc1,c
 24564  01E548  0E00               	movlw	0
 24565  01E54A  6EE6               	movwf	postinc1,c
 24566  01E54C  0E00               	movlw	0
 24567  01E54E  6EE6               	movwf	postinc1,c
 24568  01E550  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24569                           
 24570                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 24571  01E554  0E01               	movlw	1
 24572  01E556  6EE6               	movwf	postinc1,c
 24573  01E558  0E01               	movlw	1
 24574  01E55A  6EE6               	movwf	postinc1,c
 24575  01E55C  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24576  01E560  0060  F0AB  FFE6   	movff	btemp,postinc1
 24577  01E566  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24578  01E56C  0E00               	movlw	0
 24579  01E56E  6EE6               	movwf	postinc1,c
 24580  01E570  0E01               	movlw	1
 24581  01E572  6EE6               	movwf	postinc1,c
 24582  01E574  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24583  01E578  0060  F0AB  FFE6   	movff	btemp,postinc1
 24584  01E57E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24585  01E584  0EA7               	movlw	low STR_89
 24586  01E586  6EE6               	movwf	postinc1,c
 24587  01E588  0EFF               	movlw	high STR_89
 24588  01E58A  6EE6               	movwf	postinc1,c
 24589  01E58C  0E08               	movlw	low (_V+1)
 24590  01E58E  6EE6               	movwf	postinc1,c
 24591  01E590  0E02               	movlw	high (_V+1)
 24592  01E592  6EE6               	movwf	postinc1,c
 24593  01E594  0E08               	movlw	8
 24594  01E596  6EE6               	movwf	postinc1,c
 24595  01E598  EC5B  F000         	call	_sprintf	;wreg free
 24596                           
 24597                           ; BSR set to: 0
 24598                           ;mconfig.c: 130:  wait_lcd_done();
 24599  01E59C  EC92  F017         	call	_wait_lcd_done	;wreg free
 24600                           
 24601                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 24602  01E5A0  0E08               	movlw	low (_V+1)
 24603  01E5A2  6EE6               	movwf	postinc1,c
 24604  01E5A4  0E02               	movlw	high (_V+1)
 24605  01E5A6  6EE6               	movwf	postinc1,c
 24606  01E5A8  0E00               	movlw	0
 24607  01E5AA  6EE6               	movwf	postinc1,c
 24608  01E5AC  0E01               	movlw	1
 24609  01E5AE  6EE6               	movwf	postinc1,c
 24610  01E5B0  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24611                           
 24612                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 24613  01E5B4  0E01               	movlw	1
 24614  01E5B6  6EE6               	movwf	postinc1,c
 24615  01E5B8  0E02               	movlw	2
 24616  01E5BA  6EE6               	movwf	postinc1,c
 24617  01E5BC  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24618  01E5C0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24619  01E5C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24620  01E5CC  0E00               	movlw	0
 24621  01E5CE  6EE6               	movwf	postinc1,c
 24622  01E5D0  0E02               	movlw	2
 24623  01E5D2  6EE6               	movwf	postinc1,c
 24624  01E5D4  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24625  01E5D8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24626  01E5DE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24627  01E5E4  0EA7               	movlw	low STR_89
 24628  01E5E6  6EE6               	movwf	postinc1,c
 24629  01E5E8  0EFF               	movlw	high STR_89
 24630  01E5EA  6EE6               	movwf	postinc1,c
 24631  01E5EC  0E08               	movlw	low (_V+1)
 24632  01E5EE  6EE6               	movwf	postinc1,c
 24633  01E5F0  0E02               	movlw	high (_V+1)
 24634  01E5F2  6EE6               	movwf	postinc1,c
 24635  01E5F4  0E08               	movlw	8
 24636  01E5F6  6EE6               	movwf	postinc1,c
 24637  01E5F8  EC5B  F000         	call	_sprintf	;wreg free
 24638                           
 24639                           ; BSR set to: 0
 24640                           ;mconfig.c: 133:  wait_lcd_done();
 24641  01E5FC  EC92  F017         	call	_wait_lcd_done	;wreg free
 24642                           
 24643                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 24644  01E600  0E08               	movlw	low (_V+1)
 24645  01E602  6EE6               	movwf	postinc1,c
 24646  01E604  0E02               	movlw	high (_V+1)
 24647  01E606  6EE6               	movwf	postinc1,c
 24648  01E608  0E00               	movlw	0
 24649  01E60A  6EE6               	movwf	postinc1,c
 24650  01E60C  0E02               	movlw	2
 24651  01E60E  6EE6               	movwf	postinc1,c
 24652  01E610  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24653                           
 24654                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 24655  01E614  0E01               	movlw	1
 24656  01E616  6EE6               	movwf	postinc1,c
 24657  01E618  0E03               	movlw	3
 24658  01E61A  6EE6               	movwf	postinc1,c
 24659  01E61C  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24660  01E620  0060  F0AB  FFE6   	movff	btemp,postinc1
 24661  01E626  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24662  01E62C  0E00               	movlw	0
 24663  01E62E  6EE6               	movwf	postinc1,c
 24664  01E630  0E03               	movlw	3
 24665  01E632  6EE6               	movwf	postinc1,c
 24666  01E634  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24667  01E638  0060  F0AB  FFE6   	movff	btemp,postinc1
 24668  01E63E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24669  01E644  0EA7               	movlw	low STR_89
 24670  01E646  6EE6               	movwf	postinc1,c
 24671  01E648  0EFF               	movlw	high STR_89
 24672  01E64A  6EE6               	movwf	postinc1,c
 24673  01E64C  0E08               	movlw	low (_V+1)
 24674  01E64E  6EE6               	movwf	postinc1,c
 24675  01E650  0E02               	movlw	high (_V+1)
 24676  01E652  6EE6               	movwf	postinc1,c
 24677  01E654  0E08               	movlw	8
 24678  01E656  6EE6               	movwf	postinc1,c
 24679  01E658  EC5B  F000         	call	_sprintf	;wreg free
 24680                           
 24681                           ; BSR set to: 0
 24682                           ;mconfig.c: 136:  wait_lcd_done();
 24683  01E65C  EC92  F017         	call	_wait_lcd_done	;wreg free
 24684                           
 24685                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 24686  01E660  0E08               	movlw	low (_V+1)
 24687  01E662  6EE6               	movwf	postinc1,c
 24688  01E664  0E02               	movlw	high (_V+1)
 24689  01E666  6EE6               	movwf	postinc1,c
 24690  01E668  0E00               	movlw	0
 24691  01E66A  6EE6               	movwf	postinc1,c
 24692  01E66C  0E03               	movlw	3
 24693  01E66E  6EE6               	movwf	postinc1,c
 24694  01E670  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24695                           
 24696                           ; BSR set to: 59
 24697                           ;mconfig.c: 138:  WaitMs(3000);
 24698  01E674  0EB8               	movlw	184
 24699  01E676  6EE6               	movwf	postinc1,c
 24700  01E678  0E0B               	movlw	11
 24701  01E67A  6EE6               	movwf	postinc1,c
 24702  01E67C  EC57  F013         	call	_WaitMs	;wreg free
 24703                           
 24704                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 24705  01E680  0012               	return		;funcret
 24706  01E682                     __end_of_vterm_dump:
 24707                           	opt callstack 0
 24708                           
 24709 ;; *************** function _sprintf *****************
 24710 ;; Defined at:
 24711 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 24712 ;; Parameters:    Size  Location     Type
 24713 ;;  s               2  [STACK] PTR unsigned char 
 24714 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 24715 ;;  fmt             2  [STACK] PTR const unsigned char 
 24716 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 24717 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 24718 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 24719 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 24720 ;;		 -> STR_86(19), STR_85(19), STR_81(14), STR_80(28), 
 24721 ;;		 -> STR_79(28), STR_78(28), STR_77(22), STR_76(22), 
 24722 ;;		 -> STR_75(22), STR_74(22), STR_73(22), STR_72(22), 
 24723 ;;		 -> STR_71(22), STR_70(22), STR_69(22), STR_68(19), 
 24724 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(22), 
 24725 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 24726 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 24727 ;;		 -> STR_55(21), STR_54(22), STR_53(22), STR_52(22), 
 24728 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(24), 
 24729 ;;		 -> STR_47(24), STR_46(24), STR_45(30), STR_44(24), 
 24730 ;;		 -> STR_43(24), STR_42(23), STR_41(23), STR_40(23), 
 24731 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 24732 ;;		 -> STR_35(23), STR_34(23), STR_33(23), STR_32(23), 
 24733 ;;		 -> STR_31(23), STR_30(18), STR_29(17), STR_28(17), 
 24734 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(14), 
 24735 ;;		 -> STR_23(27), STR_22(27), STR_21(23), STR_20(22), 
 24736 ;;		 -> STR_19(22), STR_18(22), STR_17(22), STR_16(23), 
 24737 ;;		 -> STR_15(23), STR_14(23), STR_13(26), STR_12(22), 
 24738 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24739 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24740 ;;		 -> STR_2(21), STR_1(21), 
 24741 ;; Auto vars:     Size  Location     Type
 24742 ;;  f               6  [STACK] struct _IO_FILE
 24743 ;;  ap              2  [STACK] PTR void [1]
 24744 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24745 ;;  ret             2    0        int 
 24746 ;; Return value:  Size  Location     Type
 24747 ;;                  2  [STACK] int 
 24748 ;; Registers used:
 24749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24750 ;; Tracked objects:
 24751 ;;		On entry : 0/2
 24752 ;;		On exit  : 3F/0
 24753 ;;		Unchanged: 0/0
 24754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;Total ram usage:        0 bytes
 24760 ;; Hardware stack levels used:    1
 24761 ;; Hardware stack levels required when called:   23
 24762 ;; This function calls:
 24763 ;;		_vfprintf
 24764 ;; This function is called by:
 24765 ;;		_main
 24766 ;;		_current_sensor_cal
 24767 ;;		_display_history
 24768 ;;		_check_help
 24769 ;;		_vterm_dump
 24770 ;;		_calc_bsoc
 24771 ;; This function uses a reentrant model
 24772 ;;
 24773                           
 24774                           	psect	text80
 24775  0000B6                     __ptext80:
 24776                           	opt callstack 0
 24777  0000B6                     _sprintf:
 24778                           	opt callstack 0
 24779                           
 24780                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24781  0000B6  0E08               	movlw	8
 24782  0000B8  26E1               	addwf	fsr1l,f,c
 24783  0000BA  0E00               	movlw	0
 24784  0000BC  22E2               	addwfc	fsr1h,f,c
 24785                           
 24786                           ;incstack = 0
 24787 ;; hardware stack exceeded
 24788  0000BE  0EFE               	movlw	254
 24789  0000C0  6E34               	movwf	(btemp+10)^0,c
 24790  0000C2  0EFF               	movlw	255
 24791  0000C4  6E35               	movwf	(btemp+11)^0,c
 24792                           
 24793                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 24794  0000C6  0EF5               	movlw	245
 24795  0000C8  24E1               	addwf	fsr1l,w,c
 24796  0000CA  6E32               	movwf	(btemp+8)^0,c
 24797  0000CC  0EFF               	movlw	255
 24798  0000CE  20E2               	addwfc	fsr1h,w,c
 24799  0000D0  6E33               	movwf	(btemp+9)^0,c
 24800  0000D2  5034               	movf	(btemp+10)^0,w,c
 24801  0000D4  2632               	addwf	(btemp+8)^0,f,c
 24802  0000D6  5035               	movf	(btemp+11)^0,w,c
 24803  0000D8  2233               	addwfc	(btemp+9)^0,f,c
 24804                           
 24805                           ;stkvar	_ap @ sp[(-8)+6]
 24806  0000DA  0EFF               	movlw	-1
 24807  0000DC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 24808  0000E2  0EFE               	movlw	-2
 24809  0000E4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 24810                           
 24811                           ;stkvar	_s @ sp[(-8)+-3]
 24812  0000EA  0EF5               	movlw	-11
 24813  0000EC  006F FF8C  F034    	movff	plusw1,btemp+10
 24814  0000F2  0EF6               	movlw	-10
 24815  0000F4  006F FF8C  F035    	movff	plusw1,btemp+11
 24816                           
 24817                           ;stkvar	_f @ sp[(-8)+0]
 24818  0000FA  0EF9               	movlw	-7
 24819  0000FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24820  000102  0EF8               	movlw	-8
 24821  000104  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24822                           
 24823                           ;stkvar	_f @ sp[(-8)+0]
 24824  00010A  0EFA               	movlw	250
 24825  00010C  24E1               	addwf	fsr1l,w,c
 24826  00010E  6ED9               	movwf	fsr2l,c
 24827  000110  0EFF               	movlw	255
 24828  000112  20E2               	addwfc	fsr1h,w,c
 24829  000114  6EDA               	movwf	fsr2h,c
 24830  000116  0E00               	movlw	0
 24831  000118  6EDE               	movwf	postinc2,c
 24832  00011A  0E00               	movlw	0
 24833  00011C  6EDD               	movwf	postdec2,c
 24834                           
 24835                           ;stkvar	_f @ sp[(-8)+0]
 24836  00011E  0EFC               	movlw	252
 24837  000120  24E1               	addwf	fsr1l,w,c
 24838  000122  6ED9               	movwf	fsr2l,c
 24839  000124  0EFF               	movlw	255
 24840  000126  20E2               	addwfc	fsr1h,w,c
 24841  000128  6EDA               	movwf	fsr2h,c
 24842  00012A  0E00               	movlw	0
 24843  00012C  6EDE               	movwf	postinc2,c
 24844  00012E  0E00               	movlw	0
 24845  000130  6EDD               	movwf	postdec2,c
 24846                           
 24847                           ;stkvar	_ap @ sp[(-8)+6]
 24848  000132  0EFE               	movlw	254
 24849  000134  24E1               	addwf	fsr1l,w,c
 24850  000136  6E2A               	movwf	btemp^0,c
 24851  000138  0EFF               	movlw	255
 24852  00013A  20E2               	addwfc	fsr1h,w,c
 24853  00013C  6E2B               	movwf	(btemp+1)^0,c
 24854  00013E  0060  F0AB  FFE6   	movff	btemp,postinc1
 24855  000144  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24856                           
 24857                           ;stkvar	_fmt @ sp[(-10)+-5]
 24858  00014A  0EF1               	movlw	-15
 24859  00014C  006F FF8F FFE6     	movff	plusw1,postinc1
 24860  000152  006F FF8F FFE6     	movff	plusw1,postinc1
 24861                           
 24862                           ;stkvar	_f @ sp[(-12)+0]
 24863  000158  0EF4               	movlw	244
 24864  00015A  24E1               	addwf	fsr1l,w,c
 24865  00015C  6E2A               	movwf	btemp^0,c
 24866  00015E  0EFF               	movlw	255
 24867  000160  20E2               	addwfc	fsr1h,w,c
 24868  000162  6E2B               	movwf	(btemp+1)^0,c
 24869  000164  0060  F0AB  FFE6   	movff	btemp,postinc1
 24870  00016A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24871  000170  EC15  F007         	call	_vfprintf	;wreg free
 24872                           
 24873                           ; BSR set to: 0
 24874                           ;stkvar	_f @ sp[(-8)+0]
 24875  000174  0EFA               	movlw	250
 24876  000176  24E1               	addwf	fsr1l,w,c
 24877  000178  6ED9               	movwf	fsr2l,c
 24878  00017A  0EFF               	movlw	255
 24879  00017C  20E2               	addwfc	fsr1h,w,c
 24880  00017E  6EDA               	movwf	fsr2h,c
 24881  000180  006F FF78  F034    	movff	postinc2,btemp+10
 24882  000186  006F FF74  F035    	movff	postdec2,btemp+11
 24883                           
 24884                           ;stkvar	_s @ sp[(-8)+-3]
 24885  00018C  0EF5               	movlw	-11
 24886  00018E  006F FF8C  F032    	movff	plusw1,btemp+8
 24887  000194  0EF6               	movlw	-10
 24888  000196  006F FF8C  F033    	movff	plusw1,btemp+9
 24889  00019C  5034               	movf	(btemp+10)^0,w,c
 24890  00019E  2432               	addwf	(btemp+8)^0,w,c
 24891  0001A0  6ED9               	movwf	fsr2l,c
 24892  0001A2  5035               	movf	(btemp+11)^0,w,c
 24893  0001A4  2033               	addwfc	(btemp+9)^0,w,c
 24894  0001A6  6EDA               	movwf	fsr2h,c
 24895  0001A8  0E00               	movlw	0
 24896  0001AA  6EDF               	movwf	indf2,c
 24897                           
 24898                           ; BSR set to: 0
 24899                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 24900  0001AC  0EF8               	movlw	248
 24901  0001AE  26E1               	addwf	fsr1l,f,c
 24902  0001B0  0EFF               	movlw	255
 24903  0001B2  22E2               	addwfc	fsr1h,f,c
 24904  0001B4  52E5               	movf	postdec1,f,c
 24905  0001B6  50E7               	movf	indf1,w,c
 24906  0001B8  5EE1               	subwf	fsr1l,f,c
 24907  0001BA  0E00               	movlw	0
 24908  0001BC  5AE2               	subwfb	fsr1h,f,c
 24909  0001BE  0012               	return		;funcret
 24910  0001C0                     __end_of_sprintf:
 24911                           	opt callstack 0
 24912                           
 24913 ;; *************** function _get_vterm_ptr *****************
 24914 ;; Defined at:
 24915 ;;		line 119 in file "mconfig.c"
 24916 ;; Parameters:    Size  Location     Type
 24917 ;;  line            1  [STACK] const unsigned char 
 24918 ;;  vterm           1  [STACK] const unsigned char 
 24919 ;; Auto vars:     Size  Location     Type
 24920 ;;		None
 24921 ;; Return value:  Size  Location     Type
 24922 ;;                  2  [STACK] PTR unsigned char 
 24923 ;; Registers used:
 24924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24925 ;; Tracked objects:
 24926 ;;		On entry : 0/2
 24927 ;;		On exit  : 0/0
 24928 ;;		Unchanged: 0/0
 24929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24934 ;;Total ram usage:        0 bytes
 24935 ;; Hardware stack levels used:    1
 24936 ;; Hardware stack levels required when called:   15
 24937 ;; This function calls:
 24938 ;;		Nothing
 24939 ;; This function is called by:
 24940 ;;		_main
 24941 ;;		_current_sensor_cal
 24942 ;;		_display_history
 24943 ;;		_check_help
 24944 ;;		_vterm_dump
 24945 ;; This function uses a reentrant model
 24946 ;;
 24947                           
 24948                           	psect	text81
 24949  0028A6                     __ptext81:
 24950                           	opt callstack 0
 24951  0028A6                     _get_vterm_ptr:
 24952                           	opt callstack 15
 24953                           
 24954                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 24955                           ;stkvar	_vterm @ sp[(0)+-2]
 24956                           
 24957                           ; BSR set to: 0
 24958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24959                           ;incstack = 0
 24960  0028A6  0EFE               	movlw	-2
 24961  0028A8  50E3               	movf	plusw1,w,c
 24962  0028AA  0B03               	andlw	3
 24963  0028AC  0DA0               	mullw	160
 24964  0028AE  0E3F               	movlw	low _D
 24965  0028B0  6E2A               	movwf	btemp^0,c
 24966  0028B2  0E0A               	movlw	high _D
 24967  0028B4  6E2B               	movwf	(btemp+1)^0,c
 24968  0028B6  50F3               	movf	243,w,c
 24969  0028B8  262A               	addwf	btemp^0,f,c
 24970  0028BA  50F4               	movf	244,w,c
 24971  0028BC  222B               	addwfc	(btemp+1)^0,f,c
 24972                           
 24973                           ;stkvar	_line @ sp[(0)+-1]
 24974  0028BE  0EFF               	movlw	-1
 24975  0028C0  50E3               	movf	plusw1,w,c
 24976  0028C2  0B03               	andlw	3
 24977  0028C4  0D28               	mullw	40
 24978  0028C6  50F3               	movf	243,w,c
 24979  0028C8  262A               	addwf	btemp^0,f,c
 24980  0028CA  50F4               	movf	244,w,c
 24981  0028CC  222B               	addwfc	(btemp+1)^0,f,c
 24982                           
 24983                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24984  0028CE  52E5               	movf	postdec1,f,c
 24985  0028D0  52E5               	movf	postdec1,f,c
 24986  0028D2  0012               	return		;funcret
 24987  0028D4                     __end_of_get_vterm_ptr:
 24988                           	opt callstack 0
 24989                           
 24990 ;; *************** function _WaitMs *****************
 24991 ;; Defined at:
 24992 ;;		line 32 in file "timers.c"
 24993 ;; Parameters:    Size  Location     Type
 24994 ;;  numMilliseco    2  [STACK] const unsigned short 
 24995 ;; Auto vars:     Size  Location     Type
 24996 ;;		None
 24997 ;; Return value:  Size  Location     Type
 24998 ;;                  1  [STACK] void 
 24999 ;; Registers used:
 25000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25001 ;; Tracked objects:
 25002 ;;		On entry : 0/2
 25003 ;;		On exit  : 0/0
 25004 ;;		Unchanged: 0/0
 25005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25010 ;;Total ram usage:        0 bytes
 25011 ;; Hardware stack levels used:    1
 25012 ;; Hardware stack levels required when called:   16
 25013 ;; This function calls:
 25014 ;;		_StartTimer
 25015 ;;		_TimerDone
 25016 ;; This function is called by:
 25017 ;;		_main
 25018 ;;		_current_sensor_cal
 25019 ;;		_display_history
 25020 ;;		_vterm_dump
 25021 ;; This function uses a reentrant model
 25022 ;;
 25023                           
 25024                           	psect	text82
 25025  0026AE                     __ptext82:
 25026                           	opt callstack 0
 25027  0026AE                     _WaitMs:
 25028                           	opt callstack 13
 25029                           
 25030                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 25031                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 25032                           
 25033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25034                           ;incstack = 0
 25035  0026AE  0EFE               	movlw	-2
 25036  0026B0  006F FF8F FFE6     	movff	plusw1,postinc1
 25037  0026B6  006F FF8F FFE6     	movff	plusw1,postinc1
 25038  0026BC  0E00               	movlw	0
 25039  0026BE  6EE6               	movwf	postinc1,c
 25040  0026C0  EC49  F012         	call	_StartTimer	;wreg free
 25041                           
 25042                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 25043  0026C4  D005               	goto	l12901
 25044  0026C6                     l1772:
 25045                           
 25046                           ;timers.c: 36:   __nop();
 25047  0026C6  F000               	nop	
 25048                           
 25049                           ;timers.c: 37:   __nop();
 25050  0026C8  F000               	nop	
 25051                           
 25052                           ;timers.c: 38:   __nop();
 25053  0026CA  F000               	nop	
 25054                           
 25055                           ;timers.c: 39:   __nop();
 25056  0026CC  F000               	nop	
 25057  0026CE  0004               	clrwdt		;# 
 25058  0026D0                     l12901:
 25059                           
 25060                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 25061  0026D0  0E00               	movlw	0
 25062  0026D2  6EE6               	movwf	postinc1,c
 25063  0026D4  ECD5  F014         	call	_TimerDone	;wreg free
 25064  0026D8  502A               	movf	btemp^0,w,c
 25065  0026DA  B4D8               	btfsc	status,2,c
 25066  0026DC  D7F4               	goto	l1772
 25067                           
 25068                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 25069  0026DE  52E5               	movf	postdec1,f,c
 25070  0026E0  52E5               	movf	postdec1,f,c
 25071  0026E2  0012               	return		;funcret
 25072  0026E4                     __end_of_WaitMs:
 25073                           	opt callstack 0
 25074                           
 25075 ;; *************** function _update_lcd *****************
 25076 ;; Defined at:
 25077 ;;		line 85 in file "mconfig.c"
 25078 ;; Parameters:    Size  Location     Type
 25079 ;;  vterm           1  [STACK] unsigned char 
 25080 ;; Auto vars:     Size  Location     Type
 25081 ;;		None
 25082 ;; Return value:  Size  Location     Type
 25083 ;;                  1  [STACK] unsigned char 
 25084 ;; Registers used:
 25085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25086 ;; Tracked objects:
 25087 ;;		On entry : 0/0
 25088 ;;		On exit  : 0/0
 25089 ;;		Unchanged: 0/0
 25090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;Total ram usage:        0 bytes
 25096 ;; Hardware stack levels used:    1
 25097 ;; Hardware stack levels required when called:   26
 25098 ;; This function calls:
 25099 ;;		_eaDogM_WriteStringAtPos
 25100 ;;		_wait_lcd_done
 25101 ;; This function is called by:
 25102 ;;		_main
 25103 ;;		_current_sensor_cal
 25104 ;;		_display_history
 25105 ;;		_check_help
 25106 ;; This function uses a reentrant model
 25107 ;;
 25108                           
 25109                           	psect	text83
 25110  01F096                     __ptext83:
 25111                           	opt callstack 0
 25112  01F096                     _update_lcd:
 25113                           	opt callstack 4
 25114                           
 25115                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 25116                           ;stkvar	_vterm @ sp[(0)+-1]
 25117                           
 25118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25119                           ;incstack = 0
 25120  01F096  0EFF               	movlw	-1
 25121  01F098  006F FF8C  F02A    	movff	plusw1,btemp
 25122  01F09E  0E03               	movlw	3
 25123  01F0A0  162A               	andwf	btemp^0,f,c
 25124  01F0A2  0EFF               	movlw	-1
 25125  01F0A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25126                           
 25127                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 25128  01F0AA  EE23  F0BF         	lfsr	2,_D+640
 25129  01F0AE  A0DF               	btfss	indf2,0,c
 25130  01F0B0  D004               	goto	l17095
 25131                           
 25132                           ;stkvar	_vterm @ sp[(0)+-1]
 25133  01F0B2  0EFF               	movlw	-1
 25134  01F0B4  50E3               	movf	plusw1,w,c
 25135  01F0B6  B4D8               	btfsc	status,2,c
 25136  01F0B8  D09C               	goto	l1848
 25137  01F0BA                     l17095:
 25138                           
 25139                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 25140                           ;stkvar	_vterm @ sp[(0)+-1]
 25141  01F0BA  0EFF               	movlw	-1
 25142  01F0BC  50E3               	movf	plusw1,w,c
 25143  01F0BE  0DA0               	mullw	160
 25144  01F0C0  0E53               	movlw	low (_D+20)
 25145  01F0C2  24F3               	addwf	243,w,c
 25146  01F0C4  6ED9               	movwf	fsr2l,c
 25147  01F0C6  0E0A               	movlw	high (_D+20)
 25148  01F0C8  20F4               	addwfc	prodh,w,c
 25149  01F0CA  6EDA               	movwf	fsr2h,c
 25150  01F0CC  0E00               	movlw	0
 25151  01F0CE  6EDF               	movwf	indf2,c
 25152                           
 25153                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 25154                           ;stkvar	_vterm @ sp[(0)+-1]
 25155  01F0D0  0EFF               	movlw	-1
 25156  01F0D2  50E3               	movf	plusw1,w,c
 25157  01F0D4  0DA0               	mullw	160
 25158  01F0D6  0E7B               	movlw	low (_D+60)
 25159  01F0D8  24F3               	addwf	243,w,c
 25160  01F0DA  6ED9               	movwf	fsr2l,c
 25161  01F0DC  0E0A               	movlw	high (_D+60)
 25162  01F0DE  20F4               	addwfc	prodh,w,c
 25163  01F0E0  6EDA               	movwf	fsr2h,c
 25164  01F0E2  0E00               	movlw	0
 25165  01F0E4  6EDF               	movwf	indf2,c
 25166                           
 25167                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 25168                           ;stkvar	_vterm @ sp[(0)+-1]
 25169  01F0E6  0EFF               	movlw	-1
 25170  01F0E8  50E3               	movf	plusw1,w,c
 25171  01F0EA  0DA0               	mullw	160
 25172  01F0EC  0EA3               	movlw	low (_D+100)
 25173  01F0EE  24F3               	addwf	243,w,c
 25174  01F0F0  6ED9               	movwf	fsr2l,c
 25175  01F0F2  0E0A               	movlw	high (_D+100)
 25176  01F0F4  20F4               	addwfc	prodh,w,c
 25177  01F0F6  6EDA               	movwf	fsr2h,c
 25178  01F0F8  0E00               	movlw	0
 25179  01F0FA  6EDF               	movwf	indf2,c
 25180                           
 25181                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 25182                           ;stkvar	_vterm @ sp[(0)+-1]
 25183  01F0FC  0EFF               	movlw	-1
 25184  01F0FE  50E3               	movf	plusw1,w,c
 25185  01F100  0DA0               	mullw	160
 25186  01F102  0ECB               	movlw	low (_D+140)
 25187  01F104  24F3               	addwf	243,w,c
 25188  01F106  6ED9               	movwf	fsr2l,c
 25189  01F108  0E0A               	movlw	high (_D+140)
 25190  01F10A  20F4               	addwfc	prodh,w,c
 25191  01F10C  6EDA               	movwf	fsr2h,c
 25192  01F10E  0E00               	movlw	0
 25193  01F110  6EDF               	movwf	indf2,c
 25194                           
 25195                           ;mconfig.c: 96:  wait_lcd_done();
 25196  01F112  EC92  F017         	call	_wait_lcd_done	;wreg free
 25197                           
 25198                           ; BSR set to: 61
 25199                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 25200                           ;stkvar	_vterm @ sp[(0)+-1]
 25201  01F116  0EFF               	movlw	-1
 25202  01F118  50E3               	movf	plusw1,w,c
 25203  01F11A  0DA0               	mullw	160
 25204  01F11C  0E3F               	movlw	low _D
 25205  01F11E  6E34               	movwf	(btemp+10)^0,c
 25206  01F120  0E0A               	movlw	high _D
 25207  01F122  6E35               	movwf	(btemp+11)^0,c
 25208  01F124  50F3               	movf	243,w,c
 25209  01F126  2634               	addwf	(btemp+10)^0,f,c
 25210  01F128  50F4               	movf	244,w,c
 25211  01F12A  2235               	addwfc	(btemp+11)^0,f,c
 25212  01F12C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25213  01F132  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25214  01F138  0E00               	movlw	0
 25215  01F13A  6EE6               	movwf	postinc1,c
 25216  01F13C  0E00               	movlw	0
 25217  01F13E  6EE6               	movwf	postinc1,c
 25218  01F140  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25219                           
 25220                           ; BSR set to: 59
 25221                           ;mconfig.c: 98:  wait_lcd_done();
 25222  01F144  EC92  F017         	call	_wait_lcd_done	;wreg free
 25223                           
 25224                           ; BSR set to: 61
 25225                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 25226                           ;stkvar	_vterm @ sp[(0)+-1]
 25227  01F148  0EFF               	movlw	-1
 25228  01F14A  50E3               	movf	plusw1,w,c
 25229  01F14C  0DA0               	mullw	160
 25230  01F14E  0E3F               	movlw	low _D
 25231  01F150  6E34               	movwf	(btemp+10)^0,c
 25232  01F152  0E0A               	movlw	high _D
 25233  01F154  6E35               	movwf	(btemp+11)^0,c
 25234  01F156  0E28               	movlw	40
 25235  01F158  2634               	addwf	(btemp+10)^0,f,c
 25236  01F15A  0E00               	movlw	0
 25237  01F15C  2235               	addwfc	(btemp+11)^0,f,c
 25238  01F15E  50F3               	movf	243,w,c
 25239  01F160  2634               	addwf	(btemp+10)^0,f,c
 25240  01F162  50F4               	movf	244,w,c
 25241  01F164  2235               	addwfc	(btemp+11)^0,f,c
 25242  01F166  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25243  01F16C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25244  01F172  0E00               	movlw	0
 25245  01F174  6EE6               	movwf	postinc1,c
 25246  01F176  0E01               	movlw	1
 25247  01F178  6EE6               	movwf	postinc1,c
 25248  01F17A  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25249                           
 25250                           ; BSR set to: 59
 25251                           ;mconfig.c: 100:  wait_lcd_done();
 25252  01F17E  EC92  F017         	call	_wait_lcd_done	;wreg free
 25253                           
 25254                           ; BSR set to: 61
 25255                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 25256                           ;stkvar	_vterm @ sp[(0)+-1]
 25257  01F182  0EFF               	movlw	-1
 25258  01F184  50E3               	movf	plusw1,w,c
 25259  01F186  0DA0               	mullw	160
 25260  01F188  0E3F               	movlw	low _D
 25261  01F18A  6E34               	movwf	(btemp+10)^0,c
 25262  01F18C  0E0A               	movlw	high _D
 25263  01F18E  6E35               	movwf	(btemp+11)^0,c
 25264  01F190  0E50               	movlw	80
 25265  01F192  2634               	addwf	(btemp+10)^0,f,c
 25266  01F194  0E00               	movlw	0
 25267  01F196  2235               	addwfc	(btemp+11)^0,f,c
 25268  01F198  50F3               	movf	243,w,c
 25269  01F19A  2634               	addwf	(btemp+10)^0,f,c
 25270  01F19C  50F4               	movf	244,w,c
 25271  01F19E  2235               	addwfc	(btemp+11)^0,f,c
 25272  01F1A0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25273  01F1A6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25274  01F1AC  0E00               	movlw	0
 25275  01F1AE  6EE6               	movwf	postinc1,c
 25276  01F1B0  0E02               	movlw	2
 25277  01F1B2  6EE6               	movwf	postinc1,c
 25278  01F1B4  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25279                           
 25280                           ; BSR set to: 59
 25281                           ;mconfig.c: 102:  wait_lcd_done();
 25282  01F1B8  EC92  F017         	call	_wait_lcd_done	;wreg free
 25283                           
 25284                           ; BSR set to: 61
 25285                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 25286                           ;stkvar	_vterm @ sp[(0)+-1]
 25287  01F1BC  0EFF               	movlw	-1
 25288  01F1BE  50E3               	movf	plusw1,w,c
 25289  01F1C0  0DA0               	mullw	160
 25290  01F1C2  0E3F               	movlw	low _D
 25291  01F1C4  6E34               	movwf	(btemp+10)^0,c
 25292  01F1C6  0E0A               	movlw	high _D
 25293  01F1C8  6E35               	movwf	(btemp+11)^0,c
 25294  01F1CA  0E78               	movlw	120
 25295  01F1CC  2634               	addwf	(btemp+10)^0,f,c
 25296  01F1CE  0E00               	movlw	0
 25297  01F1D0  2235               	addwfc	(btemp+11)^0,f,c
 25298  01F1D2  50F3               	movf	243,w,c
 25299  01F1D4  2634               	addwf	(btemp+10)^0,f,c
 25300  01F1D6  50F4               	movf	244,w,c
 25301  01F1D8  2235               	addwfc	(btemp+11)^0,f,c
 25302  01F1DA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25303  01F1E0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25304  01F1E6  0E00               	movlw	0
 25305  01F1E8  6EE6               	movwf	postinc1,c
 25306  01F1EA  0E03               	movlw	3
 25307  01F1EC  6EE6               	movwf	postinc1,c
 25308  01F1EE  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25309  01F1F2                     l1848:
 25310                           
 25311                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 25312  01F1F2  52E5               	movf	postdec1,f,c
 25313  01F1F4  0012               	return		;funcret
 25314  01F1F6                     __end_of_update_lcd:
 25315                           	opt callstack 0
 25316                           
 25317 ;; *************** function _eaDogM_WriteStringAtPos *****************
 25318 ;; Defined at:
 25319 ;;		line 195 in file "eadog.c"
 25320 ;; Parameters:    Size  Location     Type
 25321 ;;  r               1  [STACK] const unsigned char 
 25322 ;;  c               1  [STACK] const unsigned char 
 25323 ;;  strPtr          2  [STACK] PTR unsigned char 
 25324 ;;		 -> D.lcd(640), D(642), V(181), 
 25325 ;; Auto vars:     Size  Location     Type
 25326 ;;  row             1  [STACK] unsigned char 
 25327 ;; Return value:  Size  Location     Type
 25328 ;;                  1  [STACK] void 
 25329 ;; Registers used:
 25330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25331 ;; Tracked objects:
 25332 ;;		On entry : 3F/3D
 25333 ;;		On exit  : 3F/3B
 25334 ;;		Unchanged: 0/0
 25335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25340 ;;Total ram usage:        0 bytes
 25341 ;; Hardware stack levels used:    1
 25342 ;; Hardware stack levels required when called:   25
 25343 ;; This function calls:
 25344 ;;		_eaDogM_WriteString
 25345 ;;		_send_lcd_cmd_dma
 25346 ;;		_send_lcd_data_dma
 25347 ;;		_wait_lcd_done
 25348 ;; This function is called by:
 25349 ;;		_update_lcd
 25350 ;;		_vterm_dump
 25351 ;; This function uses a reentrant model
 25352 ;;
 25353                           
 25354                           	psect	text84
 25355  001330                     __ptext84:
 25356                           	opt callstack 0
 25357  001330                     _eaDogM_WriteStringAtPos:
 25358                           	opt callstack 0
 25359                           
 25360                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25361  001330  52E6               	movf	postinc1,f,c
 25362                           
 25363                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 25364                           
 25365                           ;incstack = 0
 25366  001332  D013               	goto	l17041
 25367  001334                     l17029:
 25368                           
 25369                           ;eadog.c: 201:   row = 0x40;
 25370                           ;stkvar	_row @ sp[(-1)+0]
 25371  001334  0EFF               	movlw	-1
 25372  001336  6AE3               	clrf	plusw1,c
 25373  001338  8CE3               	bsf	plusw1,6,c
 25374                           
 25375                           ;eadog.c: 202:   break;
 25376  00133A  D025               	goto	l17043
 25377  00133C                     l17031:
 25378                           
 25379                           ;eadog.c: 204:   row = 0x14;
 25380                           ;stkvar	_row @ sp[(-1)+0]
 25381  00133C  0EFF               	movlw	-1
 25382  00133E  6AE3               	clrf	plusw1,c
 25383  001340  84E3               	bsf	plusw1,2,c
 25384  001342  88E3               	bsf	plusw1,4,c	;indir
 25385                           
 25386                           ;eadog.c: 205:   break;
 25387  001344  D020               	goto	l17043
 25388  001346                     l17033:
 25389                           
 25390                           ;eadog.c: 207:   row = 0x54;
 25391  001346  0E54               	movlw	84
 25392  001348  6E35               	movwf	(btemp+11)^0,c
 25393                           
 25394                           ;stkvar	_row @ sp[(-1)+0]
 25395  00134A  0EFF               	movlw	-1
 25396  00134C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25397                           
 25398                           ;eadog.c: 208:   break;
 25399  001352  D019               	goto	l17043
 25400  001354                     l17035:
 25401                           
 25402                           ;eadog.c: 210:   row = 0x00;
 25403                           ;stkvar	_row @ sp[(-1)+0]
 25404  001354  0EFF               	movlw	-1
 25405  001356  6AE3               	clrf	plusw1,c
 25406                           
 25407                           ;eadog.c: 211:   break;
 25408  001358  D016               	goto	l17043
 25409  00135A                     l17041:
 25410                           
 25411                           ;stkvar	_r @ sp[(-1)+-1]
 25412  00135A  0EFE               	movlw	-2
 25413  00135C  50E3               	movf	plusw1,w,c
 25414  00135E  6E34               	movwf	(btemp+10)^0,c
 25415  001360  6A35               	clrf	(btemp+11)^0,c
 25416                           
 25417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25418                           ; Switch size 1, requested type "simple"
 25419                           ; Number of cases is 1, Range of values is 0 to 0
 25420                           ; switch strategies available:
 25421                           ; Name         Instructions Cycles
 25422                           ; simple_byte            4     3 (average)
 25423                           ;	Chosen strategy is simple_byte
 25424  001362  5035               	movf	(btemp+11)^0,w,c
 25425  001364  0A00               	xorlw	0	; case 0
 25426  001366  A4D8               	btfss	status,2,c
 25427  001368  D7E5               	goto	l17029
 25428                           
 25429                           ; Switch size 1, requested type "simple"
 25430                           ; Number of cases is 4, Range of values is 0 to 3
 25431                           ; switch strategies available:
 25432                           ; Name         Instructions Cycles
 25433                           ; simple_byte           13     7 (average)
 25434                           ;	Chosen strategy is simple_byte
 25435  00136A  5034               	movf	(btemp+10)^0,w,c
 25436  00136C  0A00               	xorlw	0	; case 0
 25437  00136E  B4D8               	btfsc	status,2,c
 25438  001370  D7E1               	goto	l17029
 25439  001372  0A01               	xorlw	1	; case 1
 25440  001374  B4D8               	btfsc	status,2,c
 25441  001376  D7E2               	goto	l17031
 25442  001378  0A03               	xorlw	3	; case 2
 25443  00137A  B4D8               	btfsc	status,2,c
 25444  00137C  D7E4               	goto	l17033
 25445  00137E  0A01               	xorlw	1	; case 3
 25446  001380  B4D8               	btfsc	status,2,c
 25447  001382  D7E8               	goto	l17035
 25448  001384  D7D7               	goto	l17029
 25449  001386                     l17043:
 25450                           
 25451                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 25452  001386  0E45               	movlw	69
 25453  001388  6EE6               	movwf	postinc1,c
 25454  00138A  ECBC  F016         	call	_send_lcd_cmd_dma	;wreg free
 25455                           
 25456                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 25457                           ;stkvar	_c @ sp[(-1)+-2]
 25458  00138E  0EFD               	movlw	-3
 25459  001390  006F FF8C  F035    	movff	plusw1,btemp+11
 25460                           
 25461                           ;stkvar	_row @ sp[(-1)+0]
 25462  001396  0EFF               	movlw	-1
 25463  001398  50E3               	movf	plusw1,w,c
 25464  00139A  2435               	addwf	(btemp+11)^0,w,c
 25465  00139C  6EE6               	movwf	postinc1,c
 25466  00139E  EC5D  F011         	call	_send_lcd_data_dma	;wreg free
 25467                           
 25468                           ; BSR set to: 59
 25469                           ;eadog.c: 218:  wait_lcd_done();
 25470  0013A2  EC92  F017         	call	_wait_lcd_done	;wreg free
 25471                           
 25472                           ; BSR set to: 61
 25473                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 25474                           ;stkvar	_strPtr @ sp[(-1)+-4]
 25475  0013A6  0EFB               	movlw	-5
 25476  0013A8  006F FF8F FFE6     	movff	plusw1,postinc1
 25477  0013AE  006F FF8F FFE6     	movff	plusw1,postinc1
 25478  0013B4  ECC0  F007         	call	_eaDogM_WriteString	;wreg free
 25479                           
 25480                           ; BSR set to: 59
 25481                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 25482  0013B8  0EFB               	movlw	251
 25483  0013BA  26E1               	addwf	fsr1l,f,c
 25484  0013BC  0EFF               	movlw	255
 25485  0013BE  22E2               	addwfc	fsr1h,f,c
 25486  0013C0  0012               	return		;funcret
 25487  0013C2                     __end_of_eaDogM_WriteStringAtPos:
 25488                           	opt callstack 0
 25489                           
 25490 ;; *************** function _send_lcd_cmd_dma *****************
 25491 ;; Defined at:
 25492 ;;		line 171 in file "eadog.c"
 25493 ;; Parameters:    Size  Location     Type
 25494 ;;  strPtr          1  [STACK] const unsigned char 
 25495 ;; Auto vars:     Size  Location     Type
 25496 ;;		None
 25497 ;; Return value:  Size  Location     Type
 25498 ;;                  1  [STACK] void 
 25499 ;; Registers used:
 25500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25501 ;; Tracked objects:
 25502 ;;		On entry : 0/3D
 25503 ;;		On exit  : 3F/3D
 25504 ;;		Unchanged: 0/0
 25505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;Total ram usage:        0 bytes
 25511 ;; Hardware stack levels used:    1
 25512 ;; Hardware stack levels required when called:   18
 25513 ;; This function calls:
 25514 ;;		_send_lcd_data_dma
 25515 ;;		_wait_lcd_done
 25516 ;; This function is called by:
 25517 ;;		_eaDogM_WriteStringAtPos
 25518 ;;		_eaDogM_WriteCommand
 25519 ;; This function uses a reentrant model
 25520 ;;
 25521                           
 25522                           	psect	text85
 25523  002D78                     __ptext85:
 25524                           	opt callstack 0
 25525  002D78                     _send_lcd_cmd_dma:
 25526                           	opt callstack 10
 25527                           
 25528                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 25529                           
 25530                           ; BSR set to: 59
 25531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25532                           ;incstack = 0
 25533  002D78  0EFE               	movlw	254
 25534  002D7A  6EE6               	movwf	postinc1,c
 25535  002D7C  EC5D  F011         	call	_send_lcd_data_dma	;wreg free
 25536                           
 25537                           ; BSR set to: 59
 25538                           ;eadog.c: 174:  wait_lcd_done();
 25539  002D80  EC92  F017         	call	_wait_lcd_done	;wreg free
 25540                           
 25541                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 25542                           ;stkvar	_strPtr @ sp[(0)+-1]
 25543  002D84  0EFF               	movlw	-1
 25544  002D86  50E3               	movf	plusw1,w,c
 25545  002D88  6EE6               	movwf	postinc1,c
 25546  002D8A  EC5D  F011         	call	_send_lcd_data_dma	;wreg free
 25547                           
 25548                           ; BSR set to: 59
 25549                           ;eadog.c: 176:  wait_lcd_done();
 25550  002D8E  EC92  F017         	call	_wait_lcd_done	;wreg free
 25551                           
 25552                           ; BSR set to: 61
 25553                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25554  002D92  52E5               	movf	postdec1,f,c
 25555  002D94  0012               	return		;funcret
 25556  002D96                     __end_of_send_lcd_cmd_dma:
 25557                           	opt callstack 0
 25558                           
 25559 ;; *************** function _wait_lcd_done *****************
 25560 ;; Defined at:
 25561 ;;		line 443 in file "eadog.c"
 25562 ;; Parameters:    Size  Location     Type
 25563 ;;		None
 25564 ;; Auto vars:     Size  Location     Type
 25565 ;;		None
 25566 ;; Return value:  Size  Location     Type
 25567 ;;                  1  [STACK] void 
 25568 ;; Registers used:
 25569 ;;		None
 25570 ;; Tracked objects:
 25571 ;;		On entry : 0/2
 25572 ;;		On exit  : 3F/3D
 25573 ;;		Unchanged: 0/0
 25574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25579 ;;Total ram usage:        0 bytes
 25580 ;; Hardware stack levels used:    1
 25581 ;; Hardware stack levels required when called:   15
 25582 ;; This function calls:
 25583 ;;		Nothing
 25584 ;; This function is called by:
 25585 ;;		_main
 25586 ;;		_send_lcd_cmd_dma
 25587 ;;		_eaDogM_WriteStringAtPos
 25588 ;;		_update_lcd
 25589 ;;		_vterm_dump
 25590 ;; This function uses a reentrant model
 25591 ;;
 25592                           
 25593                           	psect	text86
 25594  002F24                     __ptext86:
 25595                           	opt callstack 0
 25596  002F24                     _wait_lcd_done:
 25597                           	opt callstack 15
 25598                           
 25599                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 25600                           
 25601                           ; BSR set to: 61
 25602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25603                           ;incstack = 0
 25604  002F24  0100               	movlb	0	; () banked
 25605  002F26  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 25606  002F28  D7FD               	goto	_wait_lcd_done
 25607  002F2A                     u10950:
 25608  002F2A  013D               	movlb	61	; () banked
 25609  002F2C  BB17               	btfsc	23,5,b	;volatile
 25610  002F2E  0012               	return	
 25611  002F30  D7FC               	goto	u10950
 25612  002F32                     __end_of_wait_lcd_done:
 25613                           	opt callstack 0
 25614                           
 25615 ;; *************** function _send_lcd_data_dma *****************
 25616 ;; Defined at:
 25617 ;;		line 182 in file "eadog.c"
 25618 ;; Parameters:    Size  Location     Type
 25619 ;;  strPtr          1  [STACK] const unsigned char 
 25620 ;; Auto vars:     Size  Location     Type
 25621 ;;		None
 25622 ;; Return value:  Size  Location     Type
 25623 ;;                  1  [STACK] void 
 25624 ;; Registers used:
 25625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25626 ;; Tracked objects:
 25627 ;;		On entry : 0/3D
 25628 ;;		On exit  : 3F/3B
 25629 ;;		Unchanged: 0/0
 25630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25635 ;;Total ram usage:        0 bytes
 25636 ;; Hardware stack levels used:    1
 25637 ;; Hardware stack levels required when called:   17
 25638 ;; This function calls:
 25639 ;;		_ringBufS_flush
 25640 ;;		_ringBufS_put_dma
 25641 ;;		_start_lcd
 25642 ;;		_wait_lcd_set
 25643 ;; This function is called by:
 25644 ;;		_send_lcd_cmd_dma
 25645 ;;		_eaDogM_WriteStringAtPos
 25646 ;; This function uses a reentrant model
 25647 ;;
 25648                           
 25649                           	psect	text87
 25650  0022BA                     __ptext87:
 25651                           	opt callstack 0
 25652  0022BA                     _send_lcd_data_dma:
 25653                           	opt callstack 11
 25654                           
 25655                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 25656                           
 25657                           ; BSR set to: 61
 25658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25659                           ;incstack = 0
 25660  0022BA  ECF0  F017         	call	_wait_lcd_set	;wreg free
 25661                           
 25662                           ; BSR set to: 0
 25663                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 25664  0022BE  0E00               	movlw	0
 25665  0022C0  6EE6               	movwf	postinc1,c
 25666  0022C2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25667  0022C8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25668  0022CE  ECE1  F009         	call	_ringBufS_flush	;wreg free
 25669  0022D2  94BC               	bcf	188,2,c	;volatile
 25670                           
 25671                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 25672  0022D4  013B               	movlb	59	; () banked
 25673  0022D6  9FFC               	bcf	252,7,b	;volatile
 25674                           
 25675                           ; BSR set to: 59
 25676                           ;eadog.c: 189:  DMA1SSZ = 1;
 25677  0022D8  0E00               	movlw	0
 25678  0022DA  6FF8               	movwf	248,b	;volatile
 25679  0022DC  0E01               	movlw	1
 25680  0022DE  6FF7               	movwf	247,b	;volatile
 25681                           
 25682                           ; BSR set to: 59
 25683                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 25684  0022E0  8FFC               	bsf	252,7,b	;volatile
 25685                           
 25686                           ; BSR set to: 59
 25687                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 25688                           ;stkvar	_strPtr @ sp[(0)+-1]
 25689  0022E2  0EFF               	movlw	-1
 25690  0022E4  50E3               	movf	plusw1,w,c
 25691  0022E6  6EE6               	movwf	postinc1,c
 25692  0022E8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25693  0022EE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25694  0022F4  EC6B  F007         	call	_ringBufS_put_dma	;wreg free
 25695                           
 25696                           ;eadog.c: 192:  start_lcd();
 25697  0022F8  ECF3  F017         	call	_start_lcd	;wreg free
 25698                           
 25699                           ; BSR set to: 59
 25700                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 25701  0022FC  52E5               	movf	postdec1,f,c
 25702  0022FE  0012               	return		;funcret
 25703  002300                     __end_of_send_lcd_data_dma:
 25704                           	opt callstack 0
 25705                           
 25706 ;; *************** function _eaDogM_WriteString *****************
 25707 ;; Defined at:
 25708 ;;		line 151 in file "eadog.c"
 25709 ;; Parameters:    Size  Location     Type
 25710 ;;  strPtr          2  [STACK] PTR unsigned char 
 25711 ;;		 -> D.lcd(640), D(642), V(181), 
 25712 ;; Auto vars:     Size  Location     Type
 25713 ;;		None
 25714 ;; Return value:  Size  Location     Type
 25715 ;;                  1  [STACK] void 
 25716 ;; Registers used:
 25717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25718 ;; Tracked objects:
 25719 ;;		On entry : 3F/3D
 25720 ;;		On exit  : 3F/3B
 25721 ;;		Unchanged: 0/0
 25722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25727 ;;Total ram usage:        0 bytes
 25728 ;; Hardware stack levels used:    1
 25729 ;; Hardware stack levels required when called:   24
 25730 ;; This function calls:
 25731 ;;		_printf
 25732 ;;		_ringBufS_flush
 25733 ;;		_start_lcd
 25734 ;;		_strlen
 25735 ;;		_wait_lcd_set
 25736 ;; This function is called by:
 25737 ;;		_eaDogM_WriteStringAtPos
 25738 ;; This function uses a reentrant model
 25739 ;;
 25740                           
 25741                           	psect	text88
 25742  000F80                     __ptext88:
 25743                           	opt callstack 0
 25744  000F80                     _eaDogM_WriteString:
 25745                           	opt callstack 4
 25746                           
 25747                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 25748                           
 25749                           ; BSR set to: 59
 25750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25751                           ;incstack = 0
 25752  000F80  ECF0  F017         	call	_wait_lcd_set	;wreg free
 25753                           
 25754                           ; BSR set to: 0
 25755                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 25756  000F84  0E00               	movlw	0
 25757  000F86  6EE6               	movwf	postinc1,c
 25758  000F88  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25759  000F8E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25760  000F94  ECE1  F009         	call	_ringBufS_flush	;wreg free
 25761  000F98  94BC               	bcf	188,2,c	;volatile
 25762                           
 25763                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 25764                           ;stkvar	_strPtr @ sp[(0)+-2]
 25765  000F9A  0EFE               	movlw	-2
 25766  000F9C  006F FF8F FFE6     	movff	plusw1,postinc1
 25767  000FA2  006F FF8F FFE6     	movff	plusw1,postinc1
 25768  000FA8  EC65  F008         	call	_strlen	;wreg free
 25769  000FAC  502B               	movf	(btemp+1)^0,w,c
 25770  000FAE  E104               	bnz	u16310
 25771  000FB0  0E41               	movlw	65
 25772  000FB2  5C2A               	subwf	btemp^0,w,c
 25773  000FB4  A0D8               	btfss	status,0,c
 25774  000FB6  D010               	goto	l16773
 25775  000FB8                     u16310:
 25776                           
 25777                           ;stkvar	_strPtr @ sp[(0)+-2]
 25778  000FB8  0EFE               	movlw	-2
 25779  000FBA  006F FF8C  F034    	movff	plusw1,btemp+10
 25780  000FC0  0EFF               	movlw	-1
 25781  000FC2  006F FF8C  F035    	movff	plusw1,btemp+11
 25782  000FC8  0E40               	movlw	64
 25783  000FCA  2434               	addwf	(btemp+10)^0,w,c
 25784  000FCC  6ED9               	movwf	fsr2l,c
 25785  000FCE  0E00               	movlw	0
 25786  000FD0  2035               	addwfc	(btemp+11)^0,w,c
 25787  000FD2  6EDA               	movwf	fsr2h,c
 25788  000FD4  0E00               	movlw	0
 25789  000FD6  6EDF               	movwf	indf2,c
 25790  000FD8                     l16773:
 25791                           
 25792                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 25793  000FD8  013B               	movlb	59	; () banked
 25794  000FDA  9FFC               	bcf	252,7,b	;volatile
 25795                           
 25796                           ; BSR set to: 59
 25797                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 25798                           ;stkvar	_strPtr @ sp[(0)+-2]
 25799  000FDC  0EFE               	movlw	-2
 25800  000FDE  006F FF8F FFE6     	movff	plusw1,postinc1
 25801  000FE4  006F FF8F FFE6     	movff	plusw1,postinc1
 25802  000FEA  EC65  F008         	call	_strlen	;wreg free
 25803  000FEE  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 25804  000FF4  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 25805                           
 25806                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 25807  000FFA  013B               	movlb	59	; () banked
 25808  000FFC  8FFC               	bsf	252,7,b	;volatile
 25809                           
 25810                           ; BSR set to: 59
 25811                           ;eadog.c: 161:  printf("%s", strPtr);
 25812                           ;stkvar	_strPtr @ sp[(0)+-2]
 25813  000FFE  0EFE               	movlw	-2
 25814  001000  006F FF8F FFE6     	movff	plusw1,postinc1
 25815  001006  006F FF8F FFE6     	movff	plusw1,postinc1
 25816  00100C  0EFC               	movlw	low STR_82
 25817  00100E  6EE6               	movwf	postinc1,c
 25818  001010  0EFF               	movlw	high STR_82
 25819  001012  6EE6               	movwf	postinc1,c
 25820  001014  0E04               	movlw	4
 25821  001016  6EE6               	movwf	postinc1,c
 25822  001018  EC93  F00E         	call	_printf	;wreg free
 25823                           
 25824                           ; BSR set to: 0
 25825                           ;eadog.c: 162:  start_lcd();
 25826  00101C  ECF3  F017         	call	_start_lcd	;wreg free
 25827                           
 25828                           ; BSR set to: 59
 25829                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25830  001020  52E5               	movf	postdec1,f,c
 25831  001022  52E5               	movf	postdec1,f,c
 25832  001024  0012               	return		;funcret
 25833  001026                     __end_of_eaDogM_WriteString:
 25834                           	opt callstack 0
 25835                           
 25836 ;; *************** function _wait_lcd_set *****************
 25837 ;; Defined at:
 25838 ;;		line 433 in file "eadog.c"
 25839 ;; Parameters:    Size  Location     Type
 25840 ;;		None
 25841 ;; Auto vars:     Size  Location     Type
 25842 ;;		None
 25843 ;; Return value:  Size  Location     Type
 25844 ;;                  1  [STACK] void 
 25845 ;; Registers used:
 25846 ;;		None
 25847 ;; Tracked objects:
 25848 ;;		On entry : 0/3D
 25849 ;;		On exit  : 3F/0
 25850 ;;		Unchanged: 0/0
 25851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25856 ;;Total ram usage:        0 bytes
 25857 ;; Hardware stack levels used:    1
 25858 ;; Hardware stack levels required when called:   15
 25859 ;; This function calls:
 25860 ;;		Nothing
 25861 ;; This function is called by:
 25862 ;;		_eaDogM_WriteString
 25863 ;;		_send_lcd_data_dma
 25864 ;; This function uses a reentrant model
 25865 ;;
 25866                           
 25867                           	psect	text89
 25868  002FE0                     __ptext89:
 25869                           	opt callstack 0
 25870  002FE0                     _wait_lcd_set:
 25871                           	opt callstack 12
 25872                           
 25873                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 25874                           
 25875                           ; BSR set to: 59
 25876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25877                           ;incstack = 0
 25878  002FE0  0100               	movlb	0	; () banked
 25879  002FE2  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 25880                           
 25881                           ; BSR set to: 0
 25882                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25883  002FE4  0012               	return		;funcret
 25884  002FE6                     __end_of_wait_lcd_set:
 25885                           	opt callstack 0
 25886                           
 25887 ;; *************** function _start_lcd *****************
 25888 ;; Defined at:
 25889 ;;		line 428 in file "eadog.c"
 25890 ;; Parameters:    Size  Location     Type
 25891 ;;		None
 25892 ;; Auto vars:     Size  Location     Type
 25893 ;;		None
 25894 ;; Return value:  Size  Location     Type
 25895 ;;                  1  [STACK] void 
 25896 ;; Registers used:
 25897 ;;		None
 25898 ;; Tracked objects:
 25899 ;;		On entry : 0/3B
 25900 ;;		On exit  : 3F/3B
 25901 ;;		Unchanged: 0/0
 25902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25907 ;;Total ram usage:        0 bytes
 25908 ;; Hardware stack levels used:    1
 25909 ;; Hardware stack levels required when called:   15
 25910 ;; This function calls:
 25911 ;;		Nothing
 25912 ;; This function is called by:
 25913 ;;		_eaDogM_WriteString
 25914 ;;		_send_lcd_data_dma
 25915 ;; This function uses a reentrant model
 25916 ;;
 25917                           
 25918                           	psect	text90
 25919  002FE6                     __ptext90:
 25920                           	opt callstack 0
 25921  002FE6                     _start_lcd:
 25922                           	opt callstack 12
 25923                           
 25924                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 25925                           
 25926                           ; BSR set to: 0
 25927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25928                           ;incstack = 0
 25929  002FE6  013B               	movlb	59	; () banked
 25930  002FE8  8DFC               	bsf	252,6,b	;volatile
 25931                           
 25932                           ; BSR set to: 59
 25933                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25934  002FEA  0012               	return		;funcret
 25935  002FEC                     __end_of_start_lcd:
 25936                           	opt callstack 0
 25937                           
 25938 ;; *************** function _ringBufS_flush *****************
 25939 ;; Defined at:
 25940 ;;		line 76 in file "ringbufs.c"
 25941 ;; Parameters:    Size  Location     Type
 25942 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25943 ;;		 -> ring_buf1(67), 
 25944 ;;  clearBuffer     1  [STACK] const char 
 25945 ;; Auto vars:     Size  Location     Type
 25946 ;;		None
 25947 ;; Return value:  Size  Location     Type
 25948 ;;                  1  [STACK] void 
 25949 ;; Registers used:
 25950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25951 ;; Tracked objects:
 25952 ;;		On entry : 3F/0
 25953 ;;		On exit  : 0/0
 25954 ;;		Unchanged: 0/0
 25955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25960 ;;Total ram usage:        0 bytes
 25961 ;; Hardware stack levels used:    1
 25962 ;; Hardware stack levels required when called:   16
 25963 ;; This function calls:
 25964 ;;		_memset
 25965 ;; This function is called by:
 25966 ;;		_eaDogM_WriteString
 25967 ;;		_send_lcd_data_dma
 25968 ;; This function uses a reentrant model
 25969 ;;
 25970                           
 25971                           	psect	text91
 25972  0013C2                     __ptext91:
 25973                           	opt callstack 0
 25974  0013C2                     _ringBufS_flush:
 25975                           	opt callstack 11
 25976                           
 25977                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 25978                           ;stkvar	__this @ sp[(0)+-2]
 25979                           
 25980                           ; BSR set to: 59
 25981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25982                           ;incstack = 0
 25983  0013C2  0EFE               	movlw	-2
 25984  0013C4  006F FF8C  F034    	movff	plusw1,btemp+10
 25985  0013CA  0EFF               	movlw	-1
 25986  0013CC  006F FF8C  F035    	movff	plusw1,btemp+11
 25987  0013D2  0E42               	movlw	66
 25988  0013D4  2434               	addwf	(btemp+10)^0,w,c
 25989  0013D6  6ED9               	movwf	fsr2l,c
 25990  0013D8  0E00               	movlw	0
 25991  0013DA  2035               	addwfc	(btemp+11)^0,w,c
 25992  0013DC  6EDA               	movwf	fsr2h,c
 25993  0013DE  0E00               	movlw	0
 25994  0013E0  6EDF               	movwf	indf2,c
 25995                           
 25996                           ;ringbufs.c: 79:  _this->head = 0;
 25997                           ;stkvar	__this @ sp[(0)+-2]
 25998  0013E2  0EFE               	movlw	-2
 25999  0013E4  006F FF8C  F034    	movff	plusw1,btemp+10
 26000  0013EA  0EFF               	movlw	-1
 26001  0013EC  006F FF8C  F035    	movff	plusw1,btemp+11
 26002  0013F2  0E40               	movlw	64
 26003  0013F4  2434               	addwf	(btemp+10)^0,w,c
 26004  0013F6  6ED9               	movwf	fsr2l,c
 26005  0013F8  0E00               	movlw	0
 26006  0013FA  2035               	addwfc	(btemp+11)^0,w,c
 26007  0013FC  6EDA               	movwf	fsr2h,c
 26008  0013FE  0E00               	movlw	0
 26009  001400  6EDF               	movwf	indf2,c
 26010                           
 26011                           ;ringbufs.c: 80:  _this->tail = 0;
 26012                           ;stkvar	__this @ sp[(0)+-2]
 26013  001402  0EFE               	movlw	-2
 26014  001404  006F FF8C  F034    	movff	plusw1,btemp+10
 26015  00140A  0EFF               	movlw	-1
 26016  00140C  006F FF8C  F035    	movff	plusw1,btemp+11
 26017  001412  0E41               	movlw	65
 26018  001414  2434               	addwf	(btemp+10)^0,w,c
 26019  001416  6ED9               	movwf	fsr2l,c
 26020  001418  0E00               	movlw	0
 26021  00141A  2035               	addwfc	(btemp+11)^0,w,c
 26022  00141C  6EDA               	movwf	fsr2h,c
 26023  00141E  0E00               	movlw	0
 26024  001420  6EDF               	movwf	indf2,c
 26025                           
 26026                           ;ringbufs.c: 81:  if (clearBuffer) {
 26027                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 26028  001422  0EFD               	movlw	-3
 26029  001424  50E3               	movf	plusw1,w,c
 26030  001426  B4D8               	btfsc	status,2,c
 26031  001428  D011               	goto	l1757
 26032                           
 26033                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 26034  00142A  0E40               	movlw	64
 26035  00142C  6EE6               	movwf	postinc1,c
 26036  00142E  0E00               	movlw	0
 26037  001430  6EE6               	movwf	postinc1,c
 26038  001432  0E00               	movlw	0
 26039  001434  6EE6               	movwf	postinc1,c
 26040  001436  0E00               	movlw	0
 26041  001438  6EE6               	movwf	postinc1,c
 26042                           
 26043                           ;stkvar	__this @ sp[(-4)+-2]
 26044  00143A  0EFA               	movlw	-6
 26045  00143C  006F FF8F FFE6     	movff	plusw1,postinc1
 26046  001442  006F FF8F FFE6     	movff	plusw1,postinc1
 26047  001448  ECD6  F0D9         	call	_memset	;wreg free
 26048  00144C                     l1757:
 26049                           
 26050                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 26051  00144C  52E5               	movf	postdec1,f,c
 26052  00144E  52E5               	movf	postdec1,f,c
 26053  001450  52E5               	movf	postdec1,f,c
 26054  001452  0012               	return		;funcret
 26055  001454                     __end_of_ringBufS_flush:
 26056                           	opt callstack 0
 26057                           
 26058 ;; *************** function _memset *****************
 26059 ;; Defined at:
 26060 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 26061 ;; Parameters:    Size  Location     Type
 26062 ;;  dest            2  [STACK] PTR void 
 26063 ;;		 -> ring_buf2(67), ring_buf1(67), 
 26064 ;;  c               2  [STACK] int 
 26065 ;;  n               2  [STACK] unsigned int 
 26066 ;; Auto vars:     Size  Location     Type
 26067 ;;  s               2  [STACK] PTR unsigned char 
 26068 ;;		 -> ring_buf2(67), ring_buf1(67), 
 26069 ;;  k               2  [STACK] unsigned int 
 26070 ;; Return value:  Size  Location     Type
 26071 ;;                  2  [STACK] PTR void 
 26072 ;; Registers used:
 26073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 26074 ;; Tracked objects:
 26075 ;;		On entry : 0/0
 26076 ;;		On exit  : 0/0
 26077 ;;		Unchanged: 0/0
 26078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26083 ;;Total ram usage:        0 bytes
 26084 ;; Hardware stack levels used:    1
 26085 ;; Hardware stack levels required when called:   15
 26086 ;; This function calls:
 26087 ;;		Nothing
 26088 ;; This function is called by:
 26089 ;;		_ringBufS_init
 26090 ;;		_ringBufS_flush
 26091 ;; This function uses a reentrant model
 26092 ;;
 26093                           
 26094                           	psect	text92
 26095  01B3AC                     __ptext92:
 26096                           	opt callstack 0
 26097  01B3AC                     _memset:
 26098                           	opt callstack 0
 26099                           
 26100                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26101  01B3AC  52E6               	movf	postinc1,f,c
 26102  01B3AE  52E6               	movf	postinc1,f,c
 26103  01B3B0  52E6               	movf	postinc1,f,c
 26104  01B3B2  52E6               	movf	postinc1,f,c
 26105                           
 26106                           ;stkvar	_dest @ sp[(-4)+-2]
 26107                           
 26108                           ;incstack = 0
 26109  01B3B4  0EFA               	movlw	-6
 26110  01B3B6  006F FF8C  F034    	movff	plusw1,btemp+10
 26111  01B3BC  0EFB               	movlw	-5
 26112  01B3BE  006F FF8C  F035    	movff	plusw1,btemp+11
 26113                           
 26114                           ;stkvar	_s @ sp[(-4)+0]
 26115  01B3C4  0EFD               	movlw	-3
 26116  01B3C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26117  01B3CC  0EFC               	movlw	-4
 26118  01B3CE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26119                           
 26120                           ;stkvar	_n @ sp[(-4)+-6]
 26121  01B3D4  0EF6               	movlw	-10
 26122  01B3D6  006F FF8C  F02A    	movff	plusw1,btemp
 26123  01B3DC  0EF7               	movlw	-9
 26124  01B3DE  50E3               	movf	plusw1,w,c
 26125  01B3E0  102A               	iorwf	btemp^0,w,c
 26126  01B3E2  B4D8               	btfsc	status,2,c
 26127  01B3E4  D154               	goto	u14490
 26128                           
 26129                           ;stkvar	_c @ sp[(-4)+-4]
 26130                           ;stkvar	_s @ sp[(-4)+0]
 26131  01B3E6  0EFC               	movlw	-4
 26132  01B3E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26133  01B3EE  0EFD               	movlw	-3
 26134  01B3F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26135  01B3F6  0EF8               	movlw	-8
 26136  01B3F8  006F FF8F FFDF     	movff	plusw1,indf2
 26137                           
 26138                           ;stkvar	_c @ sp[(-4)+-4]
 26139                           ;stkvar	_n @ sp[(-4)+-6]
 26140                           ;stkvar	_s @ sp[(-4)+0]
 26141  01B3FE  0EFC               	movlw	-4
 26142  01B400  006F FF8C  F034    	movff	plusw1,btemp+10
 26143  01B406  0EFD               	movlw	-3
 26144  01B408  006F FF8C  F035    	movff	plusw1,btemp+11
 26145  01B40E  0EF6               	movlw	-10
 26146  01B410  50E3               	movf	plusw1,w,c
 26147  01B412  2634               	addwf	(btemp+10)^0,f,c
 26148  01B414  0EF7               	movlw	-9
 26149  01B416  50E3               	movf	plusw1,w,c
 26150  01B418  2235               	addwfc	(btemp+11)^0,f,c
 26151  01B41A  0EFF               	movlw	255
 26152  01B41C  2434               	addwf	(btemp+10)^0,w,c
 26153  01B41E  6ED9               	movwf	fsr2l,c
 26154  01B420  0EFF               	movlw	255
 26155  01B422  2035               	addwfc	(btemp+11)^0,w,c
 26156  01B424  6EDA               	movwf	fsr2h,c
 26157  01B426  0EF8               	movlw	-8
 26158  01B428  006F FF8F FFDF     	movff	plusw1,indf2
 26159                           
 26160                           ;stkvar	_n @ sp[(-4)+-6]
 26161  01B42E  0EF7               	movlw	-9
 26162  01B430  50E3               	movf	plusw1,w,c
 26163  01B432  E108               	bnz	l15589
 26164  01B434  0EF6               	movlw	-10
 26165  01B436  006F FF8C  F02A    	movff	plusw1,btemp
 26166  01B43C  0E03               	movlw	3
 26167  01B43E  5E2A               	subwf	btemp^0,f,c
 26168  01B440  A0D8               	btfss	status,0,c
 26169  01B442  D125               	goto	u14490
 26170  01B444                     l15589:
 26171                           
 26172                           ;stkvar	_c @ sp[(-4)+-4]
 26173                           ;stkvar	_s @ sp[(-4)+0]
 26174  01B444  0EFC               	movlw	-4
 26175  01B446  006F FF8C  F034    	movff	plusw1,btemp+10
 26176  01B44C  0EFD               	movlw	-3
 26177  01B44E  006F FF8C  F035    	movff	plusw1,btemp+11
 26178  01B454  0E01               	movlw	1
 26179  01B456  2434               	addwf	(btemp+10)^0,w,c
 26180  01B458  6ED9               	movwf	fsr2l,c
 26181  01B45A  0E00               	movlw	0
 26182  01B45C  2035               	addwfc	(btemp+11)^0,w,c
 26183  01B45E  6EDA               	movwf	fsr2h,c
 26184  01B460  0EF8               	movlw	-8
 26185  01B462  006F FF8F FFDF     	movff	plusw1,indf2
 26186                           
 26187                           ;stkvar	_c @ sp[(-4)+-4]
 26188                           ;stkvar	_s @ sp[(-4)+0]
 26189  01B468  0EFC               	movlw	-4
 26190  01B46A  006F FF8C  F034    	movff	plusw1,btemp+10
 26191  01B470  0EFD               	movlw	-3
 26192  01B472  006F FF8C  F035    	movff	plusw1,btemp+11
 26193  01B478  0E02               	movlw	2
 26194  01B47A  2434               	addwf	(btemp+10)^0,w,c
 26195  01B47C  6ED9               	movwf	fsr2l,c
 26196  01B47E  0E00               	movlw	0
 26197  01B480  2035               	addwfc	(btemp+11)^0,w,c
 26198  01B482  6EDA               	movwf	fsr2h,c
 26199  01B484  0EF8               	movlw	-8
 26200  01B486  006F FF8F FFDF     	movff	plusw1,indf2
 26201                           
 26202                           ;stkvar	_c @ sp[(-4)+-4]
 26203                           ;stkvar	_n @ sp[(-4)+-6]
 26204                           ;stkvar	_s @ sp[(-4)+0]
 26205  01B48C  0EFC               	movlw	-4
 26206  01B48E  006F FF8C  F034    	movff	plusw1,btemp+10
 26207  01B494  0EFD               	movlw	-3
 26208  01B496  006F FF8C  F035    	movff	plusw1,btemp+11
 26209  01B49C  0EF6               	movlw	-10
 26210  01B49E  50E3               	movf	plusw1,w,c
 26211  01B4A0  2634               	addwf	(btemp+10)^0,f,c
 26212  01B4A2  0EF7               	movlw	-9
 26213  01B4A4  50E3               	movf	plusw1,w,c
 26214  01B4A6  2235               	addwfc	(btemp+11)^0,f,c
 26215  01B4A8  0EFE               	movlw	254
 26216  01B4AA  2434               	addwf	(btemp+10)^0,w,c
 26217  01B4AC  6ED9               	movwf	fsr2l,c
 26218  01B4AE  0EFF               	movlw	255
 26219  01B4B0  2035               	addwfc	(btemp+11)^0,w,c
 26220  01B4B2  6EDA               	movwf	fsr2h,c
 26221  01B4B4  0EF8               	movlw	-8
 26222  01B4B6  006F FF8F FFDF     	movff	plusw1,indf2
 26223                           
 26224                           ;stkvar	_c @ sp[(-4)+-4]
 26225                           ;stkvar	_n @ sp[(-4)+-6]
 26226                           ;stkvar	_s @ sp[(-4)+0]
 26227  01B4BC  0EFC               	movlw	-4
 26228  01B4BE  006F FF8C  F034    	movff	plusw1,btemp+10
 26229  01B4C4  0EFD               	movlw	-3
 26230  01B4C6  006F FF8C  F035    	movff	plusw1,btemp+11
 26231  01B4CC  0EF6               	movlw	-10
 26232  01B4CE  50E3               	movf	plusw1,w,c
 26233  01B4D0  2634               	addwf	(btemp+10)^0,f,c
 26234  01B4D2  0EF7               	movlw	-9
 26235  01B4D4  50E3               	movf	plusw1,w,c
 26236  01B4D6  2235               	addwfc	(btemp+11)^0,f,c
 26237  01B4D8  0EFD               	movlw	253
 26238  01B4DA  2434               	addwf	(btemp+10)^0,w,c
 26239  01B4DC  6ED9               	movwf	fsr2l,c
 26240  01B4DE  0EFF               	movlw	255
 26241  01B4E0  2035               	addwfc	(btemp+11)^0,w,c
 26242  01B4E2  6EDA               	movwf	fsr2h,c
 26243  01B4E4  0EF8               	movlw	-8
 26244  01B4E6  006F FF8F FFDF     	movff	plusw1,indf2
 26245                           
 26246                           ;stkvar	_n @ sp[(-4)+-6]
 26247  01B4EC  0EF7               	movlw	-9
 26248  01B4EE  50E3               	movf	plusw1,w,c
 26249  01B4F0  E108               	bnz	l15595
 26250  01B4F2  0EF6               	movlw	-10
 26251  01B4F4  006F FF8C  F02A    	movff	plusw1,btemp
 26252  01B4FA  0E07               	movlw	7
 26253  01B4FC  5E2A               	subwf	btemp^0,f,c
 26254  01B4FE  A0D8               	btfss	status,0,c
 26255  01B500  D0C6               	goto	u14490
 26256  01B502                     l15595:
 26257                           
 26258                           ;stkvar	_c @ sp[(-4)+-4]
 26259                           ;stkvar	_s @ sp[(-4)+0]
 26260  01B502  0EFC               	movlw	-4
 26261  01B504  006F FF8C  F034    	movff	plusw1,btemp+10
 26262  01B50A  0EFD               	movlw	-3
 26263  01B50C  006F FF8C  F035    	movff	plusw1,btemp+11
 26264  01B512  0E03               	movlw	3
 26265  01B514  2434               	addwf	(btemp+10)^0,w,c
 26266  01B516  6ED9               	movwf	fsr2l,c
 26267  01B518  0E00               	movlw	0
 26268  01B51A  2035               	addwfc	(btemp+11)^0,w,c
 26269  01B51C  6EDA               	movwf	fsr2h,c
 26270  01B51E  0EF8               	movlw	-8
 26271  01B520  006F FF8F FFDF     	movff	plusw1,indf2
 26272                           
 26273                           ;stkvar	_c @ sp[(-4)+-4]
 26274                           ;stkvar	_n @ sp[(-4)+-6]
 26275                           ;stkvar	_s @ sp[(-4)+0]
 26276  01B526  0EFC               	movlw	-4
 26277  01B528  006F FF8C  F034    	movff	plusw1,btemp+10
 26278  01B52E  0EFD               	movlw	-3
 26279  01B530  006F FF8C  F035    	movff	plusw1,btemp+11
 26280  01B536  0EF6               	movlw	-10
 26281  01B538  50E3               	movf	plusw1,w,c
 26282  01B53A  2634               	addwf	(btemp+10)^0,f,c
 26283  01B53C  0EF7               	movlw	-9
 26284  01B53E  50E3               	movf	plusw1,w,c
 26285  01B540  2235               	addwfc	(btemp+11)^0,f,c
 26286  01B542  0EFC               	movlw	252
 26287  01B544  2434               	addwf	(btemp+10)^0,w,c
 26288  01B546  6ED9               	movwf	fsr2l,c
 26289  01B548  0EFF               	movlw	255
 26290  01B54A  2035               	addwfc	(btemp+11)^0,w,c
 26291  01B54C  6EDA               	movwf	fsr2h,c
 26292  01B54E  0EF8               	movlw	-8
 26293  01B550  006F FF8F FFDF     	movff	plusw1,indf2
 26294                           
 26295                           ;stkvar	_n @ sp[(-4)+-6]
 26296  01B556  0EF7               	movlw	-9
 26297  01B558  50E3               	movf	plusw1,w,c
 26298  01B55A  E108               	bnz	l15601
 26299  01B55C  0EF6               	movlw	-10
 26300  01B55E  006F FF8C  F02A    	movff	plusw1,btemp
 26301  01B564  0E09               	movlw	9
 26302  01B566  5E2A               	subwf	btemp^0,f,c
 26303  01B568  A0D8               	btfss	status,0,c
 26304  01B56A  D091               	goto	u14490
 26305  01B56C                     l15601:
 26306                           
 26307                           ;stkvar	_s @ sp[(-4)+0]
 26308  01B56C  0EFC               	movlw	-4
 26309  01B56E  006F FF8C  F034    	movff	plusw1,btemp+10
 26310  01B574  1E34               	comf	(btemp+10)^0,f,c
 26311  01B576  0EFD               	movlw	-3
 26312  01B578  006F FF8C  F035    	movff	plusw1,btemp+11
 26313  01B57E  1E35               	comf	(btemp+11)^0,f,c
 26314  01B580  2A34               	incf	(btemp+10)^0,f,c
 26315  01B582  B4D8               	btfsc	status,2,c
 26316  01B584  2A35               	incf	(btemp+11)^0,f,c
 26317  01B586  0E03               	movlw	3
 26318  01B588  1634               	andwf	(btemp+10)^0,f,c
 26319  01B58A  0E00               	movlw	0
 26320  01B58C  1635               	andwf	(btemp+11)^0,f,c
 26321                           
 26322                           ;stkvar	_k @ sp[(-4)+2]
 26323  01B58E  0EFE               	movlw	-2
 26324  01B590  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26325  01B596  0EFF               	movlw	-1
 26326  01B598  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26327                           
 26328                           ;stkvar	_k @ sp[(-4)+2]
 26329                           ;stkvar	_s @ sp[(-4)+0]
 26330  01B59E  0EFC               	movlw	-4
 26331  01B5A0  50E3               	movf	plusw1,w,c
 26332  01B5A2  6E2A               	movwf	btemp^0,c
 26333  01B5A4  0EFE               	movlw	-2
 26334  01B5A6  50E3               	movf	plusw1,w,c
 26335  01B5A8  262A               	addwf	btemp^0,f,c
 26336  01B5AA  0EFC               	movlw	-4
 26337  01B5AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 26338  01B5B2  0EFD               	movlw	-3
 26339  01B5B4  50E3               	movf	plusw1,w,c
 26340  01B5B6  6E2A               	movwf	btemp^0,c
 26341  01B5B8  0EFF               	movlw	-1
 26342  01B5BA  50E3               	movf	plusw1,w,c
 26343  01B5BC  222A               	addwfc	btemp^0,f,c
 26344  01B5BE  0EFD               	movlw	-3
 26345  01B5C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 26346                           
 26347                           ;stkvar	_k @ sp[(-4)+2]
 26348                           ;stkvar	_n @ sp[(-4)+-6]
 26349  01B5C6  0EF6               	movlw	-10
 26350  01B5C8  50E3               	movf	plusw1,w,c
 26351  01B5CA  6E2A               	movwf	btemp^0,c
 26352  01B5CC  0EFE               	movlw	-2
 26353  01B5CE  50E3               	movf	plusw1,w,c
 26354  01B5D0  5E2A               	subwf	btemp^0,f,c
 26355  01B5D2  0EF6               	movlw	-10
 26356  01B5D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 26357  01B5DA  0EF7               	movlw	-9
 26358  01B5DC  50E3               	movf	plusw1,w,c
 26359  01B5DE  6E2A               	movwf	btemp^0,c
 26360  01B5E0  0EFF               	movlw	-1
 26361  01B5E2  50E3               	movf	plusw1,w,c
 26362  01B5E4  5A2A               	subwfb	btemp^0,f,c
 26363  01B5E6  0EF7               	movlw	-9
 26364  01B5E8  0060  F0AB  FFE3   	movff	btemp,plusw1
 26365  01B5EE  0EFC               	movlw	252
 26366  01B5F0  6E34               	movwf	(btemp+10)^0,c
 26367  01B5F2  0EFF               	movlw	255
 26368  01B5F4  6E35               	movwf	(btemp+11)^0,c
 26369                           
 26370                           ;stkvar	_n @ sp[(-4)+-6]
 26371  01B5F6  0EF6               	movlw	-10
 26372  01B5F8  006F FF8C  F02A    	movff	plusw1,btemp
 26373  01B5FE  5034               	movf	(btemp+10)^0,w,c
 26374  01B600  162A               	andwf	btemp^0,f,c
 26375  01B602  0EF6               	movlw	-10
 26376  01B604  0060  F0AB  FFE3   	movff	btemp,plusw1
 26377  01B60A  0EF7               	movlw	-9
 26378  01B60C  006F FF8C  F02A    	movff	plusw1,btemp
 26379  01B612  5035               	movf	(btemp+11)^0,w,c
 26380  01B614  162A               	andwf	btemp^0,f,c
 26381  01B616  0EF7               	movlw	-9
 26382  01B618  D02E               	goto	L25
 26383  01B61A                     l15609:
 26384                           
 26385                           ;stkvar	_c @ sp[(-4)+-4]
 26386                           ;stkvar	_s @ sp[(-4)+0]
 26387  01B61A  0EFC               	movlw	-4
 26388  01B61C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26389  01B622  0EFD               	movlw	-3
 26390  01B624  006F FF8F FFDA     	movff	plusw1,fsr2h
 26391  01B62A  0EF8               	movlw	-8
 26392  01B62C  006F FF8F FFDF     	movff	plusw1,indf2
 26393                           
 26394                           ;stkvar	_n @ sp[(-4)+-6]
 26395  01B632  0EF6               	movlw	-10
 26396  01B634  006F FF8C  F02A    	movff	plusw1,btemp
 26397  01B63A  0E01               	movlw	1
 26398  01B63C  5E2A               	subwf	btemp^0,f,c
 26399  01B63E  0EF6               	movlw	-10
 26400  01B640  0060  F0AB  FFE3   	movff	btemp,plusw1
 26401  01B646  0EF7               	movlw	-9
 26402  01B648  006F FF8C  F02A    	movff	plusw1,btemp
 26403  01B64E  0E00               	movlw	0
 26404  01B650  5A2A               	subwfb	btemp^0,f,c
 26405  01B652  0EF7               	movlw	-9
 26406  01B654  0060  F0AB  FFE3   	movff	btemp,plusw1
 26407                           
 26408                           ;stkvar	_s @ sp[(-4)+0]
 26409  01B65A  0EFC               	movlw	-4
 26410  01B65C  50E3               	movf	plusw1,w,c
 26411  01B65E  0F01               	addlw	1
 26412  01B660  6E2A               	movwf	btemp^0,c
 26413  01B662  0EFC               	movlw	-4
 26414  01B664  0060  F0AB  FFE3   	movff	btemp,plusw1
 26415  01B66A  6A2A               	clrf	btemp^0,c
 26416  01B66C  0EFD               	movlw	-3
 26417  01B66E  50E3               	movf	plusw1,w,c
 26418  01B670  202A               	addwfc	btemp^0,w,c
 26419  01B672  6E2A               	movwf	btemp^0,c
 26420  01B674  0EFD               	movlw	-3
 26421  01B676                     L25:
 26422  01B676  0060  F0AB  FFE3   	movff	btemp,plusw1
 26423                           
 26424                           ;stkvar	_n @ sp[(-4)+-6]
 26425  01B67C  0EF6               	movlw	-10
 26426  01B67E  006F FF8C  F02A    	movff	plusw1,btemp
 26427  01B684  0EF7               	movlw	-9
 26428  01B686  50E3               	movf	plusw1,w,c
 26429  01B688  102A               	iorwf	btemp^0,w,c
 26430  01B68A  A4D8               	btfss	status,2,c
 26431  01B68C  D7C6               	goto	l15609
 26432  01B68E                     u14490:
 26433                           
 26434                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 26435  01B68E  0EF6               	movlw	246
 26436  01B690  26E1               	addwf	fsr1l,f,c
 26437  01B692  0EFF               	movlw	255
 26438  01B694  22E2               	addwfc	fsr1h,f,c
 26439  01B696  0012               	return		;funcret
 26440  01B698                     __end_of_memset:
 26441                           	opt callstack 0
 26442                           
 26443 ;; *************** function _printf *****************
 26444 ;; Defined at:
 26445 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 26446 ;; Parameters:    Size  Location     Type
 26447 ;;  fmt             2  [STACK] PTR const unsigned char 
 26448 ;;		 -> STR_82(3), 
 26449 ;; Auto vars:     Size  Location     Type
 26450 ;;  ap              2  [STACK] PTR void [1]
 26451 ;;		 -> ?_printf(2), ?_sprintf(2), 
 26452 ;;  ret             2    0        int 
 26453 ;; Return value:  Size  Location     Type
 26454 ;;                  2  [STACK] int 
 26455 ;; Registers used:
 26456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26457 ;; Tracked objects:
 26458 ;;		On entry : 3F/3B
 26459 ;;		On exit  : 3F/0
 26460 ;;		Unchanged: 0/0
 26461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26466 ;;Total ram usage:        0 bytes
 26467 ;; Hardware stack levels used:    1
 26468 ;; Hardware stack levels required when called:   23
 26469 ;; This function calls:
 26470 ;;		_vfprintf
 26471 ;; This function is called by:
 26472 ;;		_eaDogM_WriteString
 26473 ;; This function uses a reentrant model
 26474 ;;
 26475                           
 26476                           	psect	text93
 26477  001D26                     __ptext93:
 26478                           	opt callstack 0
 26479  001D26                     _printf:
 26480                           	opt callstack 0
 26481                           
 26482                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26483  001D26  52E6               	movf	postinc1,f,c
 26484  001D28  52E6               	movf	postinc1,f,c
 26485                           
 26486                           ;stkvar	?_printf @ sp[(-2)+-3]
 26487                           
 26488                           ;incstack = 0
 26489  001D2A  0EFB               	movlw	251
 26490  001D2C  24E1               	addwf	fsr1l,w,c
 26491  001D2E  6E34               	movwf	(btemp+10)^0,c
 26492  001D30  0EFF               	movlw	255
 26493  001D32  20E2               	addwfc	fsr1h,w,c
 26494  001D34  6E35               	movwf	(btemp+11)^0,c
 26495                           
 26496                           ;stkvar	_ap @ sp[(-2)+0]
 26497  001D36  0EFF               	movlw	-1
 26498  001D38  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26499  001D3E  0EFE               	movlw	-2
 26500  001D40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26501                           
 26502                           ;stkvar	_ap @ sp[(-2)+0]
 26503  001D46  0EFE               	movlw	254
 26504  001D48  24E1               	addwf	fsr1l,w,c
 26505  001D4A  6E2A               	movwf	btemp^0,c
 26506  001D4C  0EFF               	movlw	255
 26507  001D4E  20E2               	addwfc	fsr1h,w,c
 26508  001D50  6E2B               	movwf	(btemp+1)^0,c
 26509  001D52  0060  F0AB  FFE6   	movff	btemp,postinc1
 26510  001D58  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26511                           
 26512                           ;stkvar	_fmt @ sp[(-4)+-3]
 26513  001D5E  0EF9               	movlw	-7
 26514  001D60  006F FF8F FFE6     	movff	plusw1,postinc1
 26515  001D66  006F FF8F FFE6     	movff	plusw1,postinc1
 26516  001D6C  0E00               	movlw	0
 26517  001D6E  6EE6               	movwf	postinc1,c
 26518  001D70  0E00               	movlw	0
 26519  001D72  6EE6               	movwf	postinc1,c
 26520  001D74  EC15  F007         	call	_vfprintf	;wreg free
 26521                           
 26522                           ; BSR set to: 0
 26523                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 26524  001D78  52E5               	movf	postdec1,f,c
 26525  001D7A  52E5               	movf	postdec1,f,c
 26526  001D7C  52E5               	movf	postdec1,f,c
 26527  001D7E  50E7               	movf	indf1,w,c
 26528  001D80  5EE1               	subwf	fsr1l,f,c
 26529  001D82  0E00               	movlw	0
 26530  001D84  5AE2               	subwfb	fsr1h,f,c
 26531  001D86  0012               	return		;funcret
 26532  001D88                     __end_of_printf:
 26533                           	opt callstack 0
 26534                           
 26535 ;; *************** function _vfprintf *****************
 26536 ;; Defined at:
 26537 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26538 ;; Parameters:    Size  Location     Type
 26539 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26540 ;;		 -> f(6), NULL(0), 
 26541 ;;  fmt             2  [STACK] PTR const unsigned char 
 26542 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 26543 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 26544 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 26545 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 26546 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 26547 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(22), 
 26548 ;;		 -> STR_76(22), STR_75(22), STR_74(22), STR_73(22), 
 26549 ;;		 -> STR_72(22), STR_71(22), STR_70(22), STR_69(22), 
 26550 ;;		 -> STR_68(19), STR_67(21), STR_66(21), STR_65(21), 
 26551 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26552 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 26553 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 26554 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 26555 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 26556 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 26557 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26558 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 26559 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 26560 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 26561 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 26562 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 26563 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 26564 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 26565 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26566 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26567 ;;  ap              2  [STACK] PTR PTR void 
 26568 ;;		 -> ap(2), ap(2), 
 26569 ;; Auto vars:     Size  Location     Type
 26570 ;;  cfmt            2  [STACK] PTR unsigned char 
 26571 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 26572 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 26573 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 26574 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 26575 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 26576 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(22), 
 26577 ;;		 -> STR_76(22), STR_75(22), STR_74(22), STR_73(22), 
 26578 ;;		 -> STR_72(22), STR_71(22), STR_70(22), STR_69(22), 
 26579 ;;		 -> STR_68(19), STR_67(21), STR_66(21), STR_65(21), 
 26580 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26581 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 26582 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 26583 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 26584 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 26585 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 26586 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26587 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 26588 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 26589 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 26590 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 26591 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 26592 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 26593 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 26594 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26595 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26596 ;; Return value:  Size  Location     Type
 26597 ;;                  2  [STACK] int 
 26598 ;; Registers used:
 26599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26600 ;; Tracked objects:
 26601 ;;		On entry : 0/2
 26602 ;;		On exit  : 3F/0
 26603 ;;		Unchanged: 0/0
 26604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26609 ;;Total ram usage:        0 bytes
 26610 ;; Hardware stack levels used:    1
 26611 ;; Hardware stack levels required when called:   22
 26612 ;; This function calls:
 26613 ;;		_vfpfcnvrt
 26614 ;; This function is called by:
 26615 ;;		_sprintf
 26616 ;;		_printf
 26617 ;; This function uses a reentrant model
 26618 ;;
 26619                           
 26620                           	psect	text94
 26621  000E2A                     __ptext94:
 26622                           	opt callstack 0
 26623  000E2A                     _vfprintf:
 26624                           	opt callstack 0
 26625                           
 26626                           ; BSR set to: 0
 26627                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26628  000E2A  52E6               	movf	postinc1,f,c
 26629  000E2C  52E6               	movf	postinc1,f,c
 26630                           
 26631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 26632                           ;stkvar	_fmt @ sp[(-2)+-4]
 26633                           
 26634                           ;incstack = 0
 26635 ;; hardware stack exceeded
 26636  000E2E  0EFA               	movlw	-6
 26637  000E30  006F FF8C  F034    	movff	plusw1,btemp+10
 26638  000E36  0EFB               	movlw	-5
 26639  000E38  006F FF8C  F035    	movff	plusw1,btemp+11
 26640                           
 26641                           ;stkvar	_cfmt @ sp[(-2)+0]
 26642  000E3E  0EFF               	movlw	-1
 26643  000E40  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26644  000E46  0EFE               	movlw	-2
 26645  000E48  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26646                           
 26647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 26648  000E4E  0100               	movlb	0	; () banked
 26649  000E50  6BBA               	clrf	_nout& (0+255),b
 26650  000E52  6BBB               	clrf	(_nout+1)& (0+255),b
 26651                           
 26652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26653  000E54  D021               	goto	l16795
 26654  000E56                     l16793:
 26655                           
 26656                           ; BSR set to: 0
 26657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 26658                           ;stkvar	_ap @ sp[(-2)+-6]
 26659  000E56  0EF8               	movlw	-8
 26660  000E58  006F FF8F FFE6     	movff	plusw1,postinc1
 26661  000E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 26662                           
 26663                           ;stkvar	_cfmt @ sp[(-4)+0]
 26664  000E64  0EFC               	movlw	252
 26665  000E66  24E1               	addwf	fsr1l,w,c
 26666  000E68  6E2A               	movwf	btemp^0,c
 26667  000E6A  0EFF               	movlw	255
 26668  000E6C  20E2               	addwfc	fsr1h,w,c
 26669  000E6E  6E2B               	movwf	(btemp+1)^0,c
 26670  000E70  0060  F0AB  FFE6   	movff	btemp,postinc1
 26671  000E76  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26672                           
 26673                           ;stkvar	_fp @ sp[(-6)+-2]
 26674  000E7C  0EF8               	movlw	-8
 26675  000E7E  006F FF8F FFE6     	movff	plusw1,postinc1
 26676  000E84  006F FF8F FFE6     	movff	plusw1,postinc1
 26677  000E8A  EC76  F09C         	call	_vfpfcnvrt	;wreg free
 26678  000E8E  502A               	movf	btemp^0,w,c
 26679  000E90  0100               	movlb	0	; () banked
 26680  000E92  27BA               	addwf	_nout& (0+255),f,b
 26681  000E94  502B               	movf	(btemp+1)^0,w,c
 26682  000E96  23BB               	addwfc	(_nout+1)& (0+255),f,b
 26683  000E98                     l16795:
 26684                           
 26685                           ; BSR set to: 0
 26686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26687                           ;stkvar	_cfmt @ sp[(-2)+0]
 26688  000E98  50E1               	movf	fsr1l,w,c
 26689  000E9A  0FFE               	addlw	-2
 26690  000E9C  6ED9               	movwf	fsr2l,c
 26691  000E9E  50E2               	movf	fsr1h,w,c
 26692  000EA0  6EDA               	movwf	fsr2h,c
 26693  000EA2  0EFF               	movlw	255
 26694  000EA4  22DA               	addwfc	fsr2h,f,c
 26695  000EA6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26696  000EAC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26697  000EB2                     	if	0	;tblptru may be non-zero
 26698  000EB2                     	endif
 26699  000EB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26700  000EB2  0E00               	movlw	low (__mediumconst shr (0+16))
 26701  000EB4  6EF8               	movwf	tblptru,c
 26702  000EB6                     	endif
 26703  000EB6  0008               	tblrd		*
 26704  000EB8  50F5               	movf	tablat,w,c
 26705  000EBA  0900               	iorlw	0
 26706  000EBC  A4D8               	btfss	status,2,c
 26707  000EBE  D7CB               	goto	l16793
 26708                           
 26709                           ; BSR set to: 0
 26710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 26711  000EC0  0060  F2E8  F02A   	movff	_nout,btemp
 26712  000EC6  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 26713                           
 26714                           ; BSR set to: 0
 26715                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 26716  000ECC  0EF8               	movlw	248
 26717  000ECE  26E1               	addwf	fsr1l,f,c
 26718  000ED0  0EFF               	movlw	255
 26719  000ED2  22E2               	addwfc	fsr1h,f,c
 26720  000ED4  0012               	return		;funcret
 26721  000ED6                     __end_of_vfprintf:
 26722                           	opt callstack 0
 26723                           
 26724 ;; *************** function _vfpfcnvrt *****************
 26725 ;; Defined at:
 26726 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26727 ;; Parameters:    Size  Location     Type
 26728 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26729 ;;		 -> f(6), NULL(0), 
 26730 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 26731 ;;		 -> cfmt(2), 
 26732 ;;  ap              2  [STACK] PTR PTR void 
 26733 ;;		 -> ap(2), ap(2), 
 26734 ;; Auto vars:     Size  Location     Type
 26735 ;;  llu             8  [STACK] unsigned long long 
 26736 ;;  ll              8  [STACK] long long 
 26737 ;;  f               4  [STACK] long long 
 26738 ;;  ct              3  [STACK] unsigned char [3]
 26739 ;;  vp              3    0        PTR void 
 26740 ;;  cp              2  [STACK] PTR unsigned char 
 26741 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_84(9), 
 26742 ;;		 -> STR_83(12), D.lcd(640), D(642), T(176), 
 26743 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 26744 ;;  i               2    0        int 
 26745 ;;  done            2    0        int 
 26746 ;;  c               1  [STACK] unsigned char 
 26747 ;; Return value:  Size  Location     Type
 26748 ;;                  2  [STACK] int 
 26749 ;; Registers used:
 26750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26751 ;; Tracked objects:
 26752 ;;		On entry : 0/0
 26753 ;;		On exit  : 0/0
 26754 ;;		Unchanged: 0/0
 26755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26760 ;;Total ram usage:        0 bytes
 26761 ;; Hardware stack levels used:    1
 26762 ;; Hardware stack levels required when called:   21
 26763 ;; This function calls:
 26764 ;;		_atoi
 26765 ;;		_ctoa
 26766 ;;		_dtoa
 26767 ;;		_efgtoa
 26768 ;;		_fputc
 26769 ;;		_isdigit
 26770 ;;		_isupper
 26771 ;;		_stoa
 26772 ;;		_strncmp
 26773 ;;		_tolower
 26774 ;;		_utoa
 26775 ;;		_xtoa
 26776 ;; This function is called by:
 26777 ;;		_vfprintf
 26778 ;; This function uses a reentrant model
 26779 ;;
 26780                           
 26781                           	psect	text95
 26782  0138EC                     __ptext95:
 26783                           	opt callstack 0
 26784  0138EC                     _vfpfcnvrt:
 26785                           	opt callstack 0
 26786                           
 26787                           ; BSR set to: 0
 26788                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26789  0138EC  0E20               	movlw	32
 26790  0138EE  26E1               	addwf	fsr1l,f,c
 26791  0138F0  0E00               	movlw	0
 26792  0138F2  22E2               	addwfc	fsr1h,f,c
 26793                           
 26794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 26795                           ;stkvar	_fmt @ sp[(-32)+-4]
 26796                           
 26797                           ;incstack = 0
 26798 ;; hardware stack exceeded
 26799  0138F4  0EDC               	movlw	-36
 26800  0138F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26801  0138FC  0EDD               	movlw	-35
 26802  0138FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26803  013904  006F FF7B FFF6     	movff	postinc2,tblptrl
 26804  01390A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26805  013910                     	if	0	;tblptru may be non-zero
 26806  013910                     	endif
 26807  013910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26808  013910  0E00               	movlw	low (__mediumconst shr (0+16))
 26809  013912  6EF8               	movwf	tblptru,c
 26810  013914                     	endif
 26811  013914  0008               	tblrd		*
 26812  013916  50F5               	movf	tablat,w,c
 26813  013918  0A25               	xorlw	37
 26814  01391A  A4D8               	btfss	status,2,c
 26815  01391C  EF1D  F0A4         	goto	l16563
 26816                           
 26817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 26818                           ;stkvar	_fmt @ sp[(-32)+-4]
 26819  013920  0EDC               	movlw	-36
 26820  013922  006F FF8F FFD9     	movff	plusw1,fsr2l
 26821  013928  0EDD               	movlw	-35
 26822  01392A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26823  013930  2ADE               	incf	postinc2,f,c
 26824  013932  0E00               	movlw	0
 26825  013934  22DD               	addwfc	postdec2,f,c
 26826                           
 26827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 26828  013936  6A4A               	clrf	_width^0,c
 26829  013938  6A4B               	clrf	(_width+1)^0,c
 26830  01393A  6A4E               	clrf	_flags^0,c
 26831  01393C  6A4F               	clrf	(_flags+1)^0,c
 26832                           
 26833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 26834  01393E  684C               	setf	_prec^0,c
 26835  013940  684D               	setf	(_prec+1)^0,c
 26836                           
 26837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 26838                           ;stkvar	_fmt @ sp[(-32)+-4]
 26839  013942  0EDC               	movlw	-36
 26840  013944  006F FF8F FFD9     	movff	plusw1,fsr2l
 26841  01394A  0EDD               	movlw	-35
 26842  01394C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26843  013952  006F FF7B FFF6     	movff	postinc2,tblptrl
 26844  013958  006F FF77 FFF7     	movff	postdec2,tblptrh
 26845  01395E                     	if	0	;tblptru may be non-zero
 26846  01395E                     	endif
 26847  01395E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26848  01395E  0E00               	movlw	low (__mediumconst shr (0+16))
 26849  013960  6EF8               	movwf	tblptru,c
 26850  013962                     	endif
 26851  013962  0008               	tblrd		*
 26852  013964  50F5               	movf	tablat,w,c
 26853  013966  0A2A               	xorlw	42
 26854  013968  A4D8               	btfss	status,2,c
 26855  01396A  D031               	goto	l16381
 26856                           
 26857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 26858                           ;stkvar	_fmt @ sp[(-32)+-4]
 26859  01396C  0EDC               	movlw	-36
 26860  01396E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26861  013974  0EDD               	movlw	-35
 26862  013976  006F FF8F FFDA     	movff	plusw1,fsr2h
 26863  01397C  2ADE               	incf	postinc2,f,c
 26864  01397E  0E00               	movlw	0
 26865  013980  22DD               	addwfc	postdec2,f,c
 26866                           
 26867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 26868                           ;stkvar	_ap @ sp[(-32)+-6]
 26869  013982  0EDA               	movlw	-38
 26870  013984  006F FF8F FFD9     	movff	plusw1,fsr2l
 26871  01398A  0EDB               	movlw	-37
 26872  01398C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26873  013992  0E02               	movlw	2
 26874  013994  5EDE               	subwf	postinc2,f,c
 26875  013996  0E00               	movlw	0
 26876  013998  5ADD               	subwfb	postdec2,f,c
 26877  01399A  006F FF78  F034    	movff	postinc2,btemp+10
 26878  0139A0  006F FF74  F035    	movff	postdec2,btemp+11
 26879  0139A6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26880  0139AC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26881  0139B2  006F FF78  F04A    	movff	postinc2,_width
 26882  0139B8  006F FF74  F04B    	movff	postdec2,_width+1
 26883                           
 26884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 26885  0139BE  AE4B               	btfss	(_width+1)^0,7,c
 26886  0139C0  D066               	goto	u15900
 26887                           
 26888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 26889  0139C2  804E               	bsf	_flags^0,0,c
 26890                           
 26891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 26892  0139C4  6C4A               	negf	_width^0,c
 26893  0139C6  1E4B               	comf	(_width+1)^0,f,c
 26894  0139C8  B0D8               	btfsc	status,0,c
 26895  0139CA  2A4B               	incf	(_width+1)^0,f,c
 26896  0139CC  D060               	goto	u15900
 26897  0139CE                     l16381:
 26898                           
 26899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 26900                           ;stkvar	_fmt @ sp[(-32)+-4]
 26901  0139CE  0EDC               	movlw	-36
 26902  0139D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 26903  0139D6  0EDD               	movlw	-35
 26904  0139D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 26905  0139DE  006F FF78  F034    	movff	postinc2,btemp+10
 26906  0139E4  006F FF74  F035    	movff	postdec2,btemp+11
 26907  0139EA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26908  0139F0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26909  0139F6  EC44  F0E3         	call	_atoi	;wreg free
 26910  0139FA  0060  F0A8  F04A   	movff	btemp,_width
 26911  013A00  0060  F0AC  F04B   	movff	btemp+1,_width+1
 26912                           
 26913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26914  013A06  D00B               	goto	l16385
 26915  013A08                     l16383:
 26916                           
 26917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 26918                           ;stkvar	_fmt @ sp[(-32)+-4]
 26919  013A08  0EDC               	movlw	-36
 26920  013A0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26921  013A10  0EDD               	movlw	-35
 26922  013A12  006F FF8F FFDA     	movff	plusw1,fsr2h
 26923  013A18  2ADE               	incf	postinc2,f,c
 26924  013A1A  0E00               	movlw	0
 26925  013A1C  22DD               	addwfc	postdec2,f,c
 26926  013A1E                     l16385:
 26927  013A1E  0ED0               	movlw	208
 26928  013A20  6E34               	movwf	(btemp+10)^0,c
 26929  013A22  0EFF               	movlw	255
 26930  013A24  6E35               	movwf	(btemp+11)^0,c
 26931                           
 26932                           ;stkvar	_fmt @ sp[(-32)+-4]
 26933  013A26  0EDC               	movlw	-36
 26934  013A28  006F FF8F FFD9     	movff	plusw1,fsr2l
 26935  013A2E  0EDD               	movlw	-35
 26936  013A30  006F FF8F FFDA     	movff	plusw1,fsr2h
 26937  013A36  006F FF7B FFF6     	movff	postinc2,tblptrl
 26938  013A3C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26939  013A42                     	if	0	;tblptru may be non-zero
 26940  013A42                     	endif
 26941  013A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26942  013A42  0E00               	movlw	low (__mediumconst shr (0+16))
 26943  013A44  6EF8               	movwf	tblptru,c
 26944  013A46                     	endif
 26945  013A46  0008               	tblrd		*
 26946  013A48  50F5               	movf	tablat,w,c
 26947  013A4A  6E32               	movwf	(btemp+8)^0,c
 26948  013A4C  6A33               	clrf	(btemp+9)^0,c
 26949  013A4E  5034               	movf	(btemp+10)^0,w,c
 26950  013A50  2632               	addwf	(btemp+8)^0,f,c
 26951  013A52  5035               	movf	(btemp+11)^0,w,c
 26952  013A54  2233               	addwfc	(btemp+9)^0,f,c
 26953  013A56  5033               	movf	(btemp+9)^0,w,c
 26954  013A58  E106               	bnz	u15880
 26955  013A5A  0E0A               	movlw	10
 26956  013A5C  5C32               	subwf	(btemp+8)^0,w,c
 26957  013A5E  B0D8               	btfsc	status,0,c
 26958  013A60  D002               	goto	u15880
 26959  013A62  0E01               	movlw	1
 26960  013A64  D001               	goto	u15890
 26961  013A66                     u15880:
 26962  013A66  0E00               	movlw	0
 26963  013A68                     u15890:
 26964  013A68  6E34               	movwf	(btemp+10)^0,c
 26965  013A6A  6A35               	clrf	(btemp+11)^0,c
 26966                           
 26967                           ;stkvar	_vfpfcnvrt$6690 @ sp[(-32)+4]
 26968  013A6C  0EE4               	movlw	-28
 26969  013A6E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26970  013A74  0EE5               	movlw	-27
 26971  013A76  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26972                           
 26973                           ;stkvar	_vfpfcnvrt$6690 @ sp[(-32)+4]
 26974  013A7C  0EE4               	movlw	-28
 26975  013A7E  006F FF8C  F02A    	movff	plusw1,btemp
 26976  013A84  0EE5               	movlw	-27
 26977  013A86  50E3               	movf	plusw1,w,c
 26978  013A88  102A               	iorwf	btemp^0,w,c
 26979  013A8A  A4D8               	btfss	status,2,c
 26980  013A8C  D7BD               	goto	l16383
 26981  013A8E                     u15900:
 26982                           
 26983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 26984                           ;stkvar	_fmt @ sp[(-32)+-4]
 26985  013A8E  0EDC               	movlw	-36
 26986  013A90  006F FF8F FFD9     	movff	plusw1,fsr2l
 26987  013A96  0EDD               	movlw	-35
 26988  013A98  006F FF8F FFDA     	movff	plusw1,fsr2h
 26989  013A9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26990  013AA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 26991  013AAA                     	if	0	;tblptru may be non-zero
 26992  013AAA                     	endif
 26993  013AAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26994  013AAA  0E00               	movlw	low (__mediumconst shr (0+16))
 26995  013AAC  6EF8               	movwf	tblptru,c
 26996  013AAE                     	endif
 26997  013AAE  0008               	tblrd		*
 26998  013AB0  50F5               	movf	tablat,w,c
 26999  013AB2  0A2E               	xorlw	46
 27000  013AB4  A4D8               	btfss	status,2,c
 27001  013AB6  D0AC               	goto	u15950
 27002                           
 27003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 27004  013AB8  6A4C               	clrf	_prec^0,c
 27005  013ABA  6A4D               	clrf	(_prec+1)^0,c
 27006                           
 27007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 27008                           ;stkvar	_fmt @ sp[(-32)+-4]
 27009  013ABC  0EDC               	movlw	-36
 27010  013ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27011  013AC4  0EDD               	movlw	-35
 27012  013AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27013  013ACC  2ADE               	incf	postinc2,f,c
 27014  013ACE  0E00               	movlw	0
 27015  013AD0  22DD               	addwfc	postdec2,f,c
 27016                           
 27017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 27018                           ;stkvar	_fmt @ sp[(-32)+-4]
 27019  013AD2  0EDC               	movlw	-36
 27020  013AD4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27021  013ADA  0EDD               	movlw	-35
 27022  013ADC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27023  013AE2  006F FF7B FFF6     	movff	postinc2,tblptrl
 27024  013AE8  006F FF77 FFF7     	movff	postdec2,tblptrh
 27025  013AEE                     	if	0	;tblptru may be non-zero
 27026  013AEE                     	endif
 27027  013AEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27028  013AEE  0E00               	movlw	low (__mediumconst shr (0+16))
 27029  013AF0  6EF8               	movwf	tblptru,c
 27030  013AF2                     	endif
 27031  013AF2  0008               	tblrd		*
 27032  013AF4  50F5               	movf	tablat,w,c
 27033  013AF6  0A2A               	xorlw	42
 27034  013AF8  A4D8               	btfss	status,2,c
 27035  013AFA  D02A               	goto	l16403
 27036                           
 27037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 27038                           ;stkvar	_fmt @ sp[(-32)+-4]
 27039  013AFC  0EDC               	movlw	-36
 27040  013AFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27041  013B04  0EDD               	movlw	-35
 27042  013B06  006F FF8F FFDA     	movff	plusw1,fsr2h
 27043  013B0C  2ADE               	incf	postinc2,f,c
 27044  013B0E  0E00               	movlw	0
 27045  013B10  22DD               	addwfc	postdec2,f,c
 27046                           
 27047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 27048                           ;stkvar	_ap @ sp[(-32)+-6]
 27049  013B12  0EDA               	movlw	-38
 27050  013B14  006F FF8F FFD9     	movff	plusw1,fsr2l
 27051  013B1A  0EDB               	movlw	-37
 27052  013B1C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27053  013B22  0E02               	movlw	2
 27054  013B24  5EDE               	subwf	postinc2,f,c
 27055  013B26  0E00               	movlw	0
 27056  013B28  5ADD               	subwfb	postdec2,f,c
 27057  013B2A  006F FF78  F034    	movff	postinc2,btemp+10
 27058  013B30  006F FF74  F035    	movff	postdec2,btemp+11
 27059  013B36  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27060  013B3C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27061  013B42  006F FF78  F04C    	movff	postinc2,_prec
 27062  013B48  006F FF74  F04D    	movff	postdec2,_prec+1
 27063                           
 27064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 27065  013B4E  D060               	goto	u15950
 27066  013B50                     l16403:
 27067                           
 27068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 27069                           ;stkvar	_fmt @ sp[(-32)+-4]
 27070  013B50  0EDC               	movlw	-36
 27071  013B52  006F FF8F FFD9     	movff	plusw1,fsr2l
 27072  013B58  0EDD               	movlw	-35
 27073  013B5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27074  013B60  006F FF78  F034    	movff	postinc2,btemp+10
 27075  013B66  006F FF74  F035    	movff	postdec2,btemp+11
 27076  013B6C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27077  013B72  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27078  013B78  EC44  F0E3         	call	_atoi	;wreg free
 27079  013B7C  0060  F0A8  F04C   	movff	btemp,_prec
 27080  013B82  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 27081                           
 27082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 27083  013B88  D00B               	goto	l16407
 27084  013B8A                     l16405:
 27085                           
 27086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 27087                           ;stkvar	_fmt @ sp[(-32)+-4]
 27088  013B8A  0EDC               	movlw	-36
 27089  013B8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27090  013B92  0EDD               	movlw	-35
 27091  013B94  006F FF8F FFDA     	movff	plusw1,fsr2h
 27092  013B9A  2ADE               	incf	postinc2,f,c
 27093  013B9C  0E00               	movlw	0
 27094  013B9E  22DD               	addwfc	postdec2,f,c
 27095  013BA0                     l16407:
 27096  013BA0  0ED0               	movlw	208
 27097  013BA2  6E34               	movwf	(btemp+10)^0,c
 27098  013BA4  0EFF               	movlw	255
 27099  013BA6  6E35               	movwf	(btemp+11)^0,c
 27100                           
 27101                           ;stkvar	_fmt @ sp[(-32)+-4]
 27102  013BA8  0EDC               	movlw	-36
 27103  013BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27104  013BB0  0EDD               	movlw	-35
 27105  013BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27106  013BB8  006F FF7B FFF6     	movff	postinc2,tblptrl
 27107  013BBE  006F FF77 FFF7     	movff	postdec2,tblptrh
 27108  013BC4                     	if	0	;tblptru may be non-zero
 27109  013BC4                     	endif
 27110  013BC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27111  013BC4  0E00               	movlw	low (__mediumconst shr (0+16))
 27112  013BC6  6EF8               	movwf	tblptru,c
 27113  013BC8                     	endif
 27114  013BC8  0008               	tblrd		*
 27115  013BCA  50F5               	movf	tablat,w,c
 27116  013BCC  6E32               	movwf	(btemp+8)^0,c
 27117  013BCE  6A33               	clrf	(btemp+9)^0,c
 27118  013BD0  5034               	movf	(btemp+10)^0,w,c
 27119  013BD2  2632               	addwf	(btemp+8)^0,f,c
 27120  013BD4  5035               	movf	(btemp+11)^0,w,c
 27121  013BD6  2233               	addwfc	(btemp+9)^0,f,c
 27122  013BD8  5033               	movf	(btemp+9)^0,w,c
 27123  013BDA  E106               	bnz	u15930
 27124  013BDC  0E0A               	movlw	10
 27125  013BDE  5C32               	subwf	(btemp+8)^0,w,c
 27126  013BE0  B0D8               	btfsc	status,0,c
 27127  013BE2  D002               	goto	u15930
 27128  013BE4  0E01               	movlw	1
 27129  013BE6  D001               	goto	u15940
 27130  013BE8                     u15930:
 27131  013BE8  0E00               	movlw	0
 27132  013BEA                     u15940:
 27133  013BEA  6E34               	movwf	(btemp+10)^0,c
 27134  013BEC  6A35               	clrf	(btemp+11)^0,c
 27135                           
 27136                           ;stkvar	_vfpfcnvrt$6691 @ sp[(-32)+0]
 27137  013BEE  0EE0               	movlw	-32
 27138  013BF0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27139  013BF6  0EE1               	movlw	-31
 27140  013BF8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27141                           
 27142                           ;stkvar	_vfpfcnvrt$6691 @ sp[(-32)+0]
 27143  013BFE  0EE0               	movlw	-32
 27144  013C00  006F FF8C  F02A    	movff	plusw1,btemp
 27145  013C06  0EE1               	movlw	-31
 27146  013C08  50E3               	movf	plusw1,w,c
 27147  013C0A  102A               	iorwf	btemp^0,w,c
 27148  013C0C  A4D8               	btfss	status,2,c
 27149  013C0E  D7BD               	goto	l16405
 27150  013C10                     u15950:
 27151                           
 27152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 27153                           ;stkvar	_fmt @ sp[(-32)+-4]
 27154  013C10  0EDC               	movlw	-36
 27155  013C12  006F FF8F FFD9     	movff	plusw1,fsr2l
 27156  013C18  0EDD               	movlw	-35
 27157  013C1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27158  013C20  006F FF7B FFF6     	movff	postinc2,tblptrl
 27159  013C26  006F FF77 FFF7     	movff	postdec2,tblptrh
 27160  013C2C                     	if	0	;tblptru may be non-zero
 27161  013C2C                     	endif
 27162  013C2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27163  013C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 27164  013C2E  6EF8               	movwf	tblptru,c
 27165  013C30                     	endif
 27166  013C30  0008               	tblrd		*
 27167  013C32  50F5               	movf	tablat,w,c
 27168  013C34  6EE6               	movwf	postinc1,c
 27169  013C36  0E00               	movlw	0
 27170  013C38  6EE6               	movwf	postinc1,c
 27171  013C3A  EC42  F00B         	call	_tolower	;wreg free
 27172                           
 27173                           ;stkvar	_ct @ sp[(-32)+26]
 27174  013C3E  0EFA               	movlw	-6
 27175  013C40  0060  F0AB  FFE3   	movff	btemp,plusw1
 27176                           
 27177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 27178                           ;stkvar	_ct @ sp[(-32)+26]
 27179  013C46  0EFA               	movlw	-6
 27180  013C48  50E3               	movf	plusw1,w,c
 27181  013C4A  B4D8               	btfsc	status,2,c
 27182  013C4C  D05B               	goto	l16423
 27183                           
 27184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 27185                           ;stkvar	_ct @ sp[(-32)+26]
 27186  013C4E  0EFB               	movlw	251
 27187  013C50  24E1               	addwf	fsr1l,w,c
 27188  013C52  6ED9               	movwf	fsr2l,c
 27189  013C54  0EFF               	movlw	255
 27190  013C56  20E2               	addwfc	fsr1h,w,c
 27191  013C58  6EDA               	movwf	fsr2h,c
 27192                           
 27193                           ;stkvar	_fmt @ sp[(-32)+-4]
 27194  013C5A  0EDC               	movlw	-36
 27195  013C5C  006F FF8F FFE9     	movff	plusw1,fsr0l
 27196  013C62  0EDD               	movlw	-35
 27197  013C64  006F FF8F FFEA     	movff	plusw1,fsr0h
 27198  013C6A  006F FFB8  F034    	movff	postinc0,btemp+10
 27199  013C70  006F FFB4  F035    	movff	postdec0,btemp+11
 27200  013C76  0E01               	movlw	1
 27201  013C78  2634               	addwf	(btemp+10)^0,f,c
 27202  013C7A  0E00               	movlw	0
 27203  013C7C  2235               	addwfc	(btemp+11)^0,f,c
 27204  013C7E  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27205  013C84  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27206  013C8A                     	if	0	;tblptru may be non-zero
 27207  013C8A                     	endif
 27208  013C8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27209  013C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 27210  013C8C  6EF8               	movwf	tblptru,c
 27211  013C8E                     	endif
 27212  013C8E  0008               	tblrd		*
 27213  013C90  50F5               	movf	tablat,w,c
 27214  013C92  6EE6               	movwf	postinc1,c
 27215  013C94  0E00               	movlw	0
 27216  013C96  6EE6               	movwf	postinc1,c
 27217  013C98  EC42  F00B         	call	_tolower	;wreg free
 27218  013C9C  502A               	movf	btemp^0,w,c
 27219  013C9E  6EDF               	movwf	indf2,c
 27220                           
 27221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 27222                           ;stkvar	_ct @ sp[(-32)+26]
 27223  013CA0  0EFB               	movlw	251
 27224  013CA2  24E1               	addwf	fsr1l,w,c
 27225  013CA4  6ED9               	movwf	fsr2l,c
 27226  013CA6  0EFF               	movlw	255
 27227  013CA8  20E2               	addwfc	fsr1h,w,c
 27228  013CAA  6EDA               	movwf	fsr2h,c
 27229  013CAC  50DF               	movf	indf2,w,c
 27230  013CAE  B4D8               	btfsc	status,2,c
 27231  013CB0  D029               	goto	l16423
 27232                           
 27233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 27234                           ;stkvar	_ct @ sp[(-32)+26]
 27235  013CB2  0EFC               	movlw	252
 27236  013CB4  24E1               	addwf	fsr1l,w,c
 27237  013CB6  6ED9               	movwf	fsr2l,c
 27238  013CB8  0EFF               	movlw	255
 27239  013CBA  20E2               	addwfc	fsr1h,w,c
 27240  013CBC  6EDA               	movwf	fsr2h,c
 27241                           
 27242                           ;stkvar	_fmt @ sp[(-32)+-4]
 27243  013CBE  0EDC               	movlw	-36
 27244  013CC0  006F FF8F FFE9     	movff	plusw1,fsr0l
 27245  013CC6  0EDD               	movlw	-35
 27246  013CC8  006F FF8F FFEA     	movff	plusw1,fsr0h
 27247  013CCE  006F FFB8  F034    	movff	postinc0,btemp+10
 27248  013CD4  006F FFB4  F035    	movff	postdec0,btemp+11
 27249  013CDA  0E02               	movlw	2
 27250  013CDC  2634               	addwf	(btemp+10)^0,f,c
 27251  013CDE  0E00               	movlw	0
 27252  013CE0  2235               	addwfc	(btemp+11)^0,f,c
 27253  013CE2  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27254  013CE8  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27255  013CEE                     	if	0	;tblptru may be non-zero
 27256  013CEE                     	endif
 27257  013CEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27258  013CEE  0E00               	movlw	low (__mediumconst shr (0+16))
 27259  013CF0  6EF8               	movwf	tblptru,c
 27260  013CF2                     	endif
 27261  013CF2  0008               	tblrd		*
 27262  013CF4  50F5               	movf	tablat,w,c
 27263  013CF6  6EE6               	movwf	postinc1,c
 27264  013CF8  0E00               	movlw	0
 27265  013CFA  6EE6               	movwf	postinc1,c
 27266  013CFC  EC42  F00B         	call	_tolower	;wreg free
 27267  013D00  502A               	movf	btemp^0,w,c
 27268  013D02  6EDF               	movwf	indf2,c
 27269  013D04                     l16423:
 27270                           
 27271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 27272                           ;stkvar	_fmt @ sp[(-32)+-4]
 27273  013D04  0EDC               	movlw	-36
 27274  013D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 27275  013D0C  0EDD               	movlw	-35
 27276  013D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27277  013D14  006F FF7B FFF6     	movff	postinc2,tblptrl
 27278  013D1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 27279  013D20                     	if	0	;tblptru may be non-zero
 27280  013D20                     	endif
 27281  013D20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27282  013D20  0E00               	movlw	low (__mediumconst shr (0+16))
 27283  013D22  6EF8               	movwf	tblptru,c
 27284  013D24                     	endif
 27285  013D24  0008               	tblrd		*
 27286  013D26  50F5               	movf	tablat,w,c
 27287  013D28  0A63               	xorlw	99
 27288  013D2A  A4D8               	btfss	status,2,c
 27289  013D2C  D037               	goto	l16433
 27290                           
 27291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 27292                           ;stkvar	_fmt @ sp[(-32)+-4]
 27293  013D2E  0EDC               	movlw	-36
 27294  013D30  006F FF8F FFD9     	movff	plusw1,fsr2l
 27295  013D36  0EDD               	movlw	-35
 27296  013D38  006F FF8F FFDA     	movff	plusw1,fsr2h
 27297  013D3E  2ADE               	incf	postinc2,f,c
 27298  013D40  0E00               	movlw	0
 27299  013D42  22DD               	addwfc	postdec2,f,c
 27300                           
 27301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 27302                           ;stkvar	_ap @ sp[(-32)+-6]
 27303  013D44  0EDA               	movlw	-38
 27304  013D46  006F FF8F FFD9     	movff	plusw1,fsr2l
 27305  013D4C  0EDB               	movlw	-37
 27306  013D4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27307  013D54  0E02               	movlw	2
 27308  013D56  5EDE               	subwf	postinc2,f,c
 27309  013D58  0E00               	movlw	0
 27310  013D5A  5ADD               	subwfb	postdec2,f,c
 27311  013D5C  006F FF78  F034    	movff	postinc2,btemp+10
 27312  013D62  006F FF74  F035    	movff	postdec2,btemp+11
 27313  013D68  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27314  013D6E  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27315  013D74  50DF               	movf	indf2,w,c
 27316  013D76  6E35               	movwf	(btemp+11)^0,c
 27317                           
 27318                           ;stkvar	_c @ sp[(-32)+31]
 27319  013D78  0EFF               	movlw	-1
 27320  013D7A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27321                           
 27322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 27323                           ;stkvar	_c @ sp[(-32)+31]
 27324  013D80  0EFF               	movlw	-1
 27325  013D82  50E3               	movf	plusw1,w,c
 27326  013D84  6EE6               	movwf	postinc1,c
 27327                           
 27328                           ;stkvar	_fp @ sp[(-33)+-2]
 27329  013D86  0EDD               	movlw	-35
 27330  013D88  006F FF8F FFE6     	movff	plusw1,postinc1
 27331  013D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 27332  013D94  ECBC  F00A         	call	_ctoa	;wreg free
 27333  013D98  EF47  F0A4         	goto	l2700
 27334  013D9C                     l16433:
 27335                           
 27336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 27337                           ;stkvar	_fmt @ sp[(-32)+-4]
 27338  013D9C  0EDC               	movlw	-36
 27339  013D9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27340  013DA4  0EDD               	movlw	-35
 27341  013DA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27342  013DAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 27343  013DB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 27344  013DB8                     	if	0	;tblptru may be non-zero
 27345  013DB8                     	endif
 27346  013DB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27347  013DB8  0E00               	movlw	low (__mediumconst shr (0+16))
 27348  013DBA  6EF8               	movwf	tblptru,c
 27349  013DBC                     	endif
 27350  013DBC  0008               	tblrd		*
 27351  013DBE  50F5               	movf	tablat,w,c
 27352  013DC0  0A64               	xorlw	100
 27353  013DC2  B4D8               	btfsc	status,2,c
 27354  013DC4  D015               	goto	u16000
 27355                           
 27356                           ;stkvar	_fmt @ sp[(-32)+-4]
 27357  013DC6  0EDC               	movlw	-36
 27358  013DC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27359  013DCE  0EDD               	movlw	-35
 27360  013DD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27361  013DD6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27362  013DDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27363  013DE2                     	if	0	;tblptru may be non-zero
 27364  013DE2                     	endif
 27365  013DE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27366  013DE2  0E00               	movlw	low (__mediumconst shr (0+16))
 27367  013DE4  6EF8               	movwf	tblptru,c
 27368  013DE6                     	endif
 27369  013DE6  0008               	tblrd		*
 27370  013DE8  50F5               	movf	tablat,w,c
 27371  013DEA  0A69               	xorlw	105
 27372  013DEC  A4D8               	btfss	status,2,c
 27373  013DEE  D076               	goto	l16445
 27374  013DF0                     u16000:
 27375                           
 27376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 27377                           ;stkvar	_fmt @ sp[(-32)+-4]
 27378  013DF0  0EDC               	movlw	-36
 27379  013DF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27380  013DF8  0EDD               	movlw	-35
 27381  013DFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27382  013E00  2ADE               	incf	postinc2,f,c
 27383  013E02  0E00               	movlw	0
 27384  013E04  22DD               	addwfc	postdec2,f,c
 27385                           
 27386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 27387                           ;stkvar	_ap @ sp[(-32)+-6]
 27388  013E06  0EDA               	movlw	-38
 27389  013E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 27390  013E0E  0EDB               	movlw	-37
 27391  013E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 27392  013E16  0E02               	movlw	2
 27393  013E18  5EDE               	subwf	postinc2,f,c
 27394  013E1A  0E00               	movlw	0
 27395  013E1C  5ADD               	subwfb	postdec2,f,c
 27396  013E1E  006F FF78  F034    	movff	postinc2,btemp+10
 27397  013E24  006F FF74  F035    	movff	postdec2,btemp+11
 27398  013E2A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27399  013E30  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27400  013E36  006F FF78  F034    	movff	postinc2,btemp+10
 27401  013E3C  006F FF74  F035    	movff	postdec2,btemp+11
 27402                           
 27403                           ;stkvar	_ll @ sp[(-32)+14]
 27404  013E42  0EEE               	movlw	-18
 27405  013E44  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27406  013E4A  0EEF               	movlw	-17
 27407  013E4C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27408  013E52  6A2A               	clrf	btemp^0,c
 27409  013E54  BEE3               	btfsc	plusw1,7,c
 27410  013E56  682A               	setf	btemp^0,c
 27411  013E58  0EF0               	movlw	-16
 27412  013E5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 27413  013E60  0EF1               	movlw	-15
 27414  013E62  0060  F0AB  FFE3   	movff	btemp,plusw1
 27415  013E68  0EF2               	movlw	-14
 27416  013E6A  0060  F0AB  FFE3   	movff	btemp,plusw1
 27417  013E70  0EF3               	movlw	-13
 27418  013E72  0060  F0AB  FFE3   	movff	btemp,plusw1
 27419  013E78  0EF4               	movlw	-12
 27420  013E7A  0060  F0AB  FFE3   	movff	btemp,plusw1
 27421  013E80  0EF5               	movlw	-11
 27422  013E82  0060  F0AB  FFE3   	movff	btemp,plusw1
 27423  013E88                     l16441:
 27424                           
 27425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 27426                           ;stkvar	_ll @ sp[(-32)+14]
 27427  013E88  50E1               	movf	fsr1l,w,c
 27428  013E8A  0FEE               	addlw	-18
 27429  013E8C  6ED9               	movwf	fsr2l,c
 27430  013E8E  50E2               	movf	fsr1h,w,c
 27431  013E90  6EDA               	movwf	fsr2h,c
 27432  013E92  0EFF               	movlw	255
 27433  013E94  22DA               	addwfc	fsr2h,f,c
 27434  013E96  006F FF7B FFE6     	movff	postinc2,postinc1
 27435  013E9C  006F FF7B FFE6     	movff	postinc2,postinc1
 27436  013EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 27437  013EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 27438  013EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 27439  013EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 27440  013EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 27441  013EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 27442                           
 27443                           ;stkvar	_fp @ sp[(-40)+-2]
 27444  013EC6  0ED6               	movlw	-42
 27445  013EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 27446  013ECE  006F FF8F FFE6     	movff	plusw1,postinc1
 27447  013ED4  EC5E  F0CB         	call	_dtoa	;wreg free
 27448  013ED8  EF47  F0A4         	goto	l2700
 27449  013EDC                     l16445:
 27450                           
 27451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 27452  013EDC  0E02               	movlw	2
 27453  013EDE  6EE6               	movwf	postinc1,c
 27454  013EE0  0E00               	movlw	0
 27455  013EE2  6EE6               	movwf	postinc1,c
 27456  013EE4  0EED               	movlw	low STR_112
 27457  013EE6  6EE6               	movwf	postinc1,c
 27458  013EE8  0EFF               	movlw	high STR_112
 27459  013EEA  6EE6               	movwf	postinc1,c
 27460                           
 27461                           ;stkvar	_fmt @ sp[(-36)+-4]
 27462  013EEC  0ED8               	movlw	-40
 27463  013EEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27464  013EF4  0ED9               	movlw	-39
 27465  013EF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27466  013EFC  006F FF78  F034    	movff	postinc2,btemp+10
 27467  013F02  006F FF74  F035    	movff	postdec2,btemp+11
 27468  013F08  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27469  013F0E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27470  013F14  EC28  F0EA         	call	_strncmp	;wreg free
 27471  013F18  502A               	movf	btemp^0,w,c
 27472  013F1A  102B               	iorwf	(btemp+1)^0,w,c
 27473  013F1C  B4D8               	btfsc	status,2,c
 27474  013F1E  D022               	goto	u16020
 27475  013F20  0E02               	movlw	2
 27476  013F22  6EE6               	movwf	postinc1,c
 27477  013F24  0E00               	movlw	0
 27478  013F26  6EE6               	movwf	postinc1,c
 27479  013F28  0EF3               	movlw	low STR_116
 27480  013F2A  6EE6               	movwf	postinc1,c
 27481  013F2C  0EFF               	movlw	high STR_116
 27482  013F2E  6EE6               	movwf	postinc1,c
 27483                           
 27484                           ;stkvar	_fmt @ sp[(-36)+-4]
 27485  013F30  0ED8               	movlw	-40
 27486  013F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 27487  013F38  0ED9               	movlw	-39
 27488  013F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27489  013F40  006F FF78  F034    	movff	postinc2,btemp+10
 27490  013F46  006F FF74  F035    	movff	postdec2,btemp+11
 27491  013F4C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27492  013F52  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27493  013F58  EC28  F0EA         	call	_strncmp	;wreg free
 27494  013F5C  502A               	movf	btemp^0,w,c
 27495  013F5E  102B               	iorwf	(btemp+1)^0,w,c
 27496  013F60  A4D8               	btfss	status,2,c
 27497  013F62  D069               	goto	l16457
 27498  013F64                     u16020:
 27499                           
 27500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 27501                           ;stkvar	_fmt @ sp[(-32)+-4]
 27502  013F64  0EDC               	movlw	-36
 27503  013F66  006F FF8F FFD9     	movff	plusw1,fsr2l
 27504  013F6C  0EDD               	movlw	-35
 27505  013F6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27506  013F74  0E02               	movlw	2
 27507  013F76  26DE               	addwf	postinc2,f,c
 27508  013F78  0E00               	movlw	0
 27509  013F7A  22DD               	addwfc	postdec2,f,c
 27510                           
 27511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 27512                           ;stkvar	_ap @ sp[(-32)+-6]
 27513  013F7C  0EDA               	movlw	-38
 27514  013F7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27515  013F84  0EDB               	movlw	-37
 27516  013F86  006F FF8F FFDA     	movff	plusw1,fsr2h
 27517  013F8C  0E04               	movlw	4
 27518  013F8E  5EDE               	subwf	postinc2,f,c
 27519  013F90  0E00               	movlw	0
 27520  013F92  5ADD               	subwfb	postdec2,f,c
 27521  013F94  006F FF78  F034    	movff	postinc2,btemp+10
 27522  013F9A  006F FF74  F035    	movff	postdec2,btemp+11
 27523  013FA0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27524  013FA6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27525  013FAC  006F FF78  F032    	movff	postinc2,btemp+8
 27526  013FB2  006F FF78  F033    	movff	postinc2,btemp+9
 27527  013FB8  006F FF78  F034    	movff	postinc2,btemp+10
 27528  013FBE  006F FF78  F035    	movff	postinc2,btemp+11
 27529  013FC4  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 27530  013FCA  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 27531  013FD0  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 27532  013FD6  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 27533  013FDC  6A3E               	clrf	(btemp+20)^0,c
 27534  013FDE  BE3D               	btfsc	(btemp+19)^0,7,c
 27535  013FE0  683E               	setf	(btemp+20)^0,c
 27536  013FE2  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 27537  013FE8  0060  F0F8  F040   	movff	btemp+20,btemp+22
 27538  013FEE  0060  F0F8  F041   	movff	btemp+20,btemp+23
 27539                           
 27540                           ;stkvar	_ll @ sp[(-32)+14]
 27541  013FF4  0EEE               	movlw	-18
 27542  013FF6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27543  013FFC  0EEF               	movlw	-17
 27544  013FFE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27545  014004  0EF0               	movlw	-16
 27546  014006  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27547  01400C  0EF1               	movlw	-15
 27548  01400E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27549  014014  0EF2               	movlw	-14
 27550  014016  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27551  01401C  0EF3               	movlw	-13
 27552  01401E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27553  014024  0EF4               	movlw	-12
 27554  014026  0060  F103  FFE3   	movff	btemp+22,plusw1
 27555  01402C  0EF5               	movlw	-11
 27556  01402E  0060  F107  FFE3   	movff	btemp+23,plusw1
 27557  014034  D729               	goto	l16441
 27558  014036                     l16457:
 27559                           
 27560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 27561                           ;stkvar	_ct @ sp[(-32)+26]
 27562  014036  0EFA               	movlw	-6
 27563  014038  006F FF8C  F02A    	movff	plusw1,btemp
 27564  01403E  0E66               	movlw	102
 27565  014040  182A               	xorwf	btemp^0,w,c
 27566  014042  A4D8               	btfss	status,2,c
 27567  014044  D06E               	goto	l16469
 27568                           
 27569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 27570                           ;stkvar	_fmt @ sp[(-32)+-4]
 27571  014046  0EDC               	movlw	-36
 27572  014048  006F FF8F FFD9     	movff	plusw1,fsr2l
 27573  01404E  0EDD               	movlw	-35
 27574  014050  006F FF8F FFDA     	movff	plusw1,fsr2h
 27575  014056  006F FF7B FFF6     	movff	postinc2,tblptrl
 27576  01405C  006F FF77 FFF7     	movff	postdec2,tblptrh
 27577  014062                     	if	0	;tblptru may be non-zero
 27578  014062                     	endif
 27579  014062                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27580  014062  0E00               	movlw	low (__mediumconst shr (0+16))
 27581  014064  6EF8               	movwf	tblptru,c
 27582  014066                     	endif
 27583                           
 27584                           ;stkvar	_c @ sp[(-32)+31]
 27585  014066  0008               	tblrd		*
 27586  014068  0EFF               	movlw	-1
 27587  01406A  006F FFD7 FFE3     	movff	tablat,plusw1
 27588                           
 27589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 27590                           ;stkvar	_fmt @ sp[(-32)+-4]
 27591  014070  0EDC               	movlw	-36
 27592  014072  006F FF8F FFD9     	movff	plusw1,fsr2l
 27593  014078  0EDD               	movlw	-35
 27594  01407A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27595  014080  2ADE               	incf	postinc2,f,c
 27596  014082  0E00               	movlw	0
 27597  014084  22DD               	addwfc	postdec2,f,c
 27598                           
 27599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 27600                           ;stkvar	_ap @ sp[(-32)+-6]
 27601  014086  0EDA               	movlw	-38
 27602  014088  006F FF8F FFD9     	movff	plusw1,fsr2l
 27603  01408E  0EDB               	movlw	-37
 27604  014090  006F FF8F FFDA     	movff	plusw1,fsr2h
 27605  014096  0E04               	movlw	4
 27606  014098  5EDE               	subwf	postinc2,f,c
 27607  01409A  0E00               	movlw	0
 27608  01409C  5ADD               	subwfb	postdec2,f,c
 27609  01409E  006F FF78  F034    	movff	postinc2,btemp+10
 27610  0140A4  006F FF74  F035    	movff	postdec2,btemp+11
 27611  0140AA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27612  0140B0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27613  0140B6  006F FF78  F032    	movff	postinc2,btemp+8
 27614  0140BC  006F FF78  F033    	movff	postinc2,btemp+9
 27615  0140C2  006F FF78  F034    	movff	postinc2,btemp+10
 27616  0140C8  006F FF78  F035    	movff	postinc2,btemp+11
 27617                           
 27618                           ;stkvar	_f @ sp[(-32)+22]
 27619  0140CE  0EF6               	movlw	-10
 27620  0140D0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27621  0140D6  0EF7               	movlw	-9
 27622  0140D8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27623  0140DE  0EF8               	movlw	-8
 27624  0140E0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27625  0140E6  0EF9               	movlw	-7
 27626  0140E8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27627  0140EE                     l16465:
 27628                           
 27629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 27630                           ;stkvar	_c @ sp[(-32)+31]
 27631  0140EE  0EFF               	movlw	-1
 27632  0140F0  50E3               	movf	plusw1,w,c
 27633  0140F2  6EE6               	movwf	postinc1,c
 27634                           
 27635                           ;stkvar	_f @ sp[(-33)+22]
 27636  0140F4  0EF5               	movlw	-11
 27637  0140F6  006F FF8F FFE6     	movff	plusw1,postinc1
 27638  0140FC  006F FF8F FFE6     	movff	plusw1,postinc1
 27639  014102  006F FF8F FFE6     	movff	plusw1,postinc1
 27640  014108  006F FF8F FFE6     	movff	plusw1,postinc1
 27641                           
 27642                           ;stkvar	_fp @ sp[(-37)+-2]
 27643  01410E  0ED9               	movlw	-39
 27644  014110  006F FF8F FFE6     	movff	plusw1,postinc1
 27645  014116  006F FF8F FFE6     	movff	plusw1,postinc1
 27646  01411C  ECEB  F08A         	call	_efgtoa	;wreg free
 27647  014120  D3B6               	goto	l2700
 27648  014122                     l16469:
 27649                           
 27650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 27651  014122  0E02               	movlw	2
 27652  014124  6EE6               	movwf	postinc1,c
 27653  014126  0E00               	movlw	0
 27654  014128  6EE6               	movwf	postinc1,c
 27655  01412A  0EF0               	movlw	low STR_121
 27656  01412C  6EE6               	movwf	postinc1,c
 27657  01412E  0EFF               	movlw	high STR_121
 27658  014130  6EE6               	movwf	postinc1,c
 27659                           
 27660                           ;stkvar	_ct @ sp[(-36)+26]
 27661  014132  0EF6               	movlw	246
 27662  014134  24E1               	addwf	fsr1l,w,c
 27663  014136  6E2A               	movwf	btemp^0,c
 27664  014138  0EFF               	movlw	255
 27665  01413A  20E2               	addwfc	fsr1h,w,c
 27666  01413C  6E2B               	movwf	(btemp+1)^0,c
 27667  01413E  0060  F0AB  FFE6   	movff	btemp,postinc1
 27668  014144  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 27669  01414A  EC28  F0EA         	call	_strncmp	;wreg free
 27670  01414E  502A               	movf	btemp^0,w,c
 27671  014150  102B               	iorwf	(btemp+1)^0,w,c
 27672  014152  A4D8               	btfss	status,2,c
 27673  014154  D096               	goto	l16489
 27674                           
 27675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 27676                           ;stkvar	_fmt @ sp[(-32)+-4]
 27677  014156  0EDC               	movlw	-36
 27678  014158  006F FF8F FFD9     	movff	plusw1,fsr2l
 27679  01415E  0EDD               	movlw	-35
 27680  014160  006F FF8F FFDA     	movff	plusw1,fsr2h
 27681  014166  006F FF78  F034    	movff	postinc2,btemp+10
 27682  01416C  006F FF74  F035    	movff	postdec2,btemp+11
 27683  014172  0E01               	movlw	1
 27684  014174  2634               	addwf	(btemp+10)^0,f,c
 27685  014176  0E00               	movlw	0
 27686  014178  2235               	addwfc	(btemp+11)^0,f,c
 27687  01417A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27688  014180  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27689  014186                     	if	0	;tblptru may be non-zero
 27690  014186                     	endif
 27691  014186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27692  014186  0E00               	movlw	low (__mediumconst shr (0+16))
 27693  014188  6EF8               	movwf	tblptru,c
 27694  01418A                     	endif
 27695                           
 27696                           ;stkvar	_c @ sp[(-32)+31]
 27697  01418A  0008               	tblrd		*
 27698  01418C  0EFF               	movlw	-1
 27699  01418E  006F FFD7 FFE3     	movff	tablat,plusw1
 27700  014194  0EBF               	movlw	191
 27701  014196  6E34               	movwf	(btemp+10)^0,c
 27702  014198  0EFF               	movlw	255
 27703  01419A  6E35               	movwf	(btemp+11)^0,c
 27704                           
 27705                           ;stkvar	_fmt @ sp[(-32)+-4]
 27706  01419C  0EDC               	movlw	-36
 27707  01419E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27708  0141A4  0EDD               	movlw	-35
 27709  0141A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27710  0141AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 27711  0141B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 27712  0141B8                     	if	0	;tblptru may be non-zero
 27713  0141B8                     	endif
 27714  0141B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27715  0141B8  0E00               	movlw	low (__mediumconst shr (0+16))
 27716  0141BA  6EF8               	movwf	tblptru,c
 27717  0141BC                     	endif
 27718  0141BC  0008               	tblrd		*
 27719  0141BE  50F5               	movf	tablat,w,c
 27720  0141C0  6E32               	movwf	(btemp+8)^0,c
 27721  0141C2  6A33               	clrf	(btemp+9)^0,c
 27722  0141C4  5034               	movf	(btemp+10)^0,w,c
 27723  0141C6  2632               	addwf	(btemp+8)^0,f,c
 27724  0141C8  5035               	movf	(btemp+11)^0,w,c
 27725  0141CA  2233               	addwfc	(btemp+9)^0,f,c
 27726  0141CC  5033               	movf	(btemp+9)^0,w,c
 27727  0141CE  E106               	bnz	u16050
 27728  0141D0  0E1A               	movlw	26
 27729  0141D2  5C32               	subwf	(btemp+8)^0,w,c
 27730  0141D4  B0D8               	btfsc	status,0,c
 27731  0141D6  D002               	goto	u16050
 27732  0141D8  0E01               	movlw	1
 27733  0141DA  D001               	goto	u16060
 27734  0141DC                     u16050:
 27735  0141DC  0E00               	movlw	0
 27736  0141DE                     u16060:
 27737  0141DE  6E34               	movwf	(btemp+10)^0,c
 27738  0141E0  6A35               	clrf	(btemp+11)^0,c
 27739                           
 27740                           ;stkvar	_vfpfcnvrt$6702 @ sp[(-32)+2]
 27741  0141E2  0EE2               	movlw	-30
 27742  0141E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27743  0141EA  0EE3               	movlw	-29
 27744  0141EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27745                           
 27746                           ;stkvar	_vfpfcnvrt$6702 @ sp[(-32)+2]
 27747  0141F2  0EE2               	movlw	-30
 27748  0141F4  006F FF8C  F02A    	movff	plusw1,btemp
 27749  0141FA  0EE3               	movlw	-29
 27750  0141FC  50E3               	movf	plusw1,w,c
 27751  0141FE  102A               	iorwf	btemp^0,w,c
 27752                           
 27753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 27754                           ;stkvar	_ap @ sp[(-32)+-6]
 27755                           
 27756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 27757                           
 27758                           ;stkvar	_f @ sp[(-32)+22]
 27759                           
 27760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 27761                           ;stkvar	_ap @ sp[(-32)+-6]
 27762  014200  0EDA               	movlw	-38
 27763  014202  006F FF8F FFD9     	movff	plusw1,fsr2l
 27764  014208  0EDB               	movlw	-37
 27765  01420A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27766  014210  0E04               	movlw	4
 27767  014212  5EDE               	subwf	postinc2,f,c
 27768  014214  0E00               	movlw	0
 27769  014216  5ADD               	subwfb	postdec2,f,c
 27770  014218  006F FF78  F034    	movff	postinc2,btemp+10
 27771  01421E  006F FF74  F035    	movff	postdec2,btemp+11
 27772  014224  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27773  01422A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27774  014230  006F FF78  F032    	movff	postinc2,btemp+8
 27775  014236  006F FF78  F033    	movff	postinc2,btemp+9
 27776  01423C  006F FF78  F034    	movff	postinc2,btemp+10
 27777  014242  006F FF78  F035    	movff	postinc2,btemp+11
 27778                           
 27779                           ;stkvar	_f @ sp[(-32)+22]
 27780  014248  0EF6               	movlw	-10
 27781  01424A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27782  014250  0EF7               	movlw	-9
 27783  014252  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27784  014258  0EF8               	movlw	-8
 27785  01425A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27786  014260  0EF9               	movlw	-7
 27787  014262  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27788                           
 27789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 27790                           ;stkvar	_fmt @ sp[(-32)+-4]
 27791  014268  0EDC               	movlw	-36
 27792  01426A  006F FF8F FFD9     	movff	plusw1,fsr2l
 27793  014270  0EDD               	movlw	-35
 27794  014272  006F FF8F FFDA     	movff	plusw1,fsr2h
 27795  014278  0E02               	movlw	2
 27796  01427A  26DE               	addwf	postinc2,f,c
 27797  01427C  0E00               	movlw	0
 27798  01427E  22DD               	addwfc	postdec2,f,c
 27799  014280  D736               	goto	l16465
 27800  014282                     l16489:
 27801                           
 27802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 27803                           ;stkvar	_fmt @ sp[(-32)+-4]
 27804  014282  0EDC               	movlw	-36
 27805  014284  006F FF8F FFD9     	movff	plusw1,fsr2l
 27806  01428A  0EDD               	movlw	-35
 27807  01428C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27808  014292  006F FF7B FFF6     	movff	postinc2,tblptrl
 27809  014298  006F FF77 FFF7     	movff	postdec2,tblptrh
 27810  01429E                     	if	0	;tblptru may be non-zero
 27811  01429E                     	endif
 27812  01429E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27813  01429E  0E00               	movlw	low (__mediumconst shr (0+16))
 27814  0142A0  6EF8               	movwf	tblptru,c
 27815  0142A2                     	endif
 27816  0142A2  0008               	tblrd		*
 27817  0142A4  50F5               	movf	tablat,w,c
 27818  0142A6  0A73               	xorlw	115
 27819  0142A8  A4D8               	btfss	status,2,c
 27820  0142AA  D042               	goto	l16499
 27821                           
 27822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 27823                           ;stkvar	_fmt @ sp[(-32)+-4]
 27824  0142AC  0EDC               	movlw	-36
 27825  0142AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27826  0142B4  0EDD               	movlw	-35
 27827  0142B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27828  0142BC  2ADE               	incf	postinc2,f,c
 27829  0142BE  0E00               	movlw	0
 27830  0142C0  22DD               	addwfc	postdec2,f,c
 27831                           
 27832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 27833                           ;stkvar	_ap @ sp[(-32)+-6]
 27834  0142C2  0EDA               	movlw	-38
 27835  0142C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27836  0142CA  0EDB               	movlw	-37
 27837  0142CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27838  0142D2  0E02               	movlw	2
 27839  0142D4  5EDE               	subwf	postinc2,f,c
 27840  0142D6  0E00               	movlw	0
 27841  0142D8  5ADD               	subwfb	postdec2,f,c
 27842  0142DA  006F FF78  F034    	movff	postinc2,btemp+10
 27843  0142E0  006F FF74  F035    	movff	postdec2,btemp+11
 27844  0142E6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27845  0142EC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27846  0142F2  006F FF78  F034    	movff	postinc2,btemp+10
 27847  0142F8  006F FF74  F035    	movff	postdec2,btemp+11
 27848                           
 27849                           ;stkvar	_cp @ sp[(-32)+29]
 27850  0142FE  0EFE               	movlw	-2
 27851  014300  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27852  014306  0EFD               	movlw	-3
 27853  014308  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27854                           
 27855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 27856                           ;stkvar	_cp @ sp[(-32)+29]
 27857  01430E  0EFD               	movlw	-3
 27858  014310  006F FF8F FFE6     	movff	plusw1,postinc1
 27859  014316  006F FF8F FFE6     	movff	plusw1,postinc1
 27860                           
 27861                           ;stkvar	_fp @ sp[(-34)+-2]
 27862  01431C  0EDC               	movlw	-36
 27863  01431E  006F FF8F FFE6     	movff	plusw1,postinc1
 27864  014324  006F FF8F FFE6     	movff	plusw1,postinc1
 27865  01432A  EC25  F0DE         	call	_stoa	;wreg free
 27866  01432E  D2AF               	goto	l2700
 27867  014330                     l16499:
 27868                           
 27869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 27870                           ;stkvar	_fmt @ sp[(-32)+-4]
 27871  014330  0EDC               	movlw	-36
 27872  014332  006F FF8F FFD9     	movff	plusw1,fsr2l
 27873  014338  0EDD               	movlw	-35
 27874  01433A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27875  014340  006F FF7B FFF6     	movff	postinc2,tblptrl
 27876  014346  006F FF77 FFF7     	movff	postdec2,tblptrh
 27877  01434C                     	if	0	;tblptru may be non-zero
 27878  01434C                     	endif
 27879  01434C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27880  01434C  0E00               	movlw	low (__mediumconst shr (0+16))
 27881  01434E  6EF8               	movwf	tblptru,c
 27882  014350                     	endif
 27883  014350  0008               	tblrd		*
 27884  014352  50F5               	movf	tablat,w,c
 27885  014354  0A75               	xorlw	117
 27886  014356  A4D8               	btfss	status,2,c
 27887  014358  D07C               	goto	l16509
 27888                           
 27889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 27890                           ;stkvar	_fmt @ sp[(-32)+-4]
 27891  01435A  0EDC               	movlw	-36
 27892  01435C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27893  014362  0EDD               	movlw	-35
 27894  014364  006F FF8F FFDA     	movff	plusw1,fsr2h
 27895  01436A  2ADE               	incf	postinc2,f,c
 27896  01436C  0E00               	movlw	0
 27897  01436E  22DD               	addwfc	postdec2,f,c
 27898                           
 27899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27900                           ;stkvar	_ap @ sp[(-32)+-6]
 27901  014370  0EDA               	movlw	-38
 27902  014372  006F FF8F FFD9     	movff	plusw1,fsr2l
 27903  014378  0EDB               	movlw	-37
 27904  01437A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27905  014380  0E02               	movlw	2
 27906  014382  5EDE               	subwf	postinc2,f,c
 27907  014384  0E00               	movlw	0
 27908  014386  5ADD               	subwfb	postdec2,f,c
 27909  014388  006F FF78  F034    	movff	postinc2,btemp+10
 27910  01438E  006F FF74  F035    	movff	postdec2,btemp+11
 27911  014394  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27912  01439A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27913  0143A0  006F FF78  F034    	movff	postinc2,btemp+10
 27914  0143A6  006F FF74  F035    	movff	postdec2,btemp+11
 27915  0143AC  5034               	movf	(btemp+10)^0,w,c
 27916  0143AE  6E3A               	movwf	(btemp+16)^0,c
 27917  0143B0  5035               	movf	(btemp+11)^0,w,c
 27918  0143B2  6E3B               	movwf	(btemp+17)^0,c
 27919  0143B4  6A3C               	clrf	(btemp+18)^0,c
 27920  0143B6  6A3D               	clrf	(btemp+19)^0,c
 27921  0143B8  6A3E               	clrf	(btemp+20)^0,c
 27922  0143BA  6A3F               	clrf	(btemp+21)^0,c
 27923  0143BC  6A40               	clrf	(btemp+22)^0,c
 27924  0143BE  6A41               	clrf	(btemp+23)^0,c
 27925                           
 27926                           ;stkvar	_llu @ sp[(-32)+6]
 27927  0143C0  0EE6               	movlw	-26
 27928  0143C2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27929  0143C8  0EE7               	movlw	-25
 27930  0143CA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27931  0143D0  0EE8               	movlw	-24
 27932  0143D2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27933  0143D8  0EE9               	movlw	-23
 27934  0143DA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27935  0143E0  0EEA               	movlw	-22
 27936  0143E2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27937  0143E8  0EEB               	movlw	-21
 27938  0143EA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27939  0143F0  0EEC               	movlw	-20
 27940  0143F2  0060  F103  FFE3   	movff	btemp+22,plusw1
 27941  0143F8  0EED               	movlw	-19
 27942  0143FA  0060  F107  FFE3   	movff	btemp+23,plusw1
 27943                           
 27944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 27945                           ;stkvar	_llu @ sp[(-32)+6]
 27946  014400  50E1               	movf	fsr1l,w,c
 27947  014402  0FE6               	addlw	-26
 27948  014404  6ED9               	movwf	fsr2l,c
 27949  014406  50E2               	movf	fsr1h,w,c
 27950  014408  6EDA               	movwf	fsr2h,c
 27951  01440A  0EFF               	movlw	255
 27952  01440C  22DA               	addwfc	fsr2h,f,c
 27953  01440E  006F FF7B FFE6     	movff	postinc2,postinc1
 27954  014414  006F FF7B FFE6     	movff	postinc2,postinc1
 27955  01441A  006F FF7B FFE6     	movff	postinc2,postinc1
 27956  014420  006F FF7B FFE6     	movff	postinc2,postinc1
 27957  014426  006F FF7B FFE6     	movff	postinc2,postinc1
 27958  01442C  006F FF7B FFE6     	movff	postinc2,postinc1
 27959  014432  006F FF7B FFE6     	movff	postinc2,postinc1
 27960  014438  006F FF7B FFE6     	movff	postinc2,postinc1
 27961                           
 27962                           ;stkvar	_fp @ sp[(-40)+-2]
 27963  01443E  0ED6               	movlw	-42
 27964  014440  006F FF8F FFE6     	movff	plusw1,postinc1
 27965  014446  006F FF8F FFE6     	movff	plusw1,postinc1
 27966  01444C  ECB8  F0D6         	call	_utoa	;wreg free
 27967  014450  D21E               	goto	l2700
 27968  014452                     l16509:
 27969                           
 27970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 27971  014452  0E02               	movlw	2
 27972  014454  6EE6               	movwf	postinc1,c
 27973  014456  0E00               	movlw	0
 27974  014458  6EE6               	movwf	postinc1,c
 27975  01445A  0EF6               	movlw	low STR_126
 27976  01445C  6EE6               	movwf	postinc1,c
 27977  01445E  0EFF               	movlw	high STR_126
 27978  014460  6EE6               	movwf	postinc1,c
 27979                           
 27980                           ;stkvar	_fmt @ sp[(-36)+-4]
 27981  014462  0ED8               	movlw	-40
 27982  014464  006F FF8F FFD9     	movff	plusw1,fsr2l
 27983  01446A  0ED9               	movlw	-39
 27984  01446C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27985  014472  006F FF78  F034    	movff	postinc2,btemp+10
 27986  014478  006F FF74  F035    	movff	postdec2,btemp+11
 27987  01447E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27988  014484  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27989  01448A  EC28  F0EA         	call	_strncmp	;wreg free
 27990  01448E  502A               	movf	btemp^0,w,c
 27991  014490  102B               	iorwf	(btemp+1)^0,w,c
 27992  014492  A4D8               	btfss	status,2,c
 27993  014494  D039               	goto	l16519
 27994                           
 27995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 27996                           ;stkvar	_fmt @ sp[(-32)+-4]
 27997  014496  0EDC               	movlw	-36
 27998  014498  006F FF8F FFD9     	movff	plusw1,fsr2l
 27999  01449E  0EDD               	movlw	-35
 28000  0144A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 28001  0144A6  0E02               	movlw	2
 28002  0144A8  26DE               	addwf	postinc2,f,c
 28003  0144AA  0E00               	movlw	0
 28004  0144AC  22DD               	addwfc	postdec2,f,c
 28005                           
 28006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 28007                           ;stkvar	_ap @ sp[(-32)+-6]
 28008  0144AE  0EDA               	movlw	-38
 28009  0144B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 28010  0144B6  0EDB               	movlw	-37
 28011  0144B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 28012  0144BE  0E04               	movlw	4
 28013  0144C0  5EDE               	subwf	postinc2,f,c
 28014  0144C2  0E00               	movlw	0
 28015  0144C4  5ADD               	subwfb	postdec2,f,c
 28016  0144C6  006F FF78  F034    	movff	postinc2,btemp+10
 28017  0144CC  006F FF74  F035    	movff	postdec2,btemp+11
 28018  0144D2  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 28019  0144D8  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 28020  0144DE  006F FF78  F032    	movff	postinc2,btemp+8
 28021  0144E4  006F FF78  F033    	movff	postinc2,btemp+9
 28022  0144EA  006F FF78  F034    	movff	postinc2,btemp+10
 28023  0144F0  006F FF78  F035    	movff	postinc2,btemp+11
 28024  0144F6  5032               	movf	(btemp+8)^0,w,c
 28025  0144F8  6E3A               	movwf	(btemp+16)^0,c
 28026  0144FA  5033               	movf	(btemp+9)^0,w,c
 28027  0144FC  6E3B               	movwf	(btemp+17)^0,c
 28028  0144FE  5034               	movf	(btemp+10)^0,w,c
 28029  014500  6E3C               	movwf	(btemp+18)^0,c
 28030  014502  5035               	movf	(btemp+11)^0,w,c
 28031  014504  6E3D               	movwf	(btemp+19)^0,c
 28032  014506  D758               	goto	L26
 28033  014508                     l16519:
 28034                           
 28035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 28036                           ;stkvar	_fmt @ sp[(-32)+-4]
 28037  014508  0EDC               	movlw	-36
 28038  01450A  006F FF8F FFD9     	movff	plusw1,fsr2l
 28039  014510  0EDD               	movlw	-35
 28040  014512  006F FF8F FFDA     	movff	plusw1,fsr2h
 28041  014518  006F FF7B FFF6     	movff	postinc2,tblptrl
 28042  01451E  006F FF77 FFF7     	movff	postdec2,tblptrh
 28043  014524                     	if	0	;tblptru may be non-zero
 28044  014524                     	endif
 28045  014524                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28046  014524  0E00               	movlw	low (__mediumconst shr (0+16))
 28047  014526  6EF8               	movwf	tblptru,c
 28048  014528                     	endif
 28049  014528  0008               	tblrd		*
 28050  01452A  50F5               	movf	tablat,w,c
 28051  01452C  0A78               	xorlw	120
 28052  01452E  B4D8               	btfsc	status,2,c
 28053  014530  D015               	goto	u16120
 28054                           
 28055                           ;stkvar	_fmt @ sp[(-32)+-4]
 28056  014532  0EDC               	movlw	-36
 28057  014534  006F FF8F FFD9     	movff	plusw1,fsr2l
 28058  01453A  0EDD               	movlw	-35
 28059  01453C  006F FF8F FFDA     	movff	plusw1,fsr2h
 28060  014542  006F FF7B FFF6     	movff	postinc2,tblptrl
 28061  014548  006F FF77 FFF7     	movff	postdec2,tblptrh
 28062  01454E                     	if	0	;tblptru may be non-zero
 28063  01454E                     	endif
 28064  01454E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28065  01454E  0E00               	movlw	low (__mediumconst shr (0+16))
 28066  014550  6EF8               	movwf	tblptru,c
 28067  014552                     	endif
 28068  014552  0008               	tblrd		*
 28069  014554  50F5               	movf	tablat,w,c
 28070  014556  0A58               	xorlw	88
 28071  014558  A4D8               	btfss	status,2,c
 28072  01455A  D094               	goto	l16533
 28073  01455C                     u16120:
 28074                           
 28075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 28076                           ;stkvar	_fmt @ sp[(-32)+-4]
 28077  01455C  0EDC               	movlw	-36
 28078  01455E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28079  014564  0EDD               	movlw	-35
 28080  014566  006F FF8F FFDA     	movff	plusw1,fsr2h
 28081  01456C  006F FF7B FFF6     	movff	postinc2,tblptrl
 28082  014572  006F FF77 FFF7     	movff	postdec2,tblptrh
 28083  014578                     	if	0	;tblptru may be non-zero
 28084  014578                     	endif
 28085  014578                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28086  014578  0E00               	movlw	low (__mediumconst shr (0+16))
 28087  01457A  6EF8               	movwf	tblptru,c
 28088  01457C                     	endif
 28089                           
 28090                           ;stkvar	_c @ sp[(-32)+31]
 28091  01457C  0008               	tblrd		*
 28092  01457E  0EFF               	movlw	-1
 28093  014580  006F FFD7 FFE3     	movff	tablat,plusw1
 28094                           
 28095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 28096                           ;stkvar	_fmt @ sp[(-32)+-4]
 28097  014586  0EDC               	movlw	-36
 28098  014588  006F FF8F FFD9     	movff	plusw1,fsr2l
 28099  01458E  0EDD               	movlw	-35
 28100  014590  006F FF8F FFDA     	movff	plusw1,fsr2h
 28101  014596  2ADE               	incf	postinc2,f,c
 28102  014598  0E00               	movlw	0
 28103  01459A  22DD               	addwfc	postdec2,f,c
 28104                           
 28105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 28106                           ;stkvar	_ap @ sp[(-32)+-6]
 28107  01459C  0EDA               	movlw	-38
 28108  01459E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28109  0145A4  0EDB               	movlw	-37
 28110  0145A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 28111  0145AC  0E02               	movlw	2
 28112  0145AE  5EDE               	subwf	postinc2,f,c
 28113  0145B0  0E00               	movlw	0
 28114  0145B2  5ADD               	subwfb	postdec2,f,c
 28115  0145B4  006F FF78  F034    	movff	postinc2,btemp+10
 28116  0145BA  006F FF74  F035    	movff	postdec2,btemp+11
 28117  0145C0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 28118  0145C6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 28119  0145CC  006F FF78  F034    	movff	postinc2,btemp+10
 28120  0145D2  006F FF74  F035    	movff	postdec2,btemp+11
 28121  0145D8  5034               	movf	(btemp+10)^0,w,c
 28122  0145DA  6E3A               	movwf	(btemp+16)^0,c
 28123  0145DC  5035               	movf	(btemp+11)^0,w,c
 28124  0145DE  6E3B               	movwf	(btemp+17)^0,c
 28125  0145E0  6A3C               	clrf	(btemp+18)^0,c
 28126  0145E2  6A3D               	clrf	(btemp+19)^0,c
 28127  0145E4  6A3E               	clrf	(btemp+20)^0,c
 28128  0145E6  6A3F               	clrf	(btemp+21)^0,c
 28129  0145E8  6A40               	clrf	(btemp+22)^0,c
 28130  0145EA  6A41               	clrf	(btemp+23)^0,c
 28131                           
 28132                           ;stkvar	_llu @ sp[(-32)+6]
 28133  0145EC  0EE6               	movlw	-26
 28134  0145EE  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 28135  0145F4  0EE7               	movlw	-25
 28136  0145F6  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 28137  0145FC  0EE8               	movlw	-24
 28138  0145FE  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 28139  014604  0EE9               	movlw	-23
 28140  014606  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 28141  01460C  0EEA               	movlw	-22
 28142  01460E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 28143  014614  0EEB               	movlw	-21
 28144  014616  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 28145  01461C  0EEC               	movlw	-20
 28146  01461E  0060  F103  FFE3   	movff	btemp+22,plusw1
 28147  014624  0EED               	movlw	-19
 28148  014626  0060  F107  FFE3   	movff	btemp+23,plusw1
 28149                           
 28150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 28151                           ;stkvar	_c @ sp[(-32)+31]
 28152  01462C  0EFF               	movlw	-1
 28153  01462E  50E3               	movf	plusw1,w,c
 28154  014630  6EE6               	movwf	postinc1,c
 28155                           
 28156                           ;stkvar	_llu @ sp[(-33)+6]
 28157  014632  50E1               	movf	fsr1l,w,c
 28158  014634  0FE5               	addlw	-27
 28159  014636  6ED9               	movwf	fsr2l,c
 28160  014638  50E2               	movf	fsr1h,w,c
 28161  01463A  6EDA               	movwf	fsr2h,c
 28162  01463C  0EFF               	movlw	255
 28163  01463E  22DA               	addwfc	fsr2h,f,c
 28164  014640  006F FF7B FFE6     	movff	postinc2,postinc1
 28165  014646  006F FF7B FFE6     	movff	postinc2,postinc1
 28166  01464C  006F FF7B FFE6     	movff	postinc2,postinc1
 28167  014652  006F FF7B FFE6     	movff	postinc2,postinc1
 28168  014658  006F FF7B FFE6     	movff	postinc2,postinc1
 28169  01465E  006F FF7B FFE6     	movff	postinc2,postinc1
 28170  014664  006F FF7B FFE6     	movff	postinc2,postinc1
 28171  01466A  006F FF7B FFE6     	movff	postinc2,postinc1
 28172                           
 28173                           ;stkvar	_fp @ sp[(-41)+-2]
 28174  014670  0ED5               	movlw	-43
 28175  014672  006F FF8F FFE6     	movff	plusw1,postinc1
 28176  014678  006F FF8F FFE6     	movff	plusw1,postinc1
 28177  01467E  ECCB  F0CF         	call	_xtoa	;wreg free
 28178  014682  D105               	goto	l2700
 28179  014684                     l16533:
 28180                           
 28181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 28182  014684  0E02               	movlw	2
 28183  014686  6EE6               	movwf	postinc1,c
 28184  014688  0E00               	movlw	0
 28185  01468A  6EE6               	movwf	postinc1,c
 28186  01468C  0EF9               	movlw	low STR_131
 28187  01468E  6EE6               	movwf	postinc1,c
 28188  014690  0EFF               	movlw	high STR_131
 28189  014692  6EE6               	movwf	postinc1,c
 28190                           
 28191                           ;stkvar	_fmt @ sp[(-36)+-4]
 28192  014694  0ED8               	movlw	-40
 28193  014696  006F FF8F FFD9     	movff	plusw1,fsr2l
 28194  01469C  0ED9               	movlw	-39
 28195  01469E  006F FF8F FFDA     	movff	plusw1,fsr2h
 28196  0146A4  006F FF78  F034    	movff	postinc2,btemp+10
 28197  0146AA  006F FF74  F035    	movff	postdec2,btemp+11
 28198  0146B0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28199  0146B6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28200  0146BC  EC28  F0EA         	call	_strncmp	;wreg free
 28201  0146C0  502A               	movf	btemp^0,w,c
 28202  0146C2  102B               	iorwf	(btemp+1)^0,w,c
 28203  0146C4  B4D8               	btfsc	status,2,c
 28204  0146C6  D022               	goto	u16140
 28205  0146C8  0E02               	movlw	2
 28206  0146CA  6EE6               	movwf	postinc1,c
 28207  0146CC  0E00               	movlw	0
 28208  0146CE  6EE6               	movwf	postinc1,c
 28209  0146D0  0EEA               	movlw	low STR_135
 28210  0146D2  6EE6               	movwf	postinc1,c
 28211  0146D4  0EFF               	movlw	high STR_135
 28212  0146D6  6EE6               	movwf	postinc1,c
 28213                           
 28214                           ;stkvar	_fmt @ sp[(-36)+-4]
 28215  0146D8  0ED8               	movlw	-40
 28216  0146DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 28217  0146E0  0ED9               	movlw	-39
 28218  0146E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 28219  0146E8  006F FF78  F034    	movff	postinc2,btemp+10
 28220  0146EE  006F FF74  F035    	movff	postdec2,btemp+11
 28221  0146F4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28222  0146FA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28223  014700  EC28  F0EA         	call	_strncmp	;wreg free
 28224  014704  502A               	movf	btemp^0,w,c
 28225  014706  102B               	iorwf	(btemp+1)^0,w,c
 28226  014708  A4D8               	btfss	status,2,c
 28227  01470A  D058               	goto	l16547
 28228  01470C                     u16140:
 28229                           
 28230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 28231                           ;stkvar	_fmt @ sp[(-32)+-4]
 28232  01470C  0EDC               	movlw	-36
 28233  01470E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28234  014714  0EDD               	movlw	-35
 28235  014716  006F FF8F FFDA     	movff	plusw1,fsr2h
 28236  01471C  006F FF78  F034    	movff	postinc2,btemp+10
 28237  014722  006F FF74  F035    	movff	postdec2,btemp+11
 28238  014728  0E01               	movlw	1
 28239  01472A  2634               	addwf	(btemp+10)^0,f,c
 28240  01472C  0E00               	movlw	0
 28241  01472E  2235               	addwfc	(btemp+11)^0,f,c
 28242  014730  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 28243  014736  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 28244  01473C                     	if	0	;tblptru may be non-zero
 28245  01473C                     	endif
 28246  01473C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28247  01473C  0E00               	movlw	low (__mediumconst shr (0+16))
 28248  01473E  6EF8               	movwf	tblptru,c
 28249  014740                     	endif
 28250                           
 28251                           ;stkvar	_c @ sp[(-32)+31]
 28252  014740  0008               	tblrd		*
 28253  014742  0EFF               	movlw	-1
 28254  014744  006F FFD7 FFE3     	movff	tablat,plusw1
 28255                           
 28256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 28257                           ;stkvar	_fmt @ sp[(-32)+-4]
 28258  01474A  0EDC               	movlw	-36
 28259  01474C  006F FF8F FFD9     	movff	plusw1,fsr2l
 28260  014752  0EDD               	movlw	-35
 28261  014754  006F FF8F FFDA     	movff	plusw1,fsr2h
 28262  01475A  0E02               	movlw	2
 28263  01475C  26DE               	addwf	postinc2,f,c
 28264  01475E  0E00               	movlw	0
 28265  014760  22DD               	addwfc	postdec2,f,c
 28266                           
 28267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 28268                           ;stkvar	_ap @ sp[(-32)+-6]
 28269  014762  0EDA               	movlw	-38
 28270  014764  006F FF8F FFD9     	movff	plusw1,fsr2l
 28271  01476A  0EDB               	movlw	-37
 28272  01476C  006F FF8F FFDA     	movff	plusw1,fsr2h
 28273  014772  0E04               	movlw	4
 28274  014774  5EDE               	subwf	postinc2,f,c
 28275  014776  0E00               	movlw	0
 28276  014778  5ADD               	subwfb	postdec2,f,c
 28277  01477A  006F FF78  F034    	movff	postinc2,btemp+10
 28278  014780  006F FF74  F035    	movff	postdec2,btemp+11
 28279  014786  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 28280  01478C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 28281  014792  006F FF78  F032    	movff	postinc2,btemp+8
 28282  014798  006F FF78  F033    	movff	postinc2,btemp+9
 28283  01479E  006F FF78  F034    	movff	postinc2,btemp+10
 28284  0147A4  006F FF78  F035    	movff	postinc2,btemp+11
 28285  0147AA  5032               	movf	(btemp+8)^0,w,c
 28286  0147AC  6E3A               	movwf	(btemp+16)^0,c
 28287  0147AE  5033               	movf	(btemp+9)^0,w,c
 28288  0147B0  6E3B               	movwf	(btemp+17)^0,c
 28289  0147B2  5034               	movf	(btemp+10)^0,w,c
 28290  0147B4  6E3C               	movwf	(btemp+18)^0,c
 28291  0147B6  5035               	movf	(btemp+11)^0,w,c
 28292  0147B8  6E3D               	movwf	(btemp+19)^0,c
 28293  0147BA  D714               	goto	L27
 28294  0147BC                     l16547:
 28295                           
 28296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 28297                           ;stkvar	_fmt @ sp[(-32)+-4]
 28298  0147BC  0EDC               	movlw	-36
 28299  0147BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 28300  0147C4  0EDD               	movlw	-35
 28301  0147C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 28302  0147CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 28303  0147D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 28304  0147D8                     	if	0	;tblptru may be non-zero
 28305  0147D8                     	endif
 28306  0147D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28307  0147D8  0E00               	movlw	low (__mediumconst shr (0+16))
 28308  0147DA  6EF8               	movwf	tblptru,c
 28309  0147DC                     	endif
 28310  0147DC  0008               	tblrd		*
 28311  0147DE  50F5               	movf	tablat,w,c
 28312  0147E0  0A25               	xorlw	37
 28313  0147E2  A4D8               	btfss	status,2,c
 28314  0147E4  D01A               	goto	l16557
 28315                           
 28316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 28317                           ;stkvar	_fmt @ sp[(-32)+-4]
 28318  0147E6  0EDC               	movlw	-36
 28319  0147E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 28320  0147EE  0EDD               	movlw	-35
 28321  0147F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 28322  0147F6  2ADE               	incf	postinc2,f,c
 28323  0147F8  0E00               	movlw	0
 28324  0147FA  22DD               	addwfc	postdec2,f,c
 28325                           
 28326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 28327                           ;stkvar	_fp @ sp[(-32)+-2]
 28328  0147FC  0EDE               	movlw	-34
 28329  0147FE  006F FF8F FFE6     	movff	plusw1,postinc1
 28330  014804  006F FF8F FFE6     	movff	plusw1,postinc1
 28331  01480A  0E25               	movlw	37
 28332  01480C  6EE6               	movwf	postinc1,c
 28333  01480E  0E00               	movlw	0
 28334  014810  6EE6               	movwf	postinc1,c
 28335  014812  ECD8  F0FC         	call	_fputc	;wreg free
 28336  014816                     l16553:
 28337                           
 28338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 28339  014816  0E01               	movlw	1
 28340  014818  D00C               	goto	L28
 28341  01481A                     l16557:
 28342                           
 28343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 28344                           ;stkvar	_fmt @ sp[(-32)+-4]
 28345  01481A  0EDC               	movlw	-36
 28346  01481C  006F FF8F FFD9     	movff	plusw1,fsr2l
 28347  014822  0EDD               	movlw	-35
 28348  014824  006F FF8F FFDA     	movff	plusw1,fsr2h
 28349  01482A  2ADE               	incf	postinc2,f,c
 28350  01482C  0E00               	movlw	0
 28351  01482E  22DD               	addwfc	postdec2,f,c
 28352                           
 28353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 28354  014830  0E00               	movlw	0
 28355  014832                     L28:
 28356  014832  6E2A               	movwf	btemp^0,c
 28357  014834  0E00               	movlw	0
 28358  014836  6E2B               	movwf	(btemp+1)^0,c
 28359  014838  D02A               	goto	l2700
 28360  01483A                     l16563:
 28361                           
 28362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 28363                           ;stkvar	_fp @ sp[(-32)+-2]
 28364  01483A  0EDE               	movlw	-34
 28365  01483C  006F FF8F FFE6     	movff	plusw1,postinc1
 28366  014842  006F FF8F FFE6     	movff	plusw1,postinc1
 28367                           
 28368                           ;stkvar	_fmt @ sp[(-34)+-4]
 28369  014848  0EDA               	movlw	-38
 28370  01484A  006F FF8F FFD9     	movff	plusw1,fsr2l
 28371  014850  0EDB               	movlw	-37
 28372  014852  006F FF8F FFDA     	movff	plusw1,fsr2h
 28373  014858  006F FF7B FFF6     	movff	postinc2,tblptrl
 28374  01485E  006F FF77 FFF7     	movff	postdec2,tblptrh
 28375  014864                     	if	0	;tblptru may be non-zero
 28376  014864                     	endif
 28377  014864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28378  014864  0E00               	movlw	low (__mediumconst shr (0+16))
 28379  014866  6EF8               	movwf	tblptru,c
 28380  014868                     	endif
 28381  014868  0008               	tblrd		*
 28382  01486A  50F5               	movf	tablat,w,c
 28383  01486C  6EE6               	movwf	postinc1,c
 28384  01486E  0E00               	movlw	0
 28385  014870  6EE6               	movwf	postinc1,c
 28386  014872  ECD8  F0FC         	call	_fputc	;wreg free
 28387                           
 28388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 28389                           ;stkvar	_fmt @ sp[(-32)+-4]
 28390  014876  0EDC               	movlw	-36
 28391  014878  006F FF8F FFD9     	movff	plusw1,fsr2l
 28392  01487E  0EDD               	movlw	-35
 28393  014880  006F FF8F FFDA     	movff	plusw1,fsr2h
 28394  014886  2ADE               	incf	postinc2,f,c
 28395  014888  0E00               	movlw	0
 28396  01488A  22DD               	addwfc	postdec2,f,c
 28397  01488C  D7C4               	goto	l16553
 28398  01488E                     l2700:
 28399                           
 28400                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 28401  01488E  0EDA               	movlw	218
 28402  014890  26E1               	addwf	fsr1l,f,c
 28403  014892  0EFF               	movlw	255
 28404  014894  22E2               	addwfc	fsr1h,f,c
 28405  014896  0012               	return		;funcret
 28406  014898                     __end_of_vfpfcnvrt:
 28407                           	opt callstack 0
 28408                           
 28409 ;; *************** function _xtoa *****************
 28410 ;; Defined at:
 28411 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28412 ;; Parameters:    Size  Location     Type
 28413 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28414 ;;		 -> f(6), NULL(0), 
 28415 ;;  d               8  [STACK] unsigned long long 
 28416 ;;  x               1  [STACK] unsigned char 
 28417 ;; Auto vars:     Size  Location     Type
 28418 ;;  n               8  [STACK] unsigned long long 
 28419 ;;  c               2  [STACK] int 
 28420 ;;  i               2  [STACK] int 
 28421 ;;  w               2  [STACK] int 
 28422 ;;  p               2  [STACK] int 
 28423 ;; Return value:  Size  Location     Type
 28424 ;;                  2  [STACK] int 
 28425 ;; Registers used:
 28426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28427 ;; Tracked objects:
 28428 ;;		On entry : 0/0
 28429 ;;		On exit  : 0/0
 28430 ;;		Unchanged: 0/0
 28431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28436 ;;Total ram usage:        0 bytes
 28437 ;; Hardware stack levels used:    1
 28438 ;; Hardware stack levels required when called:   20
 28439 ;; This function calls:
 28440 ;;		_isalpha
 28441 ;;		_isupper
 28442 ;;		_pad
 28443 ;;		_toupper
 28444 ;; This function is called by:
 28445 ;;		_vfpfcnvrt
 28446 ;; This function uses a reentrant model
 28447 ;;
 28448                           
 28449                           	psect	text96
 28450  019F96                     __ptext96:
 28451                           	opt callstack 0
 28452  019F96                     _xtoa:
 28453                           	opt callstack 0
 28454                           
 28455                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28456  019F96  0E14               	movlw	20
 28457  019F98  26E1               	addwf	fsr1l,f,c
 28458  019F9A  0E00               	movlw	0
 28459  019F9C  22E2               	addwfc	fsr1h,f,c
 28460                           
 28461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 28462                           
 28463                           ;incstack = 0
 28464 ;; hardware stack exceeded
 28465  019F9E  AE4D               	btfss	(_prec+1)^0,7,c
 28466                           
 28467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 28468  019FA0  924E               	bcf	_flags^0,1,c
 28469                           
 28470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 28471  019FA2  BE4D               	btfsc	(_prec+1)^0,7,c
 28472  019FA4  D005               	goto	u15600
 28473  019FA6  504D               	movf	(_prec+1)^0,w,c
 28474  019FA8  E110               	bnz	l16217
 28475  019FAA  044C               	decf	_prec^0,w,c
 28476  019FAC  B0D8               	btfsc	status,0,c
 28477  019FAE  D00D               	goto	l16217
 28478  019FB0                     u15600:
 28479  019FB0  0E01               	movlw	1
 28480  019FB2  6E34               	movwf	(btemp+10)^0,c
 28481  019FB4  0E00               	movlw	0
 28482  019FB6  6E35               	movwf	(btemp+11)^0,c
 28483                           
 28484                           ;stkvar	_p @ sp[(-20)+18]
 28485  019FB8  0EFE               	movlw	-2
 28486  019FBA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28487  019FC0  0EFF               	movlw	-1
 28488  019FC2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28489  019FC8  D008               	goto	l2650
 28490  019FCA                     l16217:
 28491                           
 28492                           ;stkvar	_p @ sp[(-20)+18]
 28493  019FCA  0EFE               	movlw	-2
 28494  019FCC  0060  F133  FFE3   	movff	_prec,plusw1
 28495  019FD2  0EFF               	movlw	-1
 28496  019FD4  0060  F137  FFE3   	movff	_prec+1,plusw1
 28497  019FDA                     l2650:
 28498                           
 28499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 28500                           ;stkvar	_w @ sp[(-20)+16]
 28501  019FDA  0EFC               	movlw	-4
 28502  019FDC  0060  F12B  FFE3   	movff	_width,plusw1
 28503  019FE2  0EFD               	movlw	-3
 28504  019FE4  0060  F12F  FFE3   	movff	_width+1,plusw1
 28505                           
 28506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 28507  019FEA  A84E               	btfss	_flags^0,4,c
 28508  019FEC  D00B               	goto	l16223
 28509                           
 28510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 28511                           ;stkvar	_w @ sp[(-20)+16]
 28512  019FEE  50E1               	movf	fsr1l,w,c
 28513  019FF0  0FFC               	addlw	-4
 28514  019FF2  6ED9               	movwf	fsr2l,c
 28515  019FF4  50E2               	movf	fsr1h,w,c
 28516  019FF6  6EDA               	movwf	fsr2h,c
 28517  019FF8  0EFF               	movlw	255
 28518  019FFA  22DA               	addwfc	fsr2h,f,c
 28519  019FFC  0EFE               	movlw	254
 28520  019FFE  26DE               	addwf	postinc2,f,c
 28521  01A000  0EFF               	movlw	255
 28522  01A002  22DD               	addwfc	postdec2,f,c
 28523  01A004                     l16223:
 28524                           
 28525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 28526                           ;stkvar	_d @ sp[(-20)+-10]
 28527  01A004  0EE2               	movlw	226
 28528  01A006  24E1               	addwf	fsr1l,w,c
 28529  01A008  6ED9               	movwf	fsr2l,c
 28530  01A00A  0EFF               	movlw	255
 28531  01A00C  20E2               	addwfc	fsr1h,w,c
 28532  01A00E  6EDA               	movwf	fsr2h,c
 28533                           
 28534                           ;stkvar	_n @ sp[(-20)+4]
 28535  01A010  0E08               	movlw	8
 28536  01A012  6E2A               	movwf	btemp^0,c
 28537  01A014  0EF0               	movlw	-16
 28538  01A016                     us1562999:
 28539  01A016  006F FF7B FFE3     	movff	postinc2,plusw1
 28540  01A01C  28E8               	incf	wreg,w,c
 28541  01A01E  2E2A               	decfsz	btemp^0,f,c
 28542  01A020  D7FA               	bra	us1562999
 28543                           
 28544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 28545  01A022  0E4F               	movlw	79
 28546  01A024  6E34               	movwf	(btemp+10)^0,c
 28547  01A026  0E00               	movlw	0
 28548  01A028  6E35               	movwf	(btemp+11)^0,c
 28549                           
 28550                           ;stkvar	_i @ sp[(-20)+14]
 28551  01A02A  0EFA               	movlw	-6
 28552  01A02C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28553  01A032  0EFB               	movlw	-5
 28554  01A034  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28555                           
 28556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 28557  01A03A  0103               	movlb	3	; () banked
 28558  01A03C  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28559                           
 28560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28561  01A03E  D0EE               	goto	l16261
 28562  01A040                     l16229:
 28563                           
 28564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 28565                           ;stkvar	_i @ sp[(-20)+14]
 28566  01A040  50E1               	movf	fsr1l,w,c
 28567  01A042  0FFA               	addlw	-6
 28568  01A044  6ED9               	movwf	fsr2l,c
 28569  01A046  50E2               	movf	fsr1h,w,c
 28570  01A048  6EDA               	movwf	fsr2h,c
 28571  01A04A  0EFF               	movlw	255
 28572  01A04C  22DA               	addwfc	fsr2h,f,c
 28573  01A04E  06DE               	decf	postinc2,f,c
 28574  01A050  0E00               	movlw	0
 28575  01A052  5ADD               	subwfb	postdec2,f,c
 28576                           
 28577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 28578                           ;stkvar	_n @ sp[(-20)+4]
 28579  01A054  0EF0               	movlw	-16
 28580  01A056  006F FF8C  F034    	movff	plusw1,btemp+10
 28581  01A05C  0EF1               	movlw	-15
 28582  01A05E  006F FF8C  F035    	movff	plusw1,btemp+11
 28583  01A064  0E0F               	movlw	15
 28584  01A066  1634               	andwf	(btemp+10)^0,f,c
 28585  01A068  0E00               	movlw	0
 28586  01A06A  1635               	andwf	(btemp+11)^0,f,c
 28587                           
 28588                           ;stkvar	_c @ sp[(-20)+12]
 28589  01A06C  0EF8               	movlw	-8
 28590  01A06E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28591  01A074  0EF9               	movlw	-7
 28592  01A076  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28593                           
 28594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 28595                           ;stkvar	_c @ sp[(-20)+12]
 28596  01A07C  0EF9               	movlw	-7
 28597  01A07E  BEE3               	btfsc	plusw1,7,c
 28598  01A080  D00F               	goto	l16237
 28599  01A082  0EF9               	movlw	-7
 28600  01A084  50E3               	movf	plusw1,w,c
 28601  01A086  E108               	bnz	u15630
 28602  01A088  0EF8               	movlw	-8
 28603  01A08A  006F FF8C  F02A    	movff	plusw1,btemp
 28604  01A090  0E0A               	movlw	10
 28605  01A092  5E2A               	subwf	btemp^0,f,c
 28606  01A094  A0D8               	btfss	status,0,c
 28607  01A096  D004               	goto	l16237
 28608  01A098                     u15630:
 28609                           
 28610                           ;stkvar	_c @ sp[(-20)+12]
 28611  01A098  0EF8               	movlw	-8
 28612  01A09A  50E3               	movf	plusw1,w,c
 28613  01A09C  0F57               	addlw	87
 28614  01A09E  D003               	goto	L29
 28615  01A0A0                     l16237:
 28616                           
 28617                           ;stkvar	_c @ sp[(-20)+12]
 28618  01A0A0  0EF8               	movlw	-8
 28619  01A0A2  50E3               	movf	plusw1,w,c
 28620  01A0A4  0F30               	addlw	48
 28621  01A0A6                     L29:
 28622  01A0A6  6E34               	movwf	(btemp+10)^0,c
 28623  01A0A8  0EF9               	movlw	-7
 28624  01A0AA  006F FF8C  F035    	movff	plusw1,btemp+11
 28625  01A0B0  0E00               	movlw	0
 28626  01A0B2  2235               	addwfc	(btemp+11)^0,f,c
 28627                           
 28628                           ;stkvar	_c @ sp[(-20)+12]
 28629  01A0B4  0EF8               	movlw	-8
 28630  01A0B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28631  01A0BC  0EF9               	movlw	-7
 28632  01A0BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28633  01A0C4  0EBF               	movlw	191
 28634  01A0C6  6E34               	movwf	(btemp+10)^0,c
 28635  01A0C8  0EFF               	movlw	255
 28636  01A0CA  6E35               	movwf	(btemp+11)^0,c
 28637                           
 28638                           ;stkvar	_x @ sp[(-20)+-11]
 28639  01A0CC  0EE1               	movlw	-31
 28640  01A0CE  50E3               	movf	plusw1,w,c
 28641  01A0D0  6E32               	movwf	(btemp+8)^0,c
 28642  01A0D2  6A33               	clrf	(btemp+9)^0,c
 28643  01A0D4  5034               	movf	(btemp+10)^0,w,c
 28644  01A0D6  2632               	addwf	(btemp+8)^0,f,c
 28645  01A0D8  5035               	movf	(btemp+11)^0,w,c
 28646  01A0DA  2233               	addwfc	(btemp+9)^0,f,c
 28647  01A0DC  5033               	movf	(btemp+9)^0,w,c
 28648  01A0DE  E106               	bnz	u15640
 28649  01A0E0  0E1A               	movlw	26
 28650  01A0E2  5C32               	subwf	(btemp+8)^0,w,c
 28651  01A0E4  B0D8               	btfsc	status,0,c
 28652  01A0E6  D002               	goto	u15640
 28653  01A0E8  0E01               	movlw	1
 28654  01A0EA  D001               	goto	u15650
 28655  01A0EC                     u15640:
 28656  01A0EC  0E00               	movlw	0
 28657  01A0EE                     u15650:
 28658  01A0EE  6E34               	movwf	(btemp+10)^0,c
 28659  01A0F0  6A35               	clrf	(btemp+11)^0,c
 28660                           
 28661                           ;stkvar	_xtoa$6675 @ sp[(-20)+2]
 28662  01A0F2  0EEE               	movlw	-18
 28663  01A0F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28664  01A0FA  0EEF               	movlw	-17
 28665  01A0FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28666                           
 28667                           ;stkvar	_xtoa$6675 @ sp[(-20)+2]
 28668  01A102  0EEE               	movlw	-18
 28669  01A104  006F FF8C  F02A    	movff	plusw1,btemp
 28670  01A10A  0EEF               	movlw	-17
 28671  01A10C  50E3               	movf	plusw1,w,c
 28672  01A10E  102A               	iorwf	btemp^0,w,c
 28673  01A110  B4D8               	btfsc	status,2,c
 28674  01A112  D041               	goto	l16253
 28675  01A114  0E9F               	movlw	159
 28676  01A116  6E34               	movwf	(btemp+10)^0,c
 28677  01A118  0EFF               	movlw	255
 28678  01A11A  6E35               	movwf	(btemp+11)^0,c
 28679                           
 28680                           ;stkvar	_c @ sp[(-20)+12]
 28681  01A11C  0EF8               	movlw	-8
 28682  01A11E  006F FF8C  F032    	movff	plusw1,btemp+8
 28683  01A124  0EF9               	movlw	-7
 28684  01A126  006F FF8C  F033    	movff	plusw1,btemp+9
 28685  01A12C  0E20               	movlw	32
 28686  01A12E  1232               	iorwf	(btemp+8)^0,f,c
 28687  01A130  0E00               	movlw	0
 28688  01A132  1233               	iorwf	(btemp+9)^0,f,c
 28689  01A134  5034               	movf	(btemp+10)^0,w,c
 28690  01A136  2632               	addwf	(btemp+8)^0,f,c
 28691  01A138  5035               	movf	(btemp+11)^0,w,c
 28692  01A13A  2233               	addwfc	(btemp+9)^0,f,c
 28693  01A13C  5033               	movf	(btemp+9)^0,w,c
 28694  01A13E  E106               	bnz	u15670
 28695  01A140  0E1A               	movlw	26
 28696  01A142  5C32               	subwf	(btemp+8)^0,w,c
 28697  01A144  B0D8               	btfsc	status,0,c
 28698  01A146  D002               	goto	u15670
 28699  01A148  0E01               	movlw	1
 28700  01A14A  D001               	goto	u15680
 28701  01A14C                     u15670:
 28702  01A14C  0E00               	movlw	0
 28703  01A14E                     u15680:
 28704  01A14E  6E34               	movwf	(btemp+10)^0,c
 28705  01A150  6A35               	clrf	(btemp+11)^0,c
 28706                           
 28707                           ;stkvar	_xtoa$6676 @ sp[(-20)+0]
 28708  01A152  0EEC               	movlw	-20
 28709  01A154  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28710  01A15A  0EED               	movlw	-19
 28711  01A15C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28712                           
 28713                           ;stkvar	_xtoa$6676 @ sp[(-20)+0]
 28714  01A162  0EEC               	movlw	-20
 28715  01A164  006F FF8C  F02A    	movff	plusw1,btemp
 28716  01A16A  0EED               	movlw	-19
 28717  01A16C  50E3               	movf	plusw1,w,c
 28718  01A16E  102A               	iorwf	btemp^0,w,c
 28719  01A170  B4D8               	btfsc	status,2,c
 28720  01A172  D011               	goto	l16253
 28721                           
 28722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 28723                           ;stkvar	_c @ sp[(-20)+12]
 28724  01A174  0EF8               	movlw	-8
 28725  01A176  006F FF8F FFE6     	movff	plusw1,postinc1
 28726  01A17C  006F FF8F FFE6     	movff	plusw1,postinc1
 28727  01A182  EC00  F00B         	call	_toupper	;wreg free
 28728                           
 28729                           ;stkvar	_c @ sp[(-20)+12]
 28730  01A186  0EF8               	movlw	-8
 28731  01A188  0060  F0AB  FFE3   	movff	btemp,plusw1
 28732  01A18E  0EF9               	movlw	-7
 28733  01A190  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 28734  01A196                     l16253:
 28735                           
 28736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 28737                           ;stkvar	_c @ sp[(-20)+12]
 28738                           ;stkvar	_i @ sp[(-20)+14]
 28739  01A196  0EFA               	movlw	-6
 28740  01A198  006F FF8C  F034    	movff	plusw1,btemp+10
 28741  01A19E  0EFB               	movlw	-5
 28742  01A1A0  006F FF8C  F035    	movff	plusw1,btemp+11
 28743  01A1A6  0E54               	movlw	low _dbuf
 28744  01A1A8  2434               	addwf	(btemp+10)^0,w,c
 28745  01A1AA  6ED9               	movwf	fsr2l,c
 28746  01A1AC  0E03               	movlw	high _dbuf
 28747  01A1AE  2035               	addwfc	(btemp+11)^0,w,c
 28748  01A1B0  6EDA               	movwf	fsr2h,c
 28749  01A1B2  0EF8               	movlw	-8
 28750  01A1B4  006F FF8F FFDF     	movff	plusw1,indf2
 28751                           
 28752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 28753                           ;stkvar	_p @ sp[(-20)+18]
 28754  01A1BA  50E1               	movf	fsr1l,w,c
 28755  01A1BC  0FFE               	addlw	-2
 28756  01A1BE  6ED9               	movwf	fsr2l,c
 28757  01A1C0  50E2               	movf	fsr1h,w,c
 28758  01A1C2  6EDA               	movwf	fsr2h,c
 28759  01A1C4  0EFF               	movlw	255
 28760  01A1C6  22DA               	addwfc	fsr2h,f,c
 28761  01A1C8  06DE               	decf	postinc2,f,c
 28762  01A1CA  0E00               	movlw	0
 28763  01A1CC  5ADD               	subwfb	postdec2,f,c
 28764                           
 28765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 28766                           ;stkvar	_w @ sp[(-20)+16]
 28767  01A1CE  50E1               	movf	fsr1l,w,c
 28768  01A1D0  0FFC               	addlw	-4
 28769  01A1D2  6ED9               	movwf	fsr2l,c
 28770  01A1D4  50E2               	movf	fsr1h,w,c
 28771  01A1D6  6EDA               	movwf	fsr2h,c
 28772  01A1D8  0EFF               	movlw	255
 28773  01A1DA  22DA               	addwfc	fsr2h,f,c
 28774  01A1DC  06DE               	decf	postinc2,f,c
 28775  01A1DE  0E00               	movlw	0
 28776  01A1E0  5ADD               	subwfb	postdec2,f,c
 28777                           
 28778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 28779  01A1E2  0E04               	movlw	4
 28780  01A1E4  6E35               	movwf	(btemp+11)^0,c
 28781                           
 28782                           ;stkvar	_n @ sp[(-20)+4]
 28783  01A1E6  50E1               	movf	fsr1l,w,c
 28784  01A1E8  0FF0               	addlw	-16
 28785  01A1EA  6ED9               	movwf	fsr2l,c
 28786  01A1EC  50E2               	movf	fsr1h,w,c
 28787  01A1EE  6EDA               	movwf	fsr2h,c
 28788  01A1F0  0EFF               	movlw	255
 28789  01A1F2  22DA               	addwfc	fsr2h,f,c
 28790  01A1F4  2835               	incf	(btemp+11)^0,w,c
 28791  01A1F6  52DE               	movf	postinc2,f,c
 28792  01A1F8  D00F               	goto	u15700
 28793  01A1FA                     u15705:
 28794  01A1FA  52DE               	movf	postinc2,f,c
 28795  01A1FC  52DE               	movf	postinc2,f,c
 28796  01A1FE  52DE               	movf	postinc2,f,c
 28797  01A200  52DE               	movf	postinc2,f,c
 28798  01A202  52DE               	movf	postinc2,f,c
 28799  01A204  52DE               	movf	postinc2,f,c
 28800  01A206  90D8               	bcf	status,0,c
 28801  01A208  32DD               	rrcf	postdec2,f,c
 28802  01A20A  32DD               	rrcf	postdec2,f,c
 28803  01A20C  32DD               	rrcf	postdec2,f,c
 28804  01A20E  32DD               	rrcf	postdec2,f,c
 28805  01A210  32DD               	rrcf	postdec2,f,c
 28806  01A212  32DD               	rrcf	postdec2,f,c
 28807  01A214  32DD               	rrcf	postdec2,f,c
 28808  01A216  32DE               	rrcf	postinc2,f,c
 28809  01A218                     u15700:
 28810  01A218  2EE8               	decfsz	wreg,f,c
 28811  01A21A  D7EF               	goto	u15705
 28812  01A21C                     l16261:
 28813                           
 28814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28815                           ;stkvar	_i @ sp[(-20)+14]
 28816  01A21C  0EFB               	movlw	-5
 28817  01A21E  BEE3               	btfsc	plusw1,7,c
 28818  01A220  D03A               	goto	u15750
 28819  01A222  0EFB               	movlw	-5
 28820  01A224  50E3               	movf	plusw1,w,c
 28821  01A226  E108               	bnz	u15710
 28822  01A228  0EFA               	movlw	-6
 28823  01A22A  006F FF8C  F02A    	movff	plusw1,btemp
 28824  01A230  0E02               	movlw	2
 28825  01A232  5E2A               	subwf	btemp^0,f,c
 28826  01A234  A0D8               	btfss	status,0,c
 28827  01A236  D02F               	goto	u15750
 28828  01A238                     u15710:
 28829                           
 28830                           ;stkvar	_n @ sp[(-20)+4]
 28831  01A238  0EF0               	movlw	-16
 28832  01A23A  50E3               	movf	plusw1,w,c
 28833  01A23C  E115               	bnz	u15721
 28834  01A23E  0EF1               	movlw	-15
 28835  01A240  50E3               	movf	plusw1,w,c
 28836  01A242  E112               	bnz	u15721
 28837  01A244  0EF2               	movlw	-14
 28838  01A246  50E3               	movf	plusw1,w,c
 28839  01A248  E10F               	bnz	u15721
 28840  01A24A  0EF3               	movlw	-13
 28841  01A24C  50E3               	movf	plusw1,w,c
 28842  01A24E  E10C               	bnz	u15721
 28843  01A250  0EF4               	movlw	-12
 28844  01A252  50E3               	movf	plusw1,w,c
 28845  01A254  E109               	bnz	u15721
 28846  01A256  0EF5               	movlw	-11
 28847  01A258  50E3               	movf	plusw1,w,c
 28848  01A25A  E106               	bnz	u15721
 28849  01A25C  0EF6               	movlw	-10
 28850  01A25E  50E3               	movf	plusw1,w,c
 28851  01A260  E103               	bnz	u15721
 28852  01A262  0EF7               	movlw	-9
 28853  01A264  50E3               	movf	plusw1,w,c
 28854  01A266  A4D8               	btfss	status,2,c
 28855  01A268                     u15721:
 28856  01A268  D6EB               	goto	l16229
 28857                           
 28858                           ;stkvar	_p @ sp[(-20)+18]
 28859  01A26A  0EFF               	movlw	-1
 28860  01A26C  BEE3               	btfsc	plusw1,7,c
 28861  01A26E  D007               	goto	u15730
 28862  01A270  0EFF               	movlw	-1
 28863  01A272  50E3               	movf	plusw1,w,c
 28864  01A274  E103               	bnz	u15731
 28865  01A276  0EFE               	movlw	-2
 28866  01A278  04E3               	decf	plusw1,w,c
 28867  01A27A  B0D8               	btfsc	status,0,c
 28868  01A27C                     u15731:
 28869  01A27C  D6E1               	goto	l16229
 28870  01A27E                     u15730:
 28871                           
 28872                           ;stkvar	_w @ sp[(-20)+16]
 28873  01A27E  0EFD               	movlw	-3
 28874  01A280  BEE3               	btfsc	plusw1,7,c
 28875  01A282  D009               	goto	u15750
 28876  01A284  0EFD               	movlw	-3
 28877  01A286  50E3               	movf	plusw1,w,c
 28878  01A288  E104               	bnz	u15740
 28879  01A28A  0EFC               	movlw	-4
 28880  01A28C  04E3               	decf	plusw1,w,c
 28881  01A28E  A0D8               	btfss	status,0,c
 28882  01A290  D002               	goto	u15750
 28883  01A292                     u15740:
 28884  01A292  B24E               	btfsc	_flags^0,1,c
 28885  01A294  D6D5               	goto	l16229
 28886  01A296                     u15750:
 28887                           
 28888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 28889  01A296  A84E               	btfss	_flags^0,4,c
 28890  01A298  D036               	goto	l16277
 28891                           
 28892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 28893                           ;stkvar	_i @ sp[(-20)+14]
 28894  01A29A  50E1               	movf	fsr1l,w,c
 28895  01A29C  0FFA               	addlw	-6
 28896  01A29E  6ED9               	movwf	fsr2l,c
 28897  01A2A0  50E2               	movf	fsr1h,w,c
 28898  01A2A2  6EDA               	movwf	fsr2h,c
 28899  01A2A4  0EFF               	movlw	255
 28900  01A2A6  22DA               	addwfc	fsr2h,f,c
 28901  01A2A8  06DE               	decf	postinc2,f,c
 28902  01A2AA  0E00               	movlw	0
 28903  01A2AC  5ADD               	subwfb	postdec2,f,c
 28904                           
 28905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 28906                           ;stkvar	_x @ sp[(-20)+-11]
 28907                           ;stkvar	_i @ sp[(-20)+14]
 28908  01A2AE  0EFA               	movlw	-6
 28909  01A2B0  006F FF8C  F034    	movff	plusw1,btemp+10
 28910  01A2B6  0EFB               	movlw	-5
 28911  01A2B8  006F FF8C  F035    	movff	plusw1,btemp+11
 28912  01A2BE  0E54               	movlw	low _dbuf
 28913  01A2C0  2434               	addwf	(btemp+10)^0,w,c
 28914  01A2C2  6ED9               	movwf	fsr2l,c
 28915  01A2C4  0E03               	movlw	high _dbuf
 28916  01A2C6  2035               	addwfc	(btemp+11)^0,w,c
 28917  01A2C8  6EDA               	movwf	fsr2h,c
 28918  01A2CA  0EE1               	movlw	-31
 28919  01A2CC  006F FF8F FFDF     	movff	plusw1,indf2
 28920                           
 28921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 28922                           ;stkvar	_i @ sp[(-20)+14]
 28923  01A2D2  50E1               	movf	fsr1l,w,c
 28924  01A2D4  0FFA               	addlw	-6
 28925  01A2D6  6ED9               	movwf	fsr2l,c
 28926  01A2D8  50E2               	movf	fsr1h,w,c
 28927  01A2DA  6EDA               	movwf	fsr2h,c
 28928  01A2DC  0EFF               	movlw	255
 28929  01A2DE  22DA               	addwfc	fsr2h,f,c
 28930  01A2E0  06DE               	decf	postinc2,f,c
 28931  01A2E2  0E00               	movlw	0
 28932  01A2E4  5ADD               	subwfb	postdec2,f,c
 28933                           
 28934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 28935                           ;stkvar	_i @ sp[(-20)+14]
 28936  01A2E6  0EFA               	movlw	-6
 28937  01A2E8  006F FF8C  F034    	movff	plusw1,btemp+10
 28938  01A2EE  0EFB               	movlw	-5
 28939  01A2F0  006F FF8C  F035    	movff	plusw1,btemp+11
 28940  01A2F6  0E54               	movlw	low _dbuf
 28941  01A2F8  2434               	addwf	(btemp+10)^0,w,c
 28942  01A2FA  6ED9               	movwf	fsr2l,c
 28943  01A2FC  0E03               	movlw	high _dbuf
 28944  01A2FE  2035               	addwfc	(btemp+11)^0,w,c
 28945  01A300  6EDA               	movwf	fsr2h,c
 28946  01A302  0E30               	movlw	48
 28947  01A304  6EDF               	movwf	indf2,c
 28948  01A306                     l16277:
 28949                           
 28950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 28951                           ;stkvar	_w @ sp[(-20)+16]
 28952  01A306  0EFC               	movlw	-4
 28953  01A308  006F FF8F FFE6     	movff	plusw1,postinc1
 28954  01A30E  006F FF8F FFE6     	movff	plusw1,postinc1
 28955                           
 28956                           ;stkvar	_i @ sp[(-22)+14]
 28957  01A314  0E54               	movlw	low _dbuf
 28958  01A316  6E34               	movwf	(btemp+10)^0,c
 28959  01A318  0E03               	movlw	high _dbuf
 28960  01A31A  6E35               	movwf	(btemp+11)^0,c
 28961  01A31C  0EF8               	movlw	-8
 28962  01A31E  50E3               	movf	plusw1,w,c
 28963  01A320  2634               	addwf	(btemp+10)^0,f,c
 28964  01A322  0EF9               	movlw	-7
 28965  01A324  50E3               	movf	plusw1,w,c
 28966  01A326  2235               	addwfc	(btemp+11)^0,f,c
 28967  01A328  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28968  01A32E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28969                           
 28970                           ;stkvar	_fp @ sp[(-24)+-2]
 28971  01A334  0EE6               	movlw	-26
 28972  01A336  006F FF8F FFE6     	movff	plusw1,postinc1
 28973  01A33C  006F FF8F FFE6     	movff	plusw1,postinc1
 28974  01A342  EC0F  F0FF         	call	_pad	;wreg free
 28975                           
 28976                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 28977  01A346  0EE1               	movlw	225
 28978  01A348  26E1               	addwf	fsr1l,f,c
 28979  01A34A  0EFF               	movlw	255
 28980  01A34C  22E2               	addwfc	fsr1h,f,c
 28981  01A34E  0012               	return		;funcret
 28982  01A350                     __end_of_xtoa:
 28983                           	opt callstack 0
 28984                           
 28985 ;; *************** function _toupper *****************
 28986 ;; Defined at:
 28987 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 28988 ;; Parameters:    Size  Location     Type
 28989 ;;  c               2  [STACK] int 
 28990 ;; Auto vars:     Size  Location     Type
 28991 ;;		None
 28992 ;; Return value:  Size  Location     Type
 28993 ;;                  2  [STACK] int 
 28994 ;; Registers used:
 28995 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 28996 ;; Tracked objects:
 28997 ;;		On entry : 0/3
 28998 ;;		On exit  : 0/0
 28999 ;;		Unchanged: 0/0
 29000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29005 ;;Total ram usage:        0 bytes
 29006 ;; Hardware stack levels used:    1
 29007 ;; Hardware stack levels required when called:   16
 29008 ;; This function calls:
 29009 ;;		_islower
 29010 ;; This function is called by:
 29011 ;;		_xtoa
 29012 ;; This function uses a reentrant model
 29013 ;;
 29014                           
 29015                           	psect	text97
 29016  001600                     __ptext97:
 29017                           	opt callstack 0
 29018  001600                     _toupper:
 29019                           	opt callstack 0
 29020                           
 29021                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29022  001600  52E6               	movf	postinc1,f,c
 29023  001602  52E6               	movf	postinc1,f,c
 29024                           
 29025                           ;stkvar	_c @ sp[(-2)+-2]
 29026                           
 29027                           ;incstack = 0
 29028 ;; hardware stack exceeded
 29029  001604  0EFC               	movlw	-4
 29030  001606  50E3               	movf	plusw1,w,c
 29031  001608  0F9F               	addlw	159
 29032  00160A  6E34               	movwf	(btemp+10)^0,c
 29033  00160C  0EFD               	movlw	-3
 29034  00160E  006F FF8C  F035    	movff	plusw1,btemp+11
 29035  001614  0EFF               	movlw	255
 29036  001616  2235               	addwfc	(btemp+11)^0,f,c
 29037  001618  5035               	movf	(btemp+11)^0,w,c
 29038  00161A  E106               	bnz	u8080
 29039  00161C  0E1A               	movlw	26
 29040  00161E  5C34               	subwf	(btemp+10)^0,w,c
 29041  001620  B0D8               	btfsc	status,0,c
 29042  001622  D002               	goto	u8080
 29043  001624  0E01               	movlw	1
 29044  001626  D001               	goto	u8090
 29045  001628                     u8080:
 29046  001628  0E00               	movlw	0
 29047  00162A                     u8090:
 29048  00162A  6E34               	movwf	(btemp+10)^0,c
 29049  00162C  6A35               	clrf	(btemp+11)^0,c
 29050                           
 29051                           ;stkvar	_toupper$7617 @ sp[(-2)+0]
 29052  00162E  0EFE               	movlw	-2
 29053  001630  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29054  001636  0EFF               	movlw	-1
 29055  001638  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29056                           
 29057                           ;stkvar	_toupper$7617 @ sp[(-2)+0]
 29058  00163E  0EFE               	movlw	-2
 29059  001640  006F FF8C  F02A    	movff	plusw1,btemp
 29060  001646  0EFF               	movlw	-1
 29061  001648  50E3               	movf	plusw1,w,c
 29062  00164A  102A               	iorwf	btemp^0,w,c
 29063  00164C  B4D8               	btfsc	status,2,c
 29064  00164E  D00D               	goto	l10289
 29065                           
 29066                           ;stkvar	_c @ sp[(-2)+-2]
 29067  001650  0EFC               	movlw	-4
 29068  001652  006F FF8C  F02A    	movff	plusw1,btemp
 29069  001658  0EFD               	movlw	-3
 29070  00165A  006F FF8C  F02B    	movff	plusw1,btemp+1
 29071  001660  0E5F               	movlw	95
 29072  001662  162A               	andwf	btemp^0,f,c
 29073  001664  0E00               	movlw	0
 29074  001666  162B               	andwf	(btemp+1)^0,f,c
 29075  001668  D008               	goto	l3847
 29076  00166A                     l10289:
 29077                           
 29078                           ;stkvar	_c @ sp[(-2)+-2]
 29079  00166A  0EFC               	movlw	-4
 29080  00166C  006F FF8C  F02A    	movff	plusw1,btemp
 29081  001672  0EFD               	movlw	-3
 29082  001674  006F FF8C  F02B    	movff	plusw1,btemp+1
 29083  00167A                     l3847:
 29084                           
 29085                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29086  00167A  52E5               	movf	postdec1,f,c
 29087  00167C  52E5               	movf	postdec1,f,c
 29088  00167E  52E5               	movf	postdec1,f,c
 29089  001680  52E5               	movf	postdec1,f,c
 29090  001682  0012               	return		;funcret
 29091  001684                     __end_of_toupper:
 29092                           	opt callstack 0
 29093                           
 29094 ;; *************** function _islower *****************
 29095 ;; Defined at:
 29096 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 29097 ;; Parameters:    Size  Location     Type
 29098 ;;  c               2  [STACK] int 
 29099 ;; Auto vars:     Size  Location     Type
 29100 ;;		None
 29101 ;; Return value:  Size  Location     Type
 29102 ;;                  2  [STACK] int 
 29103 ;; Registers used:
 29104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 29105 ;; Tracked objects:
 29106 ;;		On entry : 0/0
 29107 ;;		On exit  : 0/0
 29108 ;;		Unchanged: 0/0
 29109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29114 ;;Total ram usage:        0 bytes
 29115 ;; Hardware stack levels used:    1
 29116 ;; Hardware stack levels required when called:   15
 29117 ;; This function calls:
 29118 ;;		Nothing
 29119 ;; This function is called by:
 29120 ;;		_toupper
 29121 ;; This function uses a reentrant model
 29122 ;;
 29123                           
 29124                           	psect	text98
 29125  002816                     __ptext98:
 29126                           	opt callstack 0
 29127  002816                     _islower:
 29128                           	opt callstack 0
 29129                           
 29130                           ;stkvar	_c @ sp[(0)+-2]
 29131                           
 29132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29133                           ;incstack = 0
 29134 ;; hardware stack exceeded
 29135  002816  0EFE               	movlw	-2
 29136  002818  50E3               	movf	plusw1,w,c
 29137  00281A  0F9F               	addlw	159
 29138  00281C  6E34               	movwf	(btemp+10)^0,c
 29139  00281E  0EFF               	movlw	-1
 29140  002820  006F FF8C  F035    	movff	plusw1,btemp+11
 29141  002826  0EFF               	movlw	255
 29142  002828  2235               	addwfc	(btemp+11)^0,f,c
 29143  00282A  5035               	movf	(btemp+11)^0,w,c
 29144  00282C  E106               	bnz	u7710
 29145  00282E  0E1A               	movlw	26
 29146  002830  5C34               	subwf	(btemp+10)^0,w,c
 29147  002832  B0D8               	btfsc	status,0,c
 29148  002834  D002               	goto	u7710
 29149  002836  0E01               	movlw	1
 29150  002838  D001               	goto	u7720
 29151  00283A                     u7710:
 29152  00283A  0E00               	movlw	0
 29153  00283C                     u7720:
 29154  00283C  6E2A               	movwf	btemp^0,c
 29155  00283E  6A2B               	clrf	(btemp+1)^0,c
 29156                           
 29157                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29158  002840  52E5               	movf	postdec1,f,c
 29159  002842  52E5               	movf	postdec1,f,c
 29160  002844  0012               	return		;funcret
 29161  002846                     __end_of_islower:
 29162                           	opt callstack 0
 29163                           
 29164 ;; *************** function _isalpha *****************
 29165 ;; Defined at:
 29166 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 29167 ;; Parameters:    Size  Location     Type
 29168 ;;  c               2  [STACK] int 
 29169 ;; Auto vars:     Size  Location     Type
 29170 ;;		None
 29171 ;; Return value:  Size  Location     Type
 29172 ;;                  2  [STACK] int 
 29173 ;; Registers used:
 29174 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 29175 ;; Tracked objects:
 29176 ;;		On entry : 0/0
 29177 ;;		On exit  : 0/0
 29178 ;;		Unchanged: 0/0
 29179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29184 ;;Total ram usage:        0 bytes
 29185 ;; Hardware stack levels used:    1
 29186 ;; Hardware stack levels required when called:   15
 29187 ;; This function calls:
 29188 ;;		Nothing
 29189 ;; This function is called by:
 29190 ;;		_xtoa
 29191 ;; This function uses a reentrant model
 29192 ;;
 29193                           
 29194                           	psect	text99
 29195  00238C                     __ptext99:
 29196                           	opt callstack 0
 29197  00238C                     _isalpha:
 29198                           	opt callstack 0
 29199                           
 29200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29201                           ;incstack = 0
 29202 ;; hardware stack exceeded
 29203  00238C  0E9F               	movlw	159
 29204  00238E  6E34               	movwf	(btemp+10)^0,c
 29205  002390  0EFF               	movlw	255
 29206  002392  6E35               	movwf	(btemp+11)^0,c
 29207                           
 29208                           ;stkvar	_c @ sp[(0)+-2]
 29209  002394  0EFE               	movlw	-2
 29210  002396  006F FF8C  F032    	movff	plusw1,btemp+8
 29211  00239C  0EFF               	movlw	-1
 29212  00239E  006F FF8C  F033    	movff	plusw1,btemp+9
 29213  0023A4  0E20               	movlw	32
 29214  0023A6  1232               	iorwf	(btemp+8)^0,f,c
 29215  0023A8  0E00               	movlw	0
 29216  0023AA  1233               	iorwf	(btemp+9)^0,f,c
 29217  0023AC  5034               	movf	(btemp+10)^0,w,c
 29218  0023AE  2632               	addwf	(btemp+8)^0,f,c
 29219  0023B0  5035               	movf	(btemp+11)^0,w,c
 29220  0023B2  2233               	addwfc	(btemp+9)^0,f,c
 29221  0023B4  5033               	movf	(btemp+9)^0,w,c
 29222  0023B6  E106               	bnz	u8060
 29223  0023B8  0E1A               	movlw	26
 29224  0023BA  5C32               	subwf	(btemp+8)^0,w,c
 29225  0023BC  B0D8               	btfsc	status,0,c
 29226  0023BE  D002               	goto	u8060
 29227  0023C0  0E01               	movlw	1
 29228  0023C2  D001               	goto	u8070
 29229  0023C4                     u8060:
 29230  0023C4  0E00               	movlw	0
 29231  0023C6                     u8070:
 29232  0023C6  6E2A               	movwf	btemp^0,c
 29233  0023C8  6A2B               	clrf	(btemp+1)^0,c
 29234                           
 29235                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29236  0023CA  52E5               	movf	postdec1,f,c
 29237  0023CC  52E5               	movf	postdec1,f,c
 29238  0023CE  0012               	return		;funcret
 29239  0023D0                     __end_of_isalpha:
 29240                           	opt callstack 0
 29241                           
 29242 ;; *************** function _utoa *****************
 29243 ;; Defined at:
 29244 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29245 ;; Parameters:    Size  Location     Type
 29246 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29247 ;;		 -> f(6), NULL(0), 
 29248 ;;  d               8  [STACK] unsigned long long 
 29249 ;; Auto vars:     Size  Location     Type
 29250 ;;  n               8  [STACK] unsigned long long 
 29251 ;;  i               2  [STACK] int 
 29252 ;;  w               2  [STACK] int 
 29253 ;;  p               2  [STACK] int 
 29254 ;; Return value:  Size  Location     Type
 29255 ;;                  2  [STACK] int 
 29256 ;; Registers used:
 29257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 29258 ;; Tracked objects:
 29259 ;;		On entry : 0/0
 29260 ;;		On exit  : 0/0
 29261 ;;		Unchanged: 0/0
 29262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29267 ;;Total ram usage:        0 bytes
 29268 ;; Hardware stack levels used:    1
 29269 ;; Hardware stack levels required when called:   20
 29270 ;; This function calls:
 29271 ;;		___lodiv
 29272 ;;		___lomod
 29273 ;;		_pad
 29274 ;; This function is called by:
 29275 ;;		_vfpfcnvrt
 29276 ;; This function uses a reentrant model
 29277 ;;
 29278                           
 29279                           	psect	text100
 29280  01AD70                     __ptext100:
 29281                           	opt callstack 0
 29282  01AD70                     _utoa:
 29283                           	opt callstack 0
 29284                           
 29285                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 29286  01AD70  0E0E               	movlw	14
 29287  01AD72  26E1               	addwf	fsr1l,f,c
 29288  01AD74  0E00               	movlw	0
 29289  01AD76  22E2               	addwfc	fsr1h,f,c
 29290                           
 29291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 29292                           
 29293                           ;incstack = 0
 29294 ;; hardware stack exceeded
 29295  01AD78  AE4D               	btfss	(_prec+1)^0,7,c
 29296                           
 29297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 29298  01AD7A  924E               	bcf	_flags^0,1,c
 29299                           
 29300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 29301  01AD7C  BE4D               	btfsc	(_prec+1)^0,7,c
 29302  01AD7E  D005               	goto	u15520
 29303  01AD80  504D               	movf	(_prec+1)^0,w,c
 29304  01AD82  E110               	bnz	l16177
 29305  01AD84  044C               	decf	_prec^0,w,c
 29306  01AD86  B0D8               	btfsc	status,0,c
 29307  01AD88  D00D               	goto	l16177
 29308  01AD8A                     u15520:
 29309  01AD8A  0E01               	movlw	1
 29310  01AD8C  6E34               	movwf	(btemp+10)^0,c
 29311  01AD8E  0E00               	movlw	0
 29312  01AD90  6E35               	movwf	(btemp+11)^0,c
 29313                           
 29314                           ;stkvar	_p @ sp[(-14)+12]
 29315  01AD92  0EFE               	movlw	-2
 29316  01AD94  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29317  01AD9A  0EFF               	movlw	-1
 29318  01AD9C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29319  01ADA2  D008               	goto	l2635
 29320  01ADA4                     l16177:
 29321                           
 29322                           ;stkvar	_p @ sp[(-14)+12]
 29323  01ADA4  0EFE               	movlw	-2
 29324  01ADA6  0060  F133  FFE3   	movff	_prec,plusw1
 29325  01ADAC  0EFF               	movlw	-1
 29326  01ADAE  0060  F137  FFE3   	movff	_prec+1,plusw1
 29327  01ADB4                     l2635:
 29328                           
 29329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 29330                           ;stkvar	_w @ sp[(-14)+10]
 29331  01ADB4  0EFC               	movlw	-4
 29332  01ADB6  0060  F12B  FFE3   	movff	_width,plusw1
 29333  01ADBC  0EFD               	movlw	-3
 29334  01ADBE  0060  F12F  FFE3   	movff	_width+1,plusw1
 29335                           
 29336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 29337                           ;stkvar	_d @ sp[(-14)+-10]
 29338  01ADC4  0EE8               	movlw	232
 29339  01ADC6  24E1               	addwf	fsr1l,w,c
 29340  01ADC8  6ED9               	movwf	fsr2l,c
 29341  01ADCA  0EFF               	movlw	255
 29342  01ADCC  20E2               	addwfc	fsr1h,w,c
 29343  01ADCE  6EDA               	movwf	fsr2h,c
 29344                           
 29345                           ;stkvar	_n @ sp[(-14)+0]
 29346  01ADD0  0E08               	movlw	8
 29347  01ADD2  6E2A               	movwf	btemp^0,c
 29348  01ADD4  0EF2               	movlw	-14
 29349  01ADD6                     us1553999:
 29350  01ADD6  006F FF7B FFE3     	movff	postinc2,plusw1
 29351  01ADDC  28E8               	incf	wreg,w,c
 29352  01ADDE  2E2A               	decfsz	btemp^0,f,c
 29353  01ADE0  D7FA               	bra	us1553999
 29354                           
 29355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 29356  01ADE2  0E4F               	movlw	79
 29357  01ADE4  6E34               	movwf	(btemp+10)^0,c
 29358  01ADE6  0E00               	movlw	0
 29359  01ADE8  6E35               	movwf	(btemp+11)^0,c
 29360                           
 29361                           ;stkvar	_i @ sp[(-14)+8]
 29362  01ADEA  0EFA               	movlw	-6
 29363  01ADEC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29364  01ADF2  0EFB               	movlw	-5
 29365  01ADF4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29366                           
 29367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 29368  01ADFA  0103               	movlb	3	; () banked
 29369  01ADFC  6BA3               	clrf	(_dbuf+79)& (0+255),b
 29370                           
 29371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29372  01ADFE  D0FB               	goto	l16195
 29373  01AE00                     l16185:
 29374                           
 29375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 29376                           ;stkvar	_i @ sp[(-14)+8]
 29377  01AE00  50E1               	movf	fsr1l,w,c
 29378  01AE02  0FFA               	addlw	-6
 29379  01AE04  6ED9               	movwf	fsr2l,c
 29380  01AE06  50E2               	movf	fsr1h,w,c
 29381  01AE08  6EDA               	movwf	fsr2h,c
 29382  01AE0A  0EFF               	movlw	255
 29383  01AE0C  22DA               	addwfc	fsr2h,f,c
 29384  01AE0E  06DE               	decf	postinc2,f,c
 29385  01AE10  0E00               	movlw	0
 29386  01AE12  5ADD               	subwfb	postdec2,f,c
 29387                           
 29388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 29389  01AE14  0E0A               	movlw	10
 29390  01AE16  6EE6               	movwf	postinc1,c
 29391  01AE18  0E00               	movlw	0
 29392  01AE1A  6EE6               	movwf	postinc1,c
 29393  01AE1C  0E00               	movlw	0
 29394  01AE1E  6EE6               	movwf	postinc1,c
 29395  01AE20  0E00               	movlw	0
 29396  01AE22  6EE6               	movwf	postinc1,c
 29397  01AE24  0E00               	movlw	0
 29398  01AE26  6EE6               	movwf	postinc1,c
 29399  01AE28  0E00               	movlw	0
 29400  01AE2A  6EE6               	movwf	postinc1,c
 29401  01AE2C  0E00               	movlw	0
 29402  01AE2E  6EE6               	movwf	postinc1,c
 29403  01AE30  0E00               	movlw	0
 29404  01AE32  6EE6               	movwf	postinc1,c
 29405                           
 29406                           ;stkvar	_n @ sp[(-22)+0]
 29407  01AE34  50E1               	movf	fsr1l,w,c
 29408  01AE36  0FEA               	addlw	-22
 29409  01AE38  6ED9               	movwf	fsr2l,c
 29410  01AE3A  50E2               	movf	fsr1h,w,c
 29411  01AE3C  6EDA               	movwf	fsr2h,c
 29412  01AE3E  0EFF               	movlw	255
 29413  01AE40  22DA               	addwfc	fsr2h,f,c
 29414  01AE42  006F FF7B FFE6     	movff	postinc2,postinc1
 29415  01AE48  006F FF7B FFE6     	movff	postinc2,postinc1
 29416  01AE4E  006F FF7B FFE6     	movff	postinc2,postinc1
 29417  01AE54  006F FF7B FFE6     	movff	postinc2,postinc1
 29418  01AE5A  006F FF7B FFE6     	movff	postinc2,postinc1
 29419  01AE60  006F FF7B FFE6     	movff	postinc2,postinc1
 29420  01AE66  006F FF7B FFE6     	movff	postinc2,postinc1
 29421  01AE6C  006F FF7B FFE6     	movff	postinc2,postinc1
 29422  01AE72  EC9C  F0FB         	call	___lomod	;wreg free
 29423  01AE76  52E5               	movf	postdec1,f,c
 29424  01AE78  006F FF9C  F041    	movff	indf1,btemp+23
 29425  01AE7E  52E5               	movf	postdec1,f,c
 29426  01AE80  006F FF9C  F040    	movff	indf1,btemp+22
 29427  01AE86  52E5               	movf	postdec1,f,c
 29428  01AE88  006F FF9C  F03F    	movff	indf1,btemp+21
 29429  01AE8E  52E5               	movf	postdec1,f,c
 29430  01AE90  006F FF9C  F03E    	movff	indf1,btemp+20
 29431  01AE96  52E5               	movf	postdec1,f,c
 29432  01AE98  006F FF9C  F03D    	movff	indf1,btemp+19
 29433  01AE9E  52E5               	movf	postdec1,f,c
 29434  01AEA0  006F FF9C  F03C    	movff	indf1,btemp+18
 29435  01AEA6  52E5               	movf	postdec1,f,c
 29436  01AEA8  006F FF9C  F03B    	movff	indf1,btemp+17
 29437  01AEAE  52E5               	movf	postdec1,f,c
 29438  01AEB0  006F FF9C  F03A    	movff	indf1,btemp+16
 29439  01AEB6  0EF8               	movlw	248
 29440  01AEB8  26E1               	addwf	fsr1l,f,c
 29441  01AEBA  0EFF               	movlw	255
 29442  01AEBC  22E2               	addwfc	fsr1h,f,c
 29443  01AEBE  0E30               	movlw	48
 29444  01AEC0  263A               	addwf	(btemp+16)^0,f,c
 29445                           
 29446                           ;stkvar	_i @ sp[(-14)+8]
 29447  01AEC2  0EFA               	movlw	-6
 29448  01AEC4  006F FF8C  F034    	movff	plusw1,btemp+10
 29449  01AECA  0EFB               	movlw	-5
 29450  01AECC  006F FF8C  F035    	movff	plusw1,btemp+11
 29451  01AED2  0E54               	movlw	low _dbuf
 29452  01AED4  2434               	addwf	(btemp+10)^0,w,c
 29453  01AED6  6ED9               	movwf	fsr2l,c
 29454  01AED8  0E03               	movlw	high _dbuf
 29455  01AEDA  2035               	addwfc	(btemp+11)^0,w,c
 29456  01AEDC  6EDA               	movwf	fsr2h,c
 29457  01AEDE  0060  F0EB  FFDF   	movff	btemp+16,indf2
 29458                           
 29459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 29460                           ;stkvar	_p @ sp[(-14)+12]
 29461  01AEE4  50E1               	movf	fsr1l,w,c
 29462  01AEE6  0FFE               	addlw	-2
 29463  01AEE8  6ED9               	movwf	fsr2l,c
 29464  01AEEA  50E2               	movf	fsr1h,w,c
 29465  01AEEC  6EDA               	movwf	fsr2h,c
 29466  01AEEE  0EFF               	movlw	255
 29467  01AEF0  22DA               	addwfc	fsr2h,f,c
 29468  01AEF2  06DE               	decf	postinc2,f,c
 29469  01AEF4  0E00               	movlw	0
 29470  01AEF6  5ADD               	subwfb	postdec2,f,c
 29471                           
 29472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 29473                           ;stkvar	_w @ sp[(-14)+10]
 29474  01AEF8  50E1               	movf	fsr1l,w,c
 29475  01AEFA  0FFC               	addlw	-4
 29476  01AEFC  6ED9               	movwf	fsr2l,c
 29477  01AEFE  50E2               	movf	fsr1h,w,c
 29478  01AF00  6EDA               	movwf	fsr2h,c
 29479  01AF02  0EFF               	movlw	255
 29480  01AF04  22DA               	addwfc	fsr2h,f,c
 29481  01AF06  06DE               	decf	postinc2,f,c
 29482  01AF08  0E00               	movlw	0
 29483  01AF0A  5ADD               	subwfb	postdec2,f,c
 29484                           
 29485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 29486  01AF0C  0E0A               	movlw	10
 29487  01AF0E  6EE6               	movwf	postinc1,c
 29488  01AF10  0E00               	movlw	0
 29489  01AF12  6EE6               	movwf	postinc1,c
 29490  01AF14  0E00               	movlw	0
 29491  01AF16  6EE6               	movwf	postinc1,c
 29492  01AF18  0E00               	movlw	0
 29493  01AF1A  6EE6               	movwf	postinc1,c
 29494  01AF1C  0E00               	movlw	0
 29495  01AF1E  6EE6               	movwf	postinc1,c
 29496  01AF20  0E00               	movlw	0
 29497  01AF22  6EE6               	movwf	postinc1,c
 29498  01AF24  0E00               	movlw	0
 29499  01AF26  6EE6               	movwf	postinc1,c
 29500  01AF28  0E00               	movlw	0
 29501  01AF2A  6EE6               	movwf	postinc1,c
 29502                           
 29503                           ;stkvar	_n @ sp[(-22)+0]
 29504  01AF2C  50E1               	movf	fsr1l,w,c
 29505  01AF2E  0FEA               	addlw	-22
 29506  01AF30  6ED9               	movwf	fsr2l,c
 29507  01AF32  50E2               	movf	fsr1h,w,c
 29508  01AF34  6EDA               	movwf	fsr2h,c
 29509  01AF36  0EFF               	movlw	255
 29510  01AF38  22DA               	addwfc	fsr2h,f,c
 29511  01AF3A  006F FF7B FFE6     	movff	postinc2,postinc1
 29512  01AF40  006F FF7B FFE6     	movff	postinc2,postinc1
 29513  01AF46  006F FF7B FFE6     	movff	postinc2,postinc1
 29514  01AF4C  006F FF7B FFE6     	movff	postinc2,postinc1
 29515  01AF52  006F FF7B FFE6     	movff	postinc2,postinc1
 29516  01AF58  006F FF7B FFE6     	movff	postinc2,postinc1
 29517  01AF5E  006F FF7B FFE6     	movff	postinc2,postinc1
 29518  01AF64  006F FF7B FFE6     	movff	postinc2,postinc1
 29519  01AF6A  EC04  F0F4         	call	___lodiv	;wreg free
 29520  01AF6E  52E5               	movf	postdec1,f,c
 29521  01AF70  006F FF9C  F041    	movff	indf1,btemp+23
 29522  01AF76  52E5               	movf	postdec1,f,c
 29523  01AF78  006F FF9C  F040    	movff	indf1,btemp+22
 29524  01AF7E  52E5               	movf	postdec1,f,c
 29525  01AF80  006F FF9C  F03F    	movff	indf1,btemp+21
 29526  01AF86  52E5               	movf	postdec1,f,c
 29527  01AF88  006F FF9C  F03E    	movff	indf1,btemp+20
 29528  01AF8E  52E5               	movf	postdec1,f,c
 29529  01AF90  006F FF9C  F03D    	movff	indf1,btemp+19
 29530  01AF96  52E5               	movf	postdec1,f,c
 29531  01AF98  006F FF9C  F03C    	movff	indf1,btemp+18
 29532  01AF9E  52E5               	movf	postdec1,f,c
 29533  01AFA0  006F FF9C  F03B    	movff	indf1,btemp+17
 29534  01AFA6  52E5               	movf	postdec1,f,c
 29535  01AFA8  006F FF9C  F03A    	movff	indf1,btemp+16
 29536  01AFAE  0EF8               	movlw	248
 29537  01AFB0  26E1               	addwf	fsr1l,f,c
 29538  01AFB2  0EFF               	movlw	255
 29539  01AFB4  22E2               	addwfc	fsr1h,f,c
 29540                           
 29541                           ;stkvar	_n @ sp[(-14)+0]
 29542  01AFB6  0EF2               	movlw	-14
 29543  01AFB8  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 29544  01AFBE  0EF3               	movlw	-13
 29545  01AFC0  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 29546  01AFC6  0EF4               	movlw	-12
 29547  01AFC8  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 29548  01AFCE  0EF5               	movlw	-11
 29549  01AFD0  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 29550  01AFD6  0EF6               	movlw	-10
 29551  01AFD8  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 29552  01AFDE  0EF7               	movlw	-9
 29553  01AFE0  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 29554  01AFE6  0EF8               	movlw	-8
 29555  01AFE8  0060  F103  FFE3   	movff	btemp+22,plusw1
 29556  01AFEE  0EF9               	movlw	-7
 29557  01AFF0  0060  F107  FFE3   	movff	btemp+23,plusw1
 29558  01AFF6                     l16195:
 29559                           
 29560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29561                           ;stkvar	_i @ sp[(-14)+8]
 29562  01AFF6  0EFA               	movlw	-6
 29563  01AFF8  006F FF8C  F02A    	movff	plusw1,btemp
 29564  01AFFE  0EFB               	movlw	-5
 29565  01B000  50E3               	movf	plusw1,w,c
 29566  01B002  102A               	iorwf	btemp^0,w,c
 29567  01B004  B4D8               	btfsc	status,2,c
 29568  01B006  D02F               	goto	u15580
 29569                           
 29570                           ;stkvar	_n @ sp[(-14)+0]
 29571  01B008  0EF2               	movlw	-14
 29572  01B00A  50E3               	movf	plusw1,w,c
 29573  01B00C  E115               	bnz	u15551
 29574  01B00E  0EF3               	movlw	-13
 29575  01B010  50E3               	movf	plusw1,w,c
 29576  01B012  E112               	bnz	u15551
 29577  01B014  0EF4               	movlw	-12
 29578  01B016  50E3               	movf	plusw1,w,c
 29579  01B018  E10F               	bnz	u15551
 29580  01B01A  0EF5               	movlw	-11
 29581  01B01C  50E3               	movf	plusw1,w,c
 29582  01B01E  E10C               	bnz	u15551
 29583  01B020  0EF6               	movlw	-10
 29584  01B022  50E3               	movf	plusw1,w,c
 29585  01B024  E109               	bnz	u15551
 29586  01B026  0EF7               	movlw	-9
 29587  01B028  50E3               	movf	plusw1,w,c
 29588  01B02A  E106               	bnz	u15551
 29589  01B02C  0EF8               	movlw	-8
 29590  01B02E  50E3               	movf	plusw1,w,c
 29591  01B030  E103               	bnz	u15551
 29592  01B032  0EF9               	movlw	-7
 29593  01B034  50E3               	movf	plusw1,w,c
 29594  01B036  A4D8               	btfss	status,2,c
 29595  01B038                     u15551:
 29596  01B038  D6E3               	goto	l16185
 29597                           
 29598                           ;stkvar	_p @ sp[(-14)+12]
 29599  01B03A  0EFF               	movlw	-1
 29600  01B03C  BEE3               	btfsc	plusw1,7,c
 29601  01B03E  D007               	goto	u15560
 29602  01B040  0EFF               	movlw	-1
 29603  01B042  50E3               	movf	plusw1,w,c
 29604  01B044  E103               	bnz	u15561
 29605  01B046  0EFE               	movlw	-2
 29606  01B048  04E3               	decf	plusw1,w,c
 29607  01B04A  B0D8               	btfsc	status,0,c
 29608  01B04C                     u15561:
 29609  01B04C  D6D9               	goto	l16185
 29610  01B04E                     u15560:
 29611                           
 29612                           ;stkvar	_w @ sp[(-14)+10]
 29613  01B04E  0EFD               	movlw	-3
 29614  01B050  BEE3               	btfsc	plusw1,7,c
 29615  01B052  D009               	goto	u15580
 29616  01B054  0EFD               	movlw	-3
 29617  01B056  50E3               	movf	plusw1,w,c
 29618  01B058  E104               	bnz	u15570
 29619  01B05A  0EFC               	movlw	-4
 29620  01B05C  04E3               	decf	plusw1,w,c
 29621  01B05E  A0D8               	btfss	status,0,c
 29622  01B060  D002               	goto	u15580
 29623  01B062                     u15570:
 29624  01B062  B24E               	btfsc	_flags^0,1,c
 29625  01B064  D6CD               	goto	l16185
 29626  01B066                     u15580:
 29627                           
 29628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 29629                           ;stkvar	_w @ sp[(-14)+10]
 29630  01B066  0EFC               	movlw	-4
 29631  01B068  006F FF8F FFE6     	movff	plusw1,postinc1
 29632  01B06E  006F FF8F FFE6     	movff	plusw1,postinc1
 29633                           
 29634                           ;stkvar	_i @ sp[(-16)+8]
 29635  01B074  0E54               	movlw	low _dbuf
 29636  01B076  6E34               	movwf	(btemp+10)^0,c
 29637  01B078  0E03               	movlw	high _dbuf
 29638  01B07A  6E35               	movwf	(btemp+11)^0,c
 29639  01B07C  0EF8               	movlw	-8
 29640  01B07E  50E3               	movf	plusw1,w,c
 29641  01B080  2634               	addwf	(btemp+10)^0,f,c
 29642  01B082  0EF9               	movlw	-7
 29643  01B084  50E3               	movf	plusw1,w,c
 29644  01B086  2235               	addwfc	(btemp+11)^0,f,c
 29645  01B088  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29646  01B08E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29647                           
 29648                           ;stkvar	_fp @ sp[(-18)+-2]
 29649  01B094  0EEC               	movlw	-20
 29650  01B096  006F FF8F FFE6     	movff	plusw1,postinc1
 29651  01B09C  006F FF8F FFE6     	movff	plusw1,postinc1
 29652  01B0A2  EC0F  F0FF         	call	_pad	;wreg free
 29653                           
 29654                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 29655  01B0A6  0EE8               	movlw	232
 29656  01B0A8  26E1               	addwf	fsr1l,f,c
 29657  01B0AA  0EFF               	movlw	255
 29658  01B0AC  22E2               	addwfc	fsr1h,f,c
 29659  01B0AE  0012               	return		;funcret
 29660  01B0B0                     __end_of_utoa:
 29661                           	opt callstack 0
 29662                           
 29663 ;; *************** function ___lomod *****************
 29664 ;; Defined at:
 29665 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 29666 ;; Parameters:    Size  Location     Type
 29667 ;;  dividend        8  [STACK] unsigned long long 
 29668 ;;  divisor         8  [STACK] unsigned long long 
 29669 ;; Auto vars:     Size  Location     Type
 29670 ;;  counter         1  [STACK] unsigned char 
 29671 ;; Return value:  Size  Location     Type
 29672 ;;                  8  [STACK] unsigned long long 
 29673 ;; Registers used:
 29674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29675 ;; Tracked objects:
 29676 ;;		On entry : 0/3
 29677 ;;		On exit  : 0/0
 29678 ;;		Unchanged: 0/0
 29679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29684 ;;Total ram usage:        0 bytes
 29685 ;; Hardware stack levels used:    1
 29686 ;; Hardware stack levels required when called:   15
 29687 ;; This function calls:
 29688 ;;		Nothing
 29689 ;; This function is called by:
 29690 ;;		_utoa
 29691 ;; This function uses a reentrant model
 29692 ;;
 29693                           
 29694                           	psect	text101
 29695  01F738                     __ptext101:
 29696                           	opt callstack 0
 29697  01F738                     ___lomod:
 29698                           	opt callstack 0
 29699                           
 29700                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29701  01F738  52E6               	movf	postinc1,f,c
 29702                           
 29703                           ;stkvar	_divisor @ sp[(-1)+-16]
 29704                           
 29705                           ;incstack = 0
 29706 ;; hardware stack exceeded
 29707  01F73A  0EEF               	movlw	-17
 29708  01F73C  50E3               	movf	plusw1,w,c
 29709  01F73E  E116               	bnz	u9270
 29710  01F740  0EF0               	movlw	-16
 29711  01F742  50E3               	movf	plusw1,w,c
 29712  01F744  E113               	bnz	u9270
 29713  01F746  0EF1               	movlw	-15
 29714  01F748  50E3               	movf	plusw1,w,c
 29715  01F74A  E110               	bnz	u9270
 29716  01F74C  0EF2               	movlw	-14
 29717  01F74E  50E3               	movf	plusw1,w,c
 29718  01F750  E10D               	bnz	u9270
 29719  01F752  0EF3               	movlw	-13
 29720  01F754  50E3               	movf	plusw1,w,c
 29721  01F756  E10A               	bnz	u9270
 29722  01F758  0EF4               	movlw	-12
 29723  01F75A  50E3               	movf	plusw1,w,c
 29724  01F75C  E107               	bnz	u9270
 29725  01F75E  0EF5               	movlw	-11
 29726  01F760  50E3               	movf	plusw1,w,c
 29727  01F762  E104               	bnz	u9270
 29728  01F764  0EF6               	movlw	-10
 29729  01F766  50E3               	movf	plusw1,w,c
 29730  01F768  B4D8               	btfsc	status,2,c
 29731  01F76A  D075               	goto	u9300
 29732  01F76C                     u9270:
 29733                           
 29734                           ;stkvar	_counter @ sp[(-1)+0]
 29735  01F76C  0EFF               	movlw	-1
 29736  01F76E  6AE3               	clrf	plusw1,c
 29737  01F770  D012               	goto	L30
 29738  01F772                     l10925:
 29739                           
 29740                           ;stkvar	_divisor @ sp[(-1)+-16]
 29741  01F772  90D8               	bcf	status,0,c
 29742  01F774  0EEF               	movlw	-17
 29743  01F776  36E3               	rlcf	plusw1,f,c
 29744  01F778  0EF0               	movlw	-16
 29745  01F77A  36E3               	rlcf	plusw1,f,c
 29746  01F77C  0EF1               	movlw	-15
 29747  01F77E  36E3               	rlcf	plusw1,f,c
 29748  01F780  0EF2               	movlw	-14
 29749  01F782  36E3               	rlcf	plusw1,f,c
 29750  01F784  0EF3               	movlw	-13
 29751  01F786  36E3               	rlcf	plusw1,f,c
 29752  01F788  0EF4               	movlw	-12
 29753  01F78A  36E3               	rlcf	plusw1,f,c
 29754  01F78C  0EF5               	movlw	-11
 29755  01F78E  36E3               	rlcf	plusw1,f,c
 29756  01F790  0EF6               	movlw	-10
 29757  01F792  36E3               	rlcf	plusw1,f,c
 29758                           
 29759                           ;stkvar	_counter @ sp[(-1)+0]
 29760  01F794  0EFF               	movlw	-1
 29761  01F796                     L30:
 29762  01F796  2AE3               	incf	plusw1,f,c
 29763                           
 29764                           ;stkvar	_divisor @ sp[(-1)+-16]
 29765  01F798  0EF6               	movlw	-10
 29766  01F79A  AEE3               	btfss	plusw1,7,c
 29767  01F79C  D7EA               	goto	l10925
 29768  01F79E                     u9280:
 29769                           
 29770                           ;stkvar	_divisor @ sp[(-1)+-16]
 29771                           ;stkvar	_dividend @ sp[(-1)+-8]
 29772  01F79E  50E1               	movf	fsr1l,w,c
 29773  01F7A0  0FF7               	addlw	-9
 29774  01F7A2  6ED9               	movwf	fsr2l,c
 29775  01F7A4  50E2               	movf	fsr1h,w,c
 29776  01F7A6  6EDA               	movwf	fsr2h,c
 29777  01F7A8  0EFF               	movlw	255
 29778  01F7AA  22DA               	addwfc	fsr2h,f,c
 29779  01F7AC  0EEF               	movlw	-17
 29780  01F7AE  50E3               	movf	plusw1,w,c
 29781  01F7B0  5CDE               	subwf	postinc2,w,c
 29782  01F7B2  0EF0               	movlw	-16
 29783  01F7B4  50E3               	movf	plusw1,w,c
 29784  01F7B6  58DE               	subwfb	postinc2,w,c
 29785  01F7B8  0EF1               	movlw	-15
 29786  01F7BA  50E3               	movf	plusw1,w,c
 29787  01F7BC  58DE               	subwfb	postinc2,w,c
 29788  01F7BE  0EF2               	movlw	-14
 29789  01F7C0  50E3               	movf	plusw1,w,c
 29790  01F7C2  58DE               	subwfb	postinc2,w,c
 29791  01F7C4  0EF3               	movlw	-13
 29792  01F7C6  50E3               	movf	plusw1,w,c
 29793  01F7C8  58DE               	subwfb	postinc2,w,c
 29794  01F7CA  0EF4               	movlw	-12
 29795  01F7CC  50E3               	movf	plusw1,w,c
 29796  01F7CE  58DE               	subwfb	postinc2,w,c
 29797  01F7D0  0EF5               	movlw	-11
 29798  01F7D2  50E3               	movf	plusw1,w,c
 29799  01F7D4  58DE               	subwfb	postinc2,w,c
 29800  01F7D6  0EF6               	movlw	-10
 29801  01F7D8  50E3               	movf	plusw1,w,c
 29802  01F7DA  58DE               	subwfb	postinc2,w,c
 29803  01F7DC  A0D8               	btfss	status,0,c
 29804  01F7DE  D01F               	goto	l10933
 29805                           
 29806                           ;stkvar	_divisor @ sp[(-1)+-16]
 29807                           ;stkvar	_dividend @ sp[(-1)+-8]
 29808  01F7E0  50E1               	movf	fsr1l,w,c
 29809  01F7E2  0FF7               	addlw	-9
 29810  01F7E4  6ED9               	movwf	fsr2l,c
 29811  01F7E6  50E2               	movf	fsr1h,w,c
 29812  01F7E8  6EDA               	movwf	fsr2h,c
 29813  01F7EA  0EFF               	movlw	255
 29814  01F7EC  22DA               	addwfc	fsr2h,f,c
 29815  01F7EE  0EEF               	movlw	-17
 29816  01F7F0  50E3               	movf	plusw1,w,c
 29817  01F7F2  5EDE               	subwf	postinc2,f,c
 29818  01F7F4  0EF0               	movlw	-16
 29819  01F7F6  50E3               	movf	plusw1,w,c
 29820  01F7F8  5ADE               	subwfb	postinc2,f,c
 29821  01F7FA  0EF1               	movlw	-15
 29822  01F7FC  50E3               	movf	plusw1,w,c
 29823  01F7FE  5ADE               	subwfb	postinc2,f,c
 29824  01F800  0EF2               	movlw	-14
 29825  01F802  50E3               	movf	plusw1,w,c
 29826  01F804  5ADE               	subwfb	postinc2,f,c
 29827  01F806  0EF3               	movlw	-13
 29828  01F808  50E3               	movf	plusw1,w,c
 29829  01F80A  5ADE               	subwfb	postinc2,f,c
 29830  01F80C  0EF4               	movlw	-12
 29831  01F80E  50E3               	movf	plusw1,w,c
 29832  01F810  5ADE               	subwfb	postinc2,f,c
 29833  01F812  0EF5               	movlw	-11
 29834  01F814  50E3               	movf	plusw1,w,c
 29835  01F816  5ADE               	subwfb	postinc2,f,c
 29836  01F818  0EF6               	movlw	-10
 29837  01F81A  50E3               	movf	plusw1,w,c
 29838  01F81C  5ADE               	subwfb	postinc2,f,c
 29839  01F81E                     l10933:
 29840                           
 29841                           ;stkvar	_divisor @ sp[(-1)+-16]
 29842  01F81E  90D8               	bcf	status,0,c
 29843  01F820  0EF6               	movlw	-10
 29844  01F822  32E3               	rrcf	plusw1,f,c
 29845  01F824  0EF5               	movlw	-11
 29846  01F826  32E3               	rrcf	plusw1,f,c
 29847  01F828  0EF4               	movlw	-12
 29848  01F82A  32E3               	rrcf	plusw1,f,c
 29849  01F82C  0EF3               	movlw	-13
 29850  01F82E  32E3               	rrcf	plusw1,f,c
 29851  01F830  0EF2               	movlw	-14
 29852  01F832  32E3               	rrcf	plusw1,f,c
 29853  01F834  0EF1               	movlw	-15
 29854  01F836  32E3               	rrcf	plusw1,f,c
 29855  01F838  0EF0               	movlw	-16
 29856  01F83A  32E3               	rrcf	plusw1,f,c
 29857  01F83C  0EEF               	movlw	-17
 29858  01F83E  32E3               	rrcf	plusw1,f,c
 29859                           
 29860                           ;stkvar	_counter @ sp[(-1)+0]
 29861  01F840  0EFF               	movlw	-1
 29862  01F842  50E3               	movf	plusw1,w,c
 29863  01F844  6E2A               	movwf	btemp^0,c
 29864  01F846  0E01               	movlw	1
 29865  01F848  5E2A               	subwf	btemp^0,f,c
 29866  01F84A  0EFF               	movlw	-1
 29867  01F84C  0060  F0AB  FFE3   	movff	btemp,plusw1
 29868  01F852  A4D8               	btfss	status,2,c
 29869  01F854  D7A4               	goto	u9280
 29870  01F856                     u9300:
 29871                           
 29872                           ;stkvar	_dividend @ sp[(-1)+-8]
 29873  01F856  0EF7               	movlw	247
 29874  01F858  24E1               	addwf	fsr1l,w,c
 29875  01F85A  6ED9               	movwf	fsr2l,c
 29876  01F85C  0EFF               	movlw	255
 29877  01F85E  20E2               	addwfc	fsr1h,w,c
 29878  01F860  6EDA               	movwf	fsr2h,c
 29879                           
 29880                           ;stkvar	?___lomod @ sp[(-1)+-8]
 29881  01F862  0E08               	movlw	8
 29882  01F864  6E2A               	movwf	btemp^0,c
 29883  01F866  0EF7               	movlw	-9
 29884  01F868                     us931999:
 29885  01F868  006F FF7B FFE3     	movff	postinc2,plusw1
 29886  01F86E  28E8               	incf	wreg,w,c
 29887  01F870  2E2A               	decfsz	btemp^0,f,c
 29888  01F872  D7FA               	bra	us931999
 29889                           
 29890                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29891  01F874  52E5               	movf	postdec1,f,c
 29892  01F876  0012               	return		;funcret
 29893  01F878                     __end_of___lomod:
 29894                           	opt callstack 0
 29895                           
 29896 ;; *************** function ___lodiv *****************
 29897 ;; Defined at:
 29898 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 29899 ;; Parameters:    Size  Location     Type
 29900 ;;  dividend        8  [STACK] unsigned long long 
 29901 ;;  divisor         8  [STACK] unsigned long long 
 29902 ;; Auto vars:     Size  Location     Type
 29903 ;;  quotient        8  [STACK] unsigned long long 
 29904 ;;  counter         1  [STACK] unsigned char 
 29905 ;; Return value:  Size  Location     Type
 29906 ;;                  8  [STACK] unsigned long long 
 29907 ;; Registers used:
 29908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29909 ;; Tracked objects:
 29910 ;;		On entry : 0/3
 29911 ;;		On exit  : 0/0
 29912 ;;		Unchanged: 0/0
 29913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29918 ;;Total ram usage:        0 bytes
 29919 ;; Hardware stack levels used:    1
 29920 ;; Hardware stack levels required when called:   15
 29921 ;; This function calls:
 29922 ;;		Nothing
 29923 ;; This function is called by:
 29924 ;;		_utoa
 29925 ;; This function uses a reentrant model
 29926 ;;
 29927                           
 29928                           	psect	text102
 29929  01E808                     __ptext102:
 29930                           	opt callstack 0
 29931  01E808                     ___lodiv:
 29932                           	opt callstack 0
 29933                           
 29934                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29935  01E808  0E09               	movlw	9
 29936  01E80A  26E1               	addwf	fsr1l,f,c
 29937  01E80C  0E00               	movlw	0
 29938  01E80E  22E2               	addwfc	fsr1h,f,c
 29939                           
 29940                           ;stkvar	_quotient @ sp[(-9)+0]
 29941                           
 29942                           ;incstack = 0
 29943 ;; hardware stack exceeded
 29944  01E810  0E07               	movlw	7
 29945  01E812  6E2A               	movwf	btemp^0,c
 29946  01E814  0EF7               	movlw	-9
 29947  01E816                     u9211:
 29948  01E816  6AE3               	clrf	plusw1,c
 29949  01E818  2AE8               	incf	wreg,f,c
 29950  01E81A  062A               	decf	btemp^0,f,c
 29951  01E81C  E2FC               	bc	u9211
 29952                           
 29953                           ;stkvar	_divisor @ sp[(-9)+-16]
 29954  01E81E  0EE7               	movlw	-25
 29955  01E820  50E3               	movf	plusw1,w,c
 29956  01E822  E116               	bnz	u9220
 29957  01E824  0EE8               	movlw	-24
 29958  01E826  50E3               	movf	plusw1,w,c
 29959  01E828  E113               	bnz	u9220
 29960  01E82A  0EE9               	movlw	-23
 29961  01E82C  50E3               	movf	plusw1,w,c
 29962  01E82E  E110               	bnz	u9220
 29963  01E830  0EEA               	movlw	-22
 29964  01E832  50E3               	movf	plusw1,w,c
 29965  01E834  E10D               	bnz	u9220
 29966  01E836  0EEB               	movlw	-21
 29967  01E838  50E3               	movf	plusw1,w,c
 29968  01E83A  E10A               	bnz	u9220
 29969  01E83C  0EEC               	movlw	-20
 29970  01E83E  50E3               	movf	plusw1,w,c
 29971  01E840  E107               	bnz	u9220
 29972  01E842  0EED               	movlw	-19
 29973  01E844  50E3               	movf	plusw1,w,c
 29974  01E846  E104               	bnz	u9220
 29975  01E848  0EEE               	movlw	-18
 29976  01E84A  50E3               	movf	plusw1,w,c
 29977  01E84C  B4D8               	btfsc	status,2,c
 29978  01E84E  D088               	goto	u9250
 29979  01E850                     u9220:
 29980                           
 29981                           ;stkvar	_counter @ sp[(-9)+8]
 29982  01E850  0EFF               	movlw	-1
 29983  01E852  6AE3               	clrf	plusw1,c
 29984  01E854  D012               	goto	L31
 29985  01E856                     l10901:
 29986                           
 29987                           ;stkvar	_divisor @ sp[(-9)+-16]
 29988  01E856  90D8               	bcf	status,0,c
 29989  01E858  0EE7               	movlw	-25
 29990  01E85A  36E3               	rlcf	plusw1,f,c
 29991  01E85C  0EE8               	movlw	-24
 29992  01E85E  36E3               	rlcf	plusw1,f,c
 29993  01E860  0EE9               	movlw	-23
 29994  01E862  36E3               	rlcf	plusw1,f,c
 29995  01E864  0EEA               	movlw	-22
 29996  01E866  36E3               	rlcf	plusw1,f,c
 29997  01E868  0EEB               	movlw	-21
 29998  01E86A  36E3               	rlcf	plusw1,f,c
 29999  01E86C  0EEC               	movlw	-20
 30000  01E86E  36E3               	rlcf	plusw1,f,c
 30001  01E870  0EED               	movlw	-19
 30002  01E872  36E3               	rlcf	plusw1,f,c
 30003  01E874  0EEE               	movlw	-18
 30004  01E876  36E3               	rlcf	plusw1,f,c
 30005                           
 30006                           ;stkvar	_counter @ sp[(-9)+8]
 30007  01E878  0EFF               	movlw	-1
 30008  01E87A                     L31:
 30009  01E87A  2AE3               	incf	plusw1,f,c
 30010                           
 30011                           ;stkvar	_divisor @ sp[(-9)+-16]
 30012  01E87C  0EEE               	movlw	-18
 30013  01E87E  AEE3               	btfss	plusw1,7,c
 30014  01E880  D7EA               	goto	l10901
 30015  01E882                     u9230:
 30016                           
 30017                           ;stkvar	_quotient @ sp[(-9)+0]
 30018  01E882  90D8               	bcf	status,0,c
 30019  01E884  0EF7               	movlw	-9
 30020  01E886  36E3               	rlcf	plusw1,f,c
 30021  01E888  0EF8               	movlw	-8
 30022  01E88A  36E3               	rlcf	plusw1,f,c
 30023  01E88C  0EF9               	movlw	-7
 30024  01E88E  36E3               	rlcf	plusw1,f,c
 30025  01E890  0EFA               	movlw	-6
 30026  01E892  36E3               	rlcf	plusw1,f,c
 30027  01E894  0EFB               	movlw	-5
 30028  01E896  36E3               	rlcf	plusw1,f,c
 30029  01E898  0EFC               	movlw	-4
 30030  01E89A  36E3               	rlcf	plusw1,f,c
 30031  01E89C  0EFD               	movlw	-3
 30032  01E89E  36E3               	rlcf	plusw1,f,c
 30033  01E8A0  0EFE               	movlw	-2
 30034  01E8A2  36E3               	rlcf	plusw1,f,c
 30035                           
 30036                           ;stkvar	_divisor @ sp[(-9)+-16]
 30037                           ;stkvar	_dividend @ sp[(-9)+-8]
 30038  01E8A4  50E1               	movf	fsr1l,w,c
 30039  01E8A6  0FEF               	addlw	-17
 30040  01E8A8  6ED9               	movwf	fsr2l,c
 30041  01E8AA  50E2               	movf	fsr1h,w,c
 30042  01E8AC  6EDA               	movwf	fsr2h,c
 30043  01E8AE  0EFF               	movlw	255
 30044  01E8B0  22DA               	addwfc	fsr2h,f,c
 30045  01E8B2  0EE7               	movlw	-25
 30046  01E8B4  50E3               	movf	plusw1,w,c
 30047  01E8B6  5CDE               	subwf	postinc2,w,c
 30048  01E8B8  0EE8               	movlw	-24
 30049  01E8BA  50E3               	movf	plusw1,w,c
 30050  01E8BC  58DE               	subwfb	postinc2,w,c
 30051  01E8BE  0EE9               	movlw	-23
 30052  01E8C0  50E3               	movf	plusw1,w,c
 30053  01E8C2  58DE               	subwfb	postinc2,w,c
 30054  01E8C4  0EEA               	movlw	-22
 30055  01E8C6  50E3               	movf	plusw1,w,c
 30056  01E8C8  58DE               	subwfb	postinc2,w,c
 30057  01E8CA  0EEB               	movlw	-21
 30058  01E8CC  50E3               	movf	plusw1,w,c
 30059  01E8CE  58DE               	subwfb	postinc2,w,c
 30060  01E8D0  0EEC               	movlw	-20
 30061  01E8D2  50E3               	movf	plusw1,w,c
 30062  01E8D4  58DE               	subwfb	postinc2,w,c
 30063  01E8D6  0EED               	movlw	-19
 30064  01E8D8  50E3               	movf	plusw1,w,c
 30065  01E8DA  58DE               	subwfb	postinc2,w,c
 30066  01E8DC  0EEE               	movlw	-18
 30067  01E8DE  50E3               	movf	plusw1,w,c
 30068  01E8E0  58DE               	subwfb	postinc2,w,c
 30069  01E8E2  A0D8               	btfss	status,0,c
 30070  01E8E4  D021               	goto	l10913
 30071                           
 30072                           ;stkvar	_divisor @ sp[(-9)+-16]
 30073                           ;stkvar	_dividend @ sp[(-9)+-8]
 30074  01E8E6  50E1               	movf	fsr1l,w,c
 30075  01E8E8  0FEF               	addlw	-17
 30076  01E8EA  6ED9               	movwf	fsr2l,c
 30077  01E8EC  50E2               	movf	fsr1h,w,c
 30078  01E8EE  6EDA               	movwf	fsr2h,c
 30079  01E8F0  0EFF               	movlw	255
 30080  01E8F2  22DA               	addwfc	fsr2h,f,c
 30081  01E8F4  0EE7               	movlw	-25
 30082  01E8F6  50E3               	movf	plusw1,w,c
 30083  01E8F8  5EDE               	subwf	postinc2,f,c
 30084  01E8FA  0EE8               	movlw	-24
 30085  01E8FC  50E3               	movf	plusw1,w,c
 30086  01E8FE  5ADE               	subwfb	postinc2,f,c
 30087  01E900  0EE9               	movlw	-23
 30088  01E902  50E3               	movf	plusw1,w,c
 30089  01E904  5ADE               	subwfb	postinc2,f,c
 30090  01E906  0EEA               	movlw	-22
 30091  01E908  50E3               	movf	plusw1,w,c
 30092  01E90A  5ADE               	subwfb	postinc2,f,c
 30093  01E90C  0EEB               	movlw	-21
 30094  01E90E  50E3               	movf	plusw1,w,c
 30095  01E910  5ADE               	subwfb	postinc2,f,c
 30096  01E912  0EEC               	movlw	-20
 30097  01E914  50E3               	movf	plusw1,w,c
 30098  01E916  5ADE               	subwfb	postinc2,f,c
 30099  01E918  0EED               	movlw	-19
 30100  01E91A  50E3               	movf	plusw1,w,c
 30101  01E91C  5ADE               	subwfb	postinc2,f,c
 30102  01E91E  0EEE               	movlw	-18
 30103  01E920  50E3               	movf	plusw1,w,c
 30104  01E922  5ADE               	subwfb	postinc2,f,c
 30105                           
 30106                           ;stkvar	_quotient @ sp[(-9)+0]
 30107  01E924  0EF7               	movlw	-9
 30108  01E926  80E3               	bsf	plusw1,0,c
 30109  01E928                     l10913:
 30110                           
 30111                           ;stkvar	_divisor @ sp[(-9)+-16]
 30112  01E928  90D8               	bcf	status,0,c
 30113  01E92A  0EEE               	movlw	-18
 30114  01E92C  32E3               	rrcf	plusw1,f,c
 30115  01E92E  0EED               	movlw	-19
 30116  01E930  32E3               	rrcf	plusw1,f,c
 30117  01E932  0EEC               	movlw	-20
 30118  01E934  32E3               	rrcf	plusw1,f,c
 30119  01E936  0EEB               	movlw	-21
 30120  01E938  32E3               	rrcf	plusw1,f,c
 30121  01E93A  0EEA               	movlw	-22
 30122  01E93C  32E3               	rrcf	plusw1,f,c
 30123  01E93E  0EE9               	movlw	-23
 30124  01E940  32E3               	rrcf	plusw1,f,c
 30125  01E942  0EE8               	movlw	-24
 30126  01E944  32E3               	rrcf	plusw1,f,c
 30127  01E946  0EE7               	movlw	-25
 30128  01E948  32E3               	rrcf	plusw1,f,c
 30129                           
 30130                           ;stkvar	_counter @ sp[(-9)+8]
 30131  01E94A  0EFF               	movlw	-1
 30132  01E94C  50E3               	movf	plusw1,w,c
 30133  01E94E  6E2A               	movwf	btemp^0,c
 30134  01E950  0E01               	movlw	1
 30135  01E952  5E2A               	subwf	btemp^0,f,c
 30136  01E954  0EFF               	movlw	-1
 30137  01E956  0060  F0AB  FFE3   	movff	btemp,plusw1
 30138  01E95C  A4D8               	btfss	status,2,c
 30139  01E95E  D791               	goto	u9230
 30140  01E960                     u9250:
 30141                           
 30142                           ;stkvar	_quotient @ sp[(-9)+0]
 30143  01E960  0EF7               	movlw	247
 30144  01E962  24E1               	addwf	fsr1l,w,c
 30145  01E964  6ED9               	movwf	fsr2l,c
 30146  01E966  0EFF               	movlw	255
 30147  01E968  20E2               	addwfc	fsr1h,w,c
 30148  01E96A  6EDA               	movwf	fsr2h,c
 30149                           
 30150                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 30151  01E96C  0E08               	movlw	8
 30152  01E96E  6E2A               	movwf	btemp^0,c
 30153  01E970  0EEF               	movlw	-17
 30154  01E972                     us926999:
 30155  01E972  006F FF7B FFE3     	movff	postinc2,plusw1
 30156  01E978  28E8               	incf	wreg,w,c
 30157  01E97A  2E2A               	decfsz	btemp^0,f,c
 30158  01E97C  D7FA               	bra	us926999
 30159                           
 30160                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 30161  01E97E  0EF7               	movlw	247
 30162  01E980  26E1               	addwf	fsr1l,f,c
 30163  01E982  0EFF               	movlw	255
 30164  01E984  22E2               	addwfc	fsr1h,f,c
 30165  01E986  0012               	return		;funcret
 30166  01E988                     __end_of___lodiv:
 30167                           	opt callstack 0
 30168                           
 30169 ;; *************** function _strncmp *****************
 30170 ;; Defined at:
 30171 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 30172 ;; Parameters:    Size  Location     Type
 30173 ;;  _l              2  [STACK] PTR const unsigned char 
 30174 ;;		 -> ct(3), STR_103(127), STR_101(3), STR_100(3), 
 30175 ;;		 -> STR_99(21), STR_98(21), STR_97(21), STR_96(21), 
 30176 ;;		 -> STR_95(21), STR_94(21), STR_93(26), STR_92(15), 
 30177 ;;		 -> STR_91(15), STR_90(15), STR_89(15), STR_88(10), 
 30178 ;;		 -> STR_87(10), STR_86(19), STR_85(19), STR_82(3), 
 30179 ;;		 -> STR_81(14), STR_80(28), STR_79(28), STR_78(28), 
 30180 ;;		 -> STR_77(22), STR_76(22), STR_75(22), STR_74(22), 
 30181 ;;		 -> STR_73(22), STR_72(22), STR_71(22), STR_70(22), 
 30182 ;;		 -> STR_69(22), STR_68(19), STR_67(21), STR_66(21), 
 30183 ;;		 -> STR_65(21), STR_64(22), STR_63(22), STR_62(22), 
 30184 ;;		 -> STR_61(22), STR_60(22), STR_59(22), STR_58(22), 
 30185 ;;		 -> STR_57(22), STR_56(22), STR_55(21), STR_54(22), 
 30186 ;;		 -> STR_53(22), STR_52(22), STR_51(22), STR_50(22), 
 30187 ;;		 -> STR_49(22), STR_48(24), STR_47(24), STR_46(24), 
 30188 ;;		 -> STR_45(30), STR_44(24), STR_43(24), STR_42(23), 
 30189 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 30190 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 30191 ;;		 -> STR_33(23), STR_32(23), STR_31(23), STR_30(18), 
 30192 ;;		 -> STR_29(17), STR_28(17), STR_27(22), STR_26(22), 
 30193 ;;		 -> STR_25(22), STR_24(14), STR_23(27), STR_22(27), 
 30194 ;;		 -> STR_21(23), STR_20(22), STR_19(22), STR_18(22), 
 30195 ;;		 -> STR_17(22), STR_16(23), STR_15(23), STR_14(23), 
 30196 ;;		 -> STR_13(26), STR_12(22), STR_11(21), STR_10(21), 
 30197 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 30198 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 30199 ;;  _r              2  [STACK] PTR const unsigned char 
 30200 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_123(3), 
 30201 ;;		 -> STR_118(3), STR_114(3), 
 30202 ;;  n               2  [STACK] unsigned int 
 30203 ;; Auto vars:     Size  Location     Type
 30204 ;;  r               2  [STACK] PTR const unsigned char 
 30205 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_123(3), 
 30206 ;;		 -> STR_118(3), STR_114(3), 
 30207 ;;  l               2  [STACK] PTR const unsigned char 
 30208 ;;		 -> ct(3), STR_103(127), STR_101(3), STR_100(3), 
 30209 ;;		 -> STR_99(21), STR_98(21), STR_97(21), STR_96(21), 
 30210 ;;		 -> STR_95(21), STR_94(21), STR_93(26), STR_92(15), 
 30211 ;;		 -> STR_91(15), STR_90(15), STR_89(15), STR_88(10), 
 30212 ;;		 -> STR_87(10), STR_86(19), STR_85(19), STR_82(3), 
 30213 ;;		 -> STR_81(14), STR_80(28), STR_79(28), STR_78(28), 
 30214 ;;		 -> STR_77(22), STR_76(22), STR_75(22), STR_74(22), 
 30215 ;;		 -> STR_73(22), STR_72(22), STR_71(22), STR_70(22), 
 30216 ;;		 -> STR_69(22), STR_68(19), STR_67(21), STR_66(21), 
 30217 ;;		 -> STR_65(21), STR_64(22), STR_63(22), STR_62(22), 
 30218 ;;		 -> STR_61(22), STR_60(22), STR_59(22), STR_58(22), 
 30219 ;;		 -> STR_57(22), STR_56(22), STR_55(21), STR_54(22), 
 30220 ;;		 -> STR_53(22), STR_52(22), STR_51(22), STR_50(22), 
 30221 ;;		 -> STR_49(22), STR_48(24), STR_47(24), STR_46(24), 
 30222 ;;		 -> STR_45(30), STR_44(24), STR_43(24), STR_42(23), 
 30223 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 30224 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 30225 ;;		 -> STR_33(23), STR_32(23), STR_31(23), STR_30(18), 
 30226 ;;		 -> STR_29(17), STR_28(17), STR_27(22), STR_26(22), 
 30227 ;;		 -> STR_25(22), STR_24(14), STR_23(27), STR_22(27), 
 30228 ;;		 -> STR_21(23), STR_20(22), STR_19(22), STR_18(22), 
 30229 ;;		 -> STR_17(22), STR_16(23), STR_15(23), STR_14(23), 
 30230 ;;		 -> STR_13(26), STR_12(22), STR_11(21), STR_10(21), 
 30231 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 30232 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 30233 ;; Return value:  Size  Location     Type
 30234 ;;                  2  [STACK] int 
 30235 ;; Registers used:
 30236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 30237 ;; Tracked objects:
 30238 ;;		On entry : 0/0
 30239 ;;		On exit  : 0/0
 30240 ;;		Unchanged: 0/0
 30241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30246 ;;Total ram usage:        0 bytes
 30247 ;; Hardware stack levels used:    1
 30248 ;; Hardware stack levels required when called:   15
 30249 ;; This function calls:
 30250 ;;		Nothing
 30251 ;; This function is called by:
 30252 ;;		_vfpfcnvrt
 30253 ;; This function uses a reentrant model
 30254 ;;
 30255                           
 30256                           	psect	text103
 30257  01D450                     __ptext103:
 30258                           	opt callstack 0
 30259  01D450                     _strncmp:
 30260                           	opt callstack 0
 30261                           
 30262                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30263  01D450  52E6               	movf	postinc1,f,c
 30264  01D452  52E6               	movf	postinc1,f,c
 30265  01D454  52E6               	movf	postinc1,f,c
 30266  01D456  52E6               	movf	postinc1,f,c
 30267                           
 30268                           ;stkvar	__l @ sp[(-4)+-2]
 30269                           
 30270                           ;incstack = 0
 30271 ;; hardware stack exceeded
 30272  01D458  0EFA               	movlw	-6
 30273  01D45A  006F FF8C  F034    	movff	plusw1,btemp+10
 30274  01D460  0EFB               	movlw	-5
 30275  01D462  006F FF8C  F035    	movff	plusw1,btemp+11
 30276                           
 30277                           ;stkvar	_l @ sp[(-4)+2]
 30278  01D468  0EFF               	movlw	-1
 30279  01D46A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30280  01D470  0EFE               	movlw	-2
 30281  01D472  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30282                           
 30283                           ;stkvar	__r @ sp[(-4)+-4]
 30284  01D478  0EF8               	movlw	-8
 30285  01D47A  006F FF8C  F034    	movff	plusw1,btemp+10
 30286  01D480  0EF9               	movlw	-7
 30287  01D482  006F FF8C  F035    	movff	plusw1,btemp+11
 30288                           
 30289                           ;stkvar	_r @ sp[(-4)+0]
 30290  01D488  0EFD               	movlw	-3
 30291  01D48A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30292  01D490  0EFC               	movlw	-4
 30293  01D492  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30294                           
 30295                           ;stkvar	_n @ sp[(-4)+-6]
 30296  01D498  0EF6               	movlw	-10
 30297  01D49A  006F FF8C  F02A    	movff	plusw1,btemp
 30298  01D4A0  0E01               	movlw	1
 30299  01D4A2  5E2A               	subwf	btemp^0,f,c
 30300  01D4A4  0EF6               	movlw	-10
 30301  01D4A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30302  01D4AC  0EF7               	movlw	-9
 30303  01D4AE  006F FF8C  F02A    	movff	plusw1,btemp
 30304  01D4B4  0E00               	movlw	0
 30305  01D4B6  5A2A               	subwfb	btemp^0,f,c
 30306  01D4B8  0EF7               	movlw	-9
 30307  01D4BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30308  01D4C0  0EF6               	movlw	-10
 30309  01D4C2  28E3               	incf	plusw1,w,c
 30310  01D4C4  E13F               	bnz	l11601
 30311  01D4C6  0EF7               	movlw	-9
 30312  01D4C8  28E3               	incf	plusw1,w,c
 30313  01D4CA  A4D8               	btfss	status,2,c
 30314  01D4CC  D03B               	goto	l11601
 30315  01D4CE  0E00               	movlw	0
 30316  01D4D0  6E2A               	movwf	btemp^0,c
 30317  01D4D2  0E00               	movlw	0
 30318  01D4D4  6E2B               	movwf	(btemp+1)^0,c
 30319  01D4D6  D0C7               	goto	l3819
 30320  01D4D8                     l11599:
 30321                           
 30322                           ;stkvar	_l @ sp[(-4)+2]
 30323  01D4D8  0EFE               	movlw	-2
 30324  01D4DA  50E3               	movf	plusw1,w,c
 30325  01D4DC  0F01               	addlw	1
 30326  01D4DE  6E2A               	movwf	btemp^0,c
 30327  01D4E0  0EFE               	movlw	-2
 30328  01D4E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30329  01D4E8  6A2A               	clrf	btemp^0,c
 30330  01D4EA  0EFF               	movlw	-1
 30331  01D4EC  50E3               	movf	plusw1,w,c
 30332  01D4EE  202A               	addwfc	btemp^0,w,c
 30333  01D4F0  6E2A               	movwf	btemp^0,c
 30334  01D4F2  0EFF               	movlw	-1
 30335  01D4F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30336                           
 30337                           ;stkvar	_r @ sp[(-4)+0]
 30338  01D4FA  0EFC               	movlw	-4
 30339  01D4FC  50E3               	movf	plusw1,w,c
 30340  01D4FE  0F01               	addlw	1
 30341  01D500  6E2A               	movwf	btemp^0,c
 30342  01D502  0EFC               	movlw	-4
 30343  01D504  0060  F0AB  FFE3   	movff	btemp,plusw1
 30344  01D50A  6A2A               	clrf	btemp^0,c
 30345  01D50C  0EFD               	movlw	-3
 30346  01D50E  50E3               	movf	plusw1,w,c
 30347  01D510  202A               	addwfc	btemp^0,w,c
 30348  01D512  6E2A               	movwf	btemp^0,c
 30349  01D514  0EFD               	movlw	-3
 30350  01D516  0060  F0AB  FFE3   	movff	btemp,plusw1
 30351                           
 30352                           ;stkvar	_n @ sp[(-4)+-6]
 30353  01D51C  0EF6               	movlw	-10
 30354  01D51E  006F FF8C  F02A    	movff	plusw1,btemp
 30355  01D524  0E01               	movlw	1
 30356  01D526  5E2A               	subwf	btemp^0,f,c
 30357  01D528  0EF6               	movlw	-10
 30358  01D52A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30359  01D530  0EF7               	movlw	-9
 30360  01D532  006F FF8C  F02A    	movff	plusw1,btemp
 30361  01D538  0E00               	movlw	0
 30362  01D53A  5A2A               	subwfb	btemp^0,f,c
 30363  01D53C  0EF7               	movlw	-9
 30364  01D53E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30365  01D544                     l11601:
 30366                           
 30367                           ;stkvar	_l @ sp[(-4)+2]
 30368  01D544  0EFE               	movlw	-2
 30369  01D546  006F FF8F FFF6     	movff	plusw1,tblptrl
 30370  01D54C  0EFF               	movlw	-1
 30371  01D54E  006F FF8F FFF7     	movff	plusw1,tblptrh
 30372  01D554  0E00               	movlw	low (__mediumconst shr (0+16))
 30373  01D556  6EF8               	movwf	tblptru,c
 30374  01D558  0E1F               	movlw	(high __ramtop+-1)
 30375  01D55A  64F7               	cpfsgt	tblptrh,c
 30376  01D55C  D003               	bra	u10547
 30377  01D55E  0008               	tblrd		*
 30378  01D560  50F5               	movf	tablat,w,c
 30379  01D562  D007               	bra	u10540
 30380  01D564                     u10547:
 30381  01D564  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30382  01D56A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30383  01D570  50EF               	movf	indf0,w,c
 30384  01D572                     u10540:
 30385  01D572  0900               	iorlw	0
 30386  01D574  B4D8               	btfsc	status,2,c
 30387  01D576  D04A               	goto	u10580
 30388                           
 30389                           ;stkvar	_r @ sp[(-4)+0]
 30390  01D578  50E1               	movf	fsr1l,w,c
 30391  01D57A  0FFC               	addlw	-4
 30392  01D57C  6ED9               	movwf	fsr2l,c
 30393  01D57E  50E2               	movf	fsr1h,w,c
 30394  01D580  6EDA               	movwf	fsr2h,c
 30395  01D582  0EFF               	movlw	255
 30396  01D584  22DA               	addwfc	fsr2h,f,c
 30397  01D586  006F FF7B FFF6     	movff	postinc2,tblptrl
 30398  01D58C  006F FF77 FFF7     	movff	postdec2,tblptrh
 30399  01D592                     	if	0	;tblptru may be non-zero
 30400  01D592                     	endif
 30401  01D592                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30402  01D592  0E00               	movlw	low (__mediumconst shr (0+16))
 30403  01D594  6EF8               	movwf	tblptru,c
 30404  01D596                     	endif
 30405  01D596  0008               	tblrd		*
 30406  01D598  50F5               	movf	tablat,w,c
 30407  01D59A  0900               	iorlw	0
 30408  01D59C  B4D8               	btfsc	status,2,c
 30409  01D59E  D036               	goto	u10580
 30410                           
 30411                           ;stkvar	_n @ sp[(-4)+-6]
 30412  01D5A0  0EF6               	movlw	-10
 30413  01D5A2  006F FF8C  F02A    	movff	plusw1,btemp
 30414  01D5A8  0EF7               	movlw	-9
 30415  01D5AA  50E3               	movf	plusw1,w,c
 30416  01D5AC  102A               	iorwf	btemp^0,w,c
 30417  01D5AE  B4D8               	btfsc	status,2,c
 30418  01D5B0  D02D               	goto	u10580
 30419                           
 30420                           ;stkvar	_r @ sp[(-4)+0]
 30421  01D5B2  50E1               	movf	fsr1l,w,c
 30422  01D5B4  0FFC               	addlw	-4
 30423  01D5B6  6ED9               	movwf	fsr2l,c
 30424  01D5B8  50E2               	movf	fsr1h,w,c
 30425  01D5BA  6EDA               	movwf	fsr2h,c
 30426  01D5BC  0EFF               	movlw	255
 30427  01D5BE  22DA               	addwfc	fsr2h,f,c
 30428  01D5C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 30429  01D5C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 30430  01D5CC                     	if	0	;tblptru may be non-zero
 30431  01D5CC                     	endif
 30432  01D5CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30433  01D5CC  0E00               	movlw	low (__mediumconst shr (0+16))
 30434  01D5CE  6EF8               	movwf	tblptru,c
 30435  01D5D0                     	endif
 30436  01D5D0  0008               	tblrd		*
 30437  01D5D2  006F FFD4  F035    	movff	tablat,btemp+11
 30438                           
 30439                           ;stkvar	_l @ sp[(-4)+2]
 30440  01D5D8  0EFE               	movlw	-2
 30441  01D5DA  006F FF8F FFF6     	movff	plusw1,tblptrl
 30442  01D5E0  0EFF               	movlw	-1
 30443  01D5E2  006F FF8F FFF7     	movff	plusw1,tblptrh
 30444  01D5E8  0E00               	movlw	low (__mediumconst shr (0+16))
 30445  01D5EA  6EF8               	movwf	tblptru,c
 30446  01D5EC  0E1F               	movlw	(high __ramtop+-1)
 30447  01D5EE  64F7               	cpfsgt	tblptrh,c
 30448  01D5F0  D003               	bra	u10587
 30449  01D5F2  0008               	tblrd		*
 30450  01D5F4  50F5               	movf	tablat,w,c
 30451  01D5F6  D007               	bra	u10585
 30452  01D5F8                     u10587:
 30453  01D5F8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30454  01D5FE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30455  01D604  50EF               	movf	indf0,w,c
 30456  01D606                     u10585:
 30457  01D606  1835               	xorwf	(btemp+11)^0,w,c
 30458  01D608  B4D8               	btfsc	status,2,c
 30459  01D60A  D766               	goto	l11599
 30460  01D60C                     u10580:
 30461                           
 30462                           ;stkvar	_l @ sp[(-4)+2]
 30463  01D60C  0EFE               	movlw	-2
 30464  01D60E  006F FF8F FFF6     	movff	plusw1,tblptrl
 30465  01D614  0EFF               	movlw	-1
 30466  01D616  006F FF8F FFF7     	movff	plusw1,tblptrh
 30467  01D61C  0E00               	movlw	low (__mediumconst shr (0+16))
 30468  01D61E  6EF8               	movwf	tblptru,c
 30469  01D620  0E1F               	movlw	(high __ramtop+-1)
 30470  01D622  64F7               	cpfsgt	tblptrh,c
 30471  01D624  D003               	bra	u10597
 30472  01D626  0008               	tblrd		*
 30473  01D628  50F5               	movf	tablat,w,c
 30474  01D62A  D007               	bra	u10590
 30475  01D62C                     u10597:
 30476  01D62C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30477  01D632  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30478  01D638  50EF               	movf	indf0,w,c
 30479  01D63A                     u10590:
 30480  01D63A  6E2A               	movwf	btemp^0,c
 30481  01D63C  6A2B               	clrf	(btemp+1)^0,c
 30482                           
 30483                           ;stkvar	_r @ sp[(-4)+0]
 30484  01D63E  50E1               	movf	fsr1l,w,c
 30485  01D640  0FFC               	addlw	-4
 30486  01D642  6ED9               	movwf	fsr2l,c
 30487  01D644  50E2               	movf	fsr1h,w,c
 30488  01D646  6EDA               	movwf	fsr2h,c
 30489  01D648  0EFF               	movlw	255
 30490  01D64A  22DA               	addwfc	fsr2h,f,c
 30491  01D64C  006F FF7B FFF6     	movff	postinc2,tblptrl
 30492  01D652  006F FF77 FFF7     	movff	postdec2,tblptrh
 30493  01D658                     	if	0	;tblptru may be non-zero
 30494  01D658                     	endif
 30495  01D658                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30496  01D658  0E00               	movlw	low (__mediumconst shr (0+16))
 30497  01D65A  6EF8               	movwf	tblptru,c
 30498  01D65C                     	endif
 30499  01D65C  0008               	tblrd		*
 30500  01D65E  50F5               	movf	tablat,w,c
 30501  01D660  5E2A               	subwf	btemp^0,f,c
 30502  01D662  0E00               	movlw	0
 30503  01D664  5A2B               	subwfb	(btemp+1)^0,f,c
 30504  01D666                     l3819:
 30505                           
 30506                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 30507  01D666  0EF6               	movlw	246
 30508  01D668  26E1               	addwf	fsr1l,f,c
 30509  01D66A  0EFF               	movlw	255
 30510  01D66C  22E2               	addwfc	fsr1h,f,c
 30511  01D66E  0012               	return		;funcret
 30512  01D670                     __end_of_strncmp:
 30513                           	opt callstack 0
 30514                           
 30515 ;; *************** function _stoa *****************
 30516 ;; Defined at:
 30517 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30518 ;; Parameters:    Size  Location     Type
 30519 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30520 ;;		 -> f(6), NULL(0), 
 30521 ;;  s               2  [STACK] PTR unsigned char 
 30522 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_84(9), 
 30523 ;;		 -> STR_83(12), D.lcd(640), D(642), T(176), 
 30524 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 30525 ;; Auto vars:     Size  Location     Type
 30526 ;;  nuls            7  [STACK] unsigned char [7]
 30527 ;;  l               2  [STACK] int 
 30528 ;;  p               2  [STACK] int 
 30529 ;;  cp              2  [STACK] PTR unsigned char 
 30530 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 30531 ;;		 -> STR_84(9), STR_83(12), D.lcd(640), D(642), 
 30532 ;;		 -> T(176), cp(4), cb(4), STR_3(5), 
 30533 ;;		 -> V(181), 
 30534 ;;  w               2  [STACK] int 
 30535 ;;  i               2  [STACK] int 
 30536 ;; Return value:  Size  Location     Type
 30537 ;;                  2  [STACK] int 
 30538 ;; Registers used:
 30539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 30540 ;; Tracked objects:
 30541 ;;		On entry : 0/0
 30542 ;;		On exit  : 0/0
 30543 ;;		Unchanged: 0/0
 30544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30549 ;;Total ram usage:        0 bytes
 30550 ;; Hardware stack levels used:    1
 30551 ;; Hardware stack levels required when called:   18
 30552 ;; This function calls:
 30553 ;;		_fputc
 30554 ;;		_strlen
 30555 ;; This function is called by:
 30556 ;;		_vfpfcnvrt
 30557 ;; This function uses a reentrant model
 30558 ;;
 30559                           
 30560                           	psect	text104
 30561  01BC4A                     __ptext104:
 30562                           	opt callstack 0
 30563  01BC4A                     _stoa:
 30564                           	opt callstack 0
 30565                           
 30566                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30567  01BC4A  0E11               	movlw	17
 30568  01BC4C  26E1               	addwf	fsr1l,f,c
 30569  01BC4E  0E00               	movlw	0
 30570  01BC50  22E2               	addwfc	fsr1h,f,c
 30571                           
 30572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 30573                           
 30574                           ;incstack = 0
 30575 ;; hardware stack exceeded
 30576  01BC52  EE20  F200         	lfsr	2,stoa@F1166
 30577                           
 30578                           ;stkvar	_nuls @ sp[(-17)+0]
 30579  01BC56  0E07               	movlw	7
 30580  01BC58  6E2A               	movwf	btemp^0,c
 30581  01BC5A  0EEF               	movlw	-17
 30582  01BC5C                     us1541999:
 30583  01BC5C  006F FF7B FFE3     	movff	postinc2,plusw1
 30584  01BC62  28E8               	incf	wreg,w,c
 30585  01BC64  2E2A               	decfsz	btemp^0,f,c
 30586  01BC66  D7FA               	bra	us1541999
 30587                           
 30588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 30589                           ;stkvar	_s @ sp[(-17)+-4]
 30590  01BC68  0EEB               	movlw	-21
 30591  01BC6A  006F FF8C  F034    	movff	plusw1,btemp+10
 30592  01BC70  0EEC               	movlw	-20
 30593  01BC72  006F FF8C  F035    	movff	plusw1,btemp+11
 30594                           
 30595                           ;stkvar	_cp @ sp[(-17)+11]
 30596  01BC78  0EFB               	movlw	-5
 30597  01BC7A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30598  01BC80  0EFA               	movlw	-6
 30599  01BC82  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30600                           
 30601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 30602                           ;stkvar	_cp @ sp[(-17)+11]
 30603  01BC88  0EFA               	movlw	-6
 30604  01BC8A  006F FF8C  F02A    	movff	plusw1,btemp
 30605  01BC90  0EFB               	movlw	-5
 30606  01BC92  50E3               	movf	plusw1,w,c
 30607  01BC94  102A               	iorwf	btemp^0,w,c
 30608  01BC96  A4D8               	btfss	status,2,c
 30609  01BC98  D00E               	goto	l16125
 30610                           
 30611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 30612                           ;stkvar	_nuls @ sp[(-17)+0]
 30613  01BC9A  0EEF               	movlw	239
 30614  01BC9C  24E1               	addwf	fsr1l,w,c
 30615  01BC9E  6E34               	movwf	(btemp+10)^0,c
 30616  01BCA0  0EFF               	movlw	255
 30617  01BCA2  20E2               	addwfc	fsr1h,w,c
 30618  01BCA4  6E35               	movwf	(btemp+11)^0,c
 30619                           
 30620                           ;stkvar	_cp @ sp[(-17)+11]
 30621  01BCA6  0EFB               	movlw	-5
 30622  01BCA8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30623  01BCAE  0EFA               	movlw	-6
 30624  01BCB0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30625  01BCB6                     l16125:
 30626                           
 30627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 30628                           ;stkvar	_cp @ sp[(-17)+11]
 30629  01BCB6  0EFA               	movlw	-6
 30630  01BCB8  006F FF8F FFE6     	movff	plusw1,postinc1
 30631  01BCBE  006F FF8F FFE6     	movff	plusw1,postinc1
 30632  01BCC4  EC65  F008         	call	_strlen	;wreg free
 30633                           
 30634                           ;stkvar	_l @ sp[(-17)+7]
 30635  01BCC8  0EF6               	movlw	-10
 30636  01BCCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30637  01BCD0  0EF7               	movlw	-9
 30638  01BCD2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30639                           
 30640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 30641                           ;stkvar	_p @ sp[(-17)+9]
 30642  01BCD8  0EF8               	movlw	-8
 30643  01BCDA  0060  F133  FFE3   	movff	_prec,plusw1
 30644  01BCE0  0EF9               	movlw	-7
 30645  01BCE2  0060  F137  FFE3   	movff	_prec+1,plusw1
 30646                           
 30647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 30648                           ;stkvar	_p @ sp[(-17)+9]
 30649  01BCE8  0EF9               	movlw	-7
 30650  01BCEA  BEE3               	btfsc	plusw1,7,c
 30651  01BCEC  D023               	goto	l2614
 30652                           
 30653                           ;stkvar	_l @ sp[(-17)+7]
 30654                           ;stkvar	_p @ sp[(-17)+9]
 30655  01BCEE  50E1               	movf	fsr1l,w,c
 30656  01BCF0  0FF8               	addlw	-8
 30657  01BCF2  6ED9               	movwf	fsr2l,c
 30658  01BCF4  50E2               	movf	fsr1h,w,c
 30659  01BCF6  6EDA               	movwf	fsr2h,c
 30660  01BCF8  0EFF               	movlw	255
 30661  01BCFA  22DA               	addwfc	fsr2h,f,c
 30662  01BCFC  0EF6               	movlw	-10
 30663  01BCFE  50E3               	movf	plusw1,w,c
 30664  01BD00  5CDE               	subwf	postinc2,w,c
 30665  01BD02  50DE               	movf	postinc2,w,c
 30666  01BD04  0A80               	xorlw	128
 30667  01BD06  6E2A               	movwf	btemp^0,c
 30668  01BD08  0EF7               	movlw	-9
 30669  01BD0A  50E3               	movf	plusw1,w,c
 30670  01BD0C  0A80               	xorlw	128
 30671  01BD0E  582A               	subwfb	btemp^0,w,c
 30672  01BD10  B0D8               	btfsc	status,0,c
 30673  01BD12  D010               	goto	l2614
 30674                           
 30675                           ;stkvar	_p @ sp[(-17)+9]
 30676                           ;stkvar	_l @ sp[(-17)+7]
 30677  01BD14  0EF8               	movlw	-8
 30678  01BD16  006F FF8C  F02A    	movff	plusw1,btemp
 30679  01BD1C  0EF6               	movlw	-10
 30680  01BD1E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30681  01BD24  0EF9               	movlw	-7
 30682  01BD26  006F FF8C  F02A    	movff	plusw1,btemp
 30683  01BD2C  0EF7               	movlw	-9
 30684  01BD2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30685  01BD34                     l2614:
 30686                           
 30687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 30688                           ;stkvar	_l @ sp[(-17)+7]
 30689                           ;stkvar	_p @ sp[(-17)+9]
 30690  01BD34  0EF6               	movlw	-10
 30691  01BD36  006F FF8C  F02A    	movff	plusw1,btemp
 30692  01BD3C  0EF8               	movlw	-8
 30693  01BD3E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30694  01BD44  0EF7               	movlw	-9
 30695  01BD46  006F FF8C  F02A    	movff	plusw1,btemp
 30696  01BD4C  0EF9               	movlw	-7
 30697  01BD4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30698                           
 30699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 30700                           ;stkvar	_w @ sp[(-17)+13]
 30701  01BD54  0EFC               	movlw	-4
 30702  01BD56  0060  F12B  FFE3   	movff	_width,plusw1
 30703  01BD5C  0EFD               	movlw	-3
 30704  01BD5E  0060  F12F  FFE3   	movff	_width+1,plusw1
 30705                           
 30706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 30707  01BD64  A04E               	btfss	_flags^0,0,c
 30708  01BD66  D01F               	goto	l16145
 30709  01BD68  D031               	goto	u15460
 30710  01BD6A                     l16141:
 30711                           
 30712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 30713                           ;stkvar	_fp @ sp[(-17)+-2]
 30714  01BD6A  0EED               	movlw	-19
 30715  01BD6C  006F FF8F FFE6     	movff	plusw1,postinc1
 30716  01BD72  006F FF8F FFE6     	movff	plusw1,postinc1
 30717  01BD78  0E20               	movlw	32
 30718  01BD7A  6EE6               	movwf	postinc1,c
 30719  01BD7C  0E00               	movlw	0
 30720  01BD7E  6EE6               	movwf	postinc1,c
 30721  01BD80  ECD8  F0FC         	call	_fputc	;wreg free
 30722                           
 30723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 30724                           ;stkvar	_l @ sp[(-17)+7]
 30725  01BD84  0EF6               	movlw	-10
 30726  01BD86  50E3               	movf	plusw1,w,c
 30727  01BD88  0F01               	addlw	1
 30728  01BD8A  6E2A               	movwf	btemp^0,c
 30729  01BD8C  0EF6               	movlw	-10
 30730  01BD8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30731  01BD94  6A2A               	clrf	btemp^0,c
 30732  01BD96  0EF7               	movlw	-9
 30733  01BD98  50E3               	movf	plusw1,w,c
 30734  01BD9A  202A               	addwfc	btemp^0,w,c
 30735  01BD9C  6E2A               	movwf	btemp^0,c
 30736  01BD9E  0EF7               	movlw	-9
 30737  01BDA0  0060  F0AB  FFE3   	movff	btemp,plusw1
 30738  01BDA6                     l16145:
 30739                           
 30740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 30741                           ;stkvar	_w @ sp[(-17)+13]
 30742                           ;stkvar	_l @ sp[(-17)+7]
 30743  01BDA6  50E1               	movf	fsr1l,w,c
 30744  01BDA8  0FF6               	addlw	-10
 30745  01BDAA  6ED9               	movwf	fsr2l,c
 30746  01BDAC  50E2               	movf	fsr1h,w,c
 30747  01BDAE  6EDA               	movwf	fsr2h,c
 30748  01BDB0  0EFF               	movlw	255
 30749  01BDB2  22DA               	addwfc	fsr2h,f,c
 30750  01BDB4  0EFC               	movlw	-4
 30751  01BDB6  50E3               	movf	plusw1,w,c
 30752  01BDB8  5CDE               	subwf	postinc2,w,c
 30753  01BDBA  50DE               	movf	postinc2,w,c
 30754  01BDBC  0A80               	xorlw	128
 30755  01BDBE  6E2A               	movwf	btemp^0,c
 30756  01BDC0  0EFD               	movlw	-3
 30757  01BDC2  50E3               	movf	plusw1,w,c
 30758  01BDC4  0A80               	xorlw	128
 30759  01BDC6  582A               	subwfb	btemp^0,w,c
 30760  01BDC8  A0D8               	btfss	status,0,c
 30761  01BDCA  D7CF               	goto	l16141
 30762  01BDCC                     u15460:
 30763                           
 30764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 30765                           ;stkvar	_i @ sp[(-17)+15]
 30766  01BDCC  0EFE               	movlw	-2
 30767  01BDCE  6AE3               	clrf	plusw1,c
 30768  01BDD0  0EFF               	movlw	-1
 30769  01BDD2  6AE3               	clrf	plusw1,c
 30770                           
 30771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30772  01BDD4  D045               	goto	l16155
 30773  01BDD6                     l16149:
 30774                           
 30775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 30776                           ;stkvar	_fp @ sp[(-17)+-2]
 30777  01BDD6  0EED               	movlw	-19
 30778  01BDD8  006F FF8F FFE6     	movff	plusw1,postinc1
 30779  01BDDE  006F FF8F FFE6     	movff	plusw1,postinc1
 30780                           
 30781                           ;stkvar	_cp @ sp[(-19)+11]
 30782  01BDE4  0EF8               	movlw	-8
 30783  01BDE6  006F FF8F FFF6     	movff	plusw1,tblptrl
 30784  01BDEC  0EF9               	movlw	-7
 30785  01BDEE  006F FF8F FFF7     	movff	plusw1,tblptrh
 30786  01BDF4  0E00               	movlw	low (__mediumconst shr (0+16))
 30787  01BDF6  6EF8               	movwf	tblptru,c
 30788  01BDF8  0E1F               	movlw	(high __ramtop+-1)
 30789  01BDFA  64F7               	cpfsgt	tblptrh,c
 30790  01BDFC  D003               	bra	u15477
 30791  01BDFE  0008               	tblrd		*
 30792  01BE00  50F5               	movf	tablat,w,c
 30793  01BE02  D007               	bra	u15470
 30794  01BE04                     u15477:
 30795  01BE04  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30796  01BE0A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30797  01BE10  50EF               	movf	indf0,w,c
 30798  01BE12                     u15470:
 30799  01BE12  6EE6               	movwf	postinc1,c
 30800  01BE14  0E00               	movlw	0
 30801  01BE16  6EE6               	movwf	postinc1,c
 30802  01BE18  ECD8  F0FC         	call	_fputc	;wreg free
 30803                           
 30804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 30805                           ;stkvar	_cp @ sp[(-17)+11]
 30806  01BE1C  0EFA               	movlw	-6
 30807  01BE1E  50E3               	movf	plusw1,w,c
 30808  01BE20  0F01               	addlw	1
 30809  01BE22  6E2A               	movwf	btemp^0,c
 30810  01BE24  0EFA               	movlw	-6
 30811  01BE26  0060  F0AB  FFE3   	movff	btemp,plusw1
 30812  01BE2C  6A2A               	clrf	btemp^0,c
 30813  01BE2E  0EFB               	movlw	-5
 30814  01BE30  50E3               	movf	plusw1,w,c
 30815  01BE32  202A               	addwfc	btemp^0,w,c
 30816  01BE34  6E2A               	movwf	btemp^0,c
 30817  01BE36  0EFB               	movlw	-5
 30818  01BE38  0060  F0AB  FFE3   	movff	btemp,plusw1
 30819                           
 30820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 30821                           ;stkvar	_i @ sp[(-17)+15]
 30822  01BE3E  0EFE               	movlw	-2
 30823  01BE40  50E3               	movf	plusw1,w,c
 30824  01BE42  0F01               	addlw	1
 30825  01BE44  6E2A               	movwf	btemp^0,c
 30826  01BE46  0EFE               	movlw	-2
 30827  01BE48  0060  F0AB  FFE3   	movff	btemp,plusw1
 30828  01BE4E  6A2A               	clrf	btemp^0,c
 30829  01BE50  0EFF               	movlw	-1
 30830  01BE52  50E3               	movf	plusw1,w,c
 30831  01BE54  202A               	addwfc	btemp^0,w,c
 30832  01BE56  6E2A               	movwf	btemp^0,c
 30833  01BE58  0EFF               	movlw	-1
 30834  01BE5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30835  01BE60                     l16155:
 30836                           
 30837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30838                           ;stkvar	_p @ sp[(-17)+9]
 30839                           ;stkvar	_i @ sp[(-17)+15]
 30840  01BE60  50E1               	movf	fsr1l,w,c
 30841  01BE62  0FFE               	addlw	-2
 30842  01BE64  6ED9               	movwf	fsr2l,c
 30843  01BE66  50E2               	movf	fsr1h,w,c
 30844  01BE68  6EDA               	movwf	fsr2h,c
 30845  01BE6A  0EFF               	movlw	255
 30846  01BE6C  22DA               	addwfc	fsr2h,f,c
 30847  01BE6E  0EF8               	movlw	-8
 30848  01BE70  50E3               	movf	plusw1,w,c
 30849  01BE72  5CDE               	subwf	postinc2,w,c
 30850  01BE74  50DE               	movf	postinc2,w,c
 30851  01BE76  0A80               	xorlw	128
 30852  01BE78  6E2A               	movwf	btemp^0,c
 30853  01BE7A  0EF9               	movlw	-7
 30854  01BE7C  50E3               	movf	plusw1,w,c
 30855  01BE7E  0A80               	xorlw	128
 30856  01BE80  582A               	subwfb	btemp^0,w,c
 30857  01BE82  A0D8               	btfss	status,0,c
 30858  01BE84  D7A8               	goto	l16149
 30859                           
 30860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 30861  01BE86  B04E               	btfsc	_flags^0,0,c
 30862  01BE88  D01F               	goto	l16163
 30863  01BE8A  D031               	goto	u15500
 30864  01BE8C                     l16159:
 30865                           
 30866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 30867                           ;stkvar	_fp @ sp[(-17)+-2]
 30868  01BE8C  0EED               	movlw	-19
 30869  01BE8E  006F FF8F FFE6     	movff	plusw1,postinc1
 30870  01BE94  006F FF8F FFE6     	movff	plusw1,postinc1
 30871  01BE9A  0E20               	movlw	32
 30872  01BE9C  6EE6               	movwf	postinc1,c
 30873  01BE9E  0E00               	movlw	0
 30874  01BEA0  6EE6               	movwf	postinc1,c
 30875  01BEA2  ECD8  F0FC         	call	_fputc	;wreg free
 30876                           
 30877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 30878                           ;stkvar	_l @ sp[(-17)+7]
 30879  01BEA6  0EF6               	movlw	-10
 30880  01BEA8  50E3               	movf	plusw1,w,c
 30881  01BEAA  0F01               	addlw	1
 30882  01BEAC  6E2A               	movwf	btemp^0,c
 30883  01BEAE  0EF6               	movlw	-10
 30884  01BEB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 30885  01BEB6  6A2A               	clrf	btemp^0,c
 30886  01BEB8  0EF7               	movlw	-9
 30887  01BEBA  50E3               	movf	plusw1,w,c
 30888  01BEBC  202A               	addwfc	btemp^0,w,c
 30889  01BEBE  6E2A               	movwf	btemp^0,c
 30890  01BEC0  0EF7               	movlw	-9
 30891  01BEC2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30892  01BEC8                     l16163:
 30893                           
 30894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 30895                           ;stkvar	_w @ sp[(-17)+13]
 30896                           ;stkvar	_l @ sp[(-17)+7]
 30897  01BEC8  50E1               	movf	fsr1l,w,c
 30898  01BECA  0FF6               	addlw	-10
 30899  01BECC  6ED9               	movwf	fsr2l,c
 30900  01BECE  50E2               	movf	fsr1h,w,c
 30901  01BED0  6EDA               	movwf	fsr2h,c
 30902  01BED2  0EFF               	movlw	255
 30903  01BED4  22DA               	addwfc	fsr2h,f,c
 30904  01BED6  0EFC               	movlw	-4
 30905  01BED8  50E3               	movf	plusw1,w,c
 30906  01BEDA  5CDE               	subwf	postinc2,w,c
 30907  01BEDC  50DE               	movf	postinc2,w,c
 30908  01BEDE  0A80               	xorlw	128
 30909  01BEE0  6E2A               	movwf	btemp^0,c
 30910  01BEE2  0EFD               	movlw	-3
 30911  01BEE4  50E3               	movf	plusw1,w,c
 30912  01BEE6  0A80               	xorlw	128
 30913  01BEE8  582A               	subwfb	btemp^0,w,c
 30914  01BEEA  A0D8               	btfss	status,0,c
 30915  01BEEC  D7CF               	goto	l16159
 30916  01BEEE                     u15500:
 30917                           
 30918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 30919                           ;stkvar	_l @ sp[(-17)+7]
 30920  01BEEE  0EF6               	movlw	-10
 30921  01BEF0  006F FF8C  F02A    	movff	plusw1,btemp
 30922  01BEF6  0EF7               	movlw	-9
 30923  01BEF8  006F FF8C  F02B    	movff	plusw1,btemp+1
 30924                           
 30925                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 30926  01BEFE  0EEB               	movlw	235
 30927  01BF00  26E1               	addwf	fsr1l,f,c
 30928  01BF02  0EFF               	movlw	255
 30929  01BF04  22E2               	addwfc	fsr1h,f,c
 30930  01BF06  0012               	return		;funcret
 30931  01BF08                     __end_of_stoa:
 30932                           	opt callstack 0
 30933                           
 30934 ;; *************** function _efgtoa *****************
 30935 ;; Defined at:
 30936 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30937 ;; Parameters:    Size  Location     Type
 30938 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30939 ;;		 -> f(6), NULL(0), 
 30940 ;;  f               4  [STACK] PTR struct _IO_FILE
 30941 ;;  c               1  [STACK] unsigned char 
 30942 ;; Auto vars:     Size  Location     Type
 30943 ;;  u               4  [STACK] unsigned char 
 30944 ;;  g               4  [STACK] unsigned char 
 30945 ;;  l               4  [STACK] unsigned char 
 30946 ;;  h               4  [STACK] unsigned char 
 30947 ;;  ou              4  [STACK] unsigned char 
 30948 ;;  n               2  [STACK] int 
 30949 ;;  e               2  [STACK] int 
 30950 ;;  i               2  [STACK] int 
 30951 ;;  w               2  [STACK] int 
 30952 ;;  p               2  [STACK] int 
 30953 ;;  sign            2  [STACK] int 
 30954 ;;  d               2  [STACK] int 
 30955 ;;  ne              2  [STACK] int 
 30956 ;;  m               2  [STACK] int 
 30957 ;;  pp              2  [STACK] int 
 30958 ;;  t               2  [STACK] int 
 30959 ;;  mode            1  [STACK] unsigned char 
 30960 ;;  nmode           1  [STACK] unsigned char 
 30961 ;; Return value:  Size  Location     Type
 30962 ;;                  2  [STACK] int 
 30963 ;; Registers used:
 30964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 30965 ;; Tracked objects:
 30966 ;;		On entry : 0/0
 30967 ;;		On exit  : 0/0
 30968 ;;		Unchanged: 0/0
 30969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30974 ;;Total ram usage:        0 bytes
 30975 ;; Hardware stack levels used:    1
 30976 ;; Hardware stack levels required when called:   20
 30977 ;; This function calls:
 30978 ;;		___awdiv
 30979 ;;		___awmod
 30980 ;;		___fladd
 30981 ;;		___fldiv
 30982 ;;		___fleq
 30983 ;;		___flge
 30984 ;;		___flmul
 30985 ;;		___flneg
 30986 ;;		___flsub
 30987 ;;		___fltol
 30988 ;;		___fpclassifyf
 30989 ;;		_floorf
 30990 ;;		_isupper
 30991 ;;		_pad
 30992 ;;		_strcpy
 30993 ;;		_tolower
 30994 ;; This function is called by:
 30995 ;;		_vfpfcnvrt
 30996 ;; This function uses a reentrant model
 30997 ;;
 30998                           
 30999                           	psect	text105
 31000  0115D6                     __ptext105:
 31001                           	opt callstack 0
 31002  0115D6                     _efgtoa:
 31003                           	opt callstack 0
 31004                           
 31005                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 31006  0115D6  0E38               	movlw	56
 31007  0115D8  26E1               	addwf	fsr1l,f,c
 31008  0115DA  0E00               	movlw	0
 31009  0115DC  22E2               	addwfc	fsr1h,f,c
 31010                           
 31011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 31012                           ;stkvar	_sign @ sp[(-56)+42]
 31013                           
 31014                           ;incstack = 0
 31015 ;; hardware stack exceeded
 31016  0115DE  0EF2               	movlw	-14
 31017  0115E0  6AE3               	clrf	plusw1,c
 31018  0115E2  0EF3               	movlw	-13
 31019  0115E4  6AE3               	clrf	plusw1,c
 31020                           
 31021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 31022                           ;stkvar	_f @ sp[(-56)+-6]
 31023  0115E6  0EC2               	movlw	-62
 31024  0115E8  006F FF8C  F032    	movff	plusw1,btemp+8
 31025  0115EE  0EC3               	movlw	-61
 31026  0115F0  006F FF8C  F033    	movff	plusw1,btemp+9
 31027  0115F6  0EC4               	movlw	-60
 31028  0115F8  006F FF8C  F034    	movff	plusw1,btemp+10
 31029  0115FE  0EC5               	movlw	-59
 31030  011600  006F FF8C  F035    	movff	plusw1,btemp+11
 31031                           
 31032                           ;stkvar	_g @ sp[(-56)+16]
 31033  011606  0ED8               	movlw	-40
 31034  011608  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31035  01160E  0ED9               	movlw	-39
 31036  011610  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31037  011616  0EDA               	movlw	-38
 31038  011618  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31039  01161E  0EDB               	movlw	-37
 31040  011620  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31041                           
 31042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 31043                           ;stkvar	_g @ sp[(-56)+16]
 31044  011626  0EDB               	movlw	-37
 31045  011628  AEE3               	btfss	plusw1,7,c
 31046  01162A  D02B               	goto	l15823
 31047                           
 31048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 31049  01162C  0E01               	movlw	1
 31050  01162E  6E34               	movwf	(btemp+10)^0,c
 31051  011630  0E00               	movlw	0
 31052  011632  6E35               	movwf	(btemp+11)^0,c
 31053                           
 31054                           ;stkvar	_sign @ sp[(-56)+42]
 31055  011634  0EF2               	movlw	-14
 31056  011636  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31057  01163C  0EF3               	movlw	-13
 31058  01163E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31059                           
 31060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 31061                           ;stkvar	_g @ sp[(-56)+16]
 31062  011644  0ED8               	movlw	-40
 31063  011646  006F FF8F FFE6     	movff	plusw1,postinc1
 31064  01164C  006F FF8F FFE6     	movff	plusw1,postinc1
 31065  011652  006F FF8F FFE6     	movff	plusw1,postinc1
 31066  011658  006F FF8F FFE6     	movff	plusw1,postinc1
 31067  01165E  ECCD  F010         	call	___flneg	;wreg free
 31068                           
 31069                           ;stkvar	_g @ sp[(-56)+16]
 31070  011662  0ED8               	movlw	-40
 31071  011664  0060  F0AB  FFE3   	movff	btemp,plusw1
 31072  01166A  0ED9               	movlw	-39
 31073  01166C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31074  011672  0EDA               	movlw	-38
 31075  011674  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31076  01167A  0EDB               	movlw	-37
 31077  01167C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31078  011682                     l15823:
 31079                           
 31080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 31081                           ;stkvar	_n @ sp[(-56)+32]
 31082  011682  0EE8               	movlw	-24
 31083  011684  6AE3               	clrf	plusw1,c
 31084  011686  0EE9               	movlw	-23
 31085  011688  6AE3               	clrf	plusw1,c
 31086                           
 31087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 31088                           ;stkvar	_w @ sp[(-56)+38]
 31089  01168A  0EEE               	movlw	-18
 31090  01168C  0060  F12B  FFE3   	movff	_width,plusw1
 31091  011692  0EEF               	movlw	-17
 31092  011694  0060  F12F  FFE3   	movff	_width+1,plusw1
 31093                           
 31094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 31095                           ;stkvar	_sign @ sp[(-56)+42]
 31096  01169A  0EF2               	movlw	-14
 31097  01169C  006F FF8C  F02A    	movff	plusw1,btemp
 31098  0116A2  0EF3               	movlw	-13
 31099  0116A4  50E3               	movf	plusw1,w,c
 31100  0116A6  102A               	iorwf	btemp^0,w,c
 31101  0116A8  A4D8               	btfss	status,2,c
 31102  0116AA  D002               	goto	u14910
 31103  0116AC  A44E               	btfss	_flags^0,2,c
 31104  0116AE  D036               	goto	l15843
 31105  0116B0                     u14910:
 31106                           
 31107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 31108                           ;stkvar	_sign @ sp[(-56)+42]
 31109  0116B0  0EF2               	movlw	-14
 31110  0116B2  006F FF8C  F02A    	movff	plusw1,btemp
 31111  0116B8  0EF3               	movlw	-13
 31112  0116BA  50E3               	movf	plusw1,w,c
 31113  0116BC  102A               	iorwf	btemp^0,w,c
 31114  0116BE  A4D8               	btfss	status,2,c
 31115  0116C0  D002               	goto	l15835
 31116  0116C2  0E2B               	movlw	43
 31117  0116C4  D001               	goto	L32
 31118  0116C6                     l15835:
 31119  0116C6  0E2D               	movlw	45
 31120  0116C8                     L32:
 31121  0116C8  6E34               	movwf	(btemp+10)^0,c
 31122  0116CA  0E00               	movlw	0
 31123  0116CC  6E35               	movwf	(btemp+11)^0,c
 31124                           
 31125                           ;stkvar	_efgtoa$6637 @ sp[(-56)+10]
 31126  0116CE  0ED2               	movlw	-46
 31127  0116D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31128  0116D6  0ED3               	movlw	-45
 31129  0116D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31130                           
 31131                           ;stkvar	_efgtoa$6637 @ sp[(-56)+10]
 31132  0116DE  0ED2               	movlw	-46
 31133  0116E0  006F FF8C  F354    	movff	plusw1,_dbuf
 31134                           
 31135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 31136                           ;stkvar	_n @ sp[(-56)+32]
 31137  0116E6  0EE8               	movlw	-24
 31138  0116E8  50E3               	movf	plusw1,w,c
 31139  0116EA  0F01               	addlw	1
 31140  0116EC  6E2A               	movwf	btemp^0,c
 31141  0116EE  0EE8               	movlw	-24
 31142  0116F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31143  0116F6  6A2A               	clrf	btemp^0,c
 31144  0116F8  0EE9               	movlw	-23
 31145  0116FA  50E3               	movf	plusw1,w,c
 31146  0116FC  202A               	addwfc	btemp^0,w,c
 31147  0116FE  6E2A               	movwf	btemp^0,c
 31148  011700  0EE9               	movlw	-23
 31149  011702  0060  F0AB  FFE3   	movff	btemp,plusw1
 31150                           
 31151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 31152                           ;stkvar	_w @ sp[(-56)+38]
 31153  011708  50E1               	movf	fsr1l,w,c
 31154  01170A  0FEE               	addlw	-18
 31155  01170C  6ED9               	movwf	fsr2l,c
 31156  01170E  50E2               	movf	fsr1h,w,c
 31157  011710  6EDA               	movwf	fsr2h,c
 31158  011712  0EFF               	movlw	255
 31159  011714  22DA               	addwfc	fsr2h,f,c
 31160  011716  06DE               	decf	postinc2,f,c
 31161  011718  0E00               	movlw	0
 31162  01171A  5ADD               	subwfb	postdec2,f,c
 31163  01171C                     l15843:
 31164                           
 31165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 31166                           ;stkvar	_g @ sp[(-56)+16]
 31167  01171C  0ED8               	movlw	-40
 31168  01171E  006F FF8F FFE6     	movff	plusw1,postinc1
 31169  011724  006F FF8F FFE6     	movff	plusw1,postinc1
 31170  01172A  006F FF8F FFE6     	movff	plusw1,postinc1
 31171  011730  006F FF8F FFE6     	movff	plusw1,postinc1
 31172  011736  ECE5  F0F0         	call	___fpclassifyf	;wreg free
 31173  01173A  042A               	decf	btemp^0,w,c
 31174  01173C  102B               	iorwf	(btemp+1)^0,w,c
 31175  01173E  A4D8               	btfss	status,2,c
 31176  011740  D076               	goto	l15861
 31177  011742  0EBF               	movlw	191
 31178  011744  6E34               	movwf	(btemp+10)^0,c
 31179  011746  0EFF               	movlw	255
 31180  011748  6E35               	movwf	(btemp+11)^0,c
 31181                           
 31182                           ;stkvar	_c @ sp[(-56)+-7]
 31183  01174A  0EC1               	movlw	-63
 31184  01174C  50E3               	movf	plusw1,w,c
 31185  01174E  6E32               	movwf	(btemp+8)^0,c
 31186  011750  6A33               	clrf	(btemp+9)^0,c
 31187  011752  5034               	movf	(btemp+10)^0,w,c
 31188  011754  2632               	addwf	(btemp+8)^0,f,c
 31189  011756  5035               	movf	(btemp+11)^0,w,c
 31190  011758  2233               	addwfc	(btemp+9)^0,f,c
 31191  01175A  5033               	movf	(btemp+9)^0,w,c
 31192  01175C  E106               	bnz	u14940
 31193  01175E  0E1A               	movlw	26
 31194  011760  5C32               	subwf	(btemp+8)^0,w,c
 31195  011762  B0D8               	btfsc	status,0,c
 31196  011764  D002               	goto	u14940
 31197  011766  0E01               	movlw	1
 31198  011768  D001               	goto	u14950
 31199  01176A                     u14940:
 31200  01176A  0E00               	movlw	0
 31201  01176C                     u14950:
 31202  01176C  6E34               	movwf	(btemp+10)^0,c
 31203  01176E  6A35               	clrf	(btemp+11)^0,c
 31204                           
 31205                           ;stkvar	_efgtoa$6638 @ sp[(-56)+8]
 31206  011770  0ED0               	movlw	-48
 31207  011772  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31208  011778  0ED1               	movlw	-47
 31209  01177A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31210                           
 31211                           ;stkvar	_efgtoa$6638 @ sp[(-56)+8]
 31212  011780  0ED0               	movlw	-48
 31213  011782  006F FF8C  F02A    	movff	plusw1,btemp
 31214  011788  0ED1               	movlw	-47
 31215  01178A  50E3               	movf	plusw1,w,c
 31216  01178C  102A               	iorwf	btemp^0,w,c
 31217  01178E  B4D8               	btfsc	status,2,c
 31218  011790  D017               	goto	l15853
 31219                           
 31220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 31221  011792  0EDA               	movlw	low STR_104
 31222  011794  6EE6               	movwf	postinc1,c
 31223  011796  0EFF               	movlw	high STR_104
 31224  011798  6EE6               	movwf	postinc1,c
 31225                           
 31226                           ;stkvar	_n @ sp[(-58)+32]
 31227  01179A  0E54               	movlw	low _dbuf
 31228  01179C  6E34               	movwf	(btemp+10)^0,c
 31229  01179E  0E03               	movlw	high _dbuf
 31230  0117A0  6E35               	movwf	(btemp+11)^0,c
 31231  0117A2  0EE6               	movlw	-26
 31232  0117A4  50E3               	movf	plusw1,w,c
 31233  0117A6  2634               	addwf	(btemp+10)^0,f,c
 31234  0117A8  0EE7               	movlw	-25
 31235  0117AA  50E3               	movf	plusw1,w,c
 31236  0117AC  2235               	addwfc	(btemp+11)^0,f,c
 31237  0117AE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31238  0117B4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31239  0117BA  EC21  F004         	call	_strcpy	;wreg free
 31240                           
 31241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 31242  0117BE  D016               	goto	l15855
 31243  0117C0                     l15853:
 31244                           
 31245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 31246  0117C0  0EE2               	movlw	low STR_105
 31247  0117C2  6EE6               	movwf	postinc1,c
 31248  0117C4  0EFF               	movlw	high STR_105
 31249  0117C6  6EE6               	movwf	postinc1,c
 31250                           
 31251                           ;stkvar	_n @ sp[(-58)+32]
 31252  0117C8  0E54               	movlw	low _dbuf
 31253  0117CA  6E34               	movwf	(btemp+10)^0,c
 31254  0117CC  0E03               	movlw	high _dbuf
 31255  0117CE  6E35               	movwf	(btemp+11)^0,c
 31256  0117D0  0EE6               	movlw	-26
 31257  0117D2  50E3               	movf	plusw1,w,c
 31258  0117D4  2634               	addwf	(btemp+10)^0,f,c
 31259  0117D6  0EE7               	movlw	-25
 31260  0117D8  50E3               	movf	plusw1,w,c
 31261  0117DA  2235               	addwfc	(btemp+11)^0,f,c
 31262  0117DC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31263  0117E2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31264  0117E8  EC21  F004         	call	_strcpy	;wreg free
 31265  0117EC                     l15855:
 31266                           
 31267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 31268                           ;stkvar	_w @ sp[(-56)+38]
 31269  0117EC  50E1               	movf	fsr1l,w,c
 31270  0117EE  0FEE               	addlw	-18
 31271  0117F0  6ED9               	movwf	fsr2l,c
 31272  0117F2  50E2               	movf	fsr1h,w,c
 31273  0117F4  6EDA               	movwf	fsr2h,c
 31274  0117F6  0EFF               	movlw	255
 31275  0117F8  22DA               	addwfc	fsr2h,f,c
 31276  0117FA  0EFD               	movlw	253
 31277  0117FC  26DE               	addwf	postinc2,f,c
 31278  0117FE  0EFF               	movlw	255
 31279  011800  22DD               	addwfc	postdec2,f,c
 31280  011802                     l15857:
 31281                           
 31282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 31283                           ;stkvar	_w @ sp[(-56)+38]
 31284  011802  0EEE               	movlw	-18
 31285  011804  006F FF8F FFE6     	movff	plusw1,postinc1
 31286  01180A  006F FF8F FFE6     	movff	plusw1,postinc1
 31287  011810  0E54               	movlw	low _dbuf
 31288  011812  6EE6               	movwf	postinc1,c
 31289  011814  0E03               	movlw	high _dbuf
 31290  011816  6EE6               	movwf	postinc1,c
 31291                           
 31292                           ;stkvar	_fp @ sp[(-60)+-2]
 31293  011818  0EC2               	movlw	-62
 31294  01181A  006F FF8F FFE6     	movff	plusw1,postinc1
 31295  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 31296  011826  EC0F  F0FF         	call	_pad	;wreg free
 31297  01182A  EF08  F094         	goto	l2532
 31298  01182E                     l15861:
 31299                           
 31300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 31301                           ;stkvar	_g @ sp[(-56)+16]
 31302  01182E  0ED8               	movlw	-40
 31303  011830  006F FF8F FFE6     	movff	plusw1,postinc1
 31304  011836  006F FF8F FFE6     	movff	plusw1,postinc1
 31305  01183C  006F FF8F FFE6     	movff	plusw1,postinc1
 31306  011842  006F FF8F FFE6     	movff	plusw1,postinc1
 31307  011848  ECE5  F0F0         	call	___fpclassifyf	;wreg free
 31308  01184C  502A               	movf	btemp^0,w,c
 31309  01184E  102B               	iorwf	(btemp+1)^0,w,c
 31310  011850  A4D8               	btfss	status,2,c
 31311  011852  D056               	goto	l15879
 31312  011854  0EBF               	movlw	191
 31313  011856  6E34               	movwf	(btemp+10)^0,c
 31314  011858  0EFF               	movlw	255
 31315  01185A  6E35               	movwf	(btemp+11)^0,c
 31316                           
 31317                           ;stkvar	_c @ sp[(-56)+-7]
 31318  01185C  0EC1               	movlw	-63
 31319  01185E  50E3               	movf	plusw1,w,c
 31320  011860  6E32               	movwf	(btemp+8)^0,c
 31321  011862  6A33               	clrf	(btemp+9)^0,c
 31322  011864  5034               	movf	(btemp+10)^0,w,c
 31323  011866  2632               	addwf	(btemp+8)^0,f,c
 31324  011868  5035               	movf	(btemp+11)^0,w,c
 31325  01186A  2233               	addwfc	(btemp+9)^0,f,c
 31326  01186C  5033               	movf	(btemp+9)^0,w,c
 31327  01186E  E106               	bnz	u14980
 31328  011870  0E1A               	movlw	26
 31329  011872  5C32               	subwf	(btemp+8)^0,w,c
 31330  011874  B0D8               	btfsc	status,0,c
 31331  011876  D002               	goto	u14980
 31332  011878  0E01               	movlw	1
 31333  01187A  D001               	goto	u14990
 31334  01187C                     u14980:
 31335  01187C  0E00               	movlw	0
 31336  01187E                     u14990:
 31337  01187E  6E34               	movwf	(btemp+10)^0,c
 31338  011880  6A35               	clrf	(btemp+11)^0,c
 31339                           
 31340                           ;stkvar	_efgtoa$6642 @ sp[(-56)+6]
 31341  011882  0ECE               	movlw	-50
 31342  011884  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31343  01188A  0ECF               	movlw	-49
 31344  01188C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31345                           
 31346                           ;stkvar	_efgtoa$6642 @ sp[(-56)+6]
 31347  011892  0ECE               	movlw	-50
 31348  011894  006F FF8C  F02A    	movff	plusw1,btemp
 31349  01189A  0ECF               	movlw	-49
 31350  01189C  50E3               	movf	plusw1,w,c
 31351  01189E  102A               	iorwf	btemp^0,w,c
 31352  0118A0  B4D8               	btfsc	status,2,c
 31353  0118A2  D017               	goto	l15871
 31354                           
 31355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 31356  0118A4  0EDE               	movlw	low STR_108
 31357  0118A6  6EE6               	movwf	postinc1,c
 31358  0118A8  0EFF               	movlw	high STR_108
 31359  0118AA  6EE6               	movwf	postinc1,c
 31360                           
 31361                           ;stkvar	_n @ sp[(-58)+32]
 31362  0118AC  0E54               	movlw	low _dbuf
 31363  0118AE  6E34               	movwf	(btemp+10)^0,c
 31364  0118B0  0E03               	movlw	high _dbuf
 31365  0118B2  6E35               	movwf	(btemp+11)^0,c
 31366  0118B4  0EE6               	movlw	-26
 31367  0118B6  50E3               	movf	plusw1,w,c
 31368  0118B8  2634               	addwf	(btemp+10)^0,f,c
 31369  0118BA  0EE7               	movlw	-25
 31370  0118BC  50E3               	movf	plusw1,w,c
 31371  0118BE  2235               	addwfc	(btemp+11)^0,f,c
 31372  0118C0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31373  0118C6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31374  0118CC  EC21  F004         	call	_strcpy	;wreg free
 31375                           
 31376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 31377  0118D0  D78D               	goto	l15855
 31378  0118D2                     l15871:
 31379                           
 31380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 31381  0118D2  0EE6               	movlw	low STR_109
 31382  0118D4  6EE6               	movwf	postinc1,c
 31383  0118D6  0EFF               	movlw	high STR_109
 31384  0118D8  6EE6               	movwf	postinc1,c
 31385                           
 31386                           ;stkvar	_n @ sp[(-58)+32]
 31387  0118DA  0E54               	movlw	low _dbuf
 31388  0118DC  6E34               	movwf	(btemp+10)^0,c
 31389  0118DE  0E03               	movlw	high _dbuf
 31390  0118E0  6E35               	movwf	(btemp+11)^0,c
 31391  0118E2  0EE6               	movlw	-26
 31392  0118E4  50E3               	movf	plusw1,w,c
 31393  0118E6  2634               	addwf	(btemp+10)^0,f,c
 31394  0118E8  0EE7               	movlw	-25
 31395  0118EA  50E3               	movf	plusw1,w,c
 31396  0118EC  2235               	addwfc	(btemp+11)^0,f,c
 31397  0118EE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31398  0118F4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31399  0118FA  EC21  F004         	call	_strcpy	;wreg free
 31400  0118FE  D776               	goto	l15855
 31401  011900                     l15879:
 31402                           
 31403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 31404  011900  0E00               	movlw	0
 31405  011902  6E32               	movwf	(btemp+8)^0,c
 31406  011904  0E00               	movlw	0
 31407  011906  6E33               	movwf	(btemp+9)^0,c
 31408  011908  0E80               	movlw	128
 31409  01190A  6E34               	movwf	(btemp+10)^0,c
 31410  01190C  0E3F               	movlw	63
 31411  01190E  6E35               	movwf	(btemp+11)^0,c
 31412                           
 31413                           ;stkvar	_u @ sp[(-56)+12]
 31414  011910  0ED4               	movlw	-44
 31415  011912  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31416  011918  0ED5               	movlw	-43
 31417  01191A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31418  011920  0ED6               	movlw	-42
 31419  011922  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31420  011928  0ED7               	movlw	-41
 31421  01192A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31422                           
 31423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 31424                           ;stkvar	_e @ sp[(-56)+34]
 31425  011930  0EEA               	movlw	-22
 31426  011932  6AE3               	clrf	plusw1,c
 31427  011934  0EEB               	movlw	-21
 31428  011936  6AE3               	clrf	plusw1,c
 31429                           
 31430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 31431  011938  0E00               	movlw	0
 31432  01193A  6EE6               	movwf	postinc1,c
 31433  01193C  0E00               	movlw	0
 31434  01193E  6EE6               	movwf	postinc1,c
 31435  011940  0E00               	movlw	0
 31436  011942  6EE6               	movwf	postinc1,c
 31437  011944  0E00               	movlw	0
 31438  011946  6EE6               	movwf	postinc1,c
 31439                           
 31440                           ;stkvar	_g @ sp[(-60)+16]
 31441  011948  0ED4               	movlw	-44
 31442  01194A  006F FF8F FFE6     	movff	plusw1,postinc1
 31443  011950  006F FF8F FFE6     	movff	plusw1,postinc1
 31444  011956  006F FF8F FFE6     	movff	plusw1,postinc1
 31445  01195C  006F FF8F FFE6     	movff	plusw1,postinc1
 31446  011962  EC8B  F004         	call	___fleq	;wreg free
 31447  011966  A02A               	btfss	btemp& (0+255),0,c
 31448  011968  D039               	goto	l15891
 31449  01196A  D0BC               	goto	u15030
 31450  01196C                     l15887:
 31451                           
 31452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 31453  01196C  0E00               	movlw	0
 31454  01196E  6EE6               	movwf	postinc1,c
 31455  011970  0E00               	movlw	0
 31456  011972  6EE6               	movwf	postinc1,c
 31457  011974  0E20               	movlw	32
 31458  011976  6EE6               	movwf	postinc1,c
 31459  011978  0E41               	movlw	65
 31460  01197A  6EE6               	movwf	postinc1,c
 31461                           
 31462                           ;stkvar	_u @ sp[(-60)+12]
 31463  01197C  0ED0               	movlw	-48
 31464  01197E  006F FF8F FFE6     	movff	plusw1,postinc1
 31465  011984  006F FF8F FFE6     	movff	plusw1,postinc1
 31466  01198A  006F FF8F FFE6     	movff	plusw1,postinc1
 31467  011990  006F FF8F FFE6     	movff	plusw1,postinc1
 31468  011996  EC67  F0B8         	call	___flmul	;wreg free
 31469                           
 31470                           ;stkvar	_u @ sp[(-56)+12]
 31471  01199A  0ED4               	movlw	-44
 31472  01199C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31473  0119A2  0ED5               	movlw	-43
 31474  0119A4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31475  0119AA  0ED6               	movlw	-42
 31476  0119AC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31477  0119B2  0ED7               	movlw	-41
 31478  0119B4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31479                           
 31480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 31481                           ;stkvar	_e @ sp[(-56)+34]
 31482  0119BA  0EEA               	movlw	-22
 31483  0119BC  50E3               	movf	plusw1,w,c
 31484  0119BE  0F01               	addlw	1
 31485  0119C0  6E2A               	movwf	btemp^0,c
 31486  0119C2  0EEA               	movlw	-22
 31487  0119C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31488  0119CA  6A2A               	clrf	btemp^0,c
 31489  0119CC  0EEB               	movlw	-21
 31490  0119CE  50E3               	movf	plusw1,w,c
 31491  0119D0  202A               	addwfc	btemp^0,w,c
 31492  0119D2  6E2A               	movwf	btemp^0,c
 31493  0119D4  0EEB               	movlw	-21
 31494  0119D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31495  0119DC                     l15891:
 31496                           
 31497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 31498  0119DC  0E00               	movlw	0
 31499  0119DE  6EE6               	movwf	postinc1,c
 31500  0119E0  0E00               	movlw	0
 31501  0119E2  6EE6               	movwf	postinc1,c
 31502  0119E4  0E20               	movlw	32
 31503  0119E6  6EE6               	movwf	postinc1,c
 31504  0119E8  0E41               	movlw	65
 31505  0119EA  6EE6               	movwf	postinc1,c
 31506                           
 31507                           ;stkvar	_u @ sp[(-60)+12]
 31508  0119EC  0ED0               	movlw	-48
 31509  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
 31510  0119F4  006F FF8F FFE6     	movff	plusw1,postinc1
 31511  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
 31512  011A00  006F FF8F FFE6     	movff	plusw1,postinc1
 31513  011A06  EC67  F0B8         	call	___flmul	;wreg free
 31514  011A0A  0060  F0AB  FFE6   	movff	btemp,postinc1
 31515  011A10  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31516  011A16  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31517  011A1C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31518                           
 31519                           ;stkvar	_g @ sp[(-60)+16]
 31520  011A22  0ED4               	movlw	-44
 31521  011A24  006F FF8F FFE6     	movff	plusw1,postinc1
 31522  011A2A  006F FF8F FFE6     	movff	plusw1,postinc1
 31523  011A30  006F FF8F FFE6     	movff	plusw1,postinc1
 31524  011A36  006F FF8F FFE6     	movff	plusw1,postinc1
 31525  011A3C  ECE9  F0F6         	call	___flge	;wreg free
 31526  011A40  A02A               	btfss	btemp& (0+255),0,c
 31527  011A42  D032               	goto	l15897
 31528  011A44  D793               	goto	l15887
 31529  011A46                     l15893:
 31530                           
 31531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 31532  011A46  0E00               	movlw	0
 31533  011A48  6EE6               	movwf	postinc1,c
 31534  011A4A  0E00               	movlw	0
 31535  011A4C  6EE6               	movwf	postinc1,c
 31536  011A4E  0E20               	movlw	32
 31537  011A50  6EE6               	movwf	postinc1,c
 31538  011A52  0E41               	movlw	65
 31539  011A54  6EE6               	movwf	postinc1,c
 31540                           
 31541                           ;stkvar	_u @ sp[(-60)+12]
 31542  011A56  0ED0               	movlw	-48
 31543  011A58  006F FF8F FFE6     	movff	plusw1,postinc1
 31544  011A5E  006F FF8F FFE6     	movff	plusw1,postinc1
 31545  011A64  006F FF8F FFE6     	movff	plusw1,postinc1
 31546  011A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 31547  011A70  ECB8  F0C3         	call	___fldiv	;wreg free
 31548                           
 31549                           ;stkvar	_u @ sp[(-56)+12]
 31550  011A74  0ED4               	movlw	-44
 31551  011A76  0060  F0AB  FFE3   	movff	btemp,plusw1
 31552  011A7C  0ED5               	movlw	-43
 31553  011A7E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31554  011A84  0ED6               	movlw	-42
 31555  011A86  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31556  011A8C  0ED7               	movlw	-41
 31557  011A8E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31558                           
 31559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 31560                           ;stkvar	_e @ sp[(-56)+34]
 31561  011A94  50E1               	movf	fsr1l,w,c
 31562  011A96  0FEA               	addlw	-22
 31563  011A98  6ED9               	movwf	fsr2l,c
 31564  011A9A  50E2               	movf	fsr1h,w,c
 31565  011A9C  6EDA               	movwf	fsr2h,c
 31566  011A9E  0EFF               	movlw	255
 31567  011AA0  22DA               	addwfc	fsr2h,f,c
 31568  011AA2  06DE               	decf	postinc2,f,c
 31569  011AA4  0E00               	movlw	0
 31570  011AA6  5ADD               	subwfb	postdec2,f,c
 31571  011AA8                     l15897:
 31572                           
 31573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 31574                           ;stkvar	_u @ sp[(-56)+12]
 31575  011AA8  0ED4               	movlw	-44
 31576  011AAA  006F FF8F FFE6     	movff	plusw1,postinc1
 31577  011AB0  006F FF8F FFE6     	movff	plusw1,postinc1
 31578  011AB6  006F FF8F FFE6     	movff	plusw1,postinc1
 31579  011ABC  006F FF8F FFE6     	movff	plusw1,postinc1
 31580                           
 31581                           ;stkvar	_g @ sp[(-60)+16]
 31582  011AC2  0ED4               	movlw	-44
 31583  011AC4  006F FF8F FFE6     	movff	plusw1,postinc1
 31584  011ACA  006F FF8F FFE6     	movff	plusw1,postinc1
 31585  011AD0  006F FF8F FFE6     	movff	plusw1,postinc1
 31586  011AD6  006F FF8F FFE6     	movff	plusw1,postinc1
 31587  011ADC  ECE9  F0F6         	call	___flge	;wreg free
 31588  011AE0  A02A               	btfss	btemp& (0+255),0,c
 31589  011AE2  D7B1               	goto	l15893
 31590  011AE4                     u15030:
 31591                           
 31592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 31593                           ;stkvar	_c @ sp[(-56)+-7]
 31594  011AE4  0EC1               	movlw	-63
 31595  011AE6  50E3               	movf	plusw1,w,c
 31596  011AE8  6EE6               	movwf	postinc1,c
 31597  011AEA  0E00               	movlw	0
 31598  011AEC  6EE6               	movwf	postinc1,c
 31599  011AEE  EC42  F00B         	call	_tolower	;wreg free
 31600                           
 31601                           ;stkvar	_mode @ sp[(-56)+54]
 31602  011AF2  0EFE               	movlw	-2
 31603  011AF4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31604                           
 31605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 31606                           ;stkvar	_mode @ sp[(-56)+54]
 31607                           ;stkvar	_nmode @ sp[(-56)+55]
 31608  011AFA  0EFE               	movlw	-2
 31609  011AFC  006F FF8C  F02A    	movff	plusw1,btemp
 31610  011B02  0EFF               	movlw	-1
 31611  011B04  0060  F0AB  FFE3   	movff	btemp,plusw1
 31612                           
 31613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 31614                           ;stkvar	_mode @ sp[(-56)+54]
 31615  011B0A  0EFE               	movlw	-2
 31616  011B0C  006F FF8C  F02A    	movff	plusw1,btemp
 31617  011B12  0E67               	movlw	103
 31618  011B14  182A               	xorwf	btemp^0,w,c
 31619  011B16  A4D8               	btfss	status,2,c
 31620  011B18  D025               	goto	l15915
 31621                           
 31622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 31623  011B1A  504C               	movf	_prec^0,w,c
 31624  011B1C  104D               	iorwf	(_prec+1)^0,w,c
 31625  011B1E  A4D8               	btfss	status,2,c
 31626  011B20  D004               	goto	l15909
 31627                           
 31628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 31629  011B22  0E00               	movlw	0
 31630  011B24  6E4D               	movwf	(_prec+1)^0,c
 31631  011B26  0E01               	movlw	1
 31632  011B28  6E4C               	movwf	_prec^0,c
 31633  011B2A                     l15909:
 31634                           
 31635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 31636  011B2A  BE4D               	btfsc	(_prec+1)^0,7,c
 31637  011B2C  D005               	goto	u15060
 31638  011B2E  504D               	movf	(_prec+1)^0,w,c
 31639  011B30  E110               	bnz	l15913
 31640  011B32  044C               	decf	_prec^0,w,c
 31641  011B34  B0D8               	btfsc	status,0,c
 31642  011B36  D00D               	goto	l15913
 31643  011B38                     u15060:
 31644  011B38  0E06               	movlw	6
 31645  011B3A  6E34               	movwf	(btemp+10)^0,c
 31646  011B3C  0E00               	movlw	0
 31647  011B3E  6E35               	movwf	(btemp+11)^0,c
 31648                           
 31649                           ;stkvar	_p @ sp[(-56)+40]
 31650  011B40  0EF0               	movlw	-16
 31651  011B42  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31652  011B48  0EF1               	movlw	-15
 31653  011B4A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31654  011B50  D00C               	goto	l15921
 31655  011B52                     l15913:
 31656                           
 31657                           ;stkvar	_p @ sp[(-56)+40]
 31658  011B52  0EF0               	movlw	-16
 31659  011B54  0060  F133  FFE3   	movff	_prec,plusw1
 31660  011B5A  0EF1               	movlw	-15
 31661  011B5C  0060  F137  FFE3   	movff	_prec+1,plusw1
 31662  011B62  D003               	goto	l15921
 31663  011B64                     l15915:
 31664                           
 31665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 31666  011B64  AE4D               	btfss	(_prec+1)^0,7,c
 31667  011B66  D7F5               	goto	l15913
 31668  011B68  D7E7               	goto	u15060
 31669  011B6A                     l15921:
 31670                           
 31671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 31672                           ;stkvar	_mode @ sp[(-56)+54]
 31673  011B6A  0EFE               	movlw	-2
 31674  011B6C  006F FF8C  F02A    	movff	plusw1,btemp
 31675  011B72  0E67               	movlw	103
 31676  011B74  182A               	xorwf	btemp^0,w,c
 31677  011B76  A4D8               	btfss	status,2,c
 31678  011B78  D02F               	goto	l15931
 31679                           
 31680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 31681                           ;stkvar	_e @ sp[(-56)+34]
 31682  011B7A  0EEB               	movlw	-21
 31683  011B7C  AEE3               	btfss	plusw1,7,c
 31684  011B7E  D00E               	goto	u15090
 31685  011B80  0EEA               	movlw	-22
 31686  011B82  006F FF8C  F02A    	movff	plusw1,btemp
 31687  011B88  0EFC               	movlw	252
 31688  011B8A  5E2A               	subwf	btemp^0,f,c
 31689  011B8C  0EEB               	movlw	-21
 31690  011B8E  006F FF8C  F02A    	movff	plusw1,btemp
 31691  011B94  0EFF               	movlw	255
 31692  011B96  5A2A               	subwfb	btemp^0,f,c
 31693  011B98  A0D8               	btfss	status,0,c
 31694  011B9A  D018               	goto	l15929
 31695  011B9C                     u15090:
 31696                           
 31697                           ;stkvar	_e @ sp[(-56)+34]
 31698                           ;stkvar	_p @ sp[(-56)+40]
 31699  011B9C  0EF0               	movlw	-16
 31700  011B9E  50E3               	movf	plusw1,w,c
 31701  011BA0  0FFF               	addlw	255
 31702  011BA2  6E34               	movwf	(btemp+10)^0,c
 31703  011BA4  0EF1               	movlw	-15
 31704  011BA6  006F FF8C  F035    	movff	plusw1,btemp+11
 31705  011BAC  0EFF               	movlw	255
 31706  011BAE  2235               	addwfc	(btemp+11)^0,f,c
 31707  011BB0  0EEA               	movlw	-22
 31708  011BB2  50E3               	movf	plusw1,w,c
 31709  011BB4  5C34               	subwf	(btemp+10)^0,w,c
 31710  011BB6  5035               	movf	(btemp+11)^0,w,c
 31711  011BB8  0A80               	xorlw	128
 31712  011BBA  6E2A               	movwf	btemp^0,c
 31713  011BBC  0EEB               	movlw	-21
 31714  011BBE  50E3               	movf	plusw1,w,c
 31715  011BC0  0A80               	xorlw	128
 31716  011BC2  582A               	subwfb	btemp^0,w,c
 31717  011BC4  A0D8               	btfss	status,0,c
 31718  011BC6  D002               	goto	l15929
 31719                           
 31720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 31721  011BC8  0E66               	movlw	102
 31722  011BCA  D001               	goto	L33
 31723  011BCC                     l15929:
 31724                           
 31725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 31726  011BCC  0E65               	movlw	101
 31727  011BCE                     L33:
 31728  011BCE  6E35               	movwf	(btemp+11)^0,c
 31729                           
 31730                           ;stkvar	_nmode @ sp[(-56)+55]
 31731  011BD0  0EFF               	movlw	-1
 31732  011BD2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31733  011BD8                     l15931:
 31734                           
 31735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 31736                           ;stkvar	_p @ sp[(-56)+40]
 31737                           ;stkvar	_m @ sp[(-56)+48]
 31738  011BD8  0EF0               	movlw	-16
 31739  011BDA  006F FF8C  F02A    	movff	plusw1,btemp
 31740  011BE0  0EF8               	movlw	-8
 31741  011BE2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31742  011BE8  0EF1               	movlw	-15
 31743  011BEA  006F FF8C  F02A    	movff	plusw1,btemp
 31744  011BF0  0EF9               	movlw	-7
 31745  011BF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31746                           
 31747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 31748                           ;stkvar	_mode @ sp[(-56)+54]
 31749  011BF8  0EFE               	movlw	-2
 31750  011BFA  006F FF8C  F02A    	movff	plusw1,btemp
 31751  011C00  0E67               	movlw	103
 31752  011C02  182A               	xorwf	btemp^0,w,c
 31753  011C04  A4D8               	btfss	status,2,c
 31754  011C06  D00B               	goto	u15130
 31755                           
 31756                           ;stkvar	_nmode @ sp[(-56)+55]
 31757  011C08  0EFF               	movlw	-1
 31758  011C0A  006F FF8C  F02A    	movff	plusw1,btemp
 31759  011C10  0E66               	movlw	102
 31760  011C12  182A               	xorwf	btemp^0,w,c
 31761  011C14  A4D8               	btfss	status,2,c
 31762  011C16  D014               	goto	l2561
 31763                           
 31764                           ;stkvar	_e @ sp[(-56)+34]
 31765  011C18  0EEB               	movlw	-21
 31766  011C1A  AEE3               	btfss	plusw1,7,c
 31767  011C1C  D011               	goto	l2561
 31768  011C1E                     u15130:
 31769                           
 31770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 31771                           ;stkvar	_m @ sp[(-56)+48]
 31772  011C1E  0EF8               	movlw	-8
 31773  011C20  50E3               	movf	plusw1,w,c
 31774  011C22  0F01               	addlw	1
 31775  011C24  6E2A               	movwf	btemp^0,c
 31776  011C26  0EF8               	movlw	-8
 31777  011C28  0060  F0AB  FFE3   	movff	btemp,plusw1
 31778  011C2E  6A2A               	clrf	btemp^0,c
 31779  011C30  0EF9               	movlw	-7
 31780  011C32  50E3               	movf	plusw1,w,c
 31781  011C34  202A               	addwfc	btemp^0,w,c
 31782  011C36  6E2A               	movwf	btemp^0,c
 31783  011C38  0EF9               	movlw	-7
 31784  011C3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31785  011C40                     l2561:
 31786                           
 31787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 31788                           ;stkvar	_nmode @ sp[(-56)+55]
 31789  011C40  0EFF               	movlw	-1
 31790  011C42  006F FF8C  F02A    	movff	plusw1,btemp
 31791  011C48  0E66               	movlw	102
 31792  011C4A  182A               	xorwf	btemp^0,w,c
 31793  011C4C  A4D8               	btfss	status,2,c
 31794  011C4E  D03B               	goto	l15951
 31795                           
 31796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 31797                           ;stkvar	_e @ sp[(-56)+34]
 31798  011C50  0EEB               	movlw	-21
 31799  011C52  AEE3               	btfss	plusw1,7,c
 31800  011C54  D01C               	goto	l15947
 31801                           
 31802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 31803  011C56  0E00               	movlw	0
 31804  011C58  6E32               	movwf	(btemp+8)^0,c
 31805  011C5A  0E00               	movlw	0
 31806  011C5C  6E33               	movwf	(btemp+9)^0,c
 31807  011C5E  0E80               	movlw	128
 31808  011C60  6E34               	movwf	(btemp+10)^0,c
 31809  011C62  0E3F               	movlw	63
 31810  011C64  6E35               	movwf	(btemp+11)^0,c
 31811                           
 31812                           ;stkvar	_u @ sp[(-56)+12]
 31813  011C66  0ED4               	movlw	-44
 31814  011C68  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31815  011C6E  0ED5               	movlw	-43
 31816  011C70  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31817  011C76  0ED6               	movlw	-42
 31818  011C78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31819  011C7E  0ED7               	movlw	-41
 31820  011C80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31821                           
 31822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 31823                           ;stkvar	_e @ sp[(-56)+34]
 31824  011C86  0EEA               	movlw	-22
 31825  011C88  6AE3               	clrf	plusw1,c
 31826  011C8A  0EEB               	movlw	-21
 31827  011C8C  6AE3               	clrf	plusw1,c
 31828  011C8E                     l15947:
 31829                           
 31830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 31831                           ;stkvar	_mode @ sp[(-56)+54]
 31832  011C8E  0EFE               	movlw	-2
 31833  011C90  006F FF8C  F02A    	movff	plusw1,btemp
 31834  011C96  0E67               	movlw	103
 31835  011C98  182A               	xorwf	btemp^0,w,c
 31836  011C9A  B4D8               	btfsc	status,2,c
 31837  011C9C  D014               	goto	l15951
 31838                           
 31839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 31840                           ;stkvar	_e @ sp[(-56)+34]
 31841                           ;stkvar	_m @ sp[(-56)+48]
 31842  011C9E  0EF8               	movlw	-8
 31843  011CA0  50E3               	movf	plusw1,w,c
 31844  011CA2  6E2A               	movwf	btemp^0,c
 31845  011CA4  0EEA               	movlw	-22
 31846  011CA6  50E3               	movf	plusw1,w,c
 31847  011CA8  262A               	addwf	btemp^0,f,c
 31848  011CAA  0EF8               	movlw	-8
 31849  011CAC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31850  011CB2  0EF9               	movlw	-7
 31851  011CB4  50E3               	movf	plusw1,w,c
 31852  011CB6  6E2A               	movwf	btemp^0,c
 31853  011CB8  0EEB               	movlw	-21
 31854  011CBA  50E3               	movf	plusw1,w,c
 31855  011CBC  222A               	addwfc	btemp^0,f,c
 31856  011CBE  0EF9               	movlw	-7
 31857  011CC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31858  011CC6                     l15951:
 31859                           
 31860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 31861                           ;stkvar	_i @ sp[(-56)+36]
 31862  011CC6  0EEC               	movlw	-20
 31863  011CC8  6AE3               	clrf	plusw1,c
 31864  011CCA  0EED               	movlw	-19
 31865  011CCC  6AE3               	clrf	plusw1,c
 31866                           
 31867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 31868                           ;stkvar	_g @ sp[(-56)+16]
 31869  011CCE  0ED8               	movlw	-40
 31870  011CD0  006F FF8C  F032    	movff	plusw1,btemp+8
 31871  011CD6  0ED9               	movlw	-39
 31872  011CD8  006F FF8C  F033    	movff	plusw1,btemp+9
 31873  011CDE  0EDA               	movlw	-38
 31874  011CE0  006F FF8C  F034    	movff	plusw1,btemp+10
 31875  011CE6  0EDB               	movlw	-37
 31876  011CE8  006F FF8C  F035    	movff	plusw1,btemp+11
 31877                           
 31878                           ;stkvar	_h @ sp[(-56)+24]
 31879  011CEE  0EE0               	movlw	-32
 31880  011CF0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31881  011CF6  0EE1               	movlw	-31
 31882  011CF8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31883  011CFE  0EE2               	movlw	-30
 31884  011D00  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31885  011D06  0EE3               	movlw	-29
 31886  011D08  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31887                           
 31888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 31889                           ;stkvar	_u @ sp[(-56)+12]
 31890  011D0E  0ED4               	movlw	-44
 31891  011D10  006F FF8C  F032    	movff	plusw1,btemp+8
 31892  011D16  0ED5               	movlw	-43
 31893  011D18  006F FF8C  F033    	movff	plusw1,btemp+9
 31894  011D1E  0ED6               	movlw	-42
 31895  011D20  006F FF8C  F034    	movff	plusw1,btemp+10
 31896  011D26  0ED7               	movlw	-41
 31897  011D28  006F FF8C  F035    	movff	plusw1,btemp+11
 31898                           
 31899                           ;stkvar	_ou @ sp[(-56)+28]
 31900  011D2E  0EE4               	movlw	-28
 31901  011D30  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31902  011D36  0EE5               	movlw	-27
 31903  011D38  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31904  011D3E  0EE6               	movlw	-26
 31905  011D40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31906  011D46  0EE7               	movlw	-25
 31907  011D48  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31908                           
 31909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31910  011D4E  D0D6               	goto	l15967
 31911  011D50                     l15957:
 31912                           
 31913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 31914                           ;stkvar	_u @ sp[(-56)+12]
 31915  011D50  0ED4               	movlw	-44
 31916  011D52  006F FF8F FFE6     	movff	plusw1,postinc1
 31917  011D58  006F FF8F FFE6     	movff	plusw1,postinc1
 31918  011D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 31919  011D64  006F FF8F FFE6     	movff	plusw1,postinc1
 31920                           
 31921                           ;stkvar	_h @ sp[(-60)+24]
 31922  011D6A  0EDC               	movlw	-36
 31923  011D6C  006F FF8F FFE6     	movff	plusw1,postinc1
 31924  011D72  006F FF8F FFE6     	movff	plusw1,postinc1
 31925  011D78  006F FF8F FFE6     	movff	plusw1,postinc1
 31926  011D7E  006F FF8F FFE6     	movff	plusw1,postinc1
 31927  011D84  ECB8  F0C3         	call	___fldiv	;wreg free
 31928  011D88  0060  F0AB  FFE6   	movff	btemp,postinc1
 31929  011D8E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31930  011D94  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31931  011D9A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31932  011DA0  EC62  F0D3         	call	_floorf	;wreg free
 31933                           
 31934                           ;stkvar	_l @ sp[(-56)+20]
 31935  011DA4  0EDC               	movlw	-36
 31936  011DA6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31937  011DAC  0EDD               	movlw	-35
 31938  011DAE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31939  011DB4  0EDE               	movlw	-34
 31940  011DB6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31941  011DBC  0EDF               	movlw	-33
 31942  011DBE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31943                           
 31944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 31945                           ;stkvar	_l @ sp[(-56)+20]
 31946  011DC4  0EDC               	movlw	-36
 31947  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 31948  011DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 31949  011DD2  006F FF8F FFE6     	movff	plusw1,postinc1
 31950  011DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 31951  011DDE  EC7D  F0F5         	call	___fltol	;wreg free
 31952  011DE2  0060  F0A8  F034   	movff	btemp,btemp+10
 31953  011DE8  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31954                           
 31955                           ;stkvar	_d @ sp[(-56)+44]
 31956  011DEE  0EF4               	movlw	-12
 31957  011DF0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31958  011DF6  0EF5               	movlw	-11
 31959  011DF8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31960                           
 31961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 31962                           ;stkvar	_u @ sp[(-56)+12]
 31963  011DFE  0ED4               	movlw	-44
 31964  011E00  006F FF8F FFE6     	movff	plusw1,postinc1
 31965  011E06  006F FF8F FFE6     	movff	plusw1,postinc1
 31966  011E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 31967  011E12  006F FF8F FFE6     	movff	plusw1,postinc1
 31968                           
 31969                           ;stkvar	_l @ sp[(-60)+20]
 31970  011E18  0ED8               	movlw	-40
 31971  011E1A  006F FF8F FFE6     	movff	plusw1,postinc1
 31972  011E20  006F FF8F FFE6     	movff	plusw1,postinc1
 31973  011E26  006F FF8F FFE6     	movff	plusw1,postinc1
 31974  011E2C  006F FF8F FFE6     	movff	plusw1,postinc1
 31975  011E32  EC67  F0B8         	call	___flmul	;wreg free
 31976  011E36  0060  F0AB  FFE6   	movff	btemp,postinc1
 31977  011E3C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31978  011E42  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31979  011E48  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31980                           
 31981                           ;stkvar	_h @ sp[(-60)+24]
 31982  011E4E  0EDC               	movlw	-36
 31983  011E50  006F FF8F FFE6     	movff	plusw1,postinc1
 31984  011E56  006F FF8F FFE6     	movff	plusw1,postinc1
 31985  011E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 31986  011E62  006F FF8F FFE6     	movff	plusw1,postinc1
 31987  011E68  ECA3  F011         	call	___flsub	;wreg free
 31988                           
 31989                           ;stkvar	_h @ sp[(-56)+24]
 31990  011E6C  0EE0               	movlw	-32
 31991  011E6E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31992  011E74  0EE1               	movlw	-31
 31993  011E76  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31994  011E7C  0EE2               	movlw	-30
 31995  011E7E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31996  011E84  0EE3               	movlw	-29
 31997  011E86  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31998                           
 31999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 32000  011E8C  0E00               	movlw	0
 32001  011E8E  6EE6               	movwf	postinc1,c
 32002  011E90  0E00               	movlw	0
 32003  011E92  6EE6               	movwf	postinc1,c
 32004  011E94  0E20               	movlw	32
 32005  011E96  6EE6               	movwf	postinc1,c
 32006  011E98  0E41               	movlw	65
 32007  011E9A  6EE6               	movwf	postinc1,c
 32008                           
 32009                           ;stkvar	_u @ sp[(-60)+12]
 32010  011E9C  0ED0               	movlw	-48
 32011  011E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 32012  011EA4  006F FF8F FFE6     	movff	plusw1,postinc1
 32013  011EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 32014  011EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 32015  011EB6  ECB8  F0C3         	call	___fldiv	;wreg free
 32016                           
 32017                           ;stkvar	_u @ sp[(-56)+12]
 32018  011EBA  0ED4               	movlw	-44
 32019  011EBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32020  011EC2  0ED5               	movlw	-43
 32021  011EC4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32022  011ECA  0ED6               	movlw	-42
 32023  011ECC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32024  011ED2  0ED7               	movlw	-41
 32025  011ED4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32026                           
 32027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 32028                           ;stkvar	_i @ sp[(-56)+36]
 32029  011EDA  0EEC               	movlw	-20
 32030  011EDC  50E3               	movf	plusw1,w,c
 32031  011EDE  0F01               	addlw	1
 32032  011EE0  6E2A               	movwf	btemp^0,c
 32033  011EE2  0EEC               	movlw	-20
 32034  011EE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 32035  011EEA  6A2A               	clrf	btemp^0,c
 32036  011EEC  0EED               	movlw	-19
 32037  011EEE  50E3               	movf	plusw1,w,c
 32038  011EF0  202A               	addwfc	btemp^0,w,c
 32039  011EF2  6E2A               	movwf	btemp^0,c
 32040  011EF4  0EED               	movlw	-19
 32041  011EF6  0060  F0AB  FFE3   	movff	btemp,plusw1
 32042  011EFC                     l15967:
 32043                           
 32044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 32045                           ;stkvar	_m @ sp[(-56)+48]
 32046                           ;stkvar	_i @ sp[(-56)+36]
 32047  011EFC  50E1               	movf	fsr1l,w,c
 32048  011EFE  0FEC               	addlw	-20
 32049  011F00  6ED9               	movwf	fsr2l,c
 32050  011F02  50E2               	movf	fsr1h,w,c
 32051  011F04  6EDA               	movwf	fsr2h,c
 32052  011F06  0EFF               	movlw	255
 32053  011F08  22DA               	addwfc	fsr2h,f,c
 32054  011F0A  0EF8               	movlw	-8
 32055  011F0C  50E3               	movf	plusw1,w,c
 32056  011F0E  5CDE               	subwf	postinc2,w,c
 32057  011F10  50DE               	movf	postinc2,w,c
 32058  011F12  0A80               	xorlw	128
 32059  011F14  6E2A               	movwf	btemp^0,c
 32060  011F16  0EF9               	movlw	-7
 32061  011F18  50E3               	movf	plusw1,w,c
 32062  011F1A  0A80               	xorlw	128
 32063  011F1C  582A               	subwfb	btemp^0,w,c
 32064  011F1E  A0D8               	btfss	status,0,c
 32065  011F20  D717               	goto	l15957
 32066                           
 32067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 32068  011F22  0E00               	movlw	0
 32069  011F24  6EE6               	movwf	postinc1,c
 32070  011F26  0E00               	movlw	0
 32071  011F28  6EE6               	movwf	postinc1,c
 32072  011F2A  0EA0               	movlw	160
 32073  011F2C  6EE6               	movwf	postinc1,c
 32074  011F2E  0E40               	movlw	64
 32075  011F30  6EE6               	movwf	postinc1,c
 32076                           
 32077                           ;stkvar	_u @ sp[(-60)+12]
 32078  011F32  0ED0               	movlw	-48
 32079  011F34  006F FF8F FFE6     	movff	plusw1,postinc1
 32080  011F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 32081  011F40  006F FF8F FFE6     	movff	plusw1,postinc1
 32082  011F46  006F FF8F FFE6     	movff	plusw1,postinc1
 32083  011F4C  EC67  F0B8         	call	___flmul	;wreg free
 32084                           
 32085                           ;stkvar	_l @ sp[(-56)+20]
 32086  011F50  0EDC               	movlw	-36
 32087  011F52  0060  F0AB  FFE3   	movff	btemp,plusw1
 32088  011F58  0EDD               	movlw	-35
 32089  011F5A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32090  011F60  0EDE               	movlw	-34
 32091  011F62  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32092  011F68  0EDF               	movlw	-33
 32093  011F6A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32094                           
 32095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 32096                           ;stkvar	_l @ sp[(-56)+20]
 32097  011F70  0EDC               	movlw	-36
 32098  011F72  006F FF8F FFE6     	movff	plusw1,postinc1
 32099  011F78  006F FF8F FFE6     	movff	plusw1,postinc1
 32100  011F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 32101  011F84  006F FF8F FFE6     	movff	plusw1,postinc1
 32102                           
 32103                           ;stkvar	_h @ sp[(-60)+24]
 32104  011F8A  0EDC               	movlw	-36
 32105  011F8C  006F FF8F FFE6     	movff	plusw1,postinc1
 32106  011F92  006F FF8F FFE6     	movff	plusw1,postinc1
 32107  011F98  006F FF8F FFE6     	movff	plusw1,postinc1
 32108  011F9E  006F FF8F FFE6     	movff	plusw1,postinc1
 32109  011FA4  ECE9  F0F6         	call	___flge	;wreg free
 32110  011FA8  A02A               	btfss	btemp& (0+255),0,c
 32111  011FAA  D021               	goto	u15200
 32112                           
 32113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 32114                           ;stkvar	_l @ sp[(-56)+20]
 32115                           
 32116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 32117                           
 32118                           ;stkvar	_l @ sp[(-56)+20]
 32119                           
 32120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 32121  011FAC  0EDC               	movlw	-36
 32122  011FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 32123  011FB4  006F FF8F FFE6     	movff	plusw1,postinc1
 32124  011FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 32125  011FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 32126                           
 32127                           ;stkvar	_h @ sp[(-60)+24]
 32128  011FC6  0EDC               	movlw	-36
 32129  011FC8  006F FF8F FFE6     	movff	plusw1,postinc1
 32130  011FCE  006F FF8F FFE6     	movff	plusw1,postinc1
 32131  011FD4  006F FF8F FFE6     	movff	plusw1,postinc1
 32132  011FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 32133  011FE0  EC8B  F004         	call	___fleq	;wreg free
 32134  011FE4  A02A               	btfss	btemp& (0+255),0,c
 32135  011FE6  D01B               	goto	l15981
 32136                           
 32137                           ;stkvar	_d @ sp[(-56)+44]
 32138  011FE8  0EF4               	movlw	-12
 32139  011FEA  B0E3               	btfsc	plusw1,0,c
 32140  011FEC  D018               	goto	l15981
 32141  011FEE                     u15200:
 32142                           
 32143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 32144  011FEE  0E00               	movlw	0
 32145  011FF0  6E32               	movwf	(btemp+8)^0,c
 32146  011FF2  0E00               	movlw	0
 32147  011FF4  6E33               	movwf	(btemp+9)^0,c
 32148  011FF6  0E00               	movlw	0
 32149  011FF8  6E34               	movwf	(btemp+10)^0,c
 32150  011FFA  0E00               	movlw	0
 32151  011FFC  6E35               	movwf	(btemp+11)^0,c
 32152                           
 32153                           ;stkvar	_l @ sp[(-56)+20]
 32154  011FFE  0EDC               	movlw	-36
 32155  012000  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32156  012006  0EDD               	movlw	-35
 32157  012008  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32158  01200E  0EDE               	movlw	-34
 32159  012010  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32160  012016  0EDF               	movlw	-33
 32161  012018  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32162  01201E                     l15981:
 32163                           
 32164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 32165                           ;stkvar	_l @ sp[(-56)+20]
 32166  01201E  0EDC               	movlw	-36
 32167  012020  006F FF8F FFE6     	movff	plusw1,postinc1
 32168  012026  006F FF8F FFE6     	movff	plusw1,postinc1
 32169  01202C  006F FF8F FFE6     	movff	plusw1,postinc1
 32170  012032  006F FF8F FFE6     	movff	plusw1,postinc1
 32171                           
 32172                           ;stkvar	_g @ sp[(-60)+16]
 32173  012038  0ED4               	movlw	-44
 32174  01203A  006F FF8F FFE6     	movff	plusw1,postinc1
 32175  012040  006F FF8F FFE6     	movff	plusw1,postinc1
 32176  012046  006F FF8F FFE6     	movff	plusw1,postinc1
 32177  01204C  006F FF8F FFE6     	movff	plusw1,postinc1
 32178  012052  EC7C  F0BC         	call	___fladd	;wreg free
 32179                           
 32180                           ;stkvar	_h @ sp[(-56)+24]
 32181  012056  0EE0               	movlw	-32
 32182  012058  0060  F0AB  FFE3   	movff	btemp,plusw1
 32183  01205E  0EE1               	movlw	-31
 32184  012060  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32185  012066  0EE2               	movlw	-30
 32186  012068  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32187  01206E  0EE3               	movlw	-29
 32188  012070  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32189                           
 32190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 32191                           ;stkvar	_ou @ sp[(-56)+28]
 32192  012076  0EE4               	movlw	-28
 32193  012078  006F FF8C  F032    	movff	plusw1,btemp+8
 32194  01207E  0EE5               	movlw	-27
 32195  012080  006F FF8C  F033    	movff	plusw1,btemp+9
 32196  012086  0EE6               	movlw	-26
 32197  012088  006F FF8C  F034    	movff	plusw1,btemp+10
 32198  01208E  0EE7               	movlw	-25
 32199  012090  006F FF8C  F035    	movff	plusw1,btemp+11
 32200                           
 32201                           ;stkvar	_u @ sp[(-56)+12]
 32202  012096  0ED4               	movlw	-44
 32203  012098  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32204  01209E  0ED5               	movlw	-43
 32205  0120A0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32206  0120A6  0ED6               	movlw	-42
 32207  0120A8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32208  0120AE  0ED7               	movlw	-41
 32209  0120B0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32210                           
 32211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 32212                           ;stkvar	_nmode @ sp[(-56)+55]
 32213  0120B6  0EFF               	movlw	-1
 32214  0120B8  006F FF8C  F02A    	movff	plusw1,btemp
 32215  0120BE  0E65               	movlw	101
 32216  0120C0  182A               	xorwf	btemp^0,w,c
 32217  0120C2  B4D8               	btfsc	status,2,c
 32218  0120C4  D011               	goto	l15989
 32219                           
 32220                           ;stkvar	_e @ sp[(-56)+34]
 32221                           ;stkvar	_ne @ sp[(-56)+46]
 32222  0120C6  0EEA               	movlw	-22
 32223  0120C8  006F FF8C  F02A    	movff	plusw1,btemp
 32224  0120CE  0EF6               	movlw	-10
 32225  0120D0  0060  F0AB  FFE3   	movff	btemp,plusw1
 32226  0120D6  0EEB               	movlw	-21
 32227  0120D8  006F FF8C  F02A    	movff	plusw1,btemp
 32228  0120DE  0EF7               	movlw	-9
 32229  0120E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 32230  0120E6  D004               	goto	l2576
 32231  0120E8                     l15989:
 32232                           
 32233                           ;stkvar	_ne @ sp[(-56)+46]
 32234  0120E8  0EF6               	movlw	-10
 32235  0120EA  6AE3               	clrf	plusw1,c
 32236  0120EC  0EF7               	movlw	-9
 32237  0120EE  6AE3               	clrf	plusw1,c
 32238  0120F0                     l2576:
 32239                           
 32240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 32241                           ;stkvar	_pp @ sp[(-56)+50]
 32242  0120F0  0EFA               	movlw	-6
 32243  0120F2  6AE3               	clrf	plusw1,c
 32244  0120F4  0EFB               	movlw	-5
 32245  0120F6  6AE3               	clrf	plusw1,c
 32246                           
 32247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 32248                           ;stkvar	_t @ sp[(-56)+52]
 32249  0120F8  0EFC               	movlw	-4
 32250  0120FA  6AE3               	clrf	plusw1,c
 32251  0120FC  0EFD               	movlw	-3
 32252  0120FE  6AE3               	clrf	plusw1,c
 32253                           
 32254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 32255                           ;stkvar	_i @ sp[(-56)+36]
 32256  012100  0EEC               	movlw	-20
 32257  012102  6AE3               	clrf	plusw1,c
 32258  012104  0EED               	movlw	-19
 32259  012106  6AE3               	clrf	plusw1,c
 32260                           
 32261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 32262  012108  D1B7               	goto	l16041
 32263  01210A                     l15991:
 32264                           
 32265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 32266                           ;stkvar	_u @ sp[(-56)+12]
 32267  01210A  0ED4               	movlw	-44
 32268  01210C  006F FF8F FFE6     	movff	plusw1,postinc1
 32269  012112  006F FF8F FFE6     	movff	plusw1,postinc1
 32270  012118  006F FF8F FFE6     	movff	plusw1,postinc1
 32271  01211E  006F FF8F FFE6     	movff	plusw1,postinc1
 32272                           
 32273                           ;stkvar	_h @ sp[(-60)+24]
 32274  012124  0EDC               	movlw	-36
 32275  012126  006F FF8F FFE6     	movff	plusw1,postinc1
 32276  01212C  006F FF8F FFE6     	movff	plusw1,postinc1
 32277  012132  006F FF8F FFE6     	movff	plusw1,postinc1
 32278  012138  006F FF8F FFE6     	movff	plusw1,postinc1
 32279  01213E  ECB8  F0C3         	call	___fldiv	;wreg free
 32280  012142  0060  F0AB  FFE6   	movff	btemp,postinc1
 32281  012148  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 32282  01214E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 32283  012154  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32284  01215A  EC62  F0D3         	call	_floorf	;wreg free
 32285                           
 32286                           ;stkvar	_l @ sp[(-56)+20]
 32287  01215E  0EDC               	movlw	-36
 32288  012160  0060  F0AB  FFE3   	movff	btemp,plusw1
 32289  012166  0EDD               	movlw	-35
 32290  012168  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32291  01216E  0EDE               	movlw	-34
 32292  012170  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32293  012176  0EDF               	movlw	-33
 32294  012178  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32295                           
 32296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 32297                           ;stkvar	_l @ sp[(-56)+20]
 32298  01217E  0EDC               	movlw	-36
 32299  012180  006F FF8F FFE6     	movff	plusw1,postinc1
 32300  012186  006F FF8F FFE6     	movff	plusw1,postinc1
 32301  01218C  006F FF8F FFE6     	movff	plusw1,postinc1
 32302  012192  006F FF8F FFE6     	movff	plusw1,postinc1
 32303  012198  EC7D  F0F5         	call	___fltol	;wreg free
 32304  01219C  0060  F0A8  F034   	movff	btemp,btemp+10
 32305  0121A2  0060  F0AC  F035   	movff	btemp+1,btemp+11
 32306                           
 32307                           ;stkvar	_d @ sp[(-56)+44]
 32308  0121A8  0EF4               	movlw	-12
 32309  0121AA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32310  0121B0  0EF5               	movlw	-11
 32311  0121B2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32312                           
 32313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 32314  0121B8  B84E               	btfsc	_flags^0,4,c
 32315  0121BA  D026               	goto	l16005
 32316                           
 32317                           ;stkvar	_d @ sp[(-56)+44]
 32318  0121BC  0EF4               	movlw	-12
 32319  0121BE  006F FF8C  F02A    	movff	plusw1,btemp
 32320  0121C4  0EF5               	movlw	-11
 32321  0121C6  50E3               	movf	plusw1,w,c
 32322  0121C8  102A               	iorwf	btemp^0,w,c
 32323  0121CA  A4D8               	btfss	status,2,c
 32324  0121CC  D01D               	goto	l16005
 32325                           
 32326                           ;stkvar	_mode @ sp[(-56)+54]
 32327  0121CE  0EFE               	movlw	-2
 32328  0121D0  006F FF8C  F02A    	movff	plusw1,btemp
 32329  0121D6  0E67               	movlw	103
 32330  0121D8  182A               	xorwf	btemp^0,w,c
 32331  0121DA  A4D8               	btfss	status,2,c
 32332  0121DC  D015               	goto	l16005
 32333                           
 32334                           ;stkvar	_ne @ sp[(-56)+46]
 32335  0121DE  0EF7               	movlw	-9
 32336  0121E0  AEE3               	btfss	plusw1,7,c
 32337  0121E2  D012               	goto	l16005
 32338                           
 32339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 32340                           ;stkvar	_t @ sp[(-56)+52]
 32341  0121E4  0EFC               	movlw	-4
 32342  0121E6  50E3               	movf	plusw1,w,c
 32343  0121E8  0F01               	addlw	1
 32344  0121EA  6E2A               	movwf	btemp^0,c
 32345  0121EC  0EFC               	movlw	-4
 32346  0121EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 32347  0121F4  6A2A               	clrf	btemp^0,c
 32348  0121F6  0EFD               	movlw	-3
 32349  0121F8  50E3               	movf	plusw1,w,c
 32350  0121FA  202A               	addwfc	btemp^0,w,c
 32351  0121FC  6E2A               	movwf	btemp^0,c
 32352  0121FE  0EFD               	movlw	-3
 32353  012200  0060  F0AB  FFE3   	movff	btemp,plusw1
 32354                           
 32355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 32356  012206  D0AF               	goto	l16033
 32357  012208                     l16005:
 32358                           
 32359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 32360                           ;stkvar	_pp @ sp[(-56)+50]
 32361  012208  0EFA               	movlw	-6
 32362  01220A  006F FF8C  F02A    	movff	plusw1,btemp
 32363  012210  0EFB               	movlw	-5
 32364  012212  50E3               	movf	plusw1,w,c
 32365  012214  102A               	iorwf	btemp^0,w,c
 32366  012216  A4D8               	btfss	status,2,c
 32367  012218  D070               	goto	l16025
 32368                           
 32369                           ;stkvar	_ne @ sp[(-56)+46]
 32370  01221A  0EF7               	movlw	-9
 32371  01221C  AEE3               	btfss	plusw1,7,c
 32372  01221E  D06D               	goto	l16025
 32373                           
 32374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 32375                           ;stkvar	_n @ sp[(-56)+32]
 32376  012220  0EE8               	movlw	-24
 32377  012222  006F FF8C  F034    	movff	plusw1,btemp+10
 32378  012228  0EE9               	movlw	-23
 32379  01222A  006F FF8C  F035    	movff	plusw1,btemp+11
 32380  012230  0E54               	movlw	low _dbuf
 32381  012232  2434               	addwf	(btemp+10)^0,w,c
 32382  012234  6ED9               	movwf	fsr2l,c
 32383  012236  0E03               	movlw	high _dbuf
 32384  012238  2035               	addwfc	(btemp+11)^0,w,c
 32385  01223A  6EDA               	movwf	fsr2h,c
 32386  01223C  0E2E               	movlw	46
 32387  01223E  6EDF               	movwf	indf2,c
 32388                           
 32389                           ;stkvar	_n @ sp[(-56)+32]
 32390  012240  0EE8               	movlw	-24
 32391  012242  50E3               	movf	plusw1,w,c
 32392  012244  0F01               	addlw	1
 32393  012246  6E2A               	movwf	btemp^0,c
 32394  012248  0EE8               	movlw	-24
 32395  01224A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32396  012250  6A2A               	clrf	btemp^0,c
 32397  012252  0EE9               	movlw	-23
 32398  012254  50E3               	movf	plusw1,w,c
 32399  012256  202A               	addwfc	btemp^0,w,c
 32400  012258  6E2A               	movwf	btemp^0,c
 32401  01225A  0EE9               	movlw	-23
 32402  01225C  0060  F0AB  FFE3   	movff	btemp,plusw1
 32403                           
 32404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 32405                           ;stkvar	_w @ sp[(-56)+38]
 32406  012262  50E1               	movf	fsr1l,w,c
 32407  012264  0FEE               	addlw	-18
 32408  012266  6ED9               	movwf	fsr2l,c
 32409  012268  50E2               	movf	fsr1h,w,c
 32410  01226A  6EDA               	movwf	fsr2h,c
 32411  01226C  0EFF               	movlw	255
 32412  01226E  22DA               	addwfc	fsr2h,f,c
 32413  012270  06DE               	decf	postinc2,f,c
 32414  012272  0E00               	movlw	0
 32415  012274  5ADD               	subwfb	postdec2,f,c
 32416                           
 32417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 32418  012276  0E01               	movlw	1
 32419  012278  6E34               	movwf	(btemp+10)^0,c
 32420  01227A  0E00               	movlw	0
 32421  01227C  6E35               	movwf	(btemp+11)^0,c
 32422                           
 32423                           ;stkvar	_pp @ sp[(-56)+50]
 32424  01227E  0EFA               	movlw	-6
 32425  012280  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32426  012286  0EFB               	movlw	-5
 32427  012288  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32428  01228E  D035               	goto	l16025
 32429  012290                     l16017:
 32430                           
 32431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 32432                           ;stkvar	_n @ sp[(-56)+32]
 32433  012290  0EE8               	movlw	-24
 32434  012292  006F FF8C  F034    	movff	plusw1,btemp+10
 32435  012298  0EE9               	movlw	-23
 32436  01229A  006F FF8C  F035    	movff	plusw1,btemp+11
 32437  0122A0  0E54               	movlw	low _dbuf
 32438  0122A2  2434               	addwf	(btemp+10)^0,w,c
 32439  0122A4  6ED9               	movwf	fsr2l,c
 32440  0122A6  0E03               	movlw	high _dbuf
 32441  0122A8  2035               	addwfc	(btemp+11)^0,w,c
 32442  0122AA  6EDA               	movwf	fsr2h,c
 32443  0122AC  0E30               	movlw	48
 32444  0122AE  6EDF               	movwf	indf2,c
 32445                           
 32446                           ;stkvar	_n @ sp[(-56)+32]
 32447  0122B0  0EE8               	movlw	-24
 32448  0122B2  50E3               	movf	plusw1,w,c
 32449  0122B4  0F01               	addlw	1
 32450  0122B6  6E2A               	movwf	btemp^0,c
 32451  0122B8  0EE8               	movlw	-24
 32452  0122BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 32453  0122C0  6A2A               	clrf	btemp^0,c
 32454  0122C2  0EE9               	movlw	-23
 32455  0122C4  50E3               	movf	plusw1,w,c
 32456  0122C6  202A               	addwfc	btemp^0,w,c
 32457  0122C8  6E2A               	movwf	btemp^0,c
 32458  0122CA  0EE9               	movlw	-23
 32459  0122CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32460                           
 32461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 32462                           ;stkvar	_w @ sp[(-56)+38]
 32463  0122D2  50E1               	movf	fsr1l,w,c
 32464  0122D4  0FEE               	addlw	-18
 32465  0122D6  6ED9               	movwf	fsr2l,c
 32466  0122D8  50E2               	movf	fsr1h,w,c
 32467  0122DA  6EDA               	movwf	fsr2h,c
 32468  0122DC  0EFF               	movlw	255
 32469  0122DE  22DA               	addwfc	fsr2h,f,c
 32470  0122E0  06DE               	decf	postinc2,f,c
 32471  0122E2  0E00               	movlw	0
 32472  0122E4  5ADD               	subwfb	postdec2,f,c
 32473                           
 32474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 32475                           ;stkvar	_t @ sp[(-56)+52]
 32476  0122E6  50E1               	movf	fsr1l,w,c
 32477  0122E8  0FFC               	addlw	-4
 32478  0122EA  6ED9               	movwf	fsr2l,c
 32479  0122EC  50E2               	movf	fsr1h,w,c
 32480  0122EE  6EDA               	movwf	fsr2h,c
 32481  0122F0  0EFF               	movlw	255
 32482  0122F2  22DA               	addwfc	fsr2h,f,c
 32483  0122F4  06DE               	decf	postinc2,f,c
 32484  0122F6  0E00               	movlw	0
 32485  0122F8  5ADD               	subwfb	postdec2,f,c
 32486  0122FA                     l16025:
 32487                           
 32488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 32489                           ;stkvar	_t @ sp[(-56)+52]
 32490  0122FA  0EFC               	movlw	-4
 32491  0122FC  006F FF8C  F02A    	movff	plusw1,btemp
 32492  012302  0EFD               	movlw	-3
 32493  012304  50E3               	movf	plusw1,w,c
 32494  012306  102A               	iorwf	btemp^0,w,c
 32495  012308  A4D8               	btfss	status,2,c
 32496  01230A  D7C2               	goto	l16017
 32497                           
 32498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 32499                           ;stkvar	_n @ sp[(-56)+32]
 32500  01230C  0EE8               	movlw	-24
 32501  01230E  006F FF8C  F034    	movff	plusw1,btemp+10
 32502  012314  0EE9               	movlw	-23
 32503  012316  006F FF8C  F035    	movff	plusw1,btemp+11
 32504  01231C  0E54               	movlw	low _dbuf
 32505  01231E  2434               	addwf	(btemp+10)^0,w,c
 32506  012320  6ED9               	movwf	fsr2l,c
 32507  012322  0E03               	movlw	high _dbuf
 32508  012324  2035               	addwfc	(btemp+11)^0,w,c
 32509  012326  6EDA               	movwf	fsr2h,c
 32510                           
 32511                           ;stkvar	_d @ sp[(-56)+44]
 32512  012328  0EF4               	movlw	-12
 32513  01232A  50E3               	movf	plusw1,w,c
 32514  01232C  0F30               	addlw	48
 32515  01232E  6EDF               	movwf	indf2,c
 32516                           
 32517                           ;stkvar	_n @ sp[(-56)+32]
 32518  012330  0EE8               	movlw	-24
 32519  012332  50E3               	movf	plusw1,w,c
 32520  012334  0F01               	addlw	1
 32521  012336  6E2A               	movwf	btemp^0,c
 32522  012338  0EE8               	movlw	-24
 32523  01233A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32524  012340  6A2A               	clrf	btemp^0,c
 32525  012342  0EE9               	movlw	-23
 32526  012344  50E3               	movf	plusw1,w,c
 32527  012346  202A               	addwfc	btemp^0,w,c
 32528  012348  6E2A               	movwf	btemp^0,c
 32529  01234A  0EE9               	movlw	-23
 32530  01234C  0060  F0AB  FFE3   	movff	btemp,plusw1
 32531                           
 32532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 32533                           ;stkvar	_w @ sp[(-56)+38]
 32534  012352  50E1               	movf	fsr1l,w,c
 32535  012354  0FEE               	addlw	-18
 32536  012356  6ED9               	movwf	fsr2l,c
 32537  012358  50E2               	movf	fsr1h,w,c
 32538  01235A  6EDA               	movwf	fsr2h,c
 32539  01235C  0EFF               	movlw	255
 32540  01235E  22DA               	addwfc	fsr2h,f,c
 32541  012360  06DE               	decf	postinc2,f,c
 32542  012362  0E00               	movlw	0
 32543  012364  5ADD               	subwfb	postdec2,f,c
 32544  012366                     l16033:
 32545                           
 32546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 32547                           ;stkvar	_u @ sp[(-56)+12]
 32548  012366  0ED4               	movlw	-44
 32549  012368  006F FF8F FFE6     	movff	plusw1,postinc1
 32550  01236E  006F FF8F FFE6     	movff	plusw1,postinc1
 32551  012374  006F FF8F FFE6     	movff	plusw1,postinc1
 32552  01237A  006F FF8F FFE6     	movff	plusw1,postinc1
 32553                           
 32554                           ;stkvar	_l @ sp[(-60)+20]
 32555  012380  0ED8               	movlw	-40
 32556  012382  006F FF8F FFE6     	movff	plusw1,postinc1
 32557  012388  006F FF8F FFE6     	movff	plusw1,postinc1
 32558  01238E  006F FF8F FFE6     	movff	plusw1,postinc1
 32559  012394  006F FF8F FFE6     	movff	plusw1,postinc1
 32560  01239A  EC67  F0B8         	call	___flmul	;wreg free
 32561  01239E  0060  F0AB  FFE6   	movff	btemp,postinc1
 32562  0123A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 32563  0123AA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 32564  0123B0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32565                           
 32566                           ;stkvar	_h @ sp[(-60)+24]
 32567  0123B6  0EDC               	movlw	-36
 32568  0123B8  006F FF8F FFE6     	movff	plusw1,postinc1
 32569  0123BE  006F FF8F FFE6     	movff	plusw1,postinc1
 32570  0123C4  006F FF8F FFE6     	movff	plusw1,postinc1
 32571  0123CA  006F FF8F FFE6     	movff	plusw1,postinc1
 32572  0123D0  ECA3  F011         	call	___flsub	;wreg free
 32573                           
 32574                           ;stkvar	_h @ sp[(-56)+24]
 32575  0123D4  0EE0               	movlw	-32
 32576  0123D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 32577  0123DC  0EE1               	movlw	-31
 32578  0123DE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32579  0123E4  0EE2               	movlw	-30
 32580  0123E6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32581  0123EC  0EE3               	movlw	-29
 32582  0123EE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32583                           
 32584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 32585  0123F4  0E00               	movlw	0
 32586  0123F6  6EE6               	movwf	postinc1,c
 32587  0123F8  0E00               	movlw	0
 32588  0123FA  6EE6               	movwf	postinc1,c
 32589  0123FC  0E20               	movlw	32
 32590  0123FE  6EE6               	movwf	postinc1,c
 32591  012400  0E41               	movlw	65
 32592  012402  6EE6               	movwf	postinc1,c
 32593                           
 32594                           ;stkvar	_u @ sp[(-60)+12]
 32595  012404  0ED0               	movlw	-48
 32596  012406  006F FF8F FFE6     	movff	plusw1,postinc1
 32597  01240C  006F FF8F FFE6     	movff	plusw1,postinc1
 32598  012412  006F FF8F FFE6     	movff	plusw1,postinc1
 32599  012418  006F FF8F FFE6     	movff	plusw1,postinc1
 32600  01241E  ECB8  F0C3         	call	___fldiv	;wreg free
 32601                           
 32602                           ;stkvar	_u @ sp[(-56)+12]
 32603  012422  0ED4               	movlw	-44
 32604  012424  0060  F0AB  FFE3   	movff	btemp,plusw1
 32605  01242A  0ED5               	movlw	-43
 32606  01242C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32607  012432  0ED6               	movlw	-42
 32608  012434  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32609  01243A  0ED7               	movlw	-41
 32610  01243C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32611                           
 32612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 32613                           ;stkvar	_ne @ sp[(-56)+46]
 32614  012442  50E1               	movf	fsr1l,w,c
 32615  012444  0FF6               	addlw	-10
 32616  012446  6ED9               	movwf	fsr2l,c
 32617  012448  50E2               	movf	fsr1h,w,c
 32618  01244A  6EDA               	movwf	fsr2h,c
 32619  01244C  0EFF               	movlw	255
 32620  01244E  22DA               	addwfc	fsr2h,f,c
 32621  012450  06DE               	decf	postinc2,f,c
 32622  012452  0E00               	movlw	0
 32623  012454  5ADD               	subwfb	postdec2,f,c
 32624                           
 32625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 32626                           ;stkvar	_i @ sp[(-56)+36]
 32627  012456  0EEC               	movlw	-20
 32628  012458  50E3               	movf	plusw1,w,c
 32629  01245A  0F01               	addlw	1
 32630  01245C  6E2A               	movwf	btemp^0,c
 32631  01245E  0EEC               	movlw	-20
 32632  012460  0060  F0AB  FFE3   	movff	btemp,plusw1
 32633  012466  6A2A               	clrf	btemp^0,c
 32634  012468  0EED               	movlw	-19
 32635  01246A  50E3               	movf	plusw1,w,c
 32636  01246C  202A               	addwfc	btemp^0,w,c
 32637  01246E  6E2A               	movwf	btemp^0,c
 32638  012470  0EED               	movlw	-19
 32639  012472  0060  F0AB  FFE3   	movff	btemp,plusw1
 32640  012478                     l16041:
 32641                           
 32642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 32643                           ;stkvar	_m @ sp[(-56)+48]
 32644                           ;stkvar	_i @ sp[(-56)+36]
 32645  012478  50E1               	movf	fsr1l,w,c
 32646  01247A  0FEC               	addlw	-20
 32647  01247C  6ED9               	movwf	fsr2l,c
 32648  01247E  50E2               	movf	fsr1h,w,c
 32649  012480  6EDA               	movwf	fsr2h,c
 32650  012482  0EFF               	movlw	255
 32651  012484  22DA               	addwfc	fsr2h,f,c
 32652  012486  0EF8               	movlw	-8
 32653  012488  50E3               	movf	plusw1,w,c
 32654  01248A  5CDE               	subwf	postinc2,w,c
 32655  01248C  50DE               	movf	postinc2,w,c
 32656  01248E  0A80               	xorlw	128
 32657  012490  6E2A               	movwf	btemp^0,c
 32658  012492  0EF9               	movlw	-7
 32659  012494  50E3               	movf	plusw1,w,c
 32660  012496  0A80               	xorlw	128
 32661  012498  582A               	subwfb	btemp^0,w,c
 32662  01249A  B0D8               	btfsc	status,0,c
 32663  01249C  D00E               	goto	u15300
 32664                           
 32665                           ;stkvar	_n @ sp[(-56)+32]
 32666  01249E  0EE9               	movlw	-23
 32667  0124A0  BEE3               	btfsc	plusw1,7,c
 32668  0124A2  D633               	goto	l15991
 32669  0124A4  0EE9               	movlw	-23
 32670  0124A6  50E3               	movf	plusw1,w,c
 32671  0124A8  E108               	bnz	u15300
 32672  0124AA  0EE8               	movlw	-24
 32673  0124AC  006F FF8C  F02A    	movff	plusw1,btemp
 32674  0124B2  0E4B               	movlw	75
 32675  0124B4  5E2A               	subwf	btemp^0,f,c
 32676  0124B6  A0D8               	btfss	status,0,c
 32677  0124B8  D628               	goto	l15991
 32678  0124BA                     u15300:
 32679                           
 32680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 32681                           ;stkvar	_pp @ sp[(-56)+50]
 32682  0124BA  0EFA               	movlw	-6
 32683  0124BC  006F FF8C  F02A    	movff	plusw1,btemp
 32684  0124C2  0EFB               	movlw	-5
 32685  0124C4  50E3               	movf	plusw1,w,c
 32686  0124C6  102A               	iorwf	btemp^0,w,c
 32687  0124C8  B4D8               	btfsc	status,2,c
 32688  0124CA  A84E               	btfss	_flags^0,4,c
 32689  0124CC  D021               	goto	l16053
 32690                           
 32691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 32692                           ;stkvar	_n @ sp[(-56)+32]
 32693  0124CE  0EE8               	movlw	-24
 32694  0124D0  006F FF8C  F034    	movff	plusw1,btemp+10
 32695  0124D6  0EE9               	movlw	-23
 32696  0124D8  006F FF8C  F035    	movff	plusw1,btemp+11
 32697  0124DE  0E54               	movlw	low _dbuf
 32698  0124E0  2434               	addwf	(btemp+10)^0,w,c
 32699  0124E2  6ED9               	movwf	fsr2l,c
 32700  0124E4  0E03               	movlw	high _dbuf
 32701  0124E6  2035               	addwfc	(btemp+11)^0,w,c
 32702  0124E8  6EDA               	movwf	fsr2h,c
 32703  0124EA  0E2E               	movlw	46
 32704  0124EC  6EDF               	movwf	indf2,c
 32705                           
 32706                           ;stkvar	_n @ sp[(-56)+32]
 32707  0124EE  0EE8               	movlw	-24
 32708  0124F0  50E3               	movf	plusw1,w,c
 32709  0124F2  0F01               	addlw	1
 32710  0124F4  6E2A               	movwf	btemp^0,c
 32711  0124F6  0EE8               	movlw	-24
 32712  0124F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 32713  0124FE  6A2A               	clrf	btemp^0,c
 32714  012500  0EE9               	movlw	-23
 32715  012502  50E3               	movf	plusw1,w,c
 32716  012504  202A               	addwfc	btemp^0,w,c
 32717  012506  6E2A               	movwf	btemp^0,c
 32718  012508  0EE9               	movlw	-23
 32719  01250A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32720  012510                     l16053:
 32721                           
 32722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 32723                           ;stkvar	_n @ sp[(-56)+32]
 32724  012510  0EE8               	movlw	-24
 32725  012512  006F FF8C  F034    	movff	plusw1,btemp+10
 32726  012518  0EE9               	movlw	-23
 32727  01251A  006F FF8C  F035    	movff	plusw1,btemp+11
 32728  012520  0E54               	movlw	low _dbuf
 32729  012522  2434               	addwf	(btemp+10)^0,w,c
 32730  012524  6ED9               	movwf	fsr2l,c
 32731  012526  0E03               	movlw	high _dbuf
 32732  012528  2035               	addwfc	(btemp+11)^0,w,c
 32733  01252A  6EDA               	movwf	fsr2h,c
 32734  01252C  0E00               	movlw	0
 32735  01252E  6EDF               	movwf	indf2,c
 32736                           
 32737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 32738                           ;stkvar	_nmode @ sp[(-56)+55]
 32739  012530  0EFF               	movlw	-1
 32740  012532  006F FF8C  F02A    	movff	plusw1,btemp
 32741  012538  0E65               	movlw	101
 32742  01253A  182A               	xorwf	btemp^0,w,c
 32743  01253C  A4D8               	btfss	status,2,c
 32744  01253E  EF01  F08C         	goto	l15857
 32745                           
 32746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 32747  012542  0E4F               	movlw	79
 32748  012544  6E34               	movwf	(btemp+10)^0,c
 32749  012546  0E00               	movlw	0
 32750  012548  6E35               	movwf	(btemp+11)^0,c
 32751                           
 32752                           ;stkvar	_i @ sp[(-56)+36]
 32753  01254A  0EEC               	movlw	-20
 32754  01254C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32755  012552  0EED               	movlw	-19
 32756  012554  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32757                           
 32758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 32759                           ;stkvar	_i @ sp[(-56)+36]
 32760  01255A  0EEC               	movlw	-20
 32761  01255C  006F FF8C  F034    	movff	plusw1,btemp+10
 32762  012562  0EED               	movlw	-19
 32763  012564  006F FF8C  F035    	movff	plusw1,btemp+11
 32764  01256A  0E54               	movlw	low _dbuf
 32765  01256C  2434               	addwf	(btemp+10)^0,w,c
 32766  01256E  6ED9               	movwf	fsr2l,c
 32767  012570  0E03               	movlw	high _dbuf
 32768  012572  2035               	addwfc	(btemp+11)^0,w,c
 32769  012574  6EDA               	movwf	fsr2h,c
 32770  012576  0E00               	movlw	0
 32771  012578  6EDF               	movwf	indf2,c
 32772                           
 32773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 32774                           ;stkvar	_sign @ sp[(-56)+42]
 32775  01257A  0EF2               	movlw	-14
 32776  01257C  6AE3               	clrf	plusw1,c
 32777  01257E  0EF3               	movlw	-13
 32778  012580  6AE3               	clrf	plusw1,c
 32779                           
 32780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 32781                           ;stkvar	_e @ sp[(-56)+34]
 32782  012582  0EEB               	movlw	-21
 32783  012584  AEE3               	btfss	plusw1,7,c
 32784  012586  D012               	goto	l16067
 32785                           
 32786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 32787  012588  0E01               	movlw	1
 32788  01258A  6E34               	movwf	(btemp+10)^0,c
 32789  01258C  0E00               	movlw	0
 32790  01258E  6E35               	movwf	(btemp+11)^0,c
 32791                           
 32792                           ;stkvar	_sign @ sp[(-56)+42]
 32793  012590  0EF2               	movlw	-14
 32794  012592  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32795  012598  0EF3               	movlw	-13
 32796  01259A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32797                           
 32798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 32799                           ;stkvar	_e @ sp[(-56)+34]
 32800                           ;stkvar	_e @ sp[(-56)+34]
 32801  0125A0  0EEA               	movlw	-22
 32802  0125A2  6CE3               	negf	plusw1,c
 32803  0125A4  0EEB               	movlw	-21
 32804  0125A6  1EE3               	comf	plusw1,f,c
 32805  0125A8  B0D8               	btfsc	status,0,c
 32806  0125AA  2AE3               	incf	plusw1,f,c
 32807  0125AC                     l16067:
 32808                           
 32809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 32810  0125AC  0E02               	movlw	2
 32811  0125AE  6E34               	movwf	(btemp+10)^0,c
 32812  0125B0  0E00               	movlw	0
 32813  0125B2  6E35               	movwf	(btemp+11)^0,c
 32814                           
 32815                           ;stkvar	_p @ sp[(-56)+40]
 32816  0125B4  0EF0               	movlw	-16
 32817  0125B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32818  0125BC  0EF1               	movlw	-15
 32819  0125BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32820                           
 32821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32822  0125C4  D051               	goto	l16079
 32823  0125C6                     l16069:
 32824                           
 32825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 32826                           ;stkvar	_i @ sp[(-56)+36]
 32827  0125C6  50E1               	movf	fsr1l,w,c
 32828  0125C8  0FEC               	addlw	-20
 32829  0125CA  6ED9               	movwf	fsr2l,c
 32830  0125CC  50E2               	movf	fsr1h,w,c
 32831  0125CE  6EDA               	movwf	fsr2h,c
 32832  0125D0  0EFF               	movlw	255
 32833  0125D2  22DA               	addwfc	fsr2h,f,c
 32834  0125D4  06DE               	decf	postinc2,f,c
 32835  0125D6  0E00               	movlw	0
 32836  0125D8  5ADD               	subwfb	postdec2,f,c
 32837                           
 32838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 32839                           ;stkvar	_i @ sp[(-56)+36]
 32840  0125DA  0EEC               	movlw	-20
 32841  0125DC  006F FF8C  F034    	movff	plusw1,btemp+10
 32842  0125E2  0EED               	movlw	-19
 32843  0125E4  006F FF8C  F035    	movff	plusw1,btemp+11
 32844  0125EA  0E54               	movlw	low _dbuf
 32845  0125EC  2434               	addwf	(btemp+10)^0,w,c
 32846  0125EE  6ED9               	movwf	fsr2l,c
 32847  0125F0  0E03               	movlw	high _dbuf
 32848  0125F2  2035               	addwfc	(btemp+11)^0,w,c
 32849  0125F4  6EDA               	movwf	fsr2h,c
 32850  0125F6  0E0A               	movlw	10
 32851  0125F8  6EE6               	movwf	postinc1,c
 32852  0125FA  0E00               	movlw	0
 32853  0125FC  6EE6               	movwf	postinc1,c
 32854                           
 32855                           ;stkvar	_e @ sp[(-58)+34]
 32856  0125FE  0EE8               	movlw	-24
 32857  012600  006F FF8F FFE6     	movff	plusw1,postinc1
 32858  012606  006F FF8F FFE6     	movff	plusw1,postinc1
 32859  01260C  EC83  F0FE         	call	___awmod	;wreg free
 32860  012610  502A               	movf	btemp^0,w,c
 32861  012612  0F30               	addlw	48
 32862  012614  6EDF               	movwf	indf2,c
 32863                           
 32864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 32865  012616  0E0A               	movlw	10
 32866  012618  6EE6               	movwf	postinc1,c
 32867  01261A  0E00               	movlw	0
 32868  01261C  6EE6               	movwf	postinc1,c
 32869                           
 32870                           ;stkvar	_e @ sp[(-58)+34]
 32871  01261E  0EE8               	movlw	-24
 32872  012620  006F FF8F FFE6     	movff	plusw1,postinc1
 32873  012626  006F FF8F FFE6     	movff	plusw1,postinc1
 32874  01262C  EC54  F0FA         	call	___awdiv	;wreg free
 32875                           
 32876                           ;stkvar	_e @ sp[(-56)+34]
 32877  012630  0EEA               	movlw	-22
 32878  012632  0060  F0AB  FFE3   	movff	btemp,plusw1
 32879  012638  0EEB               	movlw	-21
 32880  01263A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32881                           
 32882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 32883                           ;stkvar	_p @ sp[(-56)+40]
 32884  012640  50E1               	movf	fsr1l,w,c
 32885  012642  0FF0               	addlw	-16
 32886  012644  6ED9               	movwf	fsr2l,c
 32887  012646  50E2               	movf	fsr1h,w,c
 32888  012648  6EDA               	movwf	fsr2h,c
 32889  01264A  0EFF               	movlw	255
 32890  01264C  22DA               	addwfc	fsr2h,f,c
 32891  01264E  06DE               	decf	postinc2,f,c
 32892  012650  0E00               	movlw	0
 32893  012652  5ADD               	subwfb	postdec2,f,c
 32894                           
 32895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 32896                           ;stkvar	_w @ sp[(-56)+38]
 32897  012654  50E1               	movf	fsr1l,w,c
 32898  012656  0FEE               	addlw	-18
 32899  012658  6ED9               	movwf	fsr2l,c
 32900  01265A  50E2               	movf	fsr1h,w,c
 32901  01265C  6EDA               	movwf	fsr2h,c
 32902  01265E  0EFF               	movlw	255
 32903  012660  22DA               	addwfc	fsr2h,f,c
 32904  012662  06DE               	decf	postinc2,f,c
 32905  012664  0E00               	movlw	0
 32906  012666  5ADD               	subwfb	postdec2,f,c
 32907  012668                     l16079:
 32908                           
 32909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32910                           ;stkvar	_e @ sp[(-56)+34]
 32911  012668  0EEA               	movlw	-22
 32912  01266A  006F FF8C  F02A    	movff	plusw1,btemp
 32913  012670  0EEB               	movlw	-21
 32914  012672  50E3               	movf	plusw1,w,c
 32915  012674  102A               	iorwf	btemp^0,w,c
 32916  012676  A4D8               	btfss	status,2,c
 32917  012678  D7A6               	goto	l16069
 32918                           
 32919                           ;stkvar	_p @ sp[(-56)+40]
 32920  01267A  0EF1               	movlw	-15
 32921  01267C  BEE3               	btfsc	plusw1,7,c
 32922  01267E  D007               	goto	u15360
 32923  012680  0EF1               	movlw	-15
 32924  012682  50E3               	movf	plusw1,w,c
 32925  012684  E1A0               	bnz	l16069
 32926  012686  0EF0               	movlw	-16
 32927  012688  04E3               	decf	plusw1,w,c
 32928  01268A  B0D8               	btfsc	status,0,c
 32929  01268C  D79C               	goto	l16069
 32930  01268E                     u15360:
 32931                           
 32932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 32933                           ;stkvar	_i @ sp[(-56)+36]
 32934  01268E  50E1               	movf	fsr1l,w,c
 32935  012690  0FEC               	addlw	-20
 32936  012692  6ED9               	movwf	fsr2l,c
 32937  012694  50E2               	movf	fsr1h,w,c
 32938  012696  6EDA               	movwf	fsr2h,c
 32939  012698  0EFF               	movlw	255
 32940  01269A  22DA               	addwfc	fsr2h,f,c
 32941  01269C  06DE               	decf	postinc2,f,c
 32942  01269E  0E00               	movlw	0
 32943  0126A0  5ADD               	subwfb	postdec2,f,c
 32944                           
 32945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 32946                           ;stkvar	_sign @ sp[(-56)+42]
 32947  0126A2  0EF2               	movlw	-14
 32948  0126A4  006F FF8C  F02A    	movff	plusw1,btemp
 32949  0126AA  0EF3               	movlw	-13
 32950  0126AC  50E3               	movf	plusw1,w,c
 32951  0126AE  102A               	iorwf	btemp^0,w,c
 32952  0126B0  A4D8               	btfss	status,2,c
 32953  0126B2  D002               	goto	l16089
 32954  0126B4  0E2B               	movlw	43
 32955  0126B6  D001               	goto	L34
 32956  0126B8                     l16089:
 32957  0126B8  0E2D               	movlw	45
 32958  0126BA                     L34:
 32959  0126BA  6E34               	movwf	(btemp+10)^0,c
 32960  0126BC  0E00               	movlw	0
 32961  0126BE  6E35               	movwf	(btemp+11)^0,c
 32962                           
 32963                           ;stkvar	_efgtoa$6646 @ sp[(-56)+4]
 32964  0126C0  0ECC               	movlw	-52
 32965  0126C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32966  0126C8  0ECD               	movlw	-51
 32967  0126CA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32968                           
 32969                           ;stkvar	_efgtoa$6646 @ sp[(-56)+4]
 32970                           ;stkvar	_i @ sp[(-56)+36]
 32971  0126D0  0EEC               	movlw	-20
 32972  0126D2  006F FF8C  F034    	movff	plusw1,btemp+10
 32973  0126D8  0EED               	movlw	-19
 32974  0126DA  006F FF8C  F035    	movff	plusw1,btemp+11
 32975  0126E0  0E54               	movlw	low _dbuf
 32976  0126E2  2434               	addwf	(btemp+10)^0,w,c
 32977  0126E4  6ED9               	movwf	fsr2l,c
 32978  0126E6  0E03               	movlw	high _dbuf
 32979  0126E8  2035               	addwfc	(btemp+11)^0,w,c
 32980  0126EA  6EDA               	movwf	fsr2h,c
 32981  0126EC  0ECC               	movlw	-52
 32982  0126EE  006F FF8F FFDF     	movff	plusw1,indf2
 32983                           
 32984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 32985                           ;stkvar	_w @ sp[(-56)+38]
 32986  0126F4  50E1               	movf	fsr1l,w,c
 32987  0126F6  0FEE               	addlw	-18
 32988  0126F8  6ED9               	movwf	fsr2l,c
 32989  0126FA  50E2               	movf	fsr1h,w,c
 32990  0126FC  6EDA               	movwf	fsr2h,c
 32991  0126FE  0EFF               	movlw	255
 32992  012700  22DA               	addwfc	fsr2h,f,c
 32993  012702  06DE               	decf	postinc2,f,c
 32994  012704  0E00               	movlw	0
 32995  012706  5ADD               	subwfb	postdec2,f,c
 32996                           
 32997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 32998                           ;stkvar	_i @ sp[(-56)+36]
 32999  012708  50E1               	movf	fsr1l,w,c
 33000  01270A  0FEC               	addlw	-20
 33001  01270C  6ED9               	movwf	fsr2l,c
 33002  01270E  50E2               	movf	fsr1h,w,c
 33003  012710  6EDA               	movwf	fsr2h,c
 33004  012712  0EFF               	movlw	255
 33005  012714  22DA               	addwfc	fsr2h,f,c
 33006  012716  06DE               	decf	postinc2,f,c
 33007  012718  0E00               	movlw	0
 33008  01271A  5ADD               	subwfb	postdec2,f,c
 33009  01271C  0EBF               	movlw	191
 33010  01271E  6E34               	movwf	(btemp+10)^0,c
 33011  012720  0EFF               	movlw	255
 33012  012722  6E35               	movwf	(btemp+11)^0,c
 33013                           
 33014                           ;stkvar	_c @ sp[(-56)+-7]
 33015  012724  0EC1               	movlw	-63
 33016  012726  50E3               	movf	plusw1,w,c
 33017  012728  6E32               	movwf	(btemp+8)^0,c
 33018  01272A  6A33               	clrf	(btemp+9)^0,c
 33019  01272C  5034               	movf	(btemp+10)^0,w,c
 33020  01272E  2632               	addwf	(btemp+8)^0,f,c
 33021  012730  5035               	movf	(btemp+11)^0,w,c
 33022  012732  2233               	addwfc	(btemp+9)^0,f,c
 33023  012734  5033               	movf	(btemp+9)^0,w,c
 33024  012736  E106               	bnz	u15380
 33025  012738  0E1A               	movlw	26
 33026  01273A  5C32               	subwf	(btemp+8)^0,w,c
 33027  01273C  B0D8               	btfsc	status,0,c
 33028  01273E  D002               	goto	u15380
 33029  012740  0E01               	movlw	1
 33030  012742  D001               	goto	u15390
 33031  012744                     u15380:
 33032  012744  0E00               	movlw	0
 33033  012746                     u15390:
 33034  012746  6E34               	movwf	(btemp+10)^0,c
 33035  012748  6A35               	clrf	(btemp+11)^0,c
 33036                           
 33037                           ;stkvar	_efgtoa$6648 @ sp[(-56)+0]
 33038  01274A  0EC8               	movlw	-56
 33039  01274C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33040  012752  0EC9               	movlw	-55
 33041  012754  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33042                           
 33043                           ;stkvar	_efgtoa$6648 @ sp[(-56)+0]
 33044  01275A  0EC8               	movlw	-56
 33045  01275C  006F FF8C  F02A    	movff	plusw1,btemp
 33046  012762  0EC9               	movlw	-55
 33047  012764  50E3               	movf	plusw1,w,c
 33048  012766  102A               	iorwf	btemp^0,w,c
 33049  012768  A4D8               	btfss	status,2,c
 33050  01276A  D002               	goto	l16105
 33051  01276C  0E65               	movlw	101
 33052  01276E  D001               	goto	L35
 33053  012770                     l16105:
 33054  012770  0E45               	movlw	69
 33055  012772                     L35:
 33056  012772  6E34               	movwf	(btemp+10)^0,c
 33057  012774  0E00               	movlw	0
 33058  012776  6E35               	movwf	(btemp+11)^0,c
 33059                           
 33060                           ;stkvar	_efgtoa$6647 @ sp[(-56)+2]
 33061  012778  0ECA               	movlw	-54
 33062  01277A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33063  012780  0ECB               	movlw	-53
 33064  012782  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33065                           
 33066                           ;stkvar	_efgtoa$6647 @ sp[(-56)+2]
 33067                           ;stkvar	_i @ sp[(-56)+36]
 33068  012788  0EEC               	movlw	-20
 33069  01278A  006F FF8C  F034    	movff	plusw1,btemp+10
 33070  012790  0EED               	movlw	-19
 33071  012792  006F FF8C  F035    	movff	plusw1,btemp+11
 33072  012798  0E54               	movlw	low _dbuf
 33073  01279A  2434               	addwf	(btemp+10)^0,w,c
 33074  01279C  6ED9               	movwf	fsr2l,c
 33075  01279E  0E03               	movlw	high _dbuf
 33076  0127A0  2035               	addwfc	(btemp+11)^0,w,c
 33077  0127A2  6EDA               	movwf	fsr2h,c
 33078  0127A4  0ECA               	movlw	-54
 33079  0127A6  006F FF8F FFDF     	movff	plusw1,indf2
 33080                           
 33081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 33082                           ;stkvar	_w @ sp[(-56)+38]
 33083  0127AC  50E1               	movf	fsr1l,w,c
 33084  0127AE  0FEE               	addlw	-18
 33085  0127B0  6ED9               	movwf	fsr2l,c
 33086  0127B2  50E2               	movf	fsr1h,w,c
 33087  0127B4  6EDA               	movwf	fsr2h,c
 33088  0127B6  0EFF               	movlw	255
 33089  0127B8  22DA               	addwfc	fsr2h,f,c
 33090  0127BA  06DE               	decf	postinc2,f,c
 33091  0127BC  0E00               	movlw	0
 33092  0127BE  5ADD               	subwfb	postdec2,f,c
 33093                           
 33094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 33095                           ;stkvar	_i @ sp[(-56)+36]
 33096  0127C0  0EEC               	movlw	-20
 33097  0127C2  006F FF8C  F034    	movff	plusw1,btemp+10
 33098  0127C8  0EED               	movlw	-19
 33099  0127CA  006F FF8C  F035    	movff	plusw1,btemp+11
 33100  0127D0  0E54               	movlw	low _dbuf
 33101  0127D2  2434               	addwf	(btemp+10)^0,w,c
 33102  0127D4  6E32               	movwf	(btemp+8)^0,c
 33103  0127D6  0E03               	movlw	high _dbuf
 33104  0127D8  2035               	addwfc	(btemp+11)^0,w,c
 33105  0127DA  6E33               	movwf	(btemp+9)^0,c
 33106  0127DC  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 33107  0127E2  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 33108                           
 33109                           ;stkvar	_n @ sp[(-58)+32]
 33110  0127E8  0E54               	movlw	low _dbuf
 33111  0127EA  6E34               	movwf	(btemp+10)^0,c
 33112  0127EC  0E03               	movlw	high _dbuf
 33113  0127EE  6E35               	movwf	(btemp+11)^0,c
 33114  0127F0  0EE6               	movlw	-26
 33115  0127F2  50E3               	movf	plusw1,w,c
 33116  0127F4  2634               	addwf	(btemp+10)^0,f,c
 33117  0127F6  0EE7               	movlw	-25
 33118  0127F8  50E3               	movf	plusw1,w,c
 33119  0127FA  2235               	addwfc	(btemp+11)^0,f,c
 33120  0127FC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 33121  012802  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 33122  012808  EC21  F004         	call	_strcpy	;wreg free
 33123  01280C  EF01  F08C         	goto	l15857
 33124  012810                     l2532:
 33125                           
 33126                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 33127  012810  0EC1               	movlw	193
 33128  012812  26E1               	addwf	fsr1l,f,c
 33129  012814  0EFF               	movlw	255
 33130  012816  22E2               	addwfc	fsr1h,f,c
 33131  012818  0012               	return		;funcret
 33132  01281A                     __end_of_efgtoa:
 33133                           	opt callstack 0
 33134                           
 33135 ;; *************** function _tolower *****************
 33136 ;; Defined at:
 33137 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 33138 ;; Parameters:    Size  Location     Type
 33139 ;;  c               2  [STACK] int 
 33140 ;; Auto vars:     Size  Location     Type
 33141 ;;		None
 33142 ;; Return value:  Size  Location     Type
 33143 ;;                  2  [STACK] int 
 33144 ;; Registers used:
 33145 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 33146 ;; Tracked objects:
 33147 ;;		On entry : 0/0
 33148 ;;		On exit  : 0/0
 33149 ;;		Unchanged: 0/0
 33150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33155 ;;Total ram usage:        0 bytes
 33156 ;; Hardware stack levels used:    1
 33157 ;; Hardware stack levels required when called:   16
 33158 ;; This function calls:
 33159 ;;		_isupper
 33160 ;; This function is called by:
 33161 ;;		_efgtoa
 33162 ;;		_vfpfcnvrt
 33163 ;; This function uses a reentrant model
 33164 ;;
 33165                           
 33166                           	psect	text106
 33167  001684                     __ptext106:
 33168                           	opt callstack 0
 33169  001684                     _tolower:
 33170                           	opt callstack 0
 33171                           
 33172                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33173  001684  52E6               	movf	postinc1,f,c
 33174  001686  52E6               	movf	postinc1,f,c
 33175                           
 33176                           ;stkvar	_c @ sp[(-2)+-2]
 33177                           
 33178                           ;incstack = 0
 33179 ;; hardware stack exceeded
 33180  001688  0EFC               	movlw	-4
 33181  00168A  50E3               	movf	plusw1,w,c
 33182  00168C  0FBF               	addlw	191
 33183  00168E  6E34               	movwf	(btemp+10)^0,c
 33184  001690  0EFD               	movlw	-3
 33185  001692  006F FF8C  F035    	movff	plusw1,btemp+11
 33186  001698  0EFF               	movlw	255
 33187  00169A  2235               	addwfc	(btemp+11)^0,f,c
 33188  00169C  5035               	movf	(btemp+11)^0,w,c
 33189  00169E  E106               	bnz	u7930
 33190  0016A0  0E1A               	movlw	26
 33191  0016A2  5C34               	subwf	(btemp+10)^0,w,c
 33192  0016A4  B0D8               	btfsc	status,0,c
 33193  0016A6  D002               	goto	u7930
 33194  0016A8  0E01               	movlw	1
 33195  0016AA  D001               	goto	u7940
 33196  0016AC                     u7930:
 33197  0016AC  0E00               	movlw	0
 33198  0016AE                     u7940:
 33199  0016AE  6E34               	movwf	(btemp+10)^0,c
 33200  0016B0  6A35               	clrf	(btemp+11)^0,c
 33201                           
 33202                           ;stkvar	_tolower$7602 @ sp[(-2)+0]
 33203  0016B2  0EFE               	movlw	-2
 33204  0016B4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33205  0016BA  0EFF               	movlw	-1
 33206  0016BC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33207                           
 33208                           ;stkvar	_tolower$7602 @ sp[(-2)+0]
 33209  0016C2  0EFE               	movlw	-2
 33210  0016C4  006F FF8C  F02A    	movff	plusw1,btemp
 33211  0016CA  0EFF               	movlw	-1
 33212  0016CC  50E3               	movf	plusw1,w,c
 33213  0016CE  102A               	iorwf	btemp^0,w,c
 33214  0016D0  B4D8               	btfsc	status,2,c
 33215  0016D2  D00D               	goto	l10233
 33216                           
 33217                           ;stkvar	_c @ sp[(-2)+-2]
 33218  0016D4  0EFC               	movlw	-4
 33219  0016D6  006F FF8C  F02A    	movff	plusw1,btemp
 33220  0016DC  0EFD               	movlw	-3
 33221  0016DE  006F FF8C  F02B    	movff	plusw1,btemp+1
 33222  0016E4  0E20               	movlw	32
 33223  0016E6  122A               	iorwf	btemp^0,f,c
 33224  0016E8  0E00               	movlw	0
 33225  0016EA  122B               	iorwf	(btemp+1)^0,f,c
 33226  0016EC  D008               	goto	l3834
 33227  0016EE                     l10233:
 33228                           
 33229                           ;stkvar	_c @ sp[(-2)+-2]
 33230  0016EE  0EFC               	movlw	-4
 33231  0016F0  006F FF8C  F02A    	movff	plusw1,btemp
 33232  0016F6  0EFD               	movlw	-3
 33233  0016F8  006F FF8C  F02B    	movff	plusw1,btemp+1
 33234  0016FE                     l3834:
 33235                           
 33236                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 33237  0016FE  52E5               	movf	postdec1,f,c
 33238  001700  52E5               	movf	postdec1,f,c
 33239  001702  52E5               	movf	postdec1,f,c
 33240  001704  52E5               	movf	postdec1,f,c
 33241  001706  0012               	return		;funcret
 33242  001708                     __end_of_tolower:
 33243                           	opt callstack 0
 33244                           
 33245 ;; *************** function _isupper *****************
 33246 ;; Defined at:
 33247 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 33248 ;; Parameters:    Size  Location     Type
 33249 ;;  c               2  [STACK] int 
 33250 ;; Auto vars:     Size  Location     Type
 33251 ;;		None
 33252 ;; Return value:  Size  Location     Type
 33253 ;;                  2  [STACK] int 
 33254 ;; Registers used:
 33255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 33256 ;; Tracked objects:
 33257 ;;		On entry : 0/0
 33258 ;;		On exit  : 0/0
 33259 ;;		Unchanged: 0/0
 33260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33265 ;;Total ram usage:        0 bytes
 33266 ;; Hardware stack levels used:    1
 33267 ;; Hardware stack levels required when called:   15
 33268 ;; This function calls:
 33269 ;;		Nothing
 33270 ;; This function is called by:
 33271 ;;		_efgtoa
 33272 ;;		_xtoa
 33273 ;;		_vfpfcnvrt
 33274 ;;		_tolower
 33275 ;; This function uses a reentrant model
 33276 ;;
 33277                           
 33278                           	psect	text107
 33279  002846                     __ptext107:
 33280                           	opt callstack 0
 33281  002846                     _isupper:
 33282                           	opt callstack 0
 33283                           
 33284                           ;stkvar	_c @ sp[(0)+-2]
 33285                           
 33286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33287                           ;incstack = 0
 33288 ;; hardware stack exceeded
 33289  002846  0EFE               	movlw	-2
 33290  002848  50E3               	movf	plusw1,w,c
 33291  00284A  0FBF               	addlw	191
 33292  00284C  6E34               	movwf	(btemp+10)^0,c
 33293  00284E  0EFF               	movlw	-1
 33294  002850  006F FF8C  F035    	movff	plusw1,btemp+11
 33295  002856  0EFF               	movlw	255
 33296  002858  2235               	addwfc	(btemp+11)^0,f,c
 33297  00285A  5035               	movf	(btemp+11)^0,w,c
 33298  00285C  E106               	bnz	u7270
 33299  00285E  0E1A               	movlw	26
 33300  002860  5C34               	subwf	(btemp+10)^0,w,c
 33301  002862  B0D8               	btfsc	status,0,c
 33302  002864  D002               	goto	u7270
 33303  002866  0E01               	movlw	1
 33304  002868  D001               	goto	u7280
 33305  00286A                     u7270:
 33306  00286A  0E00               	movlw	0
 33307  00286C                     u7280:
 33308  00286C  6E2A               	movwf	btemp^0,c
 33309  00286E  6A2B               	clrf	(btemp+1)^0,c
 33310                           
 33311                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 33312  002870  52E5               	movf	postdec1,f,c
 33313  002872  52E5               	movf	postdec1,f,c
 33314  002874  0012               	return		;funcret
 33315  002876                     __end_of_isupper:
 33316                           	opt callstack 0
 33317                           
 33318 ;; *************** function _strcpy *****************
 33319 ;; Defined at:
 33320 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 33321 ;; Parameters:    Size  Location     Type
 33322 ;;  dest            2  [STACK] PTR unsigned char 
 33323 ;;		 -> dbuf(80), 
 33324 ;;  src             2  [STACK] PTR const unsigned char 
 33325 ;;		 -> STR_109(4), STR_108(4), STR_105(4), STR_104(4), 
 33326 ;;		 -> dbuf(80), 
 33327 ;; Auto vars:     Size  Location     Type
 33328 ;;  d               2  [STACK] PTR unsigned char 
 33329 ;;		 -> dbuf(80), 
 33330 ;;  s               2  [STACK] PTR const unsigned char 
 33331 ;;		 -> STR_109(4), STR_108(4), STR_105(4), STR_104(4), 
 33332 ;;		 -> dbuf(80), 
 33333 ;; Return value:  Size  Location     Type
 33334 ;;                  2  [STACK] PTR unsigned char 
 33335 ;; Registers used:
 33336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 33337 ;; Tracked objects:
 33338 ;;		On entry : 0/0
 33339 ;;		On exit  : 0/0
 33340 ;;		Unchanged: 0/0
 33341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33346 ;;Total ram usage:        0 bytes
 33347 ;; Hardware stack levels used:    1
 33348 ;; Hardware stack levels required when called:   15
 33349 ;; This function calls:
 33350 ;;		Nothing
 33351 ;; This function is called by:
 33352 ;;		_efgtoa
 33353 ;; This function uses a reentrant model
 33354 ;;
 33355                           
 33356                           	psect	text108
 33357  000842                     __ptext108:
 33358                           	opt callstack 0
 33359  000842                     _strcpy:
 33360                           	opt callstack 0
 33361                           
 33362                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33363  000842  52E6               	movf	postinc1,f,c
 33364  000844  52E6               	movf	postinc1,f,c
 33365  000846  52E6               	movf	postinc1,f,c
 33366  000848  52E6               	movf	postinc1,f,c
 33367                           
 33368                           ;stkvar	_src @ sp[(-4)+-4]
 33369                           
 33370                           ;incstack = 0
 33371 ;; hardware stack exceeded
 33372  00084A  0EF8               	movlw	-8
 33373  00084C  006F FF8C  F034    	movff	plusw1,btemp+10
 33374  000852  0EF9               	movlw	-7
 33375  000854  006F FF8C  F035    	movff	plusw1,btemp+11
 33376                           
 33377                           ;stkvar	_s @ sp[(-4)+2]
 33378  00085A  0EFF               	movlw	-1
 33379  00085C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33380  000862  0EFE               	movlw	-2
 33381  000864  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33382                           
 33383                           ;stkvar	_dest @ sp[(-4)+-2]
 33384  00086A  0EFA               	movlw	-6
 33385  00086C  006F FF8C  F034    	movff	plusw1,btemp+10
 33386  000872  0EFB               	movlw	-5
 33387  000874  006F FF8C  F035    	movff	plusw1,btemp+11
 33388                           
 33389                           ;stkvar	_d @ sp[(-4)+0]
 33390  00087A  0EFD               	movlw	-3
 33391  00087C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33392  000882  0EFC               	movlw	-4
 33393  000884  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33394  00088A                     l15641:
 33395                           
 33396                           ;stkvar	_s @ sp[(-4)+2]
 33397  00088A  50E1               	movf	fsr1l,w,c
 33398  00088C  0FFE               	addlw	-2
 33399  00088E  6ED9               	movwf	fsr2l,c
 33400  000890  50E2               	movf	fsr1h,w,c
 33401  000892  6EDA               	movwf	fsr2h,c
 33402  000894  0EFF               	movlw	255
 33403  000896  22DA               	addwfc	fsr2h,f,c
 33404  000898  006F FF7C  F034    	movff	indf2,btemp+10
 33405  00089E  0E01               	movlw	1
 33406  0008A0  26DE               	addwf	postinc2,f,c
 33407  0008A2  006F FF7C  F035    	movff	indf2,btemp+11
 33408  0008A8  0E00               	movlw	0
 33409  0008AA  22DD               	addwfc	postdec2,f,c
 33410  0008AC  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 33411  0008B2  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 33412  0008B8  0E00               	movlw	low (__mediumconst shr (0+16))
 33413  0008BA  6EF8               	movwf	tblptru,c
 33414                           
 33415                           ;stkvar	_d @ sp[(-4)+0]
 33416  0008BC  50E1               	movf	fsr1l,w,c
 33417  0008BE  0FFC               	addlw	-4
 33418  0008C0  6ED9               	movwf	fsr2l,c
 33419  0008C2  50E2               	movf	fsr1h,w,c
 33420  0008C4  6EDA               	movwf	fsr2h,c
 33421  0008C6  0EFF               	movlw	255
 33422  0008C8  22DA               	addwfc	fsr2h,f,c
 33423  0008CA  006F FF7C  F034    	movff	indf2,btemp+10
 33424  0008D0  0E01               	movlw	1
 33425  0008D2  26DE               	addwf	postinc2,f,c
 33426  0008D4  006F FF7C  F035    	movff	indf2,btemp+11
 33427  0008DA  0E00               	movlw	0
 33428  0008DC  22DD               	addwfc	postdec2,f,c
 33429  0008DE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 33430  0008E4  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 33431  0008EA  0E1F               	movlw	(high __ramtop+-1)
 33432  0008EC  64F7               	cpfsgt	tblptrh,c
 33433  0008EE  D003               	bra	u14547
 33434  0008F0  0008               	tblrd		*
 33435  0008F2  50F5               	movf	tablat,w,c
 33436  0008F4  D007               	bra	u14540
 33437  0008F6                     u14547:
 33438  0008F6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 33439  0008FC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 33440  000902  50EF               	movf	indf0,w,c
 33441  000904                     u14540:
 33442  000904  6EDF               	movwf	indf2,c
 33443  000906  50DF               	movf	indf2,w,c
 33444  000908  A4D8               	btfss	status,2,c
 33445  00090A  D7BF               	goto	l15641
 33446                           
 33447                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 33448  00090C  0EF8               	movlw	248
 33449  00090E  26E1               	addwf	fsr1l,f,c
 33450  000910  0EFF               	movlw	255
 33451  000912  22E2               	addwfc	fsr1h,f,c
 33452  000914  0012               	return		;funcret
 33453  000916                     __end_of_strcpy:
 33454                           	opt callstack 0
 33455                           
 33456 ;; *************** function _floorf *****************
 33457 ;; Defined at:
 33458 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 33459 ;; Parameters:    Size  Location     Type
 33460 ;;  x               4  [STACK] float 
 33461 ;; Auto vars:     Size  Location     Type
 33462 ;;  u               4  [STACK] struct .
 33463 ;;  m               4  [STACK] unsigned long 
 33464 ;;  e               2  [STACK] int 
 33465 ;; Return value:  Size  Location     Type
 33466 ;;                  4  [STACK] float 
 33467 ;; Registers used:
 33468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33469 ;; Tracked objects:
 33470 ;;		On entry : 0/0
 33471 ;;		On exit  : 0/0
 33472 ;;		Unchanged: 0/0
 33473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33478 ;;Total ram usage:        0 bytes
 33479 ;; Hardware stack levels used:    1
 33480 ;; Hardware stack levels required when called:   15
 33481 ;; This function calls:
 33482 ;;		Nothing
 33483 ;; This function is called by:
 33484 ;;		_efgtoa
 33485 ;; This function uses a reentrant model
 33486 ;;
 33487                           
 33488                           	psect	text109
 33489  01A6C4                     __ptext109:
 33490                           	opt callstack 0
 33491  01A6C4                     _floorf:
 33492                           	opt callstack 0
 33493                           
 33494                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 33495  01A6C4  0E0A               	movlw	10
 33496  01A6C6  26E1               	addwf	fsr1l,f,c
 33497  01A6C8  0E00               	movlw	0
 33498  01A6CA  22E2               	addwfc	fsr1h,f,c
 33499                           
 33500                           ;incstack = 0
 33501 ;; hardware stack exceeded
 33502  01A6CC  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 33503  01A6D2  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 33504  01A6D8  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 33505  01A6DE  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 33506                           
 33507                           ;stkvar	_u @ sp[(-10)+0]
 33508  01A6E4  0EF6               	movlw	-10
 33509  01A6E6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33510  01A6EC  0EF7               	movlw	-9
 33511  01A6EE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33512  01A6F4  0EF8               	movlw	-8
 33513  01A6F6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33514  01A6FC  0EF9               	movlw	-7
 33515  01A6FE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33516                           
 33517                           ;stkvar	_x @ sp[(-10)+-4]
 33518  01A704  0EF2               	movlw	-14
 33519  01A706  006F FF8C  F032    	movff	plusw1,btemp+8
 33520  01A70C  0EF3               	movlw	-13
 33521  01A70E  006F FF8C  F033    	movff	plusw1,btemp+9
 33522  01A714  0EF4               	movlw	-12
 33523  01A716  006F FF8C  F034    	movff	plusw1,btemp+10
 33524  01A71C  0EF5               	movlw	-11
 33525  01A71E  006F FF8C  F035    	movff	plusw1,btemp+11
 33526                           
 33527                           ;stkvar	_u @ sp[(-10)+0]
 33528  01A724  0EF6               	movlw	-10
 33529  01A726  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33530  01A72C  0EF7               	movlw	-9
 33531  01A72E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33532  01A734  0EF8               	movlw	-8
 33533  01A736  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33534  01A73C  0EF9               	movlw	-7
 33535  01A73E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33536  01A744  0E81               	movlw	129
 33537  01A746  6E34               	movwf	(btemp+10)^0,c
 33538  01A748  0EFF               	movlw	255
 33539  01A74A  6E35               	movwf	(btemp+11)^0,c
 33540                           
 33541                           ;stkvar	_u @ sp[(-10)+0]
 33542  01A74C  0EF6               	movlw	-10
 33543  01A74E  006F FF8C  F02E    	movff	plusw1,btemp+4
 33544  01A754  0EF7               	movlw	-9
 33545  01A756  006F FF8C  F02F    	movff	plusw1,btemp+5
 33546  01A75C  0EF8               	movlw	-8
 33547  01A75E  006F FF8C  F030    	movff	plusw1,btemp+6
 33548  01A764  0EF9               	movlw	-7
 33549  01A766  006F FF8C  F031    	movff	plusw1,btemp+7
 33550  01A76C  0E18               	movlw	24
 33551  01A76E  D005               	goto	u7960
 33552  01A770                     u7965:
 33553  01A770  90D8               	bcf	status,0,c
 33554  01A772  3231               	rrcf	(btemp+7)^0,f,c
 33555  01A774  3230               	rrcf	(btemp+6)^0,f,c
 33556  01A776  322F               	rrcf	(btemp+5)^0,f,c
 33557  01A778  322E               	rrcf	(btemp+4)^0,f,c
 33558  01A77A                     u7960:
 33559  01A77A  2EE8               	decfsz	wreg,f,c
 33560  01A77C  D7F9               	goto	u7965
 33561  01A77E  0060  F0B8  F032   	movff	btemp+4,btemp+8
 33562  01A784  0060  F0BC  F033   	movff	btemp+5,btemp+9
 33563  01A78A  0EFF               	movlw	255
 33564  01A78C  1632               	andwf	(btemp+8)^0,f,c
 33565  01A78E  0E00               	movlw	0
 33566  01A790  1633               	andwf	(btemp+9)^0,f,c
 33567  01A792  5034               	movf	(btemp+10)^0,w,c
 33568  01A794  2632               	addwf	(btemp+8)^0,f,c
 33569  01A796  5035               	movf	(btemp+11)^0,w,c
 33570  01A798  2233               	addwfc	(btemp+9)^0,f,c
 33571                           
 33572                           ;stkvar	_e @ sp[(-10)+8]
 33573  01A79A  0EFE               	movlw	-2
 33574  01A79C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33575  01A7A2  0EFF               	movlw	-1
 33576  01A7A4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33577                           
 33578                           ;stkvar	_e @ sp[(-10)+8]
 33579  01A7AA  0EFF               	movlw	-1
 33580  01A7AC  BEE3               	btfsc	plusw1,7,c
 33581  01A7AE  D019               	goto	l10247
 33582  01A7B0  0EFF               	movlw	-1
 33583  01A7B2  50E3               	movf	plusw1,w,c
 33584  01A7B4  E108               	bnz	u7970
 33585  01A7B6  0EFE               	movlw	-2
 33586  01A7B8  006F FF8C  F02A    	movff	plusw1,btemp
 33587  01A7BE  0E17               	movlw	23
 33588  01A7C0  5E2A               	subwf	btemp^0,f,c
 33589  01A7C2  A0D8               	btfss	status,0,c
 33590  01A7C4  D00E               	goto	l10247
 33591  01A7C6                     u7970:
 33592                           
 33593                           ;stkvar	_x @ sp[(-10)+-4]
 33594  01A7C6  0EF2               	movlw	-14
 33595  01A7C8  006F FF8C  F02A    	movff	plusw1,btemp
 33596  01A7CE  0EF3               	movlw	-13
 33597  01A7D0  006F FF8C  F02B    	movff	plusw1,btemp+1
 33598  01A7D6  0EF4               	movlw	-12
 33599  01A7D8  006F FF8C  F02C    	movff	plusw1,btemp+2
 33600  01A7DE  0EF5               	movlw	-11
 33601  01A7E0  D11F               	goto	L36
 33602  01A7E2                     l10247:
 33603                           
 33604                           ;stkvar	_e @ sp[(-10)+8]
 33605  01A7E2  0EFF               	movlw	-1
 33606  01A7E4  BEE3               	btfsc	plusw1,7,c
 33607  01A7E6  D0B4               	goto	l10263
 33608                           
 33609                           ;stkvar	_e @ sp[(-10)+8]
 33610  01A7E8  0EFE               	movlw	-2
 33611  01A7EA  006F FF8C  F035    	movff	plusw1,btemp+11
 33612  01A7F0  0EFF               	movlw	255
 33613  01A7F2  6E2E               	movwf	(btemp+4)^0,c
 33614  01A7F4  0EFF               	movlw	255
 33615  01A7F6  6E2F               	movwf	(btemp+5)^0,c
 33616  01A7F8  0E7F               	movlw	127
 33617  01A7FA  6E30               	movwf	(btemp+6)^0,c
 33618  01A7FC  0E00               	movlw	0
 33619  01A7FE  6E31               	movwf	(btemp+7)^0,c
 33620  01A800                     u7995:
 33621  01A800  6635               	tstfsz	(btemp+11)^0,c
 33622  01A802  D001               	goto	u7996
 33623  01A804  D007               	goto	u7997
 33624  01A806                     u7996:
 33625  01A806  3431               	rlcf	(btemp+7)^0,w,c
 33626  01A808  3231               	rrcf	(btemp+7)^0,f,c
 33627  01A80A  3230               	rrcf	(btemp+6)^0,f,c
 33628  01A80C  322F               	rrcf	(btemp+5)^0,f,c
 33629  01A80E  322E               	rrcf	(btemp+4)^0,f,c
 33630  01A810  2E35               	decfsz	(btemp+11)^0,f,c
 33631  01A812  D7F6               	goto	u7995
 33632  01A814                     u7997:
 33633                           
 33634                           ;stkvar	_m @ sp[(-10)+4]
 33635  01A814  0EFA               	movlw	-6
 33636  01A816  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 33637  01A81C  0EFB               	movlw	-5
 33638  01A81E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 33639  01A824  0EFC               	movlw	-4
 33640  01A826  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33641  01A82C  0EFD               	movlw	-3
 33642  01A82E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33643                           
 33644                           ;stkvar	_m @ sp[(-10)+4]
 33645                           ;stkvar	_u @ sp[(-10)+0]
 33646  01A834  0EF6               	movlw	-10
 33647  01A836  006F FF8C  F032    	movff	plusw1,btemp+8
 33648  01A83C  0EF7               	movlw	-9
 33649  01A83E  006F FF8C  F033    	movff	plusw1,btemp+9
 33650  01A844  0EF8               	movlw	-8
 33651  01A846  006F FF8C  F034    	movff	plusw1,btemp+10
 33652  01A84C  0EF9               	movlw	-7
 33653  01A84E  006F FF8C  F035    	movff	plusw1,btemp+11
 33654  01A854  0EFA               	movlw	-6
 33655  01A856  50E3               	movf	plusw1,w,c
 33656  01A858  1632               	andwf	(btemp+8)^0,f,c
 33657  01A85A  0EFB               	movlw	-5
 33658  01A85C  50E3               	movf	plusw1,w,c
 33659  01A85E  1633               	andwf	(btemp+9)^0,f,c
 33660  01A860  0EFC               	movlw	-4
 33661  01A862  50E3               	movf	plusw1,w,c
 33662  01A864  1634               	andwf	(btemp+10)^0,f,c
 33663  01A866  0EFD               	movlw	-3
 33664  01A868  50E3               	movf	plusw1,w,c
 33665  01A86A  1635               	andwf	(btemp+11)^0,f,c
 33666  01A86C  5032               	movf	(btemp+8)^0,w,c
 33667  01A86E  1033               	iorwf	(btemp+9)^0,w,c
 33668  01A870  1034               	iorwf	(btemp+10)^0,w,c
 33669  01A872  1035               	iorwf	(btemp+11)^0,w,c
 33670  01A874  B4D8               	btfsc	status,2,c
 33671  01A876  D7A7               	goto	u7970
 33672                           
 33673                           ;stkvar	_u @ sp[(-10)+0]
 33674  01A878  0EF6               	movlw	-10
 33675  01A87A  006F FF8C  F032    	movff	plusw1,btemp+8
 33676  01A880  0EF7               	movlw	-9
 33677  01A882  006F FF8C  F033    	movff	plusw1,btemp+9
 33678  01A888  0EF8               	movlw	-8
 33679  01A88A  006F FF8C  F034    	movff	plusw1,btemp+10
 33680  01A890  0EF9               	movlw	-7
 33681  01A892  006F FF8C  F035    	movff	plusw1,btemp+11
 33682  01A898  0E20               	movlw	32
 33683  01A89A  D005               	goto	u8010
 33684  01A89C                     u8015:
 33685  01A89C  90D8               	bcf	status,0,c
 33686  01A89E  3235               	rrcf	(btemp+11)^0,f,c
 33687  01A8A0  3234               	rrcf	(btemp+10)^0,f,c
 33688  01A8A2  3233               	rrcf	(btemp+9)^0,f,c
 33689  01A8A4  3232               	rrcf	(btemp+8)^0,f,c
 33690  01A8A6                     u8010:
 33691  01A8A6  2EE8               	decfsz	wreg,f,c
 33692  01A8A8  D7F9               	goto	u8015
 33693  01A8AA  5032               	movf	(btemp+8)^0,w,c
 33694  01A8AC  B4D8               	btfsc	status,2,c
 33695  01A8AE  D028               	goto	l10261
 33696                           
 33697                           ;stkvar	_m @ sp[(-10)+4]
 33698                           ;stkvar	_u @ sp[(-10)+0]
 33699  01A8B0  0EF6               	movlw	-10
 33700  01A8B2  50E3               	movf	plusw1,w,c
 33701  01A8B4  6E2A               	movwf	btemp^0,c
 33702  01A8B6  0EFA               	movlw	-6
 33703  01A8B8  50E3               	movf	plusw1,w,c
 33704  01A8BA  262A               	addwf	btemp^0,f,c
 33705  01A8BC  0EF6               	movlw	-10
 33706  01A8BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33707  01A8C4  0EF7               	movlw	-9
 33708  01A8C6  50E3               	movf	plusw1,w,c
 33709  01A8C8  6E2A               	movwf	btemp^0,c
 33710  01A8CA  0EFB               	movlw	-5
 33711  01A8CC  50E3               	movf	plusw1,w,c
 33712  01A8CE  222A               	addwfc	btemp^0,f,c
 33713  01A8D0  0EF7               	movlw	-9
 33714  01A8D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 33715  01A8D8  0EF8               	movlw	-8
 33716  01A8DA  50E3               	movf	plusw1,w,c
 33717  01A8DC  6E2A               	movwf	btemp^0,c
 33718  01A8DE  0EFC               	movlw	-4
 33719  01A8E0  50E3               	movf	plusw1,w,c
 33720  01A8E2  222A               	addwfc	btemp^0,f,c
 33721  01A8E4  0EF8               	movlw	-8
 33722  01A8E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33723  01A8EC  0EF9               	movlw	-7
 33724  01A8EE  50E3               	movf	plusw1,w,c
 33725  01A8F0  6E2A               	movwf	btemp^0,c
 33726  01A8F2  0EFD               	movlw	-3
 33727  01A8F4  50E3               	movf	plusw1,w,c
 33728  01A8F6  222A               	addwfc	btemp^0,f,c
 33729  01A8F8  0EF9               	movlw	-7
 33730  01A8FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 33731  01A900                     l10261:
 33732                           
 33733                           ;stkvar	_m @ sp[(-10)+4]
 33734  01A900  0EFA               	movlw	-6
 33735  01A902  006F FF8C  F032    	movff	plusw1,btemp+8
 33736  01A908  0EFB               	movlw	-5
 33737  01A90A  006F FF8C  F033    	movff	plusw1,btemp+9
 33738  01A910  0EFC               	movlw	-4
 33739  01A912  006F FF8C  F034    	movff	plusw1,btemp+10
 33740  01A918  0EFD               	movlw	-3
 33741  01A91A  006F FF8C  F035    	movff	plusw1,btemp+11
 33742  01A920  1C32               	comf	(btemp+8)^0,w,c
 33743  01A922  6E2E               	movwf	(btemp+4)^0,c
 33744  01A924  1C33               	comf	(btemp+9)^0,w,c
 33745  01A926  6E2F               	movwf	(btemp+5)^0,c
 33746  01A928  1C34               	comf	(btemp+10)^0,w,c
 33747  01A92A  6E30               	movwf	(btemp+6)^0,c
 33748  01A92C  1C35               	comf	(btemp+11)^0,w,c
 33749  01A92E  6E31               	movwf	(btemp+7)^0,c
 33750                           
 33751                           ;stkvar	_u @ sp[(-10)+0]
 33752  01A930  50E1               	movf	fsr1l,w,c
 33753  01A932  0FF6               	addlw	-10
 33754  01A934  6ED9               	movwf	fsr2l,c
 33755  01A936  50E2               	movf	fsr1h,w,c
 33756  01A938  6EDA               	movwf	fsr2h,c
 33757  01A93A  0EFF               	movlw	255
 33758  01A93C  22DA               	addwfc	fsr2h,f,c
 33759  01A93E  502E               	movf	(btemp+4)^0,w,c
 33760  01A940  16DE               	andwf	postinc2,f,c
 33761  01A942  502F               	movf	(btemp+5)^0,w,c
 33762  01A944  16DE               	andwf	postinc2,f,c
 33763  01A946  5030               	movf	(btemp+6)^0,w,c
 33764  01A948  16DE               	andwf	postinc2,f,c
 33765  01A94A  5031               	movf	(btemp+7)^0,w,c
 33766  01A94C  16DE               	andwf	postinc2,f,c
 33767  01A94E  D05B               	goto	l10271
 33768  01A950                     l10263:
 33769                           
 33770                           ;stkvar	_u @ sp[(-10)+0]
 33771  01A950  0EF6               	movlw	-10
 33772  01A952  006F FF8C  F032    	movff	plusw1,btemp+8
 33773  01A958  0EF7               	movlw	-9
 33774  01A95A  006F FF8C  F033    	movff	plusw1,btemp+9
 33775  01A960  0EF8               	movlw	-8
 33776  01A962  006F FF8C  F034    	movff	plusw1,btemp+10
 33777  01A968  0EF9               	movlw	-7
 33778  01A96A  006F FF8C  F035    	movff	plusw1,btemp+11
 33779  01A970  0E20               	movlw	32
 33780  01A972  D005               	goto	u8030
 33781  01A974                     u8035:
 33782  01A974  90D8               	bcf	status,0,c
 33783  01A976  3235               	rrcf	(btemp+11)^0,f,c
 33784  01A978  3234               	rrcf	(btemp+10)^0,f,c
 33785  01A97A  3233               	rrcf	(btemp+9)^0,f,c
 33786  01A97C  3232               	rrcf	(btemp+8)^0,f,c
 33787  01A97E                     u8030:
 33788  01A97E  2EE8               	decfsz	wreg,f,c
 33789  01A980  D7F9               	goto	u8035
 33790  01A982  6632               	tstfsz	(btemp+8)^0,c
 33791  01A984  D009               	goto	l10267
 33792                           
 33793                           ;stkvar	_u @ sp[(-10)+0]
 33794  01A986  0EF6               	movlw	-10
 33795  01A988  6AE3               	clrf	plusw1,c
 33796  01A98A  0EF7               	movlw	-9
 33797  01A98C  6AE3               	clrf	plusw1,c
 33798  01A98E  0EF8               	movlw	-8
 33799  01A990  6AE3               	clrf	plusw1,c
 33800  01A992  0EF9               	movlw	-7
 33801  01A994  6AE3               	clrf	plusw1,c
 33802  01A996  D037               	goto	l10271
 33803  01A998                     l10267:
 33804                           
 33805                           ;stkvar	_u @ sp[(-10)+0]
 33806  01A998  0EF6               	movlw	-10
 33807  01A99A  006F FF8C  F032    	movff	plusw1,btemp+8
 33808  01A9A0  0EF7               	movlw	-9
 33809  01A9A2  006F FF8C  F033    	movff	plusw1,btemp+9
 33810  01A9A8  0EF8               	movlw	-8
 33811  01A9AA  006F FF8C  F034    	movff	plusw1,btemp+10
 33812  01A9B0  0EF9               	movlw	-7
 33813  01A9B2  006F FF8C  F035    	movff	plusw1,btemp+11
 33814  01A9B8  90D8               	bcf	status,0,c
 33815  01A9BA  3432               	rlcf	(btemp+8)^0,w,c
 33816  01A9BC  6E2E               	movwf	(btemp+4)^0,c
 33817  01A9BE  3433               	rlcf	(btemp+9)^0,w,c
 33818  01A9C0  6E2F               	movwf	(btemp+5)^0,c
 33819  01A9C2  3434               	rlcf	(btemp+10)^0,w,c
 33820  01A9C4  6E30               	movwf	(btemp+6)^0,c
 33821  01A9C6  3435               	rlcf	(btemp+11)^0,w,c
 33822  01A9C8  6E31               	movwf	(btemp+7)^0,c
 33823  01A9CA  502E               	movf	(btemp+4)^0,w,c
 33824  01A9CC  102F               	iorwf	(btemp+5)^0,w,c
 33825  01A9CE  1030               	iorwf	(btemp+6)^0,w,c
 33826  01A9D0  1031               	iorwf	(btemp+7)^0,w,c
 33827  01A9D2  B4D8               	btfsc	status,2,c
 33828  01A9D4  D018               	goto	l10271
 33829  01A9D6  0E00               	movlw	0
 33830  01A9D8  6E32               	movwf	(btemp+8)^0,c
 33831  01A9DA  0E00               	movlw	0
 33832  01A9DC  6E33               	movwf	(btemp+9)^0,c
 33833  01A9DE  0E80               	movlw	128
 33834  01A9E0  6E34               	movwf	(btemp+10)^0,c
 33835  01A9E2  0EBF               	movlw	191
 33836  01A9E4  6E35               	movwf	(btemp+11)^0,c
 33837                           
 33838                           ;stkvar	_u @ sp[(-10)+0]
 33839  01A9E6  0EF6               	movlw	-10
 33840  01A9E8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33841  01A9EE  0EF7               	movlw	-9
 33842  01A9F0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33843  01A9F6  0EF8               	movlw	-8
 33844  01A9F8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33845  01A9FE  0EF9               	movlw	-7
 33846  01AA00  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33847  01AA06                     l10271:
 33848                           
 33849                           ;stkvar	_u @ sp[(-10)+0]
 33850  01AA06  0EF6               	movlw	-10
 33851  01AA08  006F FF8C  F02A    	movff	plusw1,btemp
 33852  01AA0E  0EF7               	movlw	-9
 33853  01AA10  006F FF8C  F02B    	movff	plusw1,btemp+1
 33854  01AA16  0EF8               	movlw	-8
 33855  01AA18  006F FF8C  F02C    	movff	plusw1,btemp+2
 33856  01AA1E  0EF9               	movlw	-7
 33857  01AA20                     L36:
 33858  01AA20  006F FF8C  F02D    	movff	plusw1,btemp+3
 33859                           
 33860                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33861  01AA26  0EF2               	movlw	242
 33862  01AA28  26E1               	addwf	fsr1l,f,c
 33863  01AA2A  0EFF               	movlw	255
 33864  01AA2C  22E2               	addwfc	fsr1h,f,c
 33865  01AA2E  0012               	return		;funcret
 33866  01AA30                     __end_of_floorf:
 33867                           	opt callstack 0
 33868                           
 33869 ;; *************** function ___fpclassifyf *****************
 33870 ;; Defined at:
 33871 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 33872 ;; Parameters:    Size  Location     Type
 33873 ;;  x               4  [STACK] float 
 33874 ;; Auto vars:     Size  Location     Type
 33875 ;;  u               4  [STACK] struct .
 33876 ;;  e               2  [STACK] int 
 33877 ;; Return value:  Size  Location     Type
 33878 ;;                  2  [STACK] int 
 33879 ;; Registers used:
 33880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 33881 ;; Tracked objects:
 33882 ;;		On entry : 0/0
 33883 ;;		On exit  : 0/0
 33884 ;;		Unchanged: 0/0
 33885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33890 ;;Total ram usage:        0 bytes
 33891 ;; Hardware stack levels used:    1
 33892 ;; Hardware stack levels required when called:   15
 33893 ;; This function calls:
 33894 ;;		Nothing
 33895 ;; This function is called by:
 33896 ;;		_efgtoa
 33897 ;; This function uses a reentrant model
 33898 ;;
 33899                           
 33900                           	psect	text110
 33901  01E1CA                     __ptext110:
 33902                           	opt callstack 0
 33903  01E1CA                     ___fpclassifyf:
 33904                           	opt callstack 0
 33905                           
 33906                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33907  01E1CA  0E06               	movlw	6
 33908  01E1CC  26E1               	addwf	fsr1l,f,c
 33909  01E1CE  0E00               	movlw	0
 33910  01E1D0  22E2               	addwfc	fsr1h,f,c
 33911                           
 33912                           ;incstack = 0
 33913 ;; hardware stack exceeded
 33914  01E1D2  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 33915  01E1D8  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 33916  01E1DE  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 33917  01E1E4  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 33918                           
 33919                           ;stkvar	_u @ sp[(-6)+0]
 33920  01E1EA  0EFA               	movlw	-6
 33921  01E1EC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33922  01E1F2  0EFB               	movlw	-5
 33923  01E1F4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33924  01E1FA  0EFC               	movlw	-4
 33925  01E1FC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33926  01E202  0EFD               	movlw	-3
 33927  01E204  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33928                           
 33929                           ;stkvar	_x @ sp[(-6)+-4]
 33930  01E20A  0EF6               	movlw	-10
 33931  01E20C  006F FF8C  F032    	movff	plusw1,btemp+8
 33932  01E212  0EF7               	movlw	-9
 33933  01E214  006F FF8C  F033    	movff	plusw1,btemp+9
 33934  01E21A  0EF8               	movlw	-8
 33935  01E21C  006F FF8C  F034    	movff	plusw1,btemp+10
 33936  01E222  0EF9               	movlw	-7
 33937  01E224  006F FF8C  F035    	movff	plusw1,btemp+11
 33938                           
 33939                           ;stkvar	_u @ sp[(-6)+0]
 33940  01E22A  0EFA               	movlw	-6
 33941  01E22C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33942  01E232  0EFB               	movlw	-5
 33943  01E234  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33944  01E23A  0EFC               	movlw	-4
 33945  01E23C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33946  01E242  0EFD               	movlw	-3
 33947  01E244  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33948                           
 33949                           ;stkvar	_u @ sp[(-6)+0]
 33950  01E24A  0EFA               	movlw	-6
 33951  01E24C  006F FF8C  F032    	movff	plusw1,btemp+8
 33952  01E252  0EFB               	movlw	-5
 33953  01E254  006F FF8C  F033    	movff	plusw1,btemp+9
 33954  01E25A  0EFC               	movlw	-4
 33955  01E25C  006F FF8C  F034    	movff	plusw1,btemp+10
 33956  01E262  0EFD               	movlw	-3
 33957  01E264  006F FF8C  F035    	movff	plusw1,btemp+11
 33958  01E26A  0E18               	movlw	24
 33959  01E26C  D005               	goto	u7840
 33960  01E26E                     u7845:
 33961  01E26E  90D8               	bcf	status,0,c
 33962  01E270  3235               	rrcf	(btemp+11)^0,f,c
 33963  01E272  3234               	rrcf	(btemp+10)^0,f,c
 33964  01E274  3233               	rrcf	(btemp+9)^0,f,c
 33965  01E276  3232               	rrcf	(btemp+8)^0,f,c
 33966  01E278                     u7840:
 33967  01E278  2EE8               	decfsz	wreg,f,c
 33968  01E27A  D7F9               	goto	u7845
 33969  01E27C  0060  F0C8  F030   	movff	btemp+8,btemp+6
 33970  01E282  0060  F0CC  F031   	movff	btemp+9,btemp+7
 33971  01E288  0EFF               	movlw	255
 33972  01E28A  1630               	andwf	(btemp+6)^0,f,c
 33973  01E28C  0E00               	movlw	0
 33974  01E28E  1631               	andwf	(btemp+7)^0,f,c
 33975                           
 33976                           ;stkvar	_e @ sp[(-6)+4]
 33977  01E290  0EFE               	movlw	-2
 33978  01E292  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33979  01E298  0EFF               	movlw	-1
 33980  01E29A  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33981                           
 33982                           ;stkvar	_e @ sp[(-6)+4]
 33983  01E2A0  0EFE               	movlw	-2
 33984  01E2A2  006F FF8C  F02A    	movff	plusw1,btemp
 33985  01E2A8  0EFF               	movlw	-1
 33986  01E2AA  50E3               	movf	plusw1,w,c
 33987  01E2AC  102A               	iorwf	btemp^0,w,c
 33988  01E2AE  A4D8               	btfss	status,2,c
 33989  01E2B0  D023               	goto	l10209
 33990                           
 33991                           ;stkvar	_u @ sp[(-6)+0]
 33992  01E2B2  0EFA               	movlw	-6
 33993  01E2B4  006F FF8C  F032    	movff	plusw1,btemp+8
 33994  01E2BA  0EFB               	movlw	-5
 33995  01E2BC  006F FF8C  F033    	movff	plusw1,btemp+9
 33996  01E2C2  0EFC               	movlw	-4
 33997  01E2C4  006F FF8C  F034    	movff	plusw1,btemp+10
 33998  01E2CA  0EFD               	movlw	-3
 33999  01E2CC  006F FF8C  F035    	movff	plusw1,btemp+11
 34000  01E2D2  90D8               	bcf	status,0,c
 34001  01E2D4  3432               	rlcf	(btemp+8)^0,w,c
 34002  01E2D6  6E2E               	movwf	(btemp+4)^0,c
 34003  01E2D8  3433               	rlcf	(btemp+9)^0,w,c
 34004  01E2DA  6E2F               	movwf	(btemp+5)^0,c
 34005  01E2DC  3434               	rlcf	(btemp+10)^0,w,c
 34006  01E2DE  6E30               	movwf	(btemp+6)^0,c
 34007  01E2E0  3435               	rlcf	(btemp+11)^0,w,c
 34008  01E2E2  6E31               	movwf	(btemp+7)^0,c
 34009  01E2E4  502E               	movf	(btemp+4)^0,w,c
 34010  01E2E6  102F               	iorwf	(btemp+5)^0,w,c
 34011  01E2E8  1030               	iorwf	(btemp+6)^0,w,c
 34012  01E2EA  1031               	iorwf	(btemp+7)^0,w,c
 34013  01E2EC  A4D8               	btfss	status,2,c
 34014  01E2EE  D002               	goto	l10205
 34015  01E2F0  0E02               	movlw	2
 34016  01E2F2  D02E               	goto	L37
 34017  01E2F4                     l10205:
 34018  01E2F4  0E03               	movlw	3
 34019  01E2F6  D02C               	goto	L37
 34020  01E2F8                     l10209:
 34021                           
 34022                           ;stkvar	_e @ sp[(-6)+4]
 34023  01E2F8  0EFE               	movlw	-2
 34024  01E2FA  28E3               	incf	plusw1,w,c
 34025  01E2FC  E128               	bnz	l10215
 34026  01E2FE  0EFF               	movlw	-1
 34027  01E300  50E3               	movf	plusw1,w,c
 34028  01E302  A4D8               	btfss	status,2,c
 34029  01E304  D024               	goto	l10215
 34030                           
 34031                           ;stkvar	_u @ sp[(-6)+0]
 34032  01E306  0EFA               	movlw	-6
 34033  01E308  006F FF8C  F032    	movff	plusw1,btemp+8
 34034  01E30E  0EFB               	movlw	-5
 34035  01E310  006F FF8C  F033    	movff	plusw1,btemp+9
 34036  01E316  0EFC               	movlw	-4
 34037  01E318  006F FF8C  F034    	movff	plusw1,btemp+10
 34038  01E31E  0EFD               	movlw	-3
 34039  01E320  006F FF8C  F035    	movff	plusw1,btemp+11
 34040  01E326  0E09               	movlw	9
 34041  01E328                     u7885:
 34042  01E328  90D8               	bcf	status,0,c
 34043  01E32A  3632               	rlcf	(btemp+8)^0,f,c
 34044  01E32C  3633               	rlcf	(btemp+9)^0,f,c
 34045  01E32E  3634               	rlcf	(btemp+10)^0,f,c
 34046  01E330  3635               	rlcf	(btemp+11)^0,f,c
 34047  01E332  2EE8               	decfsz	wreg,f,c
 34048  01E334  D7F9               	goto	u7885
 34049  01E336  5032               	movf	(btemp+8)^0,w,c
 34050  01E338  1033               	iorwf	(btemp+9)^0,w,c
 34051  01E33A  1034               	iorwf	(btemp+10)^0,w,c
 34052  01E33C  1035               	iorwf	(btemp+11)^0,w,c
 34053  01E33E  A4D8               	btfss	status,2,c
 34054  01E340  D002               	goto	u7890
 34055  01E342  0E01               	movlw	1
 34056  01E344  D001               	goto	u7900
 34057  01E346                     u7890:
 34058  01E346  0E00               	movlw	0
 34059  01E348                     u7900:
 34060  01E348  6E2A               	movwf	btemp^0,c
 34061  01E34A  6A2B               	clrf	(btemp+1)^0,c
 34062  01E34C  D004               	goto	l3414
 34063  01E34E                     l10215:
 34064  01E34E  0E04               	movlw	4
 34065  01E350                     L37:
 34066  01E350  6E2A               	movwf	btemp^0,c
 34067  01E352  0E00               	movlw	0
 34068  01E354  6E2B               	movwf	(btemp+1)^0,c
 34069  01E356                     l3414:
 34070                           
 34071                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 34072  01E356  0EF6               	movlw	246
 34073  01E358  26E1               	addwf	fsr1l,f,c
 34074  01E35A  0EFF               	movlw	255
 34075  01E35C  22E2               	addwfc	fsr1h,f,c
 34076  01E35E  0012               	return		;funcret
 34077  01E360                     __end_of___fpclassifyf:
 34078                           	opt callstack 0
 34079                           
 34080 ;; *************** function ___fltol *****************
 34081 ;; Defined at:
 34082 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 34083 ;; Parameters:    Size  Location     Type
 34084 ;;  f1              4  [STACK] int 
 34085 ;; Auto vars:     Size  Location     Type
 34086 ;;  exp1            1  [STACK] unsigned char 
 34087 ;;  sign1           1  [STACK] unsigned char 
 34088 ;; Return value:  Size  Location     Type
 34089 ;;                  4  [STACK] long 
 34090 ;; Registers used:
 34091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 34092 ;; Tracked objects:
 34093 ;;		On entry : 0/0
 34094 ;;		On exit  : 0/0
 34095 ;;		Unchanged: 0/0
 34096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34101 ;;Total ram usage:        0 bytes
 34102 ;; Hardware stack levels used:    1
 34103 ;; Hardware stack levels required when called:   15
 34104 ;; This function calls:
 34105 ;;		Nothing
 34106 ;; This function is called by:
 34107 ;;		_main
 34108 ;;		_convert_dac_raw
 34109 ;;		_load_hist_data
 34110 ;;		_calc_bsoc
 34111 ;;		_init_bsoc
 34112 ;;		_efgtoa
 34113 ;; This function uses a reentrant model
 34114 ;;
 34115                           
 34116                           	psect	text111
 34117  01EAFA                     __ptext111:
 34118                           	opt callstack 0
 34119  01EAFA                     ___fltol:
 34120                           	opt callstack 0
 34121                           
 34122                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34123  01EAFA  52E6               	movf	postinc1,f,c
 34124  01EAFC  52E6               	movf	postinc1,f,c
 34125                           
 34126                           ;stkvar	_f1 @ sp[(-2)+-4]
 34127                           
 34128                           ;incstack = 0
 34129 ;; hardware stack exceeded
 34130  01EAFE  0EFA               	movlw	-6
 34131  01EB00  006F FF8C  F032    	movff	plusw1,btemp+8
 34132  01EB06  0EFB               	movlw	-5
 34133  01EB08  006F FF8C  F033    	movff	plusw1,btemp+9
 34134  01EB0E  0EFC               	movlw	-4
 34135  01EB10  006F FF8C  F034    	movff	plusw1,btemp+10
 34136  01EB16  0EFD               	movlw	-3
 34137  01EB18  006F FF8C  F035    	movff	plusw1,btemp+11
 34138  01EB1E  0E18               	movlw	24
 34139  01EB20  D005               	goto	u9110
 34140  01EB22                     u9115:
 34141  01EB22  90D8               	bcf	status,0,c
 34142  01EB24  3235               	rrcf	(btemp+11)^0,f,c
 34143  01EB26  3234               	rrcf	(btemp+10)^0,f,c
 34144  01EB28  3233               	rrcf	(btemp+9)^0,f,c
 34145  01EB2A  3232               	rrcf	(btemp+8)^0,f,c
 34146  01EB2C                     u9110:
 34147  01EB2C  2EE8               	decfsz	wreg,f,c
 34148  01EB2E  D7F9               	goto	u9115
 34149                           
 34150                           ;stkvar	_exp1 @ sp[(-2)+0]
 34151  01EB30  0EFE               	movlw	-2
 34152  01EB32  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 34153  01EB38  0EFE               	movlw	-2
 34154  01EB3A  50E3               	movf	plusw1,w,c
 34155  01EB3C  A4D8               	btfss	status,2,c
 34156  01EB3E  D006               	goto	l10861
 34157  01EB40                     u9120:
 34158  01EB40  0E00               	movlw	0
 34159  01EB42  6E2A               	movwf	btemp^0,c
 34160  01EB44  6A2B               	clrf	(btemp+1)^0,c
 34161  01EB46  6A2C               	clrf	(btemp+2)^0,c
 34162  01EB48  6A2D               	clrf	(btemp+3)^0,c
 34163  01EB4A  D08B               	goto	l3030
 34164  01EB4C                     l10861:
 34165                           
 34166                           ;stkvar	_f1 @ sp[(-2)+-4]
 34167  01EB4C  0EFA               	movlw	-6
 34168  01EB4E  006F FF8C  F032    	movff	plusw1,btemp+8
 34169  01EB54  0EFB               	movlw	-5
 34170  01EB56  006F FF8C  F033    	movff	plusw1,btemp+9
 34171  01EB5C  0EFC               	movlw	-4
 34172  01EB5E  006F FF8C  F034    	movff	plusw1,btemp+10
 34173  01EB64  0EFD               	movlw	-3
 34174  01EB66  006F FF8C  F035    	movff	plusw1,btemp+11
 34175  01EB6C  0E20               	movlw	32
 34176  01EB6E  D005               	goto	u9130
 34177  01EB70                     u9135:
 34178  01EB70  90D8               	bcf	status,0,c
 34179  01EB72  3235               	rrcf	(btemp+11)^0,f,c
 34180  01EB74  3234               	rrcf	(btemp+10)^0,f,c
 34181  01EB76  3233               	rrcf	(btemp+9)^0,f,c
 34182  01EB78  3232               	rrcf	(btemp+8)^0,f,c
 34183  01EB7A                     u9130:
 34184  01EB7A  2EE8               	decfsz	wreg,f,c
 34185  01EB7C  D7F9               	goto	u9135
 34186                           
 34187                           ;stkvar	_sign1 @ sp[(-2)+1]
 34188  01EB7E  0EFF               	movlw	-1
 34189  01EB80  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 34190                           
 34191                           ;stkvar	_f1 @ sp[(-2)+-4]
 34192  01EB86  0EFC               	movlw	-4
 34193  01EB88  8EE3               	bsf	plusw1,7,c
 34194                           
 34195                           ;stkvar	_f1 @ sp[(-2)+-4]
 34196  01EB8A  50E1               	movf	fsr1l,w,c
 34197  01EB8C  0FFA               	addlw	-6
 34198  01EB8E  6ED9               	movwf	fsr2l,c
 34199  01EB90  50E2               	movf	fsr1h,w,c
 34200  01EB92  6EDA               	movwf	fsr2h,c
 34201  01EB94  0EFF               	movlw	255
 34202  01EB96  22DA               	addwfc	fsr2h,f,c
 34203  01EB98  0EFF               	movlw	255
 34204  01EB9A  16DE               	andwf	postinc2,f,c
 34205  01EB9C  0EFF               	movlw	255
 34206  01EB9E  16DE               	andwf	postinc2,f,c
 34207  01EBA0  0EFF               	movlw	255
 34208  01EBA2  16DE               	andwf	postinc2,f,c
 34209  01EBA4  0E00               	movlw	0
 34210  01EBA6  16DE               	andwf	postinc2,f,c
 34211                           
 34212                           ;stkvar	_exp1 @ sp[(-2)+0]
 34213  01EBA8  0EFE               	movlw	-2
 34214  01EBAA  006F FF8C  F02A    	movff	plusw1,btemp
 34215  01EBB0  0E96               	movlw	150
 34216  01EBB2  5E2A               	subwf	btemp^0,f,c
 34217  01EBB4  0EFE               	movlw	-2
 34218  01EBB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34219                           
 34220                           ;stkvar	_exp1 @ sp[(-2)+0]
 34221  01EBBC  0EFE               	movlw	-2
 34222  01EBBE  AEE3               	btfss	plusw1,7,c
 34223  01EBC0  D014               	goto	l10879
 34224                           
 34225                           ;stkvar	_exp1 @ sp[(-2)+0]
 34226  01EBC2  0EFE               	movlw	-2
 34227  01EBC4  50E3               	movf	plusw1,w,c
 34228  01EBC6  0A80               	xorlw	128
 34229  01EBC8  0F97               	addlw	151
 34230  01EBCA  A0D8               	btfss	status,0,c
 34231  01EBCC  D7B9               	goto	u9120
 34232  01EBCE                     l10877:
 34233                           
 34234                           ;stkvar	_f1 @ sp[(-2)+-4]
 34235  01EBCE  90D8               	bcf	status,0,c
 34236  01EBD0  0EFD               	movlw	-3
 34237  01EBD2  32E3               	rrcf	plusw1,f,c
 34238  01EBD4  0EFC               	movlw	-4
 34239  01EBD6  32E3               	rrcf	plusw1,f,c
 34240  01EBD8  0EFB               	movlw	-5
 34241  01EBDA  32E3               	rrcf	plusw1,f,c
 34242  01EBDC  0EFA               	movlw	-6
 34243  01EBDE  32E3               	rrcf	plusw1,f,c
 34244                           
 34245                           ;stkvar	_exp1 @ sp[(-2)+0]
 34246  01EBE0  0EFE               	movlw	-2
 34247  01EBE2  2AE3               	incf	plusw1,f,c
 34248  01EBE4  B4D8               	btfsc	status,2,c
 34249  01EBE6  D018               	goto	u9180
 34250  01EBE8  D7F2               	goto	l10877
 34251  01EBEA                     l10879:
 34252                           
 34253                           ;stkvar	_exp1 @ sp[(-2)+0]
 34254  01EBEA  0EFE               	movlw	-2
 34255  01EBEC  006F FF8C  F02A    	movff	plusw1,btemp
 34256  01EBF2  0E1F               	movlw	31
 34257  01EBF4  642A               	cpfsgt	btemp^0,c
 34258  01EBF6  D00C               	goto	l10887
 34259  01EBF8  D7A3               	goto	u9120
 34260  01EBFA                     l10885:
 34261                           
 34262                           ;stkvar	_f1 @ sp[(-2)+-4]
 34263  01EBFA  90D8               	bcf	status,0,c
 34264  01EBFC  0EFA               	movlw	-6
 34265  01EBFE  36E3               	rlcf	plusw1,f,c
 34266  01EC00  0EFB               	movlw	-5
 34267  01EC02  36E3               	rlcf	plusw1,f,c
 34268  01EC04  0EFC               	movlw	-4
 34269  01EC06  36E3               	rlcf	plusw1,f,c
 34270  01EC08  0EFD               	movlw	-3
 34271  01EC0A  36E3               	rlcf	plusw1,f,c
 34272                           
 34273                           ;stkvar	_exp1 @ sp[(-2)+0]
 34274  01EC0C  0EFE               	movlw	-2
 34275  01EC0E  06E3               	decf	plusw1,f,c
 34276  01EC10                     l10887:
 34277                           
 34278                           ;stkvar	_exp1 @ sp[(-2)+0]
 34279  01EC10  0EFE               	movlw	-2
 34280  01EC12  50E3               	movf	plusw1,w,c
 34281  01EC14  A4D8               	btfss	status,2,c
 34282  01EC16  D7F1               	goto	l10885
 34283  01EC18                     u9180:
 34284                           
 34285                           ;stkvar	_sign1 @ sp[(-2)+1]
 34286  01EC18  0EFF               	movlw	-1
 34287  01EC1A  50E3               	movf	plusw1,w,c
 34288  01EC1C  B4D8               	btfsc	status,2,c
 34289  01EC1E  D011               	goto	u9200
 34290                           
 34291                           ;stkvar	_f1 @ sp[(-2)+-4]
 34292                           ;stkvar	_f1 @ sp[(-2)+-4]
 34293  01EC20  0EFA               	movlw	-6
 34294  01EC22  6CE3               	negf	plusw1,c
 34295  01EC24  0EFB               	movlw	-5
 34296  01EC26  1EE3               	comf	plusw1,f,c
 34297  01EC28  0EFC               	movlw	-4
 34298  01EC2A  1EE3               	comf	plusw1,f,c
 34299  01EC2C  0EFD               	movlw	-3
 34300  01EC2E  1EE3               	comf	plusw1,f,c
 34301  01EC30  E308               	bnc	u9200
 34302  01EC32  0EFB               	movlw	-5
 34303  01EC34  2AE3               	incf	plusw1,f,c
 34304  01EC36  E305               	bnc	u9200
 34305  01EC38  0EFC               	movlw	-4
 34306  01EC3A  2AE3               	incf	plusw1,f,c
 34307  01EC3C  E302               	bnc	u9200
 34308  01EC3E  0EFD               	movlw	-3
 34309  01EC40  2AE3               	incf	plusw1,f,c
 34310  01EC42                     u9200:
 34311                           
 34312                           ;stkvar	_f1 @ sp[(-2)+-4]
 34313  01EC42  0EFA               	movlw	-6
 34314  01EC44  006F FF8C  F02A    	movff	plusw1,btemp
 34315  01EC4A  0EFB               	movlw	-5
 34316  01EC4C  006F FF8C  F02B    	movff	plusw1,btemp+1
 34317  01EC52  0EFC               	movlw	-4
 34318  01EC54  006F FF8C  F02C    	movff	plusw1,btemp+2
 34319  01EC5A  0EFD               	movlw	-3
 34320  01EC5C  006F FF8C  F02D    	movff	plusw1,btemp+3
 34321  01EC62                     l3030:
 34322                           
 34323                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34324  01EC62  0EFA               	movlw	250
 34325  01EC64  26E1               	addwf	fsr1l,f,c
 34326  01EC66  0EFF               	movlw	255
 34327  01EC68  22E2               	addwfc	fsr1h,f,c
 34328  01EC6A  0012               	return		;funcret
 34329  01EC6C                     __end_of___fltol:
 34330                           	opt callstack 0
 34331                           
 34332 ;; *************** function ___flneg *****************
 34333 ;; Defined at:
 34334 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 34335 ;; Parameters:    Size  Location     Type
 34336 ;;  f1              4  [STACK] long 
 34337 ;; Auto vars:     Size  Location     Type
 34338 ;;		None
 34339 ;; Return value:  Size  Location     Type
 34340 ;;                  4  [STACK] long 
 34341 ;; Registers used:
 34342 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 34343 ;; Tracked objects:
 34344 ;;		On entry : 0/0
 34345 ;;		On exit  : 0/0
 34346 ;;		Unchanged: 0/0
 34347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34352 ;;Total ram usage:        0 bytes
 34353 ;; Hardware stack levels used:    1
 34354 ;; Hardware stack levels required when called:   15
 34355 ;; This function calls:
 34356 ;;		Nothing
 34357 ;; This function is called by:
 34358 ;;		_calc_bsoc
 34359 ;;		_efgtoa
 34360 ;; This function uses a reentrant model
 34361 ;;
 34362                           
 34363                           	psect	text112
 34364  00219A                     __ptext112:
 34365                           	opt callstack 0
 34366  00219A                     ___flneg:
 34367                           	opt callstack 0
 34368                           
 34369                           ;stkvar	_f1 @ sp[(0)+-4]
 34370                           
 34371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34372                           ;incstack = 0
 34373 ;; hardware stack exceeded
 34374  00219A  0EFC               	movlw	-4
 34375  00219C  50E3               	movf	plusw1,w,c
 34376  00219E  E10A               	bnz	u9100
 34377  0021A0  0EFD               	movlw	-3
 34378  0021A2  50E3               	movf	plusw1,w,c
 34379  0021A4  E107               	bnz	u9100
 34380  0021A6  0EFE               	movlw	-2
 34381  0021A8  50E3               	movf	plusw1,w,c
 34382  0021AA  E104               	bnz	u9100
 34383  0021AC  0EFF               	movlw	-1
 34384  0021AE  50E3               	movf	plusw1,w,c
 34385  0021B0  B4D8               	btfsc	status,2,c
 34386  0021B2  D002               	goto	l10851
 34387  0021B4                     u9100:
 34388                           
 34389                           ;stkvar	_f1 @ sp[(0)+-4]
 34390  0021B4  0EFF               	movlw	-1
 34391  0021B6  7EE3               	btg	plusw1,7,c
 34392  0021B8                     l10851:
 34393                           
 34394                           ;stkvar	_f1 @ sp[(0)+-4]
 34395  0021B8  0EFC               	movlw	-4
 34396  0021BA  006F FF8C  F02A    	movff	plusw1,btemp
 34397  0021C0  0EFD               	movlw	-3
 34398  0021C2  006F FF8C  F02B    	movff	plusw1,btemp+1
 34399  0021C8  0EFE               	movlw	-2
 34400  0021CA  006F FF8C  F02C    	movff	plusw1,btemp+2
 34401  0021D0  0EFF               	movlw	-1
 34402  0021D2  006F FF8C  F02D    	movff	plusw1,btemp+3
 34403                           
 34404                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34405  0021D8  52E5               	movf	postdec1,f,c
 34406  0021DA  52E5               	movf	postdec1,f,c
 34407  0021DC  52E5               	movf	postdec1,f,c
 34408  0021DE  52E5               	movf	postdec1,f,c
 34409  0021E0  0012               	return		;funcret
 34410  0021E2                     __end_of___flneg:
 34411                           	opt callstack 0
 34412                           
 34413 ;; *************** function ___fleq *****************
 34414 ;; Defined at:
 34415 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 34416 ;; Parameters:    Size  Location     Type
 34417 ;;  ff1             4  [STACK] long 
 34418 ;;  ff2             4  [STACK] long 
 34419 ;; Auto vars:     Size  Location     Type
 34420 ;;		None
 34421 ;; Return value:  Size  Location     Type
 34422 ;;		None               void
 34423 ;; Registers used:
 34424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 34425 ;; Tracked objects:
 34426 ;;		On entry : 0/0
 34427 ;;		On exit  : 0/0
 34428 ;;		Unchanged: 0/0
 34429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34434 ;;Total ram usage:        0 bytes
 34435 ;; Hardware stack levels used:    1
 34436 ;; Hardware stack levels required when called:   15
 34437 ;; This function calls:
 34438 ;;		Nothing
 34439 ;; This function is called by:
 34440 ;;		_efgtoa
 34441 ;; This function uses a reentrant model
 34442 ;;
 34443                           
 34444                           	psect	text113
 34445  000916                     __ptext113:
 34446                           	opt callstack 0
 34447  000916                     ___fleq:
 34448                           	opt callstack 0
 34449                           
 34450                           ;stkvar	_ff1 @ sp[(0)+-4]
 34451                           
 34452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34453                           ;incstack = 0
 34454 ;; hardware stack exceeded
 34455  000916  50E1               	movf	fsr1l,w,c
 34456  000918  0FFC               	addlw	-4
 34457  00091A  6ED9               	movwf	fsr2l,c
 34458  00091C  50E2               	movf	fsr1h,w,c
 34459  00091E  6EDA               	movwf	fsr2h,c
 34460  000920  0EFF               	movlw	255
 34461  000922  22DA               	addwfc	fsr2h,f,c
 34462  000924  0E00               	movlw	0
 34463  000926  14DE               	andwf	postinc2,w,c
 34464  000928  6E32               	movwf	(btemp+8)^0,c
 34465  00092A  0E00               	movlw	0
 34466  00092C  14DE               	andwf	postinc2,w,c
 34467  00092E  6E33               	movwf	(btemp+9)^0,c
 34468  000930  0E80               	movlw	128
 34469  000932  14DE               	andwf	postinc2,w,c
 34470  000934  6E34               	movwf	(btemp+10)^0,c
 34471  000936  0E7F               	movlw	127
 34472  000938  14DE               	andwf	postinc2,w,c
 34473  00093A  6E35               	movwf	(btemp+11)^0,c
 34474  00093C  5032               	movf	(btemp+8)^0,w,c
 34475  00093E  1033               	iorwf	(btemp+9)^0,w,c
 34476  000940  1034               	iorwf	(btemp+10)^0,w,c
 34477  000942  1035               	iorwf	(btemp+11)^0,w,c
 34478  000944  A4D8               	btfss	status,2,c
 34479  000946  D008               	goto	l10809
 34480                           
 34481                           ;stkvar	_ff1 @ sp[(0)+-4]
 34482  000948  0EFC               	movlw	-4
 34483  00094A  6AE3               	clrf	plusw1,c
 34484  00094C  0EFD               	movlw	-3
 34485  00094E  6AE3               	clrf	plusw1,c
 34486  000950  0EFE               	movlw	-2
 34487  000952  6AE3               	clrf	plusw1,c
 34488  000954  0EFF               	movlw	-1
 34489  000956  6AE3               	clrf	plusw1,c
 34490  000958                     l10809:
 34491                           
 34492                           ;stkvar	_ff2 @ sp[(0)+-8]
 34493  000958  50E1               	movf	fsr1l,w,c
 34494  00095A  0FF8               	addlw	-8
 34495  00095C  6ED9               	movwf	fsr2l,c
 34496  00095E  50E2               	movf	fsr1h,w,c
 34497  000960  6EDA               	movwf	fsr2h,c
 34498  000962  0EFF               	movlw	255
 34499  000964  22DA               	addwfc	fsr2h,f,c
 34500  000966  0E00               	movlw	0
 34501  000968  14DE               	andwf	postinc2,w,c
 34502  00096A  6E32               	movwf	(btemp+8)^0,c
 34503  00096C  0E00               	movlw	0
 34504  00096E  14DE               	andwf	postinc2,w,c
 34505  000970  6E33               	movwf	(btemp+9)^0,c
 34506  000972  0E80               	movlw	128
 34507  000974  14DE               	andwf	postinc2,w,c
 34508  000976  6E34               	movwf	(btemp+10)^0,c
 34509  000978  0E7F               	movlw	127
 34510  00097A  14DE               	andwf	postinc2,w,c
 34511  00097C  6E35               	movwf	(btemp+11)^0,c
 34512  00097E  5032               	movf	(btemp+8)^0,w,c
 34513  000980  1033               	iorwf	(btemp+9)^0,w,c
 34514  000982  1034               	iorwf	(btemp+10)^0,w,c
 34515  000984  1035               	iorwf	(btemp+11)^0,w,c
 34516  000986  A4D8               	btfss	status,2,c
 34517  000988  D008               	goto	l10813
 34518                           
 34519                           ;stkvar	_ff2 @ sp[(0)+-8]
 34520  00098A  0EF8               	movlw	-8
 34521  00098C  6AE3               	clrf	plusw1,c
 34522  00098E  0EF9               	movlw	-7
 34523  000990  6AE3               	clrf	plusw1,c
 34524  000992  0EFA               	movlw	-6
 34525  000994  6AE3               	clrf	plusw1,c
 34526  000996  0EFB               	movlw	-5
 34527  000998  6AE3               	clrf	plusw1,c
 34528  00099A                     l10813:
 34529                           
 34530                           ;stkvar	_ff2 @ sp[(0)+-8]
 34531                           ;stkvar	_ff1 @ sp[(0)+-4]
 34532  00099A  50E1               	movf	fsr1l,w,c
 34533  00099C  0FFC               	addlw	-4
 34534  00099E  6ED9               	movwf	fsr2l,c
 34535  0009A0  50E2               	movf	fsr1h,w,c
 34536  0009A2  6EDA               	movwf	fsr2h,c
 34537  0009A4  0EFF               	movlw	255
 34538  0009A6  22DA               	addwfc	fsr2h,f,c
 34539  0009A8  0EF8               	movlw	-8
 34540  0009AA  50E3               	movf	plusw1,w,c
 34541  0009AC  18DE               	xorwf	postinc2,w,c
 34542  0009AE  E10D               	bnz	u9040
 34543  0009B0  0EF9               	movlw	-7
 34544  0009B2  50E3               	movf	plusw1,w,c
 34545  0009B4  18DE               	xorwf	postinc2,w,c
 34546  0009B6  E109               	bnz	u9040
 34547  0009B8  0EFA               	movlw	-6
 34548  0009BA  50E3               	movf	plusw1,w,c
 34549  0009BC  18DE               	xorwf	postinc2,w,c
 34550  0009BE  E105               	bnz	u9040
 34551  0009C0  0EFB               	movlw	-5
 34552  0009C2  50E3               	movf	plusw1,w,c
 34553  0009C4  18DE               	xorwf	postinc2,w,c
 34554  0009C6  B4D8               	btfsc	status,2,c
 34555  0009C8  D002               	goto	l10817
 34556  0009CA                     u9040:
 34557  0009CA  902A               	bcf	btemp& (0+255),0,c
 34558  0009CC  D001               	goto	l2992
 34559  0009CE                     l10817:
 34560  0009CE  802A               	bsf	btemp& (0+255),0,c
 34561  0009D0                     l2992:
 34562                           
 34563                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 34564  0009D0  0EF8               	movlw	248
 34565  0009D2  26E1               	addwf	fsr1l,f,c
 34566  0009D4  0EFF               	movlw	255
 34567  0009D6  22E2               	addwfc	fsr1h,f,c
 34568  0009D8  0012               	return		;funcret
 34569  0009DA                     __end_of___fleq:
 34570                           	opt callstack 0
 34571                           
 34572 ;; *************** function ___awmod *****************
 34573 ;; Defined at:
 34574 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 34575 ;; Parameters:    Size  Location     Type
 34576 ;;  dividend        2  [STACK] int 
 34577 ;;  divisor         2  [STACK] int 
 34578 ;; Auto vars:     Size  Location     Type
 34579 ;;  sign            1  [STACK] unsigned char 
 34580 ;;  counter         1  [STACK] unsigned char 
 34581 ;; Return value:  Size  Location     Type
 34582 ;;                  2  [STACK] int 
 34583 ;; Registers used:
 34584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34585 ;; Tracked objects:
 34586 ;;		On entry : 0/3
 34587 ;;		On exit  : 0/0
 34588 ;;		Unchanged: 0/0
 34589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34594 ;;Total ram usage:        0 bytes
 34595 ;; Hardware stack levels used:    1
 34596 ;; Hardware stack levels required when called:   15
 34597 ;; This function calls:
 34598 ;;		Nothing
 34599 ;; This function is called by:
 34600 ;;		_efgtoa
 34601 ;;		_asctime
 34602 ;; This function uses a reentrant model
 34603 ;;
 34604                           
 34605                           	psect	text114
 34606  01FD06                     __ptext114:
 34607                           	opt callstack 0
 34608  01FD06                     ___awmod:
 34609                           	opt callstack 0
 34610                           
 34611                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34612  01FD06  52E6               	movf	postinc1,f,c
 34613  01FD08  52E6               	movf	postinc1,f,c
 34614                           
 34615                           ;stkvar	_sign @ sp[(-2)+0]
 34616                           
 34617                           ;incstack = 0
 34618 ;; hardware stack exceeded
 34619  01FD0A  0EFE               	movlw	-2
 34620  01FD0C  6AE3               	clrf	plusw1,c
 34621                           
 34622                           ;stkvar	_dividend @ sp[(-2)+-2]
 34623  01FD0E  0EFD               	movlw	-3
 34624  01FD10  AEE3               	btfss	plusw1,7,c
 34625  01FD12  D009               	goto	l15697
 34626                           
 34627                           ;stkvar	_dividend @ sp[(-2)+-2]
 34628                           ;stkvar	_dividend @ sp[(-2)+-2]
 34629  01FD14  0EFC               	movlw	-4
 34630  01FD16  6CE3               	negf	plusw1,c
 34631  01FD18  0EFD               	movlw	-3
 34632  01FD1A  1EE3               	comf	plusw1,f,c
 34633  01FD1C  B0D8               	btfsc	status,0,c
 34634  01FD1E  2AE3               	incf	plusw1,f,c
 34635                           
 34636                           ;stkvar	_sign @ sp[(-2)+0]
 34637  01FD20  0EFE               	movlw	-2
 34638  01FD22  6AE3               	clrf	plusw1,c
 34639  01FD24  2AE3               	incf	plusw1,f,c
 34640  01FD26                     l15697:
 34641                           
 34642                           ;stkvar	_divisor @ sp[(-2)+-4]
 34643  01FD26  0EFB               	movlw	-5
 34644  01FD28  AEE3               	btfss	plusw1,7,c
 34645  01FD2A  D006               	goto	l15701
 34646                           
 34647                           ;stkvar	_divisor @ sp[(-2)+-4]
 34648                           ;stkvar	_divisor @ sp[(-2)+-4]
 34649  01FD2C  0EFA               	movlw	-6
 34650  01FD2E  6CE3               	negf	plusw1,c
 34651  01FD30  0EFB               	movlw	-5
 34652  01FD32  1EE3               	comf	plusw1,f,c
 34653  01FD34  B0D8               	btfsc	status,0,c
 34654  01FD36  2AE3               	incf	plusw1,f,c
 34655  01FD38                     l15701:
 34656                           
 34657                           ;stkvar	_divisor @ sp[(-2)+-4]
 34658  01FD38  0EFA               	movlw	-6
 34659  01FD3A  006F FF8C  F02A    	movff	plusw1,btemp
 34660  01FD40  0EFB               	movlw	-5
 34661  01FD42  50E3               	movf	plusw1,w,c
 34662  01FD44  102A               	iorwf	btemp^0,w,c
 34663  01FD46  B4D8               	btfsc	status,2,c
 34664  01FD48  D053               	goto	u14680
 34665                           
 34666                           ;stkvar	_counter @ sp[(-2)+1]
 34667  01FD4A  0EFF               	movlw	-1
 34668  01FD4C  6AE3               	clrf	plusw1,c
 34669  01FD4E  D012               	goto	L38
 34670  01FD50                     l15705:
 34671                           
 34672                           ;stkvar	_divisor @ sp[(-2)+-4]
 34673  01FD50  0EFA               	movlw	-6
 34674  01FD52  50E3               	movf	plusw1,w,c
 34675  01FD54  90D8               	bcf	status,0,c
 34676  01FD56  34E8               	rlcf	wreg,w,c
 34677  01FD58  6E2A               	movwf	btemp^0,c
 34678  01FD5A  0EFA               	movlw	-6
 34679  01FD5C  0060  F0AB  FFE3   	movff	btemp,plusw1
 34680  01FD62  0EFB               	movlw	-5
 34681  01FD64  50E3               	movf	plusw1,w,c
 34682  01FD66  34E8               	rlcf	wreg,w,c
 34683  01FD68  6E2A               	movwf	btemp^0,c
 34684  01FD6A  0EFB               	movlw	-5
 34685  01FD6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 34686                           
 34687                           ;stkvar	_counter @ sp[(-2)+1]
 34688  01FD72  0EFF               	movlw	-1
 34689  01FD74                     L38:
 34690  01FD74  2AE3               	incf	plusw1,f,c
 34691                           
 34692                           ;stkvar	_divisor @ sp[(-2)+-4]
 34693  01FD76  0EFB               	movlw	-5
 34694  01FD78  AEE3               	btfss	plusw1,7,c
 34695  01FD7A  D7EA               	goto	l15705
 34696  01FD7C                     u14660:
 34697                           
 34698                           ;stkvar	_divisor @ sp[(-2)+-4]
 34699  01FD7C  0EFA               	movlw	-6
 34700  01FD7E  006F FF8C  F034    	movff	plusw1,btemp+10
 34701  01FD84  0EFB               	movlw	-5
 34702  01FD86  006F FF8C  F035    	movff	plusw1,btemp+11
 34703                           
 34704                           ;stkvar	_dividend @ sp[(-2)+-2]
 34705  01FD8C  0EFC               	movlw	-4
 34706  01FD8E  006F FF8C  F032    	movff	plusw1,btemp+8
 34707  01FD94  0EFD               	movlw	-3
 34708  01FD96  006F FF8C  F033    	movff	plusw1,btemp+9
 34709  01FD9C  5034               	movf	(btemp+10)^0,w,c
 34710  01FD9E  5C32               	subwf	(btemp+8)^0,w,c
 34711  01FDA0  5035               	movf	(btemp+11)^0,w,c
 34712  01FDA2  5833               	subwfb	(btemp+9)^0,w,c
 34713  01FDA4  A0D8               	btfss	status,0,c
 34714  01FDA6  D014               	goto	l15715
 34715                           
 34716                           ;stkvar	_divisor @ sp[(-2)+-4]
 34717                           ;stkvar	_dividend @ sp[(-2)+-2]
 34718  01FDA8  0EFC               	movlw	-4
 34719  01FDAA  50E3               	movf	plusw1,w,c
 34720  01FDAC  6E2A               	movwf	btemp^0,c
 34721  01FDAE  0EFA               	movlw	-6
 34722  01FDB0  50E3               	movf	plusw1,w,c
 34723  01FDB2  5E2A               	subwf	btemp^0,f,c
 34724  01FDB4  0EFC               	movlw	-4
 34725  01FDB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34726  01FDBC  0EFD               	movlw	-3
 34727  01FDBE  50E3               	movf	plusw1,w,c
 34728  01FDC0  6E2A               	movwf	btemp^0,c
 34729  01FDC2  0EFB               	movlw	-5
 34730  01FDC4  50E3               	movf	plusw1,w,c
 34731  01FDC6  5A2A               	subwfb	btemp^0,f,c
 34732  01FDC8  0EFD               	movlw	-3
 34733  01FDCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 34734  01FDD0                     l15715:
 34735                           
 34736                           ;stkvar	_divisor @ sp[(-2)+-4]
 34737  01FDD0  90D8               	bcf	status,0,c
 34738  01FDD2  0EFB               	movlw	-5
 34739  01FDD4  32E3               	rrcf	plusw1,f,c
 34740  01FDD6  0EFA               	movlw	-6
 34741  01FDD8  32E3               	rrcf	plusw1,f,c
 34742                           
 34743                           ;stkvar	_counter @ sp[(-2)+1]
 34744  01FDDA  0EFF               	movlw	-1
 34745  01FDDC  50E3               	movf	plusw1,w,c
 34746  01FDDE  6E2A               	movwf	btemp^0,c
 34747  01FDE0  0E01               	movlw	1
 34748  01FDE2  5E2A               	subwf	btemp^0,f,c
 34749  01FDE4  0EFF               	movlw	-1
 34750  01FDE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34751  01FDEC  A4D8               	btfss	status,2,c
 34752  01FDEE  D7C6               	goto	u14660
 34753  01FDF0                     u14680:
 34754                           
 34755                           ;stkvar	_sign @ sp[(-2)+0]
 34756  01FDF0  0EFE               	movlw	-2
 34757  01FDF2  50E3               	movf	plusw1,w,c
 34758  01FDF4  B4D8               	btfsc	status,2,c
 34759  01FDF6  D006               	goto	l15723
 34760                           
 34761                           ;stkvar	_dividend @ sp[(-2)+-2]
 34762                           ;stkvar	_dividend @ sp[(-2)+-2]
 34763  01FDF8  0EFC               	movlw	-4
 34764  01FDFA  6CE3               	negf	plusw1,c
 34765  01FDFC  0EFD               	movlw	-3
 34766  01FDFE  1EE3               	comf	plusw1,f,c
 34767  01FE00  B0D8               	btfsc	status,0,c
 34768  01FE02  2AE3               	incf	plusw1,f,c
 34769  01FE04                     l15723:
 34770                           
 34771                           ;stkvar	_dividend @ sp[(-2)+-2]
 34772  01FE04  0EFC               	movlw	-4
 34773  01FE06  006F FF8C  F02A    	movff	plusw1,btemp
 34774  01FE0C  0EFD               	movlw	-3
 34775  01FE0E  006F FF8C  F02B    	movff	plusw1,btemp+1
 34776                           
 34777                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34778  01FE14  0EFA               	movlw	250
 34779  01FE16  26E1               	addwf	fsr1l,f,c
 34780  01FE18  0EFF               	movlw	255
 34781  01FE1A  22E2               	addwfc	fsr1h,f,c
 34782  01FE1C  0012               	return		;funcret
 34783  01FE1E                     __end_of___awmod:
 34784                           	opt callstack 0
 34785                           
 34786 ;; *************** function ___awdiv *****************
 34787 ;; Defined at:
 34788 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 34789 ;; Parameters:    Size  Location     Type
 34790 ;;  dividend        2  [STACK] int 
 34791 ;;  divisor         2  [STACK] int 
 34792 ;; Auto vars:     Size  Location     Type
 34793 ;;  quotient        2  [STACK] int 
 34794 ;;  sign            1  [STACK] unsigned char 
 34795 ;;  counter         1  [STACK] unsigned char 
 34796 ;; Return value:  Size  Location     Type
 34797 ;;                  2  [STACK] int 
 34798 ;; Registers used:
 34799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34800 ;; Tracked objects:
 34801 ;;		On entry : 0/3
 34802 ;;		On exit  : 0/0
 34803 ;;		Unchanged: 0/0
 34804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34809 ;;Total ram usage:        0 bytes
 34810 ;; Hardware stack levels used:    1
 34811 ;; Hardware stack levels required when called:   15
 34812 ;; This function calls:
 34813 ;;		Nothing
 34814 ;; This function is called by:
 34815 ;;		_efgtoa
 34816 ;;		_put2d
 34817 ;;		_asctime
 34818 ;;		_scan_trans
 34819 ;; This function uses a reentrant model
 34820 ;;
 34821                           
 34822                           	psect	text115
 34823  01F4A8                     __ptext115:
 34824                           	opt callstack 0
 34825  01F4A8                     ___awdiv:
 34826                           	opt callstack 0
 34827                           
 34828                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34829  01F4A8  52E6               	movf	postinc1,f,c
 34830  01F4AA  52E6               	movf	postinc1,f,c
 34831  01F4AC  52E6               	movf	postinc1,f,c
 34832  01F4AE  52E6               	movf	postinc1,f,c
 34833                           
 34834                           ;stkvar	_sign @ sp[(-4)+2]
 34835                           
 34836                           ;incstack = 0
 34837 ;; hardware stack exceeded
 34838  01F4B0  0EFE               	movlw	-2
 34839  01F4B2  6AE3               	clrf	plusw1,c
 34840                           
 34841                           ;stkvar	_divisor @ sp[(-4)+-4]
 34842  01F4B4  0EF9               	movlw	-7
 34843  01F4B6  AEE3               	btfss	plusw1,7,c
 34844  01F4B8  D009               	goto	l15651
 34845                           
 34846                           ;stkvar	_divisor @ sp[(-4)+-4]
 34847                           ;stkvar	_divisor @ sp[(-4)+-4]
 34848  01F4BA  0EF8               	movlw	-8
 34849  01F4BC  6CE3               	negf	plusw1,c
 34850  01F4BE  0EF9               	movlw	-7
 34851  01F4C0  1EE3               	comf	plusw1,f,c
 34852  01F4C2  B0D8               	btfsc	status,0,c
 34853  01F4C4  2AE3               	incf	plusw1,f,c
 34854                           
 34855                           ;stkvar	_sign @ sp[(-4)+2]
 34856  01F4C6  0EFE               	movlw	-2
 34857  01F4C8  6AE3               	clrf	plusw1,c
 34858  01F4CA  2AE3               	incf	plusw1,f,c
 34859  01F4CC                     l15651:
 34860                           
 34861                           ;stkvar	_dividend @ sp[(-4)+-2]
 34862  01F4CC  0EFB               	movlw	-5
 34863  01F4CE  AEE3               	btfss	plusw1,7,c
 34864  01F4D0  D008               	goto	l15657
 34865                           
 34866                           ;stkvar	_dividend @ sp[(-4)+-2]
 34867                           ;stkvar	_dividend @ sp[(-4)+-2]
 34868  01F4D2  0EFA               	movlw	-6
 34869  01F4D4  6CE3               	negf	plusw1,c
 34870  01F4D6  0EFB               	movlw	-5
 34871  01F4D8  1EE3               	comf	plusw1,f,c
 34872  01F4DA  B0D8               	btfsc	status,0,c
 34873  01F4DC  2AE3               	incf	plusw1,f,c
 34874                           
 34875                           ;stkvar	_sign @ sp[(-4)+2]
 34876  01F4DE  0EFE               	movlw	-2
 34877  01F4E0  70E3               	btg	plusw1,0,c
 34878  01F4E2                     l15657:
 34879                           
 34880                           ;stkvar	_quotient @ sp[(-4)+0]
 34881  01F4E2  0EFC               	movlw	-4
 34882  01F4E4  6AE3               	clrf	plusw1,c
 34883  01F4E6  0EFD               	movlw	-3
 34884  01F4E8  6AE3               	clrf	plusw1,c
 34885                           
 34886                           ;stkvar	_divisor @ sp[(-4)+-4]
 34887  01F4EA  0EF8               	movlw	-8
 34888  01F4EC  006F FF8C  F02A    	movff	plusw1,btemp
 34889  01F4F2  0EF9               	movlw	-7
 34890  01F4F4  50E3               	movf	plusw1,w,c
 34891  01F4F6  102A               	iorwf	btemp^0,w,c
 34892  01F4F8  B4D8               	btfsc	status,2,c
 34893  01F4FA  D066               	goto	u14610
 34894                           
 34895                           ;stkvar	_counter @ sp[(-4)+3]
 34896  01F4FC  0EFF               	movlw	-1
 34897  01F4FE  6AE3               	clrf	plusw1,c
 34898  01F500  D012               	goto	L39
 34899  01F502                     l15663:
 34900                           
 34901                           ;stkvar	_divisor @ sp[(-4)+-4]
 34902  01F502  0EF8               	movlw	-8
 34903  01F504  50E3               	movf	plusw1,w,c
 34904  01F506  90D8               	bcf	status,0,c
 34905  01F508  34E8               	rlcf	wreg,w,c
 34906  01F50A  6E2A               	movwf	btemp^0,c
 34907  01F50C  0EF8               	movlw	-8
 34908  01F50E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34909  01F514  0EF9               	movlw	-7
 34910  01F516  50E3               	movf	plusw1,w,c
 34911  01F518  34E8               	rlcf	wreg,w,c
 34912  01F51A  6E2A               	movwf	btemp^0,c
 34913  01F51C  0EF9               	movlw	-7
 34914  01F51E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34915                           
 34916                           ;stkvar	_counter @ sp[(-4)+3]
 34917  01F524  0EFF               	movlw	-1
 34918  01F526                     L39:
 34919  01F526  2AE3               	incf	plusw1,f,c
 34920                           
 34921                           ;stkvar	_divisor @ sp[(-4)+-4]
 34922  01F528  0EF9               	movlw	-7
 34923  01F52A  AEE3               	btfss	plusw1,7,c
 34924  01F52C  D7EA               	goto	l15663
 34925  01F52E                     u14590:
 34926                           
 34927                           ;stkvar	_quotient @ sp[(-4)+0]
 34928  01F52E  0EFC               	movlw	-4
 34929  01F530  50E3               	movf	plusw1,w,c
 34930  01F532  90D8               	bcf	status,0,c
 34931  01F534  34E8               	rlcf	wreg,w,c
 34932  01F536  6E2A               	movwf	btemp^0,c
 34933  01F538  0EFC               	movlw	-4
 34934  01F53A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34935  01F540  0EFD               	movlw	-3
 34936  01F542  50E3               	movf	plusw1,w,c
 34937  01F544  34E8               	rlcf	wreg,w,c
 34938  01F546  6E2A               	movwf	btemp^0,c
 34939  01F548  0EFD               	movlw	-3
 34940  01F54A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34941                           
 34942                           ;stkvar	_divisor @ sp[(-4)+-4]
 34943  01F550  0EF8               	movlw	-8
 34944  01F552  006F FF8C  F034    	movff	plusw1,btemp+10
 34945  01F558  0EF9               	movlw	-7
 34946  01F55A  006F FF8C  F035    	movff	plusw1,btemp+11
 34947                           
 34948                           ;stkvar	_dividend @ sp[(-4)+-2]
 34949  01F560  0EFA               	movlw	-6
 34950  01F562  006F FF8C  F032    	movff	plusw1,btemp+8
 34951  01F568  0EFB               	movlw	-5
 34952  01F56A  006F FF8C  F033    	movff	plusw1,btemp+9
 34953  01F570  5034               	movf	(btemp+10)^0,w,c
 34954  01F572  5C32               	subwf	(btemp+8)^0,w,c
 34955  01F574  5035               	movf	(btemp+11)^0,w,c
 34956  01F576  5833               	subwfb	(btemp+9)^0,w,c
 34957  01F578  A0D8               	btfss	status,0,c
 34958  01F57A  D016               	goto	l15677
 34959                           
 34960                           ;stkvar	_divisor @ sp[(-4)+-4]
 34961                           ;stkvar	_dividend @ sp[(-4)+-2]
 34962  01F57C  0EFA               	movlw	-6
 34963  01F57E  50E3               	movf	plusw1,w,c
 34964  01F580  6E2A               	movwf	btemp^0,c
 34965  01F582  0EF8               	movlw	-8
 34966  01F584  50E3               	movf	plusw1,w,c
 34967  01F586  5E2A               	subwf	btemp^0,f,c
 34968  01F588  0EFA               	movlw	-6
 34969  01F58A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34970  01F590  0EFB               	movlw	-5
 34971  01F592  50E3               	movf	plusw1,w,c
 34972  01F594  6E2A               	movwf	btemp^0,c
 34973  01F596  0EF9               	movlw	-7
 34974  01F598  50E3               	movf	plusw1,w,c
 34975  01F59A  5A2A               	subwfb	btemp^0,f,c
 34976  01F59C  0EFB               	movlw	-5
 34977  01F59E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34978                           
 34979                           ;stkvar	_quotient @ sp[(-4)+0]
 34980  01F5A4  0EFC               	movlw	-4
 34981  01F5A6  80E3               	bsf	plusw1,0,c
 34982  01F5A8                     l15677:
 34983                           
 34984                           ;stkvar	_divisor @ sp[(-4)+-4]
 34985  01F5A8  90D8               	bcf	status,0,c
 34986  01F5AA  0EF9               	movlw	-7
 34987  01F5AC  32E3               	rrcf	plusw1,f,c
 34988  01F5AE  0EF8               	movlw	-8
 34989  01F5B0  32E3               	rrcf	plusw1,f,c
 34990                           
 34991                           ;stkvar	_counter @ sp[(-4)+3]
 34992  01F5B2  0EFF               	movlw	-1
 34993  01F5B4  50E3               	movf	plusw1,w,c
 34994  01F5B6  6E2A               	movwf	btemp^0,c
 34995  01F5B8  0E01               	movlw	1
 34996  01F5BA  5E2A               	subwf	btemp^0,f,c
 34997  01F5BC  0EFF               	movlw	-1
 34998  01F5BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 34999  01F5C4  A4D8               	btfss	status,2,c
 35000  01F5C6  D7B3               	goto	u14590
 35001  01F5C8                     u14610:
 35002                           
 35003                           ;stkvar	_sign @ sp[(-4)+2]
 35004  01F5C8  0EFE               	movlw	-2
 35005  01F5CA  50E3               	movf	plusw1,w,c
 35006  01F5CC  B4D8               	btfsc	status,2,c
 35007  01F5CE  D006               	goto	l15685
 35008                           
 35009                           ;stkvar	_quotient @ sp[(-4)+0]
 35010                           ;stkvar	_quotient @ sp[(-4)+0]
 35011  01F5D0  0EFC               	movlw	-4
 35012  01F5D2  6CE3               	negf	plusw1,c
 35013  01F5D4  0EFD               	movlw	-3
 35014  01F5D6  1EE3               	comf	plusw1,f,c
 35015  01F5D8  B0D8               	btfsc	status,0,c
 35016  01F5DA  2AE3               	incf	plusw1,f,c
 35017  01F5DC                     l15685:
 35018                           
 35019                           ;stkvar	_quotient @ sp[(-4)+0]
 35020  01F5DC  0EFC               	movlw	-4
 35021  01F5DE  006F FF8C  F02A    	movff	plusw1,btemp
 35022  01F5E4  0EFD               	movlw	-3
 35023  01F5E6  006F FF8C  F02B    	movff	plusw1,btemp+1
 35024                           
 35025                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 35026  01F5EC  0EF8               	movlw	248
 35027  01F5EE  26E1               	addwf	fsr1l,f,c
 35028  01F5F0  0EFF               	movlw	255
 35029  01F5F2  22E2               	addwfc	fsr1h,f,c
 35030  01F5F4  0012               	return		;funcret
 35031  01F5F6                     __end_of___awdiv:
 35032                           	opt callstack 0
 35033                           
 35034 ;; *************** function _dtoa *****************
 35035 ;; Defined at:
 35036 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35037 ;; Parameters:    Size  Location     Type
 35038 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35039 ;;		 -> f(6), NULL(0), 
 35040 ;;  d               8  [STACK] long long 
 35041 ;; Auto vars:     Size  Location     Type
 35042 ;;  n               8  [STACK] long long 
 35043 ;;  i               2  [STACK] int 
 35044 ;;  s               2  [STACK] int 
 35045 ;;  w               2  [STACK] int 
 35046 ;;  p               2  [STACK] int 
 35047 ;; Return value:  Size  Location     Type
 35048 ;;                  2  [STACK] int 
 35049 ;; Registers used:
 35050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 35051 ;; Tracked objects:
 35052 ;;		On entry : 0/0
 35053 ;;		On exit  : 0/0
 35054 ;;		Unchanged: 0/0
 35055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35060 ;;Total ram usage:        0 bytes
 35061 ;; Hardware stack levels used:    1
 35062 ;; Hardware stack levels required when called:   20
 35063 ;; This function calls:
 35064 ;;		___aodiv
 35065 ;;		___aomod
 35066 ;;		_abs
 35067 ;;		_pad
 35068 ;; This function is called by:
 35069 ;;		_vfpfcnvrt
 35070 ;; This function uses a reentrant model
 35071 ;;
 35072                           
 35073                           	psect	text116
 35074  0196BC                     __ptext116:
 35075                           	opt callstack 0
 35076  0196BC                     _dtoa:
 35077                           	opt callstack 0
 35078                           
 35079                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 35080  0196BC  0E12               	movlw	18
 35081  0196BE  26E1               	addwf	fsr1l,f,c
 35082  0196C0  0E00               	movlw	0
 35083  0196C2  22E2               	addwfc	fsr1h,f,c
 35084                           
 35085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 35086                           ;stkvar	_d @ sp[(-18)+-10]
 35087                           
 35088                           ;incstack = 0
 35089 ;; hardware stack exceeded
 35090  0196C4  0EE4               	movlw	228
 35091  0196C6  24E1               	addwf	fsr1l,w,c
 35092  0196C8  6ED9               	movwf	fsr2l,c
 35093  0196CA  0EFF               	movlw	255
 35094  0196CC  20E2               	addwfc	fsr1h,w,c
 35095  0196CE  6EDA               	movwf	fsr2h,c
 35096                           
 35097                           ;stkvar	_n @ sp[(-18)+2]
 35098  0196D0  0E08               	movlw	8
 35099  0196D2  6E2A               	movwf	btemp^0,c
 35100  0196D4  0EF0               	movlw	-16
 35101  0196D6                     us1472999:
 35102  0196D6  006F FF7B FFE3     	movff	postinc2,plusw1
 35103  0196DC  28E8               	incf	wreg,w,c
 35104  0196DE  2E2A               	decfsz	btemp^0,f,c
 35105  0196E0  D7FA               	bra	us1472999
 35106                           
 35107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 35108                           ;stkvar	_n @ sp[(-18)+2]
 35109  0196E2  0EF7               	movlw	-9
 35110  0196E4  AEE3               	btfss	plusw1,7,c
 35111  0196E6  D002               	goto	u14730
 35112  0196E8  0E01               	movlw	1
 35113  0196EA  D001               	goto	u14740
 35114  0196EC                     u14730:
 35115  0196EC  0E00               	movlw	0
 35116  0196EE                     u14740:
 35117  0196EE  6E34               	movwf	(btemp+10)^0,c
 35118  0196F0  6A35               	clrf	(btemp+11)^0,c
 35119                           
 35120                           ;stkvar	_s @ sp[(-18)+12]
 35121  0196F2  0EFA               	movlw	-6
 35122  0196F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35123  0196FA  0EFB               	movlw	-5
 35124  0196FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35125                           
 35126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 35127                           ;stkvar	_s @ sp[(-18)+12]
 35128  019702  0EFA               	movlw	-6
 35129  019704  006F FF8C  F02A    	movff	plusw1,btemp
 35130  01970A  0EFB               	movlw	-5
 35131  01970C  50E3               	movf	plusw1,w,c
 35132  01970E  102A               	iorwf	btemp^0,w,c
 35133  019710  B4D8               	btfsc	status,2,c
 35134  019712  D025               	goto	u14760
 35135                           
 35136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 35137                           ;stkvar	_n @ sp[(-18)+2]
 35138                           ;stkvar	_n @ sp[(-18)+2]
 35139  019714  0EF0               	movlw	-16
 35140  019716  6CE3               	negf	plusw1,c
 35141  019718  0EF1               	movlw	-15
 35142  01971A  1EE3               	comf	plusw1,f,c
 35143  01971C  0EF2               	movlw	-14
 35144  01971E  1EE3               	comf	plusw1,f,c
 35145  019720  0EF3               	movlw	-13
 35146  019722  1EE3               	comf	plusw1,f,c
 35147  019724  0EF4               	movlw	-12
 35148  019726  1EE3               	comf	plusw1,f,c
 35149  019728  0EF5               	movlw	-11
 35150  01972A  1EE3               	comf	plusw1,f,c
 35151  01972C  0EF6               	movlw	-10
 35152  01972E  1EE3               	comf	plusw1,f,c
 35153  019730  0EF7               	movlw	-9
 35154  019732  1EE3               	comf	plusw1,f,c
 35155  019734  E314               	bnc	u14760
 35156  019736  0EF1               	movlw	-15
 35157  019738  2AE3               	incf	plusw1,f,c
 35158  01973A  E311               	bnc	u14760
 35159  01973C  0EF2               	movlw	-14
 35160  01973E  2AE3               	incf	plusw1,f,c
 35161  019740  E30E               	bnc	u14760
 35162  019742  0EF3               	movlw	-13
 35163  019744  2AE3               	incf	plusw1,f,c
 35164  019746  E30B               	bnc	u14760
 35165  019748  0EF4               	movlw	-12
 35166  01974A  2AE3               	incf	plusw1,f,c
 35167  01974C  E308               	bnc	u14760
 35168  01974E  0EF5               	movlw	-11
 35169  019750  2AE3               	incf	plusw1,f,c
 35170  019752  E305               	bnc	u14760
 35171  019754  0EF6               	movlw	-10
 35172  019756  2AE3               	incf	plusw1,f,c
 35173  019758  E302               	bnc	u14760
 35174  01975A  0EF7               	movlw	-9
 35175  01975C  2AE3               	incf	plusw1,f,c
 35176  01975E                     u14760:
 35177                           
 35178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 35179  01975E  AE4D               	btfss	(_prec+1)^0,7,c
 35180                           
 35181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 35182  019760  924E               	bcf	_flags^0,1,c
 35183                           
 35184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 35185  019762  BE4D               	btfsc	(_prec+1)^0,7,c
 35186  019764  D005               	goto	u14780
 35187  019766  504D               	movf	(_prec+1)^0,w,c
 35188  019768  E110               	bnz	l15763
 35189  01976A  044C               	decf	_prec^0,w,c
 35190  01976C  B0D8               	btfsc	status,0,c
 35191  01976E  D00D               	goto	l15763
 35192  019770                     u14780:
 35193  019770  0E01               	movlw	1
 35194  019772  6E34               	movwf	(btemp+10)^0,c
 35195  019774  0E00               	movlw	0
 35196  019776  6E35               	movwf	(btemp+11)^0,c
 35197                           
 35198                           ;stkvar	_p @ sp[(-18)+16]
 35199  019778  0EFE               	movlw	-2
 35200  01977A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35201  019780  0EFF               	movlw	-1
 35202  019782  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35203  019788  D008               	goto	l2496
 35204  01978A                     l15763:
 35205                           
 35206                           ;stkvar	_p @ sp[(-18)+16]
 35207  01978A  0EFE               	movlw	-2
 35208  01978C  0060  F133  FFE3   	movff	_prec,plusw1
 35209  019792  0EFF               	movlw	-1
 35210  019794  0060  F137  FFE3   	movff	_prec+1,plusw1
 35211  01979A                     l2496:
 35212                           
 35213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 35214                           ;stkvar	_w @ sp[(-18)+14]
 35215  01979A  0EFC               	movlw	-4
 35216  01979C  0060  F12B  FFE3   	movff	_width,plusw1
 35217  0197A2  0EFD               	movlw	-3
 35218  0197A4  0060  F12F  FFE3   	movff	_width+1,plusw1
 35219                           
 35220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 35221                           ;stkvar	_s @ sp[(-18)+12]
 35222  0197AA  0EFA               	movlw	-6
 35223  0197AC  006F FF8C  F02A    	movff	plusw1,btemp
 35224  0197B2  0EFB               	movlw	-5
 35225  0197B4  50E3               	movf	plusw1,w,c
 35226  0197B6  102A               	iorwf	btemp^0,w,c
 35227  0197B8  A4D8               	btfss	status,2,c
 35228  0197BA  D002               	goto	u14800
 35229  0197BC  A44E               	btfss	_flags^0,2,c
 35230  0197BE  D00A               	goto	l15771
 35231  0197C0                     u14800:
 35232                           
 35233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 35234                           ;stkvar	_w @ sp[(-18)+14]
 35235  0197C0  50E1               	movf	fsr1l,w,c
 35236  0197C2  0FFC               	addlw	-4
 35237  0197C4  6ED9               	movwf	fsr2l,c
 35238  0197C6  50E2               	movf	fsr1h,w,c
 35239  0197C8  6EDA               	movwf	fsr2h,c
 35240  0197CA  0EFF               	movlw	255
 35241  0197CC  22DA               	addwfc	fsr2h,f,c
 35242  0197CE  06DE               	decf	postinc2,f,c
 35243  0197D0  0E00               	movlw	0
 35244  0197D2  5ADD               	subwfb	postdec2,f,c
 35245  0197D4                     l15771:
 35246                           
 35247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 35248  0197D4  0E4F               	movlw	79
 35249  0197D6  6E34               	movwf	(btemp+10)^0,c
 35250  0197D8  0E00               	movlw	0
 35251  0197DA  6E35               	movwf	(btemp+11)^0,c
 35252                           
 35253                           ;stkvar	_i @ sp[(-18)+10]
 35254  0197DC  0EF8               	movlw	-8
 35255  0197DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35256  0197E4  0EF9               	movlw	-7
 35257  0197E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35258                           
 35259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 35260  0197EC  0103               	movlb	3	; () banked
 35261  0197EE  6BA3               	clrf	(_dbuf+79)& (0+255),b
 35262                           
 35263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 35264  0197F0  D109               	goto	l15785
 35265  0197F2                     l15775:
 35266                           
 35267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 35268                           ;stkvar	_i @ sp[(-18)+10]
 35269  0197F2  50E1               	movf	fsr1l,w,c
 35270  0197F4  0FF8               	addlw	-8
 35271  0197F6  6ED9               	movwf	fsr2l,c
 35272  0197F8  50E2               	movf	fsr1h,w,c
 35273  0197FA  6EDA               	movwf	fsr2h,c
 35274  0197FC  0EFF               	movlw	255
 35275  0197FE  22DA               	addwfc	fsr2h,f,c
 35276  019800  06DE               	decf	postinc2,f,c
 35277  019802  0E00               	movlw	0
 35278  019804  5ADD               	subwfb	postdec2,f,c
 35279                           
 35280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 35281  019806  0E0A               	movlw	10
 35282  019808  6EE6               	movwf	postinc1,c
 35283  01980A  0E00               	movlw	0
 35284  01980C  6EE6               	movwf	postinc1,c
 35285  01980E  0E00               	movlw	0
 35286  019810  6EE6               	movwf	postinc1,c
 35287  019812  0E00               	movlw	0
 35288  019814  6EE6               	movwf	postinc1,c
 35289  019816  0E00               	movlw	0
 35290  019818  6EE6               	movwf	postinc1,c
 35291  01981A  0E00               	movlw	0
 35292  01981C  6EE6               	movwf	postinc1,c
 35293  01981E  0E00               	movlw	0
 35294  019820  6EE6               	movwf	postinc1,c
 35295  019822  0E00               	movlw	0
 35296  019824  6EE6               	movwf	postinc1,c
 35297                           
 35298                           ;stkvar	_n @ sp[(-26)+2]
 35299  019826  50E1               	movf	fsr1l,w,c
 35300  019828  0FE8               	addlw	-24
 35301  01982A  6ED9               	movwf	fsr2l,c
 35302  01982C  50E2               	movf	fsr1h,w,c
 35303  01982E  6EDA               	movwf	fsr2h,c
 35304  019830  0EFF               	movlw	255
 35305  019832  22DA               	addwfc	fsr2h,f,c
 35306  019834  006F FF7B FFE6     	movff	postinc2,postinc1
 35307  01983A  006F FF7B FFE6     	movff	postinc2,postinc1
 35308  019840  006F FF7B FFE6     	movff	postinc2,postinc1
 35309  019846  006F FF7B FFE6     	movff	postinc2,postinc1
 35310  01984C  006F FF7B FFE6     	movff	postinc2,postinc1
 35311  019852  006F FF7B FFE6     	movff	postinc2,postinc1
 35312  019858  006F FF7B FFE6     	movff	postinc2,postinc1
 35313  01985E  006F FF7B FFE6     	movff	postinc2,postinc1
 35314  019864  ECF0  F0E7         	call	___aomod	;wreg free
 35315  019868  52E5               	movf	postdec1,f,c
 35316  01986A  006F FF9C  F041    	movff	indf1,btemp+23
 35317  019870  52E5               	movf	postdec1,f,c
 35318  019872  006F FF9C  F040    	movff	indf1,btemp+22
 35319  019878  52E5               	movf	postdec1,f,c
 35320  01987A  006F FF9C  F03F    	movff	indf1,btemp+21
 35321  019880  52E5               	movf	postdec1,f,c
 35322  019882  006F FF9C  F03E    	movff	indf1,btemp+20
 35323  019888  52E5               	movf	postdec1,f,c
 35324  01988A  006F FF9C  F03D    	movff	indf1,btemp+19
 35325  019890  52E5               	movf	postdec1,f,c
 35326  019892  006F FF9C  F03C    	movff	indf1,btemp+18
 35327  019898  52E5               	movf	postdec1,f,c
 35328  01989A  006F FF9C  F03B    	movff	indf1,btemp+17
 35329  0198A0  52E5               	movf	postdec1,f,c
 35330  0198A2  006F FF9C  F03A    	movff	indf1,btemp+16
 35331  0198A8  0EF8               	movlw	248
 35332  0198AA  26E1               	addwf	fsr1l,f,c
 35333  0198AC  0EFF               	movlw	255
 35334  0198AE  22E2               	addwfc	fsr1h,f,c
 35335  0198B0  0060  F0E8  F034   	movff	btemp+16,btemp+10
 35336  0198B6  0060  F0EC  F035   	movff	btemp+17,btemp+11
 35337  0198BC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35338  0198C2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35339  0198C8  EC80  F011         	call	_abs	;wreg free
 35340  0198CC  0E30               	movlw	48
 35341  0198CE  262A               	addwf	btemp^0,f,c
 35342                           
 35343                           ;stkvar	_i @ sp[(-18)+10]
 35344  0198D0  0EF8               	movlw	-8
 35345  0198D2  006F FF8C  F034    	movff	plusw1,btemp+10
 35346  0198D8  0EF9               	movlw	-7
 35347  0198DA  006F FF8C  F035    	movff	plusw1,btemp+11
 35348  0198E0  0E54               	movlw	low _dbuf
 35349  0198E2  2434               	addwf	(btemp+10)^0,w,c
 35350  0198E4  6ED9               	movwf	fsr2l,c
 35351  0198E6  0E03               	movlw	high _dbuf
 35352  0198E8  2035               	addwfc	(btemp+11)^0,w,c
 35353  0198EA  6EDA               	movwf	fsr2h,c
 35354  0198EC  0060  F0AB  FFDF   	movff	btemp,indf2
 35355                           
 35356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 35357                           ;stkvar	_p @ sp[(-18)+16]
 35358  0198F2  50E1               	movf	fsr1l,w,c
 35359  0198F4  0FFE               	addlw	-2
 35360  0198F6  6ED9               	movwf	fsr2l,c
 35361  0198F8  50E2               	movf	fsr1h,w,c
 35362  0198FA  6EDA               	movwf	fsr2h,c
 35363  0198FC  0EFF               	movlw	255
 35364  0198FE  22DA               	addwfc	fsr2h,f,c
 35365  019900  06DE               	decf	postinc2,f,c
 35366  019902  0E00               	movlw	0
 35367  019904  5ADD               	subwfb	postdec2,f,c
 35368                           
 35369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 35370                           ;stkvar	_w @ sp[(-18)+14]
 35371  019906  50E1               	movf	fsr1l,w,c
 35372  019908  0FFC               	addlw	-4
 35373  01990A  6ED9               	movwf	fsr2l,c
 35374  01990C  50E2               	movf	fsr1h,w,c
 35375  01990E  6EDA               	movwf	fsr2h,c
 35376  019910  0EFF               	movlw	255
 35377  019912  22DA               	addwfc	fsr2h,f,c
 35378  019914  06DE               	decf	postinc2,f,c
 35379  019916  0E00               	movlw	0
 35380  019918  5ADD               	subwfb	postdec2,f,c
 35381                           
 35382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 35383  01991A  0E0A               	movlw	10
 35384  01991C  6EE6               	movwf	postinc1,c
 35385  01991E  0E00               	movlw	0
 35386  019920  6EE6               	movwf	postinc1,c
 35387  019922  0E00               	movlw	0
 35388  019924  6EE6               	movwf	postinc1,c
 35389  019926  0E00               	movlw	0
 35390  019928  6EE6               	movwf	postinc1,c
 35391  01992A  0E00               	movlw	0
 35392  01992C  6EE6               	movwf	postinc1,c
 35393  01992E  0E00               	movlw	0
 35394  019930  6EE6               	movwf	postinc1,c
 35395  019932  0E00               	movlw	0
 35396  019934  6EE6               	movwf	postinc1,c
 35397  019936  0E00               	movlw	0
 35398  019938  6EE6               	movwf	postinc1,c
 35399                           
 35400                           ;stkvar	_n @ sp[(-26)+2]
 35401  01993A  50E1               	movf	fsr1l,w,c
 35402  01993C  0FE8               	addlw	-24
 35403  01993E  6ED9               	movwf	fsr2l,c
 35404  019940  50E2               	movf	fsr1h,w,c
 35405  019942  6EDA               	movwf	fsr2h,c
 35406  019944  0EFF               	movlw	255
 35407  019946  22DA               	addwfc	fsr2h,f,c
 35408  019948  006F FF7B FFE6     	movff	postinc2,postinc1
 35409  01994E  006F FF7B FFE6     	movff	postinc2,postinc1
 35410  019954  006F FF7B FFE6     	movff	postinc2,postinc1
 35411  01995A  006F FF7B FFE6     	movff	postinc2,postinc1
 35412  019960  006F FF7B FFE6     	movff	postinc2,postinc1
 35413  019966  006F FF7B FFE6     	movff	postinc2,postinc1
 35414  01996C  006F FF7B FFE6     	movff	postinc2,postinc1
 35415  019972  006F FF7B FFE6     	movff	postinc2,postinc1
 35416  019978  EC04  F0E2         	call	___aodiv	;wreg free
 35417  01997C  52E5               	movf	postdec1,f,c
 35418  01997E  006F FF9C  F041    	movff	indf1,btemp+23
 35419  019984  52E5               	movf	postdec1,f,c
 35420  019986  006F FF9C  F040    	movff	indf1,btemp+22
 35421  01998C  52E5               	movf	postdec1,f,c
 35422  01998E  006F FF9C  F03F    	movff	indf1,btemp+21
 35423  019994  52E5               	movf	postdec1,f,c
 35424  019996  006F FF9C  F03E    	movff	indf1,btemp+20
 35425  01999C  52E5               	movf	postdec1,f,c
 35426  01999E  006F FF9C  F03D    	movff	indf1,btemp+19
 35427  0199A4  52E5               	movf	postdec1,f,c
 35428  0199A6  006F FF9C  F03C    	movff	indf1,btemp+18
 35429  0199AC  52E5               	movf	postdec1,f,c
 35430  0199AE  006F FF9C  F03B    	movff	indf1,btemp+17
 35431  0199B4  52E5               	movf	postdec1,f,c
 35432  0199B6  006F FF9C  F03A    	movff	indf1,btemp+16
 35433  0199BC  0EF8               	movlw	248
 35434  0199BE  26E1               	addwf	fsr1l,f,c
 35435  0199C0  0EFF               	movlw	255
 35436  0199C2  22E2               	addwfc	fsr1h,f,c
 35437                           
 35438                           ;stkvar	_n @ sp[(-18)+2]
 35439  0199C4  0EF0               	movlw	-16
 35440  0199C6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 35441  0199CC  0EF1               	movlw	-15
 35442  0199CE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 35443  0199D4  0EF2               	movlw	-14
 35444  0199D6  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 35445  0199DC  0EF3               	movlw	-13
 35446  0199DE  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 35447  0199E4  0EF4               	movlw	-12
 35448  0199E6  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 35449  0199EC  0EF5               	movlw	-11
 35450  0199EE  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 35451  0199F4  0EF6               	movlw	-10
 35452  0199F6  0060  F103  FFE3   	movff	btemp+22,plusw1
 35453  0199FC  0EF7               	movlw	-9
 35454  0199FE  0060  F107  FFE3   	movff	btemp+23,plusw1
 35455  019A04                     l15785:
 35456                           
 35457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 35458                           ;stkvar	_i @ sp[(-18)+10]
 35459  019A04  0EF9               	movlw	-7
 35460  019A06  BEE3               	btfsc	plusw1,7,c
 35461  019A08  D036               	goto	u14850
 35462  019A0A  0EF9               	movlw	-7
 35463  019A0C  50E3               	movf	plusw1,w,c
 35464  019A0E  E104               	bnz	u14810
 35465  019A10  0EF8               	movlw	-8
 35466  019A12  04E3               	decf	plusw1,w,c
 35467  019A14  A0D8               	btfss	status,0,c
 35468  019A16  D02F               	goto	u14850
 35469  019A18                     u14810:
 35470                           
 35471                           ;stkvar	_n @ sp[(-18)+2]
 35472  019A18  0EF0               	movlw	-16
 35473  019A1A  50E3               	movf	plusw1,w,c
 35474  019A1C  E115               	bnz	u14821
 35475  019A1E  0EF1               	movlw	-15
 35476  019A20  50E3               	movf	plusw1,w,c
 35477  019A22  E112               	bnz	u14821
 35478  019A24  0EF2               	movlw	-14
 35479  019A26  50E3               	movf	plusw1,w,c
 35480  019A28  E10F               	bnz	u14821
 35481  019A2A  0EF3               	movlw	-13
 35482  019A2C  50E3               	movf	plusw1,w,c
 35483  019A2E  E10C               	bnz	u14821
 35484  019A30  0EF4               	movlw	-12
 35485  019A32  50E3               	movf	plusw1,w,c
 35486  019A34  E109               	bnz	u14821
 35487  019A36  0EF5               	movlw	-11
 35488  019A38  50E3               	movf	plusw1,w,c
 35489  019A3A  E106               	bnz	u14821
 35490  019A3C  0EF6               	movlw	-10
 35491  019A3E  50E3               	movf	plusw1,w,c
 35492  019A40  E103               	bnz	u14821
 35493  019A42  0EF7               	movlw	-9
 35494  019A44  50E3               	movf	plusw1,w,c
 35495  019A46  A4D8               	btfss	status,2,c
 35496  019A48                     u14821:
 35497  019A48  D6D4               	goto	l15775
 35498                           
 35499                           ;stkvar	_p @ sp[(-18)+16]
 35500  019A4A  0EFF               	movlw	-1
 35501  019A4C  BEE3               	btfsc	plusw1,7,c
 35502  019A4E  D007               	goto	u14830
 35503  019A50  0EFF               	movlw	-1
 35504  019A52  50E3               	movf	plusw1,w,c
 35505  019A54  E103               	bnz	u14831
 35506  019A56  0EFE               	movlw	-2
 35507  019A58  04E3               	decf	plusw1,w,c
 35508  019A5A  B0D8               	btfsc	status,0,c
 35509  019A5C                     u14831:
 35510  019A5C  D6CA               	goto	l15775
 35511  019A5E                     u14830:
 35512                           
 35513                           ;stkvar	_w @ sp[(-18)+14]
 35514  019A5E  0EFD               	movlw	-3
 35515  019A60  BEE3               	btfsc	plusw1,7,c
 35516  019A62  D009               	goto	u14850
 35517  019A64  0EFD               	movlw	-3
 35518  019A66  50E3               	movf	plusw1,w,c
 35519  019A68  E104               	bnz	u14840
 35520  019A6A  0EFC               	movlw	-4
 35521  019A6C  04E3               	decf	plusw1,w,c
 35522  019A6E  A0D8               	btfss	status,0,c
 35523  019A70  D002               	goto	u14850
 35524  019A72                     u14840:
 35525  019A72  B24E               	btfsc	_flags^0,1,c
 35526  019A74  D6BE               	goto	l15775
 35527  019A76                     u14850:
 35528                           
 35529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 35530                           ;stkvar	_s @ sp[(-18)+12]
 35531  019A76  0EFA               	movlw	-6
 35532  019A78  006F FF8C  F02A    	movff	plusw1,btemp
 35533  019A7E  0EFB               	movlw	-5
 35534  019A80  50E3               	movf	plusw1,w,c
 35535  019A82  102A               	iorwf	btemp^0,w,c
 35536  019A84  A4D8               	btfss	status,2,c
 35537  019A86  D002               	goto	u14870
 35538  019A88  A44E               	btfss	_flags^0,2,c
 35539  019A8A  D033               	goto	l15809
 35540  019A8C                     u14870:
 35541                           
 35542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 35543                           ;stkvar	_i @ sp[(-18)+10]
 35544  019A8C  50E1               	movf	fsr1l,w,c
 35545  019A8E  0FF8               	addlw	-8
 35546  019A90  6ED9               	movwf	fsr2l,c
 35547  019A92  50E2               	movf	fsr1h,w,c
 35548  019A94  6EDA               	movwf	fsr2h,c
 35549  019A96  0EFF               	movlw	255
 35550  019A98  22DA               	addwfc	fsr2h,f,c
 35551  019A9A  06DE               	decf	postinc2,f,c
 35552  019A9C  0E00               	movlw	0
 35553  019A9E  5ADD               	subwfb	postdec2,f,c
 35554                           
 35555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 35556                           ;stkvar	_s @ sp[(-18)+12]
 35557  019AA0  0EFA               	movlw	-6
 35558  019AA2  006F FF8C  F02A    	movff	plusw1,btemp
 35559  019AA8  0EFB               	movlw	-5
 35560  019AAA  50E3               	movf	plusw1,w,c
 35561  019AAC  102A               	iorwf	btemp^0,w,c
 35562  019AAE  A4D8               	btfss	status,2,c
 35563  019AB0  D002               	goto	l15805
 35564  019AB2  0E2B               	movlw	43
 35565  019AB4  D001               	goto	L40
 35566  019AB6                     l15805:
 35567  019AB6  0E2D               	movlw	45
 35568  019AB8                     L40:
 35569  019AB8  6E34               	movwf	(btemp+10)^0,c
 35570  019ABA  0E00               	movlw	0
 35571  019ABC  6E35               	movwf	(btemp+11)^0,c
 35572                           
 35573                           ;stkvar	_dtoa$6614 @ sp[(-18)+0]
 35574  019ABE  0EEE               	movlw	-18
 35575  019AC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35576  019AC6  0EEF               	movlw	-17
 35577  019AC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35578                           
 35579                           ;stkvar	_dtoa$6614 @ sp[(-18)+0]
 35580                           ;stkvar	_i @ sp[(-18)+10]
 35581  019ACE  0EF8               	movlw	-8
 35582  019AD0  006F FF8C  F034    	movff	plusw1,btemp+10
 35583  019AD6  0EF9               	movlw	-7
 35584  019AD8  006F FF8C  F035    	movff	plusw1,btemp+11
 35585  019ADE  0E54               	movlw	low _dbuf
 35586  019AE0  2434               	addwf	(btemp+10)^0,w,c
 35587  019AE2  6ED9               	movwf	fsr2l,c
 35588  019AE4  0E03               	movlw	high _dbuf
 35589  019AE6  2035               	addwfc	(btemp+11)^0,w,c
 35590  019AE8  6EDA               	movwf	fsr2h,c
 35591  019AEA  0EEE               	movlw	-18
 35592  019AEC  006F FF8F FFDF     	movff	plusw1,indf2
 35593  019AF2                     l15809:
 35594                           
 35595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 35596                           ;stkvar	_w @ sp[(-18)+14]
 35597  019AF2  0EFC               	movlw	-4
 35598  019AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 35599  019AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 35600                           
 35601                           ;stkvar	_i @ sp[(-20)+10]
 35602  019B00  0E54               	movlw	low _dbuf
 35603  019B02  6E34               	movwf	(btemp+10)^0,c
 35604  019B04  0E03               	movlw	high _dbuf
 35605  019B06  6E35               	movwf	(btemp+11)^0,c
 35606  019B08  0EF6               	movlw	-10
 35607  019B0A  50E3               	movf	plusw1,w,c
 35608  019B0C  2634               	addwf	(btemp+10)^0,f,c
 35609  019B0E  0EF7               	movlw	-9
 35610  019B10  50E3               	movf	plusw1,w,c
 35611  019B12  2235               	addwfc	(btemp+11)^0,f,c
 35612  019B14  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35613  019B1A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35614                           
 35615                           ;stkvar	_fp @ sp[(-22)+-2]
 35616  019B20  0EE8               	movlw	-24
 35617  019B22  006F FF8F FFE6     	movff	plusw1,postinc1
 35618  019B28  006F FF8F FFE6     	movff	plusw1,postinc1
 35619  019B2E  EC0F  F0FF         	call	_pad	;wreg free
 35620                           
 35621                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 35622  019B32  0EE4               	movlw	228
 35623  019B34  26E1               	addwf	fsr1l,f,c
 35624  019B36  0EFF               	movlw	255
 35625  019B38  22E2               	addwfc	fsr1h,f,c
 35626  019B3A  0012               	return		;funcret
 35627  019B3C                     __end_of_dtoa:
 35628                           	opt callstack 0
 35629                           
 35630 ;; *************** function _abs *****************
 35631 ;; Defined at:
 35632 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 35633 ;; Parameters:    Size  Location     Type
 35634 ;;  a               2  [STACK] int 
 35635 ;; Auto vars:     Size  Location     Type
 35636 ;;		None
 35637 ;; Return value:  Size  Location     Type
 35638 ;;                  2  [STACK] int 
 35639 ;; Registers used:
 35640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 35641 ;; Tracked objects:
 35642 ;;		On entry : 0/3
 35643 ;;		On exit  : 0/0
 35644 ;;		Unchanged: 0/0
 35645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35650 ;;Total ram usage:        0 bytes
 35651 ;; Hardware stack levels used:    1
 35652 ;; Hardware stack levels required when called:   15
 35653 ;; This function calls:
 35654 ;;		Nothing
 35655 ;; This function is called by:
 35656 ;;		_dtoa
 35657 ;; This function uses a reentrant model
 35658 ;;
 35659                           
 35660                           	psect	text117
 35661  002300                     __ptext117:
 35662                           	opt callstack 0
 35663  002300                     _abs:
 35664                           	opt callstack 0
 35665                           
 35666                           ;stkvar	_a @ sp[(0)+-2]
 35667                           
 35668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35669                           ;incstack = 0
 35670 ;; hardware stack exceeded
 35671  002300  0EFF               	movlw	-1
 35672  002302  BEE3               	btfsc	plusw1,7,c
 35673  002304  D007               	goto	u7830
 35674  002306  0EFF               	movlw	-1
 35675  002308  50E3               	movf	plusw1,w,c
 35676  00230A  E112               	bnz	l10191
 35677  00230C  0EFE               	movlw	-2
 35678  00230E  04E3               	decf	plusw1,w,c
 35679  002310  B0D8               	btfsc	status,0,c
 35680  002312  D00E               	goto	l10191
 35681  002314                     u7830:
 35682                           
 35683                           ;stkvar	_a @ sp[(0)+-2]
 35684  002314  0EFE               	movlw	-2
 35685  002316  006F FF8C  F02A    	movff	plusw1,btemp
 35686  00231C  1E2A               	comf	btemp^0,f,c
 35687  00231E  0EFF               	movlw	-1
 35688  002320  006F FF8C  F02B    	movff	plusw1,btemp+1
 35689  002326  1E2B               	comf	(btemp+1)^0,f,c
 35690  002328  2A2A               	incf	btemp^0,f,c
 35691  00232A  B4D8               	btfsc	status,2,c
 35692  00232C  2A2B               	incf	(btemp+1)^0,f,c
 35693  00232E  D008               	goto	l3422
 35694  002330                     l10191:
 35695                           
 35696                           ;stkvar	_a @ sp[(0)+-2]
 35697  002330  0EFE               	movlw	-2
 35698  002332  006F FF8C  F02A    	movff	plusw1,btemp
 35699  002338  0EFF               	movlw	-1
 35700  00233A  006F FF8C  F02B    	movff	plusw1,btemp+1
 35701  002340                     l3422:
 35702                           
 35703                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 35704  002340  52E5               	movf	postdec1,f,c
 35705  002342  52E5               	movf	postdec1,f,c
 35706  002344  0012               	return		;funcret
 35707  002346                     __end_of_abs:
 35708                           	opt callstack 0
 35709                           
 35710 ;; *************** function ___aomod *****************
 35711 ;; Defined at:
 35712 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 35713 ;; Parameters:    Size  Location     Type
 35714 ;;  dividend        8  [STACK] long long 
 35715 ;;  divisor         8  [STACK] long long 
 35716 ;; Auto vars:     Size  Location     Type
 35717 ;;  sign            1  [STACK] unsigned char 
 35718 ;;  counter         1  [STACK] unsigned char 
 35719 ;; Return value:  Size  Location     Type
 35720 ;;                  8  [STACK] long long 
 35721 ;; Registers used:
 35722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35723 ;; Tracked objects:
 35724 ;;		On entry : 0/0
 35725 ;;		On exit  : 0/0
 35726 ;;		Unchanged: 0/0
 35727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35732 ;;Total ram usage:        0 bytes
 35733 ;; Hardware stack levels used:    1
 35734 ;; Hardware stack levels required when called:   15
 35735 ;; This function calls:
 35736 ;;		Nothing
 35737 ;; This function is called by:
 35738 ;;		_dtoa
 35739 ;;		___secs_to_tm
 35740 ;;		_rule_to_secs
 35741 ;;		___year_to_secs
 35742 ;; This function uses a reentrant model
 35743 ;;
 35744                           
 35745                           	psect	text118
 35746  01CFE0                     __ptext118:
 35747                           	opt callstack 0
 35748  01CFE0                     ___aomod:
 35749                           	opt callstack 0
 35750                           
 35751                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 35752  01CFE0  52E6               	movf	postinc1,f,c
 35753  01CFE2  52E6               	movf	postinc1,f,c
 35754                           
 35755                           ;stkvar	_sign @ sp[(-2)+0]
 35756                           
 35757                           ;incstack = 0
 35758 ;; hardware stack exceeded
 35759  01CFE4  0EFE               	movlw	-2
 35760  01CFE6  6AE3               	clrf	plusw1,c
 35761                           
 35762                           ;stkvar	_dividend @ sp[(-2)+-8]
 35763  01CFE8  0EFD               	movlw	-3
 35764  01CFEA  AEE3               	btfss	plusw1,7,c
 35765  01CFEC  D028               	goto	l10375
 35766                           
 35767                           ;stkvar	_dividend @ sp[(-2)+-8]
 35768                           ;stkvar	_dividend @ sp[(-2)+-8]
 35769  01CFEE  0EF6               	movlw	-10
 35770  01CFF0  6CE3               	negf	plusw1,c
 35771  01CFF2  0EF7               	movlw	-9
 35772  01CFF4  1EE3               	comf	plusw1,f,c
 35773  01CFF6  0EF8               	movlw	-8
 35774  01CFF8  1EE3               	comf	plusw1,f,c
 35775  01CFFA  0EF9               	movlw	-7
 35776  01CFFC  1EE3               	comf	plusw1,f,c
 35777  01CFFE  0EFA               	movlw	-6
 35778  01D000  1EE3               	comf	plusw1,f,c
 35779  01D002  0EFB               	movlw	-5
 35780  01D004  1EE3               	comf	plusw1,f,c
 35781  01D006  0EFC               	movlw	-4
 35782  01D008  1EE3               	comf	plusw1,f,c
 35783  01D00A  0EFD               	movlw	-3
 35784  01D00C  1EE3               	comf	plusw1,f,c
 35785  01D00E  E314               	bnc	u8320
 35786  01D010  0EF7               	movlw	-9
 35787  01D012  2AE3               	incf	plusw1,f,c
 35788  01D014  E311               	bnc	u8320
 35789  01D016  0EF8               	movlw	-8
 35790  01D018  2AE3               	incf	plusw1,f,c
 35791  01D01A  E30E               	bnc	u8320
 35792  01D01C  0EF9               	movlw	-7
 35793  01D01E  2AE3               	incf	plusw1,f,c
 35794  01D020  E30B               	bnc	u8320
 35795  01D022  0EFA               	movlw	-6
 35796  01D024  2AE3               	incf	plusw1,f,c
 35797  01D026  E308               	bnc	u8320
 35798  01D028  0EFB               	movlw	-5
 35799  01D02A  2AE3               	incf	plusw1,f,c
 35800  01D02C  E305               	bnc	u8320
 35801  01D02E  0EFC               	movlw	-4
 35802  01D030  2AE3               	incf	plusw1,f,c
 35803  01D032  E302               	bnc	u8320
 35804  01D034  0EFD               	movlw	-3
 35805  01D036  2AE3               	incf	plusw1,f,c
 35806  01D038                     u8320:
 35807                           
 35808                           ;stkvar	_sign @ sp[(-2)+0]
 35809  01D038  0EFE               	movlw	-2
 35810  01D03A  6AE3               	clrf	plusw1,c
 35811  01D03C  2AE3               	incf	plusw1,f,c
 35812  01D03E                     l10375:
 35813                           
 35814                           ;stkvar	_divisor @ sp[(-2)+-16]
 35815  01D03E  0EF5               	movlw	-11
 35816  01D040  AEE3               	btfss	plusw1,7,c
 35817  01D042  D025               	goto	u8340
 35818                           
 35819                           ;stkvar	_divisor @ sp[(-2)+-16]
 35820                           ;stkvar	_divisor @ sp[(-2)+-16]
 35821  01D044  0EEE               	movlw	-18
 35822  01D046  6CE3               	negf	plusw1,c
 35823  01D048  0EEF               	movlw	-17
 35824  01D04A  1EE3               	comf	plusw1,f,c
 35825  01D04C  0EF0               	movlw	-16
 35826  01D04E  1EE3               	comf	plusw1,f,c
 35827  01D050  0EF1               	movlw	-15
 35828  01D052  1EE3               	comf	plusw1,f,c
 35829  01D054  0EF2               	movlw	-14
 35830  01D056  1EE3               	comf	plusw1,f,c
 35831  01D058  0EF3               	movlw	-13
 35832  01D05A  1EE3               	comf	plusw1,f,c
 35833  01D05C  0EF4               	movlw	-12
 35834  01D05E  1EE3               	comf	plusw1,f,c
 35835  01D060  0EF5               	movlw	-11
 35836  01D062  1EE3               	comf	plusw1,f,c
 35837  01D064  E314               	bnc	u8340
 35838  01D066  0EEF               	movlw	-17
 35839  01D068  2AE3               	incf	plusw1,f,c
 35840  01D06A  E311               	bnc	u8340
 35841  01D06C  0EF0               	movlw	-16
 35842  01D06E  2AE3               	incf	plusw1,f,c
 35843  01D070  E30E               	bnc	u8340
 35844  01D072  0EF1               	movlw	-15
 35845  01D074  2AE3               	incf	plusw1,f,c
 35846  01D076  E30B               	bnc	u8340
 35847  01D078  0EF2               	movlw	-14
 35848  01D07A  2AE3               	incf	plusw1,f,c
 35849  01D07C  E308               	bnc	u8340
 35850  01D07E  0EF3               	movlw	-13
 35851  01D080  2AE3               	incf	plusw1,f,c
 35852  01D082  E305               	bnc	u8340
 35853  01D084  0EF4               	movlw	-12
 35854  01D086  2AE3               	incf	plusw1,f,c
 35855  01D088  E302               	bnc	u8340
 35856  01D08A  0EF5               	movlw	-11
 35857  01D08C  2AE3               	incf	plusw1,f,c
 35858  01D08E                     u8340:
 35859                           
 35860                           ;stkvar	_divisor @ sp[(-2)+-16]
 35861  01D08E  0EEE               	movlw	-18
 35862  01D090  50E3               	movf	plusw1,w,c
 35863  01D092  E116               	bnz	u8350
 35864  01D094  0EEF               	movlw	-17
 35865  01D096  50E3               	movf	plusw1,w,c
 35866  01D098  E113               	bnz	u8350
 35867  01D09A  0EF0               	movlw	-16
 35868  01D09C  50E3               	movf	plusw1,w,c
 35869  01D09E  E110               	bnz	u8350
 35870  01D0A0  0EF1               	movlw	-15
 35871  01D0A2  50E3               	movf	plusw1,w,c
 35872  01D0A4  E10D               	bnz	u8350
 35873  01D0A6  0EF2               	movlw	-14
 35874  01D0A8  50E3               	movf	plusw1,w,c
 35875  01D0AA  E10A               	bnz	u8350
 35876  01D0AC  0EF3               	movlw	-13
 35877  01D0AE  50E3               	movf	plusw1,w,c
 35878  01D0B0  E107               	bnz	u8350
 35879  01D0B2  0EF4               	movlw	-12
 35880  01D0B4  50E3               	movf	plusw1,w,c
 35881  01D0B6  E104               	bnz	u8350
 35882  01D0B8  0EF5               	movlw	-11
 35883  01D0BA  50E3               	movf	plusw1,w,c
 35884  01D0BC  B4D8               	btfsc	status,2,c
 35885  01D0BE  D075               	goto	u8380
 35886  01D0C0                     u8350:
 35887                           
 35888                           ;stkvar	_counter @ sp[(-2)+1]
 35889  01D0C0  0EFF               	movlw	-1
 35890  01D0C2  6AE3               	clrf	plusw1,c
 35891  01D0C4  D012               	goto	L41
 35892  01D0C6                     l10383:
 35893                           
 35894                           ;stkvar	_divisor @ sp[(-2)+-16]
 35895  01D0C6  90D8               	bcf	status,0,c
 35896  01D0C8  0EEE               	movlw	-18
 35897  01D0CA  36E3               	rlcf	plusw1,f,c
 35898  01D0CC  0EEF               	movlw	-17
 35899  01D0CE  36E3               	rlcf	plusw1,f,c
 35900  01D0D0  0EF0               	movlw	-16
 35901  01D0D2  36E3               	rlcf	plusw1,f,c
 35902  01D0D4  0EF1               	movlw	-15
 35903  01D0D6  36E3               	rlcf	plusw1,f,c
 35904  01D0D8  0EF2               	movlw	-14
 35905  01D0DA  36E3               	rlcf	plusw1,f,c
 35906  01D0DC  0EF3               	movlw	-13
 35907  01D0DE  36E3               	rlcf	plusw1,f,c
 35908  01D0E0  0EF4               	movlw	-12
 35909  01D0E2  36E3               	rlcf	plusw1,f,c
 35910  01D0E4  0EF5               	movlw	-11
 35911  01D0E6  36E3               	rlcf	plusw1,f,c
 35912                           
 35913                           ;stkvar	_counter @ sp[(-2)+1]
 35914  01D0E8  0EFF               	movlw	-1
 35915  01D0EA                     L41:
 35916  01D0EA  2AE3               	incf	plusw1,f,c
 35917                           
 35918                           ;stkvar	_divisor @ sp[(-2)+-16]
 35919  01D0EC  0EF5               	movlw	-11
 35920  01D0EE  AEE3               	btfss	plusw1,7,c
 35921  01D0F0  D7EA               	goto	l10383
 35922  01D0F2                     u8360:
 35923                           
 35924                           ;stkvar	_divisor @ sp[(-2)+-16]
 35925                           ;stkvar	_dividend @ sp[(-2)+-8]
 35926  01D0F2  50E1               	movf	fsr1l,w,c
 35927  01D0F4  0FF6               	addlw	-10
 35928  01D0F6  6ED9               	movwf	fsr2l,c
 35929  01D0F8  50E2               	movf	fsr1h,w,c
 35930  01D0FA  6EDA               	movwf	fsr2h,c
 35931  01D0FC  0EFF               	movlw	255
 35932  01D0FE  22DA               	addwfc	fsr2h,f,c
 35933  01D100  0EEE               	movlw	-18
 35934  01D102  50E3               	movf	plusw1,w,c
 35935  01D104  5CDE               	subwf	postinc2,w,c
 35936  01D106  0EEF               	movlw	-17
 35937  01D108  50E3               	movf	plusw1,w,c
 35938  01D10A  58DE               	subwfb	postinc2,w,c
 35939  01D10C  0EF0               	movlw	-16
 35940  01D10E  50E3               	movf	plusw1,w,c
 35941  01D110  58DE               	subwfb	postinc2,w,c
 35942  01D112  0EF1               	movlw	-15
 35943  01D114  50E3               	movf	plusw1,w,c
 35944  01D116  58DE               	subwfb	postinc2,w,c
 35945  01D118  0EF2               	movlw	-14
 35946  01D11A  50E3               	movf	plusw1,w,c
 35947  01D11C  58DE               	subwfb	postinc2,w,c
 35948  01D11E  0EF3               	movlw	-13
 35949  01D120  50E3               	movf	plusw1,w,c
 35950  01D122  58DE               	subwfb	postinc2,w,c
 35951  01D124  0EF4               	movlw	-12
 35952  01D126  50E3               	movf	plusw1,w,c
 35953  01D128  58DE               	subwfb	postinc2,w,c
 35954  01D12A  0EF5               	movlw	-11
 35955  01D12C  50E3               	movf	plusw1,w,c
 35956  01D12E  58DE               	subwfb	postinc2,w,c
 35957  01D130  A0D8               	btfss	status,0,c
 35958  01D132  D01F               	goto	l10391
 35959                           
 35960                           ;stkvar	_divisor @ sp[(-2)+-16]
 35961                           ;stkvar	_dividend @ sp[(-2)+-8]
 35962  01D134  50E1               	movf	fsr1l,w,c
 35963  01D136  0FF6               	addlw	-10
 35964  01D138  6ED9               	movwf	fsr2l,c
 35965  01D13A  50E2               	movf	fsr1h,w,c
 35966  01D13C  6EDA               	movwf	fsr2h,c
 35967  01D13E  0EFF               	movlw	255
 35968  01D140  22DA               	addwfc	fsr2h,f,c
 35969  01D142  0EEE               	movlw	-18
 35970  01D144  50E3               	movf	plusw1,w,c
 35971  01D146  5EDE               	subwf	postinc2,f,c
 35972  01D148  0EEF               	movlw	-17
 35973  01D14A  50E3               	movf	plusw1,w,c
 35974  01D14C  5ADE               	subwfb	postinc2,f,c
 35975  01D14E  0EF0               	movlw	-16
 35976  01D150  50E3               	movf	plusw1,w,c
 35977  01D152  5ADE               	subwfb	postinc2,f,c
 35978  01D154  0EF1               	movlw	-15
 35979  01D156  50E3               	movf	plusw1,w,c
 35980  01D158  5ADE               	subwfb	postinc2,f,c
 35981  01D15A  0EF2               	movlw	-14
 35982  01D15C  50E3               	movf	plusw1,w,c
 35983  01D15E  5ADE               	subwfb	postinc2,f,c
 35984  01D160  0EF3               	movlw	-13
 35985  01D162  50E3               	movf	plusw1,w,c
 35986  01D164  5ADE               	subwfb	postinc2,f,c
 35987  01D166  0EF4               	movlw	-12
 35988  01D168  50E3               	movf	plusw1,w,c
 35989  01D16A  5ADE               	subwfb	postinc2,f,c
 35990  01D16C  0EF5               	movlw	-11
 35991  01D16E  50E3               	movf	plusw1,w,c
 35992  01D170  5ADE               	subwfb	postinc2,f,c
 35993  01D172                     l10391:
 35994                           
 35995                           ;stkvar	_divisor @ sp[(-2)+-16]
 35996  01D172  90D8               	bcf	status,0,c
 35997  01D174  0EF5               	movlw	-11
 35998  01D176  32E3               	rrcf	plusw1,f,c
 35999  01D178  0EF4               	movlw	-12
 36000  01D17A  32E3               	rrcf	plusw1,f,c
 36001  01D17C  0EF3               	movlw	-13
 36002  01D17E  32E3               	rrcf	plusw1,f,c
 36003  01D180  0EF2               	movlw	-14
 36004  01D182  32E3               	rrcf	plusw1,f,c
 36005  01D184  0EF1               	movlw	-15
 36006  01D186  32E3               	rrcf	plusw1,f,c
 36007  01D188  0EF0               	movlw	-16
 36008  01D18A  32E3               	rrcf	plusw1,f,c
 36009  01D18C  0EEF               	movlw	-17
 36010  01D18E  32E3               	rrcf	plusw1,f,c
 36011  01D190  0EEE               	movlw	-18
 36012  01D192  32E3               	rrcf	plusw1,f,c
 36013                           
 36014                           ;stkvar	_counter @ sp[(-2)+1]
 36015  01D194  0EFF               	movlw	-1
 36016  01D196  50E3               	movf	plusw1,w,c
 36017  01D198  6E2A               	movwf	btemp^0,c
 36018  01D19A  0E01               	movlw	1
 36019  01D19C  5E2A               	subwf	btemp^0,f,c
 36020  01D19E  0EFF               	movlw	-1
 36021  01D1A0  0060  F0AB  FFE3   	movff	btemp,plusw1
 36022  01D1A6  A4D8               	btfss	status,2,c
 36023  01D1A8  D7A4               	goto	u8360
 36024  01D1AA                     u8380:
 36025                           
 36026                           ;stkvar	_sign @ sp[(-2)+0]
 36027  01D1AA  0EFE               	movlw	-2
 36028  01D1AC  50E3               	movf	plusw1,w,c
 36029  01D1AE  B4D8               	btfsc	status,2,c
 36030  01D1B0  D025               	goto	u8400
 36031                           
 36032                           ;stkvar	_dividend @ sp[(-2)+-8]
 36033                           ;stkvar	_dividend @ sp[(-2)+-8]
 36034  01D1B2  0EF6               	movlw	-10
 36035  01D1B4  6CE3               	negf	plusw1,c
 36036  01D1B6  0EF7               	movlw	-9
 36037  01D1B8  1EE3               	comf	plusw1,f,c
 36038  01D1BA  0EF8               	movlw	-8
 36039  01D1BC  1EE3               	comf	plusw1,f,c
 36040  01D1BE  0EF9               	movlw	-7
 36041  01D1C0  1EE3               	comf	plusw1,f,c
 36042  01D1C2  0EFA               	movlw	-6
 36043  01D1C4  1EE3               	comf	plusw1,f,c
 36044  01D1C6  0EFB               	movlw	-5
 36045  01D1C8  1EE3               	comf	plusw1,f,c
 36046  01D1CA  0EFC               	movlw	-4
 36047  01D1CC  1EE3               	comf	plusw1,f,c
 36048  01D1CE  0EFD               	movlw	-3
 36049  01D1D0  1EE3               	comf	plusw1,f,c
 36050  01D1D2  E314               	bnc	u8400
 36051  01D1D4  0EF7               	movlw	-9
 36052  01D1D6  2AE3               	incf	plusw1,f,c
 36053  01D1D8  E311               	bnc	u8400
 36054  01D1DA  0EF8               	movlw	-8
 36055  01D1DC  2AE3               	incf	plusw1,f,c
 36056  01D1DE  E30E               	bnc	u8400
 36057  01D1E0  0EF9               	movlw	-7
 36058  01D1E2  2AE3               	incf	plusw1,f,c
 36059  01D1E4  E30B               	bnc	u8400
 36060  01D1E6  0EFA               	movlw	-6
 36061  01D1E8  2AE3               	incf	plusw1,f,c
 36062  01D1EA  E308               	bnc	u8400
 36063  01D1EC  0EFB               	movlw	-5
 36064  01D1EE  2AE3               	incf	plusw1,f,c
 36065  01D1F0  E305               	bnc	u8400
 36066  01D1F2  0EFC               	movlw	-4
 36067  01D1F4  2AE3               	incf	plusw1,f,c
 36068  01D1F6  E302               	bnc	u8400
 36069  01D1F8  0EFD               	movlw	-3
 36070  01D1FA  2AE3               	incf	plusw1,f,c
 36071  01D1FC                     u8400:
 36072                           
 36073                           ;stkvar	_dividend @ sp[(-2)+-8]
 36074  01D1FC  0EF6               	movlw	246
 36075  01D1FE  24E1               	addwf	fsr1l,w,c
 36076  01D200  6ED9               	movwf	fsr2l,c
 36077  01D202  0EFF               	movlw	255
 36078  01D204  20E2               	addwfc	fsr1h,w,c
 36079  01D206  6EDA               	movwf	fsr2h,c
 36080                           
 36081                           ;stkvar	?___aomod @ sp[(-2)+-8]
 36082  01D208  0E08               	movlw	8
 36083  01D20A  6E2A               	movwf	btemp^0,c
 36084  01D20C  0EF6               	movlw	-10
 36085  01D20E                     us841999:
 36086  01D20E  006F FF7B FFE3     	movff	postinc2,plusw1
 36087  01D214  28E8               	incf	wreg,w,c
 36088  01D216  2E2A               	decfsz	btemp^0,f,c
 36089  01D218  D7FA               	bra	us841999
 36090                           
 36091                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 36092  01D21A  52E5               	movf	postdec1,f,c
 36093  01D21C  52E5               	movf	postdec1,f,c
 36094  01D21E  0012               	return		;funcret
 36095  01D220                     __end_of___aomod:
 36096                           	opt callstack 0
 36097                           
 36098 ;; *************** function ___aodiv *****************
 36099 ;; Defined at:
 36100 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 36101 ;; Parameters:    Size  Location     Type
 36102 ;;  dividend        8  [STACK] long long 
 36103 ;;  divisor         8  [STACK] long long 
 36104 ;; Auto vars:     Size  Location     Type
 36105 ;;  quotient        8  [STACK] long long 
 36106 ;;  sign            1  [STACK] unsigned char 
 36107 ;;  counter         1  [STACK] unsigned char 
 36108 ;; Return value:  Size  Location     Type
 36109 ;;                  8  [STACK] long long 
 36110 ;; Registers used:
 36111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 36112 ;; Tracked objects:
 36113 ;;		On entry : 0/0
 36114 ;;		On exit  : 0/0
 36115 ;;		Unchanged: 0/0
 36116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36121 ;;Total ram usage:        0 bytes
 36122 ;; Hardware stack levels used:    1
 36123 ;; Hardware stack levels required when called:   15
 36124 ;; This function calls:
 36125 ;;		Nothing
 36126 ;; This function is called by:
 36127 ;;		_dtoa
 36128 ;;		___secs_to_tm
 36129 ;;		___secs_to_zone
 36130 ;;		___year_to_secs
 36131 ;; This function uses a reentrant model
 36132 ;;
 36133                           
 36134                           	psect	text119
 36135  01C408                     __ptext119:
 36136                           	opt callstack 0
 36137  01C408                     ___aodiv:
 36138                           	opt callstack 0
 36139                           
 36140                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 36141  01C408  0E0A               	movlw	10
 36142  01C40A  26E1               	addwf	fsr1l,f,c
 36143  01C40C  0E00               	movlw	0
 36144  01C40E  22E2               	addwfc	fsr1h,f,c
 36145                           
 36146                           ;stkvar	_sign @ sp[(-10)+8]
 36147                           
 36148                           ;incstack = 0
 36149 ;; hardware stack exceeded
 36150  01C410  0EFE               	movlw	-2
 36151  01C412  6AE3               	clrf	plusw1,c
 36152                           
 36153                           ;stkvar	_divisor @ sp[(-10)+-16]
 36154  01C414  0EED               	movlw	-19
 36155  01C416  AEE3               	btfss	plusw1,7,c
 36156  01C418  D028               	goto	l10331
 36157                           
 36158                           ;stkvar	_divisor @ sp[(-10)+-16]
 36159                           ;stkvar	_divisor @ sp[(-10)+-16]
 36160  01C41A  0EE6               	movlw	-26
 36161  01C41C  6CE3               	negf	plusw1,c
 36162  01C41E  0EE7               	movlw	-25
 36163  01C420  1EE3               	comf	plusw1,f,c
 36164  01C422  0EE8               	movlw	-24
 36165  01C424  1EE3               	comf	plusw1,f,c
 36166  01C426  0EE9               	movlw	-23
 36167  01C428  1EE3               	comf	plusw1,f,c
 36168  01C42A  0EEA               	movlw	-22
 36169  01C42C  1EE3               	comf	plusw1,f,c
 36170  01C42E  0EEB               	movlw	-21
 36171  01C430  1EE3               	comf	plusw1,f,c
 36172  01C432  0EEC               	movlw	-20
 36173  01C434  1EE3               	comf	plusw1,f,c
 36174  01C436  0EED               	movlw	-19
 36175  01C438  1EE3               	comf	plusw1,f,c
 36176  01C43A  E314               	bnc	u8200
 36177  01C43C  0EE7               	movlw	-25
 36178  01C43E  2AE3               	incf	plusw1,f,c
 36179  01C440  E311               	bnc	u8200
 36180  01C442  0EE8               	movlw	-24
 36181  01C444  2AE3               	incf	plusw1,f,c
 36182  01C446  E30E               	bnc	u8200
 36183  01C448  0EE9               	movlw	-23
 36184  01C44A  2AE3               	incf	plusw1,f,c
 36185  01C44C  E30B               	bnc	u8200
 36186  01C44E  0EEA               	movlw	-22
 36187  01C450  2AE3               	incf	plusw1,f,c
 36188  01C452  E308               	bnc	u8200
 36189  01C454  0EEB               	movlw	-21
 36190  01C456  2AE3               	incf	plusw1,f,c
 36191  01C458  E305               	bnc	u8200
 36192  01C45A  0EEC               	movlw	-20
 36193  01C45C  2AE3               	incf	plusw1,f,c
 36194  01C45E  E302               	bnc	u8200
 36195  01C460  0EED               	movlw	-19
 36196  01C462  2AE3               	incf	plusw1,f,c
 36197  01C464                     u8200:
 36198                           
 36199                           ;stkvar	_sign @ sp[(-10)+8]
 36200  01C464  0EFE               	movlw	-2
 36201  01C466  6AE3               	clrf	plusw1,c
 36202  01C468  2AE3               	incf	plusw1,f,c
 36203  01C46A                     l10331:
 36204                           
 36205                           ;stkvar	_dividend @ sp[(-10)+-8]
 36206  01C46A  0EF5               	movlw	-11
 36207  01C46C  AEE3               	btfss	plusw1,7,c
 36208  01C46E  D027               	goto	l10337
 36209                           
 36210                           ;stkvar	_dividend @ sp[(-10)+-8]
 36211                           ;stkvar	_dividend @ sp[(-10)+-8]
 36212  01C470  0EEE               	movlw	-18
 36213  01C472  6CE3               	negf	plusw1,c
 36214  01C474  0EEF               	movlw	-17
 36215  01C476  1EE3               	comf	plusw1,f,c
 36216  01C478  0EF0               	movlw	-16
 36217  01C47A  1EE3               	comf	plusw1,f,c
 36218  01C47C  0EF1               	movlw	-15
 36219  01C47E  1EE3               	comf	plusw1,f,c
 36220  01C480  0EF2               	movlw	-14
 36221  01C482  1EE3               	comf	plusw1,f,c
 36222  01C484  0EF3               	movlw	-13
 36223  01C486  1EE3               	comf	plusw1,f,c
 36224  01C488  0EF4               	movlw	-12
 36225  01C48A  1EE3               	comf	plusw1,f,c
 36226  01C48C  0EF5               	movlw	-11
 36227  01C48E  1EE3               	comf	plusw1,f,c
 36228  01C490  E314               	bnc	u8220
 36229  01C492  0EEF               	movlw	-17
 36230  01C494  2AE3               	incf	plusw1,f,c
 36231  01C496  E311               	bnc	u8220
 36232  01C498  0EF0               	movlw	-16
 36233  01C49A  2AE3               	incf	plusw1,f,c
 36234  01C49C  E30E               	bnc	u8220
 36235  01C49E  0EF1               	movlw	-15
 36236  01C4A0  2AE3               	incf	plusw1,f,c
 36237  01C4A2  E30B               	bnc	u8220
 36238  01C4A4  0EF2               	movlw	-14
 36239  01C4A6  2AE3               	incf	plusw1,f,c
 36240  01C4A8  E308               	bnc	u8220
 36241  01C4AA  0EF3               	movlw	-13
 36242  01C4AC  2AE3               	incf	plusw1,f,c
 36243  01C4AE  E305               	bnc	u8220
 36244  01C4B0  0EF4               	movlw	-12
 36245  01C4B2  2AE3               	incf	plusw1,f,c
 36246  01C4B4  E302               	bnc	u8220
 36247  01C4B6  0EF5               	movlw	-11
 36248  01C4B8  2AE3               	incf	plusw1,f,c
 36249  01C4BA                     u8220:
 36250                           
 36251                           ;stkvar	_sign @ sp[(-10)+8]
 36252  01C4BA  0EFE               	movlw	-2
 36253  01C4BC  70E3               	btg	plusw1,0,c
 36254  01C4BE                     l10337:
 36255                           
 36256                           ;stkvar	_quotient @ sp[(-10)+0]
 36257  01C4BE  0E07               	movlw	7
 36258  01C4C0  6E2A               	movwf	btemp^0,c
 36259  01C4C2  0EF6               	movlw	-10
 36260  01C4C4                     u8231:
 36261  01C4C4  6AE3               	clrf	plusw1,c
 36262  01C4C6  2AE8               	incf	wreg,f,c
 36263  01C4C8  062A               	decf	btemp^0,f,c
 36264  01C4CA  E2FC               	bc	u8231
 36265                           
 36266                           ;stkvar	_divisor @ sp[(-10)+-16]
 36267  01C4CC  0EE6               	movlw	-26
 36268  01C4CE  50E3               	movf	plusw1,w,c
 36269  01C4D0  E116               	bnz	u8240
 36270  01C4D2  0EE7               	movlw	-25
 36271  01C4D4  50E3               	movf	plusw1,w,c
 36272  01C4D6  E113               	bnz	u8240
 36273  01C4D8  0EE8               	movlw	-24
 36274  01C4DA  50E3               	movf	plusw1,w,c
 36275  01C4DC  E110               	bnz	u8240
 36276  01C4DE  0EE9               	movlw	-23
 36277  01C4E0  50E3               	movf	plusw1,w,c
 36278  01C4E2  E10D               	bnz	u8240
 36279  01C4E4  0EEA               	movlw	-22
 36280  01C4E6  50E3               	movf	plusw1,w,c
 36281  01C4E8  E10A               	bnz	u8240
 36282  01C4EA  0EEB               	movlw	-21
 36283  01C4EC  50E3               	movf	plusw1,w,c
 36284  01C4EE  E107               	bnz	u8240
 36285  01C4F0  0EEC               	movlw	-20
 36286  01C4F2  50E3               	movf	plusw1,w,c
 36287  01C4F4  E104               	bnz	u8240
 36288  01C4F6  0EED               	movlw	-19
 36289  01C4F8  50E3               	movf	plusw1,w,c
 36290  01C4FA  B4D8               	btfsc	status,2,c
 36291  01C4FC  D088               	goto	u8270
 36292  01C4FE                     u8240:
 36293                           
 36294                           ;stkvar	_counter @ sp[(-10)+9]
 36295  01C4FE  0EFF               	movlw	-1
 36296  01C500  6AE3               	clrf	plusw1,c
 36297  01C502  D012               	goto	L42
 36298  01C504                     l10343:
 36299                           
 36300                           ;stkvar	_divisor @ sp[(-10)+-16]
 36301  01C504  90D8               	bcf	status,0,c
 36302  01C506  0EE6               	movlw	-26
 36303  01C508  36E3               	rlcf	plusw1,f,c
 36304  01C50A  0EE7               	movlw	-25
 36305  01C50C  36E3               	rlcf	plusw1,f,c
 36306  01C50E  0EE8               	movlw	-24
 36307  01C510  36E3               	rlcf	plusw1,f,c
 36308  01C512  0EE9               	movlw	-23
 36309  01C514  36E3               	rlcf	plusw1,f,c
 36310  01C516  0EEA               	movlw	-22
 36311  01C518  36E3               	rlcf	plusw1,f,c
 36312  01C51A  0EEB               	movlw	-21
 36313  01C51C  36E3               	rlcf	plusw1,f,c
 36314  01C51E  0EEC               	movlw	-20
 36315  01C520  36E3               	rlcf	plusw1,f,c
 36316  01C522  0EED               	movlw	-19
 36317  01C524  36E3               	rlcf	plusw1,f,c
 36318                           
 36319                           ;stkvar	_counter @ sp[(-10)+9]
 36320  01C526  0EFF               	movlw	-1
 36321  01C528                     L42:
 36322  01C528  2AE3               	incf	plusw1,f,c
 36323                           
 36324                           ;stkvar	_divisor @ sp[(-10)+-16]
 36325  01C52A  0EED               	movlw	-19
 36326  01C52C  AEE3               	btfss	plusw1,7,c
 36327  01C52E  D7EA               	goto	l10343
 36328  01C530                     u8250:
 36329                           
 36330                           ;stkvar	_quotient @ sp[(-10)+0]
 36331  01C530  90D8               	bcf	status,0,c
 36332  01C532  0EF6               	movlw	-10
 36333  01C534  36E3               	rlcf	plusw1,f,c
 36334  01C536  0EF7               	movlw	-9
 36335  01C538  36E3               	rlcf	plusw1,f,c
 36336  01C53A  0EF8               	movlw	-8
 36337  01C53C  36E3               	rlcf	plusw1,f,c
 36338  01C53E  0EF9               	movlw	-7
 36339  01C540  36E3               	rlcf	plusw1,f,c
 36340  01C542  0EFA               	movlw	-6
 36341  01C544  36E3               	rlcf	plusw1,f,c
 36342  01C546  0EFB               	movlw	-5
 36343  01C548  36E3               	rlcf	plusw1,f,c
 36344  01C54A  0EFC               	movlw	-4
 36345  01C54C  36E3               	rlcf	plusw1,f,c
 36346  01C54E  0EFD               	movlw	-3
 36347  01C550  36E3               	rlcf	plusw1,f,c
 36348                           
 36349                           ;stkvar	_divisor @ sp[(-10)+-16]
 36350                           ;stkvar	_dividend @ sp[(-10)+-8]
 36351  01C552  50E1               	movf	fsr1l,w,c
 36352  01C554  0FEE               	addlw	-18
 36353  01C556  6ED9               	movwf	fsr2l,c
 36354  01C558  50E2               	movf	fsr1h,w,c
 36355  01C55A  6EDA               	movwf	fsr2h,c
 36356  01C55C  0EFF               	movlw	255
 36357  01C55E  22DA               	addwfc	fsr2h,f,c
 36358  01C560  0EE6               	movlw	-26
 36359  01C562  50E3               	movf	plusw1,w,c
 36360  01C564  5CDE               	subwf	postinc2,w,c
 36361  01C566  0EE7               	movlw	-25
 36362  01C568  50E3               	movf	plusw1,w,c
 36363  01C56A  58DE               	subwfb	postinc2,w,c
 36364  01C56C  0EE8               	movlw	-24
 36365  01C56E  50E3               	movf	plusw1,w,c
 36366  01C570  58DE               	subwfb	postinc2,w,c
 36367  01C572  0EE9               	movlw	-23
 36368  01C574  50E3               	movf	plusw1,w,c
 36369  01C576  58DE               	subwfb	postinc2,w,c
 36370  01C578  0EEA               	movlw	-22
 36371  01C57A  50E3               	movf	plusw1,w,c
 36372  01C57C  58DE               	subwfb	postinc2,w,c
 36373  01C57E  0EEB               	movlw	-21
 36374  01C580  50E3               	movf	plusw1,w,c
 36375  01C582  58DE               	subwfb	postinc2,w,c
 36376  01C584  0EEC               	movlw	-20
 36377  01C586  50E3               	movf	plusw1,w,c
 36378  01C588  58DE               	subwfb	postinc2,w,c
 36379  01C58A  0EED               	movlw	-19
 36380  01C58C  50E3               	movf	plusw1,w,c
 36381  01C58E  58DE               	subwfb	postinc2,w,c
 36382  01C590  A0D8               	btfss	status,0,c
 36383  01C592  D021               	goto	l10355
 36384                           
 36385                           ;stkvar	_divisor @ sp[(-10)+-16]
 36386                           ;stkvar	_dividend @ sp[(-10)+-8]
 36387  01C594  50E1               	movf	fsr1l,w,c
 36388  01C596  0FEE               	addlw	-18
 36389  01C598  6ED9               	movwf	fsr2l,c
 36390  01C59A  50E2               	movf	fsr1h,w,c
 36391  01C59C  6EDA               	movwf	fsr2h,c
 36392  01C59E  0EFF               	movlw	255
 36393  01C5A0  22DA               	addwfc	fsr2h,f,c
 36394  01C5A2  0EE6               	movlw	-26
 36395  01C5A4  50E3               	movf	plusw1,w,c
 36396  01C5A6  5EDE               	subwf	postinc2,f,c
 36397  01C5A8  0EE7               	movlw	-25
 36398  01C5AA  50E3               	movf	plusw1,w,c
 36399  01C5AC  5ADE               	subwfb	postinc2,f,c
 36400  01C5AE  0EE8               	movlw	-24
 36401  01C5B0  50E3               	movf	plusw1,w,c
 36402  01C5B2  5ADE               	subwfb	postinc2,f,c
 36403  01C5B4  0EE9               	movlw	-23
 36404  01C5B6  50E3               	movf	plusw1,w,c
 36405  01C5B8  5ADE               	subwfb	postinc2,f,c
 36406  01C5BA  0EEA               	movlw	-22
 36407  01C5BC  50E3               	movf	plusw1,w,c
 36408  01C5BE  5ADE               	subwfb	postinc2,f,c
 36409  01C5C0  0EEB               	movlw	-21
 36410  01C5C2  50E3               	movf	plusw1,w,c
 36411  01C5C4  5ADE               	subwfb	postinc2,f,c
 36412  01C5C6  0EEC               	movlw	-20
 36413  01C5C8  50E3               	movf	plusw1,w,c
 36414  01C5CA  5ADE               	subwfb	postinc2,f,c
 36415  01C5CC  0EED               	movlw	-19
 36416  01C5CE  50E3               	movf	plusw1,w,c
 36417  01C5D0  5ADE               	subwfb	postinc2,f,c
 36418                           
 36419                           ;stkvar	_quotient @ sp[(-10)+0]
 36420  01C5D2  0EF6               	movlw	-10
 36421  01C5D4  80E3               	bsf	plusw1,0,c
 36422  01C5D6                     l10355:
 36423                           
 36424                           ;stkvar	_divisor @ sp[(-10)+-16]
 36425  01C5D6  90D8               	bcf	status,0,c
 36426  01C5D8  0EED               	movlw	-19
 36427  01C5DA  32E3               	rrcf	plusw1,f,c
 36428  01C5DC  0EEC               	movlw	-20
 36429  01C5DE  32E3               	rrcf	plusw1,f,c
 36430  01C5E0  0EEB               	movlw	-21
 36431  01C5E2  32E3               	rrcf	plusw1,f,c
 36432  01C5E4  0EEA               	movlw	-22
 36433  01C5E6  32E3               	rrcf	plusw1,f,c
 36434  01C5E8  0EE9               	movlw	-23
 36435  01C5EA  32E3               	rrcf	plusw1,f,c
 36436  01C5EC  0EE8               	movlw	-24
 36437  01C5EE  32E3               	rrcf	plusw1,f,c
 36438  01C5F0  0EE7               	movlw	-25
 36439  01C5F2  32E3               	rrcf	plusw1,f,c
 36440  01C5F4  0EE6               	movlw	-26
 36441  01C5F6  32E3               	rrcf	plusw1,f,c
 36442                           
 36443                           ;stkvar	_counter @ sp[(-10)+9]
 36444  01C5F8  0EFF               	movlw	-1
 36445  01C5FA  50E3               	movf	plusw1,w,c
 36446  01C5FC  6E2A               	movwf	btemp^0,c
 36447  01C5FE  0E01               	movlw	1
 36448  01C600  5E2A               	subwf	btemp^0,f,c
 36449  01C602  0EFF               	movlw	-1
 36450  01C604  0060  F0AB  FFE3   	movff	btemp,plusw1
 36451  01C60A  A4D8               	btfss	status,2,c
 36452  01C60C  D791               	goto	u8250
 36453  01C60E                     u8270:
 36454                           
 36455                           ;stkvar	_sign @ sp[(-10)+8]
 36456  01C60E  0EFE               	movlw	-2
 36457  01C610  50E3               	movf	plusw1,w,c
 36458  01C612  B4D8               	btfsc	status,2,c
 36459  01C614  D025               	goto	u8290
 36460                           
 36461                           ;stkvar	_quotient @ sp[(-10)+0]
 36462                           ;stkvar	_quotient @ sp[(-10)+0]
 36463  01C616  0EF6               	movlw	-10
 36464  01C618  6CE3               	negf	plusw1,c
 36465  01C61A  0EF7               	movlw	-9
 36466  01C61C  1EE3               	comf	plusw1,f,c
 36467  01C61E  0EF8               	movlw	-8
 36468  01C620  1EE3               	comf	plusw1,f,c
 36469  01C622  0EF9               	movlw	-7
 36470  01C624  1EE3               	comf	plusw1,f,c
 36471  01C626  0EFA               	movlw	-6
 36472  01C628  1EE3               	comf	plusw1,f,c
 36473  01C62A  0EFB               	movlw	-5
 36474  01C62C  1EE3               	comf	plusw1,f,c
 36475  01C62E  0EFC               	movlw	-4
 36476  01C630  1EE3               	comf	plusw1,f,c
 36477  01C632  0EFD               	movlw	-3
 36478  01C634  1EE3               	comf	plusw1,f,c
 36479  01C636  E314               	bnc	u8290
 36480  01C638  0EF7               	movlw	-9
 36481  01C63A  2AE3               	incf	plusw1,f,c
 36482  01C63C  E311               	bnc	u8290
 36483  01C63E  0EF8               	movlw	-8
 36484  01C640  2AE3               	incf	plusw1,f,c
 36485  01C642  E30E               	bnc	u8290
 36486  01C644  0EF9               	movlw	-7
 36487  01C646  2AE3               	incf	plusw1,f,c
 36488  01C648  E30B               	bnc	u8290
 36489  01C64A  0EFA               	movlw	-6
 36490  01C64C  2AE3               	incf	plusw1,f,c
 36491  01C64E  E308               	bnc	u8290
 36492  01C650  0EFB               	movlw	-5
 36493  01C652  2AE3               	incf	plusw1,f,c
 36494  01C654  E305               	bnc	u8290
 36495  01C656  0EFC               	movlw	-4
 36496  01C658  2AE3               	incf	plusw1,f,c
 36497  01C65A  E302               	bnc	u8290
 36498  01C65C  0EFD               	movlw	-3
 36499  01C65E  2AE3               	incf	plusw1,f,c
 36500  01C660                     u8290:
 36501                           
 36502                           ;stkvar	_quotient @ sp[(-10)+0]
 36503  01C660  0EF6               	movlw	246
 36504  01C662  24E1               	addwf	fsr1l,w,c
 36505  01C664  6ED9               	movwf	fsr2l,c
 36506  01C666  0EFF               	movlw	255
 36507  01C668  20E2               	addwfc	fsr1h,w,c
 36508  01C66A  6EDA               	movwf	fsr2h,c
 36509                           
 36510                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 36511  01C66C  0E08               	movlw	8
 36512  01C66E  6E2A               	movwf	btemp^0,c
 36513  01C670  0EEE               	movlw	-18
 36514  01C672                     us830999:
 36515  01C672  006F FF7B FFE3     	movff	postinc2,plusw1
 36516  01C678  28E8               	incf	wreg,w,c
 36517  01C67A  2E2A               	decfsz	btemp^0,f,c
 36518  01C67C  D7FA               	bra	us830999
 36519                           
 36520                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 36521  01C67E  0EF6               	movlw	246
 36522  01C680  26E1               	addwf	fsr1l,f,c
 36523  01C682  0EFF               	movlw	255
 36524  01C684  22E2               	addwfc	fsr1h,f,c
 36525  01C686  0012               	return		;funcret
 36526  01C688                     __end_of___aodiv:
 36527                           	opt callstack 0
 36528                           
 36529 ;; *************** function _ctoa *****************
 36530 ;; Defined at:
 36531 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36532 ;; Parameters:    Size  Location     Type
 36533 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36534 ;;		 -> f(6), NULL(0), 
 36535 ;;  c               1  [STACK] unsigned char 
 36536 ;; Auto vars:     Size  Location     Type
 36537 ;;  w               2  [STACK] int 
 36538 ;;  l               2    0        int 
 36539 ;; Return value:  Size  Location     Type
 36540 ;;                  2  [STACK] int 
 36541 ;; Registers used:
 36542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36543 ;; Tracked objects:
 36544 ;;		On entry : 0/0
 36545 ;;		On exit  : 0/0
 36546 ;;		Unchanged: 0/0
 36547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36552 ;;Total ram usage:        0 bytes
 36553 ;; Hardware stack levels used:    1
 36554 ;; Hardware stack levels required when called:   20
 36555 ;; This function calls:
 36556 ;;		_pad
 36557 ;; This function is called by:
 36558 ;;		_vfpfcnvrt
 36559 ;; This function uses a reentrant model
 36560 ;;
 36561                           
 36562                           	psect	text120
 36563  001578                     __ptext120:
 36564                           	opt callstack 0
 36565  001578                     _ctoa:
 36566                           	opt callstack 0
 36567                           
 36568                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36569  001578  52E6               	movf	postinc1,f,c
 36570  00157A  52E6               	movf	postinc1,f,c
 36571                           
 36572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 36573                           
 36574                           ;incstack = 0
 36575 ;; hardware stack exceeded
 36576  00157C  504A               	movf	_width^0,w,c
 36577  00157E  104B               	iorwf	(_width+1)^0,w,c
 36578  001580  A4D8               	btfss	status,2,c
 36579  001582  D009               	goto	l15737
 36580                           
 36581                           ;stkvar	_w @ sp[(-2)+0]
 36582  001584  0EFE               	movlw	-2
 36583  001586  0060  F12B  FFE3   	movff	_width,plusw1
 36584  00158C  0EFF               	movlw	-1
 36585  00158E  0060  F12F  FFE3   	movff	_width+1,plusw1
 36586  001594  D016               	goto	l15739
 36587  001596                     l15737:
 36588  001596  0EFF               	movlw	255
 36589  001598  6E34               	movwf	(btemp+10)^0,c
 36590  00159A  0EFF               	movlw	255
 36591  00159C  6E35               	movwf	(btemp+11)^0,c
 36592  00159E  0060  F128  F032   	movff	_width,btemp+8
 36593  0015A4  0060  F12C  F033   	movff	_width+1,btemp+9
 36594  0015AA  5034               	movf	(btemp+10)^0,w,c
 36595  0015AC  2632               	addwf	(btemp+8)^0,f,c
 36596  0015AE  5035               	movf	(btemp+11)^0,w,c
 36597  0015B0  2233               	addwfc	(btemp+9)^0,f,c
 36598                           
 36599                           ;stkvar	_w @ sp[(-2)+0]
 36600  0015B2  0EFE               	movlw	-2
 36601  0015B4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36602  0015BA  0EFF               	movlw	-1
 36603  0015BC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36604  0015C2                     l15739:
 36605                           
 36606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 36607                           ;stkvar	_c @ sp[(-2)+-3]
 36608  0015C2  0EFB               	movlw	-5
 36609  0015C4  006F FF8C  F354    	movff	plusw1,_dbuf
 36610                           
 36611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 36612  0015CA  0103               	movlb	3	; () banked
 36613  0015CC  6B55               	clrf	(_dbuf+1)& (0+255),b
 36614                           
 36615                           ; BSR set to: 3
 36616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 36617                           ;stkvar	_w @ sp[(-2)+0]
 36618  0015CE  0EFE               	movlw	-2
 36619  0015D0  006F FF8F FFE6     	movff	plusw1,postinc1
 36620  0015D6  006F FF8F FFE6     	movff	plusw1,postinc1
 36621  0015DC  0E54               	movlw	low _dbuf
 36622  0015DE  6EE6               	movwf	postinc1,c
 36623  0015E0  0E03               	movlw	high _dbuf
 36624  0015E2  6EE6               	movwf	postinc1,c
 36625                           
 36626                           ;stkvar	_fp @ sp[(-6)+-2]
 36627  0015E4  0EF8               	movlw	-8
 36628  0015E6  006F FF8F FFE6     	movff	plusw1,postinc1
 36629  0015EC  006F FF8F FFE6     	movff	plusw1,postinc1
 36630  0015F2  EC0F  F0FF         	call	_pad	;wreg free
 36631                           
 36632                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 36633  0015F6  0EFB               	movlw	251
 36634  0015F8  26E1               	addwf	fsr1l,f,c
 36635  0015FA  0EFF               	movlw	255
 36636  0015FC  22E2               	addwfc	fsr1h,f,c
 36637  0015FE  0012               	return		;funcret
 36638  001600                     __end_of_ctoa:
 36639                           	opt callstack 0
 36640                           
 36641 ;; *************** function _pad *****************
 36642 ;; Defined at:
 36643 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36644 ;; Parameters:    Size  Location     Type
 36645 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36646 ;;		 -> f(6), NULL(0), 
 36647 ;;  buf             2  [STACK] PTR unsigned char 
 36648 ;;		 -> dbuf(80), 
 36649 ;;  p               2  [STACK] int 
 36650 ;; Auto vars:     Size  Location     Type
 36651 ;;  w               2  [STACK] int 
 36652 ;;  i               2  [STACK] int 
 36653 ;; Return value:  Size  Location     Type
 36654 ;;                  2  [STACK] int 
 36655 ;; Registers used:
 36656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36657 ;; Tracked objects:
 36658 ;;		On entry : 0/3
 36659 ;;		On exit  : 0/0
 36660 ;;		Unchanged: 0/0
 36661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36666 ;;Total ram usage:        0 bytes
 36667 ;; Hardware stack levels used:    1
 36668 ;; Hardware stack levels required when called:   19
 36669 ;; This function calls:
 36670 ;;		_fputc
 36671 ;;		_fputs
 36672 ;;		_strlen
 36673 ;; This function is called by:
 36674 ;;		_ctoa
 36675 ;;		_dtoa
 36676 ;;		_efgtoa
 36677 ;;		_utoa
 36678 ;;		_xtoa
 36679 ;; This function uses a reentrant model
 36680 ;;
 36681                           
 36682                           	psect	text121
 36683  01FE1E                     __ptext121:
 36684                           	opt callstack 0
 36685  01FE1E                     _pad:
 36686                           	opt callstack 0
 36687                           
 36688                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36689  01FE1E  52E6               	movf	postinc1,f,c
 36690  01FE20  52E6               	movf	postinc1,f,c
 36691  01FE22  52E6               	movf	postinc1,f,c
 36692  01FE24  52E6               	movf	postinc1,f,c
 36693                           
 36694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 36695                           
 36696                           ;incstack = 0
 36697 ;; hardware stack exceeded
 36698  01FE26  A04E               	btfss	_flags^0,0,c
 36699  01FE28  D010               	goto	l15621
 36700                           
 36701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 36702                           ;stkvar	_fp @ sp[(-4)+-2]
 36703  01FE2A  0EFA               	movlw	-6
 36704  01FE2C  006F FF8F FFE6     	movff	plusw1,postinc1
 36705  01FE32  006F FF8F FFE6     	movff	plusw1,postinc1
 36706                           
 36707                           ;stkvar	_buf @ sp[(-6)+-4]
 36708  01FE38  0EF6               	movlw	-10
 36709  01FE3A  006F FF8F FFE6     	movff	plusw1,postinc1
 36710  01FE40  006F FF8F FFE6     	movff	plusw1,postinc1
 36711  01FE46  EC03  F009         	call	_fputs	;wreg free
 36712  01FE4A                     l15621:
 36713                           
 36714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 36715                           ;stkvar	_p @ sp[(-4)+-6]
 36716  01FE4A  0EF7               	movlw	-9
 36717  01FE4C  BEE3               	btfsc	plusw1,7,c
 36718  01FE4E  D011               	goto	l15625
 36719                           
 36720                           ;stkvar	_p @ sp[(-4)+-6]
 36721                           ;stkvar	_w @ sp[(-4)+0]
 36722  01FE50  0EF6               	movlw	-10
 36723  01FE52  006F FF8C  F02A    	movff	plusw1,btemp
 36724  01FE58  0EFC               	movlw	-4
 36725  01FE5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36726  01FE60  0EF7               	movlw	-9
 36727  01FE62  006F FF8C  F02A    	movff	plusw1,btemp
 36728  01FE68  0EFD               	movlw	-3
 36729  01FE6A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36730  01FE70  D004               	goto	l2476
 36731  01FE72                     l15625:
 36732                           
 36733                           ;stkvar	_w @ sp[(-4)+0]
 36734  01FE72  0EFC               	movlw	-4
 36735  01FE74  6AE3               	clrf	plusw1,c
 36736  01FE76  0EFD               	movlw	-3
 36737  01FE78  6AE3               	clrf	plusw1,c
 36738  01FE7A                     l2476:
 36739                           
 36740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 36741                           ;stkvar	_i @ sp[(-4)+2]
 36742  01FE7A  0EFE               	movlw	-2
 36743  01FE7C  6AE3               	clrf	plusw1,c
 36744  01FE7E  0EFF               	movlw	-1
 36745  01FE80  6AE3               	clrf	plusw1,c
 36746                           
 36747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36748  01FE82  D01E               	goto	l15631
 36749  01FE84                     l15627:
 36750                           
 36751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 36752                           ;stkvar	_fp @ sp[(-4)+-2]
 36753  01FE84  0EFA               	movlw	-6
 36754  01FE86  006F FF8F FFE6     	movff	plusw1,postinc1
 36755  01FE8C  006F FF8F FFE6     	movff	plusw1,postinc1
 36756  01FE92  0E20               	movlw	32
 36757  01FE94  6EE6               	movwf	postinc1,c
 36758  01FE96  0E00               	movlw	0
 36759  01FE98  6EE6               	movwf	postinc1,c
 36760  01FE9A  ECD8  F0FC         	call	_fputc	;wreg free
 36761                           
 36762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 36763                           ;stkvar	_i @ sp[(-4)+2]
 36764  01FE9E  0EFE               	movlw	-2
 36765  01FEA0  50E3               	movf	plusw1,w,c
 36766  01FEA2  0F01               	addlw	1
 36767  01FEA4  6E2A               	movwf	btemp^0,c
 36768  01FEA6  0EFE               	movlw	-2
 36769  01FEA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 36770  01FEAE  6A2A               	clrf	btemp^0,c
 36771  01FEB0  0EFF               	movlw	-1
 36772  01FEB2  50E3               	movf	plusw1,w,c
 36773  01FEB4  202A               	addwfc	btemp^0,w,c
 36774  01FEB6  6E2A               	movwf	btemp^0,c
 36775  01FEB8  0EFF               	movlw	-1
 36776  01FEBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 36777  01FEC0                     l15631:
 36778                           
 36779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36780                           ;stkvar	_w @ sp[(-4)+0]
 36781                           ;stkvar	_i @ sp[(-4)+2]
 36782  01FEC0  50E1               	movf	fsr1l,w,c
 36783  01FEC2  0FFE               	addlw	-2
 36784  01FEC4  6ED9               	movwf	fsr2l,c
 36785  01FEC6  50E2               	movf	fsr1h,w,c
 36786  01FEC8  6EDA               	movwf	fsr2h,c
 36787  01FECA  0EFF               	movlw	255
 36788  01FECC  22DA               	addwfc	fsr2h,f,c
 36789  01FECE  0EFC               	movlw	-4
 36790  01FED0  50E3               	movf	plusw1,w,c
 36791  01FED2  5CDE               	subwf	postinc2,w,c
 36792  01FED4  50DE               	movf	postinc2,w,c
 36793  01FED6  0A80               	xorlw	128
 36794  01FED8  6E2A               	movwf	btemp^0,c
 36795  01FEDA  0EFD               	movlw	-3
 36796  01FEDC  50E3               	movf	plusw1,w,c
 36797  01FEDE  0A80               	xorlw	128
 36798  01FEE0  582A               	subwfb	btemp^0,w,c
 36799  01FEE2  A0D8               	btfss	status,0,c
 36800  01FEE4  D7CF               	goto	l15627
 36801                           
 36802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 36803  01FEE6  B04E               	btfsc	_flags^0,0,c
 36804  01FEE8  D010               	goto	l15635
 36805                           
 36806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 36807                           ;stkvar	_fp @ sp[(-4)+-2]
 36808  01FEEA  0EFA               	movlw	-6
 36809  01FEEC  006F FF8F FFE6     	movff	plusw1,postinc1
 36810  01FEF2  006F FF8F FFE6     	movff	plusw1,postinc1
 36811                           
 36812                           ;stkvar	_buf @ sp[(-6)+-4]
 36813  01FEF8  0EF6               	movlw	-10
 36814  01FEFA  006F FF8F FFE6     	movff	plusw1,postinc1
 36815  01FF00  006F FF8F FFE6     	movff	plusw1,postinc1
 36816  01FF06  EC03  F009         	call	_fputs	;wreg free
 36817  01FF0A                     l15635:
 36818                           
 36819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 36820                           ;stkvar	_w @ sp[(-4)+0]
 36821                           ;stkvar	_buf @ sp[(-4)+-4]
 36822  01FF0A  0EF8               	movlw	-8
 36823  01FF0C  006F FF8F FFE6     	movff	plusw1,postinc1
 36824  01FF12  006F FF8F FFE6     	movff	plusw1,postinc1
 36825  01FF18  EC65  F008         	call	_strlen	;wreg free
 36826  01FF1C  0EFC               	movlw	-4
 36827  01FF1E  50E3               	movf	plusw1,w,c
 36828  01FF20  262A               	addwf	btemp^0,f,c
 36829  01FF22  0EFD               	movlw	-3
 36830  01FF24  50E3               	movf	plusw1,w,c
 36831  01FF26  222B               	addwfc	(btemp+1)^0,f,c
 36832                           
 36833                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 36834  01FF28  0EF6               	movlw	246
 36835  01FF2A  26E1               	addwf	fsr1l,f,c
 36836  01FF2C  0EFF               	movlw	255
 36837  01FF2E  22E2               	addwfc	fsr1h,f,c
 36838  01FF30  0012               	return		;funcret
 36839  01FF32                     __end_of_pad:
 36840                           	opt callstack 0
 36841                           
 36842 ;; *************** function _strlen *****************
 36843 ;; Defined at:
 36844 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 36845 ;; Parameters:    Size  Location     Type
 36846 ;;  s               2  [STACK] PTR const unsigned char 
 36847 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36848 ;;		 -> dbuf(80), spin(120), STR_84(9), STR_83(12), 
 36849 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36850 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 36851 ;; Auto vars:     Size  Location     Type
 36852 ;;  a               2  [STACK] PTR const unsigned char 
 36853 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36854 ;;		 -> dbuf(80), spin(120), STR_84(9), STR_83(12), 
 36855 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36856 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 36857 ;; Return value:  Size  Location     Type
 36858 ;;                  2  [STACK] unsigned int 
 36859 ;; Registers used:
 36860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 36861 ;; Tracked objects:
 36862 ;;		On entry : 0/0
 36863 ;;		On exit  : 0/0
 36864 ;;		Unchanged: 0/0
 36865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36870 ;;Total ram usage:        0 bytes
 36871 ;; Hardware stack levels used:    1
 36872 ;; Hardware stack levels required when called:   15
 36873 ;; This function calls:
 36874 ;;		Nothing
 36875 ;; This function is called by:
 36876 ;;		_eaDogM_WriteString
 36877 ;;		_spinners
 36878 ;;		_calc_bsoc
 36879 ;;		_pad
 36880 ;;		_stoa
 36881 ;; This function uses a reentrant model
 36882 ;;
 36883                           
 36884                           	psect	text122
 36885  0010CA                     __ptext122:
 36886                           	opt callstack 0
 36887  0010CA                     _strlen:
 36888                           	opt callstack 0
 36889                           
 36890                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36891  0010CA  52E6               	movf	postinc1,f,c
 36892  0010CC  52E6               	movf	postinc1,f,c
 36893                           
 36894                           ;stkvar	_s @ sp[(-2)+-2]
 36895                           
 36896                           ;incstack = 0
 36897 ;; hardware stack exceeded
 36898  0010CE  0EFC               	movlw	-4
 36899  0010D0  006F FF8C  F034    	movff	plusw1,btemp+10
 36900  0010D6  0EFD               	movlw	-3
 36901  0010D8  006F FF8C  F035    	movff	plusw1,btemp+11
 36902                           
 36903                           ;stkvar	_a @ sp[(-2)+0]
 36904  0010DE  0EFF               	movlw	-1
 36905  0010E0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36906  0010E6  0EFE               	movlw	-2
 36907  0010E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36908  0010EE  D011               	goto	l15561
 36909  0010F0                     l15559:
 36910                           
 36911                           ;stkvar	_s @ sp[(-2)+-2]
 36912  0010F0  0EFC               	movlw	-4
 36913  0010F2  50E3               	movf	plusw1,w,c
 36914  0010F4  0F01               	addlw	1
 36915  0010F6  6E2A               	movwf	btemp^0,c
 36916  0010F8  0EFC               	movlw	-4
 36917  0010FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 36918  001100  6A2A               	clrf	btemp^0,c
 36919  001102  0EFD               	movlw	-3
 36920  001104  50E3               	movf	plusw1,w,c
 36921  001106  202A               	addwfc	btemp^0,w,c
 36922  001108  6E2A               	movwf	btemp^0,c
 36923  00110A  0EFD               	movlw	-3
 36924  00110C  0060  F0AB  FFE3   	movff	btemp,plusw1
 36925  001112                     l15561:
 36926                           
 36927                           ;stkvar	_s @ sp[(-2)+-2]
 36928  001112  0EFC               	movlw	-4
 36929  001114  006F FF8F FFF6     	movff	plusw1,tblptrl
 36930  00111A  0EFD               	movlw	-3
 36931  00111C  006F FF8F FFF7     	movff	plusw1,tblptrh
 36932  001122  0E00               	movlw	low (__mediumconst shr (0+16))
 36933  001124  6EF8               	movwf	tblptru,c
 36934  001126  0E1F               	movlw	(high __ramtop+-1)
 36935  001128  64F7               	cpfsgt	tblptrh,c
 36936  00112A  D003               	bra	u14427
 36937  00112C  0008               	tblrd		*
 36938  00112E  50F5               	movf	tablat,w,c
 36939  001130  D007               	bra	u14420
 36940  001132                     u14427:
 36941  001132  006F FFDB FFE9     	movff	tblptrl,fsr0l
 36942  001138  006F FFDF FFEA     	movff	tblptrh,fsr0h
 36943  00113E  50EF               	movf	indf0,w,c
 36944  001140                     u14420:
 36945  001140  0900               	iorlw	0
 36946  001142  A4D8               	btfss	status,2,c
 36947  001144  D7D5               	goto	l15559
 36948                           
 36949                           ;stkvar	_a @ sp[(-2)+0]
 36950                           ;stkvar	_s @ sp[(-2)+-2]
 36951  001146  0EFC               	movlw	-4
 36952  001148  006F FF8C  F02A    	movff	plusw1,btemp
 36953  00114E  0EFD               	movlw	-3
 36954  001150  006F FF8C  F02B    	movff	plusw1,btemp+1
 36955  001156  0EFE               	movlw	-2
 36956  001158  50E3               	movf	plusw1,w,c
 36957  00115A  5E2A               	subwf	btemp^0,f,c
 36958  00115C  0EFF               	movlw	-1
 36959  00115E  50E3               	movf	plusw1,w,c
 36960  001160  5A2B               	subwfb	(btemp+1)^0,f,c
 36961                           
 36962                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 36963  001162  52E5               	movf	postdec1,f,c
 36964  001164  52E5               	movf	postdec1,f,c
 36965  001166  52E5               	movf	postdec1,f,c
 36966  001168  52E5               	movf	postdec1,f,c
 36967  00116A  0012               	return		;funcret
 36968  00116C                     __end_of_strlen:
 36969                           	opt callstack 0
 36970                           
 36971 ;; *************** function _fputs *****************
 36972 ;; Defined at:
 36973 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 36974 ;; Parameters:    Size  Location     Type
 36975 ;;  s               2  [STACK] PTR const unsigned char 
 36976 ;;		 -> dbuf(80), 
 36977 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36978 ;;		 -> f(6), NULL(0), 
 36979 ;; Auto vars:     Size  Location     Type
 36980 ;;  i               2  [STACK] int 
 36981 ;;  c               1  [STACK] unsigned char 
 36982 ;; Return value:  Size  Location     Type
 36983 ;;                  2  [STACK] int 
 36984 ;; Registers used:
 36985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36986 ;; Tracked objects:
 36987 ;;		On entry : 0/3
 36988 ;;		On exit  : 0/0
 36989 ;;		Unchanged: 0/0
 36990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36995 ;;Total ram usage:        0 bytes
 36996 ;; Hardware stack levels used:    1
 36997 ;; Hardware stack levels required when called:   18
 36998 ;; This function calls:
 36999 ;;		_fputc
 37000 ;; This function is called by:
 37001 ;;		_pad
 37002 ;; This function uses a reentrant model
 37003 ;;
 37004                           
 37005                           	psect	text123
 37006  001206                     __ptext123:
 37007                           	opt callstack 0
 37008  001206                     _fputs:
 37009                           	opt callstack 0
 37010                           
 37011                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37012  001206  52E6               	movf	postinc1,f,c
 37013  001208  52E6               	movf	postinc1,f,c
 37014  00120A  52E6               	movf	postinc1,f,c
 37015                           
 37016                           ;stkvar	_i @ sp[(-3)+0]
 37017                           
 37018                           ;incstack = 0
 37019 ;; hardware stack exceeded
 37020  00120C  0EFD               	movlw	-3
 37021  00120E  6AE3               	clrf	plusw1,c
 37022  001210  0EFE               	movlw	-2
 37023  001212  6AE3               	clrf	plusw1,c
 37024  001214  D01F               	goto	l15573
 37025  001216                     l15569:
 37026                           
 37027                           ;stkvar	_fp @ sp[(-3)+-4]
 37028  001216  0EF9               	movlw	-7
 37029  001218  006F FF8F FFE6     	movff	plusw1,postinc1
 37030  00121E  006F FF8F FFE6     	movff	plusw1,postinc1
 37031                           
 37032                           ;stkvar	_c @ sp[(-5)+2]
 37033  001224  0EFD               	movlw	-3
 37034  001226  50E3               	movf	plusw1,w,c
 37035  001228  6EE6               	movwf	postinc1,c
 37036  00122A  0E00               	movlw	0
 37037  00122C  6EE6               	movwf	postinc1,c
 37038  00122E  ECD8  F0FC         	call	_fputc	;wreg free
 37039                           
 37040                           ;stkvar	_i @ sp[(-3)+0]
 37041  001232  0EFD               	movlw	-3
 37042  001234  50E3               	movf	plusw1,w,c
 37043  001236  0F01               	addlw	1
 37044  001238  6E2A               	movwf	btemp^0,c
 37045  00123A  0EFD               	movlw	-3
 37046  00123C  0060  F0AB  FFE3   	movff	btemp,plusw1
 37047  001242  6A2A               	clrf	btemp^0,c
 37048  001244  0EFE               	movlw	-2
 37049  001246  50E3               	movf	plusw1,w,c
 37050  001248  202A               	addwfc	btemp^0,w,c
 37051  00124A  6E2A               	movwf	btemp^0,c
 37052  00124C  0EFE               	movlw	-2
 37053  00124E  0060  F0AB  FFE3   	movff	btemp,plusw1
 37054  001254                     l15573:
 37055                           
 37056                           ;stkvar	_i @ sp[(-3)+0]
 37057  001254  0EFD               	movlw	-3
 37058  001256  006F FF8C  F034    	movff	plusw1,btemp+10
 37059  00125C  0EFE               	movlw	-2
 37060  00125E  006F FF8C  F035    	movff	plusw1,btemp+11
 37061                           
 37062                           ;stkvar	_s @ sp[(-3)+-2]
 37063  001264  0EFB               	movlw	-5
 37064  001266  006F FF8C  F032    	movff	plusw1,btemp+8
 37065  00126C  0EFC               	movlw	-4
 37066  00126E  006F FF8C  F033    	movff	plusw1,btemp+9
 37067  001274  5034               	movf	(btemp+10)^0,w,c
 37068  001276  2432               	addwf	(btemp+8)^0,w,c
 37069  001278  6ED9               	movwf	fsr2l,c
 37070  00127A  5035               	movf	(btemp+11)^0,w,c
 37071  00127C  2033               	addwfc	(btemp+9)^0,w,c
 37072  00127E  6EDA               	movwf	fsr2h,c
 37073  001280  50DF               	movf	indf2,w,c
 37074  001282  6E35               	movwf	(btemp+11)^0,c
 37075                           
 37076                           ;stkvar	_c @ sp[(-3)+2]
 37077  001284  0EFF               	movlw	-1
 37078  001286  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37079  00128C  0EFF               	movlw	-1
 37080  00128E  50E3               	movf	plusw1,w,c
 37081  001290  A4D8               	btfss	status,2,c
 37082  001292  D7C1               	goto	l15569
 37083                           
 37084                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37085  001294  0EF9               	movlw	249
 37086  001296  26E1               	addwf	fsr1l,f,c
 37087  001298  0EFF               	movlw	255
 37088  00129A  22E2               	addwfc	fsr1h,f,c
 37089  00129C  0012               	return		;funcret
 37090  00129E                     __end_of_fputs:
 37091                           	opt callstack 0
 37092                           
 37093 ;; *************** function _fputc *****************
 37094 ;; Defined at:
 37095 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 37096 ;; Parameters:    Size  Location     Type
 37097 ;;  c               2  [STACK] int 
 37098 ;;  fp              2  [STACK] PTR struct _IO_FILE
 37099 ;;		 -> f(6), NULL(0), 
 37100 ;; Auto vars:     Size  Location     Type
 37101 ;;		None
 37102 ;; Return value:  Size  Location     Type
 37103 ;;                  2  [STACK] int 
 37104 ;; Registers used:
 37105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 37106 ;; Tracked objects:
 37107 ;;		On entry : 0/0
 37108 ;;		On exit  : 0/0
 37109 ;;		Unchanged: 0/0
 37110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37115 ;;Total ram usage:        0 bytes
 37116 ;; Hardware stack levels used:    1
 37117 ;; Hardware stack levels required when called:   17
 37118 ;; This function calls:
 37119 ;;		_putch
 37120 ;; This function is called by:
 37121 ;;		_pad
 37122 ;;		_stoa
 37123 ;;		_vfpfcnvrt
 37124 ;;		_fputs
 37125 ;; This function uses a reentrant model
 37126 ;;
 37127                           
 37128                           	psect	text124
 37129  01F9B0                     __ptext124:
 37130                           	opt callstack 0
 37131  01F9B0                     _fputc:
 37132                           	opt callstack 0
 37133                           
 37134                           ;stkvar	_fp @ sp[(0)+-4]
 37135                           
 37136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37137                           ;incstack = 0
 37138 ;; hardware stack exceeded
 37139  01F9B0  0EFC               	movlw	-4
 37140  01F9B2  006F FF8C  F02A    	movff	plusw1,btemp
 37141  01F9B8  0EFD               	movlw	-3
 37142  01F9BA  50E3               	movf	plusw1,w,c
 37143  01F9BC  102A               	iorwf	btemp^0,w,c
 37144  01F9BE  B4D8               	btfsc	status,2,c
 37145  01F9C0  D009               	goto	u14390
 37146                           
 37147                           ;stkvar	_fp @ sp[(0)+-4]
 37148  01F9C2  0EFC               	movlw	-4
 37149  01F9C4  006F FF8C  F02A    	movff	plusw1,btemp
 37150  01F9CA  0EFD               	movlw	-3
 37151  01F9CC  50E3               	movf	plusw1,w,c
 37152  01F9CE  102A               	iorwf	btemp^0,w,c
 37153  01F9D0  A4D8               	btfss	status,2,c
 37154  01F9D2  D006               	goto	l15547
 37155  01F9D4                     u14390:
 37156                           
 37157                           ;stkvar	_c @ sp[(0)+-2]
 37158  01F9D4  0EFE               	movlw	-2
 37159  01F9D6  50E3               	movf	plusw1,w,c
 37160  01F9D8  6EE6               	movwf	postinc1,c
 37161  01F9DA  ECE9  F016         	call	_putch	;wreg free
 37162  01F9DE  D075               	goto	l3552
 37163  01F9E0                     l15547:
 37164                           
 37165                           ;stkvar	_fp @ sp[(0)+-4]
 37166  01F9E0  0EFC               	movlw	-4
 37167  01F9E2  006F FF8C  F034    	movff	plusw1,btemp+10
 37168  01F9E8  0EFD               	movlw	-3
 37169  01F9EA  006F FF8C  F035    	movff	plusw1,btemp+11
 37170  01F9F0  0E04               	movlw	4
 37171  01F9F2  2434               	addwf	(btemp+10)^0,w,c
 37172  01F9F4  6ED9               	movwf	fsr2l,c
 37173  01F9F6  0E00               	movlw	0
 37174  01F9F8  2035               	addwfc	(btemp+11)^0,w,c
 37175  01F9FA  6EDA               	movwf	fsr2h,c
 37176  01F9FC  50DE               	movf	postinc2,w,c
 37177  01F9FE  10DE               	iorwf	postinc2,w,c
 37178  01FA00  B4D8               	btfsc	status,2,c
 37179  01FA02  D026               	goto	u14410
 37180                           
 37181                           ;stkvar	_fp @ sp[(0)+-4]
 37182  01FA04  0EFC               	movlw	-4
 37183  01FA06  006F FF8C  F034    	movff	plusw1,btemp+10
 37184  01FA0C  0EFD               	movlw	-3
 37185  01FA0E  006F FF8C  F035    	movff	plusw1,btemp+11
 37186  01FA14  0E04               	movlw	4
 37187  01FA16  2434               	addwf	(btemp+10)^0,w,c
 37188  01FA18  6ED9               	movwf	fsr2l,c
 37189  01FA1A  0E00               	movlw	0
 37190  01FA1C  2035               	addwfc	(btemp+11)^0,w,c
 37191  01FA1E  6EDA               	movwf	fsr2h,c
 37192                           
 37193                           ;stkvar	_fp @ sp[(0)+-4]
 37194  01FA20  0EFC               	movlw	-4
 37195  01FA22  006F FF8C  F034    	movff	plusw1,btemp+10
 37196  01FA28  0EFD               	movlw	-3
 37197  01FA2A  006F FF8C  F035    	movff	plusw1,btemp+11
 37198  01FA30  0E02               	movlw	2
 37199  01FA32  2434               	addwf	(btemp+10)^0,w,c
 37200  01FA34  6EE9               	movwf	fsr0l,c
 37201  01FA36  0E00               	movlw	0
 37202  01FA38  2035               	addwfc	(btemp+11)^0,w,c
 37203  01FA3A  6EEA               	movwf	fsr0h,c
 37204  01FA3C  50DE               	movf	postinc2,w,c
 37205  01FA3E  5CEE               	subwf	postinc0,w,c
 37206  01FA40  50EE               	movf	postinc0,w,c
 37207  01FA42  0A80               	xorlw	128
 37208  01FA44  6E2A               	movwf	btemp^0,c
 37209  01FA46  50DE               	movf	postinc2,w,c
 37210  01FA48  0A80               	xorlw	128
 37211  01FA4A  582A               	subwfb	btemp^0,w,c
 37212  01FA4C  B0D8               	btfsc	status,0,c
 37213  01FA4E  D03D               	goto	l3552
 37214  01FA50                     u14410:
 37215                           
 37216                           ;stkvar	_c @ sp[(0)+-2]
 37217                           ;stkvar	_fp @ sp[(0)+-4]
 37218  01FA50  0EFC               	movlw	-4
 37219  01FA52  006F FF8C  F034    	movff	plusw1,btemp+10
 37220  01FA58  0EFD               	movlw	-3
 37221  01FA5A  006F FF8C  F035    	movff	plusw1,btemp+11
 37222  01FA60  0E02               	movlw	2
 37223  01FA62  2434               	addwf	(btemp+10)^0,w,c
 37224  01FA64  6ED9               	movwf	fsr2l,c
 37225  01FA66  0E00               	movlw	0
 37226  01FA68  2035               	addwfc	(btemp+11)^0,w,c
 37227  01FA6A  6EDA               	movwf	fsr2h,c
 37228  01FA6C  006F FF78  F034    	movff	postinc2,btemp+10
 37229  01FA72  006F FF74  F035    	movff	postdec2,btemp+11
 37230                           
 37231                           ;stkvar	_fp @ sp[(0)+-4]
 37232  01FA78  0EFC               	movlw	-4
 37233  01FA7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 37234  01FA80  0EFD               	movlw	-3
 37235  01FA82  006F FF8F FFDA     	movff	plusw1,fsr2h
 37236  01FA88  006F FF78  F032    	movff	postinc2,btemp+8
 37237  01FA8E  006F FF74  F033    	movff	postdec2,btemp+9
 37238  01FA94  5034               	movf	(btemp+10)^0,w,c
 37239  01FA96  2432               	addwf	(btemp+8)^0,w,c
 37240  01FA98  6ED9               	movwf	fsr2l,c
 37241  01FA9A  5035               	movf	(btemp+11)^0,w,c
 37242  01FA9C  2033               	addwfc	(btemp+9)^0,w,c
 37243  01FA9E  6EDA               	movwf	fsr2h,c
 37244  01FAA0  0EFE               	movlw	-2
 37245  01FAA2  006F FF8F FFDF     	movff	plusw1,indf2
 37246                           
 37247                           ;stkvar	_fp @ sp[(0)+-4]
 37248  01FAA8  0EFC               	movlw	-4
 37249  01FAAA  006F FF8C  F034    	movff	plusw1,btemp+10
 37250  01FAB0  0EFD               	movlw	-3
 37251  01FAB2  006F FF8C  F035    	movff	plusw1,btemp+11
 37252  01FAB8  0E02               	movlw	2
 37253  01FABA  2434               	addwf	(btemp+10)^0,w,c
 37254  01FABC  6ED9               	movwf	fsr2l,c
 37255  01FABE  0E00               	movlw	0
 37256  01FAC0  2035               	addwfc	(btemp+11)^0,w,c
 37257  01FAC2  6EDA               	movwf	fsr2h,c
 37258  01FAC4  2ADE               	incf	postinc2,f,c
 37259  01FAC6  0E00               	movlw	0
 37260  01FAC8  22DD               	addwfc	postdec2,f,c
 37261  01FACA                     l3552:
 37262                           
 37263                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37264  01FACA  52E5               	movf	postdec1,f,c
 37265  01FACC  52E5               	movf	postdec1,f,c
 37266  01FACE  52E5               	movf	postdec1,f,c
 37267  01FAD0  52E5               	movf	postdec1,f,c
 37268  01FAD2  0012               	return		;funcret
 37269  01FAD4                     __end_of_fputc:
 37270                           	opt callstack 0
 37271                           
 37272 ;; *************** function _putch *****************
 37273 ;; Defined at:
 37274 ;;		line 420 in file "eadog.c"
 37275 ;; Parameters:    Size  Location     Type
 37276 ;;  c               1  [STACK] unsigned char 
 37277 ;; Auto vars:     Size  Location     Type
 37278 ;;		None
 37279 ;; Return value:  Size  Location     Type
 37280 ;;                  1  [STACK] void 
 37281 ;; Registers used:
 37282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 37283 ;; Tracked objects:
 37284 ;;		On entry : 0/0
 37285 ;;		On exit  : 0/0
 37286 ;;		Unchanged: 0/0
 37287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37292 ;;Total ram usage:        0 bytes
 37293 ;; Hardware stack levels used:    1
 37294 ;; Hardware stack levels required when called:   16
 37295 ;; This function calls:
 37296 ;;		_ringBufS_put_dma
 37297 ;; This function is called by:
 37298 ;;		_fputc
 37299 ;; This function uses a reentrant model
 37300 ;;
 37301                           
 37302                           	psect	text125
 37303  002DD2                     __ptext125:
 37304                           	opt callstack 0
 37305  002DD2                     _putch:
 37306                           	opt callstack 0
 37307                           
 37308                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 37309                           ;stkvar	_c @ sp[(0)+-1]
 37310                           
 37311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37312                           ;incstack = 0
 37313 ;; hardware stack exceeded
 37314  002DD2  0EFF               	movlw	-1
 37315  002DD4  50E3               	movf	plusw1,w,c
 37316  002DD6  6EE6               	movwf	postinc1,c
 37317  002DD8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 37318  002DDE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 37319  002DE4  EC6B  F007         	call	_ringBufS_put_dma	;wreg free
 37320                           
 37321                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 37322  002DE8  52E5               	movf	postdec1,f,c
 37323  002DEA  0012               	return		;funcret
 37324  002DEC                     __end_of_putch:
 37325                           	opt callstack 0
 37326                           
 37327 ;; *************** function _ringBufS_put_dma *****************
 37328 ;; Defined at:
 37329 ;;		line 67 in file "ringbufs.c"
 37330 ;; Parameters:    Size  Location     Type
 37331 ;;  _this           2  [STACK] PTR struct ringBufS_t
 37332 ;;		 -> ring_buf1(67), 
 37333 ;;  c               1  [STACK] const unsigned char 
 37334 ;; Auto vars:     Size  Location     Type
 37335 ;;		None
 37336 ;; Return value:  Size  Location     Type
 37337 ;;                  1  [STACK] void 
 37338 ;; Registers used:
 37339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 37340 ;; Tracked objects:
 37341 ;;		On entry : 0/3B
 37342 ;;		On exit  : 0/0
 37343 ;;		Unchanged: 0/0
 37344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37349 ;;Total ram usage:        0 bytes
 37350 ;; Hardware stack levels used:    1
 37351 ;; Hardware stack levels required when called:   15
 37352 ;; This function calls:
 37353 ;;		Nothing
 37354 ;; This function is called by:
 37355 ;;		_send_lcd_data_dma
 37356 ;;		_putch
 37357 ;; This function uses a reentrant model
 37358 ;;
 37359                           
 37360                           	psect	text126
 37361  000ED6                     __ptext126:
 37362                           	opt callstack 0
 37363  000ED6                     _ringBufS_put_dma:
 37364                           	opt callstack 0
 37365                           
 37366                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 37367                           ;stkvar	__this @ sp[(0)+-2]
 37368                           
 37369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37370                           ;incstack = 0
 37371 ;; hardware stack exceeded
 37372  000ED6  0EFE               	movlw	-2
 37373  000ED8  006F FF8C  F034    	movff	plusw1,btemp+10
 37374  000EDE  0EFF               	movlw	-1
 37375  000EE0  006F FF8C  F035    	movff	plusw1,btemp+11
 37376  000EE6  0E42               	movlw	66
 37377  000EE8  2434               	addwf	(btemp+10)^0,w,c
 37378  000EEA  6ED9               	movwf	fsr2l,c
 37379  000EEC  0E00               	movlw	0
 37380  000EEE  2035               	addwfc	(btemp+11)^0,w,c
 37381  000EF0  6EDA               	movwf	fsr2h,c
 37382  000EF2  0E40               	movlw	64
 37383  000EF4  60DF               	cpfslt	indf2,c
 37384  000EF6  D040               	goto	l1753
 37385                           
 37386                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 37387                           ;stkvar	_c @ sp[(0)+-3]
 37388                           ;stkvar	__this @ sp[(0)+-2]
 37389  000EF8  0EFE               	movlw	-2
 37390  000EFA  006F FF8C  F034    	movff	plusw1,btemp+10
 37391  000F00  0EFF               	movlw	-1
 37392  000F02  006F FF8C  F035    	movff	plusw1,btemp+11
 37393  000F08  0E40               	movlw	64
 37394  000F0A  2434               	addwf	(btemp+10)^0,w,c
 37395  000F0C  6ED9               	movwf	fsr2l,c
 37396  000F0E  0E00               	movlw	0
 37397  000F10  2035               	addwfc	(btemp+11)^0,w,c
 37398  000F12  6EDA               	movwf	fsr2h,c
 37399  000F14  50DF               	movf	indf2,w,c
 37400  000F16  6E35               	movwf	(btemp+11)^0,c
 37401                           
 37402                           ;stkvar	__this @ sp[(0)+-2]
 37403  000F18  0EFE               	movlw	-2
 37404  000F1A  006F FF8C  F032    	movff	plusw1,btemp+8
 37405  000F20  0EFF               	movlw	-1
 37406  000F22  006F FF8C  F033    	movff	plusw1,btemp+9
 37407  000F28  5035               	movf	(btemp+11)^0,w,c
 37408  000F2A  2432               	addwf	(btemp+8)^0,w,c
 37409  000F2C  6ED9               	movwf	fsr2l,c
 37410  000F2E  0E00               	movlw	0
 37411  000F30  2033               	addwfc	(btemp+9)^0,w,c
 37412  000F32  6EDA               	movwf	fsr2h,c
 37413  000F34  0EFD               	movlw	-3
 37414  000F36  006F FF8F FFDF     	movff	plusw1,indf2
 37415                           
 37416                           ;ringbufs.c: 71:   ++_this->head;
 37417                           ;stkvar	__this @ sp[(0)+-2]
 37418  000F3C  0EFE               	movlw	-2
 37419  000F3E  006F FF8C  F034    	movff	plusw1,btemp+10
 37420  000F44  0EFF               	movlw	-1
 37421  000F46  006F FF8C  F035    	movff	plusw1,btemp+11
 37422  000F4C  0E40               	movlw	64
 37423  000F4E  2434               	addwf	(btemp+10)^0,w,c
 37424  000F50  6ED9               	movwf	fsr2l,c
 37425  000F52  0E00               	movlw	0
 37426  000F54  2035               	addwfc	(btemp+11)^0,w,c
 37427  000F56  6EDA               	movwf	fsr2h,c
 37428  000F58  2ADF               	incf	indf2,f,c
 37429                           
 37430                           ;ringbufs.c: 72:   ++_this->count;
 37431                           ;stkvar	__this @ sp[(0)+-2]
 37432  000F5A  0EFE               	movlw	-2
 37433  000F5C  006F FF8C  F034    	movff	plusw1,btemp+10
 37434  000F62  0EFF               	movlw	-1
 37435  000F64  006F FF8C  F035    	movff	plusw1,btemp+11
 37436  000F6A  0E42               	movlw	66
 37437  000F6C  2434               	addwf	(btemp+10)^0,w,c
 37438  000F6E  6ED9               	movwf	fsr2l,c
 37439  000F70  0E00               	movlw	0
 37440  000F72  2035               	addwfc	(btemp+11)^0,w,c
 37441  000F74  6EDA               	movwf	fsr2h,c
 37442  000F76  2ADF               	incf	indf2,f,c
 37443  000F78                     l1753:
 37444                           
 37445                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 37446  000F78  52E5               	movf	postdec1,f,c
 37447  000F7A  52E5               	movf	postdec1,f,c
 37448  000F7C  52E5               	movf	postdec1,f,c
 37449  000F7E  0012               	return		;funcret
 37450  000F80                     __end_of_ringBufS_put_dma:
 37451                           	opt callstack 0
 37452                           
 37453 ;; *************** function _atoi *****************
 37454 ;; Defined at:
 37455 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 37456 ;; Parameters:    Size  Location     Type
 37457 ;;  s               2  [STACK] PTR const unsigned char 
 37458 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 37459 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 37460 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 37461 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 37462 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 37463 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(22), 
 37464 ;;		 -> STR_76(22), STR_75(22), STR_74(22), STR_73(22), 
 37465 ;;		 -> STR_72(22), STR_71(22), STR_70(22), STR_69(22), 
 37466 ;;		 -> STR_68(19), STR_67(21), STR_66(21), STR_65(21), 
 37467 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 37468 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 37469 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 37470 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 37471 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 37472 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 37473 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 37474 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 37475 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 37476 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 37477 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 37478 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 37479 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 37480 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 37481 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 37482 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 37483 ;; Auto vars:     Size  Location     Type
 37484 ;;  n               2  [STACK] int 
 37485 ;;  neg             2  [STACK] int 
 37486 ;; Return value:  Size  Location     Type
 37487 ;;                  2  [STACK] int 
 37488 ;; Registers used:
 37489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 37490 ;; Tracked objects:
 37491 ;;		On entry : 0/0
 37492 ;;		On exit  : 0/0
 37493 ;;		Unchanged: 0/0
 37494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37499 ;;Total ram usage:        0 bytes
 37500 ;; Hardware stack levels used:    1
 37501 ;; Hardware stack levels required when called:   16
 37502 ;; This function calls:
 37503 ;;		_isdigit
 37504 ;;		_isspace
 37505 ;; This function is called by:
 37506 ;;		_vfpfcnvrt
 37507 ;; This function uses a reentrant model
 37508 ;;
 37509                           
 37510                           	psect	text127
 37511  01C688                     __ptext127:
 37512                           	opt callstack 0
 37513  01C688                     _atoi:
 37514                           	opt callstack 0
 37515                           
 37516                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37517  01C688  0E09               	movlw	9
 37518  01C68A  26E1               	addwf	fsr1l,f,c
 37519  01C68C  0E00               	movlw	0
 37520  01C68E  22E2               	addwfc	fsr1h,f,c
 37521                           
 37522                           ;stkvar	_n @ sp[(-9)+5]
 37523                           
 37524                           ;incstack = 0
 37525 ;; hardware stack exceeded
 37526  01C690  0EFC               	movlw	-4
 37527  01C692  6AE3               	clrf	plusw1,c
 37528  01C694  0EFD               	movlw	-3
 37529  01C696  6AE3               	clrf	plusw1,c
 37530                           
 37531                           ;stkvar	_neg @ sp[(-9)+7]
 37532  01C698  0EFE               	movlw	-2
 37533  01C69A  6AE3               	clrf	plusw1,c
 37534  01C69C  0EFF               	movlw	-1
 37535  01C69E  6AE3               	clrf	plusw1,c
 37536  01C6A0  D011               	goto	l11549
 37537  01C6A2                     l11547:
 37538                           
 37539                           ;stkvar	_s @ sp[(-9)+-2]
 37540  01C6A2  0EF5               	movlw	-11
 37541  01C6A4  50E3               	movf	plusw1,w,c
 37542  01C6A6  0F01               	addlw	1
 37543  01C6A8  6E2A               	movwf	btemp^0,c
 37544  01C6AA  0EF5               	movlw	-11
 37545  01C6AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 37546  01C6B2  6A2A               	clrf	btemp^0,c
 37547  01C6B4  0EF6               	movlw	-10
 37548  01C6B6  50E3               	movf	plusw1,w,c
 37549  01C6B8  202A               	addwfc	btemp^0,w,c
 37550  01C6BA  6E2A               	movwf	btemp^0,c
 37551  01C6BC  0EF6               	movlw	-10
 37552  01C6BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 37553  01C6C4                     l11549:
 37554                           
 37555                           ;stkvar	_atoi$7233 @ sp[(-9)+4]
 37556  01C6C4  0EFB               	movlw	-5
 37557  01C6C6  6AE3               	clrf	plusw1,c
 37558  01C6C8  2AE3               	incf	plusw1,f,c
 37559                           
 37560                           ;stkvar	_s @ sp[(-9)+-2]
 37561  01C6CA  50E1               	movf	fsr1l,w,c
 37562  01C6CC  0FF5               	addlw	-11
 37563  01C6CE  6ED9               	movwf	fsr2l,c
 37564  01C6D0  50E2               	movf	fsr1h,w,c
 37565  01C6D2  6EDA               	movwf	fsr2h,c
 37566  01C6D4  0EFF               	movlw	255
 37567  01C6D6  22DA               	addwfc	fsr2h,f,c
 37568  01C6D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 37569  01C6DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 37570  01C6E4                     	if	0	;tblptru may be non-zero
 37571  01C6E4                     	endif
 37572  01C6E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37573  01C6E4  0E00               	movlw	low (__mediumconst shr (0+16))
 37574  01C6E6  6EF8               	movwf	tblptru,c
 37575  01C6E8                     	endif
 37576  01C6E8  0008               	tblrd		*
 37577  01C6EA  50F5               	movf	tablat,w,c
 37578  01C6EC  0A20               	xorlw	32
 37579  01C6EE  B4D8               	btfsc	status,2,c
 37580  01C6F0  D023               	goto	l11557
 37581  01C6F2  0EF7               	movlw	247
 37582  01C6F4  6E34               	movwf	(btemp+10)^0,c
 37583  01C6F6  0EFF               	movlw	255
 37584  01C6F8  6E35               	movwf	(btemp+11)^0,c
 37585                           
 37586                           ;stkvar	_s @ sp[(-9)+-2]
 37587  01C6FA  50E1               	movf	fsr1l,w,c
 37588  01C6FC  0FF5               	addlw	-11
 37589  01C6FE  6ED9               	movwf	fsr2l,c
 37590  01C700  50E2               	movf	fsr1h,w,c
 37591  01C702  6EDA               	movwf	fsr2h,c
 37592  01C704  0EFF               	movlw	255
 37593  01C706  22DA               	addwfc	fsr2h,f,c
 37594  01C708  006F FF7B FFF6     	movff	postinc2,tblptrl
 37595  01C70E  006F FF77 FFF7     	movff	postdec2,tblptrh
 37596  01C714                     	if	0	;tblptru may be non-zero
 37597  01C714                     	endif
 37598  01C714                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37599  01C714  0E00               	movlw	low (__mediumconst shr (0+16))
 37600  01C716  6EF8               	movwf	tblptru,c
 37601  01C718                     	endif
 37602  01C718  0008               	tblrd		*
 37603  01C71A  50F5               	movf	tablat,w,c
 37604  01C71C  6E32               	movwf	(btemp+8)^0,c
 37605  01C71E  6A33               	clrf	(btemp+9)^0,c
 37606  01C720  5034               	movf	(btemp+10)^0,w,c
 37607  01C722  2632               	addwf	(btemp+8)^0,f,c
 37608  01C724  5035               	movf	(btemp+11)^0,w,c
 37609  01C726  2233               	addwfc	(btemp+9)^0,f,c
 37610  01C728  5033               	movf	(btemp+9)^0,w,c
 37611  01C72A  E104               	bnz	u10470
 37612  01C72C  0E05               	movlw	5
 37613  01C72E  5C32               	subwf	(btemp+8)^0,w,c
 37614  01C730  A0D8               	btfss	status,0,c
 37615  01C732  D002               	goto	l11557
 37616  01C734                     u10470:
 37617                           
 37618                           ;stkvar	_atoi$7233 @ sp[(-9)+4]
 37619  01C734  0EFB               	movlw	-5
 37620  01C736  6AE3               	clrf	plusw1,c
 37621  01C738                     l11557:
 37622                           
 37623                           ;stkvar	_atoi$7233 @ sp[(-9)+4]
 37624  01C738  0EFB               	movlw	-5
 37625  01C73A  50E3               	movf	plusw1,w,c
 37626  01C73C  6E34               	movwf	(btemp+10)^0,c
 37627  01C73E  6A35               	clrf	(btemp+11)^0,c
 37628                           
 37629                           ;stkvar	_atoi$7232 @ sp[(-9)+2]
 37630  01C740  0EF9               	movlw	-7
 37631  01C742  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37632  01C748  0EFA               	movlw	-6
 37633  01C74A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37634                           
 37635                           ;stkvar	_atoi$7232 @ sp[(-9)+2]
 37636  01C750  0EF9               	movlw	-7
 37637  01C752  006F FF8C  F02A    	movff	plusw1,btemp
 37638  01C758  0EFA               	movlw	-6
 37639  01C75A  50E3               	movf	plusw1,w,c
 37640  01C75C  102A               	iorwf	btemp^0,w,c
 37641  01C75E  B4D8               	btfsc	status,2,c
 37642  01C760  D01F               	goto	l11567
 37643  01C762  D79F               	goto	l11547
 37644  01C764                     l11563:
 37645  01C764  0E01               	movlw	1
 37646  01C766  6E34               	movwf	(btemp+10)^0,c
 37647  01C768  0E00               	movlw	0
 37648  01C76A  6E35               	movwf	(btemp+11)^0,c
 37649                           
 37650                           ;stkvar	_neg @ sp[(-9)+7]
 37651  01C76C  0EFE               	movlw	-2
 37652  01C76E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37653  01C774  0EFF               	movlw	-1
 37654  01C776  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37655  01C77C                     l11565:
 37656                           
 37657                           ;stkvar	_s @ sp[(-9)+-2]
 37658  01C77C  0EF5               	movlw	-11
 37659  01C77E  50E3               	movf	plusw1,w,c
 37660  01C780  0F01               	addlw	1
 37661  01C782  6E2A               	movwf	btemp^0,c
 37662  01C784  0EF5               	movlw	-11
 37663  01C786  0060  F0AB  FFE3   	movff	btemp,plusw1
 37664  01C78C  6A2A               	clrf	btemp^0,c
 37665  01C78E  0EF6               	movlw	-10
 37666  01C790  50E3               	movf	plusw1,w,c
 37667  01C792  202A               	addwfc	btemp^0,w,c
 37668  01C794  6E2A               	movwf	btemp^0,c
 37669  01C796  0EF6               	movlw	-10
 37670  01C798  0060  F0AB  FFE3   	movff	btemp,plusw1
 37671  01C79E  D053               	goto	l11573
 37672  01C7A0                     l11567:
 37673                           
 37674                           ;stkvar	_s @ sp[(-9)+-2]
 37675  01C7A0  50E1               	movf	fsr1l,w,c
 37676  01C7A2  0FF5               	addlw	-11
 37677  01C7A4  6ED9               	movwf	fsr2l,c
 37678  01C7A6  50E2               	movf	fsr1h,w,c
 37679  01C7A8  6EDA               	movwf	fsr2h,c
 37680  01C7AA  0EFF               	movlw	255
 37681  01C7AC  22DA               	addwfc	fsr2h,f,c
 37682  01C7AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 37683  01C7B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 37684  01C7BA                     	if	0	;tblptru may be non-zero
 37685  01C7BA                     	endif
 37686  01C7BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37687  01C7BA  0E00               	movlw	low (__mediumconst shr (0+16))
 37688  01C7BC  6EF8               	movwf	tblptru,c
 37689  01C7BE                     	endif
 37690  01C7BE  0008               	tblrd		*
 37691  01C7C0  50F5               	movf	tablat,w,c
 37692  01C7C2  6E34               	movwf	(btemp+10)^0,c
 37693  01C7C4  6A35               	clrf	(btemp+11)^0,c
 37694                           
 37695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37696                           ; Switch size 1, requested type "simple"
 37697                           ; Number of cases is 1, Range of values is 0 to 0
 37698                           ; switch strategies available:
 37699                           ; Name         Instructions Cycles
 37700                           ; simple_byte            4     3 (average)
 37701                           ;	Chosen strategy is simple_byte
 37702  01C7C6  5035               	movf	(btemp+11)^0,w,c
 37703  01C7C8  0A00               	xorlw	0	; case 0
 37704  01C7CA  A4D8               	btfss	status,2,c
 37705  01C7CC  D03C               	goto	l11573
 37706                           
 37707                           ; Switch size 1, requested type "simple"
 37708                           ; Number of cases is 2, Range of values is 43 to 45
 37709                           ; switch strategies available:
 37710                           ; Name         Instructions Cycles
 37711                           ; simple_byte            7     4 (average)
 37712                           ;	Chosen strategy is simple_byte
 37713  01C7CE  5034               	movf	(btemp+10)^0,w,c
 37714  01C7D0  0A2B               	xorlw	43	; case 43
 37715  01C7D2  B4D8               	btfsc	status,2,c
 37716  01C7D4  D7D3               	goto	l11565
 37717  01C7D6  0A06               	xorlw	6	; case 45
 37718  01C7D8  B4D8               	btfsc	status,2,c
 37719  01C7DA  D7C4               	goto	l11563
 37720  01C7DC  D034               	goto	l11573
 37721  01C7DE                     l11569:
 37722                           
 37723                           ;stkvar	_n @ sp[(-9)+5]
 37724  01C7DE  0EFC               	movlw	-4
 37725  01C7E0  006F FF8C  F034    	movff	plusw1,btemp+10
 37726  01C7E6  0EFD               	movlw	-3
 37727  01C7E8  006F FF8C  F035    	movff	plusw1,btemp+11
 37728  01C7EE  0E0A               	movlw	10
 37729  01C7F0  0234               	mulwf	(btemp+10)^0,c
 37730  01C7F2  006F FFCC  F032    	movff	prodl,btemp+8
 37731  01C7F8  006F FFD0  F033    	movff	prodh,btemp+9
 37732  01C7FE  0235               	mulwf	(btemp+11)^0,c
 37733  01C800  50F3               	movf	prodl,w,c
 37734  01C802  2633               	addwf	(btemp+9)^0,f,c
 37735                           
 37736                           ;stkvar	_s @ sp[(-9)+-2]
 37737  01C804  50E1               	movf	fsr1l,w,c
 37738  01C806  0FF5               	addlw	-11
 37739  01C808  6ED9               	movwf	fsr2l,c
 37740  01C80A  50E2               	movf	fsr1h,w,c
 37741  01C80C  6EDA               	movwf	fsr2h,c
 37742  01C80E  0EFF               	movlw	255
 37743  01C810  22DA               	addwfc	fsr2h,f,c
 37744  01C812  006F FF7B FFF6     	movff	postinc2,tblptrl
 37745  01C818  006F FF77 FFF7     	movff	postdec2,tblptrh
 37746  01C81E                     	if	0	;tblptru may be non-zero
 37747  01C81E                     	endif
 37748  01C81E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37749  01C81E  0E00               	movlw	low (__mediumconst shr (0+16))
 37750  01C820  6EF8               	movwf	tblptru,c
 37751  01C822                     	endif
 37752  01C822  0008               	tblrd		*
 37753  01C824  50F5               	movf	tablat,w,c
 37754  01C826  5E32               	subwf	(btemp+8)^0,f,c
 37755  01C828  0E00               	movlw	0
 37756  01C82A  5A33               	subwfb	(btemp+9)^0,f,c
 37757  01C82C  0E30               	movlw	48
 37758  01C82E  2632               	addwf	(btemp+8)^0,f,c
 37759  01C830  0E00               	movlw	0
 37760  01C832  2233               	addwfc	(btemp+9)^0,f,c
 37761                           
 37762                           ;stkvar	_n @ sp[(-9)+5]
 37763  01C834  0EFC               	movlw	-4
 37764  01C836  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37765  01C83C  0EFD               	movlw	-3
 37766  01C83E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37767  01C844  D79B               	goto	l11565
 37768  01C846                     l11573:
 37769  01C846  0ED0               	movlw	208
 37770  01C848  6E34               	movwf	(btemp+10)^0,c
 37771  01C84A  0EFF               	movlw	255
 37772  01C84C  6E35               	movwf	(btemp+11)^0,c
 37773                           
 37774                           ;stkvar	_s @ sp[(-9)+-2]
 37775  01C84E  50E1               	movf	fsr1l,w,c
 37776  01C850  0FF5               	addlw	-11
 37777  01C852  6ED9               	movwf	fsr2l,c
 37778  01C854  50E2               	movf	fsr1h,w,c
 37779  01C856  6EDA               	movwf	fsr2h,c
 37780  01C858  0EFF               	movlw	255
 37781  01C85A  22DA               	addwfc	fsr2h,f,c
 37782  01C85C  006F FF7B FFF6     	movff	postinc2,tblptrl
 37783  01C862  006F FF77 FFF7     	movff	postdec2,tblptrh
 37784  01C868                     	if	0	;tblptru may be non-zero
 37785  01C868                     	endif
 37786  01C868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37787  01C868  0E00               	movlw	low (__mediumconst shr (0+16))
 37788  01C86A  6EF8               	movwf	tblptru,c
 37789  01C86C                     	endif
 37790  01C86C  0008               	tblrd		*
 37791  01C86E  50F5               	movf	tablat,w,c
 37792  01C870  6E32               	movwf	(btemp+8)^0,c
 37793  01C872  6A33               	clrf	(btemp+9)^0,c
 37794  01C874  5034               	movf	(btemp+10)^0,w,c
 37795  01C876  2632               	addwf	(btemp+8)^0,f,c
 37796  01C878  5035               	movf	(btemp+11)^0,w,c
 37797  01C87A  2233               	addwfc	(btemp+9)^0,f,c
 37798  01C87C  5033               	movf	(btemp+9)^0,w,c
 37799  01C87E  E106               	bnz	u10490
 37800  01C880  0E0A               	movlw	10
 37801  01C882  5C32               	subwf	(btemp+8)^0,w,c
 37802  01C884  B0D8               	btfsc	status,0,c
 37803  01C886  D002               	goto	u10490
 37804  01C888  0E01               	movlw	1
 37805  01C88A  D001               	goto	u10500
 37806  01C88C                     u10490:
 37807  01C88C  0E00               	movlw	0
 37808  01C88E                     u10500:
 37809  01C88E  6E34               	movwf	(btemp+10)^0,c
 37810  01C890  6A35               	clrf	(btemp+11)^0,c
 37811                           
 37812                           ;stkvar	_atoi$7234 @ sp[(-9)+0]
 37813  01C892  0EF7               	movlw	-9
 37814  01C894  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37815  01C89A  0EF8               	movlw	-8
 37816  01C89C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37817                           
 37818                           ;stkvar	_atoi$7234 @ sp[(-9)+0]
 37819  01C8A2  0EF7               	movlw	-9
 37820  01C8A4  006F FF8C  F02A    	movff	plusw1,btemp
 37821  01C8AA  0EF8               	movlw	-8
 37822  01C8AC  50E3               	movf	plusw1,w,c
 37823  01C8AE  102A               	iorwf	btemp^0,w,c
 37824  01C8B0  A4D8               	btfss	status,2,c
 37825  01C8B2  D795               	goto	l11569
 37826                           
 37827                           ;stkvar	_neg @ sp[(-9)+7]
 37828  01C8B4  0EFE               	movlw	-2
 37829  01C8B6  006F FF8C  F02A    	movff	plusw1,btemp
 37830  01C8BC  0EFF               	movlw	-1
 37831  01C8BE  50E3               	movf	plusw1,w,c
 37832  01C8C0  102A               	iorwf	btemp^0,w,c
 37833  01C8C2  A4D8               	btfss	status,2,c
 37834  01C8C4  D00E               	goto	l11583
 37835                           
 37836                           ;stkvar	_n @ sp[(-9)+5]
 37837  01C8C6  0EFC               	movlw	-4
 37838  01C8C8  006F FF8C  F02A    	movff	plusw1,btemp
 37839  01C8CE  1E2A               	comf	btemp^0,f,c
 37840  01C8D0  0EFD               	movlw	-3
 37841  01C8D2  006F FF8C  F02B    	movff	plusw1,btemp+1
 37842  01C8D8  1E2B               	comf	(btemp+1)^0,f,c
 37843  01C8DA  2A2A               	incf	btemp^0,f,c
 37844  01C8DC  B4D8               	btfsc	status,2,c
 37845  01C8DE  2A2B               	incf	(btemp+1)^0,f,c
 37846  01C8E0  D008               	goto	l3463
 37847  01C8E2                     l11583:
 37848                           
 37849                           ;stkvar	_n @ sp[(-9)+5]
 37850  01C8E2  0EFC               	movlw	-4
 37851  01C8E4  006F FF8C  F02A    	movff	plusw1,btemp
 37852  01C8EA  0EFD               	movlw	-3
 37853  01C8EC  006F FF8C  F02B    	movff	plusw1,btemp+1
 37854  01C8F2                     l3463:
 37855                           
 37856                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 37857  01C8F2  0EF5               	movlw	245
 37858  01C8F4  26E1               	addwf	fsr1l,f,c
 37859  01C8F6  0EFF               	movlw	255
 37860  01C8F8  22E2               	addwfc	fsr1h,f,c
 37861  01C8FA  0012               	return		;funcret
 37862  01C8FC                     __end_of_atoi:
 37863                           	opt callstack 0
 37864                           
 37865 ;; *************** function _isspace *****************
 37866 ;; Defined at:
 37867 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 37868 ;; Parameters:    Size  Location     Type
 37869 ;;  c               2  [STACK] int 
 37870 ;; Auto vars:     Size  Location     Type
 37871 ;;		None
 37872 ;; Return value:  Size  Location     Type
 37873 ;;                  2  [STACK] int 
 37874 ;; Registers used:
 37875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37876 ;; Tracked objects:
 37877 ;;		On entry : 0/0
 37878 ;;		On exit  : 0/0
 37879 ;;		Unchanged: 0/0
 37880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37885 ;;Total ram usage:        0 bytes
 37886 ;; Hardware stack levels used:    1
 37887 ;; Hardware stack levels required when called:   15
 37888 ;; This function calls:
 37889 ;;		Nothing
 37890 ;; This function is called by:
 37891 ;;		_atoi
 37892 ;; This function uses a reentrant model
 37893 ;;
 37894                           
 37895                           	psect	text128
 37896  00200C                     __ptext128:
 37897                           	opt callstack 0
 37898  00200C                     _isspace:
 37899                           	opt callstack 0
 37900                           
 37901                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37902  00200C  52E6               	movf	postinc1,f,c
 37903                           
 37904                           ;stkvar	_isspace$7283 @ sp[(-1)+0]
 37905                           
 37906                           ;incstack = 0
 37907 ;; hardware stack exceeded
 37908  00200E  0EFF               	movlw	-1
 37909  002010  6AE3               	clrf	plusw1,c
 37910  002012  2AE3               	incf	plusw1,f,c
 37911                           
 37912                           ;stkvar	_c @ sp[(-1)+-2]
 37913  002014  0EFD               	movlw	-3
 37914  002016  006F FF8C  F02A    	movff	plusw1,btemp
 37915  00201C  0E20               	movlw	32
 37916  00201E  182A               	xorwf	btemp^0,w,c
 37917  002020  E104               	bnz	u9320
 37918  002022  0EFE               	movlw	-2
 37919  002024  50E3               	movf	plusw1,w,c
 37920  002026  B4D8               	btfsc	status,2,c
 37921  002028  D012               	goto	l10949
 37922  00202A                     u9320:
 37923                           
 37924                           ;stkvar	_c @ sp[(-1)+-2]
 37925  00202A  0EFD               	movlw	-3
 37926  00202C  50E3               	movf	plusw1,w,c
 37927  00202E  0FF7               	addlw	247
 37928  002030  6E34               	movwf	(btemp+10)^0,c
 37929  002032  0EFE               	movlw	-2
 37930  002034  006F FF8C  F035    	movff	plusw1,btemp+11
 37931  00203A  0EFF               	movlw	255
 37932  00203C  2235               	addwfc	(btemp+11)^0,f,c
 37933  00203E  5035               	movf	(btemp+11)^0,w,c
 37934  002040  E104               	bnz	u9330
 37935  002042  0E05               	movlw	5
 37936  002044  5C34               	subwf	(btemp+10)^0,w,c
 37937  002046  A0D8               	btfss	status,0,c
 37938  002048  D002               	goto	l10949
 37939  00204A                     u9330:
 37940                           
 37941                           ;stkvar	_isspace$7283 @ sp[(-1)+0]
 37942  00204A  0EFF               	movlw	-1
 37943  00204C  6AE3               	clrf	plusw1,c
 37944  00204E                     l10949:
 37945                           
 37946                           ;stkvar	_isspace$7283 @ sp[(-1)+0]
 37947  00204E  0EFF               	movlw	-1
 37948  002050  50E3               	movf	plusw1,w,c
 37949  002052  6E2A               	movwf	btemp^0,c
 37950  002054  6A2B               	clrf	(btemp+1)^0,c
 37951                           
 37952                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37953  002056  52E5               	movf	postdec1,f,c
 37954  002058  52E5               	movf	postdec1,f,c
 37955  00205A  52E5               	movf	postdec1,f,c
 37956  00205C  0012               	return		;funcret
 37957  00205E                     __end_of_isspace:
 37958                           	opt callstack 0
 37959                           
 37960 ;; *************** function _isdigit *****************
 37961 ;; Defined at:
 37962 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 37963 ;; Parameters:    Size  Location     Type
 37964 ;;  c               2  [STACK] int 
 37965 ;; Auto vars:     Size  Location     Type
 37966 ;;		None
 37967 ;; Return value:  Size  Location     Type
 37968 ;;                  2  [STACK] int 
 37969 ;; Registers used:
 37970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37971 ;; Tracked objects:
 37972 ;;		On entry : 0/0
 37973 ;;		On exit  : 0/0
 37974 ;;		Unchanged: 0/0
 37975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37980 ;;Total ram usage:        0 bytes
 37981 ;; Hardware stack levels used:    1
 37982 ;; Hardware stack levels required when called:   15
 37983 ;; This function calls:
 37984 ;;		Nothing
 37985 ;; This function is called by:
 37986 ;;		_vfpfcnvrt
 37987 ;;		_atoi
 37988 ;; This function uses a reentrant model
 37989 ;;
 37990                           
 37991                           	psect	text129
 37992  002876                     __ptext129:
 37993                           	opt callstack 0
 37994  002876                     _isdigit:
 37995                           	opt callstack 0
 37996                           
 37997                           ;stkvar	_c @ sp[(0)+-2]
 37998                           
 37999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38000                           ;incstack = 0
 38001 ;; hardware stack exceeded
 38002  002876  0EFE               	movlw	-2
 38003  002878  50E3               	movf	plusw1,w,c
 38004  00287A  0FD0               	addlw	208
 38005  00287C  6E34               	movwf	(btemp+10)^0,c
 38006  00287E  0EFF               	movlw	-1
 38007  002880  006F FF8C  F035    	movff	plusw1,btemp+11
 38008  002886  0EFF               	movlw	255
 38009  002888  2235               	addwfc	(btemp+11)^0,f,c
 38010  00288A  5035               	movf	(btemp+11)^0,w,c
 38011  00288C  E106               	bnz	u8110
 38012  00288E  0E0A               	movlw	10
 38013  002890  5C34               	subwf	(btemp+10)^0,w,c
 38014  002892  B0D8               	btfsc	status,0,c
 38015  002894  D002               	goto	u8110
 38016  002896  0E01               	movlw	1
 38017  002898  D001               	goto	u8120
 38018  00289A                     u8110:
 38019  00289A  0E00               	movlw	0
 38020  00289C                     u8120:
 38021  00289C  6E2A               	movwf	btemp^0,c
 38022  00289E  6A2B               	clrf	(btemp+1)^0,c
 38023                           
 38024                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 38025  0028A0  52E5               	movf	postdec1,f,c
 38026  0028A2  52E5               	movf	postdec1,f,c
 38027  0028A4  0012               	return		;funcret
 38028  0028A6                     __end_of_isdigit:
 38029                           	opt callstack 0
 38030                           
 38031 ;; *************** function _set_vterm *****************
 38032 ;; Defined at:
 38033 ;;		line 110 in file "mconfig.c"
 38034 ;; Parameters:    Size  Location     Type
 38035 ;;  vterm           1  [STACK] const unsigned char 
 38036 ;; Auto vars:     Size  Location     Type
 38037 ;;		None
 38038 ;; Return value:  Size  Location     Type
 38039 ;;                  1  [STACK] unsigned char 
 38040 ;; Registers used:
 38041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 38042 ;; Tracked objects:
 38043 ;;		On entry : 0/2
 38044 ;;		On exit  : 0/0
 38045 ;;		Unchanged: 0/0
 38046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38051 ;;Total ram usage:        0 bytes
 38052 ;; Hardware stack levels used:    1
 38053 ;; Hardware stack levels required when called:   15
 38054 ;; This function calls:
 38055 ;;		Nothing
 38056 ;; This function is called by:
 38057 ;;		_main
 38058 ;;		_check_help
 38059 ;; This function uses a reentrant model
 38060 ;;
 38061                           
 38062                           	psect	text130
 38063  002D96                     __ptext130:
 38064                           	opt callstack 0
 38065  002D96                     _set_vterm:
 38066                           	opt callstack 15
 38067                           
 38068                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 38069                           ;stkvar	_vterm @ sp[(0)+-1]
 38070                           
 38071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38072                           ;incstack = 0
 38073  002D96  0EFF               	movlw	-1
 38074  002D98  006F FF8C  F035    	movff	plusw1,btemp+11
 38075  002D9E  0E03               	movlw	3
 38076  002DA0  1635               	andwf	(btemp+11)^0,f,c
 38077  002DA2  EE23  F0BF         	lfsr	2,_D+640
 38078  002DA6  50DF               	movf	223,w,c
 38079  002DA8  1835               	xorwf	(btemp+11)^0,w,c
 38080  002DAA  0BFE               	andlw	-2
 38081  002DAC  1835               	xorwf	(btemp+11)^0,w,c
 38082  002DAE  6EDF               	movwf	223,c
 38083                           
 38084                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 38085  002DB0  52E5               	movf	postdec1,f,c
 38086  002DB2  0012               	return		;funcret
 38087  002DB4                     __end_of_set_vterm:
 38088                           	opt callstack 0
 38089                           
 38090 ;; *************** function _set_temp_display_help *****************
 38091 ;; Defined at:
 38092 ;;		line 217 in file "mconfig.c"
 38093 ;; Parameters:    Size  Location     Type
 38094 ;;  new_response    1  [STACK] const enum E16677
 38095 ;; Auto vars:     Size  Location     Type
 38096 ;;		None
 38097 ;; Return value:  Size  Location     Type
 38098 ;;                  1  [STACK] enum E16677
 38099 ;; Registers used:
 38100 ;;		wreg, fsr1l, fsr1h
 38101 ;; Tracked objects:
 38102 ;;		On entry : 0/2
 38103 ;;		On exit  : 3F/2
 38104 ;;		Unchanged: 0/0
 38105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38110 ;;Total ram usage:        0 bytes
 38111 ;; Hardware stack levels used:    1
 38112 ;; Hardware stack levels required when called:   15
 38113 ;; This function calls:
 38114 ;;		Nothing
 38115 ;; This function is called by:
 38116 ;;		_check_help
 38117 ;; This function uses a reentrant model
 38118 ;;
 38119                           
 38120                           	psect	text131
 38121  002EF6                     __ptext131:
 38122                           	opt callstack 0
 38123  002EF6                     _set_temp_display_help:
 38124                           	opt callstack 14
 38125                           
 38126                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 38127                           
 38128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38129                           ;incstack = 0
 38130  002EF6  0102               	movlb	2	; () banked
 38131  002EF8  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 38132                           
 38133                           ; BSR set to: 2
 38134                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 38135                           ;stkvar	_new_response_info @ sp[(0)+-1]
 38136  002EFA  0EFF               	movlw	-1
 38137  002EFC  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 38138                           
 38139                           ; BSR set to: 2
 38140                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 38141  002F02  52E5               	movf	postdec1,f,c
 38142  002F04  0012               	return		;funcret
 38143  002F06                     __end_of_set_temp_display_help:
 38144                           	opt callstack 0
 38145                           
 38146 ;; *************** function _set_display_info *****************
 38147 ;; Defined at:
 38148 ;;		line 206 in file "mconfig.c"
 38149 ;; Parameters:    Size  Location     Type
 38150 ;;  new_response    1  [STACK] const enum E16677
 38151 ;; Auto vars:     Size  Location     Type
 38152 ;;		None
 38153 ;; Return value:  Size  Location     Type
 38154 ;;                  1  [STACK] enum E17160
 38155 ;; Registers used:
 38156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38157 ;; Tracked objects:
 38158 ;;		On entry : 0/2
 38159 ;;		On exit  : 0/0
 38160 ;;		Unchanged: 0/0
 38161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38166 ;;Total ram usage:        0 bytes
 38167 ;; Hardware stack levels used:    1
 38168 ;; Hardware stack levels required when called:   16
 38169 ;; This function calls:
 38170 ;;		_TimerDone
 38171 ;; This function is called by:
 38172 ;;		_main
 38173 ;;		_check_help
 38174 ;; This function uses a reentrant model
 38175 ;;
 38176                           
 38177                           	psect	text132
 38178  002DB4                     __ptext132:
 38179                           	opt callstack 0
 38180  002DB4                     _set_display_info:
 38181                           	opt callstack 14
 38182                           
 38183                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 38184                           
 38185                           ; BSR set to: 2
 38186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38187                           ;incstack = 0
 38188  002DB4  0E07               	movlw	7
 38189  002DB6  6EE6               	movwf	postinc1,c
 38190  002DB8  ECD5  F014         	call	_TimerDone	;wreg free
 38191  002DBC  502A               	movf	btemp^0,w,c
 38192  002DBE  B4D8               	btfsc	status,2,c
 38193  002DC0  D006               	goto	l1888
 38194                           
 38195                           ;mconfig.c: 211:   old_info = V.response.info;
 38196  002DC2  0102               	movlb	2	; () banked
 38197  002DC4  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 38198                           
 38199                           ; BSR set to: 2
 38200                           ;mconfig.c: 212:   V.response.info = new_response_info;
 38201                           ;stkvar	_new_response_info @ sp[(0)+-1]
 38202  002DC6  0EFF               	movlw	-1
 38203  002DC8  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 38204  002DCE                     l1888:
 38205                           
 38206                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 38207  002DCE  52E5               	movf	postdec1,f,c
 38208  002DD0  0012               	return		;funcret
 38209  002DD2                     __end_of_set_display_info:
 38210                           	opt callstack 0
 38211                           
 38212 ;; *************** function _mode_lamp_dim *****************
 38213 ;; Defined at:
 38214 ;;		line 13 in file "mconfig.c"
 38215 ;; Parameters:    Size  Location     Type
 38216 ;;  level           2  [STACK] const unsigned short 
 38217 ;; Auto vars:     Size  Location     Type
 38218 ;;		None
 38219 ;; Return value:  Size  Location     Type
 38220 ;;                  1  [STACK] void 
 38221 ;; Registers used:
 38222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38223 ;; Tracked objects:
 38224 ;;		On entry : 0/2
 38225 ;;		On exit  : 0/0
 38226 ;;		Unchanged: 0/0
 38227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38232 ;;Total ram usage:        0 bytes
 38233 ;; Hardware stack levels used:    1
 38234 ;; Hardware stack levels required when called:   16
 38235 ;; This function calls:
 38236 ;;		_PWM8_LoadDutyValue
 38237 ;; This function is called by:
 38238 ;;		_main
 38239 ;;		_check_help
 38240 ;; This function uses a reentrant model
 38241 ;;
 38242                           
 38243                           	psect	text133
 38244  002E06                     __ptext133:
 38245                           	opt callstack 0
 38246  002E06                     _mode_lamp_dim:
 38247                           	opt callstack 14
 38248                           
 38249                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 38250                           ;stkvar	_level @ sp[(0)+-2]
 38251                           
 38252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38253                           ;incstack = 0
 38254  002E06  0EFE               	movlw	-2
 38255  002E08  006F FF8F FFE6     	movff	plusw1,postinc1
 38256  002E0E  006F FF8F FFE6     	movff	plusw1,postinc1
 38257  002E14  ECE8  F011         	call	_PWM8_LoadDutyValue	;wreg free
 38258                           
 38259                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 38260  002E18  52E5               	movf	postdec1,f,c
 38261  002E1A  52E5               	movf	postdec1,f,c
 38262  002E1C  0012               	return		;funcret
 38263  002E1E                     __end_of_mode_lamp_dim:
 38264                           	opt callstack 0
 38265                           
 38266 ;; *************** function _mode_lamp_bright *****************
 38267 ;; Defined at:
 38268 ;;		line 18 in file "mconfig.c"
 38269 ;; Parameters:    Size  Location     Type
 38270 ;;		None
 38271 ;; Auto vars:     Size  Location     Type
 38272 ;;		None
 38273 ;; Return value:  Size  Location     Type
 38274 ;;                  1  [STACK] void 
 38275 ;; Registers used:
 38276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38277 ;; Tracked objects:
 38278 ;;		On entry : 0/0
 38279 ;;		On exit  : 0/0
 38280 ;;		Unchanged: 0/0
 38281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38286 ;;Total ram usage:        0 bytes
 38287 ;; Hardware stack levels used:    1
 38288 ;; Hardware stack levels required when called:   16
 38289 ;; This function calls:
 38290 ;;		_PWM8_LoadDutyValue
 38291 ;; This function is called by:
 38292 ;;		_check_help
 38293 ;; This function uses a reentrant model
 38294 ;;
 38295                           
 38296                           	psect	text134
 38297  002F32                     __ptext134:
 38298                           	opt callstack 0
 38299  002F32                     _mode_lamp_bright:
 38300                           	opt callstack 13
 38301                           
 38302                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 38303                           
 38304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38305                           ;incstack = 0
 38306  002F32  0E2C               	movlw	44
 38307  002F34  6EE6               	movwf	postinc1,c
 38308  002F36  0E01               	movlw	1
 38309  002F38  6EE6               	movwf	postinc1,c
 38310  002F3A  ECE8  F011         	call	_PWM8_LoadDutyValue	;wreg free
 38311                           
 38312                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 38313  002F3E  0012               	return		;funcret
 38314  002F40                     __end_of_mode_lamp_bright:
 38315                           	opt callstack 0
 38316                           
 38317 ;; *************** function _PWM8_LoadDutyValue *****************
 38318 ;; Defined at:
 38319 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 38320 ;; Parameters:    Size  Location     Type
 38321 ;;  dutyValue       2  [STACK] unsigned short 
 38322 ;; Auto vars:     Size  Location     Type
 38323 ;;		None
 38324 ;; Return value:  Size  Location     Type
 38325 ;;                  1  [STACK] void 
 38326 ;; Registers used:
 38327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38328 ;; Tracked objects:
 38329 ;;		On entry : 0/2
 38330 ;;		On exit  : 0/0
 38331 ;;		Unchanged: 0/0
 38332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38337 ;;Total ram usage:        0 bytes
 38338 ;; Hardware stack levels used:    1
 38339 ;; Hardware stack levels required when called:   15
 38340 ;; This function calls:
 38341 ;;		Nothing
 38342 ;; This function is called by:
 38343 ;;		_mode_lamp_dim
 38344 ;;		_mode_lamp_bright
 38345 ;; This function uses a reentrant model
 38346 ;;
 38347                           
 38348                           	psect	text135
 38349  0023D0                     __ptext135:
 38350                           	opt callstack 0
 38351  0023D0                     _PWM8_LoadDutyValue:
 38352                           	opt callstack 14
 38353                           
 38354                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 38355                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38356                           
 38357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38358                           ;incstack = 0
 38359  0023D0  0EFE               	movlw	-2
 38360  0023D2  006F FF8C  F034    	movff	plusw1,btemp+10
 38361  0023D8  0EFF               	movlw	-1
 38362  0023DA  006F FF8C  F035    	movff	plusw1,btemp+11
 38363  0023E0  90D8               	bcf	status,0,c
 38364  0023E2  3235               	rrcf	(btemp+11)^0,f,c
 38365  0023E4  3234               	rrcf	(btemp+10)^0,f,c
 38366  0023E6  90D8               	bcf	status,0,c
 38367  0023E8  3235               	rrcf	(btemp+11)^0,f,c
 38368  0023EA  3234               	rrcf	(btemp+10)^0,f,c
 38369  0023EC  5034               	movf	(btemp+10)^0,w,c
 38370  0023EE  6E61               	movwf	97,c	;volatile
 38371                           
 38372                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 38373                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38374  0023F0  0EFE               	movlw	-2
 38375  0023F2  006F FF8C  F035    	movff	plusw1,btemp+11
 38376  0023F8  0E03               	movlw	3
 38377  0023FA  1635               	andwf	(btemp+11)^0,f,c
 38378  0023FC  0E06               	movlw	6
 38379  0023FE  6E2A               	movwf	btemp^0,c
 38380  002400                     u12315:
 38381  002400  90D8               	bcf	status,0,c
 38382  002402  3635               	rlcf	(btemp+11)^0,f,c
 38383  002404  2E2A               	decfsz	btemp^0,f,c
 38384  002406  D7FC               	goto	u12315
 38385  002408  5035               	movf	(btemp+11)^0,w,c
 38386  00240A  6E60               	movwf	96,c	;volatile
 38387                           
 38388                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38389  00240C  52E5               	movf	postdec1,f,c
 38390  00240E  52E5               	movf	postdec1,f,c
 38391  002410  0012               	return		;funcret
 38392  002412                     __end_of_PWM8_LoadDutyValue:
 38393                           	opt callstack 0
 38394                           
 38395 ;; *************** function _help_button *****************
 38396 ;; Defined at:
 38397 ;;		line 26 in file "mconfig.c"
 38398 ;; Parameters:    Size  Location     Type
 38399 ;;		None
 38400 ;; Auto vars:     Size  Location     Type
 38401 ;;		None
 38402 ;; Return value:  Size  Location     Type
 38403 ;;                  1  [STACK] _Bool 
 38404 ;; Registers used:
 38405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38406 ;; Tracked objects:
 38407 ;;		On entry : 0/2
 38408 ;;		On exit  : 0/0
 38409 ;;		Unchanged: 0/0
 38410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38415 ;;Total ram usage:        0 bytes
 38416 ;; Hardware stack levels used:    1
 38417 ;; Hardware stack levels required when called:   16
 38418 ;; This function calls:
 38419 ;;		_StartTimer
 38420 ;;		_TimerDone
 38421 ;; This function is called by:
 38422 ;;		_check_help
 38423 ;; This function uses a reentrant model
 38424 ;;
 38425                           
 38426                           	psect	text136
 38427  002608                     __ptext136:
 38428                           	opt callstack 0
 38429  002608                     _help_button:
 38430                           	opt callstack 13
 38431                           
 38432                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 38433                           
 38434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38435                           ;incstack = 0
 38436  002608  B0CB               	btfsc	203,0,c	;volatile
 38437  00260A  D00C               	goto	l1831
 38438                           
 38439                           ;mconfig.c: 29:   V.help = 1;
 38440  00260C  0102               	movlb	2	; () banked
 38441  00260E  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 38442                           
 38443                           ; BSR set to: 2
 38444                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 38445  002610  0E08               	movlw	8
 38446  002612  6EE6               	movwf	postinc1,c
 38447  002614  ECD5  F014         	call	_TimerDone	;wreg free
 38448  002618  502A               	movf	btemp^0,w,c
 38449  00261A  B4D8               	btfsc	status,2,c
 38450  00261C  D003               	goto	l1831
 38451                           
 38452                           ;mconfig.c: 31:    return 1;
 38453  00261E  0E01               	movlw	1
 38454  002620  6E2A               	movwf	btemp^0,c
 38455  002622  0012               	return	
 38456  002624                     l1831:
 38457                           
 38458                           ;mconfig.c: 34:  if (!V.help)
 38459  002624  0102               	movlb	2	; () banked
 38460  002626  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 38461  002628  D008               	goto	l13741
 38462                           
 38463                           ; BSR set to: 2
 38464                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 38465  00262A  0E2C               	movlw	44
 38466  00262C  6EE6               	movwf	postinc1,c
 38467  00262E  0E01               	movlw	1
 38468  002630  6EE6               	movwf	postinc1,c
 38469  002632  0E08               	movlw	8
 38470  002634  6EE6               	movwf	postinc1,c
 38471  002636  EC49  F012         	call	_StartTimer	;wreg free
 38472  00263A                     l13741:
 38473                           
 38474                           ;mconfig.c: 37:  return 0;
 38475  00263A  0E00               	movlw	0
 38476  00263C  6E2A               	movwf	btemp^0,c
 38477                           
 38478                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 38479  00263E  0012               	return		;funcret
 38480  002640                     __end_of_help_button:
 38481                           	opt callstack 0
 38482                           
 38483 ;; *************** function _TimerDone *****************
 38484 ;; Defined at:
 38485 ;;		line 20 in file "timers.c"
 38486 ;; Parameters:    Size  Location     Type
 38487 ;;  timer           1  [STACK] const unsigned char 
 38488 ;; Auto vars:     Size  Location     Type
 38489 ;;		None
 38490 ;; Return value:  Size  Location     Type
 38491 ;;                  1  [STACK] _Bool 
 38492 ;; Registers used:
 38493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38494 ;; Tracked objects:
 38495 ;;		On entry : 0/2
 38496 ;;		On exit  : 0/0
 38497 ;;		Unchanged: 0/0
 38498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38503 ;;Total ram usage:        0 bytes
 38504 ;; Hardware stack levels used:    1
 38505 ;; Hardware stack levels required when called:   15
 38506 ;; This function calls:
 38507 ;;		Nothing
 38508 ;; This function is called by:
 38509 ;;		_main
 38510 ;;		_WaitMs
 38511 ;;		_help_button
 38512 ;;		_check_help
 38513 ;;		_set_display_info
 38514 ;;		_update_adc_result
 38515 ;;		_esr_check
 38516 ;; This function uses a reentrant model
 38517 ;;
 38518                           
 38519                           	psect	text137
 38520  0029AA                     __ptext137:
 38521                           	opt callstack 0
 38522  0029AA                     _TimerDone:
 38523                           	opt callstack 14
 38524                           
 38525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38526                           ;incstack = 0
 38527  0029AA  0004               	clrwdt		;# 
 38528                           
 38529                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 38530                           ;stkvar	_timer @ sp[(0)+-1]
 38531  0029AC  0EFF               	movlw	-1
 38532  0029AE  50E3               	movf	plusw1,w,c
 38533  0029B0  0D02               	mullw	2
 38534  0029B2  0EBC               	movlw	low _tickCount
 38535  0029B4  24F3               	addwf	243,w,c
 38536  0029B6  6ED9               	movwf	fsr2l,c
 38537  0029B8  0E02               	movlw	high _tickCount
 38538  0029BA  20F4               	addwfc	prodh,w,c
 38539  0029BC  6EDA               	movwf	fsr2h,c
 38540  0029BE  50DE               	movf	postinc2,w,c
 38541  0029C0  10DE               	iorwf	postinc2,w,c
 38542  0029C2  A4D8               	btfss	status,2,c
 38543  0029C4  D002               	goto	l12463
 38544                           
 38545                           ;timers.c: 24:   return 1;
 38546  0029C6  0E01               	movlw	1
 38547  0029C8  D001               	goto	L43
 38548  0029CA                     l12463:
 38549                           
 38550                           ;timers.c: 26:  return 0;
 38551  0029CA  0E00               	movlw	0
 38552  0029CC                     L43:
 38553  0029CC  6E2A               	movwf	btemp^0,c
 38554                           
 38555                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 38556  0029CE  52E5               	movf	postdec1,f,c
 38557  0029D0  0012               	return		;funcret
 38558  0029D2                     __end_of_TimerDone:
 38559                           	opt callstack 0
 38560                           
 38561 ;; *************** function _StartTimer *****************
 38562 ;; Defined at:
 38563 ;;		line 12 in file "timers.c"
 38564 ;; Parameters:    Size  Location     Type
 38565 ;;  timer           1  [STACK] const unsigned char 
 38566 ;;  count           2  [STACK] const unsigned short 
 38567 ;; Auto vars:     Size  Location     Type
 38568 ;;		None
 38569 ;; Return value:  Size  Location     Type
 38570 ;;                  1  [STACK] void 
 38571 ;; Registers used:
 38572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38573 ;; Tracked objects:
 38574 ;;		On entry : 0/0
 38575 ;;		On exit  : 0/0
 38576 ;;		Unchanged: 0/0
 38577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38582 ;;Total ram usage:        0 bytes
 38583 ;; Hardware stack levels used:    1
 38584 ;; Hardware stack levels required when called:   15
 38585 ;; This function calls:
 38586 ;;		Nothing
 38587 ;; This function is called by:
 38588 ;;		_main
 38589 ;;		_WaitMs
 38590 ;;		_help_button
 38591 ;;		_check_help
 38592 ;;		_update_adc_result
 38593 ;;		_calc_bsoc
 38594 ;;		_esr_check
 38595 ;; This function uses a reentrant model
 38596 ;;
 38597                           
 38598                           	psect	text138
 38599  002492                     __ptext138:
 38600                           	opt callstack 0
 38601  002492                     _StartTimer:
 38602                           	opt callstack 0
 38603                           
 38604                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 38605                           ;stkvar	_count @ sp[(0)+-3]
 38606                           
 38607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38608                           ;incstack = 0
 38609 ;; hardware stack exceeded
 38610  002492  0EFD               	movlw	-3
 38611  002494  006F FF8C  F034    	movff	plusw1,btemp+10
 38612  00249A  0EFE               	movlw	-2
 38613  00249C  006F FF8C  F035    	movff	plusw1,btemp+11
 38614  0024A2  90D8               	bcf	status,0,c
 38615  0024A4  3434               	rlcf	(btemp+10)^0,w,c
 38616  0024A6  6E32               	movwf	(btemp+8)^0,c
 38617  0024A8  3435               	rlcf	(btemp+11)^0,w,c
 38618  0024AA  6E33               	movwf	(btemp+9)^0,c
 38619                           
 38620                           ;stkvar	_timer @ sp[(0)+-1]
 38621  0024AC  0EFF               	movlw	-1
 38622  0024AE  50E3               	movf	plusw1,w,c
 38623  0024B0  0D02               	mullw	2
 38624  0024B2  0EBC               	movlw	low _tickCount
 38625  0024B4  24F3               	addwf	243,w,c
 38626  0024B6  6ED9               	movwf	fsr2l,c
 38627  0024B8  0E02               	movlw	high _tickCount
 38628  0024BA  20F4               	addwfc	prodh,w,c
 38629  0024BC  6EDA               	movwf	fsr2h,c
 38630  0024BE  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 38631  0024C4  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 38632                           
 38633                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 38634  0024CA  52E5               	movf	postdec1,f,c
 38635  0024CC  52E5               	movf	postdec1,f,c
 38636  0024CE  52E5               	movf	postdec1,f,c
 38637  0024D0  0012               	return		;funcret
 38638  0024D2                     __end_of_StartTimer:
 38639                           	opt callstack 0
 38640                           
 38641 ;; *************** function _display_info *****************
 38642 ;; Defined at:
 38643 ;;		line 196 in file "mconfig.c"
 38644 ;; Parameters:    Size  Location     Type
 38645 ;;		None
 38646 ;; Auto vars:     Size  Location     Type
 38647 ;;		None
 38648 ;; Return value:  Size  Location     Type
 38649 ;;                  1  [STACK] enum E16677
 38650 ;; Registers used:
 38651 ;;		btemp
 38652 ;; Tracked objects:
 38653 ;;		On entry : 0/2
 38654 ;;		On exit  : 0/0
 38655 ;;		Unchanged: 0/0
 38656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38661 ;;Total ram usage:        0 bytes
 38662 ;; Hardware stack levels used:    1
 38663 ;; Hardware stack levels required when called:   15
 38664 ;; This function calls:
 38665 ;;		Nothing
 38666 ;; This function is called by:
 38667 ;;		_check_help
 38668 ;; This function uses a reentrant model
 38669 ;;
 38670                           
 38671                           	psect	text139
 38672  002FB6                     __ptext139:
 38673                           	opt callstack 0
 38674  002FB6                     _display_info:
 38675                           	opt callstack 14
 38676                           
 38677                           ;mconfig.c: 198:  return V.response.info;
 38678                           
 38679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38680                           ;incstack = 0
 38681  002FB6  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 38682                           
 38683                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38684  002FBC  0012               	return		;funcret
 38685  002FBE                     __end_of_display_info:
 38686                           	opt callstack 0
 38687                           
 38688 ;; *************** function _display_help *****************
 38689 ;; Defined at:
 38690 ;;		line 201 in file "mconfig.c"
 38691 ;; Parameters:    Size  Location     Type
 38692 ;;		None
 38693 ;; Auto vars:     Size  Location     Type
 38694 ;;		None
 38695 ;; Return value:  Size  Location     Type
 38696 ;;                  1  [STACK] enum E16677
 38697 ;; Registers used:
 38698 ;;		btemp
 38699 ;; Tracked objects:
 38700 ;;		On entry : 3F/2
 38701 ;;		On exit  : 0/0
 38702 ;;		Unchanged: 0/0
 38703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38708 ;;Total ram usage:        0 bytes
 38709 ;; Hardware stack levels used:    1
 38710 ;; Hardware stack levels required when called:   15
 38711 ;; This function calls:
 38712 ;;		Nothing
 38713 ;; This function is called by:
 38714 ;;		_check_help
 38715 ;; This function uses a reentrant model
 38716 ;;
 38717                           
 38718                           	psect	text140
 38719  002FBE                     __ptext140:
 38720                           	opt callstack 0
 38721  002FBE                     _display_help:
 38722                           	opt callstack 14
 38723                           
 38724                           ;mconfig.c: 203:  return V.response.help_temp;
 38725                           
 38726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38727                           ;incstack = 0
 38728  002FBE  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 38729                           
 38730                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38731  002FC4  0012               	return		;funcret
 38732  002FC6                     __end_of_display_help:
 38733                           	opt callstack 0
 38734                           
 38735 ;; *************** function _check_enter_button *****************
 38736 ;; Defined at:
 38737 ;;		line 49 in file "hid.c"
 38738 ;; Parameters:    Size  Location     Type
 38739 ;;  h               2  [STACK] PTR struct H_data
 38740 ;;		 -> H(9), 
 38741 ;; Auto vars:     Size  Location     Type
 38742 ;;		None
 38743 ;; Return value:  Size  Location     Type
 38744 ;;                  1  [STACK] _Bool 
 38745 ;; Registers used:
 38746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 38747 ;; Tracked objects:
 38748 ;;		On entry : 0/0
 38749 ;;		On exit  : 0/0
 38750 ;;		Unchanged: 0/0
 38751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38756 ;;Total ram usage:        0 bytes
 38757 ;; Hardware stack levels used:    1
 38758 ;; Hardware stack levels required when called:   15
 38759 ;; This function calls:
 38760 ;;		Nothing
 38761 ;; This function is called by:
 38762 ;;		_main
 38763 ;; This function uses a reentrant model
 38764 ;;
 38765                           
 38766                           	psect	text141
 38767  001978                     __ptext141:
 38768                           	opt callstack 0
 38769  001978                     _check_enter_button:
 38770                           	opt callstack 15
 38771                           
 38772                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 38773                           ;stkvar	_h @ sp[(0)+-2]
 38774                           
 38775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38776                           ;incstack = 0
 38777  001978  0EFE               	movlw	-2
 38778  00197A  006F FF8C  F034    	movff	plusw1,btemp+10
 38779  001980  0EFF               	movlw	-1
 38780  001982  006F FF8C  F035    	movff	plusw1,btemp+11
 38781  001988  0E04               	movlw	4
 38782  00198A  2434               	addwf	(btemp+10)^0,w,c
 38783  00198C  6ED9               	movwf	fsr2l,c
 38784  00198E  0E00               	movlw	0
 38785  001990  2035               	addwfc	(btemp+11)^0,w,c
 38786  001992  6EDA               	movwf	fsr2h,c
 38787  001994  50DF               	movf	indf2,w,c
 38788  001996  A4D8               	btfss	status,2,c
 38789  001998  D023               	goto	l17573
 38790                           
 38791                           ;stkvar	_h @ sp[(0)+-2]
 38792  00199A  0EFE               	movlw	-2
 38793  00199C  006F FF8C  F034    	movff	plusw1,btemp+10
 38794  0019A2  0EFF               	movlw	-1
 38795  0019A4  006F FF8C  F035    	movff	plusw1,btemp+11
 38796  0019AA  0E05               	movlw	5
 38797  0019AC  2434               	addwf	(btemp+10)^0,w,c
 38798  0019AE  6ED9               	movwf	fsr2l,c
 38799  0019B0  0E00               	movlw	0
 38800  0019B2  2035               	addwfc	(btemp+11)^0,w,c
 38801  0019B4  6EDA               	movwf	fsr2h,c
 38802  0019B6  50DF               	movf	indf2,w,c
 38803  0019B8  A4D8               	btfss	status,2,c
 38804  0019BA  D012               	goto	l17573
 38805                           
 38806                           ;hid.c: 52:   h->wait_enter = 1;
 38807                           ;stkvar	_h @ sp[(0)+-2]
 38808  0019BC  0EFE               	movlw	-2
 38809  0019BE  006F FF8C  F034    	movff	plusw1,btemp+10
 38810  0019C4  0EFF               	movlw	-1
 38811  0019C6  006F FF8C  F035    	movff	plusw1,btemp+11
 38812  0019CC  0E04               	movlw	4
 38813  0019CE  2434               	addwf	(btemp+10)^0,w,c
 38814  0019D0  6ED9               	movwf	fsr2l,c
 38815  0019D2  0E00               	movlw	0
 38816  0019D4  2035               	addwfc	(btemp+11)^0,w,c
 38817  0019D6  6EDA               	movwf	fsr2h,c
 38818  0019D8  0E01               	movlw	1
 38819  0019DA  6EDF               	movwf	indf2,c
 38820                           
 38821                           ;hid.c: 53:   return 1;
 38822  0019DC  0E01               	movlw	1
 38823  0019DE  D001               	goto	L44
 38824  0019E0                     l17573:
 38825                           
 38826                           ;hid.c: 55:  return 0;
 38827  0019E0  0E00               	movlw	0
 38828  0019E2                     L44:
 38829  0019E2  6E2A               	movwf	btemp^0,c
 38830                           
 38831                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38832  0019E4  52E5               	movf	postdec1,f,c
 38833  0019E6  52E5               	movf	postdec1,f,c
 38834  0019E8  0012               	return		;funcret
 38835  0019EA                     __end_of_check_enter_button:
 38836                           	opt callstack 0
 38837                           
 38838 ;; *************** function _calc_ror_data *****************
 38839 ;; Defined at:
 38840 ;;		line 103 in file "mbmc.c"
 38841 ;; Parameters:    Size  Location     Type
 38842 ;;		None
 38843 ;; Auto vars:     Size  Location     Type
 38844 ;;		None
 38845 ;; Return value:  Size  Location     Type
 38846 ;;                  1  [STACK] void 
 38847 ;; Registers used:
 38848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38849 ;; Tracked objects:
 38850 ;;		On entry : 0/0
 38851 ;;		On exit  : 0/0
 38852 ;;		Unchanged: 0/0
 38853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38858 ;;Total ram usage:        0 bytes
 38859 ;; Hardware stack levels used:    1
 38860 ;; Hardware stack levels required when called:   18
 38861 ;; This function calls:
 38862 ;;		___flge
 38863 ;;		___flsub
 38864 ;;		_conv_raw_result
 38865 ;;		_fabsf
 38866 ;; This function is called by:
 38867 ;;		_main
 38868 ;; This function uses a reentrant model
 38869 ;;
 38870                           
 38871                           	psect	text142
 38872  01E682                     __ptext142:
 38873                           	opt callstack 0
 38874  01E682                     _calc_ror_data:
 38875                           	opt callstack 12
 38876                           
 38877                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 38878                           
 38879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38880                           ;incstack = 0
 38881  01E682  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 38882  01E688  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 38883  01E68E  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 38884  01E694  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 38885  01E69A  0E00               	movlw	0
 38886  01E69C  6EE6               	movwf	postinc1,c
 38887  01E69E  0E00               	movlw	0
 38888  01E6A0  6EE6               	movwf	postinc1,c
 38889  01E6A2  EC00  F0C9         	call	_conv_raw_result	;wreg free
 38890  01E6A6  0060  F0AB  FFE6   	movff	btemp,postinc1
 38891  01E6AC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38892  01E6B2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38893  01E6B8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38894  01E6BE  ECA3  F011         	call	___flsub	;wreg free
 38895  01E6C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 38896  01E6C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38897  01E6CE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38898  01E6D4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38899  01E6DA  ECBE  F006         	call	_fabsf	;wreg free
 38900  01E6DE  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 38901  01E6E4  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 38902  01E6EA  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 38903  01E6F0  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 38904                           
 38905                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 38906  01E6F6  0E00               	movlw	0
 38907  01E6F8  6EE6               	movwf	postinc1,c
 38908  01E6FA  0E00               	movlw	0
 38909  01E6FC  6EE6               	movwf	postinc1,c
 38910  01E6FE  EC00  F0C9         	call	_conv_raw_result	;wreg free
 38911  01E702  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 38912  01E708  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 38913  01E70E  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 38914  01E714  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 38915                           
 38916                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 38917  01E71A  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 38918  01E720  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 38919  01E726  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 38920  01E72C  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 38921  01E732  0E00               	movlw	0
 38922  01E734  6EE6               	movwf	postinc1,c
 38923  01E736  0E04               	movlw	4
 38924  01E738  6EE6               	movwf	postinc1,c
 38925  01E73A  EC00  F0C9         	call	_conv_raw_result	;wreg free
 38926  01E73E  0060  F0AB  FFE6   	movff	btemp,postinc1
 38927  01E744  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38928  01E74A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38929  01E750  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38930  01E756  ECA3  F011         	call	___flsub	;wreg free
 38931  01E75A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38932  01E760  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38933  01E766  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38934  01E76C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38935  01E772  ECBE  F006         	call	_fabsf	;wreg free
 38936  01E776  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 38937  01E77C  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 38938  01E782  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 38939  01E788  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 38940                           
 38941                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 38942  01E78E  0EE7               	movlw	231
 38943  01E790  6EE6               	movwf	postinc1,c
 38944  01E792  0E1D               	movlw	29
 38945  01E794  6EE6               	movwf	postinc1,c
 38946  01E796  0EA7               	movlw	167
 38947  01E798  6EE6               	movwf	postinc1,c
 38948  01E79A  0E3B               	movlw	59
 38949  01E79C  6EE6               	movwf	postinc1,c
 38950  01E79E  EE22  F16B         	lfsr	2,_C+108	;volatile
 38951  01E7A2  006F FF7B FFE6     	movff	postinc2,postinc1
 38952  01E7A8  006F FF7B FFE6     	movff	postinc2,postinc1
 38953  01E7AE  006F FF7B FFE6     	movff	postinc2,postinc1
 38954  01E7B4  006F FF7B FFE6     	movff	postinc2,postinc1
 38955  01E7BA  ECE9  F0F6         	call	___flge	;wreg free
 38956  01E7BE  B02A               	btfsc	btemp& (0+255),0,c
 38957  01E7C0  D010               	goto	l14331
 38958                           
 38959                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 38960  01E7C2  0EB0               	movlw	176
 38961  01E7C4  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 38962  01E7CA  0E03               	movlw	3
 38963  01E7CC  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 38964  01E7D2  0E67               	movlw	103
 38965  01E7D4  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 38966  01E7DA  0E3C               	movlw	60
 38967  01E7DC  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 38968  01E7E2                     l14331:
 38969                           
 38970                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 38971  01E7E2  0E00               	movlw	0
 38972  01E7E4  6EE6               	movwf	postinc1,c
 38973  01E7E6  0E04               	movlw	4
 38974  01E7E8  6EE6               	movwf	postinc1,c
 38975  01E7EA  EC00  F0C9         	call	_conv_raw_result	;wreg free
 38976  01E7EE  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 38977  01E7F4  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 38978  01E7FA  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 38979  01E800  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 38980                           
 38981                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 38982  01E806  0012               	return		;funcret
 38983  01E808                     __end_of_calc_ror_data:
 38984                           	opt callstack 0
 38985                           
 38986 ;; *************** function _fabsf *****************
 38987 ;; Defined at:
 38988 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 38989 ;; Parameters:    Size  Location     Type
 38990 ;;  x               4  [STACK] float 
 38991 ;; Auto vars:     Size  Location     Type
 38992 ;;  u               4  [STACK] struct .
 38993 ;; Return value:  Size  Location     Type
 38994 ;;                  4  [STACK] float 
 38995 ;; Registers used:
 38996 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38997 ;; Tracked objects:
 38998 ;;		On entry : 0/0
 38999 ;;		On exit  : 0/0
 39000 ;;		Unchanged: 0/0
 39001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39006 ;;Total ram usage:        0 bytes
 39007 ;; Hardware stack levels used:    1
 39008 ;; Hardware stack levels required when called:   15
 39009 ;; This function calls:
 39010 ;;		Nothing
 39011 ;; This function is called by:
 39012 ;;		_main
 39013 ;;		_calc_ror_data
 39014 ;;		_calc_bsoc
 39015 ;;		_esr_check
 39016 ;; This function uses a reentrant model
 39017 ;;
 39018                           
 39019                           	psect	text143
 39020  000D7C                     __ptext143:
 39021                           	opt callstack 0
 39022  000D7C                     _fabsf:
 39023                           	opt callstack 0
 39024                           
 39025                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39026  000D7C  52E6               	movf	postinc1,f,c
 39027  000D7E  52E6               	movf	postinc1,f,c
 39028  000D80  52E6               	movf	postinc1,f,c
 39029  000D82  52E6               	movf	postinc1,f,c
 39030                           
 39031                           ;incstack = 0
 39032 ;; hardware stack exceeded
 39033  000D84  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 39034  000D8A  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 39035  000D90  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 39036  000D96  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 39037                           
 39038                           ;stkvar	_u @ sp[(-4)+0]
 39039  000D9C  0EFC               	movlw	-4
 39040  000D9E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39041  000DA4  0EFD               	movlw	-3
 39042  000DA6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39043  000DAC  0EFE               	movlw	-2
 39044  000DAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39045  000DB4  0EFF               	movlw	-1
 39046  000DB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39047                           
 39048                           ;stkvar	_x @ sp[(-4)+-4]
 39049  000DBC  0EF8               	movlw	-8
 39050  000DBE  006F FF8C  F032    	movff	plusw1,btemp+8
 39051  000DC4  0EF9               	movlw	-7
 39052  000DC6  006F FF8C  F033    	movff	plusw1,btemp+9
 39053  000DCC  0EFA               	movlw	-6
 39054  000DCE  006F FF8C  F034    	movff	plusw1,btemp+10
 39055  000DD4  0EFB               	movlw	-5
 39056  000DD6  006F FF8C  F035    	movff	plusw1,btemp+11
 39057                           
 39058                           ;stkvar	_u @ sp[(-4)+0]
 39059  000DDC  0EFC               	movlw	-4
 39060  000DDE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39061  000DE4  0EFD               	movlw	-3
 39062  000DE6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39063  000DEC  0EFE               	movlw	-2
 39064  000DEE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39065  000DF4  0EFF               	movlw	-1
 39066  000DF6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39067                           
 39068                           ;stkvar	_u @ sp[(-4)+0]
 39069  000DFC  0EFF               	movlw	-1
 39070  000DFE  9EE3               	bcf	plusw1,7,c
 39071                           
 39072                           ;stkvar	_u @ sp[(-4)+0]
 39073  000E00  0EFC               	movlw	-4
 39074  000E02  006F FF8C  F02A    	movff	plusw1,btemp
 39075  000E08  0EFD               	movlw	-3
 39076  000E0A  006F FF8C  F02B    	movff	plusw1,btemp+1
 39077  000E10  0EFE               	movlw	-2
 39078  000E12  006F FF8C  F02C    	movff	plusw1,btemp+2
 39079  000E18  0EFF               	movlw	-1
 39080  000E1A  006F FF8C  F02D    	movff	plusw1,btemp+3
 39081                           
 39082                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 39083  000E20  0EF8               	movlw	248
 39084  000E22  26E1               	addwf	fsr1l,f,c
 39085  000E24  0EFF               	movlw	255
 39086  000E26  22E2               	addwfc	fsr1h,f,c
 39087  000E28  0012               	return		;funcret
 39088  000E2A                     __end_of_fabsf:
 39089                           	opt callstack 0
 39090                           
 39091 ;; *************** function _conv_raw_result *****************
 39092 ;; Defined at:
 39093 ;;		line 135 in file "daq.c"
 39094 ;; Parameters:    Size  Location     Type
 39095 ;;  chan            1  [STACK] const enum E16605
 39096 ;;  to_what         1  [STACK] const enum E16996
 39097 ;; Auto vars:     Size  Location     Type
 39098 ;;		None
 39099 ;; Return value:  Size  Location     Type
 39100 ;;                  4  [STACK] float 
 39101 ;; Registers used:
 39102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39103 ;; Tracked objects:
 39104 ;;		On entry : 0/0
 39105 ;;		On exit  : 0/0
 39106 ;;		Unchanged: 0/0
 39107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39112 ;;Total ram usage:        0 bytes
 39113 ;; Hardware stack levels used:    1
 39114 ;; Hardware stack levels required when called:   17
 39115 ;; This function calls:
 39116 ;;		___fldiv
 39117 ;;		___flmul
 39118 ;;		___flsub
 39119 ;;		___xxtofl
 39120 ;;		_get_raw_result
 39121 ;;		_nanf
 39122 ;; This function is called by:
 39123 ;;		_main
 39124 ;;		_convert_adc_data
 39125 ;;		_calc_ror_data
 39126 ;;		_check_day_time
 39127 ;;		_init_bsoc
 39128 ;;		_esr_check
 39129 ;; This function uses a reentrant model
 39130 ;;
 39131                           
 39132                           	psect	text144
 39133  019200                     __ptext144:
 39134                           	opt callstack 0
 39135  019200                     _conv_raw_result:
 39136                           	opt callstack 0
 39137                           
 39138                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 39139                           
 39140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39141                           ;incstack = 0
 39142 ;; hardware stack exceeded
 39143  019200  D24A               	goto	l12445
 39144  019202                     l12391:
 39145                           
 39146                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 39147                           ;stkvar	_chan @ sp[(0)+-1]
 39148  019202  0EFF               	movlw	-1
 39149  019204  006F FF8C  F035    	movff	plusw1,btemp+11
 39150  01920A  0E77               	movlw	119
 39151  01920C  6E32               	movwf	(btemp+8)^0,c
 39152  01920E  0E3C               	movlw	60
 39153  019210  6E33               	movwf	(btemp+9)^0,c
 39154  019212  2A35               	incf	(btemp+11)^0,f,c
 39155  019214  D003               	goto	u11684
 39156  019216                     u11685:
 39157  019216  3433               	rlcf	(btemp+9)^0,w,c
 39158  019218  3233               	rrcf	(btemp+9)^0,f,c
 39159  01921A  3232               	rrcf	(btemp+8)^0,f,c
 39160  01921C                     u11684:
 39161  01921C  2E35               	decfsz	(btemp+11)^0,f,c
 39162  01921E  D7FB               	goto	u11685
 39163  019220  B032               	btfsc	(btemp+8)^0,0,c
 39164  019222  D007               	goto	l12397
 39165                           
 39166                           ;daq.c: 141:    return nanf("");
 39167  019224  0EE1               	movlw	low (STR_103+126)
 39168  019226  6EE6               	movwf	postinc1,c
 39169  019228  0EF9               	movlw	high (STR_103+126)
 39170  01922A  6EE6               	movwf	postinc1,c
 39171  01922C  ECC4  F00E         	call	_nanf	;wreg free
 39172  019230  D242               	goto	l1988
 39173  019232                     l12397:
 39174                           
 39175                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 39176                           ;stkvar	_chan @ sp[(0)+-1]
 39177  019232  0EFF               	movlw	-1
 39178  019234  006F FF8C  F035    	movff	plusw1,btemp+11
 39179  01923A  0E03               	movlw	3
 39180  01923C  6E32               	movwf	(btemp+8)^0,c
 39181  01923E  0E00               	movlw	0
 39182  019240  6E33               	movwf	(btemp+9)^0,c
 39183  019242  2A35               	incf	(btemp+11)^0,f,c
 39184  019244  D003               	goto	u11704
 39185  019246                     u11705:
 39186  019246  3433               	rlcf	(btemp+9)^0,w,c
 39187  019248  3233               	rrcf	(btemp+9)^0,f,c
 39188  01924A  3232               	rrcf	(btemp+8)^0,f,c
 39189  01924C                     u11704:
 39190  01924C  2E35               	decfsz	(btemp+11)^0,f,c
 39191  01924E  D7FB               	goto	u11705
 39192  019250  A032               	btfss	(btemp+8)^0,0,c
 39193  019252  D0F3               	goto	l12411
 39194                           
 39195                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 39196                           ;stkvar	_chan @ sp[(0)+-1]
 39197  019254  0EFF               	movlw	-1
 39198  019256  006F FF8C  F035    	movff	plusw1,btemp+11
 39199  01925C  0E01               	movlw	1
 39200  01925E  6E32               	movwf	(btemp+8)^0,c
 39201  019260  0E00               	movlw	0
 39202  019262  6E33               	movwf	(btemp+9)^0,c
 39203  019264  2A35               	incf	(btemp+11)^0,f,c
 39204  019266  D003               	goto	u11724
 39205  019268                     u11725:
 39206  019268  3433               	rlcf	(btemp+9)^0,w,c
 39207  01926A  3233               	rrcf	(btemp+9)^0,f,c
 39208  01926C  3232               	rrcf	(btemp+8)^0,f,c
 39209  01926E                     u11724:
 39210  01926E  2E35               	decfsz	(btemp+11)^0,f,c
 39211  019270  D7FB               	goto	u11725
 39212  019272  A032               	btfss	(btemp+8)^0,0,c
 39213  019274  D071               	goto	l12407
 39214                           
 39215                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 39216  019276  0060  F4AB  FFE6   	movff	_R+42,postinc1
 39217  01927C  0060  F4AF  FFE6   	movff	_R+43,postinc1
 39218  019282  0060  F4B3  FFE6   	movff	_R+44,postinc1
 39219  019288  0060  F4B7  FFE6   	movff	_R+45,postinc1
 39220  01928E  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 39221  019294  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 39222  01929A  0E00               	movlw	0
 39223  01929C  BE33               	btfsc	(btemp+9)^0,7,c
 39224  01929E  0EFF               	movlw	255
 39225  0192A0  6E34               	movwf	(btemp+10)^0,c
 39226  0192A2  6E35               	movwf	(btemp+11)^0,c
 39227  0192A4  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 39228  0192AA  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 39229  0192B0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 39230  0192B6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 39231  0192BC  0E01               	movlw	1
 39232  0192BE  6EE6               	movwf	postinc1,c
 39233  0192C0  EC4F  F0ED         	call	___xxtofl	;wreg free
 39234  0192C4  0060  F0AB  FFE6   	movff	btemp,postinc1
 39235  0192CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39236  0192D0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39237  0192D6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39238                           
 39239                           ;stkvar	_chan @ sp[(-8)+-1]
 39240  0192DC  0EF7               	movlw	-9
 39241  0192DE  50E3               	movf	plusw1,w,c
 39242  0192E0  6EE6               	movwf	postinc1,c
 39243  0192E2  EC5A  F016         	call	_get_raw_result	;wreg free
 39244  0192E6  0060  F0A8  F034   	movff	btemp,btemp+10
 39245  0192EC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39246  0192F2  5034               	movf	(btemp+10)^0,w,c
 39247  0192F4  6E2E               	movwf	(btemp+4)^0,c
 39248  0192F6  5035               	movf	(btemp+11)^0,w,c
 39249  0192F8  6E2F               	movwf	(btemp+5)^0,c
 39250  0192FA  6A30               	clrf	(btemp+6)^0,c
 39251  0192FC  6A31               	clrf	(btemp+7)^0,c
 39252  0192FE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39253  019304  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39254  01930A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39255  019310  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39256  019316  0E00               	movlw	0
 39257  019318  6EE6               	movwf	postinc1,c
 39258  01931A  EC4F  F0ED         	call	___xxtofl	;wreg free
 39259  01931E  0060  F0AB  FFE6   	movff	btemp,postinc1
 39260  019324  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39261  01932A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39262  019330  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39263  019336  ECA3  F011         	call	___flsub	;wreg free
 39264  01933A  0060  F0AB  FFE6   	movff	btemp,postinc1
 39265  019340  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39266  019346  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39267  01934C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39268  019352  EC67  F0B8         	call	___flmul	;wreg free
 39269  019356  D1AF               	goto	l1988
 39270  019358                     l12407:
 39271                           
 39272                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 39273  019358  0060  F4BB  FFE6   	movff	_R+46,postinc1
 39274  01935E  0060  F4BF  FFE6   	movff	_R+47,postinc1
 39275  019364  0060  F4C3  FFE6   	movff	_R+48,postinc1
 39276  01936A  0060  F4C7  FFE6   	movff	_R+49,postinc1
 39277  019370  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 39278  019376  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 39279  01937C  0E00               	movlw	0
 39280  01937E  BE33               	btfsc	(btemp+9)^0,7,c
 39281  019380  0EFF               	movlw	255
 39282  019382  6E34               	movwf	(btemp+10)^0,c
 39283  019384  6E35               	movwf	(btemp+11)^0,c
 39284  019386  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 39285  01938C  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 39286  019392  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 39287  019398  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 39288  01939E  0E01               	movlw	1
 39289  0193A0  6EE6               	movwf	postinc1,c
 39290  0193A2  EC4F  F0ED         	call	___xxtofl	;wreg free
 39291  0193A6  0060  F0AB  FFE6   	movff	btemp,postinc1
 39292  0193AC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39293  0193B2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39294  0193B8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39295                           
 39296                           ;stkvar	_chan @ sp[(-8)+-1]
 39297  0193BE  0EF7               	movlw	-9
 39298  0193C0  50E3               	movf	plusw1,w,c
 39299  0193C2  6EE6               	movwf	postinc1,c
 39300  0193C4  EC5A  F016         	call	_get_raw_result	;wreg free
 39301  0193C8  0060  F0A8  F034   	movff	btemp,btemp+10
 39302  0193CE  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39303  0193D4  5034               	movf	(btemp+10)^0,w,c
 39304  0193D6  6E2E               	movwf	(btemp+4)^0,c
 39305  0193D8  5035               	movf	(btemp+11)^0,w,c
 39306  0193DA  6E2F               	movwf	(btemp+5)^0,c
 39307  0193DC  6A30               	clrf	(btemp+6)^0,c
 39308  0193DE  6A31               	clrf	(btemp+7)^0,c
 39309  0193E0  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39310  0193E6  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39311  0193EC  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39312  0193F2  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39313  0193F8  0E00               	movlw	0
 39314  0193FA  6EE6               	movwf	postinc1,c
 39315  0193FC  EC4F  F0ED         	call	___xxtofl	;wreg free
 39316  019400  0060  F0AB  FFE6   	movff	btemp,postinc1
 39317  019406  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39318  01940C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39319  019412  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39320  019418  ECA3  F011         	call	___flsub	;wreg free
 39321  01941C  0060  F0AB  FFE6   	movff	btemp,postinc1
 39322  019422  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39323  019428  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39324  01942E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39325  019434  EC67  F0B8         	call	___flmul	;wreg free
 39326  019438  D13E               	goto	l1988
 39327  01943A                     l12411:
 39328                           
 39329                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 39330                           ;stkvar	_chan @ sp[(0)+-1]
 39331  01943A  0EFF               	movlw	-1
 39332  01943C  006F FF8C  F035    	movff	plusw1,btemp+11
 39333  019442  0E00               	movlw	0
 39334  019444  6E32               	movwf	(btemp+8)^0,c
 39335  019446  0E08               	movlw	8
 39336  019448  6E33               	movwf	(btemp+9)^0,c
 39337  01944A  2A35               	incf	(btemp+11)^0,f,c
 39338  01944C  D003               	goto	u11744
 39339  01944E                     u11745:
 39340  01944E  3433               	rlcf	(btemp+9)^0,w,c
 39341  019450  3233               	rrcf	(btemp+9)^0,f,c
 39342  019452  3232               	rrcf	(btemp+8)^0,f,c
 39343  019454                     u11744:
 39344  019454  2E35               	decfsz	(btemp+11)^0,f,c
 39345  019456  D7FB               	goto	u11745
 39346  019458  A032               	btfss	(btemp+8)^0,0,c
 39347  01945A  D008               	goto	l12419
 39348                           
 39349                           ;daq.c: 151:     return 25.0;
 39350  01945C  0E00               	movlw	0
 39351  01945E  6E2A               	movwf	btemp^0,c
 39352  019460  0E00               	movlw	0
 39353  019462  6E2B               	movwf	(btemp+1)^0,c
 39354  019464  0EC8               	movlw	200
 39355  019466  6E2C               	movwf	(btemp+2)^0,c
 39356  019468  0E41               	movlw	65
 39357  01946A  D113               	goto	L45
 39358  01946C                     l12419:
 39359                           
 39360                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39361  01946C  0E00               	movlw	0
 39362  01946E  6EE6               	movwf	postinc1,c
 39363  019470  0E00               	movlw	0
 39364  019472  6EE6               	movwf	postinc1,c
 39365  019474  0E7A               	movlw	122
 39366  019476  6EE6               	movwf	postinc1,c
 39367  019478  0E44               	movlw	68
 39368  01947A  6EE6               	movwf	postinc1,c
 39369  01947C  0E61               	movlw	97
 39370  01947E  6EE6               	movwf	postinc1,c
 39371  019480  0E03               	movlw	3
 39372  019482  6EE6               	movwf	postinc1,c
 39373  019484  0E84               	movlw	132
 39374  019486  6EE6               	movwf	postinc1,c
 39375  019488  0E40               	movlw	64
 39376  01948A  6EE6               	movwf	postinc1,c
 39377                           
 39378                           ;stkvar	_chan @ sp[(-8)+-1]
 39379  01948C  0EF7               	movlw	-9
 39380  01948E  50E3               	movf	plusw1,w,c
 39381  019490  6EE6               	movwf	postinc1,c
 39382  019492  EC5A  F016         	call	_get_raw_result	;wreg free
 39383  019496  0060  F0A8  F034   	movff	btemp,btemp+10
 39384  01949C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39385  0194A2  5034               	movf	(btemp+10)^0,w,c
 39386  0194A4  6E2E               	movwf	(btemp+4)^0,c
 39387  0194A6  5035               	movf	(btemp+11)^0,w,c
 39388  0194A8  6E2F               	movwf	(btemp+5)^0,c
 39389  0194AA  6A30               	clrf	(btemp+6)^0,c
 39390  0194AC  6A31               	clrf	(btemp+7)^0,c
 39391  0194AE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39392  0194B4  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39393  0194BA  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39394  0194C0  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39395  0194C6  0E00               	movlw	0
 39396  0194C8  6EE6               	movwf	postinc1,c
 39397  0194CA  EC4F  F0ED         	call	___xxtofl	;wreg free
 39398  0194CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 39399  0194D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39400  0194DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39401  0194E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39402  0194E6  EC67  F0B8         	call	___flmul	;wreg free
 39403  0194EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 39404  0194F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39405  0194F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39406  0194FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39407  019502  ECB8  F0C3         	call	___fldiv	;wreg free
 39408  019506  D0D7               	goto	l1988
 39409  019508                     l12423:
 39410                           
 39411                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 39412                           ;stkvar	_chan @ sp[(0)+-1]
 39413  019508  0EFF               	movlw	-1
 39414  01950A  006F FF8C  F035    	movff	plusw1,btemp+11
 39415  019510  0E03               	movlw	3
 39416  019512  6E32               	movwf	(btemp+8)^0,c
 39417  019514  0E00               	movlw	0
 39418  019516  6E33               	movwf	(btemp+9)^0,c
 39419  019518  2A35               	incf	(btemp+11)^0,f,c
 39420  01951A  D003               	goto	u11764
 39421  01951C                     u11765:
 39422  01951C  3433               	rlcf	(btemp+9)^0,w,c
 39423  01951E  3233               	rrcf	(btemp+9)^0,f,c
 39424  019520  3232               	rrcf	(btemp+8)^0,f,c
 39425  019522                     u11764:
 39426  019522  2E35               	decfsz	(btemp+11)^0,f,c
 39427  019524  D7FB               	goto	u11765
 39428  019526  B032               	btfsc	(btemp+8)^0,0,c
 39429  019528  D011               	goto	u11790
 39430                           
 39431                           ;stkvar	_chan @ sp[(0)+-1]
 39432  01952A  0EFF               	movlw	-1
 39433  01952C  006F FF8C  F035    	movff	plusw1,btemp+11
 39434  019532  0E00               	movlw	0
 39435  019534  6E32               	movwf	(btemp+8)^0,c
 39436  019536  0E08               	movlw	8
 39437  019538  6E33               	movwf	(btemp+9)^0,c
 39438  01953A  2A35               	incf	(btemp+11)^0,f,c
 39439  01953C  D003               	goto	u11784
 39440  01953E                     u11785:
 39441  01953E  3433               	rlcf	(btemp+9)^0,w,c
 39442  019540  3233               	rrcf	(btemp+9)^0,f,c
 39443  019542  3232               	rrcf	(btemp+8)^0,f,c
 39444  019544                     u11784:
 39445  019544  2E35               	decfsz	(btemp+11)^0,f,c
 39446  019546  D7FB               	goto	u11785
 39447  019548  A032               	btfss	(btemp+8)^0,0,c
 39448  01954A  D04E               	goto	l12431
 39449  01954C                     u11790:
 39450                           
 39451                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 39452  01954C  0E00               	movlw	0
 39453  01954E  6EE6               	movwf	postinc1,c
 39454  019550  0E00               	movlw	0
 39455  019552  6EE6               	movwf	postinc1,c
 39456  019554  0E7A               	movlw	122
 39457  019556  6EE6               	movwf	postinc1,c
 39458  019558  0E44               	movlw	68
 39459  01955A  6EE6               	movwf	postinc1,c
 39460  01955C  0E00               	movlw	0
 39461  01955E  6EE6               	movwf	postinc1,c
 39462  019560  0E00               	movlw	0
 39463  019562  6EE6               	movwf	postinc1,c
 39464  019564  0E20               	movlw	32
 39465  019566  6EE6               	movwf	postinc1,c
 39466  019568  0E3F               	movlw	63
 39467  01956A  6EE6               	movwf	postinc1,c
 39468                           
 39469                           ;stkvar	_chan @ sp[(-8)+-1]
 39470  01956C  0EF7               	movlw	-9
 39471  01956E  50E3               	movf	plusw1,w,c
 39472  019570  6EE6               	movwf	postinc1,c
 39473  019572  EC5A  F016         	call	_get_raw_result	;wreg free
 39474  019576  0060  F0A8  F034   	movff	btemp,btemp+10
 39475  01957C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39476  019582  5034               	movf	(btemp+10)^0,w,c
 39477  019584  6E2E               	movwf	(btemp+4)^0,c
 39478  019586  5035               	movf	(btemp+11)^0,w,c
 39479  019588  6E2F               	movwf	(btemp+5)^0,c
 39480  01958A  6A30               	clrf	(btemp+6)^0,c
 39481  01958C  6A31               	clrf	(btemp+7)^0,c
 39482  01958E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39483  019594  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39484  01959A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39485  0195A0  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39486  0195A6  0E00               	movlw	0
 39487  0195A8  6EE6               	movwf	postinc1,c
 39488  0195AA  EC4F  F0ED         	call	___xxtofl	;wreg free
 39489  0195AE  0060  F0AB  FFE6   	movff	btemp,postinc1
 39490  0195B4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39491  0195BA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39492  0195C0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39493  0195C6  EC67  F0B8         	call	___flmul	;wreg free
 39494  0195CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 39495  0195D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39496  0195D6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39497  0195DC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39498  0195E2  ECB8  F0C3         	call	___fldiv	;wreg free
 39499  0195E6  D067               	goto	l1988
 39500  0195E8                     l12431:
 39501                           
 39502                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39503  0195E8  0E00               	movlw	0
 39504  0195EA  6EE6               	movwf	postinc1,c
 39505  0195EC  0E00               	movlw	0
 39506  0195EE  6EE6               	movwf	postinc1,c
 39507  0195F0  0E7A               	movlw	122
 39508  0195F2  6EE6               	movwf	postinc1,c
 39509  0195F4  0E44               	movlw	68
 39510  0195F6  6EE6               	movwf	postinc1,c
 39511  0195F8  0E61               	movlw	97
 39512  0195FA  6EE6               	movwf	postinc1,c
 39513  0195FC  0E03               	movlw	3
 39514  0195FE  6EE6               	movwf	postinc1,c
 39515  019600  0E84               	movlw	132
 39516  019602  6EE6               	movwf	postinc1,c
 39517  019604  0E40               	movlw	64
 39518  019606  6EE6               	movwf	postinc1,c
 39519                           
 39520                           ;stkvar	_chan @ sp[(-8)+-1]
 39521  019608  0EF7               	movlw	-9
 39522  01960A  50E3               	movf	plusw1,w,c
 39523  01960C  6EE6               	movwf	postinc1,c
 39524  01960E  EC5A  F016         	call	_get_raw_result	;wreg free
 39525  019612  0060  F0A8  F034   	movff	btemp,btemp+10
 39526  019618  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39527  01961E  5034               	movf	(btemp+10)^0,w,c
 39528  019620  6E2E               	movwf	(btemp+4)^0,c
 39529  019622  5035               	movf	(btemp+11)^0,w,c
 39530  019624  6E2F               	movwf	(btemp+5)^0,c
 39531  019626  6A30               	clrf	(btemp+6)^0,c
 39532  019628  6A31               	clrf	(btemp+7)^0,c
 39533  01962A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39534  019630  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39535  019636  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39536  01963C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39537  019642  0E00               	movlw	0
 39538  019644  6EE6               	movwf	postinc1,c
 39539  019646  EC4F  F0ED         	call	___xxtofl	;wreg free
 39540  01964A  0060  F0AB  FFE6   	movff	btemp,postinc1
 39541  019650  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39542  019656  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39543  01965C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39544  019662  EC67  F0B8         	call	___flmul	;wreg free
 39545  019666  0060  F0AB  FFE6   	movff	btemp,postinc1
 39546  01966C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39547  019672  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39548  019678  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39549  01967E  ECB8  F0C3         	call	___fldiv	;wreg free
 39550  019682  D019               	goto	l1988
 39551  019684                     l12437:
 39552                           
 39553                           ;daq.c: 164:   return 0.0;
 39554  019684  0E00               	movlw	0
 39555  019686  6E2A               	movwf	btemp^0,c
 39556  019688  0E00               	movlw	0
 39557  01968A  6E2B               	movwf	(btemp+1)^0,c
 39558  01968C  0E00               	movlw	0
 39559  01968E  6E2C               	movwf	(btemp+2)^0,c
 39560  019690  0E00               	movlw	0
 39561  019692                     L45:
 39562  019692  6E2D               	movwf	(btemp+3)^0,c
 39563  019694  D010               	goto	l1988
 39564  019696                     l12445:
 39565                           
 39566                           ;stkvar	_to_what @ sp[(0)+-2]
 39567  019696  0EFE               	movlw	-2
 39568  019698  50E3               	movf	plusw1,w,c
 39569  01969A  6E34               	movwf	(btemp+10)^0,c
 39570  01969C  6A35               	clrf	(btemp+11)^0,c
 39571                           
 39572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39573                           ; Switch size 1, requested type "simple"
 39574                           ; Number of cases is 1, Range of values is 0 to 0
 39575                           ; switch strategies available:
 39576                           ; Name         Instructions Cycles
 39577                           ; simple_byte            4     3 (average)
 39578                           ;	Chosen strategy is simple_byte
 39579  01969E  5035               	movf	(btemp+11)^0,w,c
 39580  0196A0  0A00               	xorlw	0	; case 0
 39581  0196A2  A4D8               	btfss	status,2,c
 39582  0196A4  D7EF               	goto	l12437
 39583                           
 39584                           ; Switch size 1, requested type "simple"
 39585                           ; Number of cases is 2, Range of values is 0 to 1
 39586                           ; switch strategies available:
 39587                           ; Name         Instructions Cycles
 39588                           ; simple_byte            7     4 (average)
 39589                           ;	Chosen strategy is simple_byte
 39590  0196A6  5034               	movf	(btemp+10)^0,w,c
 39591  0196A8  0A00               	xorlw	0	; case 0
 39592  0196AA  B4D8               	btfsc	status,2,c
 39593  0196AC  D5AA               	goto	l12391
 39594  0196AE  0A01               	xorlw	1	; case 1
 39595  0196B0  B4D8               	btfsc	status,2,c
 39596  0196B2  D72A               	goto	l12423
 39597  0196B4  D7E7               	goto	l12437
 39598  0196B6                     l1988:
 39599                           
 39600                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 39601  0196B6  52E5               	movf	postdec1,f,c
 39602  0196B8  52E5               	movf	postdec1,f,c
 39603  0196BA  0012               	return		;funcret
 39604  0196BC                     __end_of_conv_raw_result:
 39605                           	opt callstack 0
 39606                           
 39607 ;; *************** function _nanf *****************
 39608 ;; Defined at:
 39609 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 39610 ;; Parameters:    Size  Location     Type
 39611 ;;  s               2  [STACK] PTR const unsigned char 
 39612 ;;		 -> STR_142(1), STR_102(1), 
 39613 ;; Auto vars:     Size  Location     Type
 39614 ;;  u               4  [STACK] struct .
 39615 ;; Return value:  Size  Location     Type
 39616 ;;                  4  [STACK] float 
 39617 ;; Registers used:
 39618 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 39619 ;; Tracked objects:
 39620 ;;		On entry : 0/0
 39621 ;;		On exit  : 0/0
 39622 ;;		Unchanged: 0/0
 39623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39628 ;;Total ram usage:        0 bytes
 39629 ;; Hardware stack levels used:    1
 39630 ;; Hardware stack levels required when called:   15
 39631 ;; This function calls:
 39632 ;;		Nothing
 39633 ;; This function is called by:
 39634 ;;		_conv_raw_result
 39635 ;; This function uses a reentrant model
 39636 ;;
 39637                           
 39638                           	psect	text145
 39639  001D88                     __ptext145:
 39640                           	opt callstack 0
 39641  001D88                     _nanf:
 39642                           	opt callstack 0
 39643                           
 39644                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39645  001D88  52E6               	movf	postinc1,f,c
 39646  001D8A  52E6               	movf	postinc1,f,c
 39647  001D8C  52E6               	movf	postinc1,f,c
 39648  001D8E  52E6               	movf	postinc1,f,c
 39649                           
 39650                           ;incstack = 0
 39651 ;; hardware stack exceeded
 39652  001D90  0EFF               	movlw	255
 39653  001D92  6E32               	movwf	(btemp+8)^0,c
 39654  001D94  0EFF               	movlw	255
 39655  001D96  6E33               	movwf	(btemp+9)^0,c
 39656  001D98  0EFF               	movlw	255
 39657  001D9A  6E34               	movwf	(btemp+10)^0,c
 39658  001D9C  0E7F               	movlw	127
 39659  001D9E  6E35               	movwf	(btemp+11)^0,c
 39660                           
 39661                           ;stkvar	_u @ sp[(-4)+0]
 39662  001DA0  0EFC               	movlw	-4
 39663  001DA2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39664  001DA8  0EFD               	movlw	-3
 39665  001DAA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39666  001DB0  0EFE               	movlw	-2
 39667  001DB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39668  001DB8  0EFF               	movlw	-1
 39669  001DBA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39670                           
 39671                           ;stkvar	_u @ sp[(-4)+0]
 39672  001DC0  0EFC               	movlw	-4
 39673  001DC2  006F FF8C  F02A    	movff	plusw1,btemp
 39674  001DC8  0EFD               	movlw	-3
 39675  001DCA  006F FF8C  F02B    	movff	plusw1,btemp+1
 39676  001DD0  0EFE               	movlw	-2
 39677  001DD2  006F FF8C  F02C    	movff	plusw1,btemp+2
 39678  001DD8  0EFF               	movlw	-1
 39679  001DDA  006F FF8C  F02D    	movff	plusw1,btemp+3
 39680                           
 39681                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 39682  001DE0  0EFA               	movlw	250
 39683  001DE2  26E1               	addwf	fsr1l,f,c
 39684  001DE4  0EFF               	movlw	255
 39685  001DE6  22E2               	addwfc	fsr1h,f,c
 39686  001DE8  0012               	return		;funcret
 39687  001DEA                     __end_of_nanf:
 39688                           	opt callstack 0
 39689                           
 39690 ;; *************** function _get_raw_result *****************
 39691 ;; Defined at:
 39692 ;;		line 127 in file "daq.c"
 39693 ;; Parameters:    Size  Location     Type
 39694 ;;  index           1  [STACK] const enum E16605
 39695 ;; Auto vars:     Size  Location     Type
 39696 ;;		None
 39697 ;; Return value:  Size  Location     Type
 39698 ;;                  2  [STACK] unsigned short 
 39699 ;; Registers used:
 39700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 39701 ;; Tracked objects:
 39702 ;;		On entry : 0/2
 39703 ;;		On exit  : 0/0
 39704 ;;		Unchanged: 0/0
 39705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39710 ;;Total ram usage:        0 bytes
 39711 ;; Hardware stack levels used:    1
 39712 ;; Hardware stack levels required when called:   15
 39713 ;; This function calls:
 39714 ;;		Nothing
 39715 ;; This function is called by:
 39716 ;;		_main
 39717 ;;		_current_sensor_cal
 39718 ;;		_conv_raw_result
 39719 ;; This function uses a reentrant model
 39720 ;;
 39721                           
 39722                           	psect	text146
 39723  002CB4                     __ptext146:
 39724                           	opt callstack 0
 39725  002CB4                     _get_raw_result:
 39726                           	opt callstack 0
 39727                           
 39728                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 39729                           ;stkvar	_index @ sp[(0)+-1]
 39730                           
 39731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39732                           ;incstack = 0
 39733 ;; hardware stack exceeded
 39734  002CB4  0EFF               	movlw	-1
 39735  002CB6  50E3               	movf	plusw1,w,c
 39736  002CB8  0D02               	mullw	2
 39737  002CBA  0E00               	movlw	low _R
 39738  002CBC  24F3               	addwf	243,w,c
 39739  002CBE  6ED9               	movwf	fsr2l,c
 39740  002CC0  0E01               	movlw	high _R
 39741  002CC2  20F4               	addwfc	prodh,w,c
 39742  002CC4  6EDA               	movwf	fsr2h,c
 39743  002CC6  006F FF78  F02A    	movff	postinc2,btemp
 39744  002CCC  006F FF74  F02B    	movff	postdec2,btemp+1
 39745                           
 39746                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 39747  002CD2  52E5               	movf	postdec1,f,c
 39748  002CD4  0012               	return		;funcret
 39749  002CD6                     __end_of_get_raw_result:
 39750                           	opt callstack 0
 39751                           
 39752 ;; *************** function ___xxtofl *****************
 39753 ;; Defined at:
 39754 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 39755 ;; Parameters:    Size  Location     Type
 39756 ;;  sign            1  [STACK] unsigned char 
 39757 ;;  val             4  [STACK] long 
 39758 ;; Auto vars:     Size  Location     Type
 39759 ;;  arg             4  [STACK] unsigned long 
 39760 ;;  exp             1  [STACK] unsigned char 
 39761 ;; Return value:  Size  Location     Type
 39762 ;;                  4  [STACK] unsigned char 
 39763 ;; Registers used:
 39764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39765 ;; Tracked objects:
 39766 ;;		On entry : 0/1
 39767 ;;		On exit  : 0/0
 39768 ;;		Unchanged: 0/0
 39769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39774 ;;Total ram usage:        0 bytes
 39775 ;; Hardware stack levels used:    1
 39776 ;; Hardware stack levels required when called:   15
 39777 ;; This function calls:
 39778 ;;		Nothing
 39779 ;; This function is called by:
 39780 ;;		_current_sensor_cal
 39781 ;;		_conv_raw_result
 39782 ;;		_init_bsoc
 39783 ;; This function uses a reentrant model
 39784 ;;
 39785                           
 39786                           	psect	text147
 39787  01DA9E                     __ptext147:
 39788                           	opt callstack 0
 39789  01DA9E                     ___xxtofl:
 39790                           	opt callstack 0
 39791                           
 39792                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39793  01DA9E  0E05               	movlw	5
 39794  01DAA0  26E1               	addwf	fsr1l,f,c
 39795  01DAA2  0E00               	movlw	0
 39796  01DAA4  22E2               	addwfc	fsr1h,f,c
 39797                           
 39798                           ;stkvar	_sign @ sp[(-5)+-1]
 39799                           
 39800                           ;incstack = 0
 39801 ;; hardware stack exceeded
 39802  01DAA6  0EFA               	movlw	-6
 39803  01DAA8  50E3               	movf	plusw1,w,c
 39804  01DAAA  B4D8               	btfsc	status,2,c
 39805  01DAAC  D01D               	goto	l12113
 39806                           
 39807                           ;stkvar	_val @ sp[(-5)+-5]
 39808  01DAAE  0EF9               	movlw	-7
 39809  01DAB0  AEE3               	btfss	plusw1,7,c
 39810  01DAB2  D01A               	goto	l12113
 39811                           
 39812                           ;stkvar	_val @ sp[(-5)+-5]
 39813  01DAB4  0EF6               	movlw	-10
 39814  01DAB6  006F FF8C  F032    	movff	plusw1,btemp+8
 39815  01DABC  0EF7               	movlw	-9
 39816  01DABE  006F FF8C  F033    	movff	plusw1,btemp+9
 39817  01DAC4  0EF8               	movlw	-8
 39818  01DAC6  006F FF8C  F034    	movff	plusw1,btemp+10
 39819  01DACC  0EF9               	movlw	-7
 39820  01DACE  006F FF8C  F035    	movff	plusw1,btemp+11
 39821  01DAD4  1E32               	comf	(btemp+8)^0,f,c
 39822  01DAD6  1E33               	comf	(btemp+9)^0,f,c
 39823  01DAD8  1E34               	comf	(btemp+10)^0,f,c
 39824  01DADA  1E35               	comf	(btemp+11)^0,f,c
 39825  01DADC  2A32               	incf	(btemp+8)^0,f,c
 39826  01DADE  0E00               	movlw	0
 39827  01DAE0  2233               	addwfc	(btemp+9)^0,f,c
 39828  01DAE2  2234               	addwfc	(btemp+10)^0,f,c
 39829  01DAE4  2235               	addwfc	(btemp+11)^0,f,c
 39830  01DAE6  D010               	goto	L46
 39831  01DAE8                     l12113:
 39832                           
 39833                           ;stkvar	_val @ sp[(-5)+-5]
 39834  01DAE8  0EF6               	movlw	-10
 39835  01DAEA  006F FF8C  F032    	movff	plusw1,btemp+8
 39836  01DAF0  0EF7               	movlw	-9
 39837  01DAF2  006F FF8C  F033    	movff	plusw1,btemp+9
 39838  01DAF8  0EF8               	movlw	-8
 39839  01DAFA  006F FF8C  F034    	movff	plusw1,btemp+10
 39840  01DB00  0EF9               	movlw	-7
 39841  01DB02  006F FF8C  F035    	movff	plusw1,btemp+11
 39842  01DB08                     L46:
 39843                           
 39844                           ;stkvar	_arg @ sp[(-5)+0]
 39845  01DB08  0EFB               	movlw	-5
 39846  01DB0A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39847  01DB10  0EFC               	movlw	-4
 39848  01DB12  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39849  01DB18  0EFD               	movlw	-3
 39850  01DB1A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39851  01DB20  0EFE               	movlw	-2
 39852  01DB22  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39853                           
 39854                           ;stkvar	_val @ sp[(-5)+-5]
 39855  01DB28  0EF6               	movlw	-10
 39856  01DB2A  50E3               	movf	plusw1,w,c
 39857  01DB2C  E113               	bnz	l12121
 39858  01DB2E  0EF7               	movlw	-9
 39859  01DB30  50E3               	movf	plusw1,w,c
 39860  01DB32  E110               	bnz	l12121
 39861  01DB34  0EF8               	movlw	-8
 39862  01DB36  50E3               	movf	plusw1,w,c
 39863  01DB38  E10D               	bnz	l12121
 39864  01DB3A  0EF9               	movlw	-7
 39865  01DB3C  50E3               	movf	plusw1,w,c
 39866  01DB3E  A4D8               	btfss	status,2,c
 39867  01DB40  D009               	goto	l12121
 39868  01DB42  0E00               	movlw	0
 39869  01DB44  6E2A               	movwf	btemp^0,c
 39870  01DB46  0E00               	movlw	0
 39871  01DB48  6E2B               	movwf	(btemp+1)^0,c
 39872  01DB4A  0E00               	movlw	0
 39873  01DB4C  6E2C               	movwf	(btemp+2)^0,c
 39874  01DB4E  0E00               	movlw	0
 39875  01DB50  6E2D               	movwf	(btemp+3)^0,c
 39876  01DB52  D0A2               	goto	l3391
 39877  01DB54                     l12121:
 39878  01DB54  0E96               	movlw	150
 39879  01DB56  6E35               	movwf	(btemp+11)^0,c
 39880                           
 39881                           ;stkvar	_exp @ sp[(-5)+4]
 39882  01DB58  0EFF               	movlw	-1
 39883  01DB5A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39884  01DB60  D00B               	goto	l12125
 39885  01DB62                     l12123:
 39886                           
 39887                           ;stkvar	_exp @ sp[(-5)+4]
 39888  01DB62  0EFF               	movlw	-1
 39889  01DB64  2AE3               	incf	plusw1,f,c
 39890                           
 39891                           ;stkvar	_arg @ sp[(-5)+0]
 39892  01DB66  90D8               	bcf	status,0,c
 39893  01DB68  0EFE               	movlw	-2
 39894  01DB6A  32E3               	rrcf	plusw1,f,c
 39895  01DB6C  0EFD               	movlw	-3
 39896  01DB6E  32E3               	rrcf	plusw1,f,c
 39897  01DB70  0EFC               	movlw	-4
 39898  01DB72  32E3               	rrcf	plusw1,f,c
 39899  01DB74  0EFB               	movlw	-5
 39900  01DB76  32E3               	rrcf	plusw1,f,c
 39901  01DB78                     l12125:
 39902                           
 39903                           ;stkvar	_arg @ sp[(-5)+0]
 39904  01DB78  50E1               	movf	fsr1l,w,c
 39905  01DB7A  0FFB               	addlw	-5
 39906  01DB7C  6ED9               	movwf	fsr2l,c
 39907  01DB7E  50E2               	movf	fsr1h,w,c
 39908  01DB80  6EDA               	movwf	fsr2h,c
 39909  01DB82  0EFF               	movlw	255
 39910  01DB84  22DA               	addwfc	fsr2h,f,c
 39911  01DB86  52DE               	movf	postinc2,f,c
 39912  01DB88  52DE               	movf	postinc2,f,c
 39913  01DB8A  52DE               	movf	postinc2,f,c
 39914  01DB8C  0EFE               	movlw	254
 39915  01DB8E  14DD               	andwf	postdec2,w,c
 39916  01DB90  B4D8               	btfsc	status,2,c
 39917  01DB92  D018               	goto	l12133
 39918  01DB94  D7E6               	goto	l12123
 39919  01DB96                     l12127:
 39920                           
 39921                           ;stkvar	_exp @ sp[(-5)+4]
 39922  01DB96  0EFF               	movlw	-1
 39923  01DB98  2AE3               	incf	plusw1,f,c
 39924                           
 39925                           ;stkvar	_arg @ sp[(-5)+0]
 39926  01DB9A  50E1               	movf	fsr1l,w,c
 39927  01DB9C  0FFB               	addlw	-5
 39928  01DB9E  6ED9               	movwf	fsr2l,c
 39929  01DBA0  50E2               	movf	fsr1h,w,c
 39930  01DBA2  6EDA               	movwf	fsr2h,c
 39931  01DBA4  0EFF               	movlw	255
 39932  01DBA6  22DA               	addwfc	fsr2h,f,c
 39933  01DBA8  2ADE               	incf	postinc2,f,c
 39934  01DBAA  0E00               	movlw	0
 39935  01DBAC  22DE               	addwfc	postinc2,f,c
 39936  01DBAE  22DE               	addwfc	postinc2,f,c
 39937  01DBB0  22DE               	addwfc	postinc2,f,c
 39938                           
 39939                           ;stkvar	_arg @ sp[(-5)+0]
 39940  01DBB2  90D8               	bcf	status,0,c
 39941  01DBB4  0EFE               	movlw	-2
 39942  01DBB6  32E3               	rrcf	plusw1,f,c
 39943  01DBB8  0EFD               	movlw	-3
 39944  01DBBA  32E3               	rrcf	plusw1,f,c
 39945  01DBBC  0EFC               	movlw	-4
 39946  01DBBE  32E3               	rrcf	plusw1,f,c
 39947  01DBC0  0EFB               	movlw	-5
 39948  01DBC2  32E3               	rrcf	plusw1,f,c
 39949  01DBC4                     l12133:
 39950                           
 39951                           ;stkvar	_arg @ sp[(-5)+0]
 39952  01DBC4  50E1               	movf	fsr1l,w,c
 39953  01DBC6  0FFB               	addlw	-5
 39954  01DBC8  6ED9               	movwf	fsr2l,c
 39955  01DBCA  50E2               	movf	fsr1h,w,c
 39956  01DBCC  6EDA               	movwf	fsr2h,c
 39957  01DBCE  0EFF               	movlw	255
 39958  01DBD0  22DA               	addwfc	fsr2h,f,c
 39959  01DBD2  52DE               	movf	postinc2,f,c
 39960  01DBD4  52DE               	movf	postinc2,f,c
 39961  01DBD6  52DE               	movf	postinc2,f,c
 39962  01DBD8  0EFF               	movlw	255
 39963  01DBDA  14DD               	andwf	postdec2,w,c
 39964  01DBDC  B4D8               	btfsc	status,2,c
 39965  01DBDE  D00C               	goto	l12137
 39966  01DBE0  D7DA               	goto	l12127
 39967  01DBE2                     l12135:
 39968                           
 39969                           ;stkvar	_exp @ sp[(-5)+4]
 39970  01DBE2  0EFF               	movlw	-1
 39971  01DBE4  06E3               	decf	plusw1,f,c
 39972                           
 39973                           ;stkvar	_arg @ sp[(-5)+0]
 39974  01DBE6  90D8               	bcf	status,0,c
 39975  01DBE8  0EFB               	movlw	-5
 39976  01DBEA  36E3               	rlcf	plusw1,f,c
 39977  01DBEC  0EFC               	movlw	-4
 39978  01DBEE  36E3               	rlcf	plusw1,f,c
 39979  01DBF0  0EFD               	movlw	-3
 39980  01DBF2  36E3               	rlcf	plusw1,f,c
 39981  01DBF4  0EFE               	movlw	-2
 39982  01DBF6  36E3               	rlcf	plusw1,f,c
 39983  01DBF8                     l12137:
 39984                           
 39985                           ;stkvar	_arg @ sp[(-5)+0]
 39986  01DBF8  0EFD               	movlw	-3
 39987  01DBFA  BEE3               	btfsc	plusw1,7,c
 39988  01DBFC  D007               	goto	u11440
 39989                           
 39990                           ;stkvar	_exp @ sp[(-5)+4]
 39991  01DBFE  0EFF               	movlw	-1
 39992  01DC00  006F FF8C  F02A    	movff	plusw1,btemp
 39993  01DC06  0E02               	movlw	2
 39994  01DC08  602A               	cpfslt	btemp^0,c
 39995  01DC0A  D7EB               	goto	l12135
 39996  01DC0C                     u11440:
 39997                           
 39998                           ;stkvar	_exp @ sp[(-5)+4]
 39999  01DC0C  0EFF               	movlw	-1
 40000  01DC0E  B0E3               	btfsc	plusw1,0,c
 40001  01DC10  D002               	goto	l12145
 40002                           
 40003                           ;stkvar	_arg @ sp[(-5)+0]
 40004  01DC12  0EFD               	movlw	-3
 40005  01DC14  9EE3               	bcf	plusw1,7,c
 40006  01DC16                     l12145:
 40007                           
 40008                           ;stkvar	_exp @ sp[(-5)+4]
 40009  01DC16  50E1               	movf	fsr1l,w,c
 40010  01DC18  0FFF               	addlw	-1
 40011  01DC1A  6ED9               	movwf	fsr2l,c
 40012  01DC1C  50E2               	movf	fsr1h,w,c
 40013  01DC1E  6EDA               	movwf	fsr2h,c
 40014  01DC20  0EFF               	movlw	255
 40015  01DC22  22DA               	addwfc	fsr2h,f,c
 40016  01DC24  90D8               	bcf	status,0,c
 40017  01DC26  32DF               	rrcf	indf2,f,c
 40018                           
 40019                           ;stkvar	_exp @ sp[(-5)+4]
 40020  01DC28  0EFF               	movlw	-1
 40021  01DC2A  006F FF8C  F035    	movff	plusw1,btemp+11
 40022  01DC30  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 40023  01DC36  6A2F               	clrf	(btemp+5)^0,c
 40024  01DC38  6A30               	clrf	(btemp+6)^0,c
 40025  01DC3A  6A31               	clrf	(btemp+7)^0,c
 40026  01DC3C  0060  F0B8  F031   	movff	btemp+4,btemp+7
 40027  01DC42  6A30               	clrf	(btemp+6)^0,c
 40028  01DC44  6A2F               	clrf	(btemp+5)^0,c
 40029  01DC46  6A2E               	clrf	(btemp+4)^0,c
 40030                           
 40031                           ;stkvar	_arg @ sp[(-5)+0]
 40032  01DC48  50E1               	movf	fsr1l,w,c
 40033  01DC4A  0FFB               	addlw	-5
 40034  01DC4C  6ED9               	movwf	fsr2l,c
 40035  01DC4E  50E2               	movf	fsr1h,w,c
 40036  01DC50  6EDA               	movwf	fsr2h,c
 40037  01DC52  0EFF               	movlw	255
 40038  01DC54  22DA               	addwfc	fsr2h,f,c
 40039  01DC56  502E               	movf	(btemp+4)^0,w,c
 40040  01DC58  12DE               	iorwf	postinc2,f,c
 40041  01DC5A  502F               	movf	(btemp+5)^0,w,c
 40042  01DC5C  12DE               	iorwf	postinc2,f,c
 40043  01DC5E  5030               	movf	(btemp+6)^0,w,c
 40044  01DC60  12DE               	iorwf	postinc2,f,c
 40045  01DC62  5031               	movf	(btemp+7)^0,w,c
 40046  01DC64  12DE               	iorwf	postinc2,f,c
 40047                           
 40048                           ;stkvar	_sign @ sp[(-5)+-1]
 40049  01DC66  0EFA               	movlw	-6
 40050  01DC68  50E3               	movf	plusw1,w,c
 40051  01DC6A  B4D8               	btfsc	status,2,c
 40052  01DC6C  D005               	goto	l12155
 40053                           
 40054                           ;stkvar	_val @ sp[(-5)+-5]
 40055  01DC6E  0EF9               	movlw	-7
 40056  01DC70  AEE3               	btfss	plusw1,7,c
 40057  01DC72  D002               	goto	l12155
 40058                           
 40059                           ;stkvar	_arg @ sp[(-5)+0]
 40060  01DC74  0EFE               	movlw	-2
 40061  01DC76  8EE3               	bsf	plusw1,7,c
 40062  01DC78                     l12155:
 40063                           
 40064                           ;stkvar	_arg @ sp[(-5)+0]
 40065  01DC78  0EFB               	movlw	-5
 40066  01DC7A  006F FF8C  F02A    	movff	plusw1,btemp
 40067  01DC80  0EFC               	movlw	-4
 40068  01DC82  006F FF8C  F02B    	movff	plusw1,btemp+1
 40069  01DC88  0EFD               	movlw	-3
 40070  01DC8A  006F FF8C  F02C    	movff	plusw1,btemp+2
 40071  01DC90  0EFE               	movlw	-2
 40072  01DC92  006F FF8C  F02D    	movff	plusw1,btemp+3
 40073  01DC98                     l3391:
 40074                           
 40075                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 40076  01DC98  0EF6               	movlw	246
 40077  01DC9A  26E1               	addwf	fsr1l,f,c
 40078  01DC9C  0EFF               	movlw	255
 40079  01DC9E  22E2               	addwfc	fsr1h,f,c
 40080  01DCA0  0012               	return		;funcret
 40081  01DCA2                     __end_of___xxtofl:
 40082                           	opt callstack 0
 40083                           
 40084 ;; *************** function ___fldiv *****************
 40085 ;; Defined at:
 40086 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 40087 ;; Parameters:    Size  Location     Type
 40088 ;;  b               4  [STACK] unsigned char 
 40089 ;;  a               4  [STACK] unsigned char 
 40090 ;; Auto vars:     Size  Location     Type
 40091 ;;  grs             4  [STACK] unsigned long 
 40092 ;;  rem             4  [STACK] unsigned long 
 40093 ;;  new_exp         2  [STACK] short 
 40094 ;;  aexp            1  [STACK] unsigned char 
 40095 ;;  bexp            1  [STACK] unsigned char 
 40096 ;;  sign            1  [STACK] unsigned char 
 40097 ;; Return value:  Size  Location     Type
 40098 ;;                  4  [STACK] unsigned char 
 40099 ;; Registers used:
 40100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 40101 ;; Tracked objects:
 40102 ;;		On entry : 0/3D
 40103 ;;		On exit  : 0/0
 40104 ;;		Unchanged: 0/0
 40105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40110 ;;Total ram usage:        0 bytes
 40111 ;; Hardware stack levels used:    1
 40112 ;; Hardware stack levels required when called:   15
 40113 ;; This function calls:
 40114 ;;		Nothing
 40115 ;; This function is called by:
 40116 ;;		_current_sensor_cal
 40117 ;;		_conv_raw_result
 40118 ;;		_convert_dac_raw
 40119 ;;		_load_hist_data
 40120 ;;		_calc_bsoc
 40121 ;;		_init_bsoc
 40122 ;;		_esr_check
 40123 ;;		_efgtoa
 40124 ;; This function uses a reentrant model
 40125 ;;
 40126                           
 40127                           	psect	text148
 40128  018770                     __ptext148:
 40129                           	opt callstack 0
 40130  018770                     ___fldiv:
 40131                           	opt callstack 0
 40132                           
 40133                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 40134  018770  0E0D               	movlw	13
 40135  018772  26E1               	addwf	fsr1l,f,c
 40136  018774  0E00               	movlw	0
 40137  018776  22E2               	addwfc	fsr1h,f,c
 40138                           
 40139                           ;stkvar	_b @ sp[(-13)+-4]
 40140                           
 40141                           ;incstack = 0
 40142 ;; hardware stack exceeded
 40143  018778  0EF2               	movlw	242
 40144  01877A  24E1               	addwf	fsr1l,w,c
 40145  01877C  6ED9               	movwf	fsr2l,c
 40146  01877E  0EFF               	movlw	255
 40147  018780  20E2               	addwfc	fsr1h,w,c
 40148  018782  6EDA               	movwf	fsr2h,c
 40149  018784  50DF               	movf	indf2,w,c
 40150  018786  6E35               	movwf	(btemp+11)^0,c
 40151  018788  0E80               	movlw	128
 40152  01878A  1635               	andwf	(btemp+11)^0,f,c
 40153                           
 40154                           ;stkvar	_sign @ sp[(-13)+12]
 40155  01878C  0EFF               	movlw	-1
 40156  01878E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40157                           
 40158                           ;stkvar	_b @ sp[(-13)+-4]
 40159  018794  0EF2               	movlw	242
 40160  018796  24E1               	addwf	fsr1l,w,c
 40161  018798  6ED9               	movwf	fsr2l,c
 40162  01879A  0EFF               	movlw	255
 40163  01879C  20E2               	addwfc	fsr1h,w,c
 40164  01879E  6EDA               	movwf	fsr2h,c
 40165  0187A0  50DF               	movf	indf2,w,c
 40166  0187A2  6E35               	movwf	(btemp+11)^0,c
 40167  0187A4  90D8               	bcf	status,0,c
 40168  0187A6  3435               	rlcf	(btemp+11)^0,w,c
 40169  0187A8  6E34               	movwf	(btemp+10)^0,c
 40170                           
 40171                           ;stkvar	_bexp @ sp[(-13)+11]
 40172  0187AA  0EFE               	movlw	-2
 40173  0187AC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40174                           
 40175                           ;stkvar	_b @ sp[(-13)+-4]
 40176  0187B2  0EF1               	movlw	241
 40177  0187B4  24E1               	addwf	fsr1l,w,c
 40178  0187B6  6ED9               	movwf	fsr2l,c
 40179  0187B8  0EFF               	movlw	255
 40180  0187BA  20E2               	addwfc	fsr1h,w,c
 40181  0187BC  6EDA               	movwf	fsr2h,c
 40182  0187BE  AEDF               	btfss	indf2,7,c
 40183  0187C0  D002               	goto	l10411
 40184                           
 40185                           ;stkvar	_bexp @ sp[(-13)+11]
 40186  0187C2  0EFE               	movlw	-2
 40187  0187C4  80E3               	bsf	plusw1,0,c
 40188  0187C6                     l10411:
 40189                           
 40190                           ;stkvar	_bexp @ sp[(-13)+11]
 40191  0187C6  0EFE               	movlw	-2
 40192  0187C8  50E3               	movf	plusw1,w,c
 40193  0187CA  B4D8               	btfsc	status,2,c
 40194  0187CC  D027               	goto	l10421
 40195                           
 40196                           ;stkvar	_bexp @ sp[(-13)+11]
 40197  0187CE  0EFE               	movlw	-2
 40198  0187D0  28E3               	incf	plusw1,w,c
 40199  0187D2  A4D8               	btfss	status,2,c
 40200  0187D4  D018               	goto	l10417
 40201  0187D6  0E00               	movlw	0
 40202  0187D8  6E32               	movwf	(btemp+8)^0,c
 40203  0187DA  0E00               	movlw	0
 40204  0187DC  6E33               	movwf	(btemp+9)^0,c
 40205  0187DE  0E00               	movlw	0
 40206  0187E0  6E34               	movwf	(btemp+10)^0,c
 40207  0187E2  0E00               	movlw	0
 40208  0187E4  6E35               	movwf	(btemp+11)^0,c
 40209                           
 40210                           ;stkvar	_b @ sp[(-13)+-4]
 40211  0187E6  0EEF               	movlw	-17
 40212  0187E8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40213  0187EE  0EF0               	movlw	-16
 40214  0187F0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40215  0187F6  0EF1               	movlw	-15
 40216  0187F8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40217  0187FE  0EF2               	movlw	-14
 40218  018800  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40219  018806                     l10417:
 40220                           
 40221                           ;stkvar	_b @ sp[(-13)+-4]
 40222  018806  0EF1               	movlw	-15
 40223  018808  8EE3               	bsf	plusw1,7,c
 40224                           
 40225                           ;stkvar	_b @ sp[(-13)+-4]
 40226  01880A  0EF2               	movlw	242
 40227  01880C  24E1               	addwf	fsr1l,w,c
 40228  01880E  6ED9               	movwf	fsr2l,c
 40229  018810  0EFF               	movlw	255
 40230  018812  20E2               	addwfc	fsr1h,w,c
 40231  018814  6EDA               	movwf	fsr2h,c
 40232  018816  0E00               	movlw	0
 40233  018818  6EDF               	movwf	indf2,c
 40234  01881A  D018               	goto	l10423
 40235  01881C                     l10421:
 40236  01881C  0E00               	movlw	0
 40237  01881E  6E32               	movwf	(btemp+8)^0,c
 40238  018820  0E00               	movlw	0
 40239  018822  6E33               	movwf	(btemp+9)^0,c
 40240  018824  0E00               	movlw	0
 40241  018826  6E34               	movwf	(btemp+10)^0,c
 40242  018828  0E00               	movlw	0
 40243  01882A  6E35               	movwf	(btemp+11)^0,c
 40244                           
 40245                           ;stkvar	_b @ sp[(-13)+-4]
 40246  01882C  0EEF               	movlw	-17
 40247  01882E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40248  018834  0EF0               	movlw	-16
 40249  018836  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40250  01883C  0EF1               	movlw	-15
 40251  01883E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40252  018844  0EF2               	movlw	-14
 40253  018846  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40254  01884C                     l10423:
 40255                           
 40256                           ;stkvar	_a @ sp[(-13)+-8]
 40257  01884C  0EEE               	movlw	238
 40258  01884E  24E1               	addwf	fsr1l,w,c
 40259  018850  6ED9               	movwf	fsr2l,c
 40260  018852  0EFF               	movlw	255
 40261  018854  20E2               	addwfc	fsr1h,w,c
 40262  018856  6EDA               	movwf	fsr2h,c
 40263  018858  50DF               	movf	indf2,w,c
 40264  01885A  6E35               	movwf	(btemp+11)^0,c
 40265  01885C  0E80               	movlw	128
 40266  01885E  1635               	andwf	(btemp+11)^0,f,c
 40267                           
 40268                           ;stkvar	_sign @ sp[(-13)+12]
 40269  018860  50E1               	movf	fsr1l,w,c
 40270  018862  0FFF               	addlw	-1
 40271  018864  6ED9               	movwf	fsr2l,c
 40272  018866  50E2               	movf	fsr1h,w,c
 40273  018868  6EDA               	movwf	fsr2h,c
 40274  01886A  0EFF               	movlw	255
 40275  01886C  22DA               	addwfc	fsr2h,f,c
 40276  01886E  5035               	movf	(btemp+11)^0,w,c
 40277  018870  1ADF               	xorwf	indf2,f,c
 40278                           
 40279                           ;stkvar	_a @ sp[(-13)+-8]
 40280  018872  0EEE               	movlw	238
 40281  018874  24E1               	addwf	fsr1l,w,c
 40282  018876  6ED9               	movwf	fsr2l,c
 40283  018878  0EFF               	movlw	255
 40284  01887A  20E2               	addwfc	fsr1h,w,c
 40285  01887C  6EDA               	movwf	fsr2h,c
 40286  01887E  50DF               	movf	indf2,w,c
 40287  018880  6E35               	movwf	(btemp+11)^0,c
 40288  018882  90D8               	bcf	status,0,c
 40289  018884  3435               	rlcf	(btemp+11)^0,w,c
 40290  018886  6E34               	movwf	(btemp+10)^0,c
 40291                           
 40292                           ;stkvar	_aexp @ sp[(-13)+10]
 40293  018888  0EFD               	movlw	-3
 40294  01888A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40295                           
 40296                           ;stkvar	_a @ sp[(-13)+-8]
 40297  018890  0EED               	movlw	237
 40298  018892  24E1               	addwf	fsr1l,w,c
 40299  018894  6ED9               	movwf	fsr2l,c
 40300  018896  0EFF               	movlw	255
 40301  018898  20E2               	addwfc	fsr1h,w,c
 40302  01889A  6EDA               	movwf	fsr2h,c
 40303  01889C  AEDF               	btfss	indf2,7,c
 40304  01889E  D002               	goto	l10431
 40305                           
 40306                           ;stkvar	_aexp @ sp[(-13)+10]
 40307  0188A0  0EFD               	movlw	-3
 40308  0188A2  80E3               	bsf	plusw1,0,c
 40309  0188A4                     l10431:
 40310                           
 40311                           ;stkvar	_aexp @ sp[(-13)+10]
 40312  0188A4  0EFD               	movlw	-3
 40313  0188A6  50E3               	movf	plusw1,w,c
 40314  0188A8  B4D8               	btfsc	status,2,c
 40315  0188AA  D027               	goto	l10441
 40316                           
 40317                           ;stkvar	_aexp @ sp[(-13)+10]
 40318  0188AC  0EFD               	movlw	-3
 40319  0188AE  28E3               	incf	plusw1,w,c
 40320  0188B0  A4D8               	btfss	status,2,c
 40321  0188B2  D018               	goto	l10437
 40322  0188B4  0E00               	movlw	0
 40323  0188B6  6E32               	movwf	(btemp+8)^0,c
 40324  0188B8  0E00               	movlw	0
 40325  0188BA  6E33               	movwf	(btemp+9)^0,c
 40326  0188BC  0E00               	movlw	0
 40327  0188BE  6E34               	movwf	(btemp+10)^0,c
 40328  0188C0  0E00               	movlw	0
 40329  0188C2  6E35               	movwf	(btemp+11)^0,c
 40330                           
 40331                           ;stkvar	_a @ sp[(-13)+-8]
 40332  0188C4  0EEB               	movlw	-21
 40333  0188C6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40334  0188CC  0EEC               	movlw	-20
 40335  0188CE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40336  0188D4  0EED               	movlw	-19
 40337  0188D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40338  0188DC  0EEE               	movlw	-18
 40339  0188DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40340  0188E4                     l10437:
 40341                           
 40342                           ;stkvar	_a @ sp[(-13)+-8]
 40343  0188E4  0EED               	movlw	-19
 40344  0188E6  8EE3               	bsf	plusw1,7,c
 40345                           
 40346                           ;stkvar	_a @ sp[(-13)+-8]
 40347  0188E8  0EEE               	movlw	238
 40348  0188EA  24E1               	addwf	fsr1l,w,c
 40349  0188EC  6ED9               	movwf	fsr2l,c
 40350  0188EE  0EFF               	movlw	255
 40351  0188F0  20E2               	addwfc	fsr1h,w,c
 40352  0188F2  6EDA               	movwf	fsr2h,c
 40353  0188F4  0E00               	movlw	0
 40354  0188F6  6EDF               	movwf	indf2,c
 40355  0188F8  D018               	goto	l10443
 40356  0188FA                     l10441:
 40357  0188FA  0E00               	movlw	0
 40358  0188FC  6E32               	movwf	(btemp+8)^0,c
 40359  0188FE  0E00               	movlw	0
 40360  018900  6E33               	movwf	(btemp+9)^0,c
 40361  018902  0E00               	movlw	0
 40362  018904  6E34               	movwf	(btemp+10)^0,c
 40363  018906  0E00               	movlw	0
 40364  018908  6E35               	movwf	(btemp+11)^0,c
 40365                           
 40366                           ;stkvar	_a @ sp[(-13)+-8]
 40367  01890A  0EEB               	movlw	-21
 40368  01890C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40369  018912  0EEC               	movlw	-20
 40370  018914  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40371  01891A  0EED               	movlw	-19
 40372  01891C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40373  018922  0EEE               	movlw	-18
 40374  018924  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40375  01892A                     l10443:
 40376                           
 40377                           ;stkvar	_a @ sp[(-13)+-8]
 40378  01892A  0EEB               	movlw	-21
 40379  01892C  50E3               	movf	plusw1,w,c
 40380  01892E  E139               	bnz	l10455
 40381  018930  0EEC               	movlw	-20
 40382  018932  50E3               	movf	plusw1,w,c
 40383  018934  E136               	bnz	l10455
 40384  018936  0EED               	movlw	-19
 40385  018938  50E3               	movf	plusw1,w,c
 40386  01893A  E133               	bnz	l10455
 40387  01893C  0EEE               	movlw	-18
 40388  01893E  50E3               	movf	plusw1,w,c
 40389  018940  A4D8               	btfss	status,2,c
 40390  018942  D02F               	goto	l10455
 40391                           
 40392                           ;stkvar	_b @ sp[(-13)+-4]
 40393  018944  0EEF               	movlw	-17
 40394  018946  6AE3               	clrf	plusw1,c
 40395  018948  0EF0               	movlw	-16
 40396  01894A  6AE3               	clrf	plusw1,c
 40397  01894C  0EF1               	movlw	-15
 40398  01894E  6AE3               	clrf	plusw1,c
 40399  018950  0EF2               	movlw	-14
 40400  018952  6AE3               	clrf	plusw1,c
 40401                           
 40402                           ;stkvar	_b @ sp[(-13)+-4]
 40403  018954  0EF1               	movlw	241
 40404  018956  24E1               	addwf	fsr1l,w,c
 40405  018958  6ED9               	movwf	fsr2l,c
 40406  01895A  0EFF               	movlw	255
 40407  01895C  20E2               	addwfc	fsr1h,w,c
 40408  01895E  6EDA               	movwf	fsr2h,c
 40409  018960  0E80               	movlw	128
 40410  018962  12DE               	iorwf	postinc2,f,c
 40411  018964  0E7F               	movlw	127
 40412  018966  12DD               	iorwf	postdec2,f,c
 40413  018968                     l10449:
 40414                           
 40415                           ;stkvar	_sign @ sp[(-13)+12]
 40416  018968  0EFF               	movlw	-1
 40417  01896A  006F FF8C  F035    	movff	plusw1,btemp+11
 40418                           
 40419                           ;stkvar	_b @ sp[(-13)+-4]
 40420  018970  0EF2               	movlw	242
 40421  018972  24E1               	addwf	fsr1l,w,c
 40422  018974  6ED9               	movwf	fsr2l,c
 40423  018976  0EFF               	movlw	255
 40424  018978  20E2               	addwfc	fsr1h,w,c
 40425  01897A  6EDA               	movwf	fsr2h,c
 40426  01897C  5035               	movf	(btemp+11)^0,w,c
 40427  01897E  12DF               	iorwf	indf2,f,c
 40428                           
 40429                           ;stkvar	_b @ sp[(-13)+-4]
 40430  018980  0EEF               	movlw	-17
 40431  018982  006F FF8C  F02A    	movff	plusw1,btemp
 40432  018988  0EF0               	movlw	-16
 40433  01898A  006F FF8C  F02B    	movff	plusw1,btemp+1
 40434  018990  0EF1               	movlw	-15
 40435  018992  006F FF8C  F02C    	movff	plusw1,btemp+2
 40436  018998  0EF2               	movlw	-14
 40437  01899A  006F FF8C  F02D    	movff	plusw1,btemp+3
 40438  0189A0  D19F               	goto	l3315
 40439  0189A2                     l10455:
 40440                           
 40441                           ;stkvar	_bexp @ sp[(-13)+11]
 40442  0189A2  0EFE               	movlw	-2
 40443  0189A4  50E3               	movf	plusw1,w,c
 40444  0189A6  A4D8               	btfss	status,2,c
 40445  0189A8  D009               	goto	l10463
 40446  0189AA  0E00               	movlw	0
 40447  0189AC  6E2A               	movwf	btemp^0,c
 40448  0189AE  0E00               	movlw	0
 40449  0189B0  6E2B               	movwf	(btemp+1)^0,c
 40450  0189B2  0E00               	movlw	0
 40451  0189B4  6E2C               	movwf	(btemp+2)^0,c
 40452  0189B6  0E00               	movlw	0
 40453  0189B8  6E2D               	movwf	(btemp+3)^0,c
 40454  0189BA  D192               	goto	l3315
 40455  0189BC                     l10463:
 40456                           
 40457                           ;stkvar	_bexp @ sp[(-13)+11]
 40458  0189BC  0EFE               	movlw	-2
 40459  0189BE  50E3               	movf	plusw1,w,c
 40460  0189C0  6E34               	movwf	(btemp+10)^0,c
 40461  0189C2  6A35               	clrf	(btemp+11)^0,c
 40462                           
 40463                           ;stkvar	_aexp @ sp[(-13)+10]
 40464  0189C4  0EFD               	movlw	-3
 40465  0189C6  50E3               	movf	plusw1,w,c
 40466  0189C8  5E34               	subwf	(btemp+10)^0,f,c
 40467  0189CA  0E00               	movlw	0
 40468  0189CC  5A35               	subwfb	(btemp+11)^0,f,c
 40469  0189CE  0E7F               	movlw	127
 40470  0189D0  2634               	addwf	(btemp+10)^0,f,c
 40471  0189D2  0E00               	movlw	0
 40472  0189D4  2235               	addwfc	(btemp+11)^0,f,c
 40473                           
 40474                           ;stkvar	_new_exp @ sp[(-13)+8]
 40475  0189D6  0EFB               	movlw	-5
 40476  0189D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40477  0189DE  0EFC               	movlw	-4
 40478  0189E0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40479                           
 40480                           ;stkvar	_b @ sp[(-13)+-4]
 40481  0189E6  0EEF               	movlw	-17
 40482  0189E8  006F FF8C  F032    	movff	plusw1,btemp+8
 40483  0189EE  0EF0               	movlw	-16
 40484  0189F0  006F FF8C  F033    	movff	plusw1,btemp+9
 40485  0189F6  0EF1               	movlw	-15
 40486  0189F8  006F FF8C  F034    	movff	plusw1,btemp+10
 40487  0189FE  0EF2               	movlw	-14
 40488  018A00  006F FF8C  F035    	movff	plusw1,btemp+11
 40489                           
 40490                           ;stkvar	_rem @ sp[(-13)+4]
 40491  018A06  0EF7               	movlw	-9
 40492  018A08  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40493  018A0E  0EF8               	movlw	-8
 40494  018A10  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40495  018A16  0EF9               	movlw	-7
 40496  018A18  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40497  018A1E  0EFA               	movlw	-6
 40498  018A20  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40499                           
 40500                           ;stkvar	_b @ sp[(-13)+-4]
 40501  018A26  0EEF               	movlw	-17
 40502  018A28  6AE3               	clrf	plusw1,c
 40503  018A2A  0EF0               	movlw	-16
 40504  018A2C  6AE3               	clrf	plusw1,c
 40505  018A2E  0EF1               	movlw	-15
 40506  018A30  6AE3               	clrf	plusw1,c
 40507  018A32  0EF2               	movlw	-14
 40508  018A34  6AE3               	clrf	plusw1,c
 40509                           
 40510                           ;stkvar	_grs @ sp[(-13)+0]
 40511  018A36  0EF3               	movlw	-13
 40512  018A38  6AE3               	clrf	plusw1,c
 40513  018A3A  0EF4               	movlw	-12
 40514  018A3C  6AE3               	clrf	plusw1,c
 40515  018A3E  0EF5               	movlw	-11
 40516  018A40  6AE3               	clrf	plusw1,c
 40517  018A42  0EF6               	movlw	-10
 40518  018A44  6AE3               	clrf	plusw1,c
 40519                           
 40520                           ;stkvar	_aexp @ sp[(-13)+10]
 40521  018A46  0EFD               	movlw	-3
 40522  018A48  6AE3               	clrf	plusw1,c
 40523  018A4A  D050               	goto	l10491
 40524  018A4C                     l10473:
 40525                           
 40526                           ;stkvar	_aexp @ sp[(-13)+10]
 40527  018A4C  0EFD               	movlw	-3
 40528  018A4E  50E3               	movf	plusw1,w,c
 40529  018A50  B4D8               	btfsc	status,2,c
 40530  018A52  D020               	goto	l10483
 40531                           
 40532                           ;stkvar	_rem @ sp[(-13)+4]
 40533  018A54  90D8               	bcf	status,0,c
 40534  018A56  0EF7               	movlw	-9
 40535  018A58  36E3               	rlcf	plusw1,f,c
 40536  018A5A  0EF8               	movlw	-8
 40537  018A5C  36E3               	rlcf	plusw1,f,c
 40538  018A5E  0EF9               	movlw	-7
 40539  018A60  36E3               	rlcf	plusw1,f,c
 40540  018A62  0EFA               	movlw	-6
 40541  018A64  36E3               	rlcf	plusw1,f,c
 40542                           
 40543                           ;stkvar	_b @ sp[(-13)+-4]
 40544  018A66  90D8               	bcf	status,0,c
 40545  018A68  0EEF               	movlw	-17
 40546  018A6A  36E3               	rlcf	plusw1,f,c
 40547  018A6C  0EF0               	movlw	-16
 40548  018A6E  36E3               	rlcf	plusw1,f,c
 40549  018A70  0EF1               	movlw	-15
 40550  018A72  36E3               	rlcf	plusw1,f,c
 40551  018A74  0EF2               	movlw	-14
 40552  018A76  36E3               	rlcf	plusw1,f,c
 40553                           
 40554                           ;stkvar	_grs @ sp[(-13)+0]
 40555  018A78  0EF6               	movlw	-10
 40556  018A7A  AEE3               	btfss	plusw1,7,c
 40557  018A7C  D002               	goto	l10481
 40558                           
 40559                           ;stkvar	_b @ sp[(-13)+-4]
 40560  018A7E  0EEF               	movlw	-17
 40561  018A80  80E3               	bsf	plusw1,0,c
 40562  018A82                     l10481:
 40563                           
 40564                           ;stkvar	_grs @ sp[(-13)+0]
 40565  018A82  90D8               	bcf	status,0,c
 40566  018A84  0EF3               	movlw	-13
 40567  018A86  36E3               	rlcf	plusw1,f,c
 40568  018A88  0EF4               	movlw	-12
 40569  018A8A  36E3               	rlcf	plusw1,f,c
 40570  018A8C  0EF5               	movlw	-11
 40571  018A8E  36E3               	rlcf	plusw1,f,c
 40572  018A90  0EF6               	movlw	-10
 40573  018A92  36E3               	rlcf	plusw1,f,c
 40574  018A94                     l10483:
 40575                           
 40576                           ;stkvar	_a @ sp[(-13)+-8]
 40577                           ;stkvar	_rem @ sp[(-13)+4]
 40578  018A94  50E1               	movf	fsr1l,w,c
 40579  018A96  0FF7               	addlw	-9
 40580  018A98  6ED9               	movwf	fsr2l,c
 40581  018A9A  50E2               	movf	fsr1h,w,c
 40582  018A9C  6EDA               	movwf	fsr2h,c
 40583  018A9E  0EFF               	movlw	255
 40584  018AA0  22DA               	addwfc	fsr2h,f,c
 40585  018AA2  0EEB               	movlw	-21
 40586  018AA4  50E3               	movf	plusw1,w,c
 40587  018AA6  5CDE               	subwf	postinc2,w,c
 40588  018AA8  0EEC               	movlw	-20
 40589  018AAA  50E3               	movf	plusw1,w,c
 40590  018AAC  58DE               	subwfb	postinc2,w,c
 40591  018AAE  0EED               	movlw	-19
 40592  018AB0  50E3               	movf	plusw1,w,c
 40593  018AB2  58DE               	subwfb	postinc2,w,c
 40594  018AB4  0EEE               	movlw	-18
 40595  018AB6  50E3               	movf	plusw1,w,c
 40596  018AB8  58DE               	subwfb	postinc2,w,c
 40597  018ABA  A0D8               	btfss	status,0,c
 40598  018ABC  D015               	goto	l10489
 40599                           
 40600                           ;stkvar	_grs @ sp[(-13)+0]
 40601  018ABE  0EF6               	movlw	-10
 40602  018AC0  8CE3               	bsf	plusw1,6,c
 40603                           
 40604                           ;stkvar	_a @ sp[(-13)+-8]
 40605                           ;stkvar	_rem @ sp[(-13)+4]
 40606  018AC2  50E1               	movf	fsr1l,w,c
 40607  018AC4  0FF7               	addlw	-9
 40608  018AC6  6ED9               	movwf	fsr2l,c
 40609  018AC8  50E2               	movf	fsr1h,w,c
 40610  018ACA  6EDA               	movwf	fsr2h,c
 40611  018ACC  0EFF               	movlw	255
 40612  018ACE  22DA               	addwfc	fsr2h,f,c
 40613  018AD0  0EEB               	movlw	-21
 40614  018AD2  50E3               	movf	plusw1,w,c
 40615  018AD4  5EDE               	subwf	postinc2,f,c
 40616  018AD6  0EEC               	movlw	-20
 40617  018AD8  50E3               	movf	plusw1,w,c
 40618  018ADA  5ADE               	subwfb	postinc2,f,c
 40619  018ADC  0EED               	movlw	-19
 40620  018ADE  50E3               	movf	plusw1,w,c
 40621  018AE0  5ADE               	subwfb	postinc2,f,c
 40622  018AE2  0EEE               	movlw	-18
 40623  018AE4  50E3               	movf	plusw1,w,c
 40624  018AE6  5ADE               	subwfb	postinc2,f,c
 40625  018AE8                     l10489:
 40626                           
 40627                           ;stkvar	_aexp @ sp[(-13)+10]
 40628  018AE8  0EFD               	movlw	-3
 40629  018AEA  2AE3               	incf	plusw1,f,c
 40630  018AEC                     l10491:
 40631                           
 40632                           ;stkvar	_aexp @ sp[(-13)+10]
 40633  018AEC  0EFD               	movlw	-3
 40634  018AEE  006F FF8C  F02A    	movff	plusw1,btemp
 40635  018AF4  0E19               	movlw	25
 40636  018AF6  642A               	cpfsgt	btemp^0,c
 40637  018AF8  D7A9               	goto	l10473
 40638                           
 40639                           ;stkvar	_rem @ sp[(-13)+4]
 40640  018AFA  0EF7               	movlw	-9
 40641  018AFC  50E3               	movf	plusw1,w,c
 40642  018AFE  E10A               	bnz	u8540
 40643  018B00  0EF8               	movlw	-8
 40644  018B02  50E3               	movf	plusw1,w,c
 40645  018B04  E107               	bnz	u8540
 40646  018B06  0EF9               	movlw	-7
 40647  018B08  50E3               	movf	plusw1,w,c
 40648  018B0A  E104               	bnz	u8540
 40649  018B0C  0EFA               	movlw	-6
 40650  018B0E  50E3               	movf	plusw1,w,c
 40651  018B10  B4D8               	btfsc	status,2,c
 40652  018B12  D024               	goto	l10507
 40653  018B14                     u8540:
 40654                           
 40655                           ;stkvar	_grs @ sp[(-13)+0]
 40656  018B14  0EF3               	movlw	-13
 40657  018B16  80E3               	bsf	plusw1,0,c
 40658  018B18  D021               	goto	l10507
 40659  018B1A                     l10497:
 40660                           
 40661                           ;stkvar	_b @ sp[(-13)+-4]
 40662  018B1A  90D8               	bcf	status,0,c
 40663  018B1C  0EEF               	movlw	-17
 40664  018B1E  36E3               	rlcf	plusw1,f,c
 40665  018B20  0EF0               	movlw	-16
 40666  018B22  36E3               	rlcf	plusw1,f,c
 40667  018B24  0EF1               	movlw	-15
 40668  018B26  36E3               	rlcf	plusw1,f,c
 40669  018B28  0EF2               	movlw	-14
 40670  018B2A  36E3               	rlcf	plusw1,f,c
 40671                           
 40672                           ;stkvar	_grs @ sp[(-13)+0]
 40673  018B2C  0EF6               	movlw	-10
 40674  018B2E  AEE3               	btfss	plusw1,7,c
 40675  018B30  D002               	goto	l10503
 40676                           
 40677                           ;stkvar	_b @ sp[(-13)+-4]
 40678  018B32  0EEF               	movlw	-17
 40679  018B34  80E3               	bsf	plusw1,0,c
 40680  018B36                     l10503:
 40681                           
 40682                           ;stkvar	_grs @ sp[(-13)+0]
 40683  018B36  90D8               	bcf	status,0,c
 40684  018B38  0EF3               	movlw	-13
 40685  018B3A  36E3               	rlcf	plusw1,f,c
 40686  018B3C  0EF4               	movlw	-12
 40687  018B3E  36E3               	rlcf	plusw1,f,c
 40688  018B40  0EF5               	movlw	-11
 40689  018B42  36E3               	rlcf	plusw1,f,c
 40690  018B44  0EF6               	movlw	-10
 40691  018B46  36E3               	rlcf	plusw1,f,c
 40692                           
 40693                           ;stkvar	_new_exp @ sp[(-13)+8]
 40694  018B48  50E1               	movf	fsr1l,w,c
 40695  018B4A  0FFB               	addlw	-5
 40696  018B4C  6ED9               	movwf	fsr2l,c
 40697  018B4E  50E2               	movf	fsr1h,w,c
 40698  018B50  6EDA               	movwf	fsr2h,c
 40699  018B52  0EFF               	movlw	255
 40700  018B54  22DA               	addwfc	fsr2h,f,c
 40701  018B56  06DE               	decf	postinc2,f,c
 40702  018B58  0E00               	movlw	0
 40703  018B5A  5ADD               	subwfb	postdec2,f,c
 40704  018B5C                     l10507:
 40705                           
 40706                           ;stkvar	_b @ sp[(-13)+-4]
 40707  018B5C  0EF1               	movlw	-15
 40708  018B5E  AEE3               	btfss	plusw1,7,c
 40709  018B60  D7DC               	goto	l10497
 40710                           
 40711                           ;stkvar	_aexp @ sp[(-13)+10]
 40712  018B62  0EFD               	movlw	-3
 40713  018B64  6AE3               	clrf	plusw1,c
 40714                           
 40715                           ;stkvar	_grs @ sp[(-13)+0]
 40716  018B66  0EF6               	movlw	-10
 40717  018B68  AEE3               	btfss	plusw1,7,c
 40718  018B6A  D020               	goto	l10521
 40719                           
 40720                           ;stkvar	_grs @ sp[(-13)+0]
 40721  018B6C  50E1               	movf	fsr1l,w,c
 40722  018B6E  0FF3               	addlw	-13
 40723  018B70  6ED9               	movwf	fsr2l,c
 40724  018B72  50E2               	movf	fsr1h,w,c
 40725  018B74  6EDA               	movwf	fsr2h,c
 40726  018B76  0EFF               	movlw	255
 40727  018B78  22DA               	addwfc	fsr2h,f,c
 40728  018B7A  0EFF               	movlw	255
 40729  018B7C  14DE               	andwf	postinc2,w,c
 40730  018B7E  6E32               	movwf	(btemp+8)^0,c
 40731  018B80  0EFF               	movlw	255
 40732  018B82  14DE               	andwf	postinc2,w,c
 40733  018B84  6E33               	movwf	(btemp+9)^0,c
 40734  018B86  0EFF               	movlw	255
 40735  018B88  14DE               	andwf	postinc2,w,c
 40736  018B8A  6E34               	movwf	(btemp+10)^0,c
 40737  018B8C  0E7F               	movlw	127
 40738  018B8E  14DE               	andwf	postinc2,w,c
 40739  018B90  6E35               	movwf	(btemp+11)^0,c
 40740  018B92  5032               	movf	(btemp+8)^0,w,c
 40741  018B94  1033               	iorwf	(btemp+9)^0,w,c
 40742  018B96  1034               	iorwf	(btemp+10)^0,w,c
 40743  018B98  1035               	iorwf	(btemp+11)^0,w,c
 40744  018B9A  B4D8               	btfsc	status,2,c
 40745  018B9C  D004               	goto	l10517
 40746  018B9E                     u8580:
 40747                           
 40748                           ;stkvar	_aexp @ sp[(-13)+10]
 40749  018B9E  0EFD               	movlw	-3
 40750  018BA0  6AE3               	clrf	plusw1,c
 40751  018BA2  2AE3               	incf	plusw1,f,c
 40752  018BA4  D003               	goto	l10521
 40753  018BA6                     l10517:
 40754                           
 40755                           ;stkvar	_b @ sp[(-13)+-4]
 40756  018BA6  0EEF               	movlw	-17
 40757  018BA8  B0E3               	btfsc	plusw1,0,c
 40758  018BAA  D7F9               	goto	u8580
 40759  018BAC                     l10521:
 40760                           
 40761                           ;stkvar	_aexp @ sp[(-13)+10]
 40762  018BAC  0EFD               	movlw	-3
 40763  018BAE  50E3               	movf	plusw1,w,c
 40764  018BB0  B4D8               	btfsc	status,2,c
 40765  018BB2  D036               	goto	l10531
 40766                           
 40767                           ;stkvar	_b @ sp[(-13)+-4]
 40768  018BB4  50E1               	movf	fsr1l,w,c
 40769  018BB6  0FEF               	addlw	-17
 40770  018BB8  6ED9               	movwf	fsr2l,c
 40771  018BBA  50E2               	movf	fsr1h,w,c
 40772  018BBC  6EDA               	movwf	fsr2h,c
 40773  018BBE  0EFF               	movlw	255
 40774  018BC0  22DA               	addwfc	fsr2h,f,c
 40775  018BC2  2ADE               	incf	postinc2,f,c
 40776  018BC4  0E00               	movlw	0
 40777  018BC6  22DE               	addwfc	postinc2,f,c
 40778  018BC8  22DE               	addwfc	postinc2,f,c
 40779  018BCA  22DE               	addwfc	postinc2,f,c
 40780                           
 40781                           ;stkvar	_b @ sp[(-13)+-4]
 40782  018BCC  0EF2               	movlw	-14
 40783  018BCE  A0E3               	btfss	plusw1,0,c
 40784  018BD0  D027               	goto	l10531
 40785  018BD2  0E01               	movlw	1
 40786  018BD4  6E35               	movwf	(btemp+11)^0,c
 40787                           
 40788                           ;stkvar	_b @ sp[(-13)+-4]
 40789  018BD6  50E1               	movf	fsr1l,w,c
 40790  018BD8  0FEF               	addlw	-17
 40791  018BDA  6ED9               	movwf	fsr2l,c
 40792  018BDC  50E2               	movf	fsr1h,w,c
 40793  018BDE  6EDA               	movwf	fsr2h,c
 40794  018BE0  0EFF               	movlw	255
 40795  018BE2  22DA               	addwfc	fsr2h,f,c
 40796  018BE4  2835               	incf	(btemp+11)^0,w,c
 40797  018BE6  52DE               	movf	postinc2,f,c
 40798  018BE8  D008               	goto	u8620
 40799  018BEA                     u8625:
 40800  018BEA  52DE               	movf	postinc2,f,c
 40801  018BEC  90D8               	bcf	status,0,c
 40802  018BEE  BEDC               	btfsc	preinc2,7,c
 40803  018BF0  80D8               	bsf	status,0,c
 40804  018BF2  32DD               	rrcf	postdec2,f,c
 40805  018BF4  32DD               	rrcf	postdec2,f,c
 40806  018BF6  32DD               	rrcf	postdec2,f,c
 40807  018BF8  32DE               	rrcf	postinc2,f,c
 40808  018BFA                     u8620:
 40809  018BFA  2EE8               	decfsz	wreg,f,c
 40810  018BFC  D7F6               	goto	u8625
 40811                           
 40812                           ;stkvar	_new_exp @ sp[(-13)+8]
 40813  018BFE  0EFB               	movlw	-5
 40814  018C00  50E3               	movf	plusw1,w,c
 40815  018C02  0F01               	addlw	1
 40816  018C04  6E2A               	movwf	btemp^0,c
 40817  018C06  0EFB               	movlw	-5
 40818  018C08  0060  F0AB  FFE3   	movff	btemp,plusw1
 40819  018C0E  6A2A               	clrf	btemp^0,c
 40820  018C10  0EFC               	movlw	-4
 40821  018C12  50E3               	movf	plusw1,w,c
 40822  018C14  202A               	addwfc	btemp^0,w,c
 40823  018C16  6E2A               	movwf	btemp^0,c
 40824  018C18  0EFC               	movlw	-4
 40825  018C1A  0060  F0AB  FFE3   	movff	btemp,plusw1
 40826  018C20                     l10531:
 40827                           
 40828                           ;stkvar	_new_exp @ sp[(-13)+8]
 40829  018C20  0EFC               	movlw	-4
 40830  018C22  BEE3               	btfsc	plusw1,7,c
 40831  018C24  D01B               	goto	l10537
 40832  018C26  0EFC               	movlw	-4
 40833  018C28  50E3               	movf	plusw1,w,c
 40834  018C2A  E104               	bnz	u8630
 40835  018C2C  0EFB               	movlw	-5
 40836  018C2E  28E3               	incf	plusw1,w,c
 40837  018C30  A0D8               	btfss	status,0,c
 40838  018C32  D014               	goto	l10537
 40839  018C34                     u8630:
 40840  018C34  0EFF               	movlw	255
 40841  018C36  6E34               	movwf	(btemp+10)^0,c
 40842  018C38  0E00               	movlw	0
 40843  018C3A  6E35               	movwf	(btemp+11)^0,c
 40844                           
 40845                           ;stkvar	_new_exp @ sp[(-13)+8]
 40846  018C3C  0EFB               	movlw	-5
 40847  018C3E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40848  018C44  0EFC               	movlw	-4
 40849  018C46  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40850                           
 40851                           ;stkvar	_b @ sp[(-13)+-4]
 40852  018C4C  0EEF               	movlw	-17
 40853  018C4E  6AE3               	clrf	plusw1,c
 40854  018C50  0EF0               	movlw	-16
 40855  018C52  6AE3               	clrf	plusw1,c
 40856  018C54  0EF1               	movlw	-15
 40857  018C56  6AE3               	clrf	plusw1,c
 40858  018C58  0EF2               	movlw	-14
 40859  018C5A  6AE3               	clrf	plusw1,c
 40860  018C5C                     l10537:
 40861                           
 40862                           ;stkvar	_new_exp @ sp[(-13)+8]
 40863  018C5C  0EFC               	movlw	-4
 40864  018C5E  BEE3               	btfsc	plusw1,7,c
 40865  018C60  D007               	goto	u8640
 40866  018C62  0EFC               	movlw	-4
 40867  018C64  50E3               	movf	plusw1,w,c
 40868  018C66  E112               	bnz	l10543
 40869  018C68  0EFB               	movlw	-5
 40870  018C6A  04E3               	decf	plusw1,w,c
 40871  018C6C  B0D8               	btfsc	status,0,c
 40872  018C6E  D00E               	goto	l10543
 40873  018C70                     u8640:
 40874                           
 40875                           ;stkvar	_new_exp @ sp[(-13)+8]
 40876  018C70  0EFB               	movlw	-5
 40877  018C72  6AE3               	clrf	plusw1,c
 40878  018C74  0EFC               	movlw	-4
 40879  018C76  6AE3               	clrf	plusw1,c
 40880                           
 40881                           ;stkvar	_b @ sp[(-13)+-4]
 40882  018C78  0EEF               	movlw	-17
 40883  018C7A  6AE3               	clrf	plusw1,c
 40884  018C7C  0EF0               	movlw	-16
 40885  018C7E  6AE3               	clrf	plusw1,c
 40886  018C80  0EF1               	movlw	-15
 40887  018C82  6AE3               	clrf	plusw1,c
 40888  018C84  0EF2               	movlw	-14
 40889  018C86  6AE3               	clrf	plusw1,c
 40890                           
 40891                           ;stkvar	_sign @ sp[(-13)+12]
 40892  018C88  0EFF               	movlw	-1
 40893  018C8A  6AE3               	clrf	plusw1,c
 40894  018C8C                     l10543:
 40895                           
 40896                           ;stkvar	_new_exp @ sp[(-13)+8]
 40897                           ;stkvar	_bexp @ sp[(-13)+11]
 40898  018C8C  0EFB               	movlw	-5
 40899  018C8E  006F FF8C  F02A    	movff	plusw1,btemp
 40900  018C94  0EFE               	movlw	-2
 40901  018C96  0060  F0AB  FFE3   	movff	btemp,plusw1
 40902                           
 40903                           ;stkvar	_bexp @ sp[(-13)+11]
 40904  018C9C  0EFE               	movlw	-2
 40905  018C9E  A0E3               	btfss	plusw1,0,c
 40906  018CA0  D009               	goto	l10549
 40907                           
 40908                           ;stkvar	_b @ sp[(-13)+-4]
 40909  018CA2  0EF1               	movlw	241
 40910  018CA4  24E1               	addwf	fsr1l,w,c
 40911  018CA6  6ED9               	movwf	fsr2l,c
 40912  018CA8  0EFF               	movlw	255
 40913  018CAA  20E2               	addwfc	fsr1h,w,c
 40914  018CAC  6EDA               	movwf	fsr2h,c
 40915  018CAE  0E00               	movlw	0
 40916  018CB0  8EDB               	bsf	plusw2,7,c
 40917  018CB2  D008               	goto	l10551
 40918  018CB4                     l10549:
 40919                           
 40920                           ;stkvar	_b @ sp[(-13)+-4]
 40921  018CB4  0EF1               	movlw	241
 40922  018CB6  24E1               	addwf	fsr1l,w,c
 40923  018CB8  6ED9               	movwf	fsr2l,c
 40924  018CBA  0EFF               	movlw	255
 40925  018CBC  20E2               	addwfc	fsr1h,w,c
 40926  018CBE  6EDA               	movwf	fsr2h,c
 40927  018CC0  0E7F               	movlw	127
 40928  018CC2  16DF               	andwf	indf2,f,c
 40929  018CC4                     l10551:
 40930                           
 40931                           ;stkvar	_b @ sp[(-13)+-4]
 40932  018CC4  0EF2               	movlw	242
 40933  018CC6  24E1               	addwf	fsr1l,w,c
 40934  018CC8  6ED9               	movwf	fsr2l,c
 40935  018CCA  0EFF               	movlw	255
 40936  018CCC  20E2               	addwfc	fsr1h,w,c
 40937  018CCE  6EDA               	movwf	fsr2h,c
 40938                           
 40939                           ;stkvar	_bexp @ sp[(-13)+11]
 40940  018CD0  0EFE               	movlw	-2
 40941  018CD2  006F FF8C  F035    	movff	plusw1,btemp+11
 40942  018CD8  90D8               	bcf	status,0,c
 40943  018CDA  3035               	rrcf	(btemp+11)^0,w,c
 40944  018CDC  6EDF               	movwf	indf2,c
 40945  018CDE  D644               	goto	l10449
 40946  018CE0                     l3315:
 40947                           
 40948                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 40949  018CE0  0EEB               	movlw	235
 40950  018CE2  26E1               	addwf	fsr1l,f,c
 40951  018CE4  0EFF               	movlw	255
 40952  018CE6  22E2               	addwfc	fsr1h,f,c
 40953  018CE8  0012               	return		;funcret
 40954  018CEA                     __end_of___fldiv:
 40955                           	opt callstack 0
 40956                           
 40957 ;; *************** function ___flge *****************
 40958 ;; Defined at:
 40959 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 40960 ;; Parameters:    Size  Location     Type
 40961 ;;  ff1             4  [STACK] unsigned char 
 40962 ;;  ff2             4  [STACK] unsigned char 
 40963 ;; Auto vars:     Size  Location     Type
 40964 ;;		None
 40965 ;; Return value:  Size  Location     Type
 40966 ;;		None               void
 40967 ;; Registers used:
 40968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 40969 ;; Tracked objects:
 40970 ;;		On entry : 0/1
 40971 ;;		On exit  : 0/0
 40972 ;;		Unchanged: 0/0
 40973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40978 ;;Total ram usage:        0 bytes
 40979 ;; Hardware stack levels used:    1
 40980 ;; Hardware stack levels required when called:   15
 40981 ;; This function calls:
 40982 ;;		Nothing
 40983 ;; This function is called by:
 40984 ;;		_main
 40985 ;;		_convert_dac_raw
 40986 ;;		_calc_ror_data
 40987 ;;		_check_day_time
 40988 ;;		_calc_bsoc
 40989 ;;		_efgtoa
 40990 ;; This function uses a reentrant model
 40991 ;;
 40992                           
 40993                           	psect	text149
 40994  01EDD2                     __ptext149:
 40995                           	opt callstack 0
 40996  01EDD2                     ___flge:
 40997                           	opt callstack 0
 40998                           
 40999                           ;stkvar	_ff1 @ sp[(0)+-4]
 41000                           
 41001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41002                           ;incstack = 0
 41003 ;; hardware stack exceeded
 41004  01EDD2  50E1               	movf	fsr1l,w,c
 41005  01EDD4  0FFC               	addlw	-4
 41006  01EDD6  6ED9               	movwf	fsr2l,c
 41007  01EDD8  50E2               	movf	fsr1h,w,c
 41008  01EDDA  6EDA               	movwf	fsr2h,c
 41009  01EDDC  0EFF               	movlw	255
 41010  01EDDE  22DA               	addwfc	fsr2h,f,c
 41011  01EDE0  0E00               	movlw	0
 41012  01EDE2  14DE               	andwf	postinc2,w,c
 41013  01EDE4  6E32               	movwf	(btemp+8)^0,c
 41014  01EDE6  0E00               	movlw	0
 41015  01EDE8  14DE               	andwf	postinc2,w,c
 41016  01EDEA  6E33               	movwf	(btemp+9)^0,c
 41017  01EDEC  0E80               	movlw	128
 41018  01EDEE  14DE               	andwf	postinc2,w,c
 41019  01EDF0  6E34               	movwf	(btemp+10)^0,c
 41020  01EDF2  0E7F               	movlw	127
 41021  01EDF4  14DE               	andwf	postinc2,w,c
 41022  01EDF6  6E35               	movwf	(btemp+11)^0,c
 41023  01EDF8  5032               	movf	(btemp+8)^0,w,c
 41024  01EDFA  1033               	iorwf	(btemp+9)^0,w,c
 41025  01EDFC  1034               	iorwf	(btemp+10)^0,w,c
 41026  01EDFE  1035               	iorwf	(btemp+11)^0,w,c
 41027  01EE00  A4D8               	btfss	status,2,c
 41028  01EE02  D008               	goto	l10825
 41029                           
 41030                           ;stkvar	_ff1 @ sp[(0)+-4]
 41031  01EE04  0EFC               	movlw	-4
 41032  01EE06  6AE3               	clrf	plusw1,c
 41033  01EE08  0EFD               	movlw	-3
 41034  01EE0A  6AE3               	clrf	plusw1,c
 41035  01EE0C  0EFE               	movlw	-2
 41036  01EE0E  6AE3               	clrf	plusw1,c
 41037  01EE10  0EFF               	movlw	-1
 41038  01EE12  6AE3               	clrf	plusw1,c
 41039  01EE14                     l10825:
 41040                           
 41041                           ;stkvar	_ff2 @ sp[(0)+-8]
 41042  01EE14  50E1               	movf	fsr1l,w,c
 41043  01EE16  0FF8               	addlw	-8
 41044  01EE18  6ED9               	movwf	fsr2l,c
 41045  01EE1A  50E2               	movf	fsr1h,w,c
 41046  01EE1C  6EDA               	movwf	fsr2h,c
 41047  01EE1E  0EFF               	movlw	255
 41048  01EE20  22DA               	addwfc	fsr2h,f,c
 41049  01EE22  0E00               	movlw	0
 41050  01EE24  14DE               	andwf	postinc2,w,c
 41051  01EE26  6E32               	movwf	(btemp+8)^0,c
 41052  01EE28  0E00               	movlw	0
 41053  01EE2A  14DE               	andwf	postinc2,w,c
 41054  01EE2C  6E33               	movwf	(btemp+9)^0,c
 41055  01EE2E  0E80               	movlw	128
 41056  01EE30  14DE               	andwf	postinc2,w,c
 41057  01EE32  6E34               	movwf	(btemp+10)^0,c
 41058  01EE34  0E7F               	movlw	127
 41059  01EE36  14DE               	andwf	postinc2,w,c
 41060  01EE38  6E35               	movwf	(btemp+11)^0,c
 41061  01EE3A  5032               	movf	(btemp+8)^0,w,c
 41062  01EE3C  1033               	iorwf	(btemp+9)^0,w,c
 41063  01EE3E  1034               	iorwf	(btemp+10)^0,w,c
 41064  01EE40  1035               	iorwf	(btemp+11)^0,w,c
 41065  01EE42  A4D8               	btfss	status,2,c
 41066  01EE44  D008               	goto	l2996
 41067                           
 41068                           ;stkvar	_ff2 @ sp[(0)+-8]
 41069  01EE46  0EF8               	movlw	-8
 41070  01EE48  6AE3               	clrf	plusw1,c
 41071  01EE4A  0EF9               	movlw	-7
 41072  01EE4C  6AE3               	clrf	plusw1,c
 41073  01EE4E  0EFA               	movlw	-6
 41074  01EE50  6AE3               	clrf	plusw1,c
 41075  01EE52  0EFB               	movlw	-5
 41076  01EE54  6AE3               	clrf	plusw1,c
 41077  01EE56                     l2996:
 41078                           
 41079                           ;stkvar	_ff1 @ sp[(0)+-4]
 41080  01EE56  0EFF               	movlw	-1
 41081  01EE58  AEE3               	btfss	plusw1,7,c
 41082  01EE5A  D024               	goto	l10831
 41083                           
 41084                           ;stkvar	_ff1 @ sp[(0)+-4]
 41085  01EE5C  0E00               	movlw	0
 41086  01EE5E  6E32               	movwf	(btemp+8)^0,c
 41087  01EE60  0E00               	movlw	0
 41088  01EE62  6E33               	movwf	(btemp+9)^0,c
 41089  01EE64  0E00               	movlw	0
 41090  01EE66  6E34               	movwf	(btemp+10)^0,c
 41091  01EE68  0E80               	movlw	128
 41092  01EE6A  6E35               	movwf	(btemp+11)^0,c
 41093  01EE6C  0EFC               	movlw	-4
 41094  01EE6E  50E3               	movf	plusw1,w,c
 41095  01EE70  5E32               	subwf	(btemp+8)^0,f,c
 41096  01EE72  0EFD               	movlw	-3
 41097  01EE74  50E3               	movf	plusw1,w,c
 41098  01EE76  5A33               	subwfb	(btemp+9)^0,f,c
 41099  01EE78  0EFE               	movlw	-2
 41100  01EE7A  50E3               	movf	plusw1,w,c
 41101  01EE7C  5A34               	subwfb	(btemp+10)^0,f,c
 41102  01EE7E  0EFF               	movlw	-1
 41103  01EE80  50E3               	movf	plusw1,w,c
 41104  01EE82  5A35               	subwfb	(btemp+11)^0,f,c
 41105                           
 41106                           ;stkvar	_ff1 @ sp[(0)+-4]
 41107  01EE84  0EFC               	movlw	-4
 41108  01EE86  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41109  01EE8C  0EFD               	movlw	-3
 41110  01EE8E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41111  01EE94  0EFE               	movlw	-2
 41112  01EE96  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41113  01EE9C  0EFF               	movlw	-1
 41114  01EE9E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41115  01EEA4                     l10831:
 41116                           
 41117                           ;stkvar	_ff2 @ sp[(0)+-8]
 41118  01EEA4  0EFB               	movlw	-5
 41119  01EEA6  AEE3               	btfss	plusw1,7,c
 41120  01EEA8  D024               	goto	l10835
 41121                           
 41122                           ;stkvar	_ff2 @ sp[(0)+-8]
 41123  01EEAA  0E00               	movlw	0
 41124  01EEAC  6E32               	movwf	(btemp+8)^0,c
 41125  01EEAE  0E00               	movlw	0
 41126  01EEB0  6E33               	movwf	(btemp+9)^0,c
 41127  01EEB2  0E00               	movlw	0
 41128  01EEB4  6E34               	movwf	(btemp+10)^0,c
 41129  01EEB6  0E80               	movlw	128
 41130  01EEB8  6E35               	movwf	(btemp+11)^0,c
 41131  01EEBA  0EF8               	movlw	-8
 41132  01EEBC  50E3               	movf	plusw1,w,c
 41133  01EEBE  5E32               	subwf	(btemp+8)^0,f,c
 41134  01EEC0  0EF9               	movlw	-7
 41135  01EEC2  50E3               	movf	plusw1,w,c
 41136  01EEC4  5A33               	subwfb	(btemp+9)^0,f,c
 41137  01EEC6  0EFA               	movlw	-6
 41138  01EEC8  50E3               	movf	plusw1,w,c
 41139  01EECA  5A34               	subwfb	(btemp+10)^0,f,c
 41140  01EECC  0EFB               	movlw	-5
 41141  01EECE  50E3               	movf	plusw1,w,c
 41142  01EED0  5A35               	subwfb	(btemp+11)^0,f,c
 41143                           
 41144                           ;stkvar	_ff2 @ sp[(0)+-8]
 41145  01EED2  0EF8               	movlw	-8
 41146  01EED4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41147  01EEDA  0EF9               	movlw	-7
 41148  01EEDC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41149  01EEE2  0EFA               	movlw	-6
 41150  01EEE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41151  01EEEA  0EFB               	movlw	-5
 41152  01EEEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41153  01EEF2                     l10835:
 41154                           
 41155                           ;stkvar	_ff1 @ sp[(0)+-4]
 41156  01EEF2  0EFF               	movlw	-1
 41157  01EEF4  7EE3               	btg	plusw1,7,c
 41158                           
 41159                           ;stkvar	_ff2 @ sp[(0)+-8]
 41160  01EEF6  0EFB               	movlw	-5
 41161  01EEF8  7EE3               	btg	plusw1,7,c
 41162                           
 41163                           ;stkvar	_ff2 @ sp[(0)+-8]
 41164                           ;stkvar	_ff1 @ sp[(0)+-4]
 41165  01EEFA  50E1               	movf	fsr1l,w,c
 41166  01EEFC  0FFC               	addlw	-4
 41167  01EEFE  6ED9               	movwf	fsr2l,c
 41168  01EF00  50E2               	movf	fsr1h,w,c
 41169  01EF02  6EDA               	movwf	fsr2h,c
 41170  01EF04  0EFF               	movlw	255
 41171  01EF06  22DA               	addwfc	fsr2h,f,c
 41172  01EF08  0EF8               	movlw	-8
 41173  01EF0A  50E3               	movf	plusw1,w,c
 41174  01EF0C  5CDE               	subwf	postinc2,w,c
 41175  01EF0E  0EF9               	movlw	-7
 41176  01EF10  50E3               	movf	plusw1,w,c
 41177  01EF12  58DE               	subwfb	postinc2,w,c
 41178  01EF14  0EFA               	movlw	-6
 41179  01EF16  50E3               	movf	plusw1,w,c
 41180  01EF18  58DE               	subwfb	postinc2,w,c
 41181  01EF1A  0EFB               	movlw	-5
 41182  01EF1C  50E3               	movf	plusw1,w,c
 41183  01EF1E  58DE               	subwfb	postinc2,w,c
 41184  01EF20  B0D8               	btfsc	status,0,c
 41185  01EF22  D002               	goto	l10843
 41186  01EF24  902A               	bcf	btemp& (0+255),0,c
 41187  01EF26  D001               	goto	l3003
 41188  01EF28                     l10843:
 41189  01EF28  802A               	bsf	btemp& (0+255),0,c
 41190  01EF2A                     l3003:
 41191                           
 41192                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 41193  01EF2A  0EF8               	movlw	248
 41194  01EF2C  26E1               	addwf	fsr1l,f,c
 41195  01EF2E  0EFF               	movlw	255
 41196  01EF30  22E2               	addwfc	fsr1h,f,c
 41197  01EF32  0012               	return		;funcret
 41198  01EF34                     __end_of___flge:
 41199                           	opt callstack 0
 41200                           
 41201 ;; *************** function _calc_model_data *****************
 41202 ;; Defined at:
 41203 ;;		line 67 in file "mbmc.c"
 41204 ;; Parameters:    Size  Location     Type
 41205 ;;		None
 41206 ;; Auto vars:     Size  Location     Type
 41207 ;;		None
 41208 ;; Return value:  Size  Location     Type
 41209 ;;                  1  [STACK] void 
 41210 ;; Registers used:
 41211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41212 ;; Tracked objects:
 41213 ;;		On entry : 3F/0
 41214 ;;		On exit  : 3F/39
 41215 ;;		Unchanged: 0/0
 41216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41221 ;;Total ram usage:        0 bytes
 41222 ;; Hardware stack levels used:    1
 41223 ;; Hardware stack levels required when called:   18
 41224 ;; This function calls:
 41225 ;;		___fladd
 41226 ;;		___flmul
 41227 ;;		___flsub
 41228 ;;		_lp_filter
 41229 ;;		_start_bsoc
 41230 ;;		_stop_bsoc
 41231 ;; This function is called by:
 41232 ;;		_main
 41233 ;; This function uses a reentrant model
 41234 ;;
 41235                           
 41236                           	psect	text150
 41237  019B3C                     __ptext150:
 41238                           	opt callstack 0
 41239  019B3C                     _calc_model_data:
 41240                           	opt callstack 12
 41241                           
 41242                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 41243                           
 41244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41245                           ;incstack = 0
 41246  019B3C  ECF6  F017         	call	_stop_bsoc	;wreg free
 41247                           
 41248                           ; BSR set to: 57
 41249                           ;mbmc.c: 72:  if (!V.calib) {
 41250  019B40  0102               	movlb	2	; () banked
 41251  019B42  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 41252  019B44  A4D8               	btfss	status,2,c
 41253  019B46  D220               	goto	l14631
 41254                           
 41255                           ; BSR set to: 2
 41256                           ;mbmc.c: 73:   C.updates++;
 41257  019B48  EE22  F23B         	lfsr	2,_C+316	;volatile
 41258  019B4C  2ADE               	incf	postinc2,f,c
 41259  019B4E  0E00               	movlw	0
 41260  019B50  22DE               	addwfc	postinc2,f,c
 41261  019B52  22DE               	addwfc	postinc2,f,c
 41262  019B54  22DE               	addwfc	postinc2,f,c
 41263                           
 41264                           ; BSR set to: 2
 41265                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 41266  019B56  EE22  F0FF         	lfsr	2,_C
 41267  019B5A  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 41268  019B60  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 41269  019B66  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 41270  019B6C  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 41271                           
 41272                           ; BSR set to: 2
 41273                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 41274  019B72  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 41275  019B78  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 41276  019B7E  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 41277  019B84  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 41278  019B8A  EE22  F143         	lfsr	2,_C+68	;volatile
 41279  019B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 41280  019B94  006F FF7B FFE6     	movff	postinc2,postinc1
 41281  019B9A  006F FF7B FFE6     	movff	postinc2,postinc1
 41282  019BA0  006F FF7B FFE6     	movff	postinc2,postinc1
 41283  019BA6  ECA3  F011         	call	___flsub	;wreg free
 41284  019BAA  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 41285  019BB0  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 41286  019BB6  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 41287  019BBC  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 41288                           
 41289                           ;mbmc.c: 76:   bcror = C.c_bat;
 41290  019BC2  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 41291  019BC6  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 41292  019BCA  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 41293  019BCE  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 41294                           
 41295                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 41296  019BD2  EE22  F103         	lfsr	2,_C+4	;volatile
 41297  019BD6  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 41298  019BDC  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 41299  019BE2  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 41300  019BE8  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 41301                           
 41302                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 41303  019BEE  EE22  F10F         	lfsr	2,_C+16	;volatile
 41304  019BF2  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 41305  019BF8  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 41306  019BFE  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 41307  019C04  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 41308                           
 41309                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 41310  019C0A  EE22  F133         	lfsr	2,_C+52	;volatile
 41311  019C0E  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 41312  019C14  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 41313  019C1A  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 41314  019C20  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 41315                           
 41316                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 41317  019C26  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 41318  019C2C  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 41319  019C32  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 41320  019C38  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 41321  019C3E  EE22  F153         	lfsr	2,_C+84	;volatile
 41322  019C42  006F FF7B FFE6     	movff	postinc2,postinc1
 41323  019C48  006F FF7B FFE6     	movff	postinc2,postinc1
 41324  019C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 41325  019C54  006F FF7B FFE6     	movff	postinc2,postinc1
 41326  019C5A  ECA3  F011         	call	___flsub	;wreg free
 41327  019C5E  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 41328  019C64  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 41329  019C6A  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 41330  019C70  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 41331                           
 41332                           ;mbmc.c: 81:   bvror = C.v_bat;
 41333  019C76  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 41334  019C7A  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 41335  019C7E  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 41336  019C82  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 41337                           
 41338                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 41339  019C86  EE22  F113         	lfsr	2,_C+20	;volatile
 41340  019C8A  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 41341  019C90  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 41342  019C96  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 41343  019C9C  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 41344                           
 41345                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 41346  019CA2  EE22  F107         	lfsr	2,_C+8	;volatile
 41347  019CA6  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 41348  019CAC  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 41349  019CB2  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 41350  019CB8  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 41351                           
 41352                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 41353  019CBE  EE22  F12F         	lfsr	2,_C+48	;volatile
 41354  019CC2  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 41355  019CC8  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 41356  019CCE  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 41357  019CD4  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 41358                           
 41359                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 41360  019CDA  0E01               	movlw	1
 41361  019CDC  6EE6               	movwf	postinc1,c
 41362  019CDE  0E10               	movlw	16
 41363  019CE0  6EE6               	movwf	postinc1,c
 41364  019CE2  EE22  F0FF         	lfsr	2,_C
 41365  019CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 41366  019CEC  006F FF7B FFE6     	movff	postinc2,postinc1
 41367  019CF2  006F FF7B FFE6     	movff	postinc2,postinc1
 41368  019CF8  006F FF7B FFE6     	movff	postinc2,postinc1
 41369  019CFE  EE22  F103         	lfsr	2,_C+4	;volatile
 41370  019D02  006F FF7B FFE6     	movff	postinc2,postinc1
 41371  019D08  006F FF7B FFE6     	movff	postinc2,postinc1
 41372  019D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 41373  019D14  006F FF7B FFE6     	movff	postinc2,postinc1
 41374  019D1A  ECA3  F011         	call	___flsub	;wreg free
 41375  019D1E  0060  F0AB  FFE6   	movff	btemp,postinc1
 41376  019D24  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41377  019D2A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41378  019D30  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41379  019D36  EC36  F0EF         	call	_lp_filter	;wreg free
 41380  019D3A  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 41381  019D40  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 41382  019D46  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 41383  019D4C  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 41384                           
 41385                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 41386  019D52  0E01               	movlw	1
 41387  019D54  6EE6               	movwf	postinc1,c
 41388  019D56  0E11               	movlw	17
 41389  019D58  6EE6               	movwf	postinc1,c
 41390  019D5A  EE22  F153         	lfsr	2,_C+84	;volatile
 41391  019D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 41392  019D64  006F FF7B FFE6     	movff	postinc2,postinc1
 41393  019D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 41394  019D70  006F FF7B FFE6     	movff	postinc2,postinc1
 41395  019D76  EE22  F13F         	lfsr	2,_C+64	;volatile
 41396  019D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 41397  019D80  006F FF7B FFE6     	movff	postinc2,postinc1
 41398  019D86  006F FF7B FFE6     	movff	postinc2,postinc1
 41399  019D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 41400  019D92  EC67  F0B8         	call	___flmul	;wreg free
 41401  019D96  0060  F0AB  FFE6   	movff	btemp,postinc1
 41402  019D9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41403  019DA2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41404  019DA8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41405  019DAE  EC36  F0EF         	call	_lp_filter	;wreg free
 41406  019DB2  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 41407  019DB8  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 41408  019DBE  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 41409  019DC4  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 41410                           
 41411                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 41412  019DCA  0E01               	movlw	1
 41413  019DCC  6EE6               	movwf	postinc1,c
 41414  019DCE  0E12               	movlw	18
 41415  019DD0  6EE6               	movwf	postinc1,c
 41416  019DD2  EE22  F14F         	lfsr	2,_C+80	;volatile
 41417  019DD6  006F FF7B FFE6     	movff	postinc2,postinc1
 41418  019DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 41419  019DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 41420  019DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 41421  019DEE  EE22  F147         	lfsr	2,_C+72	;volatile
 41422  019DF2  006F FF7B FFE6     	movff	postinc2,postinc1
 41423  019DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 41424  019DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 41425  019E04  006F FF7B FFE6     	movff	postinc2,postinc1
 41426  019E0A  EC67  F0B8         	call	___flmul	;wreg free
 41427  019E0E  0060  F0AB  FFE6   	movff	btemp,postinc1
 41428  019E14  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41429  019E1A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41430  019E20  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41431  019E26  EC36  F0EF         	call	_lp_filter	;wreg free
 41432  019E2A  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 41433  019E30  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 41434  019E36  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 41435  019E3C  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 41436                           
 41437                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 41438  019E42  0E01               	movlw	1
 41439  019E44  6EE6               	movwf	postinc1,c
 41440  019E46  0E13               	movlw	19
 41441  019E48  6EE6               	movwf	postinc1,c
 41442  019E4A  0E00               	movlw	0
 41443  019E4C  6EE6               	movwf	postinc1,c
 41444  019E4E  0E00               	movlw	0
 41445  019E50  6EE6               	movwf	postinc1,c
 41446  019E52  0E60               	movlw	96
 41447  019E54  6EE6               	movwf	postinc1,c
 41448  019E56  0EC1               	movlw	193
 41449  019E58  6EE6               	movwf	postinc1,c
 41450  019E5A  EE22  F163         	lfsr	2,_C+100	;volatile
 41451  019E5E  006F FF7B FFE6     	movff	postinc2,postinc1
 41452  019E64  006F FF7B FFE6     	movff	postinc2,postinc1
 41453  019E6A  006F FF7B FFE6     	movff	postinc2,postinc1
 41454  019E70  006F FF7B FFE6     	movff	postinc2,postinc1
 41455  019E76  EE22  F13F         	lfsr	2,_C+64	;volatile
 41456  019E7A  006F FF7B FFE6     	movff	postinc2,postinc1
 41457  019E80  006F FF7B FFE6     	movff	postinc2,postinc1
 41458  019E86  006F FF7B FFE6     	movff	postinc2,postinc1
 41459  019E8C  006F FF7B FFE6     	movff	postinc2,postinc1
 41460  019E92  EC67  F0B8         	call	___flmul	;wreg free
 41461  019E96  0060  F0AB  FFE6   	movff	btemp,postinc1
 41462  019E9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41463  019EA2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41464  019EA8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41465  019EAE  EC7C  F0BC         	call	___fladd	;wreg free
 41466  019EB2  0060  F0AB  FFE6   	movff	btemp,postinc1
 41467  019EB8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41468  019EBE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41469  019EC4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41470  019ECA  EC36  F0EF         	call	_lp_filter	;wreg free
 41471  019ECE  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 41472  019ED4  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 41473  019EDA  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 41474  019EE0  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 41475                           
 41476                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 41477  019EE6  0E01               	movlw	1
 41478  019EE8  6EE6               	movwf	postinc1,c
 41479  019EEA  0E14               	movlw	20
 41480  019EEC  6EE6               	movwf	postinc1,c
 41481  019EEE  EE22  F153         	lfsr	2,_C+84	;volatile
 41482  019EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 41483  019EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 41484  019EFE  006F FF7B FFE6     	movff	postinc2,postinc1
 41485  019F04  006F FF7B FFE6     	movff	postinc2,postinc1
 41486  019F0A  EE22  F143         	lfsr	2,_C+68	;volatile
 41487  019F0E  006F FF7B FFE6     	movff	postinc2,postinc1
 41488  019F14  006F FF7B FFE6     	movff	postinc2,postinc1
 41489  019F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 41490  019F20  006F FF7B FFE6     	movff	postinc2,postinc1
 41491  019F26  EC67  F0B8         	call	___flmul	;wreg free
 41492  019F2A  0060  F0AB  FFE6   	movff	btemp,postinc1
 41493  019F30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41494  019F36  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41495  019F3C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41496  019F42  EC36  F0EF         	call	_lp_filter	;wreg free
 41497  019F46  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 41498  019F4C  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 41499  019F52  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 41500  019F58  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 41501                           
 41502                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 41503  019F5E  EE22  F177         	lfsr	2,_C+120	;volatile
 41504  019F62  0E03               	movlw	3
 41505  019F64  AEDB               	btfss	plusw2,7,c
 41506  019F66  D010               	goto	l14631
 41507                           
 41508                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 41509  019F68  0E17               	movlw	23
 41510  019F6A  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 41511  019F70  0EB7               	movlw	183
 41512  019F72  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 41513  019F78  0ED1               	movlw	209
 41514  019F7A  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 41515  019F80  0E38               	movlw	56
 41516  019F82  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 41517  019F88                     l14631:
 41518                           
 41519                           ;mbmc.c: 96:  start_bsoc();
 41520  019F88  EC6B  F016         	call	_start_bsoc	;wreg free
 41521                           
 41522                           ; BSR set to: 57
 41523                           ;mbmc.c: 97:  C.update = 1;
 41524  019F8C  0E01               	movlw	1
 41525  019F8E  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 41526                           
 41527                           ; BSR set to: 57
 41528                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 41529  019F94  0012               	return		;funcret
 41530  019F96                     __end_of_calc_model_data:
 41531                           	opt callstack 0
 41532                           
 41533 ;; *************** function _stop_bsoc *****************
 41534 ;; Defined at:
 41535 ;;		line 130 in file "bsoc.c"
 41536 ;; Parameters:    Size  Location     Type
 41537 ;;		None
 41538 ;; Auto vars:     Size  Location     Type
 41539 ;;		None
 41540 ;; Return value:  Size  Location     Type
 41541 ;;                  1  [STACK] void 
 41542 ;; Registers used:
 41543 ;;		None
 41544 ;; Tracked objects:
 41545 ;;		On entry : 0/1
 41546 ;;		On exit  : 3F/39
 41547 ;;		Unchanged: 0/0
 41548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41553 ;;Total ram usage:        0 bytes
 41554 ;; Hardware stack levels used:    1
 41555 ;; Hardware stack levels required when called:   15
 41556 ;; This function calls:
 41557 ;;		Nothing
 41558 ;; This function is called by:
 41559 ;;		_calc_model_data
 41560 ;;		_load_hist_data
 41561 ;; This function uses a reentrant model
 41562 ;;
 41563                           
 41564                           	psect	text151
 41565  002FEC                     __ptext151:
 41566                           	opt callstack 0
 41567  002FEC                     _stop_bsoc:
 41568                           	opt callstack 14
 41569                           
 41570                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 41571                           
 41572                           ; BSR set to: 57
 41573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41574                           ;incstack = 0
 41575  002FEC  0139               	movlb	57	; () banked
 41576  002FEE  9D96               	bcf	150,6,b	;volatile
 41577                           
 41578                           ; BSR set to: 57
 41579                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 41580  002FF0  0012               	return		;funcret
 41581  002FF2                     __end_of_stop_bsoc:
 41582                           	opt callstack 0
 41583                           
 41584 ;; *************** function _start_bsoc *****************
 41585 ;; Defined at:
 41586 ;;		line 121 in file "bsoc.c"
 41587 ;; Parameters:    Size  Location     Type
 41588 ;;		None
 41589 ;; Auto vars:     Size  Location     Type
 41590 ;;		None
 41591 ;; Return value:  Size  Location     Type
 41592 ;;                  1  [STACK] void 
 41593 ;; Registers used:
 41594 ;;		wreg, status,2, status,0, btemp+11
 41595 ;; Tracked objects:
 41596 ;;		On entry : 0/39
 41597 ;;		On exit  : 3F/39
 41598 ;;		Unchanged: 0/0
 41599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41604 ;;Total ram usage:        0 bytes
 41605 ;; Hardware stack levels used:    1
 41606 ;; Hardware stack levels required when called:   15
 41607 ;; This function calls:
 41608 ;;		Nothing
 41609 ;; This function is called by:
 41610 ;;		_calc_model_data
 41611 ;;		_load_hist_data
 41612 ;; This function uses a reentrant model
 41613 ;;
 41614                           
 41615                           	psect	text152
 41616  002CD6                     __ptext152:
 41617                           	opt callstack 0
 41618  002CD6                     _start_bsoc:
 41619                           	opt callstack 14
 41620                           
 41621                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 41622                           
 41623                           ; BSR set to: 57
 41624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41625                           ;incstack = 0
 41626  002CD6  0139               	movlb	57	; () banked
 41627  002CD8  8D96               	bsf	150,6,b	;volatile
 41628                           
 41629                           ; BSR set to: 57
 41630  002CDA  A4BE               	btfss	190,2,c	;volatile
 41631  002CDC  D002               	goto	u12900
 41632  002CDE  0E01               	movlw	1
 41633  002CE0  D001               	goto	u12906
 41634  002CE2                     u12900:
 41635  002CE2  0E00               	movlw	0
 41636  002CE4                     u12906:
 41637  002CE4  0AFF               	xorlw	255
 41638  002CE6  6E35               	movwf	(btemp+11)^0,c
 41639  002CE8  4635               	rlncf	(btemp+11)^0,f,c
 41640  002CEA  4635               	rlncf	(btemp+11)^0,f,c
 41641  002CEC  50BE               	movf	190,w,c	;volatile
 41642  002CEE  1835               	xorwf	(btemp+11)^0,w,c
 41643  002CF0  0BFB               	andlw	-5
 41644  002CF2  1835               	xorwf	(btemp+11)^0,w,c
 41645  002CF4  6EBE               	movwf	190,c	;volatile
 41646                           
 41647                           ; BSR set to: 57
 41648                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 41649  002CF6  0012               	return		;funcret
 41650  002CF8                     __end_of_start_bsoc:
 41651                           	opt callstack 0
 41652                           
 41653 ;; *************** function _lp_filter *****************
 41654 ;; Defined at:
 41655 ;;		line 29 in file "mbmc.c"
 41656 ;; Parameters:    Size  Location     Type
 41657 ;;  new             4  [STACK] const float 
 41658 ;;  bn              1  [STACK] const unsigned char 
 41659 ;;  slow            1  [STACK] const char 
 41660 ;; Auto vars:     Size  Location     Type
 41661 ;;  lp_speed        4  [STACK] float 
 41662 ;; Return value:  Size  Location     Type
 41663 ;;                  4  [STACK] float 
 41664 ;; Registers used:
 41665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41666 ;; Tracked objects:
 41667 ;;		On entry : 0/2
 41668 ;;		On exit  : 0/0
 41669 ;;		Unchanged: 0/0
 41670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41675 ;;Total ram usage:        0 bytes
 41676 ;; Hardware stack levels used:    1
 41677 ;; Hardware stack levels required when called:   17
 41678 ;; This function calls:
 41679 ;;		___fladd
 41680 ;;		___flmul
 41681 ;;		___flsub
 41682 ;; This function is called by:
 41683 ;;		_main
 41684 ;;		_convert_adc_data
 41685 ;;		_calc_model_data
 41686 ;; This function uses a reentrant model
 41687 ;;
 41688                           
 41689                           	psect	text153
 41690  01DE6C                     __ptext153:
 41691                           	opt callstack 0
 41692  01DE6C                     _lp_filter:
 41693                           	opt callstack 0
 41694                           
 41695                           ; BSR set to: 57
 41696                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41697  01DE6C  52E6               	movf	postinc1,f,c
 41698  01DE6E  52E6               	movf	postinc1,f,c
 41699  01DE70  52E6               	movf	postinc1,f,c
 41700  01DE72  52E6               	movf	postinc1,f,c
 41701                           
 41702                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 41703                           ;stkvar	_bn @ sp[(-4)+-5]
 41704                           
 41705                           ;incstack = 0
 41706  01DE74  0EF7               	movlw	-9
 41707  01DE76  006F FF8C  F02A    	movff	plusw1,btemp
 41708  01DE7C  0E14               	movlw	20
 41709  01DE7E  642A               	cpfsgt	btemp^0,c
 41710  01DE80  D011               	goto	l13631
 41711  01DE82                     u12680:
 41712                           
 41713                           ;mbmc.c: 35:   return new;
 41714                           ;stkvar	_new @ sp[(-4)+-4]
 41715  01DE82  0EF8               	movlw	-8
 41716  01DE84  006F FF8C  F02A    	movff	plusw1,btemp
 41717  01DE8A  0EF9               	movlw	-7
 41718  01DE8C  006F FF8C  F02B    	movff	plusw1,btemp+1
 41719  01DE92  0EFA               	movlw	-6
 41720  01DE94  006F FF8C  F02C    	movff	plusw1,btemp+2
 41721  01DE9A  0EFB               	movlw	-5
 41722  01DE9C  006F FF8C  F02D    	movff	plusw1,btemp+3
 41723  01DEA2  D0BD               	goto	l2148
 41724  01DEA4                     l13631:
 41725                           
 41726                           ;mbmc.c: 37:  if (slow == (-1)) {
 41727                           ;stkvar	_slow @ sp[(-4)+-6]
 41728  01DEA4  0EF6               	movlw	-10
 41729  01DEA6  28E3               	incf	plusw1,w,c
 41730  01DEA8  A4D8               	btfss	status,2,c
 41731  01DEAA  D012               	goto	l13639
 41732                           
 41733                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 41734                           ;stkvar	_bn @ sp[(-4)+-5]
 41735  01DEAC  0EF7               	movlw	-9
 41736  01DEAE  50E3               	movf	plusw1,w,c
 41737  01DEB0  0D04               	mullw	4
 41738  01DEB2  0E00               	movlw	low lp_filter@smooth
 41739  01DEB4  24F3               	addwf	243,w,c
 41740  01DEB6  6ED9               	movwf	fsr2l,c
 41741  01DEB8  0E03               	movlw	high lp_filter@smooth
 41742  01DEBA  20F4               	addwfc	prodh,w,c
 41743  01DEBC  6EDA               	movwf	fsr2h,c
 41744  01DEBE  0E00               	movlw	0
 41745  01DEC0  6EDE               	movwf	postinc2,c
 41746  01DEC2  0E00               	movlw	0
 41747  01DEC4  6EDE               	movwf	postinc2,c
 41748  01DEC6  0E00               	movlw	0
 41749  01DEC8  6EDE               	movwf	postinc2,c
 41750  01DECA  0E00               	movlw	0
 41751  01DECC  6EDD               	movwf	postdec2,c
 41752  01DECE  D7D9               	goto	u12680
 41753  01DED0                     l13639:
 41754                           
 41755                           ;mbmc.c: 42:  if (slow) {
 41756                           ;stkvar	_slow @ sp[(-4)+-6]
 41757  01DED0  0EF6               	movlw	-10
 41758  01DED2  50E3               	movf	plusw1,w,c
 41759  01DED4  B4D8               	btfsc	status,2,c
 41760  01DED6  D006               	goto	l13643
 41761                           
 41762                           ;mbmc.c: 43:   lp_speed = 0.033;
 41763  01DED8  0E02               	movlw	2
 41764  01DEDA  6E32               	movwf	(btemp+8)^0,c
 41765  01DEDC  0E2B               	movlw	43
 41766  01DEDE  6E33               	movwf	(btemp+9)^0,c
 41767  01DEE0  0E07               	movlw	7
 41768  01DEE2  D005               	goto	L47
 41769  01DEE4                     l13643:
 41770                           
 41771                           ;mbmc.c: 45:   lp_speed = 0.066;
 41772  01DEE4  0E02               	movlw	2
 41773  01DEE6  6E32               	movwf	(btemp+8)^0,c
 41774  01DEE8  0E2B               	movlw	43
 41775  01DEEA  6E33               	movwf	(btemp+9)^0,c
 41776  01DEEC  0E87               	movlw	135
 41777  01DEEE                     L47:
 41778  01DEEE  6E34               	movwf	(btemp+10)^0,c
 41779  01DEF0  0E3D               	movlw	61
 41780  01DEF2  6E35               	movwf	(btemp+11)^0,c
 41781                           
 41782                           ;stkvar	_lp_speed @ sp[(-4)+0]
 41783  01DEF4  0EFC               	movlw	-4
 41784  01DEF6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41785  01DEFC  0EFD               	movlw	-3
 41786  01DEFE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41787  01DF04  0EFE               	movlw	-2
 41788  01DF06  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41789  01DF0C  0EFF               	movlw	-1
 41790  01DF0E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41791                           
 41792                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 41793                           ;stkvar	_bn @ sp[(-4)+-5]
 41794  01DF14  0EF7               	movlw	-9
 41795  01DF16  50E3               	movf	plusw1,w,c
 41796  01DF18  0D04               	mullw	4
 41797  01DF1A  0E00               	movlw	low lp_filter@smooth
 41798  01DF1C  24F3               	addwf	243,w,c
 41799  01DF1E  6ED9               	movwf	fsr2l,c
 41800  01DF20  0E03               	movlw	high lp_filter@smooth
 41801  01DF22  20F4               	addwfc	prodh,w,c
 41802  01DF24  6EDA               	movwf	fsr2h,c
 41803  01DF26  006F FF7B FFE6     	movff	postinc2,postinc1
 41804  01DF2C  006F FF7B FFE6     	movff	postinc2,postinc1
 41805  01DF32  006F FF7B FFE6     	movff	postinc2,postinc1
 41806  01DF38  006F FF7B FFE6     	movff	postinc2,postinc1
 41807                           
 41808                           ;stkvar	_lp_speed @ sp[(-8)+0]
 41809  01DF3E  0EF8               	movlw	-8
 41810  01DF40  006F FF8F FFE6     	movff	plusw1,postinc1
 41811  01DF46  006F FF8F FFE6     	movff	plusw1,postinc1
 41812  01DF4C  006F FF8F FFE6     	movff	plusw1,postinc1
 41813  01DF52  006F FF8F FFE6     	movff	plusw1,postinc1
 41814                           
 41815                           ;stkvar	_bn @ sp[(-12)+-5]
 41816  01DF58  0EEF               	movlw	-17
 41817  01DF5A  50E3               	movf	plusw1,w,c
 41818  01DF5C  0D04               	mullw	4
 41819  01DF5E  0E00               	movlw	low lp_filter@smooth
 41820  01DF60  24F3               	addwf	243,w,c
 41821  01DF62  6ED9               	movwf	fsr2l,c
 41822  01DF64  0E03               	movlw	high lp_filter@smooth
 41823  01DF66  20F4               	addwfc	prodh,w,c
 41824  01DF68  6EDA               	movwf	fsr2h,c
 41825  01DF6A  006F FF7B FFE6     	movff	postinc2,postinc1
 41826  01DF70  006F FF7B FFE6     	movff	postinc2,postinc1
 41827  01DF76  006F FF7B FFE6     	movff	postinc2,postinc1
 41828  01DF7C  006F FF7B FFE6     	movff	postinc2,postinc1
 41829                           
 41830                           ;stkvar	_new @ sp[(-16)+-4]
 41831  01DF82  0EEC               	movlw	-20
 41832  01DF84  006F FF8F FFE6     	movff	plusw1,postinc1
 41833  01DF8A  006F FF8F FFE6     	movff	plusw1,postinc1
 41834  01DF90  006F FF8F FFE6     	movff	plusw1,postinc1
 41835  01DF96  006F FF8F FFE6     	movff	plusw1,postinc1
 41836  01DF9C  ECA3  F011         	call	___flsub	;wreg free
 41837  01DFA0  0060  F0AB  FFE6   	movff	btemp,postinc1
 41838  01DFA6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41839  01DFAC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41840  01DFB2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41841  01DFB8  EC67  F0B8         	call	___flmul	;wreg free
 41842  01DFBC  0060  F0AB  FFE6   	movff	btemp,postinc1
 41843  01DFC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41844  01DFC8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41845  01DFCE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41846  01DFD4  EC7C  F0BC         	call	___fladd	;wreg free
 41847                           
 41848                           ;stkvar	_bn @ sp[(-4)+-5]
 41849  01DFD8  0EF7               	movlw	-9
 41850  01DFDA  50E3               	movf	plusw1,w,c
 41851  01DFDC  0D04               	mullw	4
 41852  01DFDE  0E00               	movlw	low lp_filter@smooth
 41853  01DFE0  24F3               	addwf	243,w,c
 41854  01DFE2  6ED9               	movwf	fsr2l,c
 41855  01DFE4  0E03               	movlw	high lp_filter@smooth
 41856  01DFE6  20F4               	addwfc	prodh,w,c
 41857  01DFE8  6EDA               	movwf	fsr2h,c
 41858  01DFEA  0060  F0AB  FFDE   	movff	btemp,postinc2
 41859  01DFF0  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 41860  01DFF6  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 41861  01DFFC  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 41862  01E002  52DD               	movf	postdec2,f,c
 41863  01E004  52DD               	movf	postdec2,f,c
 41864  01E006  006F FF78  F02A    	movff	postinc2,btemp
 41865  01E00C  006F FF78  F02B    	movff	postinc2,btemp+1
 41866  01E012  006F FF78  F02C    	movff	postinc2,btemp+2
 41867  01E018  006F FF78  F02D    	movff	postinc2,btemp+3
 41868  01E01E                     l2148:
 41869                           
 41870                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 41871  01E01E  0EF6               	movlw	246
 41872  01E020  26E1               	addwf	fsr1l,f,c
 41873  01E022  0EFF               	movlw	255
 41874  01E024  22E2               	addwfc	fsr1h,f,c
 41875  01E026  0012               	return		;funcret
 41876  01E028                     __end_of_lp_filter:
 41877                           	opt callstack 0
 41878                           
 41879 ;; *************** function ___flsub *****************
 41880 ;; Defined at:
 41881 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41882 ;; Parameters:    Size  Location     Type
 41883 ;;  b               4  [STACK] float 
 41884 ;;  a               4  [STACK] float 
 41885 ;; Auto vars:     Size  Location     Type
 41886 ;;		None
 41887 ;; Return value:  Size  Location     Type
 41888 ;;                  4  [STACK] float 
 41889 ;; Registers used:
 41890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41891 ;; Tracked objects:
 41892 ;;		On entry : 0/0
 41893 ;;		On exit  : 0/0
 41894 ;;		Unchanged: 0/0
 41895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41900 ;;Total ram usage:        0 bytes
 41901 ;; Hardware stack levels used:    1
 41902 ;; Hardware stack levels required when called:   16
 41903 ;; This function calls:
 41904 ;;		___fladd
 41905 ;; This function is called by:
 41906 ;;		_conv_raw_result
 41907 ;;		_lp_filter
 41908 ;;		_calc_model_data
 41909 ;;		_calc_ror_data
 41910 ;;		_esr_check
 41911 ;;		_efgtoa
 41912 ;; This function uses a reentrant model
 41913 ;;
 41914                           
 41915                           	psect	text154
 41916  002346                     __ptext154:
 41917                           	opt callstack 0
 41918  002346                     ___flsub:
 41919                           	opt callstack 0
 41920                           
 41921                           ;stkvar	_a @ sp[(0)+-8]
 41922                           
 41923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41924                           ;incstack = 0
 41925 ;; hardware stack exceeded
 41926  002346  0EFB               	movlw	-5
 41927  002348  7EE3               	btg	plusw1,7,c
 41928                           
 41929                           ;stkvar	_a @ sp[(0)+-8]
 41930  00234A  0EF8               	movlw	-8
 41931  00234C  006F FF8F FFE6     	movff	plusw1,postinc1
 41932  002352  006F FF8F FFE6     	movff	plusw1,postinc1
 41933  002358  006F FF8F FFE6     	movff	plusw1,postinc1
 41934  00235E  006F FF8F FFE6     	movff	plusw1,postinc1
 41935                           
 41936                           ;stkvar	_b @ sp[(-4)+-4]
 41937  002364  0EF8               	movlw	-8
 41938  002366  006F FF8F FFE6     	movff	plusw1,postinc1
 41939  00236C  006F FF8F FFE6     	movff	plusw1,postinc1
 41940  002372  006F FF8F FFE6     	movff	plusw1,postinc1
 41941  002378  006F FF8F FFE6     	movff	plusw1,postinc1
 41942  00237E  EC7C  F0BC         	call	___fladd	;wreg free
 41943                           
 41944                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41945  002382  0EF8               	movlw	248
 41946  002384  26E1               	addwf	fsr1l,f,c
 41947  002386  0EFF               	movlw	255
 41948  002388  22E2               	addwfc	fsr1h,f,c
 41949  00238A  0012               	return		;funcret
 41950  00238C                     __end_of___flsub:
 41951                           	opt callstack 0
 41952                           
 41953 ;; *************** function ___fladd *****************
 41954 ;; Defined at:
 41955 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41956 ;; Parameters:    Size  Location     Type
 41957 ;;  b               4  [STACK] float 
 41958 ;;  a               4  [STACK] float 
 41959 ;; Auto vars:     Size  Location     Type
 41960 ;;  grs             1  [STACK] unsigned char 
 41961 ;;  bexp            1  [STACK] unsigned char 
 41962 ;;  aexp            1  [STACK] unsigned char 
 41963 ;;  signs           1  [STACK] unsigned char 
 41964 ;; Return value:  Size  Location     Type
 41965 ;;                  4  [STACK] unsigned char 
 41966 ;; Registers used:
 41967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41968 ;; Tracked objects:
 41969 ;;		On entry : 0/0
 41970 ;;		On exit  : 0/0
 41971 ;;		Unchanged: 0/0
 41972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41977 ;;Total ram usage:        0 bytes
 41978 ;; Hardware stack levels used:    1
 41979 ;; Hardware stack levels required when called:   15
 41980 ;; This function calls:
 41981 ;;		Nothing
 41982 ;; This function is called by:
 41983 ;;		_main
 41984 ;;		_lp_filter
 41985 ;;		_calc_model_data
 41986 ;;		_efgtoa
 41987 ;;		___asfladd
 41988 ;;		___flsub
 41989 ;; This function uses a reentrant model
 41990 ;;
 41991                           
 41992                           	psect	text155
 41993  0178F8                     __ptext155:
 41994                           	opt callstack 0
 41995  0178F8                     ___fladd:
 41996                           	opt callstack 0
 41997                           
 41998                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41999  0178F8  52E6               	movf	postinc1,f,c
 42000  0178FA  52E6               	movf	postinc1,f,c
 42001  0178FC  52E6               	movf	postinc1,f,c
 42002  0178FE  52E6               	movf	postinc1,f,c
 42003                           
 42004                           ;stkvar	_b @ sp[(-4)+-4]
 42005                           
 42006                           ;incstack = 0
 42007 ;; hardware stack exceeded
 42008  017900  0EFB               	movlw	251
 42009  017902  24E1               	addwf	fsr1l,w,c
 42010  017904  6ED9               	movwf	fsr2l,c
 42011  017906  0EFF               	movlw	255
 42012  017908  20E2               	addwfc	fsr1h,w,c
 42013  01790A  6EDA               	movwf	fsr2h,c
 42014  01790C  50DF               	movf	indf2,w,c
 42015  01790E  6E35               	movwf	(btemp+11)^0,c
 42016  017910  0E80               	movlw	128
 42017  017912  1635               	andwf	(btemp+11)^0,f,c
 42018                           
 42019                           ;stkvar	_signs @ sp[(-4)+3]
 42020  017914  0EFF               	movlw	-1
 42021  017916  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42022                           
 42023                           ;stkvar	_b @ sp[(-4)+-4]
 42024  01791C  0EFB               	movlw	251
 42025  01791E  24E1               	addwf	fsr1l,w,c
 42026  017920  6ED9               	movwf	fsr2l,c
 42027  017922  0EFF               	movlw	255
 42028  017924  20E2               	addwfc	fsr1h,w,c
 42029  017926  6EDA               	movwf	fsr2h,c
 42030  017928  50DF               	movf	indf2,w,c
 42031  01792A  6E35               	movwf	(btemp+11)^0,c
 42032  01792C  90D8               	bcf	status,0,c
 42033  01792E  3435               	rlcf	(btemp+11)^0,w,c
 42034  017930  6E34               	movwf	(btemp+10)^0,c
 42035                           
 42036                           ;stkvar	_bexp @ sp[(-4)+1]
 42037  017932  0EFD               	movlw	-3
 42038  017934  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42039                           
 42040                           ;stkvar	_b @ sp[(-4)+-4]
 42041  01793A  0EFA               	movlw	250
 42042  01793C  24E1               	addwf	fsr1l,w,c
 42043  01793E  6ED9               	movwf	fsr2l,c
 42044  017940  0EFF               	movlw	255
 42045  017942  20E2               	addwfc	fsr1h,w,c
 42046  017944  6EDA               	movwf	fsr2h,c
 42047  017946  AEDF               	btfss	indf2,7,c
 42048  017948  D002               	goto	l9895
 42049                           
 42050                           ;stkvar	_bexp @ sp[(-4)+1]
 42051  01794A  0EFD               	movlw	-3
 42052  01794C  80E3               	bsf	plusw1,0,c
 42053  01794E                     l9895:
 42054                           
 42055                           ;stkvar	_bexp @ sp[(-4)+1]
 42056  01794E  0EFD               	movlw	-3
 42057  017950  50E3               	movf	plusw1,w,c
 42058  017952  B4D8               	btfsc	status,2,c
 42059  017954  D027               	goto	l9905
 42060                           
 42061                           ;stkvar	_bexp @ sp[(-4)+1]
 42062  017956  0EFD               	movlw	-3
 42063  017958  28E3               	incf	plusw1,w,c
 42064  01795A  A4D8               	btfss	status,2,c
 42065  01795C  D018               	goto	l9901
 42066  01795E  0E00               	movlw	0
 42067  017960  6E32               	movwf	(btemp+8)^0,c
 42068  017962  0E00               	movlw	0
 42069  017964  6E33               	movwf	(btemp+9)^0,c
 42070  017966  0E00               	movlw	0
 42071  017968  6E34               	movwf	(btemp+10)^0,c
 42072  01796A  0E00               	movlw	0
 42073  01796C  6E35               	movwf	(btemp+11)^0,c
 42074                           
 42075                           ;stkvar	_b @ sp[(-4)+-4]
 42076  01796E  0EF8               	movlw	-8
 42077  017970  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42078  017976  0EF9               	movlw	-7
 42079  017978  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42080  01797E  0EFA               	movlw	-6
 42081  017980  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42082  017986  0EFB               	movlw	-5
 42083  017988  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42084  01798E                     l9901:
 42085                           
 42086                           ;stkvar	_b @ sp[(-4)+-4]
 42087  01798E  0EFA               	movlw	-6
 42088  017990  8EE3               	bsf	plusw1,7,c
 42089                           
 42090                           ;stkvar	_b @ sp[(-4)+-4]
 42091  017992  0EFB               	movlw	251
 42092  017994  24E1               	addwf	fsr1l,w,c
 42093  017996  6ED9               	movwf	fsr2l,c
 42094  017998  0EFF               	movlw	255
 42095  01799A  20E2               	addwfc	fsr1h,w,c
 42096  01799C  6EDA               	movwf	fsr2h,c
 42097  01799E  0E00               	movlw	0
 42098  0179A0  6EDF               	movwf	indf2,c
 42099  0179A2  D018               	goto	l9907
 42100  0179A4                     l9905:
 42101  0179A4  0E00               	movlw	0
 42102  0179A6  6E32               	movwf	(btemp+8)^0,c
 42103  0179A8  0E00               	movlw	0
 42104  0179AA  6E33               	movwf	(btemp+9)^0,c
 42105  0179AC  0E00               	movlw	0
 42106  0179AE  6E34               	movwf	(btemp+10)^0,c
 42107  0179B0  0E00               	movlw	0
 42108  0179B2  6E35               	movwf	(btemp+11)^0,c
 42109                           
 42110                           ;stkvar	_b @ sp[(-4)+-4]
 42111  0179B4  0EF8               	movlw	-8
 42112  0179B6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42113  0179BC  0EF9               	movlw	-7
 42114  0179BE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42115  0179C4  0EFA               	movlw	-6
 42116  0179C6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42117  0179CC  0EFB               	movlw	-5
 42118  0179CE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42119  0179D4                     l9907:
 42120                           
 42121                           ;stkvar	_a @ sp[(-4)+-8]
 42122  0179D4  0EF7               	movlw	247
 42123  0179D6  24E1               	addwf	fsr1l,w,c
 42124  0179D8  6ED9               	movwf	fsr2l,c
 42125  0179DA  0EFF               	movlw	255
 42126  0179DC  20E2               	addwfc	fsr1h,w,c
 42127  0179DE  6EDA               	movwf	fsr2h,c
 42128  0179E0  50DF               	movf	indf2,w,c
 42129  0179E2  6E35               	movwf	(btemp+11)^0,c
 42130  0179E4  0E80               	movlw	128
 42131  0179E6  1635               	andwf	(btemp+11)^0,f,c
 42132                           
 42133                           ;stkvar	_aexp @ sp[(-4)+2]
 42134  0179E8  0EFE               	movlw	-2
 42135  0179EA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42136                           
 42137                           ;stkvar	_signs @ sp[(-4)+3]
 42138                           ;stkvar	_aexp @ sp[(-4)+2]
 42139  0179F0  50E1               	movf	fsr1l,w,c
 42140  0179F2  0FFE               	addlw	-2
 42141  0179F4  6ED9               	movwf	fsr2l,c
 42142  0179F6  50E2               	movf	fsr1h,w,c
 42143  0179F8  6EDA               	movwf	fsr2h,c
 42144  0179FA  0EFF               	movlw	255
 42145  0179FC  22DA               	addwfc	fsr2h,f,c
 42146  0179FE  0EFF               	movlw	-1
 42147  017A00  50E3               	movf	plusw1,w,c
 42148  017A02  18DE               	xorwf	postinc2,w,c
 42149  017A04  B4D8               	btfsc	status,2,c
 42150  017A06  D002               	goto	l9913
 42151                           
 42152                           ;stkvar	_signs @ sp[(-4)+3]
 42153  017A08  0EFF               	movlw	-1
 42154  017A0A  8CE3               	bsf	plusw1,6,c
 42155  017A0C                     l9913:
 42156                           
 42157                           ;stkvar	_a @ sp[(-4)+-8]
 42158  017A0C  0EF7               	movlw	247
 42159  017A0E  24E1               	addwf	fsr1l,w,c
 42160  017A10  6ED9               	movwf	fsr2l,c
 42161  017A12  0EFF               	movlw	255
 42162  017A14  20E2               	addwfc	fsr1h,w,c
 42163  017A16  6EDA               	movwf	fsr2h,c
 42164  017A18  50DF               	movf	indf2,w,c
 42165  017A1A  6E35               	movwf	(btemp+11)^0,c
 42166  017A1C  90D8               	bcf	status,0,c
 42167  017A1E  3435               	rlcf	(btemp+11)^0,w,c
 42168  017A20  6E34               	movwf	(btemp+10)^0,c
 42169                           
 42170                           ;stkvar	_aexp @ sp[(-4)+2]
 42171  017A22  0EFE               	movlw	-2
 42172  017A24  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42173                           
 42174                           ;stkvar	_a @ sp[(-4)+-8]
 42175  017A2A  0EF6               	movlw	246
 42176  017A2C  24E1               	addwf	fsr1l,w,c
 42177  017A2E  6ED9               	movwf	fsr2l,c
 42178  017A30  0EFF               	movlw	255
 42179  017A32  20E2               	addwfc	fsr1h,w,c
 42180  017A34  6EDA               	movwf	fsr2h,c
 42181  017A36  AEDF               	btfss	indf2,7,c
 42182  017A38  D002               	goto	l9919
 42183                           
 42184                           ;stkvar	_aexp @ sp[(-4)+2]
 42185  017A3A  0EFE               	movlw	-2
 42186  017A3C  80E3               	bsf	plusw1,0,c
 42187  017A3E                     l9919:
 42188                           
 42189                           ;stkvar	_aexp @ sp[(-4)+2]
 42190  017A3E  0EFE               	movlw	-2
 42191  017A40  50E3               	movf	plusw1,w,c
 42192  017A42  B4D8               	btfsc	status,2,c
 42193  017A44  D027               	goto	l9929
 42194                           
 42195                           ;stkvar	_aexp @ sp[(-4)+2]
 42196  017A46  0EFE               	movlw	-2
 42197  017A48  28E3               	incf	plusw1,w,c
 42198  017A4A  A4D8               	btfss	status,2,c
 42199  017A4C  D018               	goto	l9925
 42200  017A4E  0E00               	movlw	0
 42201  017A50  6E32               	movwf	(btemp+8)^0,c
 42202  017A52  0E00               	movlw	0
 42203  017A54  6E33               	movwf	(btemp+9)^0,c
 42204  017A56  0E00               	movlw	0
 42205  017A58  6E34               	movwf	(btemp+10)^0,c
 42206  017A5A  0E00               	movlw	0
 42207  017A5C  6E35               	movwf	(btemp+11)^0,c
 42208                           
 42209                           ;stkvar	_a @ sp[(-4)+-8]
 42210  017A5E  0EF4               	movlw	-12
 42211  017A60  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42212  017A66  0EF5               	movlw	-11
 42213  017A68  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42214  017A6E  0EF6               	movlw	-10
 42215  017A70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42216  017A76  0EF7               	movlw	-9
 42217  017A78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42218  017A7E                     l9925:
 42219                           
 42220                           ;stkvar	_a @ sp[(-4)+-8]
 42221  017A7E  0EF6               	movlw	-10
 42222  017A80  8EE3               	bsf	plusw1,7,c
 42223                           
 42224                           ;stkvar	_a @ sp[(-4)+-8]
 42225  017A82  0EF7               	movlw	247
 42226  017A84  24E1               	addwf	fsr1l,w,c
 42227  017A86  6ED9               	movwf	fsr2l,c
 42228  017A88  0EFF               	movlw	255
 42229  017A8A  20E2               	addwfc	fsr1h,w,c
 42230  017A8C  6EDA               	movwf	fsr2h,c
 42231  017A8E  0E00               	movlw	0
 42232  017A90  6EDF               	movwf	indf2,c
 42233  017A92  D018               	goto	l9931
 42234  017A94                     l9929:
 42235  017A94  0E00               	movlw	0
 42236  017A96  6E32               	movwf	(btemp+8)^0,c
 42237  017A98  0E00               	movlw	0
 42238  017A9A  6E33               	movwf	(btemp+9)^0,c
 42239  017A9C  0E00               	movlw	0
 42240  017A9E  6E34               	movwf	(btemp+10)^0,c
 42241  017AA0  0E00               	movlw	0
 42242  017AA2  6E35               	movwf	(btemp+11)^0,c
 42243                           
 42244                           ;stkvar	_a @ sp[(-4)+-8]
 42245  017AA4  0EF4               	movlw	-12
 42246  017AA6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42247  017AAC  0EF5               	movlw	-11
 42248  017AAE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42249  017AB4  0EF6               	movlw	-10
 42250  017AB6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42251  017ABC  0EF7               	movlw	-9
 42252  017ABE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42253  017AC4                     l9931:
 42254                           
 42255                           ;stkvar	_bexp @ sp[(-4)+1]
 42256                           ;stkvar	_aexp @ sp[(-4)+2]
 42257  017AC4  50E1               	movf	fsr1l,w,c
 42258  017AC6  0FFE               	addlw	-2
 42259  017AC8  6ED9               	movwf	fsr2l,c
 42260  017ACA  50E2               	movf	fsr1h,w,c
 42261  017ACC  6EDA               	movwf	fsr2h,c
 42262  017ACE  0EFF               	movlw	255
 42263  017AD0  22DA               	addwfc	fsr2h,f,c
 42264  017AD2  0EFD               	movlw	-3
 42265  017AD4  50E3               	movf	plusw1,w,c
 42266  017AD6  5CDE               	subwf	postinc2,w,c
 42267  017AD8  B0D8               	btfsc	status,0,c
 42268  017ADA  D0A4               	goto	l9967
 42269                           
 42270                           ;stkvar	_signs @ sp[(-4)+3]
 42271  017ADC  0EFF               	movlw	-1
 42272  017ADE  ACE3               	btfss	plusw1,6,c
 42273  017AE0  D002               	goto	l9937
 42274                           
 42275                           ;stkvar	_signs @ sp[(-4)+3]
 42276  017AE2  0EFF               	movlw	-1
 42277  017AE4  7EE3               	btg	plusw1,7,c
 42278  017AE6                     l9937:
 42279                           
 42280                           ;stkvar	_bexp @ sp[(-4)+1]
 42281                           ;stkvar	_grs @ sp[(-4)+0]
 42282  017AE6  0EFD               	movlw	-3
 42283  017AE8  006F FF8C  F02A    	movff	plusw1,btemp
 42284  017AEE  0EFC               	movlw	-4
 42285  017AF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 42286                           
 42287                           ;stkvar	_aexp @ sp[(-4)+2]
 42288                           ;stkvar	_bexp @ sp[(-4)+1]
 42289  017AF6  0EFE               	movlw	-2
 42290  017AF8  006F FF8C  F02A    	movff	plusw1,btemp
 42291  017AFE  0EFD               	movlw	-3
 42292  017B00  0060  F0AB  FFE3   	movff	btemp,plusw1
 42293                           
 42294                           ;stkvar	_grs @ sp[(-4)+0]
 42295                           ;stkvar	_aexp @ sp[(-4)+2]
 42296  017B06  0EFC               	movlw	-4
 42297  017B08  006F FF8C  F02A    	movff	plusw1,btemp
 42298  017B0E  0EFE               	movlw	-2
 42299  017B10  0060  F0AB  FFE3   	movff	btemp,plusw1
 42300                           
 42301                           ;stkvar	_b @ sp[(-4)+-4]
 42302                           ;stkvar	_grs @ sp[(-4)+0]
 42303  017B16  0EF8               	movlw	-8
 42304  017B18  006F FF8C  F02A    	movff	plusw1,btemp
 42305  017B1E  0EFC               	movlw	-4
 42306  017B20  0060  F0AB  FFE3   	movff	btemp,plusw1
 42307                           
 42308                           ;stkvar	_a @ sp[(-4)+-8]
 42309                           ;stkvar	_b @ sp[(-4)+-4]
 42310  017B26  0EF4               	movlw	-12
 42311  017B28  006F FF8C  F02A    	movff	plusw1,btemp
 42312  017B2E  0EF8               	movlw	-8
 42313  017B30  0060  F0AB  FFE3   	movff	btemp,plusw1
 42314                           
 42315                           ;stkvar	_grs @ sp[(-4)+0]
 42316                           ;stkvar	_a @ sp[(-4)+-8]
 42317  017B36  0EFC               	movlw	-4
 42318  017B38  006F FF8C  F02A    	movff	plusw1,btemp
 42319  017B3E  0EF4               	movlw	-12
 42320  017B40  0060  F0AB  FFE3   	movff	btemp,plusw1
 42321                           
 42322                           ;stkvar	_b @ sp[(-4)+-4]
 42323  017B46  0EF9               	movlw	249
 42324  017B48  24E1               	addwf	fsr1l,w,c
 42325  017B4A  6ED9               	movwf	fsr2l,c
 42326  017B4C  0EFF               	movlw	255
 42327  017B4E  20E2               	addwfc	fsr1h,w,c
 42328  017B50  6EDA               	movwf	fsr2h,c
 42329  017B52  50DF               	movf	indf2,w,c
 42330  017B54  6E35               	movwf	(btemp+11)^0,c
 42331                           
 42332                           ;stkvar	_grs @ sp[(-4)+0]
 42333  017B56  0EFC               	movlw	-4
 42334  017B58  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42335                           
 42336                           ;stkvar	_a @ sp[(-4)+-8]
 42337  017B5E  0EF5               	movlw	245
 42338  017B60  24E1               	addwf	fsr1l,w,c
 42339  017B62  6ED9               	movwf	fsr2l,c
 42340  017B64  0EFF               	movlw	255
 42341  017B66  20E2               	addwfc	fsr1h,w,c
 42342  017B68  6EDA               	movwf	fsr2h,c
 42343                           
 42344                           ;stkvar	_b @ sp[(-4)+-4]
 42345  017B6A  0EF9               	movlw	249
 42346  017B6C  24E1               	addwf	fsr1l,w,c
 42347  017B6E  6EE9               	movwf	fsr0l,c
 42348  017B70  0EFF               	movlw	255
 42349  017B72  20E2               	addwfc	fsr1h,w,c
 42350  017B74  6EEA               	movwf	fsr0h,c
 42351  017B76  006F FF7F FFEF     	movff	indf2,indf0
 42352                           
 42353                           ;stkvar	_grs @ sp[(-4)+0]
 42354                           ;stkvar	_a @ sp[(-4)+-8]
 42355  017B7C  0EF5               	movlw	245
 42356  017B7E  24E1               	addwf	fsr1l,w,c
 42357  017B80  6ED9               	movwf	fsr2l,c
 42358  017B82  0EFF               	movlw	255
 42359  017B84  20E2               	addwfc	fsr1h,w,c
 42360  017B86  6EDA               	movwf	fsr2h,c
 42361  017B88  0EFC               	movlw	-4
 42362  017B8A  006F FF8F FFDF     	movff	plusw1,indf2
 42363                           
 42364                           ;stkvar	_b @ sp[(-4)+-4]
 42365  017B90  0EFA               	movlw	250
 42366  017B92  24E1               	addwf	fsr1l,w,c
 42367  017B94  6ED9               	movwf	fsr2l,c
 42368  017B96  0EFF               	movlw	255
 42369  017B98  20E2               	addwfc	fsr1h,w,c
 42370  017B9A  6EDA               	movwf	fsr2h,c
 42371  017B9C  50DF               	movf	indf2,w,c
 42372  017B9E  6E35               	movwf	(btemp+11)^0,c
 42373                           
 42374                           ;stkvar	_grs @ sp[(-4)+0]
 42375  017BA0  0EFC               	movlw	-4
 42376  017BA2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42377                           
 42378                           ;stkvar	_a @ sp[(-4)+-8]
 42379  017BA8  0EF6               	movlw	246
 42380  017BAA  24E1               	addwf	fsr1l,w,c
 42381  017BAC  6ED9               	movwf	fsr2l,c
 42382  017BAE  0EFF               	movlw	255
 42383  017BB0  20E2               	addwfc	fsr1h,w,c
 42384  017BB2  6EDA               	movwf	fsr2h,c
 42385                           
 42386                           ;stkvar	_b @ sp[(-4)+-4]
 42387  017BB4  0EFA               	movlw	250
 42388  017BB6  24E1               	addwf	fsr1l,w,c
 42389  017BB8  6EE9               	movwf	fsr0l,c
 42390  017BBA  0EFF               	movlw	255
 42391  017BBC  20E2               	addwfc	fsr1h,w,c
 42392  017BBE  6EEA               	movwf	fsr0h,c
 42393  017BC0  006F FF7F FFEF     	movff	indf2,indf0
 42394                           
 42395                           ;stkvar	_grs @ sp[(-4)+0]
 42396                           ;stkvar	_a @ sp[(-4)+-8]
 42397  017BC6  0EF6               	movlw	246
 42398  017BC8  24E1               	addwf	fsr1l,w,c
 42399  017BCA  6ED9               	movwf	fsr2l,c
 42400  017BCC  0EFF               	movlw	255
 42401  017BCE  20E2               	addwfc	fsr1h,w,c
 42402  017BD0  6EDA               	movwf	fsr2h,c
 42403  017BD2  0EFC               	movlw	-4
 42404  017BD4  006F FF8F FFDF     	movff	plusw1,indf2
 42405                           
 42406                           ;stkvar	_b @ sp[(-4)+-4]
 42407  017BDA  0EFB               	movlw	251
 42408  017BDC  24E1               	addwf	fsr1l,w,c
 42409  017BDE  6ED9               	movwf	fsr2l,c
 42410  017BE0  0EFF               	movlw	255
 42411  017BE2  20E2               	addwfc	fsr1h,w,c
 42412  017BE4  6EDA               	movwf	fsr2h,c
 42413  017BE6  50DF               	movf	indf2,w,c
 42414  017BE8  6E35               	movwf	(btemp+11)^0,c
 42415                           
 42416                           ;stkvar	_grs @ sp[(-4)+0]
 42417  017BEA  0EFC               	movlw	-4
 42418  017BEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42419                           
 42420                           ;stkvar	_a @ sp[(-4)+-8]
 42421  017BF2  0EF7               	movlw	247
 42422  017BF4  24E1               	addwf	fsr1l,w,c
 42423  017BF6  6ED9               	movwf	fsr2l,c
 42424  017BF8  0EFF               	movlw	255
 42425  017BFA  20E2               	addwfc	fsr1h,w,c
 42426  017BFC  6EDA               	movwf	fsr2h,c
 42427                           
 42428                           ;stkvar	_b @ sp[(-4)+-4]
 42429  017BFE  0EFB               	movlw	251
 42430  017C00  24E1               	addwf	fsr1l,w,c
 42431  017C02  6EE9               	movwf	fsr0l,c
 42432  017C04  0EFF               	movlw	255
 42433  017C06  20E2               	addwfc	fsr1h,w,c
 42434  017C08  6EEA               	movwf	fsr0h,c
 42435  017C0A  006F FF7F FFEF     	movff	indf2,indf0
 42436                           
 42437                           ;stkvar	_grs @ sp[(-4)+0]
 42438                           ;stkvar	_a @ sp[(-4)+-8]
 42439  017C10  0EF7               	movlw	247
 42440  017C12  24E1               	addwf	fsr1l,w,c
 42441  017C14  6ED9               	movwf	fsr2l,c
 42442  017C16  0EFF               	movlw	255
 42443  017C18  20E2               	addwfc	fsr1h,w,c
 42444  017C1A  6EDA               	movwf	fsr2h,c
 42445  017C1C  0EFC               	movlw	-4
 42446  017C1E  006F FF8F FFDF     	movff	plusw1,indf2
 42447  017C24                     l9967:
 42448                           
 42449                           ;stkvar	_grs @ sp[(-4)+0]
 42450  017C24  0EFC               	movlw	-4
 42451  017C26  6AE3               	clrf	plusw1,c
 42452                           
 42453                           ;stkvar	_aexp @ sp[(-4)+2]
 42454  017C28  0EFE               	movlw	-2
 42455  017C2A  50E3               	movf	plusw1,w,c
 42456  017C2C  6E34               	movwf	(btemp+10)^0,c
 42457  017C2E  6A35               	clrf	(btemp+11)^0,c
 42458                           
 42459                           ;stkvar	_bexp @ sp[(-4)+1]
 42460  017C30  0EFD               	movlw	-3
 42461  017C32  50E3               	movf	plusw1,w,c
 42462  017C34  5E34               	subwf	(btemp+10)^0,f,c
 42463  017C36  0E00               	movlw	0
 42464  017C38  5A35               	subwfb	(btemp+11)^0,f,c
 42465  017C3A  BE35               	btfsc	(btemp+11)^0,7,c
 42466  017C3C  D062               	goto	l9991
 42467  017C3E  5035               	movf	(btemp+11)^0,w,c
 42468  017C40  E104               	bnz	u7380
 42469  017C42  0E1A               	movlw	26
 42470  017C44  5C34               	subwf	(btemp+10)^0,w,c
 42471  017C46  A0D8               	btfss	status,0,c
 42472  017C48  D05C               	goto	l9991
 42473  017C4A                     u7380:
 42474                           
 42475                           ;stkvar	_b @ sp[(-4)+-4]
 42476  017C4A  0EF8               	movlw	-8
 42477  017C4C  50E3               	movf	plusw1,w,c
 42478  017C4E  E10A               	bnz	u7391
 42479  017C50  0EF9               	movlw	-7
 42480  017C52  50E3               	movf	plusw1,w,c
 42481  017C54  E107               	bnz	u7391
 42482  017C56  0EFA               	movlw	-6
 42483  017C58  50E3               	movf	plusw1,w,c
 42484  017C5A  E104               	bnz	u7391
 42485  017C5C  0EFB               	movlw	-5
 42486  017C5E  50E3               	movf	plusw1,w,c
 42487  017C60  B4D8               	btfsc	status,2,c
 42488  017C62  D003               	goto	u7390
 42489  017C64                     u7391:
 42490  017C64  6A35               	clrf	(btemp+11)^0,c
 42491  017C66  2A35               	incf	(btemp+11)^0,f,c
 42492  017C68  D001               	goto	u7408
 42493  017C6A                     u7390:
 42494  017C6A  6A35               	clrf	(btemp+11)^0,c
 42495  017C6C                     u7408:
 42496                           
 42497                           ;stkvar	_grs @ sp[(-4)+0]
 42498  017C6C  0EFC               	movlw	-4
 42499  017C6E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42500                           
 42501                           ;stkvar	_b @ sp[(-4)+-4]
 42502  017C74  0EF8               	movlw	-8
 42503  017C76  6AE3               	clrf	plusw1,c
 42504  017C78  0EF9               	movlw	-7
 42505  017C7A  6AE3               	clrf	plusw1,c
 42506  017C7C  0EFA               	movlw	-6
 42507  017C7E  6AE3               	clrf	plusw1,c
 42508  017C80  0EFB               	movlw	-5
 42509  017C82  6AE3               	clrf	plusw1,c
 42510                           
 42511                           ;stkvar	_aexp @ sp[(-4)+2]
 42512                           ;stkvar	_bexp @ sp[(-4)+1]
 42513  017C84  0EFE               	movlw	-2
 42514  017C86  006F FF8C  F02A    	movff	plusw1,btemp
 42515  017C8C  0EFD               	movlw	-3
 42516  017C8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 42517  017C94  D042               	goto	u7440
 42518  017C96                     l9977:
 42519                           
 42520                           ;stkvar	_grs @ sp[(-4)+0]
 42521  017C96  0EFC               	movlw	-4
 42522  017C98  A0E3               	btfss	plusw1,0,c
 42523  017C9A  D00D               	goto	l9981
 42524                           
 42525                           ;stkvar	_grs @ sp[(-4)+0]
 42526  017C9C  0EFC               	movlw	-4
 42527  017C9E  006F FF8C  F035    	movff	plusw1,btemp+11
 42528  017CA4  90D8               	bcf	status,0,c
 42529  017CA6  3235               	rrcf	(btemp+11)^0,f,c
 42530  017CA8  0E01               	movlw	1
 42531  017CAA  1235               	iorwf	(btemp+11)^0,f,c
 42532                           
 42533                           ;stkvar	_grs @ sp[(-4)+0]
 42534  017CAC  0EFC               	movlw	-4
 42535  017CAE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42536  017CB4  D009               	goto	l9983
 42537  017CB6                     l9981:
 42538                           
 42539                           ;stkvar	_grs @ sp[(-4)+0]
 42540  017CB6  50E1               	movf	fsr1l,w,c
 42541  017CB8  0FFC               	addlw	-4
 42542  017CBA  6ED9               	movwf	fsr2l,c
 42543  017CBC  50E2               	movf	fsr1h,w,c
 42544  017CBE  6EDA               	movwf	fsr2h,c
 42545  017CC0  0EFF               	movlw	255
 42546  017CC2  22DA               	addwfc	fsr2h,f,c
 42547  017CC4  90D8               	bcf	status,0,c
 42548  017CC6  32DF               	rrcf	indf2,f,c
 42549  017CC8                     l9983:
 42550                           
 42551                           ;stkvar	_b @ sp[(-4)+-4]
 42552  017CC8  0EF8               	movlw	-8
 42553  017CCA  A0E3               	btfss	plusw1,0,c
 42554  017CCC  D002               	goto	l9987
 42555                           
 42556                           ;stkvar	_grs @ sp[(-4)+0]
 42557  017CCE  0EFC               	movlw	-4
 42558  017CD0  8EE3               	bsf	plusw1,7,c
 42559  017CD2                     l9987:
 42560  017CD2  0E01               	movlw	1
 42561  017CD4  6E35               	movwf	(btemp+11)^0,c
 42562                           
 42563                           ;stkvar	_b @ sp[(-4)+-4]
 42564  017CD6  50E1               	movf	fsr1l,w,c
 42565  017CD8  0FF8               	addlw	-8
 42566  017CDA  6ED9               	movwf	fsr2l,c
 42567  017CDC  50E2               	movf	fsr1h,w,c
 42568  017CDE  6EDA               	movwf	fsr2h,c
 42569  017CE0  0EFF               	movlw	255
 42570  017CE2  22DA               	addwfc	fsr2h,f,c
 42571  017CE4  2835               	incf	(btemp+11)^0,w,c
 42572  017CE6  52DE               	movf	postinc2,f,c
 42573  017CE8  D008               	goto	u7430
 42574  017CEA                     u7435:
 42575  017CEA  52DE               	movf	postinc2,f,c
 42576  017CEC  90D8               	bcf	status,0,c
 42577  017CEE  BEDC               	btfsc	preinc2,7,c
 42578  017CF0  80D8               	bsf	status,0,c
 42579  017CF2  32DD               	rrcf	postdec2,f,c
 42580  017CF4  32DD               	rrcf	postdec2,f,c
 42581  017CF6  32DD               	rrcf	postdec2,f,c
 42582  017CF8  32DE               	rrcf	postinc2,f,c
 42583  017CFA                     u7430:
 42584  017CFA  2EE8               	decfsz	wreg,f,c
 42585  017CFC  D7F6               	goto	u7435
 42586                           
 42587                           ;stkvar	_bexp @ sp[(-4)+1]
 42588  017CFE  0EFD               	movlw	-3
 42589  017D00  2AE3               	incf	plusw1,f,c
 42590  017D02                     l9991:
 42591                           
 42592                           ;stkvar	_aexp @ sp[(-4)+2]
 42593                           ;stkvar	_bexp @ sp[(-4)+1]
 42594  017D02  50E1               	movf	fsr1l,w,c
 42595  017D04  0FFD               	addlw	-3
 42596  017D06  6ED9               	movwf	fsr2l,c
 42597  017D08  50E2               	movf	fsr1h,w,c
 42598  017D0A  6EDA               	movwf	fsr2h,c
 42599  017D0C  0EFF               	movlw	255
 42600  017D0E  22DA               	addwfc	fsr2h,f,c
 42601  017D10  0EFE               	movlw	-2
 42602  017D12  50E3               	movf	plusw1,w,c
 42603  017D14  5CDE               	subwf	postinc2,w,c
 42604  017D16  A0D8               	btfss	status,0,c
 42605  017D18  D7BE               	goto	l9977
 42606  017D1A                     u7440:
 42607                           
 42608                           ;stkvar	_signs @ sp[(-4)+3]
 42609  017D1A  0EFF               	movlw	-1
 42610  017D1C  BCE3               	btfsc	plusw1,6,c
 42611  017D1E  D066               	goto	l10019
 42612                           
 42613                           ;stkvar	_bexp @ sp[(-4)+1]
 42614  017D20  0EFD               	movlw	-3
 42615  017D22  50E3               	movf	plusw1,w,c
 42616  017D24  B4D8               	btfsc	status,2,c
 42617  017D26  D0F2               	goto	u7540
 42618                           
 42619                           ;stkvar	_a @ sp[(-4)+-8]
 42620                           ;stkvar	_b @ sp[(-4)+-4]
 42621  017D28  0EF8               	movlw	-8
 42622  017D2A  50E3               	movf	plusw1,w,c
 42623  017D2C  6E2A               	movwf	btemp^0,c
 42624  017D2E  0EF4               	movlw	-12
 42625  017D30  50E3               	movf	plusw1,w,c
 42626  017D32  262A               	addwf	btemp^0,f,c
 42627  017D34  0EF8               	movlw	-8
 42628  017D36  0060  F0AB  FFE3   	movff	btemp,plusw1
 42629  017D3C  0EF9               	movlw	-7
 42630  017D3E  50E3               	movf	plusw1,w,c
 42631  017D40  6E2A               	movwf	btemp^0,c
 42632  017D42  0EF5               	movlw	-11
 42633  017D44  50E3               	movf	plusw1,w,c
 42634  017D46  222A               	addwfc	btemp^0,f,c
 42635  017D48  0EF9               	movlw	-7
 42636  017D4A  0060  F0AB  FFE3   	movff	btemp,plusw1
 42637  017D50  0EFA               	movlw	-6
 42638  017D52  50E3               	movf	plusw1,w,c
 42639  017D54  6E2A               	movwf	btemp^0,c
 42640  017D56  0EF6               	movlw	-10
 42641  017D58  50E3               	movf	plusw1,w,c
 42642  017D5A  222A               	addwfc	btemp^0,f,c
 42643  017D5C  0EFA               	movlw	-6
 42644  017D5E  0060  F0AB  FFE3   	movff	btemp,plusw1
 42645  017D64  0EFB               	movlw	-5
 42646  017D66  50E3               	movf	plusw1,w,c
 42647  017D68  6E2A               	movwf	btemp^0,c
 42648  017D6A  0EF7               	movlw	-9
 42649  017D6C  50E3               	movf	plusw1,w,c
 42650  017D6E  222A               	addwfc	btemp^0,f,c
 42651  017D70  0EFB               	movlw	-5
 42652  017D72  0060  F0AB  FFE3   	movff	btemp,plusw1
 42653                           
 42654                           ;stkvar	_b @ sp[(-4)+-4]
 42655  017D78  0EFB               	movlw	-5
 42656  017D7A  A0E3               	btfss	plusw1,0,c
 42657  017D7C  D101               	goto	u7580
 42658                           
 42659                           ;stkvar	_grs @ sp[(-4)+0]
 42660  017D7E  0EFC               	movlw	-4
 42661  017D80  A0E3               	btfss	plusw1,0,c
 42662  017D82  D00D               	goto	l10009
 42663                           
 42664                           ;stkvar	_grs @ sp[(-4)+0]
 42665  017D84  0EFC               	movlw	-4
 42666  017D86  006F FF8C  F035    	movff	plusw1,btemp+11
 42667  017D8C  90D8               	bcf	status,0,c
 42668  017D8E  3235               	rrcf	(btemp+11)^0,f,c
 42669  017D90  0E01               	movlw	1
 42670  017D92  1235               	iorwf	(btemp+11)^0,f,c
 42671                           
 42672                           ;stkvar	_grs @ sp[(-4)+0]
 42673  017D94  0EFC               	movlw	-4
 42674  017D96  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42675  017D9C  D009               	goto	l10011
 42676  017D9E                     l10009:
 42677                           
 42678                           ;stkvar	_grs @ sp[(-4)+0]
 42679  017D9E  50E1               	movf	fsr1l,w,c
 42680  017DA0  0FFC               	addlw	-4
 42681  017DA2  6ED9               	movwf	fsr2l,c
 42682  017DA4  50E2               	movf	fsr1h,w,c
 42683  017DA6  6EDA               	movwf	fsr2h,c
 42684  017DA8  0EFF               	movlw	255
 42685  017DAA  22DA               	addwfc	fsr2h,f,c
 42686  017DAC  90D8               	bcf	status,0,c
 42687  017DAE  32DF               	rrcf	indf2,f,c
 42688  017DB0                     l10011:
 42689                           
 42690                           ;stkvar	_b @ sp[(-4)+-4]
 42691  017DB0  0EF8               	movlw	-8
 42692  017DB2  A0E3               	btfss	plusw1,0,c
 42693  017DB4  D002               	goto	l10015
 42694                           
 42695                           ;stkvar	_grs @ sp[(-4)+0]
 42696  017DB6  0EFC               	movlw	-4
 42697  017DB8  8EE3               	bsf	plusw1,7,c
 42698  017DBA                     l10015:
 42699  017DBA  0E01               	movlw	1
 42700  017DBC  6E35               	movwf	(btemp+11)^0,c
 42701                           
 42702                           ;stkvar	_b @ sp[(-4)+-4]
 42703  017DBE  50E1               	movf	fsr1l,w,c
 42704  017DC0  0FF8               	addlw	-8
 42705  017DC2  6ED9               	movwf	fsr2l,c
 42706  017DC4  50E2               	movf	fsr1h,w,c
 42707  017DC6  6EDA               	movwf	fsr2h,c
 42708  017DC8  0EFF               	movlw	255
 42709  017DCA  22DA               	addwfc	fsr2h,f,c
 42710  017DCC  2835               	incf	(btemp+11)^0,w,c
 42711  017DCE  52DE               	movf	postinc2,f,c
 42712  017DD0  D008               	goto	u7500
 42713  017DD2                     u7505:
 42714  017DD2  52DE               	movf	postinc2,f,c
 42715  017DD4  90D8               	bcf	status,0,c
 42716  017DD6  BEDC               	btfsc	preinc2,7,c
 42717  017DD8  80D8               	bsf	status,0,c
 42718  017DDA  32DD               	rrcf	postdec2,f,c
 42719  017DDC  32DD               	rrcf	postdec2,f,c
 42720  017DDE  32DD               	rrcf	postdec2,f,c
 42721  017DE0  32DE               	rrcf	postinc2,f,c
 42722  017DE2                     u7500:
 42723  017DE2  2EE8               	decfsz	wreg,f,c
 42724  017DE4  D7F6               	goto	u7505
 42725                           
 42726                           ;stkvar	_bexp @ sp[(-4)+1]
 42727  017DE6  0EFD               	movlw	-3
 42728  017DE8  2AE3               	incf	plusw1,f,c
 42729  017DEA  D0CA               	goto	u7580
 42730  017DEC                     l10019:
 42731                           
 42732                           ;stkvar	_a @ sp[(-4)+-8]
 42733                           ;stkvar	_b @ sp[(-4)+-4]
 42734  017DEC  50E1               	movf	fsr1l,w,c
 42735  017DEE  0FF8               	addlw	-8
 42736  017DF0  6ED9               	movwf	fsr2l,c
 42737  017DF2  50E2               	movf	fsr1h,w,c
 42738  017DF4  6EDA               	movwf	fsr2h,c
 42739  017DF6  0EFF               	movlw	255
 42740  017DF8  22DA               	addwfc	fsr2h,f,c
 42741  017DFA  0EF4               	movlw	-12
 42742  017DFC  50E3               	movf	plusw1,w,c
 42743  017DFE  5CDE               	subwf	postinc2,w,c
 42744  017E00  0EF5               	movlw	-11
 42745  017E02  50E3               	movf	plusw1,w,c
 42746  017E04  58DE               	subwfb	postinc2,w,c
 42747  017E06  0EF6               	movlw	-10
 42748  017E08  50E3               	movf	plusw1,w,c
 42749  017E0A  58DE               	subwfb	postinc2,w,c
 42750  017E0C  50DE               	movf	postinc2,w,c
 42751  017E0E  0A80               	xorlw	128
 42752  017E10  6E2A               	movwf	btemp^0,c
 42753  017E12  0EF7               	movlw	-9
 42754  017E14  50E3               	movf	plusw1,w,c
 42755  017E16  0A80               	xorlw	128
 42756  017E18  582A               	subwfb	btemp^0,w,c
 42757  017E1A  B0D8               	btfsc	status,0,c
 42758  017E1C  D053               	goto	l10031
 42759                           
 42760                           ;stkvar	_b @ sp[(-4)+-4]
 42761                           ;stkvar	_a @ sp[(-4)+-8]
 42762  017E1E  0EF4               	movlw	-12
 42763  017E20  006F FF8C  F032    	movff	plusw1,btemp+8
 42764  017E26  0EF5               	movlw	-11
 42765  017E28  006F FF8C  F033    	movff	plusw1,btemp+9
 42766  017E2E  0EF6               	movlw	-10
 42767  017E30  006F FF8C  F034    	movff	plusw1,btemp+10
 42768  017E36  0EF7               	movlw	-9
 42769  017E38  006F FF8C  F035    	movff	plusw1,btemp+11
 42770  017E3E  0EF8               	movlw	-8
 42771  017E40  50E3               	movf	plusw1,w,c
 42772  017E42  5E32               	subwf	(btemp+8)^0,f,c
 42773  017E44  0EF9               	movlw	-7
 42774  017E46  50E3               	movf	plusw1,w,c
 42775  017E48  5A33               	subwfb	(btemp+9)^0,f,c
 42776  017E4A  0EFA               	movlw	-6
 42777  017E4C  50E3               	movf	plusw1,w,c
 42778  017E4E  5A34               	subwfb	(btemp+10)^0,f,c
 42779  017E50  0EFB               	movlw	-5
 42780  017E52  50E3               	movf	plusw1,w,c
 42781  017E54  5A35               	subwfb	(btemp+11)^0,f,c
 42782  017E56  0EFF               	movlw	255
 42783  017E58  2432               	addwf	(btemp+8)^0,w,c
 42784  017E5A  6E2E               	movwf	(btemp+4)^0,c
 42785  017E5C  0EFF               	movlw	255
 42786  017E5E  2033               	addwfc	(btemp+9)^0,w,c
 42787  017E60  6E2F               	movwf	(btemp+5)^0,c
 42788  017E62  0EFF               	movlw	255
 42789  017E64  2034               	addwfc	(btemp+10)^0,w,c
 42790  017E66  6E30               	movwf	(btemp+6)^0,c
 42791  017E68  0EFF               	movlw	255
 42792  017E6A  2035               	addwfc	(btemp+11)^0,w,c
 42793  017E6C  6E31               	movwf	(btemp+7)^0,c
 42794                           
 42795                           ;stkvar	_b @ sp[(-4)+-4]
 42796  017E6E  0EF8               	movlw	-8
 42797  017E70  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42798  017E76  0EF9               	movlw	-7
 42799  017E78  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42800  017E7E  0EFA               	movlw	-6
 42801  017E80  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42802  017E86  0EFB               	movlw	-5
 42803  017E88  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42804                           
 42805                           ;stkvar	_signs @ sp[(-4)+3]
 42806  017E8E  0EFF               	movlw	-1
 42807  017E90  7EE3               	btg	plusw1,7,c
 42808                           
 42809                           ;stkvar	_grs @ sp[(-4)+0]
 42810  017E92  0EFC               	movlw	-4
 42811  017E94  50E3               	movf	plusw1,w,c
 42812  017E96  0800               	sublw	0
 42813  017E98  6E35               	movwf	(btemp+11)^0,c
 42814                           
 42815                           ;stkvar	_grs @ sp[(-4)+0]
 42816  017E9A  0EFC               	movlw	-4
 42817  017E9C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42818                           
 42819                           ;stkvar	_grs @ sp[(-4)+0]
 42820  017EA2  0EFC               	movlw	-4
 42821  017EA4  50E3               	movf	plusw1,w,c
 42822  017EA6  A4D8               	btfss	status,2,c
 42823  017EA8  D020               	goto	l10033
 42824                           
 42825                           ;stkvar	_b @ sp[(-4)+-4]
 42826  017EAA  50E1               	movf	fsr1l,w,c
 42827  017EAC  0FF8               	addlw	-8
 42828  017EAE  6ED9               	movwf	fsr2l,c
 42829  017EB0  50E2               	movf	fsr1h,w,c
 42830  017EB2  6EDA               	movwf	fsr2h,c
 42831  017EB4  0EFF               	movlw	255
 42832  017EB6  22DA               	addwfc	fsr2h,f,c
 42833  017EB8  2ADE               	incf	postinc2,f,c
 42834  017EBA  0E00               	movlw	0
 42835  017EBC  22DE               	addwfc	postinc2,f,c
 42836  017EBE  22DE               	addwfc	postinc2,f,c
 42837  017EC0  22DE               	addwfc	postinc2,f,c
 42838  017EC2  D013               	goto	l10033
 42839  017EC4                     l10031:
 42840                           
 42841                           ;stkvar	_a @ sp[(-4)+-8]
 42842                           ;stkvar	_b @ sp[(-4)+-4]
 42843  017EC4  50E1               	movf	fsr1l,w,c
 42844  017EC6  0FF8               	addlw	-8
 42845  017EC8  6ED9               	movwf	fsr2l,c
 42846  017ECA  50E2               	movf	fsr1h,w,c
 42847  017ECC  6EDA               	movwf	fsr2h,c
 42848  017ECE  0EFF               	movlw	255
 42849  017ED0  22DA               	addwfc	fsr2h,f,c
 42850  017ED2  0EF4               	movlw	-12
 42851  017ED4  50E3               	movf	plusw1,w,c
 42852  017ED6  5EDE               	subwf	postinc2,f,c
 42853  017ED8  0EF5               	movlw	-11
 42854  017EDA  50E3               	movf	plusw1,w,c
 42855  017EDC  5ADE               	subwfb	postinc2,f,c
 42856  017EDE  0EF6               	movlw	-10
 42857  017EE0  50E3               	movf	plusw1,w,c
 42858  017EE2  5ADE               	subwfb	postinc2,f,c
 42859  017EE4  0EF7               	movlw	-9
 42860  017EE6  50E3               	movf	plusw1,w,c
 42861  017EE8  5ADE               	subwfb	postinc2,f,c
 42862  017EEA                     l10033:
 42863                           
 42864                           ;stkvar	_b @ sp[(-4)+-4]
 42865  017EEA  0EF8               	movlw	-8
 42866  017EEC  50E3               	movf	plusw1,w,c
 42867  017EEE  E145               	bnz	l10055
 42868  017EF0  0EF9               	movlw	-7
 42869  017EF2  50E3               	movf	plusw1,w,c
 42870  017EF4  E142               	bnz	l10055
 42871  017EF6  0EFA               	movlw	-6
 42872  017EF8  50E3               	movf	plusw1,w,c
 42873  017EFA  E13F               	bnz	l10055
 42874  017EFC  0EFB               	movlw	-5
 42875  017EFE  50E3               	movf	plusw1,w,c
 42876  017F00  A4D8               	btfss	status,2,c
 42877  017F02  D03B               	goto	l10055
 42878                           
 42879                           ;stkvar	_grs @ sp[(-4)+0]
 42880  017F04  0EFC               	movlw	-4
 42881  017F06  50E3               	movf	plusw1,w,c
 42882  017F08  A4D8               	btfss	status,2,c
 42883  017F0A  D037               	goto	l10055
 42884  017F0C                     u7540:
 42885  017F0C  0E00               	movlw	0
 42886  017F0E  6E2A               	movwf	btemp^0,c
 42887  017F10  0E00               	movlw	0
 42888  017F12  6E2B               	movwf	(btemp+1)^0,c
 42889  017F14  0E00               	movlw	0
 42890  017F16  6E2C               	movwf	(btemp+2)^0,c
 42891  017F18  0E00               	movlw	0
 42892  017F1A  6E2D               	movwf	(btemp+3)^0,c
 42893  017F1C  D0C6               	goto	l3270
 42894  017F1E                     l10041:
 42895                           
 42896                           ;stkvar	_b @ sp[(-4)+-4]
 42897  017F1E  90D8               	bcf	status,0,c
 42898  017F20  0EF8               	movlw	-8
 42899  017F22  36E3               	rlcf	plusw1,f,c
 42900  017F24  0EF9               	movlw	-7
 42901  017F26  36E3               	rlcf	plusw1,f,c
 42902  017F28  0EFA               	movlw	-6
 42903  017F2A  36E3               	rlcf	plusw1,f,c
 42904  017F2C  0EFB               	movlw	-5
 42905  017F2E  36E3               	rlcf	plusw1,f,c
 42906                           
 42907                           ;stkvar	_grs @ sp[(-4)+0]
 42908  017F30  0EFC               	movlw	-4
 42909  017F32  AEE3               	btfss	plusw1,7,c
 42910  017F34  D002               	goto	l3282
 42911                           
 42912                           ;stkvar	_b @ sp[(-4)+-4]
 42913  017F36  0EF8               	movlw	-8
 42914  017F38  80E3               	bsf	plusw1,0,c
 42915  017F3A                     l3282:
 42916                           
 42917                           ;stkvar	_grs @ sp[(-4)+0]
 42918  017F3A  0EFC               	movlw	-4
 42919  017F3C  A0E3               	btfss	plusw1,0,c
 42920  017F3E  D00E               	goto	l10049
 42921                           
 42922                           ;stkvar	_grs @ sp[(-4)+0]
 42923  017F40  0EFC               	movlw	-4
 42924  017F42  006F FF8C  F035    	movff	plusw1,btemp+11
 42925  017F48  90D8               	bcf	status,0,c
 42926  017F4A  3435               	rlcf	(btemp+11)^0,w,c
 42927  017F4C  6E34               	movwf	(btemp+10)^0,c
 42928  017F4E  0E01               	movlw	1
 42929  017F50  1234               	iorwf	(btemp+10)^0,f,c
 42930                           
 42931                           ;stkvar	_grs @ sp[(-4)+0]
 42932  017F52  0EFC               	movlw	-4
 42933  017F54  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42934  017F5A  D009               	goto	l10051
 42935  017F5C                     l10049:
 42936                           
 42937                           ;stkvar	_grs @ sp[(-4)+0]
 42938  017F5C  50E1               	movf	fsr1l,w,c
 42939  017F5E  0FFC               	addlw	-4
 42940  017F60  6ED9               	movwf	fsr2l,c
 42941  017F62  50E2               	movf	fsr1h,w,c
 42942  017F64  6EDA               	movwf	fsr2h,c
 42943  017F66  0EFF               	movlw	255
 42944  017F68  22DA               	addwfc	fsr2h,f,c
 42945  017F6A  90D8               	bcf	status,0,c
 42946  017F6C  36DF               	rlcf	indf2,f,c
 42947  017F6E                     l10051:
 42948                           
 42949                           ;stkvar	_bexp @ sp[(-4)+1]
 42950  017F6E  0EFD               	movlw	-3
 42951  017F70  50E3               	movf	plusw1,w,c
 42952  017F72  B4D8               	btfsc	status,2,c
 42953  017F74  D002               	goto	l10055
 42954                           
 42955                           ;stkvar	_bexp @ sp[(-4)+1]
 42956  017F76  0EFD               	movlw	-3
 42957  017F78  06E3               	decf	plusw1,f,c
 42958  017F7A                     l10055:
 42959                           
 42960                           ;stkvar	_b @ sp[(-4)+-4]
 42961  017F7A  0EFA               	movlw	-6
 42962  017F7C  AEE3               	btfss	plusw1,7,c
 42963  017F7E  D7CF               	goto	l10041
 42964  017F80                     u7580:
 42965                           
 42966                           ;stkvar	_aexp @ sp[(-4)+2]
 42967  017F80  0EFE               	movlw	-2
 42968  017F82  6AE3               	clrf	plusw1,c
 42969                           
 42970                           ;stkvar	_grs @ sp[(-4)+0]
 42971  017F84  0EFC               	movlw	-4
 42972  017F86  AEE3               	btfss	plusw1,7,c
 42973  017F88  D00F               	goto	l10069
 42974                           
 42975                           ;stkvar	_grs @ sp[(-4)+0]
 42976  017F8A  0EFC               	movlw	-4
 42977  017F8C  006F FF8C  F035    	movff	plusw1,btemp+11
 42978  017F92  0E7F               	movlw	127
 42979  017F94  1635               	andwf	(btemp+11)^0,f,c
 42980  017F96  B4D8               	btfsc	status,2,c
 42981  017F98  D004               	goto	l10065
 42982  017F9A                     u7600:
 42983                           
 42984                           ;stkvar	_aexp @ sp[(-4)+2]
 42985  017F9A  0EFE               	movlw	-2
 42986  017F9C  6AE3               	clrf	plusw1,c
 42987  017F9E  2AE3               	incf	plusw1,f,c
 42988  017FA0  D003               	goto	l10069
 42989  017FA2                     l10065:
 42990                           
 42991                           ;stkvar	_b @ sp[(-4)+-4]
 42992  017FA2  0EF8               	movlw	-8
 42993  017FA4  B0E3               	btfsc	plusw1,0,c
 42994  017FA6  D7F9               	goto	u7600
 42995  017FA8                     l10069:
 42996                           
 42997                           ;stkvar	_aexp @ sp[(-4)+2]
 42998  017FA8  0EFE               	movlw	-2
 42999  017FAA  50E3               	movf	plusw1,w,c
 43000  017FAC  B4D8               	btfsc	status,2,c
 43001  017FAE  D02B               	goto	l10081
 43002                           
 43003                           ;stkvar	_b @ sp[(-4)+-4]
 43004  017FB0  50E1               	movf	fsr1l,w,c
 43005  017FB2  0FF8               	addlw	-8
 43006  017FB4  6ED9               	movwf	fsr2l,c
 43007  017FB6  50E2               	movf	fsr1h,w,c
 43008  017FB8  6EDA               	movwf	fsr2h,c
 43009  017FBA  0EFF               	movlw	255
 43010  017FBC  22DA               	addwfc	fsr2h,f,c
 43011  017FBE  2ADE               	incf	postinc2,f,c
 43012  017FC0  0E00               	movlw	0
 43013  017FC2  22DE               	addwfc	postinc2,f,c
 43014  017FC4  22DE               	addwfc	postinc2,f,c
 43015  017FC6  22DE               	addwfc	postinc2,f,c
 43016                           
 43017                           ;stkvar	_b @ sp[(-4)+-4]
 43018  017FC8  0EFB               	movlw	-5
 43019  017FCA  A0E3               	btfss	plusw1,0,c
 43020  017FCC  D01C               	goto	l10081
 43021  017FCE  0E01               	movlw	1
 43022  017FD0  6E35               	movwf	(btemp+11)^0,c
 43023                           
 43024                           ;stkvar	_b @ sp[(-4)+-4]
 43025  017FD2  50E1               	movf	fsr1l,w,c
 43026  017FD4  0FF8               	addlw	-8
 43027  017FD6  6ED9               	movwf	fsr2l,c
 43028  017FD8  50E2               	movf	fsr1h,w,c
 43029  017FDA  6EDA               	movwf	fsr2h,c
 43030  017FDC  0EFF               	movlw	255
 43031  017FDE  22DA               	addwfc	fsr2h,f,c
 43032  017FE0  2835               	incf	(btemp+11)^0,w,c
 43033  017FE2  52DE               	movf	postinc2,f,c
 43034  017FE4  D008               	goto	u7640
 43035  017FE6                     u7645:
 43036  017FE6  52DE               	movf	postinc2,f,c
 43037  017FE8  90D8               	bcf	status,0,c
 43038  017FEA  BEDC               	btfsc	preinc2,7,c
 43039  017FEC  80D8               	bsf	status,0,c
 43040  017FEE  32DD               	rrcf	postdec2,f,c
 43041  017FF0  32DD               	rrcf	postdec2,f,c
 43042  017FF2  32DD               	rrcf	postdec2,f,c
 43043  017FF4  32DE               	rrcf	postinc2,f,c
 43044  017FF6                     u7640:
 43045  017FF6  2EE8               	decfsz	wreg,f,c
 43046  017FF8  D7F6               	goto	u7645
 43047                           
 43048                           ;stkvar	_bexp @ sp[(-4)+1]
 43049  017FFA  0EFD               	movlw	-3
 43050  017FFC  28E3               	incf	plusw1,w,c
 43051  017FFE  B4D8               	btfsc	status,2,c
 43052  018000  D002               	goto	l10081
 43053                           
 43054                           ;stkvar	_bexp @ sp[(-4)+1]
 43055  018002  0EFD               	movlw	-3
 43056  018004  2AE3               	incf	plusw1,f,c
 43057  018006                     l10081:
 43058                           
 43059                           ;stkvar	_bexp @ sp[(-4)+1]
 43060  018006  0EFD               	movlw	-3
 43061  018008  28E3               	incf	plusw1,w,c
 43062  01800A  B4D8               	btfsc	status,2,c
 43063  01800C  D004               	goto	u7670
 43064                           
 43065                           ;stkvar	_bexp @ sp[(-4)+1]
 43066  01800E  0EFD               	movlw	-3
 43067  018010  50E3               	movf	plusw1,w,c
 43068  018012  A4D8               	btfss	status,2,c
 43069  018014  D00E               	goto	l10091
 43070  018016                     u7670:
 43071                           
 43072                           ;stkvar	_b @ sp[(-4)+-4]
 43073  018016  0EF8               	movlw	-8
 43074  018018  6AE3               	clrf	plusw1,c
 43075  01801A  0EF9               	movlw	-7
 43076  01801C  6AE3               	clrf	plusw1,c
 43077  01801E  0EFA               	movlw	-6
 43078  018020  6AE3               	clrf	plusw1,c
 43079  018022  0EFB               	movlw	-5
 43080  018024  6AE3               	clrf	plusw1,c
 43081                           
 43082                           ;stkvar	_bexp @ sp[(-4)+1]
 43083  018026  0EFD               	movlw	-3
 43084  018028  50E3               	movf	plusw1,w,c
 43085  01802A  A4D8               	btfss	status,2,c
 43086  01802C  D002               	goto	l10091
 43087                           
 43088                           ;stkvar	_signs @ sp[(-4)+3]
 43089  01802E  0EFF               	movlw	-1
 43090  018030  6AE3               	clrf	plusw1,c
 43091  018032                     l10091:
 43092                           
 43093                           ;stkvar	_bexp @ sp[(-4)+1]
 43094  018032  0EFD               	movlw	-3
 43095  018034  A0E3               	btfss	plusw1,0,c
 43096  018036  D009               	goto	l10095
 43097                           
 43098                           ;stkvar	_b @ sp[(-4)+-4]
 43099  018038  0EFA               	movlw	250
 43100  01803A  24E1               	addwf	fsr1l,w,c
 43101  01803C  6ED9               	movwf	fsr2l,c
 43102  01803E  0EFF               	movlw	255
 43103  018040  20E2               	addwfc	fsr1h,w,c
 43104  018042  6EDA               	movwf	fsr2h,c
 43105  018044  0E00               	movlw	0
 43106  018046  8EDB               	bsf	plusw2,7,c
 43107  018048  D008               	goto	l10097
 43108  01804A                     l10095:
 43109                           
 43110                           ;stkvar	_b @ sp[(-4)+-4]
 43111  01804A  0EFA               	movlw	250
 43112  01804C  24E1               	addwf	fsr1l,w,c
 43113  01804E  6ED9               	movwf	fsr2l,c
 43114  018050  0EFF               	movlw	255
 43115  018052  20E2               	addwfc	fsr1h,w,c
 43116  018054  6EDA               	movwf	fsr2h,c
 43117  018056  0E7F               	movlw	127
 43118  018058  16DF               	andwf	indf2,f,c
 43119  01805A                     l10097:
 43120                           
 43121                           ;stkvar	_b @ sp[(-4)+-4]
 43122  01805A  0EFB               	movlw	251
 43123  01805C  24E1               	addwf	fsr1l,w,c
 43124  01805E  6ED9               	movwf	fsr2l,c
 43125  018060  0EFF               	movlw	255
 43126  018062  20E2               	addwfc	fsr1h,w,c
 43127  018064  6EDA               	movwf	fsr2h,c
 43128                           
 43129                           ;stkvar	_bexp @ sp[(-4)+1]
 43130  018066  0EFD               	movlw	-3
 43131  018068  006F FF8C  F035    	movff	plusw1,btemp+11
 43132  01806E  90D8               	bcf	status,0,c
 43133  018070  3035               	rrcf	(btemp+11)^0,w,c
 43134  018072  6EDF               	movwf	indf2,c
 43135                           
 43136                           ;stkvar	_signs @ sp[(-4)+3]
 43137  018074  0EFF               	movlw	-1
 43138  018076  AEE3               	btfss	plusw1,7,c
 43139  018078  D008               	goto	l10103
 43140                           
 43141                           ;stkvar	_b @ sp[(-4)+-4]
 43142  01807A  0EFB               	movlw	251
 43143  01807C  24E1               	addwf	fsr1l,w,c
 43144  01807E  6ED9               	movwf	fsr2l,c
 43145  018080  0EFF               	movlw	255
 43146  018082  20E2               	addwfc	fsr1h,w,c
 43147  018084  6EDA               	movwf	fsr2h,c
 43148  018086  0E00               	movlw	0
 43149  018088  8EDB               	bsf	plusw2,7,c
 43150  01808A                     l10103:
 43151                           
 43152                           ;stkvar	_b @ sp[(-4)+-4]
 43153  01808A  0EF8               	movlw	-8
 43154  01808C  006F FF8C  F02A    	movff	plusw1,btemp
 43155  018092  0EF9               	movlw	-7
 43156  018094  006F FF8C  F02B    	movff	plusw1,btemp+1
 43157  01809A  0EFA               	movlw	-6
 43158  01809C  006F FF8C  F02C    	movff	plusw1,btemp+2
 43159  0180A2  0EFB               	movlw	-5
 43160  0180A4  006F FF8C  F02D    	movff	plusw1,btemp+3
 43161  0180AA                     l3270:
 43162                           
 43163                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 43164  0180AA  0EF4               	movlw	244
 43165  0180AC  26E1               	addwf	fsr1l,f,c
 43166  0180AE  0EFF               	movlw	255
 43167  0180B0  22E2               	addwfc	fsr1h,f,c
 43168  0180B2  0012               	return		;funcret
 43169  0180B4                     __end_of___fladd:
 43170                           	opt callstack 0
 43171                           
 43172 ;; *************** function ___flmul *****************
 43173 ;; Defined at:
 43174 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 43175 ;; Parameters:    Size  Location     Type
 43176 ;;  b               4  [STACK] unsigned char 
 43177 ;;  a               4  [STACK] unsigned char 
 43178 ;; Auto vars:     Size  Location     Type
 43179 ;;  prod            4  [STACK] struct .
 43180 ;;  grs             4  [STACK] unsigned long 
 43181 ;;  temp            2  [STACK] struct .
 43182 ;;  bexp            1  [STACK] unsigned char 
 43183 ;;  aexp            1  [STACK] unsigned char 
 43184 ;;  sign            1  [STACK] unsigned char 
 43185 ;; Return value:  Size  Location     Type
 43186 ;;                  4  [STACK] unsigned char 
 43187 ;; Registers used:
 43188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 43189 ;; Tracked objects:
 43190 ;;		On entry : 0/39
 43191 ;;		On exit  : 0/0
 43192 ;;		Unchanged: 0/0
 43193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43198 ;;Total ram usage:        0 bytes
 43199 ;; Hardware stack levels used:    1
 43200 ;; Hardware stack levels required when called:   15
 43201 ;; This function calls:
 43202 ;;		Nothing
 43203 ;; This function is called by:
 43204 ;;		_conv_raw_result
 43205 ;;		_lp_filter
 43206 ;;		_calc_model_data
 43207 ;;		_load_hist_data
 43208 ;;		_calc_bsoc
 43209 ;;		_init_bsoc
 43210 ;;		_efgtoa
 43211 ;; This function uses a reentrant model
 43212 ;;
 43213                           
 43214                           	psect	text156
 43215  0170CE                     __ptext156:
 43216                           	opt callstack 0
 43217  0170CE                     ___flmul:
 43218                           	opt callstack 0
 43219                           
 43220                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 43221  0170CE  0E0D               	movlw	13
 43222  0170D0  26E1               	addwf	fsr1l,f,c
 43223  0170D2  0E00               	movlw	0
 43224  0170D4  22E2               	addwfc	fsr1h,f,c
 43225                           
 43226                           ;stkvar	_b @ sp[(-13)+-4]
 43227                           
 43228                           ;incstack = 0
 43229 ;; hardware stack exceeded
 43230  0170D6  0EF2               	movlw	242
 43231  0170D8  24E1               	addwf	fsr1l,w,c
 43232  0170DA  6ED9               	movwf	fsr2l,c
 43233  0170DC  0EFF               	movlw	255
 43234  0170DE  20E2               	addwfc	fsr1h,w,c
 43235  0170E0  6EDA               	movwf	fsr2h,c
 43236  0170E2  50DF               	movf	indf2,w,c
 43237  0170E4  6E35               	movwf	(btemp+11)^0,c
 43238  0170E6  0E80               	movlw	128
 43239  0170E8  1635               	andwf	(btemp+11)^0,f,c
 43240                           
 43241                           ;stkvar	_sign @ sp[(-13)+12]
 43242  0170EA  0EFF               	movlw	-1
 43243  0170EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43244                           
 43245                           ;stkvar	_b @ sp[(-13)+-4]
 43246  0170F2  0EF2               	movlw	242
 43247  0170F4  24E1               	addwf	fsr1l,w,c
 43248  0170F6  6ED9               	movwf	fsr2l,c
 43249  0170F8  0EFF               	movlw	255
 43250  0170FA  20E2               	addwfc	fsr1h,w,c
 43251  0170FC  6EDA               	movwf	fsr2h,c
 43252  0170FE  50DF               	movf	indf2,w,c
 43253  017100  6E35               	movwf	(btemp+11)^0,c
 43254  017102  90D8               	bcf	status,0,c
 43255  017104  3435               	rlcf	(btemp+11)^0,w,c
 43256  017106  6E34               	movwf	(btemp+10)^0,c
 43257                           
 43258                           ;stkvar	_bexp @ sp[(-13)+10]
 43259  017108  0EFD               	movlw	-3
 43260  01710A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43261                           
 43262                           ;stkvar	_b @ sp[(-13)+-4]
 43263  017110  0EF1               	movlw	241
 43264  017112  24E1               	addwf	fsr1l,w,c
 43265  017114  6ED9               	movwf	fsr2l,c
 43266  017116  0EFF               	movlw	255
 43267  017118  20E2               	addwfc	fsr1h,w,c
 43268  01711A  6EDA               	movwf	fsr2h,c
 43269  01711C  AEDF               	btfss	indf2,7,c
 43270  01711E  D002               	goto	l10567
 43271                           
 43272                           ;stkvar	_bexp @ sp[(-13)+10]
 43273  017120  0EFD               	movlw	-3
 43274  017122  80E3               	bsf	plusw1,0,c
 43275  017124                     l10567:
 43276                           
 43277                           ;stkvar	_bexp @ sp[(-13)+10]
 43278  017124  0EFD               	movlw	-3
 43279  017126  50E3               	movf	plusw1,w,c
 43280  017128  B4D8               	btfsc	status,2,c
 43281  01712A  D01F               	goto	l10575
 43282                           
 43283                           ;stkvar	_bexp @ sp[(-13)+10]
 43284  01712C  0EFD               	movlw	-3
 43285  01712E  28E3               	incf	plusw1,w,c
 43286  017130  A4D8               	btfss	status,2,c
 43287  017132  D018               	goto	l10573
 43288  017134  0E00               	movlw	0
 43289  017136  6E32               	movwf	(btemp+8)^0,c
 43290  017138  0E00               	movlw	0
 43291  01713A  6E33               	movwf	(btemp+9)^0,c
 43292  01713C  0E00               	movlw	0
 43293  01713E  6E34               	movwf	(btemp+10)^0,c
 43294  017140  0E00               	movlw	0
 43295  017142  6E35               	movwf	(btemp+11)^0,c
 43296                           
 43297                           ;stkvar	_b @ sp[(-13)+-4]
 43298  017144  0EEF               	movlw	-17
 43299  017146  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43300  01714C  0EF0               	movlw	-16
 43301  01714E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43302  017154  0EF1               	movlw	-15
 43303  017156  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43304  01715C  0EF2               	movlw	-14
 43305  01715E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43306  017164                     l10573:
 43307                           
 43308                           ;stkvar	_b @ sp[(-13)+-4]
 43309  017164  0EF1               	movlw	-15
 43310  017166  8EE3               	bsf	plusw1,7,c
 43311  017168  D018               	goto	l10577
 43312  01716A                     l10575:
 43313  01716A  0E00               	movlw	0
 43314  01716C  6E32               	movwf	(btemp+8)^0,c
 43315  01716E  0E00               	movlw	0
 43316  017170  6E33               	movwf	(btemp+9)^0,c
 43317  017172  0E00               	movlw	0
 43318  017174  6E34               	movwf	(btemp+10)^0,c
 43319  017176  0E00               	movlw	0
 43320  017178  6E35               	movwf	(btemp+11)^0,c
 43321                           
 43322                           ;stkvar	_b @ sp[(-13)+-4]
 43323  01717A  0EEF               	movlw	-17
 43324  01717C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43325  017182  0EF0               	movlw	-16
 43326  017184  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43327  01718A  0EF1               	movlw	-15
 43328  01718C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43329  017192  0EF2               	movlw	-14
 43330  017194  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43331  01719A                     l10577:
 43332                           
 43333                           ;stkvar	_a @ sp[(-13)+-8]
 43334  01719A  0EEE               	movlw	238
 43335  01719C  24E1               	addwf	fsr1l,w,c
 43336  01719E  6ED9               	movwf	fsr2l,c
 43337  0171A0  0EFF               	movlw	255
 43338  0171A2  20E2               	addwfc	fsr1h,w,c
 43339  0171A4  6EDA               	movwf	fsr2h,c
 43340  0171A6  50DF               	movf	indf2,w,c
 43341  0171A8  6E35               	movwf	(btemp+11)^0,c
 43342  0171AA  0E80               	movlw	128
 43343  0171AC  1635               	andwf	(btemp+11)^0,f,c
 43344                           
 43345                           ;stkvar	_sign @ sp[(-13)+12]
 43346  0171AE  50E1               	movf	fsr1l,w,c
 43347  0171B0  0FFF               	addlw	-1
 43348  0171B2  6ED9               	movwf	fsr2l,c
 43349  0171B4  50E2               	movf	fsr1h,w,c
 43350  0171B6  6EDA               	movwf	fsr2h,c
 43351  0171B8  0EFF               	movlw	255
 43352  0171BA  22DA               	addwfc	fsr2h,f,c
 43353  0171BC  5035               	movf	(btemp+11)^0,w,c
 43354  0171BE  1ADF               	xorwf	indf2,f,c
 43355                           
 43356                           ;stkvar	_a @ sp[(-13)+-8]
 43357  0171C0  0EEE               	movlw	238
 43358  0171C2  24E1               	addwf	fsr1l,w,c
 43359  0171C4  6ED9               	movwf	fsr2l,c
 43360  0171C6  0EFF               	movlw	255
 43361  0171C8  20E2               	addwfc	fsr1h,w,c
 43362  0171CA  6EDA               	movwf	fsr2h,c
 43363  0171CC  50DF               	movf	indf2,w,c
 43364  0171CE  6E35               	movwf	(btemp+11)^0,c
 43365  0171D0  90D8               	bcf	status,0,c
 43366  0171D2  3435               	rlcf	(btemp+11)^0,w,c
 43367  0171D4  6E34               	movwf	(btemp+10)^0,c
 43368                           
 43369                           ;stkvar	_aexp @ sp[(-13)+11]
 43370  0171D6  0EFE               	movlw	-2
 43371  0171D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43372                           
 43373                           ;stkvar	_a @ sp[(-13)+-8]
 43374  0171DE  0EED               	movlw	237
 43375  0171E0  24E1               	addwf	fsr1l,w,c
 43376  0171E2  6ED9               	movwf	fsr2l,c
 43377  0171E4  0EFF               	movlw	255
 43378  0171E6  20E2               	addwfc	fsr1h,w,c
 43379  0171E8  6EDA               	movwf	fsr2h,c
 43380  0171EA  AEDF               	btfss	indf2,7,c
 43381  0171EC  D002               	goto	l10585
 43382                           
 43383                           ;stkvar	_aexp @ sp[(-13)+11]
 43384  0171EE  0EFE               	movlw	-2
 43385  0171F0  80E3               	bsf	plusw1,0,c
 43386  0171F2                     l10585:
 43387                           
 43388                           ;stkvar	_aexp @ sp[(-13)+11]
 43389  0171F2  0EFE               	movlw	-2
 43390  0171F4  50E3               	movf	plusw1,w,c
 43391  0171F6  B4D8               	btfsc	status,2,c
 43392  0171F8  D01F               	goto	l10593
 43393                           
 43394                           ;stkvar	_aexp @ sp[(-13)+11]
 43395  0171FA  0EFE               	movlw	-2
 43396  0171FC  28E3               	incf	plusw1,w,c
 43397  0171FE  A4D8               	btfss	status,2,c
 43398  017200  D018               	goto	l10591
 43399  017202  0E00               	movlw	0
 43400  017204  6E32               	movwf	(btemp+8)^0,c
 43401  017206  0E00               	movlw	0
 43402  017208  6E33               	movwf	(btemp+9)^0,c
 43403  01720A  0E00               	movlw	0
 43404  01720C  6E34               	movwf	(btemp+10)^0,c
 43405  01720E  0E00               	movlw	0
 43406  017210  6E35               	movwf	(btemp+11)^0,c
 43407                           
 43408                           ;stkvar	_a @ sp[(-13)+-8]
 43409  017212  0EEB               	movlw	-21
 43410  017214  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43411  01721A  0EEC               	movlw	-20
 43412  01721C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43413  017222  0EED               	movlw	-19
 43414  017224  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43415  01722A  0EEE               	movlw	-18
 43416  01722C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43417  017232                     l10591:
 43418                           
 43419                           ;stkvar	_a @ sp[(-13)+-8]
 43420  017232  0EED               	movlw	-19
 43421  017234  8EE3               	bsf	plusw1,7,c
 43422  017236  D018               	goto	l10595
 43423  017238                     l10593:
 43424  017238  0E00               	movlw	0
 43425  01723A  6E32               	movwf	(btemp+8)^0,c
 43426  01723C  0E00               	movlw	0
 43427  01723E  6E33               	movwf	(btemp+9)^0,c
 43428  017240  0E00               	movlw	0
 43429  017242  6E34               	movwf	(btemp+10)^0,c
 43430  017244  0E00               	movlw	0
 43431  017246  6E35               	movwf	(btemp+11)^0,c
 43432                           
 43433                           ;stkvar	_a @ sp[(-13)+-8]
 43434  017248  0EEB               	movlw	-21
 43435  01724A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43436  017250  0EEC               	movlw	-20
 43437  017252  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43438  017258  0EED               	movlw	-19
 43439  01725A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43440  017260  0EEE               	movlw	-18
 43441  017262  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43442  017268                     l10595:
 43443                           
 43444                           ;stkvar	_aexp @ sp[(-13)+11]
 43445  017268  0EFE               	movlw	-2
 43446  01726A  50E3               	movf	plusw1,w,c
 43447  01726C  B4D8               	btfsc	status,2,c
 43448  01726E  D004               	goto	u8730
 43449                           
 43450                           ;stkvar	_bexp @ sp[(-13)+10]
 43451  017270  0EFD               	movlw	-3
 43452  017272  50E3               	movf	plusw1,w,c
 43453  017274  A4D8               	btfss	status,2,c
 43454  017276  D009               	goto	l10603
 43455  017278                     u8730:
 43456  017278  0E00               	movlw	0
 43457  01727A  6E2A               	movwf	btemp^0,c
 43458  01727C  0E00               	movlw	0
 43459  01727E  6E2B               	movwf	(btemp+1)^0,c
 43460  017280  0E00               	movlw	0
 43461  017282  6E2C               	movwf	(btemp+2)^0,c
 43462  017284  0E00               	movlw	0
 43463  017286  6E2D               	movwf	(btemp+3)^0,c
 43464  017288  D332               	goto	l3351
 43465  01728A                     l10603:
 43466                           
 43467                           ;stkvar	_b @ sp[(-13)+-4]
 43468  01728A  0EEF               	movlw	-17
 43469  01728C  006F FF8C  F035    	movff	plusw1,btemp+11
 43470                           
 43471                           ;stkvar	_a @ sp[(-13)+-8]
 43472  017292  0EED               	movlw	237
 43473  017294  24E1               	addwf	fsr1l,w,c
 43474  017296  6ED9               	movwf	fsr2l,c
 43475  017298  0EFF               	movlw	255
 43476  01729A  20E2               	addwfc	fsr1h,w,c
 43477  01729C  6EDA               	movwf	fsr2h,c
 43478  01729E  50DF               	movf	indf2,w,c
 43479  0172A0  0235               	mulwf	(btemp+11)^0,c
 43480                           
 43481                           ;stkvar	_temp @ sp[(-13)+8]
 43482  0172A2  0EFB               	movlw	-5
 43483  0172A4  006F FFCF FFE3     	movff	prodl,plusw1
 43484  0172AA  0EFC               	movlw	-4
 43485  0172AC  006F FFD3 FFE3     	movff	prodh,plusw1
 43486                           
 43487                           ;stkvar	_temp @ sp[(-13)+8]
 43488  0172B2  0EFB               	movlw	-5
 43489  0172B4  006F FF8C  F035    	movff	plusw1,btemp+11
 43490  0172BA  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43491  0172C0  6A2F               	clrf	(btemp+5)^0,c
 43492  0172C2  6A30               	clrf	(btemp+6)^0,c
 43493  0172C4  6A31               	clrf	(btemp+7)^0,c
 43494                           
 43495                           ;stkvar	_grs @ sp[(-13)+4]
 43496  0172C6  0EF7               	movlw	-9
 43497  0172C8  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43498  0172CE  0EF8               	movlw	-8
 43499  0172D0  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43500  0172D6  0EF9               	movlw	-7
 43501  0172D8  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43502  0172DE  0EFA               	movlw	-6
 43503  0172E0  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43504                           
 43505                           ;stkvar	_temp @ sp[(-13)+8]
 43506  0172E6  0EFC               	movlw	252
 43507  0172E8  24E1               	addwf	fsr1l,w,c
 43508  0172EA  6ED9               	movwf	fsr2l,c
 43509  0172EC  0EFF               	movlw	255
 43510  0172EE  20E2               	addwfc	fsr1h,w,c
 43511  0172F0  6EDA               	movwf	fsr2h,c
 43512  0172F2  50DF               	movf	indf2,w,c
 43513  0172F4  6E35               	movwf	(btemp+11)^0,c
 43514  0172F6  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43515  0172FC  6A2F               	clrf	(btemp+5)^0,c
 43516  0172FE  6A30               	clrf	(btemp+6)^0,c
 43517  017300  6A31               	clrf	(btemp+7)^0,c
 43518                           
 43519                           ;stkvar	_prod @ sp[(-13)+0]
 43520  017302  0EF3               	movlw	-13
 43521  017304  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43522  01730A  0EF4               	movlw	-12
 43523  01730C  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43524  017312  0EF5               	movlw	-11
 43525  017314  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43526  01731A  0EF6               	movlw	-10
 43527  01731C  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43528                           
 43529                           ;stkvar	_b @ sp[(-13)+-4]
 43530  017322  0EF0               	movlw	240
 43531  017324  24E1               	addwf	fsr1l,w,c
 43532  017326  6ED9               	movwf	fsr2l,c
 43533  017328  0EFF               	movlw	255
 43534  01732A  20E2               	addwfc	fsr1h,w,c
 43535  01732C  6EDA               	movwf	fsr2h,c
 43536  01732E  50DF               	movf	indf2,w,c
 43537  017330  6E35               	movwf	(btemp+11)^0,c
 43538                           
 43539                           ;stkvar	_a @ sp[(-13)+-8]
 43540  017332  0EEC               	movlw	236
 43541  017334  24E1               	addwf	fsr1l,w,c
 43542  017336  6ED9               	movwf	fsr2l,c
 43543  017338  0EFF               	movlw	255
 43544  01733A  20E2               	addwfc	fsr1h,w,c
 43545  01733C  6EDA               	movwf	fsr2h,c
 43546  01733E  50DF               	movf	indf2,w,c
 43547  017340  0235               	mulwf	(btemp+11)^0,c
 43548                           
 43549                           ;stkvar	_temp @ sp[(-13)+8]
 43550  017342  0EFB               	movlw	-5
 43551  017344  006F FFCF FFE3     	movff	prodl,plusw1
 43552  01734A  0EFC               	movlw	-4
 43553  01734C  006F FFD3 FFE3     	movff	prodh,plusw1
 43554                           
 43555                           ;stkvar	_grs @ sp[(-13)+4]
 43556  017352  50E1               	movf	fsr1l,w,c
 43557  017354  0FF7               	addlw	-9
 43558  017356  6ED9               	movwf	fsr2l,c
 43559  017358  50E2               	movf	fsr1h,w,c
 43560  01735A  6EDA               	movwf	fsr2h,c
 43561  01735C  0EFF               	movlw	255
 43562  01735E  22DA               	addwfc	fsr2h,f,c
 43563                           
 43564                           ;stkvar	_temp @ sp[(-13)+8]
 43565  017360  0EFB               	movlw	-5
 43566  017362  50E3               	movf	plusw1,w,c
 43567  017364  26DE               	addwf	postinc2,f,c
 43568  017366  0E00               	movlw	0
 43569  017368  22DE               	addwfc	postinc2,f,c
 43570  01736A  22DE               	addwfc	postinc2,f,c
 43571  01736C  22DE               	addwfc	postinc2,f,c
 43572                           
 43573                           ;stkvar	_prod @ sp[(-13)+0]
 43574  01736E  50E1               	movf	fsr1l,w,c
 43575  017370  0FF3               	addlw	-13
 43576  017372  6ED9               	movwf	fsr2l,c
 43577  017374  50E2               	movf	fsr1h,w,c
 43578  017376  6EDA               	movwf	fsr2h,c
 43579  017378  0EFF               	movlw	255
 43580  01737A  22DA               	addwfc	fsr2h,f,c
 43581                           
 43582                           ;stkvar	_temp @ sp[(-13)+8]
 43583  01737C  0EFC               	movlw	252
 43584  01737E  24E1               	addwf	fsr1l,w,c
 43585  017380  6EE9               	movwf	fsr0l,c
 43586  017382  0EFF               	movlw	255
 43587  017384  20E2               	addwfc	fsr1h,w,c
 43588  017386  6EEA               	movwf	fsr0h,c
 43589  017388  50EF               	movf	indf0,w,c
 43590  01738A  26DE               	addwf	postinc2,f,c
 43591  01738C  0E00               	movlw	0
 43592  01738E  22DE               	addwfc	postinc2,f,c
 43593  017390  22DE               	addwfc	postinc2,f,c
 43594  017392  22DE               	addwfc	postinc2,f,c
 43595                           
 43596                           ;stkvar	_b @ sp[(-13)+-4]
 43597  017394  0EF1               	movlw	241
 43598  017396  24E1               	addwf	fsr1l,w,c
 43599  017398  6ED9               	movwf	fsr2l,c
 43600  01739A  0EFF               	movlw	255
 43601  01739C  20E2               	addwfc	fsr1h,w,c
 43602  01739E  6EDA               	movwf	fsr2h,c
 43603  0173A0  50DF               	movf	indf2,w,c
 43604  0173A2  6E35               	movwf	(btemp+11)^0,c
 43605                           
 43606                           ;stkvar	_a @ sp[(-13)+-8]
 43607  0173A4  0EEB               	movlw	-21
 43608  0173A6  50E3               	movf	plusw1,w,c
 43609  0173A8  0235               	mulwf	(btemp+11)^0,c
 43610                           
 43611                           ;stkvar	_temp @ sp[(-13)+8]
 43612  0173AA  0EFB               	movlw	-5
 43613  0173AC  006F FFCF FFE3     	movff	prodl,plusw1
 43614  0173B2  0EFC               	movlw	-4
 43615  0173B4  006F FFD3 FFE3     	movff	prodh,plusw1
 43616                           
 43617                           ;stkvar	_grs @ sp[(-13)+4]
 43618  0173BA  50E1               	movf	fsr1l,w,c
 43619  0173BC  0FF7               	addlw	-9
 43620  0173BE  6ED9               	movwf	fsr2l,c
 43621  0173C0  50E2               	movf	fsr1h,w,c
 43622  0173C2  6EDA               	movwf	fsr2h,c
 43623  0173C4  0EFF               	movlw	255
 43624  0173C6  22DA               	addwfc	fsr2h,f,c
 43625                           
 43626                           ;stkvar	_temp @ sp[(-13)+8]
 43627  0173C8  0EFB               	movlw	-5
 43628  0173CA  50E3               	movf	plusw1,w,c
 43629  0173CC  26DE               	addwf	postinc2,f,c
 43630  0173CE  0E00               	movlw	0
 43631  0173D0  22DE               	addwfc	postinc2,f,c
 43632  0173D2  22DE               	addwfc	postinc2,f,c
 43633  0173D4  22DE               	addwfc	postinc2,f,c
 43634                           
 43635                           ;stkvar	_prod @ sp[(-13)+0]
 43636  0173D6  50E1               	movf	fsr1l,w,c
 43637  0173D8  0FF3               	addlw	-13
 43638  0173DA  6ED9               	movwf	fsr2l,c
 43639  0173DC  50E2               	movf	fsr1h,w,c
 43640  0173DE  6EDA               	movwf	fsr2h,c
 43641  0173E0  0EFF               	movlw	255
 43642  0173E2  22DA               	addwfc	fsr2h,f,c
 43643                           
 43644                           ;stkvar	_temp @ sp[(-13)+8]
 43645  0173E4  0EFC               	movlw	252
 43646  0173E6  24E1               	addwf	fsr1l,w,c
 43647  0173E8  6EE9               	movwf	fsr0l,c
 43648  0173EA  0EFF               	movlw	255
 43649  0173EC  20E2               	addwfc	fsr1h,w,c
 43650  0173EE  6EEA               	movwf	fsr0h,c
 43651  0173F0  50EF               	movf	indf0,w,c
 43652  0173F2  26DE               	addwf	postinc2,f,c
 43653  0173F4  0E00               	movlw	0
 43654  0173F6  22DE               	addwfc	postinc2,f,c
 43655  0173F8  22DE               	addwfc	postinc2,f,c
 43656  0173FA  22DE               	addwfc	postinc2,f,c
 43657                           
 43658                           ;stkvar	_grs @ sp[(-13)+4]
 43659  0173FC  50E1               	movf	fsr1l,w,c
 43660  0173FE  0FF7               	addlw	-9
 43661  017400  6ED9               	movwf	fsr2l,c
 43662  017402  50E2               	movf	fsr1h,w,c
 43663  017404  6EDA               	movwf	fsr2h,c
 43664  017406  0EFF               	movlw	255
 43665  017408  22DA               	addwfc	fsr2h,f,c
 43666  01740A  0E08               	movlw	8
 43667  01740C                     u8745:
 43668  01740C  90D8               	bcf	status,0,c
 43669  01740E  36DE               	rlcf	postinc2,f,c
 43670  017410  36DE               	rlcf	postinc2,f,c
 43671  017412  36DE               	rlcf	postinc2,f,c
 43672  017414  36DD               	rlcf	postdec2,f,c
 43673  017416  52DD               	movf	postdec2,f,c
 43674  017418  52DD               	movf	postdec2,f,c
 43675  01741A  2EE8               	decfsz	wreg,f,c
 43676  01741C  D7F7               	goto	u8745
 43677                           
 43678                           ;stkvar	_b @ sp[(-13)+-4]
 43679  01741E  0EF0               	movlw	240
 43680  017420  24E1               	addwf	fsr1l,w,c
 43681  017422  6ED9               	movwf	fsr2l,c
 43682  017424  0EFF               	movlw	255
 43683  017426  20E2               	addwfc	fsr1h,w,c
 43684  017428  6EDA               	movwf	fsr2h,c
 43685  01742A  50DF               	movf	indf2,w,c
 43686  01742C  6E35               	movwf	(btemp+11)^0,c
 43687                           
 43688                           ;stkvar	_a @ sp[(-13)+-8]
 43689  01742E  0EEB               	movlw	-21
 43690  017430  50E3               	movf	plusw1,w,c
 43691  017432  0235               	mulwf	(btemp+11)^0,c
 43692                           
 43693                           ;stkvar	_temp @ sp[(-13)+8]
 43694  017434  0EFB               	movlw	-5
 43695  017436  006F FFCF FFE3     	movff	prodl,plusw1
 43696  01743C  0EFC               	movlw	-4
 43697  01743E  006F FFD3 FFE3     	movff	prodh,plusw1
 43698                           
 43699                           ;stkvar	_temp @ sp[(-13)+8]
 43700  017444  0EFB               	movlw	-5
 43701  017446  006F FF8C  F034    	movff	plusw1,btemp+10
 43702  01744C  0EFC               	movlw	-4
 43703  01744E  006F FF8C  F035    	movff	plusw1,btemp+11
 43704                           
 43705                           ;stkvar	_grs @ sp[(-13)+4]
 43706  017454  50E1               	movf	fsr1l,w,c
 43707  017456  0FF7               	addlw	-9
 43708  017458  6ED9               	movwf	fsr2l,c
 43709  01745A  50E2               	movf	fsr1h,w,c
 43710  01745C  6EDA               	movwf	fsr2h,c
 43711  01745E  0EFF               	movlw	255
 43712  017460  22DA               	addwfc	fsr2h,f,c
 43713  017462  5034               	movf	(btemp+10)^0,w,c
 43714  017464  26DE               	addwf	postinc2,f,c
 43715  017466  5035               	movf	(btemp+11)^0,w,c
 43716  017468  22DE               	addwfc	postinc2,f,c
 43717  01746A  0E00               	movlw	0
 43718  01746C  22DE               	addwfc	postinc2,f,c
 43719  01746E  22DE               	addwfc	postinc2,f,c
 43720                           
 43721                           ;stkvar	_b @ sp[(-13)+-4]
 43722  017470  0EEF               	movlw	-17
 43723  017472  006F FF8C  F035    	movff	plusw1,btemp+11
 43724                           
 43725                           ;stkvar	_a @ sp[(-13)+-8]
 43726  017478  0EEC               	movlw	236
 43727  01747A  24E1               	addwf	fsr1l,w,c
 43728  01747C  6ED9               	movwf	fsr2l,c
 43729  01747E  0EFF               	movlw	255
 43730  017480  20E2               	addwfc	fsr1h,w,c
 43731  017482  6EDA               	movwf	fsr2h,c
 43732  017484  50DF               	movf	indf2,w,c
 43733  017486  0235               	mulwf	(btemp+11)^0,c
 43734                           
 43735                           ;stkvar	_temp @ sp[(-13)+8]
 43736  017488  0EFB               	movlw	-5
 43737  01748A  006F FFCF FFE3     	movff	prodl,plusw1
 43738  017490  0EFC               	movlw	-4
 43739  017492  006F FFD3 FFE3     	movff	prodh,plusw1
 43740                           
 43741                           ;stkvar	_temp @ sp[(-13)+8]
 43742  017498  0EFB               	movlw	-5
 43743  01749A  006F FF8C  F034    	movff	plusw1,btemp+10
 43744  0174A0  0EFC               	movlw	-4
 43745  0174A2  006F FF8C  F035    	movff	plusw1,btemp+11
 43746                           
 43747                           ;stkvar	_grs @ sp[(-13)+4]
 43748  0174A8  50E1               	movf	fsr1l,w,c
 43749  0174AA  0FF7               	addlw	-9
 43750  0174AC  6ED9               	movwf	fsr2l,c
 43751  0174AE  50E2               	movf	fsr1h,w,c
 43752  0174B0  6EDA               	movwf	fsr2h,c
 43753  0174B2  0EFF               	movlw	255
 43754  0174B4  22DA               	addwfc	fsr2h,f,c
 43755  0174B6  5034               	movf	(btemp+10)^0,w,c
 43756  0174B8  26DE               	addwf	postinc2,f,c
 43757  0174BA  5035               	movf	(btemp+11)^0,w,c
 43758  0174BC  22DE               	addwfc	postinc2,f,c
 43759  0174BE  0E00               	movlw	0
 43760  0174C0  22DE               	addwfc	postinc2,f,c
 43761  0174C2  22DE               	addwfc	postinc2,f,c
 43762                           
 43763                           ;stkvar	_grs @ sp[(-13)+4]
 43764  0174C4  50E1               	movf	fsr1l,w,c
 43765  0174C6  0FF7               	addlw	-9
 43766  0174C8  6ED9               	movwf	fsr2l,c
 43767  0174CA  50E2               	movf	fsr1h,w,c
 43768  0174CC  6EDA               	movwf	fsr2h,c
 43769  0174CE  0EFF               	movlw	255
 43770  0174D0  22DA               	addwfc	fsr2h,f,c
 43771  0174D2  0E08               	movlw	8
 43772  0174D4                     u8755:
 43773  0174D4  90D8               	bcf	status,0,c
 43774  0174D6  36DE               	rlcf	postinc2,f,c
 43775  0174D8  36DE               	rlcf	postinc2,f,c
 43776  0174DA  36DE               	rlcf	postinc2,f,c
 43777  0174DC  36DD               	rlcf	postdec2,f,c
 43778  0174DE  52DD               	movf	postdec2,f,c
 43779  0174E0  52DD               	movf	postdec2,f,c
 43780  0174E2  2EE8               	decfsz	wreg,f,c
 43781  0174E4  D7F7               	goto	u8755
 43782                           
 43783                           ;stkvar	_b @ sp[(-13)+-4]
 43784  0174E6  0EEF               	movlw	-17
 43785  0174E8  006F FF8C  F035    	movff	plusw1,btemp+11
 43786                           
 43787                           ;stkvar	_a @ sp[(-13)+-8]
 43788  0174EE  0EEB               	movlw	-21
 43789  0174F0  50E3               	movf	plusw1,w,c
 43790  0174F2  0235               	mulwf	(btemp+11)^0,c
 43791                           
 43792                           ;stkvar	_temp @ sp[(-13)+8]
 43793  0174F4  0EFB               	movlw	-5
 43794  0174F6  006F FFCF FFE3     	movff	prodl,plusw1
 43795  0174FC  0EFC               	movlw	-4
 43796  0174FE  006F FFD3 FFE3     	movff	prodh,plusw1
 43797                           
 43798                           ;stkvar	_temp @ sp[(-13)+8]
 43799  017504  0EFB               	movlw	-5
 43800  017506  006F FF8C  F034    	movff	plusw1,btemp+10
 43801  01750C  0EFC               	movlw	-4
 43802  01750E  006F FF8C  F035    	movff	plusw1,btemp+11
 43803                           
 43804                           ;stkvar	_grs @ sp[(-13)+4]
 43805  017514  50E1               	movf	fsr1l,w,c
 43806  017516  0FF7               	addlw	-9
 43807  017518  6ED9               	movwf	fsr2l,c
 43808  01751A  50E2               	movf	fsr1h,w,c
 43809  01751C  6EDA               	movwf	fsr2h,c
 43810  01751E  0EFF               	movlw	255
 43811  017520  22DA               	addwfc	fsr2h,f,c
 43812  017522  5034               	movf	(btemp+10)^0,w,c
 43813  017524  26DE               	addwf	postinc2,f,c
 43814  017526  5035               	movf	(btemp+11)^0,w,c
 43815  017528  22DE               	addwfc	postinc2,f,c
 43816  01752A  0E00               	movlw	0
 43817  01752C  22DE               	addwfc	postinc2,f,c
 43818  01752E  22DE               	addwfc	postinc2,f,c
 43819                           
 43820                           ;stkvar	_b @ sp[(-13)+-4]
 43821  017530  0EF0               	movlw	240
 43822  017532  24E1               	addwf	fsr1l,w,c
 43823  017534  6ED9               	movwf	fsr2l,c
 43824  017536  0EFF               	movlw	255
 43825  017538  20E2               	addwfc	fsr1h,w,c
 43826  01753A  6EDA               	movwf	fsr2h,c
 43827  01753C  50DF               	movf	indf2,w,c
 43828  01753E  6E35               	movwf	(btemp+11)^0,c
 43829                           
 43830                           ;stkvar	_a @ sp[(-13)+-8]
 43831  017540  0EED               	movlw	237
 43832  017542  24E1               	addwf	fsr1l,w,c
 43833  017544  6ED9               	movwf	fsr2l,c
 43834  017546  0EFF               	movlw	255
 43835  017548  20E2               	addwfc	fsr1h,w,c
 43836  01754A  6EDA               	movwf	fsr2h,c
 43837  01754C  50DF               	movf	indf2,w,c
 43838  01754E  0235               	mulwf	(btemp+11)^0,c
 43839                           
 43840                           ;stkvar	_temp @ sp[(-13)+8]
 43841  017550  0EFB               	movlw	-5
 43842  017552  006F FFCF FFE3     	movff	prodl,plusw1
 43843  017558  0EFC               	movlw	-4
 43844  01755A  006F FFD3 FFE3     	movff	prodh,plusw1
 43845                           
 43846                           ;stkvar	_temp @ sp[(-13)+8]
 43847  017560  0EFB               	movlw	-5
 43848  017562  006F FF8C  F034    	movff	plusw1,btemp+10
 43849  017568  0EFC               	movlw	-4
 43850  01756A  006F FF8C  F035    	movff	plusw1,btemp+11
 43851                           
 43852                           ;stkvar	_prod @ sp[(-13)+0]
 43853  017570  50E1               	movf	fsr1l,w,c
 43854  017572  0FF3               	addlw	-13
 43855  017574  6ED9               	movwf	fsr2l,c
 43856  017576  50E2               	movf	fsr1h,w,c
 43857  017578  6EDA               	movwf	fsr2h,c
 43858  01757A  0EFF               	movlw	255
 43859  01757C  22DA               	addwfc	fsr2h,f,c
 43860  01757E  5034               	movf	(btemp+10)^0,w,c
 43861  017580  26DE               	addwf	postinc2,f,c
 43862  017582  5035               	movf	(btemp+11)^0,w,c
 43863  017584  22DE               	addwfc	postinc2,f,c
 43864  017586  0E00               	movlw	0
 43865  017588  22DE               	addwfc	postinc2,f,c
 43866  01758A  22DE               	addwfc	postinc2,f,c
 43867                           
 43868                           ;stkvar	_b @ sp[(-13)+-4]
 43869  01758C  0EF1               	movlw	241
 43870  01758E  24E1               	addwf	fsr1l,w,c
 43871  017590  6ED9               	movwf	fsr2l,c
 43872  017592  0EFF               	movlw	255
 43873  017594  20E2               	addwfc	fsr1h,w,c
 43874  017596  6EDA               	movwf	fsr2h,c
 43875  017598  50DF               	movf	indf2,w,c
 43876  01759A  6E35               	movwf	(btemp+11)^0,c
 43877                           
 43878                           ;stkvar	_a @ sp[(-13)+-8]
 43879  01759C  0EEC               	movlw	236
 43880  01759E  24E1               	addwf	fsr1l,w,c
 43881  0175A0  6ED9               	movwf	fsr2l,c
 43882  0175A2  0EFF               	movlw	255
 43883  0175A4  20E2               	addwfc	fsr1h,w,c
 43884  0175A6  6EDA               	movwf	fsr2h,c
 43885  0175A8  50DF               	movf	indf2,w,c
 43886  0175AA  0235               	mulwf	(btemp+11)^0,c
 43887                           
 43888                           ;stkvar	_temp @ sp[(-13)+8]
 43889  0175AC  0EFB               	movlw	-5
 43890  0175AE  006F FFCF FFE3     	movff	prodl,plusw1
 43891  0175B4  0EFC               	movlw	-4
 43892  0175B6  006F FFD3 FFE3     	movff	prodh,plusw1
 43893                           
 43894                           ;stkvar	_temp @ sp[(-13)+8]
 43895  0175BC  0EFB               	movlw	-5
 43896  0175BE  006F FF8C  F034    	movff	plusw1,btemp+10
 43897  0175C4  0EFC               	movlw	-4
 43898  0175C6  006F FF8C  F035    	movff	plusw1,btemp+11
 43899                           
 43900                           ;stkvar	_prod @ sp[(-13)+0]
 43901  0175CC  50E1               	movf	fsr1l,w,c
 43902  0175CE  0FF3               	addlw	-13
 43903  0175D0  6ED9               	movwf	fsr2l,c
 43904  0175D2  50E2               	movf	fsr1h,w,c
 43905  0175D4  6EDA               	movwf	fsr2h,c
 43906  0175D6  0EFF               	movlw	255
 43907  0175D8  22DA               	addwfc	fsr2h,f,c
 43908  0175DA  5034               	movf	(btemp+10)^0,w,c
 43909  0175DC  26DE               	addwf	postinc2,f,c
 43910  0175DE  5035               	movf	(btemp+11)^0,w,c
 43911  0175E0  22DE               	addwfc	postinc2,f,c
 43912  0175E2  0E00               	movlw	0
 43913  0175E4  22DE               	addwfc	postinc2,f,c
 43914  0175E6  22DE               	addwfc	postinc2,f,c
 43915                           
 43916                           ;stkvar	_b @ sp[(-13)+-4]
 43917  0175E8  0EF1               	movlw	241
 43918  0175EA  24E1               	addwf	fsr1l,w,c
 43919  0175EC  6ED9               	movwf	fsr2l,c
 43920  0175EE  0EFF               	movlw	255
 43921  0175F0  20E2               	addwfc	fsr1h,w,c
 43922  0175F2  6EDA               	movwf	fsr2h,c
 43923  0175F4  50DF               	movf	indf2,w,c
 43924  0175F6  6E35               	movwf	(btemp+11)^0,c
 43925                           
 43926                           ;stkvar	_a @ sp[(-13)+-8]
 43927  0175F8  0EED               	movlw	237
 43928  0175FA  24E1               	addwf	fsr1l,w,c
 43929  0175FC  6ED9               	movwf	fsr2l,c
 43930  0175FE  0EFF               	movlw	255
 43931  017600  20E2               	addwfc	fsr1h,w,c
 43932  017602  6EDA               	movwf	fsr2h,c
 43933  017604  50DF               	movf	indf2,w,c
 43934  017606  0235               	mulwf	(btemp+11)^0,c
 43935                           
 43936                           ;stkvar	_temp @ sp[(-13)+8]
 43937  017608  0EFB               	movlw	-5
 43938  01760A  006F FFCF FFE3     	movff	prodl,plusw1
 43939  017610  0EFC               	movlw	-4
 43940  017612  006F FFD3 FFE3     	movff	prodh,plusw1
 43941                           
 43942                           ;stkvar	_temp @ sp[(-13)+8]
 43943  017618  0EFB               	movlw	-5
 43944  01761A  006F FF8C  F034    	movff	plusw1,btemp+10
 43945  017620  0EFC               	movlw	-4
 43946  017622  006F FF8C  F035    	movff	plusw1,btemp+11
 43947  017628  5034               	movf	(btemp+10)^0,w,c
 43948  01762A  6E2E               	movwf	(btemp+4)^0,c
 43949  01762C  5035               	movf	(btemp+11)^0,w,c
 43950  01762E  6E2F               	movwf	(btemp+5)^0,c
 43951  017630  6A30               	clrf	(btemp+6)^0,c
 43952  017632  6A31               	clrf	(btemp+7)^0,c
 43953  017634  0060  F0C0  F031   	movff	btemp+6,btemp+7
 43954  01763A  0060  F0BC  F030   	movff	btemp+5,btemp+6
 43955  017640  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 43956  017646  6A2E               	clrf	(btemp+4)^0,c
 43957                           
 43958                           ;stkvar	_prod @ sp[(-13)+0]
 43959  017648  50E1               	movf	fsr1l,w,c
 43960  01764A  0FF3               	addlw	-13
 43961  01764C  6ED9               	movwf	fsr2l,c
 43962  01764E  50E2               	movf	fsr1h,w,c
 43963  017650  6EDA               	movwf	fsr2h,c
 43964  017652  0EFF               	movlw	255
 43965  017654  22DA               	addwfc	fsr2h,f,c
 43966  017656  502E               	movf	(btemp+4)^0,w,c
 43967  017658  26DE               	addwf	postinc2,f,c
 43968  01765A  502F               	movf	(btemp+5)^0,w,c
 43969  01765C  22DE               	addwfc	postinc2,f,c
 43970  01765E  5030               	movf	(btemp+6)^0,w,c
 43971  017660  22DE               	addwfc	postinc2,f,c
 43972  017662  5031               	movf	(btemp+7)^0,w,c
 43973  017664  22DE               	addwfc	postinc2,f,c
 43974                           
 43975                           ;stkvar	_prod @ sp[(-13)+0]
 43976  017666  50E1               	movf	fsr1l,w,c
 43977  017668  0FF3               	addlw	-13
 43978  01766A  6ED9               	movwf	fsr2l,c
 43979  01766C  50E2               	movf	fsr1h,w,c
 43980  01766E  6EDA               	movwf	fsr2h,c
 43981  017670  0EFF               	movlw	255
 43982  017672  22DA               	addwfc	fsr2h,f,c
 43983                           
 43984                           ;stkvar	_grs @ sp[(-13)+4]
 43985  017674  0EFA               	movlw	250
 43986  017676  24E1               	addwf	fsr1l,w,c
 43987  017678  6EE9               	movwf	fsr0l,c
 43988  01767A  0EFF               	movlw	255
 43989  01767C  20E2               	addwfc	fsr1h,w,c
 43990  01767E  6EEA               	movwf	fsr0h,c
 43991  017680  50EF               	movf	indf0,w,c
 43992  017682  26DE               	addwf	postinc2,f,c
 43993  017684  0E00               	movlw	0
 43994  017686  22DE               	addwfc	postinc2,f,c
 43995  017688  22DE               	addwfc	postinc2,f,c
 43996  01768A  22DE               	addwfc	postinc2,f,c
 43997                           
 43998                           ;stkvar	_grs @ sp[(-13)+4]
 43999  01768C  50E1               	movf	fsr1l,w,c
 44000  01768E  0FF7               	addlw	-9
 44001  017690  6ED9               	movwf	fsr2l,c
 44002  017692  50E2               	movf	fsr1h,w,c
 44003  017694  6EDA               	movwf	fsr2h,c
 44004  017696  0EFF               	movlw	255
 44005  017698  22DA               	addwfc	fsr2h,f,c
 44006  01769A  0E08               	movlw	8
 44007  01769C                     u8765:
 44008  01769C  90D8               	bcf	status,0,c
 44009  01769E  36DE               	rlcf	postinc2,f,c
 44010  0176A0  36DE               	rlcf	postinc2,f,c
 44011  0176A2  36DE               	rlcf	postinc2,f,c
 44012  0176A4  36DD               	rlcf	postdec2,f,c
 44013  0176A6  52DD               	movf	postdec2,f,c
 44014  0176A8  52DD               	movf	postdec2,f,c
 44015  0176AA  2EE8               	decfsz	wreg,f,c
 44016  0176AC  D7F7               	goto	u8765
 44017  0176AE  0E82               	movlw	130
 44018  0176B0  6E34               	movwf	(btemp+10)^0,c
 44019  0176B2  0EFF               	movlw	255
 44020  0176B4  6E35               	movwf	(btemp+11)^0,c
 44021                           
 44022                           ;stkvar	_bexp @ sp[(-13)+10]
 44023  0176B6  0EFD               	movlw	-3
 44024  0176B8  50E3               	movf	plusw1,w,c
 44025  0176BA  6E32               	movwf	(btemp+8)^0,c
 44026  0176BC  6A33               	clrf	(btemp+9)^0,c
 44027                           
 44028                           ;stkvar	_aexp @ sp[(-13)+11]
 44029  0176BE  0EFE               	movlw	-2
 44030  0176C0  50E3               	movf	plusw1,w,c
 44031  0176C2  2632               	addwf	(btemp+8)^0,f,c
 44032  0176C4  0E00               	movlw	0
 44033  0176C6  2233               	addwfc	(btemp+9)^0,f,c
 44034  0176C8  5034               	movf	(btemp+10)^0,w,c
 44035  0176CA  2632               	addwf	(btemp+8)^0,f,c
 44036  0176CC  5035               	movf	(btemp+11)^0,w,c
 44037  0176CE  2233               	addwfc	(btemp+9)^0,f,c
 44038                           
 44039                           ;stkvar	_temp @ sp[(-13)+8]
 44040  0176D0  0EFB               	movlw	-5
 44041  0176D2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 44042  0176D8  0EFC               	movlw	-4
 44043  0176DA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 44044  0176E0  D021               	goto	l10665
 44045  0176E2                     l10655:
 44046                           
 44047                           ;stkvar	_prod @ sp[(-13)+0]
 44048  0176E2  90D8               	bcf	status,0,c
 44049  0176E4  0EF3               	movlw	-13
 44050  0176E6  36E3               	rlcf	plusw1,f,c
 44051  0176E8  0EF4               	movlw	-12
 44052  0176EA  36E3               	rlcf	plusw1,f,c
 44053  0176EC  0EF5               	movlw	-11
 44054  0176EE  36E3               	rlcf	plusw1,f,c
 44055  0176F0  0EF6               	movlw	-10
 44056  0176F2  36E3               	rlcf	plusw1,f,c
 44057                           
 44058                           ;stkvar	_grs @ sp[(-13)+4]
 44059  0176F4  0EFA               	movlw	-6
 44060  0176F6  AEE3               	btfss	plusw1,7,c
 44061  0176F8  D002               	goto	l10661
 44062                           
 44063                           ;stkvar	_prod @ sp[(-13)+0]
 44064  0176FA  0EF3               	movlw	-13
 44065  0176FC  80E3               	bsf	plusw1,0,c
 44066  0176FE                     l10661:
 44067                           
 44068                           ;stkvar	_grs @ sp[(-13)+4]
 44069  0176FE  90D8               	bcf	status,0,c
 44070  017700  0EF7               	movlw	-9
 44071  017702  36E3               	rlcf	plusw1,f,c
 44072  017704  0EF8               	movlw	-8
 44073  017706  36E3               	rlcf	plusw1,f,c
 44074  017708  0EF9               	movlw	-7
 44075  01770A  36E3               	rlcf	plusw1,f,c
 44076  01770C  0EFA               	movlw	-6
 44077  01770E  36E3               	rlcf	plusw1,f,c
 44078                           
 44079                           ;stkvar	_temp @ sp[(-13)+8]
 44080  017710  50E1               	movf	fsr1l,w,c
 44081  017712  0FFB               	addlw	-5
 44082  017714  6ED9               	movwf	fsr2l,c
 44083  017716  50E2               	movf	fsr1h,w,c
 44084  017718  6EDA               	movwf	fsr2h,c
 44085  01771A  0EFF               	movlw	255
 44086  01771C  22DA               	addwfc	fsr2h,f,c
 44087  01771E  06DE               	decf	postinc2,f,c
 44088  017720  0E00               	movlw	0
 44089  017722  5ADD               	subwfb	postdec2,f,c
 44090  017724                     l10665:
 44091                           
 44092                           ;stkvar	_prod @ sp[(-13)+0]
 44093  017724  0EF5               	movlw	-11
 44094  017726  AEE3               	btfss	plusw1,7,c
 44095  017728  D7DC               	goto	l10655
 44096                           
 44097                           ;stkvar	_aexp @ sp[(-13)+11]
 44098  01772A  0EFE               	movlw	-2
 44099  01772C  6AE3               	clrf	plusw1,c
 44100                           
 44101                           ;stkvar	_grs @ sp[(-13)+4]
 44102  01772E  0EFA               	movlw	-6
 44103  017730  AEE3               	btfss	plusw1,7,c
 44104  017732  D020               	goto	l10679
 44105                           
 44106                           ;stkvar	_grs @ sp[(-13)+4]
 44107  017734  50E1               	movf	fsr1l,w,c
 44108  017736  0FF7               	addlw	-9
 44109  017738  6ED9               	movwf	fsr2l,c
 44110  01773A  50E2               	movf	fsr1h,w,c
 44111  01773C  6EDA               	movwf	fsr2h,c
 44112  01773E  0EFF               	movlw	255
 44113  017740  22DA               	addwfc	fsr2h,f,c
 44114  017742  0EFF               	movlw	255
 44115  017744  14DE               	andwf	postinc2,w,c
 44116  017746  6E32               	movwf	(btemp+8)^0,c
 44117  017748  0EFF               	movlw	255
 44118  01774A  14DE               	andwf	postinc2,w,c
 44119  01774C  6E33               	movwf	(btemp+9)^0,c
 44120  01774E  0EFF               	movlw	255
 44121  017750  14DE               	andwf	postinc2,w,c
 44122  017752  6E34               	movwf	(btemp+10)^0,c
 44123  017754  0E7F               	movlw	127
 44124  017756  14DE               	andwf	postinc2,w,c
 44125  017758  6E35               	movwf	(btemp+11)^0,c
 44126  01775A  5032               	movf	(btemp+8)^0,w,c
 44127  01775C  1033               	iorwf	(btemp+9)^0,w,c
 44128  01775E  1034               	iorwf	(btemp+10)^0,w,c
 44129  017760  1035               	iorwf	(btemp+11)^0,w,c
 44130  017762  B4D8               	btfsc	status,2,c
 44131  017764  D004               	goto	l10675
 44132  017766                     u8800:
 44133                           
 44134                           ;stkvar	_aexp @ sp[(-13)+11]
 44135  017766  0EFE               	movlw	-2
 44136  017768  6AE3               	clrf	plusw1,c
 44137  01776A  2AE3               	incf	plusw1,f,c
 44138  01776C  D003               	goto	l10679
 44139  01776E                     l10675:
 44140                           
 44141                           ;stkvar	_prod @ sp[(-13)+0]
 44142  01776E  0EF3               	movlw	-13
 44143  017770  B0E3               	btfsc	plusw1,0,c
 44144  017772  D7F9               	goto	u8800
 44145  017774                     l10679:
 44146                           
 44147                           ;stkvar	_aexp @ sp[(-13)+11]
 44148  017774  0EFE               	movlw	-2
 44149  017776  50E3               	movf	plusw1,w,c
 44150  017778  B4D8               	btfsc	status,2,c
 44151  01777A  D036               	goto	l10689
 44152                           
 44153                           ;stkvar	_prod @ sp[(-13)+0]
 44154  01777C  50E1               	movf	fsr1l,w,c
 44155  01777E  0FF3               	addlw	-13
 44156  017780  6ED9               	movwf	fsr2l,c
 44157  017782  50E2               	movf	fsr1h,w,c
 44158  017784  6EDA               	movwf	fsr2h,c
 44159  017786  0EFF               	movlw	255
 44160  017788  22DA               	addwfc	fsr2h,f,c
 44161  01778A  2ADE               	incf	postinc2,f,c
 44162  01778C  0E00               	movlw	0
 44163  01778E  22DE               	addwfc	postinc2,f,c
 44164  017790  22DE               	addwfc	postinc2,f,c
 44165  017792  22DE               	addwfc	postinc2,f,c
 44166                           
 44167                           ;stkvar	_prod @ sp[(-13)+0]
 44168  017794  0EF6               	movlw	-10
 44169  017796  A0E3               	btfss	plusw1,0,c
 44170  017798  D027               	goto	l10689
 44171  01779A  0E01               	movlw	1
 44172  01779C  6E35               	movwf	(btemp+11)^0,c
 44173                           
 44174                           ;stkvar	_prod @ sp[(-13)+0]
 44175  01779E  50E1               	movf	fsr1l,w,c
 44176  0177A0  0FF3               	addlw	-13
 44177  0177A2  6ED9               	movwf	fsr2l,c
 44178  0177A4  50E2               	movf	fsr1h,w,c
 44179  0177A6  6EDA               	movwf	fsr2h,c
 44180  0177A8  0EFF               	movlw	255
 44181  0177AA  22DA               	addwfc	fsr2h,f,c
 44182  0177AC  2835               	incf	(btemp+11)^0,w,c
 44183  0177AE  52DE               	movf	postinc2,f,c
 44184  0177B0  D008               	goto	u8840
 44185  0177B2                     u8845:
 44186  0177B2  52DE               	movf	postinc2,f,c
 44187  0177B4  90D8               	bcf	status,0,c
 44188  0177B6  BEDC               	btfsc	preinc2,7,c
 44189  0177B8  80D8               	bsf	status,0,c
 44190  0177BA  32DD               	rrcf	postdec2,f,c
 44191  0177BC  32DD               	rrcf	postdec2,f,c
 44192  0177BE  32DD               	rrcf	postdec2,f,c
 44193  0177C0  32DE               	rrcf	postinc2,f,c
 44194  0177C2                     u8840:
 44195  0177C2  2EE8               	decfsz	wreg,f,c
 44196  0177C4  D7F6               	goto	u8845
 44197                           
 44198                           ;stkvar	_temp @ sp[(-13)+8]
 44199  0177C6  0EFB               	movlw	-5
 44200  0177C8  50E3               	movf	plusw1,w,c
 44201  0177CA  0F01               	addlw	1
 44202  0177CC  6E2A               	movwf	btemp^0,c
 44203  0177CE  0EFB               	movlw	-5
 44204  0177D0  0060  F0AB  FFE3   	movff	btemp,plusw1
 44205  0177D6  6A2A               	clrf	btemp^0,c
 44206  0177D8  0EFC               	movlw	-4
 44207  0177DA  50E3               	movf	plusw1,w,c
 44208  0177DC  202A               	addwfc	btemp^0,w,c
 44209  0177DE  6E2A               	movwf	btemp^0,c
 44210  0177E0  0EFC               	movlw	-4
 44211  0177E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 44212  0177E8                     l10689:
 44213                           
 44214                           ;stkvar	_temp @ sp[(-13)+8]
 44215  0177E8  0EFC               	movlw	-4
 44216  0177EA  BEE3               	btfsc	plusw1,7,c
 44217  0177EC  D020               	goto	l10693
 44218  0177EE  0EFC               	movlw	-4
 44219  0177F0  50E3               	movf	plusw1,w,c
 44220  0177F2  E104               	bnz	u8850
 44221  0177F4  0EFB               	movlw	-5
 44222  0177F6  28E3               	incf	plusw1,w,c
 44223  0177F8  A0D8               	btfss	status,0,c
 44224  0177FA  D019               	goto	l10693
 44225  0177FC                     u8850:
 44226  0177FC  0E00               	movlw	0
 44227  0177FE  6E32               	movwf	(btemp+8)^0,c
 44228  017800  0E00               	movlw	0
 44229  017802  6E33               	movwf	(btemp+9)^0,c
 44230  017804  0E80               	movlw	128
 44231  017806  6E34               	movwf	(btemp+10)^0,c
 44232  017808  0E7F               	movlw	127
 44233  01780A  6E35               	movwf	(btemp+11)^0,c
 44234                           
 44235                           ;stkvar	_prod @ sp[(-13)+0]
 44236  01780C  0EF3               	movlw	-13
 44237  01780E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 44238  017814  0EF4               	movlw	-12
 44239  017816  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 44240  01781C  0EF5               	movlw	-11
 44241  01781E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 44242  017824  0EF6               	movlw	-10
 44243  017826  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 44244  01782C  D044               	goto	l10709
 44245  01782E                     l10693:
 44246                           
 44247                           ;stkvar	_temp @ sp[(-13)+8]
 44248  01782E  0EFC               	movlw	-4
 44249  017830  BEE3               	btfsc	plusw1,7,c
 44250  017832  D007               	goto	u8860
 44251  017834  0EFC               	movlw	-4
 44252  017836  50E3               	movf	plusw1,w,c
 44253  017838  E10F               	bnz	l10699
 44254  01783A  0EFB               	movlw	-5
 44255  01783C  04E3               	decf	plusw1,w,c
 44256  01783E  B0D8               	btfsc	status,0,c
 44257  017840  D00B               	goto	l10699
 44258  017842                     u8860:
 44259                           
 44260                           ;stkvar	_prod @ sp[(-13)+0]
 44261  017842  0EF3               	movlw	-13
 44262  017844  6AE3               	clrf	plusw1,c
 44263  017846  0EF4               	movlw	-12
 44264  017848  6AE3               	clrf	plusw1,c
 44265  01784A  0EF5               	movlw	-11
 44266  01784C  6AE3               	clrf	plusw1,c
 44267  01784E  0EF6               	movlw	-10
 44268  017850  6AE3               	clrf	plusw1,c
 44269                           
 44270                           ;stkvar	_sign @ sp[(-13)+12]
 44271  017852  0EFF               	movlw	-1
 44272  017854  6AE3               	clrf	plusw1,c
 44273  017856  D02F               	goto	l10709
 44274  017858                     l10699:
 44275                           
 44276                           ;stkvar	_temp @ sp[(-13)+8]
 44277                           ;stkvar	_bexp @ sp[(-13)+10]
 44278  017858  0EFB               	movlw	-5
 44279  01785A  006F FF8C  F02A    	movff	plusw1,btemp
 44280  017860  0EFD               	movlw	-3
 44281  017862  0060  F0AB  FFE3   	movff	btemp,plusw1
 44282                           
 44283                           ;stkvar	_prod @ sp[(-13)+0]
 44284  017868  50E1               	movf	fsr1l,w,c
 44285  01786A  0FF3               	addlw	-13
 44286  01786C  6ED9               	movwf	fsr2l,c
 44287  01786E  50E2               	movf	fsr1h,w,c
 44288  017870  6EDA               	movwf	fsr2h,c
 44289  017872  0EFF               	movlw	255
 44290  017874  22DA               	addwfc	fsr2h,f,c
 44291  017876  0EFF               	movlw	255
 44292  017878  16DE               	andwf	postinc2,f,c
 44293  01787A  0EFF               	movlw	255
 44294  01787C  16DE               	andwf	postinc2,f,c
 44295  01787E  0E7F               	movlw	127
 44296  017880  16DE               	andwf	postinc2,f,c
 44297  017882  0E00               	movlw	0
 44298  017884  16DE               	andwf	postinc2,f,c
 44299                           
 44300                           ;stkvar	_bexp @ sp[(-13)+10]
 44301  017886  0EFD               	movlw	-3
 44302  017888  A0E3               	btfss	plusw1,0,c
 44303  01788A  D008               	goto	l10707
 44304                           
 44305                           ;stkvar	_prod @ sp[(-13)+0]
 44306  01788C  0EF5               	movlw	245
 44307  01788E  24E1               	addwf	fsr1l,w,c
 44308  017890  6ED9               	movwf	fsr2l,c
 44309  017892  0EFF               	movlw	255
 44310  017894  20E2               	addwfc	fsr1h,w,c
 44311  017896  6EDA               	movwf	fsr2h,c
 44312  017898  0E00               	movlw	0
 44313  01789A  8EDB               	bsf	plusw2,7,c
 44314  01789C                     l10707:
 44315                           
 44316                           ;stkvar	_prod @ sp[(-13)+0]
 44317  01789C  0EF6               	movlw	246
 44318  01789E  24E1               	addwf	fsr1l,w,c
 44319  0178A0  6ED9               	movwf	fsr2l,c
 44320  0178A2  0EFF               	movlw	255
 44321  0178A4  20E2               	addwfc	fsr1h,w,c
 44322  0178A6  6EDA               	movwf	fsr2h,c
 44323                           
 44324                           ;stkvar	_bexp @ sp[(-13)+10]
 44325  0178A8  0EFD               	movlw	-3
 44326  0178AA  006F FF8C  F035    	movff	plusw1,btemp+11
 44327  0178B0  90D8               	bcf	status,0,c
 44328  0178B2  3035               	rrcf	(btemp+11)^0,w,c
 44329  0178B4  6EDF               	movwf	indf2,c
 44330  0178B6                     l10709:
 44331                           
 44332                           ;stkvar	_sign @ sp[(-13)+12]
 44333  0178B6  0EFF               	movlw	-1
 44334  0178B8  006F FF8C  F035    	movff	plusw1,btemp+11
 44335                           
 44336                           ;stkvar	_prod @ sp[(-13)+0]
 44337  0178BE  0EF6               	movlw	246
 44338  0178C0  24E1               	addwf	fsr1l,w,c
 44339  0178C2  6ED9               	movwf	fsr2l,c
 44340  0178C4  0EFF               	movlw	255
 44341  0178C6  20E2               	addwfc	fsr1h,w,c
 44342  0178C8  6EDA               	movwf	fsr2h,c
 44343  0178CA  5035               	movf	(btemp+11)^0,w,c
 44344  0178CC  12DF               	iorwf	indf2,f,c
 44345                           
 44346                           ;stkvar	_prod @ sp[(-13)+0]
 44347  0178CE  0EF3               	movlw	-13
 44348  0178D0  006F FF8C  F02A    	movff	plusw1,btemp
 44349  0178D6  0EF4               	movlw	-12
 44350  0178D8  006F FF8C  F02B    	movff	plusw1,btemp+1
 44351  0178DE  0EF5               	movlw	-11
 44352  0178E0  006F FF8C  F02C    	movff	plusw1,btemp+2
 44353  0178E6  0EF6               	movlw	-10
 44354  0178E8  006F FF8C  F02D    	movff	plusw1,btemp+3
 44355  0178EE                     l3351:
 44356                           
 44357                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 44358  0178EE  0EEB               	movlw	235
 44359  0178F0  26E1               	addwf	fsr1l,f,c
 44360  0178F2  0EFF               	movlw	255
 44361  0178F4  22E2               	addwfc	fsr1h,f,c
 44362  0178F6  0012               	return		;funcret
 44363  0178F8                     __end_of___flmul:
 44364                           	opt callstack 0
 44365                           
 44366 ;; *************** function _SYSTEM_Initialize *****************
 44367 ;; Defined at:
 44368 ;;		line 50 in file "mcc_generated_files/mcc.c"
 44369 ;; Parameters:    Size  Location     Type
 44370 ;;		None
 44371 ;; Auto vars:     Size  Location     Type
 44372 ;;		None
 44373 ;; Return value:  Size  Location     Type
 44374 ;;                  1  [STACK] void 
 44375 ;; Registers used:
 44376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 44377 ;; Tracked objects:
 44378 ;;		On entry : 0/0
 44379 ;;		On exit  : 3F/3C
 44380 ;;		Unchanged: 0/0
 44381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44386 ;;Total ram usage:        0 bytes
 44387 ;; Hardware stack levels used:    1
 44388 ;; Hardware stack levels required when called:   17
 44389 ;; This function calls:
 44390 ;;		_ADCC_Initialize
 44391 ;;		_CLKREF_Initialize
 44392 ;;		_CRC_Initialize
 44393 ;;		_DMA1_Initialize
 44394 ;;		_DMA2_Initialize
 44395 ;;		_EXT_INT_Initialize
 44396 ;;		_FVR_Initialize
 44397 ;;		_INTERRUPT_Initialize
 44398 ;;		_OSCILLATOR_Initialize
 44399 ;;		_PIN_MANAGER_Initialize
 44400 ;;		_PMD_Initialize
 44401 ;;		_PWM8_Initialize
 44402 ;;		_SPI1_Initialize
 44403 ;;		_TMR2_Initialize
 44404 ;;		_TMR3_Initialize
 44405 ;;		_TMR5_Initialize
 44406 ;;		_TMR6_Initialize
 44407 ;;		_UART1_Initialize
 44408 ;;		_UART2_Initialize
 44409 ;; This function is called by:
 44410 ;;		_main
 44411 ;; This function uses a reentrant model
 44412 ;;
 44413                           
 44414                           	psect	text157
 44415  0020FE                     __ptext157:
 44416                           	opt callstack 0
 44417  0020FE                     _SYSTEM_Initialize:
 44418                           	opt callstack 13
 44419                           
 44420                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 44421                           
 44422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44423                           ;incstack = 0
 44424  0020FE  ECFC  F00D         	call	_INTERRUPT_Initialize	;wreg free
 44425                           
 44426                           ; BSR set to: 57
 44427                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 44428  002102  EC47  F017         	call	_PMD_Initialize	;wreg free
 44429                           
 44430                           ; BSR set to: 57
 44431                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 44432  002106  EC2A  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
 44433                           
 44434                           ; BSR set to: 58
 44435                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 44436  00210A  EC3C  F017         	call	_OSCILLATOR_Initialize	;wreg free
 44437                           
 44438                           ; BSR set to: 57
 44439                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 44440  00210E  ECE3  F017         	call	_FVR_Initialize	;wreg free
 44441                           
 44442                           ; BSR set to: 62
 44443                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 44444  002112  EC73  F00A         	call	_CRC_Initialize	;wreg free
 44445                           
 44446                           ; BSR set to: 0
 44447                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 44448  002116  EC2A  F00D         	call	_ADCC_Initialize	;wreg free
 44449                           
 44450                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 44451  00211A  EC0F  F017         	call	_TMR2_Initialize	;wreg free
 44452                           
 44453                           ; BSR set to: 57
 44454                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 44455  00211E  EC31  F017         	call	_PWM8_Initialize	;wreg free
 44456                           
 44457                           ; BSR set to: 63
 44458                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 44459  002122  ECC0  F013         	call	_EXT_INT_Initialize	;wreg free
 44460                           
 44461                           ; BSR set to: 57
 44462                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 44463  002126  ECAC  F014         	call	_TMR6_Initialize	;wreg free
 44464                           
 44465                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 44466  00212A  EC39  F011         	call	_TMR3_Initialize	;wreg free
 44467                           
 44468                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 44469  00212E  EC15  F011         	call	_TMR5_Initialize	;wreg free
 44470                           
 44471                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 44472  002132  ECF1  F010         	call	_UART1_Initialize	;wreg free
 44473                           
 44474                           ; BSR set to: 57
 44475                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 44476  002136  ECF5  F00E         	call	_UART2_Initialize	;wreg free
 44477                           
 44478                           ; BSR set to: 57
 44479                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 44480  00213A  EC26  F017         	call	_SPI1_Initialize	;wreg free
 44481                           
 44482                           ; BSR set to: 61
 44483                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 44484  00213E  ECAE  F00F         	call	_DMA2_Initialize	;wreg free
 44485                           
 44486                           ; BSR set to: 59
 44487                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 44488  002142  ECF5  F00C         	call	_DMA1_Initialize	;wreg free
 44489                           
 44490                           ; BSR set to: 59
 44491                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 44492  002146  ECB7  F017         	call	_CLKREF_Initialize	;wreg free
 44493                           
 44494                           ; BSR set to: 60
 44495                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 44496  00214A  0012               	return		;funcret
 44497  00214C                     __end_of_SYSTEM_Initialize:
 44498                           	opt callstack 0
 44499                           
 44500 ;; *************** function _UART2_Initialize *****************
 44501 ;; Defined at:
 44502 ;;		line 78 in file "mcc_generated_files/uart2.c"
 44503 ;; Parameters:    Size  Location     Type
 44504 ;;		None
 44505 ;; Auto vars:     Size  Location     Type
 44506 ;;		None
 44507 ;; Return value:  Size  Location     Type
 44508 ;;                  1  [STACK] void 
 44509 ;; Registers used:
 44510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44511 ;; Tracked objects:
 44512 ;;		On entry : 3F/39
 44513 ;;		On exit  : 3F/39
 44514 ;;		Unchanged: 0/0
 44515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44520 ;;Total ram usage:        0 bytes
 44521 ;; Hardware stack levels used:    1
 44522 ;; Hardware stack levels required when called:   16
 44523 ;; This function calls:
 44524 ;;		_UART2_SetRxInterruptHandler
 44525 ;;		_UART2_SetTxInterruptHandler
 44526 ;; This function is called by:
 44527 ;;		_SYSTEM_Initialize
 44528 ;; This function uses a reentrant model
 44529 ;;
 44530                           
 44531                           	psect	text158
 44532  001DEA                     __ptext158:
 44533                           	opt callstack 0
 44534  001DEA                     _UART2_Initialize:
 44535                           	opt callstack 13
 44536                           
 44537                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 44538                           
 44539                           ; BSR set to: 60
 44540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44541                           ;incstack = 0
 44542  001DEA  0139               	movlb	57	; () banked
 44543  001DEC  9596               	bcf	150,2,b	;volatile
 44544                           
 44545                           ; BSR set to: 57
 44546                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 44547  001DEE  0E3A               	movlw	low _UART2_Receive_ISR
 44548  001DF0  6EE6               	movwf	postinc1,c
 44549  001DF2  0E2D               	movlw	high _UART2_Receive_ISR
 44550  001DF4  6EE6               	movwf	postinc1,c
 44551  001DF6  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 44552  001DF8  6EE6               	movwf	postinc1,c
 44553  001DFA  ECFD  F014         	call	_UART2_SetRxInterruptHandler	;wreg free
 44554                           
 44555                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 44556  001DFE  0139               	movlb	57	; () banked
 44557  001E00  9796               	bcf	150,3,b	;volatile
 44558                           
 44559                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 44560  001E02  0E2C               	movlw	low _UART2_Transmit_ISR
 44561  001E04  6EE6               	movwf	postinc1,c
 44562  001E06  0E29               	movlw	high _UART2_Transmit_ISR
 44563  001E08  6EE6               	movwf	postinc1,c
 44564  001E0A  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 44565  001E0C  6EE6               	movwf	postinc1,c
 44566  001E0E  ECE9  F014         	call	_UART2_SetTxInterruptHandler	;wreg free
 44567                           
 44568                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 44569  001E12  013D               	movlb	61	; () banked
 44570  001E14  6BD4               	clrf	212,b	;volatile
 44571                           
 44572                           ; BSR set to: 61
 44573                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 44574  001E16  6BD6               	clrf	214,b	;volatile
 44575                           
 44576                           ; BSR set to: 61
 44577                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 44578  001E18  6BD8               	clrf	216,b	;volatile
 44579                           
 44580                           ; BSR set to: 61
 44581                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 44582  001E1A  0EB0               	movlw	176
 44583  001E1C  6FDA               	movwf	218,b	;volatile
 44584                           
 44585                           ; BSR set to: 61
 44586                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 44587  001E1E  0E80               	movlw	128
 44588  001E20  6FDB               	movwf	219,b	;volatile
 44589                           
 44590                           ; BSR set to: 61
 44591                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 44592  001E22  6BDC               	clrf	220,b	;volatile
 44593                           
 44594                           ; BSR set to: 61
 44595                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 44596  001E24  0E82               	movlw	130
 44597  001E26  6FDD               	movwf	221,b	;volatile
 44598                           
 44599                           ; BSR set to: 61
 44600                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 44601  001E28  0E06               	movlw	6
 44602  001E2A  6FDE               	movwf	222,b	;volatile
 44603                           
 44604                           ; BSR set to: 61
 44605                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 44606  001E2C  6BDF               	clrf	223,b	;volatile
 44607                           
 44608                           ; BSR set to: 61
 44609                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 44610  001E2E  6BE0               	clrf	224,b	;volatile
 44611                           
 44612                           ; BSR set to: 61
 44613                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 44614  001E30  6BE1               	clrf	225,b	;volatile
 44615                           
 44616                           ; BSR set to: 61
 44617                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 44618  001E32  6BE2               	clrf	226,b	;volatile
 44619                           
 44620                           ; BSR set to: 61
 44621                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 44622  001E34  0100               	movlb	0	; () banked
 44623  001E36  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 44624                           
 44625                           ; BSR set to: 0
 44626                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 44627  001E38  6A56               	clrf	_uart2TxTail^0,c	;volatile
 44628                           
 44629                           ; BSR set to: 0
 44630                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 44631  001E3A  0E40               	movlw	64
 44632  001E3C  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 44633                           
 44634                           ; BSR set to: 0
 44635                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 44636  001E3E  6A54               	clrf	_uart2RxHead^0,c	;volatile
 44637                           
 44638                           ; BSR set to: 0
 44639                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 44640  001E40  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 44641                           
 44642                           ; BSR set to: 0
 44643                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 44644  001E42  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 44645                           
 44646                           ; BSR set to: 0
 44647                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 44648  001E44  0139               	movlb	57	; () banked
 44649  001E46  8596               	bsf	150,2,b	;volatile
 44650                           
 44651                           ; BSR set to: 57
 44652                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44653  001E48  0012               	return		;funcret
 44654  001E4A                     __end_of_UART2_Initialize:
 44655                           	opt callstack 0
 44656                           
 44657 ;; *************** function _UART2_SetTxInterruptHandler *****************
 44658 ;; Defined at:
 44659 ;;		line 252 in file "mcc_generated_files/uart2.c"
 44660 ;; Parameters:    Size  Location     Type
 44661 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44662 ;;		 -> UART2_Transmit_ISR(1), 
 44663 ;; Auto vars:     Size  Location     Type
 44664 ;;		None
 44665 ;; Return value:  Size  Location     Type
 44666 ;;                  1  [STACK] void 
 44667 ;; Registers used:
 44668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44669 ;; Tracked objects:
 44670 ;;		On entry : 3F/39
 44671 ;;		On exit  : 0/0
 44672 ;;		Unchanged: 0/0
 44673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44678 ;;Total ram usage:        0 bytes
 44679 ;; Hardware stack levels used:    1
 44680 ;; Hardware stack levels required when called:   15
 44681 ;; This function calls:
 44682 ;;		Nothing
 44683 ;; This function is called by:
 44684 ;;		_UART2_Initialize
 44685 ;; This function uses a reentrant model
 44686 ;;
 44687                           
 44688                           	psect	text159
 44689  0029D2                     __ptext159:
 44690                           	opt callstack 0
 44691  0029D2                     _UART2_SetTxInterruptHandler:
 44692                           	opt callstack 13
 44693                           
 44694                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 44695                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44696                           
 44697                           ; BSR set to: 57
 44698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44699                           ;incstack = 0
 44700  0029D2  50E1               	movf	fsr1l,w,c
 44701  0029D4  0FFD               	addlw	-3
 44702  0029D6  6ED9               	movwf	fsr2l,c
 44703  0029D8  50E2               	movf	fsr1h,w,c
 44704  0029DA  6EDA               	movwf	fsr2h,c
 44705  0029DC  0EFF               	movlw	255
 44706  0029DE  22DA               	addwfc	fsr2h,f,c
 44707  0029E0  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 44708  0029E6  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 44709  0029EC  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 44710                           
 44711                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44712  0029F2  52E5               	movf	postdec1,f,c
 44713  0029F4  52E5               	movf	postdec1,f,c
 44714  0029F6  52E5               	movf	postdec1,f,c
 44715  0029F8  0012               	return		;funcret
 44716  0029FA                     __end_of_UART2_SetTxInterruptHandler:
 44717                           	opt callstack 0
 44718                           
 44719 ;; *************** function _UART2_SetRxInterruptHandler *****************
 44720 ;; Defined at:
 44721 ;;		line 248 in file "mcc_generated_files/uart2.c"
 44722 ;; Parameters:    Size  Location     Type
 44723 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44724 ;;		 -> UART2_Receive_ISR(1), 
 44725 ;; Auto vars:     Size  Location     Type
 44726 ;;		None
 44727 ;; Return value:  Size  Location     Type
 44728 ;;                  1  [STACK] void 
 44729 ;; Registers used:
 44730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44731 ;; Tracked objects:
 44732 ;;		On entry : 3F/39
 44733 ;;		On exit  : 0/0
 44734 ;;		Unchanged: 0/0
 44735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44740 ;;Total ram usage:        0 bytes
 44741 ;; Hardware stack levels used:    1
 44742 ;; Hardware stack levels required when called:   15
 44743 ;; This function calls:
 44744 ;;		Nothing
 44745 ;; This function is called by:
 44746 ;;		_UART2_Initialize
 44747 ;; This function uses a reentrant model
 44748 ;;
 44749                           
 44750                           	psect	text160
 44751  0029FA                     __ptext160:
 44752                           	opt callstack 0
 44753  0029FA                     _UART2_SetRxInterruptHandler:
 44754                           	opt callstack 13
 44755                           
 44756                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 44757                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44758                           
 44759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44760                           ;incstack = 0
 44761  0029FA  50E1               	movf	fsr1l,w,c
 44762  0029FC  0FFD               	addlw	-3
 44763  0029FE  6ED9               	movwf	fsr2l,c
 44764  002A00  50E2               	movf	fsr1h,w,c
 44765  002A02  6EDA               	movwf	fsr2h,c
 44766  002A04  0EFF               	movlw	255
 44767  002A06  22DA               	addwfc	fsr2h,f,c
 44768  002A08  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 44769  002A0E  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 44770  002A14  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 44771                           
 44772                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44773  002A1A  52E5               	movf	postdec1,f,c
 44774  002A1C  52E5               	movf	postdec1,f,c
 44775  002A1E  52E5               	movf	postdec1,f,c
 44776  002A20  0012               	return		;funcret
 44777  002A22                     __end_of_UART2_SetRxInterruptHandler:
 44778                           	opt callstack 0
 44779                           
 44780 ;; *************** function _UART1_Initialize *****************
 44781 ;; Defined at:
 44782 ;;		line 75 in file "mcc_generated_files/uart1.c"
 44783 ;; Parameters:    Size  Location     Type
 44784 ;;		None
 44785 ;; Auto vars:     Size  Location     Type
 44786 ;;		None
 44787 ;; Return value:  Size  Location     Type
 44788 ;;                  1  [STACK] void 
 44789 ;; Registers used:
 44790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44791 ;; Tracked objects:
 44792 ;;		On entry : 0/39
 44793 ;;		On exit  : 3F/39
 44794 ;;		Unchanged: 0/0
 44795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44800 ;;Total ram usage:        0 bytes
 44801 ;; Hardware stack levels used:    1
 44802 ;; Hardware stack levels required when called:   16
 44803 ;; This function calls:
 44804 ;;		_UART1_SetRxInterruptHandler
 44805 ;; This function is called by:
 44806 ;;		_SYSTEM_Initialize
 44807 ;; This function uses a reentrant model
 44808 ;;
 44809                           
 44810                           	psect	text161
 44811  0021E2                     __ptext161:
 44812                           	opt callstack 0
 44813  0021E2                     _UART1_Initialize:
 44814                           	opt callstack 13
 44815                           
 44816                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 44817                           
 44818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44819                           ;incstack = 0
 44820  0021E2  0139               	movlb	57	; () banked
 44821  0021E4  9793               	bcf	147,3,b	;volatile
 44822                           
 44823                           ; BSR set to: 57
 44824                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 44825  0021E6  0EF8               	movlw	low _UART1_Receive_ISR
 44826  0021E8  6EE6               	movwf	postinc1,c
 44827  0021EA  0E2C               	movlw	high _UART1_Receive_ISR
 44828  0021EC  6EE6               	movwf	postinc1,c
 44829  0021EE  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 44830  0021F0  6EE6               	movwf	postinc1,c
 44831  0021F2  EC11  F015         	call	_UART1_SetRxInterruptHandler	;wreg free
 44832                           
 44833                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 44834  0021F6  013D               	movlb	61	; () banked
 44835  0021F8  6BEC               	clrf	236,b	;volatile
 44836                           
 44837                           ; BSR set to: 61
 44838                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 44839  0021FA  6BED               	clrf	237,b	;volatile
 44840                           
 44841                           ; BSR set to: 61
 44842                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 44843  0021FC  6BEE               	clrf	238,b	;volatile
 44844                           
 44845                           ; BSR set to: 61
 44846                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 44847  0021FE  6BEF               	clrf	239,b	;volatile
 44848                           
 44849                           ; BSR set to: 61
 44850                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 44851  002200  6BF0               	clrf	240,b	;volatile
 44852                           
 44853                           ; BSR set to: 61
 44854                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 44855  002202  6BF1               	clrf	241,b	;volatile
 44856                           
 44857                           ; BSR set to: 61
 44858                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 44859  002204  0EB0               	movlw	176
 44860  002206  6FF2               	movwf	242,b	;volatile
 44861                           
 44862                           ; BSR set to: 61
 44863                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 44864  002208  0E80               	movlw	128
 44865  00220A  6FF3               	movwf	243,b	;volatile
 44866                           
 44867                           ; BSR set to: 61
 44868                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 44869  00220C  6BF4               	clrf	244,b	;volatile
 44870                           
 44871                           ; BSR set to: 61
 44872                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 44873  00220E  0E8A               	movlw	138
 44874  002210  6FF5               	movwf	245,b	;volatile
 44875                           
 44876                           ; BSR set to: 61
 44877                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 44878  002212  6BF6               	clrf	246,b	;volatile
 44879                           
 44880                           ; BSR set to: 61
 44881                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 44882  002214  6BF7               	clrf	247,b	;volatile
 44883                           
 44884                           ; BSR set to: 61
 44885                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 44886  002216  6BF8               	clrf	248,b	;volatile
 44887                           
 44888                           ; BSR set to: 61
 44889                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 44890  002218  6BF9               	clrf	249,b	;volatile
 44891                           
 44892                           ; BSR set to: 61
 44893                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 44894  00221A  6BFA               	clrf	250,b	;volatile
 44895                           
 44896                           ; BSR set to: 61
 44897                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 44898  00221C  6A57               	clrf	_uart1RxHead^0,c	;volatile
 44899                           
 44900                           ; BSR set to: 61
 44901                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 44902  00221E  0100               	movlb	0	; () banked
 44903  002220  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 44904                           
 44905                           ; BSR set to: 0
 44906                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 44907  002222  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 44908                           
 44909                           ; BSR set to: 0
 44910                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 44911  002224  0139               	movlb	57	; () banked
 44912  002226  8793               	bsf	147,3,b	;volatile
 44913                           
 44914                           ; BSR set to: 57
 44915                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44916  002228  0012               	return		;funcret
 44917  00222A                     __end_of_UART1_Initialize:
 44918                           	opt callstack 0
 44919                           
 44920 ;; *************** function _UART1_SetRxInterruptHandler *****************
 44921 ;; Defined at:
 44922 ;;		line 207 in file "mcc_generated_files/uart1.c"
 44923 ;; Parameters:    Size  Location     Type
 44924 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44925 ;;		 -> UART1_Receive_ISR(1), 
 44926 ;; Auto vars:     Size  Location     Type
 44927 ;;		None
 44928 ;; Return value:  Size  Location     Type
 44929 ;;                  1  [STACK] void 
 44930 ;; Registers used:
 44931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44932 ;; Tracked objects:
 44933 ;;		On entry : 3F/39
 44934 ;;		On exit  : 0/0
 44935 ;;		Unchanged: 0/0
 44936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44941 ;;Total ram usage:        0 bytes
 44942 ;; Hardware stack levels used:    1
 44943 ;; Hardware stack levels required when called:   15
 44944 ;; This function calls:
 44945 ;;		Nothing
 44946 ;; This function is called by:
 44947 ;;		_UART1_Initialize
 44948 ;; This function uses a reentrant model
 44949 ;;
 44950                           
 44951                           	psect	text162
 44952  002A22                     __ptext162:
 44953                           	opt callstack 0
 44954  002A22                     _UART1_SetRxInterruptHandler:
 44955                           	opt callstack 13
 44956                           
 44957                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 44958                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44959                           
 44960                           ; BSR set to: 57
 44961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44962                           ;incstack = 0
 44963  002A22  50E1               	movf	fsr1l,w,c
 44964  002A24  0FFD               	addlw	-3
 44965  002A26  6ED9               	movwf	fsr2l,c
 44966  002A28  50E2               	movf	fsr1h,w,c
 44967  002A2A  6EDA               	movwf	fsr2h,c
 44968  002A2C  0EFF               	movlw	255
 44969  002A2E  22DA               	addwfc	fsr2h,f,c
 44970  002A30  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 44971  002A36  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 44972  002A3C  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 44973                           
 44974                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44975  002A42  52E5               	movf	postdec1,f,c
 44976  002A44  52E5               	movf	postdec1,f,c
 44977  002A46  52E5               	movf	postdec1,f,c
 44978  002A48  0012               	return		;funcret
 44979  002A4A                     __end_of_UART1_SetRxInterruptHandler:
 44980                           	opt callstack 0
 44981                           
 44982 ;; *************** function _TMR6_Initialize *****************
 44983 ;; Defined at:
 44984 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 44985 ;; Parameters:    Size  Location     Type
 44986 ;;		None
 44987 ;; Auto vars:     Size  Location     Type
 44988 ;;		None
 44989 ;; Return value:  Size  Location     Type
 44990 ;;                  1  [STACK] void 
 44991 ;; Registers used:
 44992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44993 ;; Tracked objects:
 44994 ;;		On entry : 3F/39
 44995 ;;		On exit  : 0/0
 44996 ;;		Unchanged: 0/0
 44997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45002 ;;Total ram usage:        0 bytes
 45003 ;; Hardware stack levels used:    1
 45004 ;; Hardware stack levels required when called:   16
 45005 ;; This function calls:
 45006 ;;		_TMR6_SetInterruptHandler
 45007 ;; This function is called by:
 45008 ;;		_SYSTEM_Initialize
 45009 ;; This function uses a reentrant model
 45010 ;;
 45011                           
 45012                           	psect	text163
 45013  002958                     __ptext163:
 45014                           	opt callstack 0
 45015  002958                     _TMR6_Initialize:
 45016                           	opt callstack 13
 45017                           
 45018                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 45019                           
 45020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45021                           ;incstack = 0
 45022  002958  0E01               	movlw	1
 45023  00295A  6E96               	movwf	150,c	;volatile
 45024                           
 45025                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 45026  00295C  6A95               	clrf	149,c	;volatile
 45027                           
 45028                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 45029  00295E  6A97               	clrf	151,c	;volatile
 45030                           
 45031                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 45032  002960  0E7C               	movlw	124
 45033  002962  6E93               	movwf	147,c	;volatile
 45034                           
 45035                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 45036  002964  6A92               	clrf	146,c	;volatile
 45037                           
 45038                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 45039  002966  0139               	movlb	57	; () banked
 45040  002968  91A9               	bcf	169,0,b	;volatile
 45041                           
 45042                           ; BSR set to: 57
 45043                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 45044  00296A  8199               	bsf	153,0,b	;volatile
 45045                           
 45046                           ; BSR set to: 57
 45047                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 45048  00296C  0E4C               	movlw	low _TMR6_DefaultInterruptHandler
 45049  00296E  6EE6               	movwf	postinc1,c
 45050  002970  0E21               	movlw	high _TMR6_DefaultInterruptHandler
 45051  002972  6EE6               	movwf	postinc1,c
 45052  002974  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 45053  002976  6EE6               	movwf	postinc1,c
 45054  002978  EC25  F015         	call	_TMR6_SetInterruptHandler	;wreg free
 45055                           
 45056                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 45057  00297C  0EE0               	movlw	224
 45058  00297E  6E94               	movwf	148,c	;volatile
 45059                           
 45060                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45061  002980  0012               	return		;funcret
 45062  002982                     __end_of_TMR6_Initialize:
 45063                           	opt callstack 0
 45064                           
 45065 ;; *************** function _TMR6_SetInterruptHandler *****************
 45066 ;; Defined at:
 45067 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 45068 ;; Parameters:    Size  Location     Type
 45069 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45070 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 45071 ;; Auto vars:     Size  Location     Type
 45072 ;;		None
 45073 ;; Return value:  Size  Location     Type
 45074 ;;                  1  [STACK] void 
 45075 ;; Registers used:
 45076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45077 ;; Tracked objects:
 45078 ;;		On entry : 3F/39
 45079 ;;		On exit  : 0/0
 45080 ;;		Unchanged: 0/0
 45081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45086 ;;Total ram usage:        0 bytes
 45087 ;; Hardware stack levels used:    1
 45088 ;; Hardware stack levels required when called:   15
 45089 ;; This function calls:
 45090 ;;		Nothing
 45091 ;; This function is called by:
 45092 ;;		_TMR6_Initialize
 45093 ;; This function uses a reentrant model
 45094 ;;
 45095                           
 45096                           	psect	text164
 45097  002A4A                     __ptext164:
 45098                           	opt callstack 0
 45099  002A4A                     _TMR6_SetInterruptHandler:
 45100                           	opt callstack 13
 45101                           
 45102                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 45103                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45104                           
 45105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45106                           ;incstack = 0
 45107  002A4A  50E1               	movf	fsr1l,w,c
 45108  002A4C  0FFD               	addlw	-3
 45109  002A4E  6ED9               	movwf	fsr2l,c
 45110  002A50  50E2               	movf	fsr1h,w,c
 45111  002A52  6EDA               	movwf	fsr2h,c
 45112  002A54  0EFF               	movlw	255
 45113  002A56  22DA               	addwfc	fsr2h,f,c
 45114  002A58  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 45115  002A5E  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 45116  002A64  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 45117                           
 45118                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45119  002A6A  52E5               	movf	postdec1,f,c
 45120  002A6C  52E5               	movf	postdec1,f,c
 45121  002A6E  52E5               	movf	postdec1,f,c
 45122  002A70  0012               	return		;funcret
 45123  002A72                     __end_of_TMR6_SetInterruptHandler:
 45124                           	opt callstack 0
 45125                           
 45126 ;; *************** function _TMR5_Initialize *****************
 45127 ;; Defined at:
 45128 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 45129 ;; Parameters:    Size  Location     Type
 45130 ;;		None
 45131 ;; Auto vars:     Size  Location     Type
 45132 ;;		None
 45133 ;; Return value:  Size  Location     Type
 45134 ;;                  1  [STACK] void 
 45135 ;; Registers used:
 45136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 45137 ;; Tracked objects:
 45138 ;;		On entry : 0/39
 45139 ;;		On exit  : 0/0
 45140 ;;		Unchanged: 0/0
 45141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45146 ;;Total ram usage:        0 bytes
 45147 ;; Hardware stack levels used:    1
 45148 ;; Hardware stack levels required when called:   16
 45149 ;; This function calls:
 45150 ;;		_TMR5_SetInterruptHandler
 45151 ;; This function is called by:
 45152 ;;		_SYSTEM_Initialize
 45153 ;; This function uses a reentrant model
 45154 ;;
 45155                           
 45156                           	psect	text165
 45157  00222A                     __ptext165:
 45158                           	opt callstack 0
 45159  00222A                     _TMR5_Initialize:
 45160                           	opt callstack 13
 45161                           
 45162                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 45163                           
 45164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45165                           ;incstack = 0
 45166  00222A  6A9B               	clrf	155,c	;volatile
 45167                           
 45168                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 45169  00222C  6A9C               	clrf	156,c	;volatile
 45170                           
 45171                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 45172  00222E  0E01               	movlw	1
 45173  002230  6E9D               	movwf	157,c	;volatile
 45174                           
 45175                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 45176  002232  0E63               	movlw	99
 45177  002234  6E99               	movwf	153,c	;volatile
 45178                           
 45179                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 45180  002236  0EC0               	movlw	192
 45181  002238  6E98               	movwf	152,c	;volatile
 45182                           
 45183                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 45184  00223A  5098               	movf	152,w,c	;volatile
 45185  00223C  006F FE64  F02A    	movff	16281,btemp	;volatile
 45186  002242  6A2B               	clrf	(btemp+1)^0,c
 45187  002244  0060  F0A8  F02B   	movff	btemp,btemp+1
 45188  00224A  6A2A               	clrf	btemp^0,c
 45189  00224C  102A               	iorwf	btemp^0,w,c
 45190  00224E  0100               	movlb	0	; () banked
 45191  002250  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 45192  002252  502B               	movf	(btemp+1)^0,w,c
 45193  002254  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 45194                           
 45195                           ; BSR set to: 0
 45196                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 45197  002256  0139               	movlb	57	; () banked
 45198  002258  9DA8               	bcf	168,6,b	;volatile
 45199                           
 45200                           ; BSR set to: 57
 45201                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 45202  00225A  8D98               	bsf	152,6,b	;volatile
 45203                           
 45204                           ; BSR set to: 57
 45205                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 45206  00225C  0E40               	movlw	low _TMR5_DefaultInterruptHandler
 45207  00225E  6EE6               	movwf	postinc1,c
 45208  002260  0E26               	movlw	high _TMR5_DefaultInterruptHandler
 45209  002262  6EE6               	movwf	postinc1,c
 45210  002264  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 45211  002266  6EE6               	movwf	postinc1,c
 45212  002268  EC39  F015         	call	_TMR5_SetInterruptHandler	;wreg free
 45213                           
 45214                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 45215  00226C  0E31               	movlw	49
 45216  00226E  6E9A               	movwf	154,c	;volatile
 45217                           
 45218                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45219  002270  0012               	return		;funcret
 45220  002272                     __end_of_TMR5_Initialize:
 45221                           	opt callstack 0
 45222                           
 45223 ;; *************** function _TMR5_SetInterruptHandler *****************
 45224 ;; Defined at:
 45225 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 45226 ;; Parameters:    Size  Location     Type
 45227 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45228 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 45229 ;; Auto vars:     Size  Location     Type
 45230 ;;		None
 45231 ;; Return value:  Size  Location     Type
 45232 ;;                  1  [STACK] void 
 45233 ;; Registers used:
 45234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45235 ;; Tracked objects:
 45236 ;;		On entry : 3F/39
 45237 ;;		On exit  : 0/0
 45238 ;;		Unchanged: 0/0
 45239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45244 ;;Total ram usage:        0 bytes
 45245 ;; Hardware stack levels used:    1
 45246 ;; Hardware stack levels required when called:   15
 45247 ;; This function calls:
 45248 ;;		Nothing
 45249 ;; This function is called by:
 45250 ;;		_TMR5_Initialize
 45251 ;; This function uses a reentrant model
 45252 ;;
 45253                           
 45254                           	psect	text166
 45255  002A72                     __ptext166:
 45256                           	opt callstack 0
 45257  002A72                     _TMR5_SetInterruptHandler:
 45258                           	opt callstack 13
 45259                           
 45260                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 45261                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45262                           
 45263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45264                           ;incstack = 0
 45265  002A72  50E1               	movf	fsr1l,w,c
 45266  002A74  0FFD               	addlw	-3
 45267  002A76  6ED9               	movwf	fsr2l,c
 45268  002A78  50E2               	movf	fsr1h,w,c
 45269  002A7A  6EDA               	movwf	fsr2h,c
 45270  002A7C  0EFF               	movlw	255
 45271  002A7E  22DA               	addwfc	fsr2h,f,c
 45272  002A80  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 45273  002A86  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 45274  002A8C  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 45275                           
 45276                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45277  002A92  52E5               	movf	postdec1,f,c
 45278  002A94  52E5               	movf	postdec1,f,c
 45279  002A96  52E5               	movf	postdec1,f,c
 45280  002A98  0012               	return		;funcret
 45281  002A9A                     __end_of_TMR5_SetInterruptHandler:
 45282                           	opt callstack 0
 45283                           
 45284 ;; *************** function _TMR3_Initialize *****************
 45285 ;; Defined at:
 45286 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 45287 ;; Parameters:    Size  Location     Type
 45288 ;;		None
 45289 ;; Auto vars:     Size  Location     Type
 45290 ;;		None
 45291 ;; Return value:  Size  Location     Type
 45292 ;;                  1  [STACK] void 
 45293 ;; Registers used:
 45294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 45295 ;; Tracked objects:
 45296 ;;		On entry : 0/39
 45297 ;;		On exit  : 0/0
 45298 ;;		Unchanged: 0/0
 45299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45304 ;;Total ram usage:        0 bytes
 45305 ;; Hardware stack levels used:    1
 45306 ;; Hardware stack levels required when called:   16
 45307 ;; This function calls:
 45308 ;;		_TMR3_SetInterruptHandler
 45309 ;; This function is called by:
 45310 ;;		_SYSTEM_Initialize
 45311 ;; This function uses a reentrant model
 45312 ;;
 45313                           
 45314                           	psect	text167
 45315  002272                     __ptext167:
 45316                           	opt callstack 0
 45317  002272                     _TMR3_Initialize:
 45318                           	opt callstack 13
 45319                           
 45320                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 45321                           
 45322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45323                           ;incstack = 0
 45324  002272  6AA7               	clrf	167,c	;volatile
 45325                           
 45326                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 45327  002274  6AA8               	clrf	168,c	;volatile
 45328                           
 45329                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 45330  002276  0E01               	movlw	1
 45331  002278  6EA9               	movwf	169,c	;volatile
 45332                           
 45333                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 45334  00227A  0E3C               	movlw	60
 45335  00227C  6EA5               	movwf	165,c	;volatile
 45336                           
 45337                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 45338  00227E  0EB0               	movlw	176
 45339  002280  6EA4               	movwf	164,c	;volatile
 45340                           
 45341                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 45342  002282  50A4               	movf	164,w,c	;volatile
 45343  002284  006F FE94  F02A    	movff	16293,btemp	;volatile
 45344  00228A  6A2B               	clrf	(btemp+1)^0,c
 45345  00228C  0060  F0A8  F02B   	movff	btemp,btemp+1
 45346  002292  6A2A               	clrf	btemp^0,c
 45347  002294  102A               	iorwf	btemp^0,w,c
 45348  002296  0100               	movlb	0	; () banked
 45349  002298  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 45350  00229A  502B               	movf	(btemp+1)^0,w,c
 45351  00229C  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 45352                           
 45353                           ; BSR set to: 0
 45354                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 45355  00229E  0139               	movlb	57	; () banked
 45356  0022A0  9DA6               	bcf	166,6,b	;volatile
 45357                           
 45358                           ; BSR set to: 57
 45359                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 45360  0022A2  8D96               	bsf	150,6,b	;volatile
 45361                           
 45362                           ; BSR set to: 57
 45363                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 45364  0022A4  0EFC               	movlw	low _TMR3_DefaultInterruptHandler
 45365  0022A6  6EE6               	movwf	postinc1,c
 45366  0022A8  0E2F               	movlw	high _TMR3_DefaultInterruptHandler
 45367  0022AA  6EE6               	movwf	postinc1,c
 45368  0022AC  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 45369  0022AE  6EE6               	movwf	postinc1,c
 45370  0022B0  EC4D  F015         	call	_TMR3_SetInterruptHandler	;wreg free
 45371                           
 45372                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 45373  0022B4  0E31               	movlw	49
 45374  0022B6  6EA6               	movwf	166,c	;volatile
 45375                           
 45376                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45377  0022B8  0012               	return		;funcret
 45378  0022BA                     __end_of_TMR3_Initialize:
 45379                           	opt callstack 0
 45380                           
 45381 ;; *************** function _TMR3_SetInterruptHandler *****************
 45382 ;; Defined at:
 45383 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 45384 ;; Parameters:    Size  Location     Type
 45385 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45386 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 45387 ;; Auto vars:     Size  Location     Type
 45388 ;;		None
 45389 ;; Return value:  Size  Location     Type
 45390 ;;                  1  [STACK] void 
 45391 ;; Registers used:
 45392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45393 ;; Tracked objects:
 45394 ;;		On entry : 0/1
 45395 ;;		On exit  : 0/0
 45396 ;;		Unchanged: 0/0
 45397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45402 ;;Total ram usage:        0 bytes
 45403 ;; Hardware stack levels used:    1
 45404 ;; Hardware stack levels required when called:   15
 45405 ;; This function calls:
 45406 ;;		Nothing
 45407 ;; This function is called by:
 45408 ;;		_TMR3_Initialize
 45409 ;;		_init_bsoc
 45410 ;; This function uses a reentrant model
 45411 ;;
 45412                           
 45413                           	psect	text168
 45414  002A9A                     __ptext168:
 45415                           	opt callstack 0
 45416  002A9A                     _TMR3_SetInterruptHandler:
 45417                           	opt callstack 14
 45418                           
 45419                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 45420                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45421                           
 45422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45423                           ;incstack = 0
 45424  002A9A  50E1               	movf	fsr1l,w,c
 45425  002A9C  0FFD               	addlw	-3
 45426  002A9E  6ED9               	movwf	fsr2l,c
 45427  002AA0  50E2               	movf	fsr1h,w,c
 45428  002AA2  6EDA               	movwf	fsr2h,c
 45429  002AA4  0EFF               	movlw	255
 45430  002AA6  22DA               	addwfc	fsr2h,f,c
 45431  002AA8  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 45432  002AAE  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 45433  002AB4  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 45434                           
 45435                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45436  002ABA  52E5               	movf	postdec1,f,c
 45437  002ABC  52E5               	movf	postdec1,f,c
 45438  002ABE  52E5               	movf	postdec1,f,c
 45439  002AC0  0012               	return		;funcret
 45440  002AC2                     __end_of_TMR3_SetInterruptHandler:
 45441                           	opt callstack 0
 45442                           
 45443 ;; *************** function _TMR2_Initialize *****************
 45444 ;; Defined at:
 45445 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 45446 ;; Parameters:    Size  Location     Type
 45447 ;;		None
 45448 ;; Auto vars:     Size  Location     Type
 45449 ;;		None
 45450 ;; Return value:  Size  Location     Type
 45451 ;;                  1  [STACK] void 
 45452 ;; Registers used:
 45453 ;;		wreg, status,2
 45454 ;; Tracked objects:
 45455 ;;		On entry : 0/0
 45456 ;;		On exit  : 3F/39
 45457 ;;		Unchanged: 0/0
 45458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45463 ;;Total ram usage:        0 bytes
 45464 ;; Hardware stack levels used:    1
 45465 ;; Hardware stack levels required when called:   15
 45466 ;; This function calls:
 45467 ;;		Nothing
 45468 ;; This function is called by:
 45469 ;;		_SYSTEM_Initialize
 45470 ;; This function uses a reentrant model
 45471 ;;
 45472                           
 45473                           	psect	text169
 45474  002E1E                     __ptext169:
 45475                           	opt callstack 0
 45476  002E1E                     _TMR2_Initialize:
 45477                           	opt callstack 14
 45478                           
 45479                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 45480                           
 45481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45482                           ;incstack = 0
 45483  002E1E  0E01               	movlw	1
 45484  002E20  6EAE               	movwf	174,c	;volatile
 45485                           
 45486                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 45487  002E22  6AAD               	clrf	173,c	;volatile
 45488                           
 45489                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 45490  002E24  6AAF               	clrf	175,c	;volatile
 45491                           
 45492                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 45493  002E26  0E63               	movlw	99
 45494  002E28  6EAB               	movwf	171,c	;volatile
 45495                           
 45496                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 45497  002E2A  6AAA               	clrf	170,c	;volatile
 45498                           
 45499                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 45500  002E2C  0139               	movlb	57	; () banked
 45501  002E2E  95A4               	bcf	164,2,b	;volatile
 45502                           
 45503                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 45504  002E30  0EC0               	movlw	192
 45505  002E32  6EAC               	movwf	172,c	;volatile
 45506                           
 45507                           ; BSR set to: 57
 45508                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45509  002E34  0012               	return		;funcret
 45510  002E36                     __end_of_TMR2_Initialize:
 45511                           	opt callstack 0
 45512                           
 45513 ;; *************** function _SPI1_Initialize *****************
 45514 ;; Defined at:
 45515 ;;		line 64 in file "mcc_generated_files/spi1.c"
 45516 ;; Parameters:    Size  Location     Type
 45517 ;;		None
 45518 ;; Auto vars:     Size  Location     Type
 45519 ;;		None
 45520 ;; Return value:  Size  Location     Type
 45521 ;;                  1  [STACK] void 
 45522 ;; Registers used:
 45523 ;;		wreg, status,2
 45524 ;; Tracked objects:
 45525 ;;		On entry : 3F/39
 45526 ;;		On exit  : 3F/3D
 45527 ;;		Unchanged: 0/0
 45528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45533 ;;Total ram usage:        0 bytes
 45534 ;; Hardware stack levels used:    1
 45535 ;; Hardware stack levels required when called:   15
 45536 ;; This function calls:
 45537 ;;		Nothing
 45538 ;; This function is called by:
 45539 ;;		_SYSTEM_Initialize
 45540 ;; This function uses a reentrant model
 45541 ;;
 45542                           
 45543                           	psect	text170
 45544  002E4C                     __ptext170:
 45545                           	opt callstack 0
 45546  002E4C                     _SPI1_Initialize:
 45547                           	opt callstack 14
 45548                           
 45549                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 45550                           
 45551                           ; BSR set to: 57
 45552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45553                           ;incstack = 0
 45554  002E4C  0E40               	movlw	64
 45555  002E4E  013D               	movlb	61	; () banked
 45556  002E50  6F15               	movwf	21,b	;volatile
 45557                           
 45558                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 45559  002E52  0E03               	movlw	3
 45560  002E54  6F16               	movwf	22,b	;volatile
 45561                           
 45562                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 45563  002E56  0E4F               	movlw	79
 45564  002E58  6F19               	movwf	25,b	;volatile
 45565                           
 45566                           ; BSR set to: 61
 45567                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 45568  002E5A  6B1C               	clrf	28,b	;volatile
 45569                           
 45570                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 45571  002E5C  0E83               	movlw	131
 45572  002E5E  6F14               	movwf	20,b	;volatile
 45573                           
 45574                           ; BSR set to: 61
 45575                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45576  002E60  0012               	return		;funcret
 45577  002E62                     __end_of_SPI1_Initialize:
 45578                           	opt callstack 0
 45579                           
 45580 ;; *************** function _PWM8_Initialize *****************
 45581 ;; Defined at:
 45582 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 45583 ;; Parameters:    Size  Location     Type
 45584 ;;		None
 45585 ;; Auto vars:     Size  Location     Type
 45586 ;;		None
 45587 ;; Return value:  Size  Location     Type
 45588 ;;                  1  [STACK] void 
 45589 ;; Registers used:
 45590 ;;		wreg, status,2
 45591 ;; Tracked objects:
 45592 ;;		On entry : 3F/39
 45593 ;;		On exit  : 3F/3F
 45594 ;;		Unchanged: 0/0
 45595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45600 ;;Total ram usage:        0 bytes
 45601 ;; Hardware stack levels used:    1
 45602 ;; Hardware stack levels required when called:   15
 45603 ;; This function calls:
 45604 ;;		Nothing
 45605 ;; This function is called by:
 45606 ;;		_SYSTEM_Initialize
 45607 ;; This function uses a reentrant model
 45608 ;;
 45609                           
 45610                           	psect	text171
 45611  002E62                     __ptext171:
 45612                           	opt callstack 0
 45613  002E62                     _PWM8_Initialize:
 45614                           	opt callstack 14
 45615                           
 45616                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 45617                           
 45618                           ; BSR set to: 61
 45619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45620                           ;incstack = 0
 45621  002E62  0E80               	movlw	128
 45622  002E64  6E62               	movwf	98,c	;volatile
 45623                           
 45624                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 45625  002E66  6A61               	clrf	97,c	;volatile
 45626                           
 45627                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 45628  002E68  0E40               	movlw	64
 45629  002E6A  6E60               	movwf	96,c	;volatile
 45630                           
 45631                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 45632  002E6C  013F               	movlb	63	; () banked
 45633  002E6E  515F               	movf	95,w,b	;volatile
 45634  002E70  0B3F               	andlw	-193
 45635  002E72  0940               	iorlw	64
 45636  002E74  6F5F               	movwf	95,b	;volatile
 45637                           
 45638                           ; BSR set to: 63
 45639                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45640  002E76  0012               	return		;funcret
 45641  002E78                     __end_of_PWM8_Initialize:
 45642                           	opt callstack 0
 45643                           
 45644 ;; *************** function _PMD_Initialize *****************
 45645 ;; Defined at:
 45646 ;;		line 91 in file "mcc_generated_files/mcc.c"
 45647 ;; Parameters:    Size  Location     Type
 45648 ;;		None
 45649 ;; Auto vars:     Size  Location     Type
 45650 ;;		None
 45651 ;; Return value:  Size  Location     Type
 45652 ;;                  1  [STACK] void 
 45653 ;; Registers used:
 45654 ;;		None
 45655 ;; Tracked objects:
 45656 ;;		On entry : 3F/39
 45657 ;;		On exit  : 3F/39
 45658 ;;		Unchanged: 0/0
 45659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45664 ;;Total ram usage:        0 bytes
 45665 ;; Hardware stack levels used:    1
 45666 ;; Hardware stack levels required when called:   15
 45667 ;; This function calls:
 45668 ;;		Nothing
 45669 ;; This function is called by:
 45670 ;;		_SYSTEM_Initialize
 45671 ;; This function uses a reentrant model
 45672 ;;
 45673                           
 45674                           	psect	text172
 45675  002E8E                     __ptext172:
 45676                           	opt callstack 0
 45677  002E8E                     _PMD_Initialize:
 45678                           	opt callstack 14
 45679                           
 45680                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 45681                           
 45682                           ; BSR set to: 63
 45683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45684                           ;incstack = 0
 45685  002E8E  0139               	movlb	57	; () banked
 45686  002E90  6BC0               	clrf	192,b	;volatile
 45687                           
 45688                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 45689  002E92  6BC1               	clrf	193,b	;volatile
 45690                           
 45691                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 45692  002E94  6BC2               	clrf	194,b	;volatile
 45693                           
 45694                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 45695  002E96  6BC3               	clrf	195,b	;volatile
 45696                           
 45697                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 45698  002E98  6BC4               	clrf	196,b	;volatile
 45699                           
 45700                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 45701  002E9A  6BC5               	clrf	197,b	;volatile
 45702                           
 45703                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 45704  002E9C  6BC6               	clrf	198,b	;volatile
 45705                           
 45706                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 45707  002E9E  6BC7               	clrf	199,b	;volatile
 45708                           
 45709                           ; BSR set to: 57
 45710                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45711  002EA0  0012               	return		;funcret
 45712  002EA2                     __end_of_PMD_Initialize:
 45713                           	opt callstack 0
 45714                           
 45715 ;; *************** function _PIN_MANAGER_Initialize *****************
 45716 ;; Defined at:
 45717 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 45718 ;; Parameters:    Size  Location     Type
 45719 ;;		None
 45720 ;; Auto vars:     Size  Location     Type
 45721 ;;		None
 45722 ;; Return value:  Size  Location     Type
 45723 ;;                  1  [STACK] void 
 45724 ;; Registers used:
 45725 ;;		wreg, status,2
 45726 ;; Tracked objects:
 45727 ;;		On entry : 3F/39
 45728 ;;		On exit  : 3F/3A
 45729 ;;		Unchanged: 0/0
 45730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45735 ;;Total ram usage:        0 bytes
 45736 ;; Hardware stack levels used:    1
 45737 ;; Hardware stack levels required when called:   15
 45738 ;; This function calls:
 45739 ;;		Nothing
 45740 ;; This function is called by:
 45741 ;;		_SYSTEM_Initialize
 45742 ;; This function uses a reentrant model
 45743 ;;
 45744                           
 45745                           	psect	text173
 45746  001454                     __ptext173:
 45747                           	opt callstack 0
 45748  001454                     _PIN_MANAGER_Initialize:
 45749                           	opt callstack 14
 45750                           
 45751                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 45752                           
 45753                           ; BSR set to: 57
 45754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45755                           ;incstack = 0
 45756  001454  0E07               	movlw	7
 45757  001456  6EBE               	movwf	190,c	;volatile
 45758                           
 45759                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 45760  001458  6ABD               	clrf	189,c	;volatile
 45761                           
 45762                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 45763  00145A  6ABA               	clrf	186,c	;volatile
 45764                           
 45765                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 45766  00145C  0E23               	movlw	35
 45767  00145E  6EBF               	movwf	191,c	;volatile
 45768                           
 45769                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 45770  001460  6ABB               	clrf	187,c	;volatile
 45771                           
 45772                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 45773  001462  0E07               	movlw	7
 45774  001464  6EBC               	movwf	188,c	;volatile
 45775                           
 45776                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 45777  001466  6AC6               	clrf	198,c	;volatile
 45778                           
 45779                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 45780  001468  0E0C               	movlw	12
 45781  00146A  6EC7               	movwf	199,c	;volatile
 45782                           
 45783                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 45784  00146C  68C2               	setf	194,c	;volatile
 45785                           
 45786                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 45787  00146E  0EBF               	movlw	191
 45788  001470  6EC3               	movwf	195,c	;volatile
 45789                           
 45790                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 45791  001472  0E90               	movlw	144
 45792  001474  6EC4               	movwf	196,c	;volatile
 45793                           
 45794                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 45795  001476  0E0C               	movlw	12
 45796  001478  6EC5               	movwf	197,c	;volatile
 45797                           
 45798                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 45799  00147A  013A               	movlb	58	; () banked
 45800  00147C  6B70               	clrf	112,b	;volatile
 45801                           
 45802                           ; BSR set to: 58
 45803                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 45804  00147E  6B60               	clrf	96,b	;volatile
 45805                           
 45806                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 45807  001480  0E3C               	movlw	60
 45808  001482  6F50               	movwf	80,b	;volatile
 45809                           
 45810                           ; BSR set to: 58
 45811                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 45812  001484  6B80               	clrf	128,b	;volatile
 45813                           
 45814                           ; BSR set to: 58
 45815                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 45816  001486  6B90               	clrf	144,b	;volatile
 45817                           
 45818                           ; BSR set to: 58
 45819                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 45820  001488  6940               	setf	64,b	;volatile
 45821                           
 45822                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 45823  00148A  0E0C               	movlw	12
 45824  00148C  6F71               	movwf	113,b	;volatile
 45825                           
 45826                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 45827  00148E  0E0C               	movlw	12
 45828  001490  6F91               	movwf	145,b	;volatile
 45829                           
 45830                           ; BSR set to: 58
 45831                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 45832  001492  6B81               	clrf	129,b	;volatile
 45833                           
 45834                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 45835  001494  0E83               	movlw	131
 45836  001496  6F51               	movwf	81,b	;volatile
 45837                           
 45838                           ; BSR set to: 58
 45839                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 45840  001498  6B41               	clrf	65,b	;volatile
 45841                           
 45842                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 45843  00149A  0E97               	movlw	151
 45844  00149C  6F61               	movwf	97,b	;volatile
 45845                           
 45846                           ; BSR set to: 58
 45847                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 45848  00149E  6B82               	clrf	130,b	;volatile
 45849                           
 45850                           ; BSR set to: 58
 45851                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 45852  0014A0  6B92               	clrf	146,b	;volatile
 45853                           
 45854                           ; BSR set to: 58
 45855                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 45856  0014A2  6B42               	clrf	66,b	;volatile
 45857                           
 45858                           ; BSR set to: 58
 45859                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 45860  0014A4  6B52               	clrf	82,b	;volatile
 45861                           
 45862                           ; BSR set to: 58
 45863                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 45864  0014A6  6B62               	clrf	98,b	;volatile
 45865                           
 45866                           ; BSR set to: 58
 45867                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 45868  0014A8  6B72               	clrf	114,b	;volatile
 45869                           
 45870                           ; BSR set to: 58
 45871                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 45872  0014AA  6943               	setf	67,b	;volatile
 45873                           
 45874                           ; BSR set to: 58
 45875                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 45876  0014AC  6953               	setf	83,b	;volatile
 45877                           
 45878                           ; BSR set to: 58
 45879                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 45880  0014AE  6963               	setf	99,b	;volatile
 45881                           
 45882                           ; BSR set to: 58
 45883                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 45884  0014B0  6973               	setf	115,b	;volatile
 45885                           
 45886                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 45887  0014B2  0E07               	movlw	7
 45888  0014B4  6F83               	movwf	131,b	;volatile
 45889                           
 45890                           ; BSR set to: 58
 45891                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 45892  0014B6  6993               	setf	147,b	;volatile
 45893                           
 45894                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 45895  0014B8  0E0F               	movlw	15
 45896  0014BA  6FE8               	movwf	232,b	;volatile
 45897                           
 45898                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 45899  0014BC  0E13               	movlw	19
 45900  0014BE  6FDE               	movwf	222,b	;volatile
 45901                           
 45902                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 45903  0014C0  0E16               	movlw	22
 45904  0014C2  6F0E               	movwf	14,b	;volatile
 45905                           
 45906                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 45907  0014C4  0E1E               	movlw	30
 45908  0014C6  6F13               	movwf	19,b	;volatile
 45909                           
 45910                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 45911  0014C8  0E08               	movlw	8
 45912  0014CA  6FC0               	movwf	192,b	;volatile
 45913                           
 45914                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 45915  0014CC  0E10               	movlw	16
 45916  0014CE  6F19               	movwf	25,b	;volatile
 45917                           
 45918                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 45919  0014D0  0E09               	movlw	9
 45920  0014D2  6FC1               	movwf	193,b	;volatile
 45921                           
 45922                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 45923  0014D4  0E1F               	movlw	31
 45924  0014D6  6F15               	movwf	21,b	;volatile
 45925                           
 45926                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 45927  0014D8  0E13               	movlw	19
 45928  0014DA  6F16               	movwf	22,b	;volatile
 45929                           
 45930                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 45931  0014DC  0E17               	movlw	23
 45932  0014DE  6FE5               	movwf	229,b	;volatile
 45933                           
 45934                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 45935  0014E0  0E14               	movlw	20
 45936  0014E2  6FDF               	movwf	223,b	;volatile
 45937                           
 45938                           ; BSR set to: 58
 45939                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 45940  0014E4  0012               	return		;funcret
 45941  0014E6                     __end_of_PIN_MANAGER_Initialize:
 45942                           	opt callstack 0
 45943                           
 45944 ;; *************** function _OSCILLATOR_Initialize *****************
 45945 ;; Defined at:
 45946 ;;		line 73 in file "mcc_generated_files/mcc.c"
 45947 ;; Parameters:    Size  Location     Type
 45948 ;;		None
 45949 ;; Auto vars:     Size  Location     Type
 45950 ;;		None
 45951 ;; Return value:  Size  Location     Type
 45952 ;;                  1  [STACK] void 
 45953 ;; Registers used:
 45954 ;;		wreg, status,2
 45955 ;; Tracked objects:
 45956 ;;		On entry : 3F/3A
 45957 ;;		On exit  : 3F/39
 45958 ;;		Unchanged: 0/0
 45959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45964 ;;Total ram usage:        0 bytes
 45965 ;; Hardware stack levels used:    1
 45966 ;; Hardware stack levels required when called:   15
 45967 ;; This function calls:
 45968 ;;		Nothing
 45969 ;; This function is called by:
 45970 ;;		_SYSTEM_Initialize
 45971 ;; This function uses a reentrant model
 45972 ;;
 45973                           
 45974                           	psect	text174
 45975  002E78                     __ptext174:
 45976                           	opt callstack 0
 45977  002E78                     _OSCILLATOR_Initialize:
 45978                           	opt callstack 14
 45979                           
 45980                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 45981                           
 45982                           ; BSR set to: 58
 45983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45984                           ;incstack = 0
 45985  002E78  0E20               	movlw	32
 45986  002E7A  0139               	movlb	57	; () banked
 45987  002E7C  6FD9               	movwf	217,b	;volatile
 45988                           
 45989                           ; BSR set to: 57
 45990                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 45991  002E7E  6BDB               	clrf	219,b	;volatile
 45992                           
 45993                           ; BSR set to: 57
 45994                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 45995  002E80  6BDD               	clrf	221,b	;volatile
 45996                           
 45997                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 45998  002E82  0E02               	movlw	2
 45999  002E84  6FDF               	movwf	223,b	;volatile
 46000                           
 46001                           ; BSR set to: 57
 46002                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 46003  002E86  6BDE               	clrf	222,b	;volatile
 46004  002E88                     l171:
 46005                           
 46006                           ; BSR set to: 57
 46007                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 46008  002E88  B1DC               	btfsc	220,0,b	;volatile
 46009  002E8A  0012               	return	
 46010  002E8C  D7FD               	goto	l171
 46011  002E8E                     __end_of_OSCILLATOR_Initialize:
 46012                           	opt callstack 0
 46013                           
 46014 ;; *************** function _INTERRUPT_Initialize *****************
 46015 ;; Defined at:
 46016 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 46017 ;; Parameters:    Size  Location     Type
 46018 ;;		None
 46019 ;; Auto vars:     Size  Location     Type
 46020 ;;  state           1  [STACK] _Bool 
 46021 ;; Return value:  Size  Location     Type
 46022 ;;                  1  [STACK] void 
 46023 ;; Registers used:
 46024 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 46025 ;; Tracked objects:
 46026 ;;		On entry : 0/0
 46027 ;;		On exit  : 3F/39
 46028 ;;		Unchanged: 0/0
 46029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46034 ;;Total ram usage:        0 bytes
 46035 ;; Hardware stack levels used:    1
 46036 ;; Hardware stack levels required when called:   15
 46037 ;; This function calls:
 46038 ;;		Nothing
 46039 ;; This function is called by:
 46040 ;;		_SYSTEM_Initialize
 46041 ;; This function uses a reentrant model
 46042 ;;
 46043                           
 46044                           	psect	text175
 46045  001BF8                     __ptext175:
 46046                           	opt callstack 0
 46047  001BF8                     _INTERRUPT_Initialize:
 46048                           	opt callstack 0
 46049                           
 46050                           ; BSR set to: 57
 46051                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46052  001BF8  52E6               	movf	postinc1,f,c
 46053                           
 46054                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 46055                           
 46056                           ;incstack = 0
 46057  001BFA  8AD2               	bsf	210,5,c	;volatile
 46058                           
 46059                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 46060  001BFC  AED2               	btfss	16338,7,c	;volatile
 46061  001BFE  D003               	goto	u12510
 46062  001C00  6A35               	clrf	(btemp+11)^0,c
 46063  001C02  2A35               	incf	(btemp+11)^0,f,c
 46064  001C04  D001               	goto	u12528
 46065  001C06                     u12510:
 46066  001C06  6A35               	clrf	(btemp+11)^0,c
 46067  001C08                     u12528:
 46068                           
 46069                           ;stkvar	_state @ sp[(-1)+0]
 46070  001C08  0EFF               	movlw	-1
 46071  001C0A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46072                           
 46073                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 46074  001C10  9ED2               	bcf	16338,7,c	;volatile
 46075                           
 46076                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 46077  001C12  0E55               	movlw	85
 46078  001C14  6ED4               	movwf	212,c	;volatile
 46079                           
 46080                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 46081  001C16  0EAA               	movlw	170
 46082  001C18  6ED4               	movwf	212,c	;volatile
 46083                           
 46084                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 46085  001C1A  90D4               	bcf	212,0,c	;volatile
 46086                           
 46087                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 46088  001C1C  0138               	movlb	56	; () banked
 46089  001C1E  6B9F               	clrf	159,b	;volatile
 46090                           
 46091                           ; BSR set to: 56
 46092                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 46093  001C20  6B9E               	clrf	158,b	;volatile
 46094                           
 46095                           ; BSR set to: 56
 46096                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 46097  001C22  0E08               	movlw	8
 46098  001C24  6F9D               	movwf	157,b	;volatile
 46099                           
 46100                           ; BSR set to: 56
 46101                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 46102  001C26  0E55               	movlw	85
 46103  001C28  6ED4               	movwf	212,c	;volatile
 46104                           
 46105                           ; BSR set to: 56
 46106                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 46107  001C2A  0EAA               	movlw	170
 46108  001C2C  6ED4               	movwf	212,c	;volatile
 46109                           
 46110                           ; BSR set to: 56
 46111                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 46112  001C2E  80D4               	bsf	212,0,c	;volatile
 46113                           
 46114                           ; BSR set to: 56
 46115                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 46116                           ;stkvar	_state @ sp[(-1)+0]
 46117  001C30  0EFF               	movlw	-1
 46118  001C32  B0E3               	btfsc	plusw1,0,c
 46119  001C34  D002               	bra	u12535
 46120  001C36  9ED2               	bcf	16338,7,c	;volatile
 46121  001C38  D001               	bra	u12536
 46122  001C3A                     u12535:
 46123  001C3A  8ED2               	bsf	16338,7,c	;volatile
 46124  001C3C                     u12536:
 46125                           
 46126                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 46127  001C3C  0139               	movlb	57	; () banked
 46128  001C3E  8782               	bsf	130,3,b	;volatile
 46129                           
 46130                           ; BSR set to: 57
 46131                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 46132  001C40  8382               	bsf	130,1,b	;volatile
 46133                           
 46134                           ; BSR set to: 57
 46135                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 46136  001C42  8182               	bsf	130,0,b	;volatile
 46137                           
 46138                           ; BSR set to: 57
 46139                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 46140  001C44  8582               	bsf	130,2,b	;volatile
 46141                           
 46142                           ; BSR set to: 57
 46143                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 46144  001C46  8786               	bsf	134,3,b	;volatile
 46145                           
 46146                           ; BSR set to: 57
 46147                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 46148  001C48  8586               	bsf	134,2,b	;volatile
 46149                           
 46150                           ; BSR set to: 57
 46151                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 46152  001C4A  8783               	bsf	131,3,b	;volatile
 46153                           
 46154                           ; BSR set to: 57
 46155                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 46156  001C4C  8181               	bsf	129,0,b	;volatile
 46157                           
 46158                           ; BSR set to: 57
 46159                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 46160  001C4E  9185               	bcf	133,0,b	;volatile
 46161                           
 46162                           ; BSR set to: 57
 46163                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 46164  001C50  8189               	bsf	137,0,b	;volatile
 46165                           
 46166                           ; BSR set to: 57
 46167                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 46168  001C52  9D88               	bcf	136,6,b	;volatile
 46169                           
 46170                           ; BSR set to: 57
 46171                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 46172  001C54  8581               	bsf	129,2,b	;volatile
 46173                           
 46174                           ; BSR set to: 57
 46175                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 46176  001C56  8781               	bsf	129,3,b	;volatile
 46177                           
 46178                           ; BSR set to: 57
 46179                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 46180  001C58  9D86               	bcf	134,6,b	;volatile
 46181                           
 46182                           ; BSR set to: 57
 46183                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 46184  001C5A  52E5               	movf	postdec1,f,c
 46185  001C5C  0012               	return		;funcret
 46186  001C5E                     __end_of_INTERRUPT_Initialize:
 46187                           	opt callstack 0
 46188                           
 46189 ;; *************** function _FVR_Initialize *****************
 46190 ;; Defined at:
 46191 ;;		line 58 in file "mcc_generated_files/fvr.c"
 46192 ;; Parameters:    Size  Location     Type
 46193 ;;		None
 46194 ;; Auto vars:     Size  Location     Type
 46195 ;;		None
 46196 ;; Return value:  Size  Location     Type
 46197 ;;                  1  [STACK] void 
 46198 ;; Registers used:
 46199 ;;		wreg, status,2
 46200 ;; Tracked objects:
 46201 ;;		On entry : 3F/39
 46202 ;;		On exit  : 3F/3E
 46203 ;;		Unchanged: 0/0
 46204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46209 ;;Total ram usage:        0 bytes
 46210 ;; Hardware stack levels used:    1
 46211 ;; Hardware stack levels required when called:   15
 46212 ;; This function calls:
 46213 ;;		Nothing
 46214 ;; This function is called by:
 46215 ;;		_SYSTEM_Initialize
 46216 ;; This function uses a reentrant model
 46217 ;;
 46218                           
 46219                           	psect	text176
 46220  002FC6                     __ptext176:
 46221                           	opt callstack 0
 46222  002FC6                     _FVR_Initialize:
 46223                           	opt callstack 14
 46224                           
 46225                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 46226                           
 46227                           ; BSR set to: 57
 46228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46229                           ;incstack = 0
 46230  002FC6  0EAF               	movlw	175
 46231  002FC8  013E               	movlb	62	; () banked
 46232  002FCA  6FC1               	movwf	193,b	;volatile
 46233                           
 46234                           ; BSR set to: 62
 46235                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46236  002FCC  0012               	return		;funcret
 46237  002FCE                     __end_of_FVR_Initialize:
 46238                           	opt callstack 0
 46239                           
 46240 ;; *************** function _EXT_INT_Initialize *****************
 46241 ;; Defined at:
 46242 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 46243 ;; Parameters:    Size  Location     Type
 46244 ;;		None
 46245 ;; Auto vars:     Size  Location     Type
 46246 ;;		None
 46247 ;; Return value:  Size  Location     Type
 46248 ;;                  1  [STACK] void 
 46249 ;; Registers used:
 46250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46251 ;; Tracked objects:
 46252 ;;		On entry : 3F/3F
 46253 ;;		On exit  : 3F/39
 46254 ;;		Unchanged: 0/0
 46255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46260 ;;Total ram usage:        0 bytes
 46261 ;; Hardware stack levels used:    1
 46262 ;; Hardware stack levels required when called:   16
 46263 ;; This function calls:
 46264 ;;		_INT0_SetInterruptHandler
 46265 ;;		_INT1_SetInterruptHandler
 46266 ;; This function is called by:
 46267 ;;		_SYSTEM_Initialize
 46268 ;; This function uses a reentrant model
 46269 ;;
 46270                           
 46271                           	psect	text177
 46272  002780                     __ptext177:
 46273                           	opt callstack 0
 46274  002780                     _EXT_INT_Initialize:
 46275                           	opt callstack 13
 46276                           
 46277                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 46278                           
 46279                           ; BSR set to: 62
 46280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46281                           ;incstack = 0
 46282  002780  0139               	movlb	57	; () banked
 46283  002782  91A1               	bcf	161,0,b	;volatile
 46284                           
 46285                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 46286  002784  90D2               	bcf	210,0,c	;volatile
 46287                           
 46288                           ; BSR set to: 57
 46289                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 46290  002786  0EFE               	movlw	low _INT0_DefaultInterruptHandler
 46291  002788  6EE6               	movwf	postinc1,c
 46292  00278A  0E2F               	movlw	high _INT0_DefaultInterruptHandler
 46293  00278C  6EE6               	movwf	postinc1,c
 46294  00278E  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 46295  002790  6EE6               	movwf	postinc1,c
 46296  002792  EC75  F015         	call	_INT0_SetInterruptHandler	;wreg free
 46297                           
 46298                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 46299  002796  0139               	movlb	57	; () banked
 46300  002798  8191               	bsf	145,0,b	;volatile
 46301                           
 46302                           ; BSR set to: 57
 46303                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 46304  00279A  91A5               	bcf	165,0,b	;volatile
 46305                           
 46306                           ; BSR set to: 57
 46307                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 46308  00279C  92D2               	bcf	210,1,c	;volatile
 46309                           
 46310                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 46311  00279E  0EFA               	movlw	low _INT1_DefaultInterruptHandler
 46312  0027A0  6EE6               	movwf	postinc1,c
 46313  0027A2  0E2F               	movlw	high _INT1_DefaultInterruptHandler
 46314  0027A4  6EE6               	movwf	postinc1,c
 46315  0027A6  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 46316  0027A8  6EE6               	movwf	postinc1,c
 46317  0027AA  EC61  F015         	call	_INT1_SetInterruptHandler	;wreg free
 46318                           
 46319                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 46320  0027AE  0139               	movlb	57	; () banked
 46321  0027B0  8195               	bsf	149,0,b	;volatile
 46322                           
 46323                           ; BSR set to: 57
 46324                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46325  0027B2  0012               	return		;funcret
 46326  0027B4                     __end_of_EXT_INT_Initialize:
 46327                           	opt callstack 0
 46328                           
 46329 ;; *************** function _INT1_SetInterruptHandler *****************
 46330 ;; Defined at:
 46331 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 46332 ;; Parameters:    Size  Location     Type
 46333 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46334 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 46335 ;; Auto vars:     Size  Location     Type
 46336 ;;		None
 46337 ;; Return value:  Size  Location     Type
 46338 ;;                  1  [STACK] void 
 46339 ;; Registers used:
 46340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46341 ;; Tracked objects:
 46342 ;;		On entry : 3F/39
 46343 ;;		On exit  : 0/0
 46344 ;;		Unchanged: 0/0
 46345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46350 ;;Total ram usage:        0 bytes
 46351 ;; Hardware stack levels used:    1
 46352 ;; Hardware stack levels required when called:   15
 46353 ;; This function calls:
 46354 ;;		Nothing
 46355 ;; This function is called by:
 46356 ;;		_EXT_INT_Initialize
 46357 ;;		_start_switch_handler
 46358 ;; This function uses a reentrant model
 46359 ;;
 46360                           
 46361                           	psect	text178
 46362  002AC2                     __ptext178:
 46363                           	opt callstack 0
 46364  002AC2                     _INT1_SetInterruptHandler:
 46365                           	opt callstack 14
 46366                           
 46367                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 46368                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46369                           
 46370                           ; BSR set to: 57
 46371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46372                           ;incstack = 0
 46373  002AC2  50E1               	movf	fsr1l,w,c
 46374  002AC4  0FFD               	addlw	-3
 46375  002AC6  6ED9               	movwf	fsr2l,c
 46376  002AC8  50E2               	movf	fsr1h,w,c
 46377  002ACA  6EDA               	movwf	fsr2h,c
 46378  002ACC  0EFF               	movlw	255
 46379  002ACE  22DA               	addwfc	fsr2h,f,c
 46380  002AD0  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 46381  002AD6  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 46382  002ADC  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 46383                           
 46384                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46385  002AE2  52E5               	movf	postdec1,f,c
 46386  002AE4  52E5               	movf	postdec1,f,c
 46387  002AE6  52E5               	movf	postdec1,f,c
 46388  002AE8  0012               	return		;funcret
 46389  002AEA                     __end_of_INT1_SetInterruptHandler:
 46390                           	opt callstack 0
 46391                           
 46392 ;; *************** function _INT0_SetInterruptHandler *****************
 46393 ;; Defined at:
 46394 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 46395 ;; Parameters:    Size  Location     Type
 46396 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46397 ;;		 -> INT0_DefaultInterruptHandler(1), 
 46398 ;; Auto vars:     Size  Location     Type
 46399 ;;		None
 46400 ;; Return value:  Size  Location     Type
 46401 ;;                  1  [STACK] void 
 46402 ;; Registers used:
 46403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46404 ;; Tracked objects:
 46405 ;;		On entry : 3F/39
 46406 ;;		On exit  : 0/0
 46407 ;;		Unchanged: 0/0
 46408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46413 ;;Total ram usage:        0 bytes
 46414 ;; Hardware stack levels used:    1
 46415 ;; Hardware stack levels required when called:   15
 46416 ;; This function calls:
 46417 ;;		Nothing
 46418 ;; This function is called by:
 46419 ;;		_EXT_INT_Initialize
 46420 ;; This function uses a reentrant model
 46421 ;;
 46422                           
 46423                           	psect	text179
 46424  002AEA                     __ptext179:
 46425                           	opt callstack 0
 46426  002AEA                     _INT0_SetInterruptHandler:
 46427                           	opt callstack 13
 46428                           
 46429                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 46430                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46431                           
 46432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46433                           ;incstack = 0
 46434  002AEA  50E1               	movf	fsr1l,w,c
 46435  002AEC  0FFD               	addlw	-3
 46436  002AEE  6ED9               	movwf	fsr2l,c
 46437  002AF0  50E2               	movf	fsr1h,w,c
 46438  002AF2  6EDA               	movwf	fsr2h,c
 46439  002AF4  0EFF               	movlw	255
 46440  002AF6  22DA               	addwfc	fsr2h,f,c
 46441  002AF8  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 46442  002AFE  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 46443  002B04  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 46444                           
 46445                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46446  002B0A  52E5               	movf	postdec1,f,c
 46447  002B0C  52E5               	movf	postdec1,f,c
 46448  002B0E  52E5               	movf	postdec1,f,c
 46449  002B10  0012               	return		;funcret
 46450  002B12                     __end_of_INT0_SetInterruptHandler:
 46451                           	opt callstack 0
 46452                           
 46453 ;; *************** function _DMA2_Initialize *****************
 46454 ;; Defined at:
 46455 ;;		line 61 in file "mcc_generated_files/dma2.c"
 46456 ;; Parameters:    Size  Location     Type
 46457 ;;		None
 46458 ;; Auto vars:     Size  Location     Type
 46459 ;;		None
 46460 ;; Return value:  Size  Location     Type
 46461 ;;                  1  [STACK] void 
 46462 ;; Registers used:
 46463 ;;		wreg, status,2
 46464 ;; Tracked objects:
 46465 ;;		On entry : 3F/3D
 46466 ;;		On exit  : 3F/3B
 46467 ;;		Unchanged: 0/0
 46468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46473 ;;Total ram usage:        0 bytes
 46474 ;; Hardware stack levels used:    1
 46475 ;; Hardware stack levels required when called:   15
 46476 ;; This function calls:
 46477 ;;		Nothing
 46478 ;; This function is called by:
 46479 ;;		_SYSTEM_Initialize
 46480 ;; This function uses a reentrant model
 46481 ;;
 46482                           
 46483                           	psect	text180
 46484  001F5C                     __ptext180:
 46485                           	opt callstack 0
 46486  001F5C                     _DMA2_Initialize:
 46487                           	opt callstack 14
 46488                           
 46489                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 46490                           
 46491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46492                           ;incstack = 0
 46493  001F5C  0E00               	movlw	0
 46494  001F5E  013B               	movlb	59	; () banked
 46495  001F60  6FD9               	movwf	217,b	;volatile
 46496  001F62  0E10               	movlw	16
 46497  001F64  6FDA               	movwf	218,b	;volatile
 46498  001F66  0E00               	movlw	0
 46499  001F68  6FDB               	movwf	219,b	;volatile
 46500                           
 46501                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 46502  001F6A  0E3F               	movlw	63
 46503  001F6C  6FD1               	movwf	209,b	;volatile
 46504  001F6E  0EBB               	movlw	187
 46505  001F70  6FD0               	movwf	208,b	;volatile
 46506                           
 46507                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 46508  001F72  0E03               	movlw	3
 46509  001F74  6FDD               	movwf	221,b	;volatile
 46510                           
 46511                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 46512  001F76  0E00               	movlw	0
 46513  001F78  6FD8               	movwf	216,b	;volatile
 46514  001F7A  0E01               	movlw	1
 46515  001F7C  6FD7               	movwf	215,b	;volatile
 46516                           
 46517                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 46518  001F7E  0E00               	movlw	0
 46519  001F80  6FCF               	movwf	207,b	;volatile
 46520  001F82  0E01               	movlw	1
 46521  001F84  6FCE               	movwf	206,b	;volatile
 46522                           
 46523                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 46524  001F86  0E1C               	movlw	28
 46525  001F88  6FDF               	movwf	223,b	;volatile
 46526                           
 46527                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 46528  001F8A  0E3D               	movlw	61
 46529  001F8C  6FDE               	movwf	222,b	;volatile
 46530                           
 46531                           ; BSR set to: 59
 46532                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 46533  001F8E  0139               	movlb	57	; () banked
 46534  001F90  97A5               	bcf	165,3,b	;volatile
 46535                           
 46536                           ; BSR set to: 57
 46537                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 46538  001F92  95A5               	bcf	165,2,b	;volatile
 46539                           
 46540                           ; BSR set to: 57
 46541                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 46542  001F94  9BA5               	bcf	165,5,b	;volatile
 46543                           
 46544                           ; BSR set to: 57
 46545                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 46546  001F96  99A5               	bcf	165,4,b	;volatile
 46547                           
 46548                           ; BSR set to: 57
 46549                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 46550  001F98  9795               	bcf	149,3,b	;volatile
 46551                           
 46552                           ; BSR set to: 57
 46553                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 46554  001F9A  9595               	bcf	149,2,b	;volatile
 46555                           
 46556                           ; BSR set to: 57
 46557                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 46558  001F9C  9B95               	bcf	149,5,b	;volatile
 46559                           
 46560                           ; BSR set to: 57
 46561                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 46562  001F9E  9995               	bcf	149,4,b	;volatile
 46563  001FA0  9ED2               	bcf	16338,7,c	;# 
 46564  001FA2  0139               	banksel	14831	;# 
 46565  001FA4  0E55               	movlw	85	;# 
 46566  001FA6  6FEF               	movwf	14831,b	;# 
 46567  001FA8  0EAA               	movlw	170	;# 
 46568  001FAA  6FEF               	movwf	14831,b	;# 
 46569  001FAC  81EF               	bsf	14831,0,b	;# 
 46570  001FAE  8ED2               	bsf	16338,7,c	;# 
 46571                           
 46572                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 46573  001FB0  013B               	movlb	59	; () banked
 46574  001FB2  6BDC               	clrf	220,b	;volatile
 46575                           
 46576                           ; BSR set to: 59
 46577                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46578  001FB4  0012               	return		;funcret
 46579  001FB6                     __end_of_DMA2_Initialize:
 46580                           	opt callstack 0
 46581                           
 46582 ;; *************** function _DMA1_Initialize *****************
 46583 ;; Defined at:
 46584 ;;		line 86 in file "mcc_generated_files/dma1.c"
 46585 ;; Parameters:    Size  Location     Type
 46586 ;;		None
 46587 ;; Auto vars:     Size  Location     Type
 46588 ;;		None
 46589 ;; Return value:  Size  Location     Type
 46590 ;;                  1  [STACK] void 
 46591 ;; Registers used:
 46592 ;;		wreg, status,2
 46593 ;; Tracked objects:
 46594 ;;		On entry : 3F/3B
 46595 ;;		On exit  : 3F/3B
 46596 ;;		Unchanged: 0/0
 46597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46602 ;;Total ram usage:        0 bytes
 46603 ;; Hardware stack levels used:    1
 46604 ;; Hardware stack levels required when called:   15
 46605 ;; This function calls:
 46606 ;;		Nothing
 46607 ;; This function is called by:
 46608 ;;		_SYSTEM_Initialize
 46609 ;; This function uses a reentrant model
 46610 ;;
 46611                           
 46612                           	psect	text181
 46613  0019EA                     __ptext181:
 46614                           	opt callstack 0
 46615  0019EA                     _DMA1_Initialize:
 46616                           	opt callstack 14
 46617                           
 46618                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 46619                           
 46620                           ; BSR set to: 59
 46621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46622                           ;incstack = 0
 46623  0019EA  0E00               	movlw	0
 46624  0019EC  013B               	movlb	59	; () banked
 46625  0019EE  6FF9               	movwf	249,b	;volatile
 46626  0019F0  0E10               	movlw	16
 46627  0019F2  6FFA               	movwf	250,b	;volatile
 46628  0019F4  0E00               	movlw	0
 46629  0019F6  6FFB               	movwf	251,b	;volatile
 46630                           
 46631                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 46632  0019F8  0E3D               	movlw	61
 46633  0019FA  6FF1               	movwf	241,b	;volatile
 46634  0019FC  0E11               	movlw	17
 46635  0019FE  6FF0               	movwf	240,b	;volatile
 46636                           
 46637                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 46638  001A00  0E03               	movlw	3
 46639  001A02  6FFD               	movwf	253,b	;volatile
 46640                           
 46641                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 46642  001A04  0E00               	movlw	0
 46643  001A06  6FF8               	movwf	248,b	;volatile
 46644  001A08  0E01               	movlw	1
 46645  001A0A  6FF7               	movwf	247,b	;volatile
 46646                           
 46647                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 46648  001A0C  0E00               	movlw	0
 46649  001A0E  6FEF               	movwf	239,b	;volatile
 46650  001A10  0E01               	movlw	1
 46651  001A12  6FEE               	movwf	238,b	;volatile
 46652                           
 46653                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 46654  001A14  0E15               	movlw	21
 46655  001A16  6FFF               	movwf	255,b	;volatile
 46656                           
 46657                           ; BSR set to: 59
 46658                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 46659  001A18  6BFE               	clrf	254,b	;volatile
 46660                           
 46661                           ; BSR set to: 59
 46662                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 46663  001A1A  0139               	movlb	57	; () banked
 46664  001A1C  93A2               	bcf	162,1,b	;volatile
 46665                           
 46666                           ; BSR set to: 57
 46667                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 46668  001A1E  91A2               	bcf	162,0,b	;volatile
 46669                           
 46670                           ; BSR set to: 57
 46671                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 46672  001A20  97A2               	bcf	162,3,b	;volatile
 46673                           
 46674                           ; BSR set to: 57
 46675                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 46676  001A22  95A2               	bcf	162,2,b	;volatile
 46677                           
 46678                           ; BSR set to: 57
 46679                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 46680  001A24  8392               	bsf	146,1,b	;volatile
 46681                           
 46682                           ; BSR set to: 57
 46683                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 46684  001A26  8192               	bsf	146,0,b	;volatile
 46685                           
 46686                           ; BSR set to: 57
 46687                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 46688  001A28  8792               	bsf	146,3,b	;volatile
 46689                           
 46690                           ; BSR set to: 57
 46691                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 46692  001A2A  8592               	bsf	146,2,b	;volatile
 46693                           
 46694                           ; BSR set to: 57
 46695                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 46696  001A2C  6BF1               	clrf	241,b	;volatile
 46697                           
 46698                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 46699  001A2E  0E01               	movlw	1
 46700  001A30  6FF2               	movwf	242,b	;volatile
 46701                           
 46702                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 46703  001A32  0E04               	movlw	4
 46704  001A34  6FF3               	movwf	243,b	;volatile
 46705                           
 46706                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 46707  001A36  0E02               	movlw	2
 46708  001A38  6FF4               	movwf	244,b	;volatile
 46709                           
 46710                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 46711  001A3A  0E03               	movlw	3
 46712  001A3C  6FF7               	movwf	247,b	;volatile
 46713  001A3E  9ED2               	bcf	16338,7,c	;# 
 46714  001A40  0139               	banksel	14831	;# 
 46715  001A42  0E55               	movlw	85	;# 
 46716  001A44  6FEF               	movwf	14831,b	;# 
 46717  001A46  0EAA               	movlw	170	;# 
 46718  001A48  6FEF               	movwf	14831,b	;# 
 46719  001A4A  81EF               	bsf	14831,0,b	;# 
 46720  001A4C  8ED2               	bsf	16338,7,c	;# 
 46721                           
 46722                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 46723  001A4E  013B               	movlb	59	; () banked
 46724  001A50  6BFC               	clrf	252,b	;volatile
 46725                           
 46726                           ; BSR set to: 59
 46727                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46728  001A52  0012               	return		;funcret
 46729  001A54                     __end_of_DMA1_Initialize:
 46730                           	opt callstack 0
 46731                           
 46732 ;; *************** function _CRC_Initialize *****************
 46733 ;; Defined at:
 46734 ;;		line 76 in file "mcc_generated_files/crc.c"
 46735 ;; Parameters:    Size  Location     Type
 46736 ;;		None
 46737 ;; Auto vars:     Size  Location     Type
 46738 ;;  seed            2  [STACK] unsigned short 
 46739 ;;  poly            2  [STACK] unsigned short 
 46740 ;; Return value:  Size  Location     Type
 46741 ;;                  1  [STACK] void 
 46742 ;; Registers used:
 46743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 46744 ;; Tracked objects:
 46745 ;;		On entry : 0/39
 46746 ;;		On exit  : 3F/0
 46747 ;;		Unchanged: 0/0
 46748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46753 ;;Total ram usage:        0 bytes
 46754 ;; Hardware stack levels used:    1
 46755 ;; Hardware stack levels required when called:   15
 46756 ;; This function calls:
 46757 ;;		Nothing
 46758 ;; This function is called by:
 46759 ;;		_SYSTEM_Initialize
 46760 ;;		_read_cal_data
 46761 ;;		_write_cal_data
 46762 ;; This function uses a reentrant model
 46763 ;;
 46764                           
 46765                           	psect	text182
 46766  0014E6                     __ptext182:
 46767                           	opt callstack 0
 46768  0014E6                     _CRC_Initialize:
 46769                           	opt callstack 0
 46770                           
 46771                           ; BSR set to: 59
 46772                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46773  0014E6  52E6               	movf	postinc1,f,c
 46774  0014E8  52E6               	movf	postinc1,f,c
 46775  0014EA  52E6               	movf	postinc1,f,c
 46776  0014EC  52E6               	movf	postinc1,f,c
 46777                           
 46778                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 46779                           
 46780                           ;incstack = 0
 46781  0014EE  0E80               	movlw	128
 46782  0014F0  0139               	movlb	57	; () banked
 46783  0014F2  6F68               	movwf	104,b	;volatile
 46784                           
 46785                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 46786  0014F4  0E07               	movlw	7
 46787  0014F6  6F69               	movwf	105,b	;volatile
 46788                           
 46789                           ; BSR set to: 57
 46790                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 46791  0014F8  6B62               	clrf	98,b	;volatile
 46792                           
 46793                           ; BSR set to: 57
 46794                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 46795  0014FA  6B63               	clrf	99,b	;volatile
 46796                           
 46797                           ; BSR set to: 57
 46798                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 46799  0014FC  6B7C               	clrf	124,b	;volatile
 46800                           
 46801                           ; BSR set to: 57
 46802                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 46803  0014FE  6B78               	clrf	120,b	;volatile
 46804                           
 46805                           ; BSR set to: 57
 46806                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 46807  001500  6B77               	clrf	119,b	;volatile
 46808                           
 46809                           ; BSR set to: 57
 46810                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 46811  001502  6B76               	clrf	118,b	;volatile
 46812                           
 46813                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 46814  001504  0E3F               	movlw	63
 46815  001506  6F7B               	movwf	123,b	;volatile
 46816                           
 46817                           ; BSR set to: 57
 46818                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 46819  001508  697A               	setf	122,b	;volatile
 46820                           
 46821                           ; BSR set to: 57
 46822                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 46823  00150A  6979               	setf	121,b	;volatile
 46824                           
 46825                           ; BSR set to: 57
 46826                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 46827  00150C  6B7D               	clrf	125,b	;volatile
 46828                           
 46829                           ; BSR set to: 57
 46830                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 46831  00150E  0ED5               	movlw	213
 46832  001510  6E34               	movwf	(btemp+10)^0,c
 46833  001512  0E00               	movlw	0
 46834  001514  6E35               	movwf	(btemp+11)^0,c
 46835                           
 46836                           ;stkvar	_poly @ sp[(-4)+2]
 46837  001516  0EFE               	movlw	-2
 46838  001518  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 46839  00151E  0EFF               	movlw	-1
 46840  001520  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46841                           
 46842                           ; BSR set to: 57
 46843                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 46844                           ;stkvar	_poly @ sp[(-4)+2]
 46845  001526  0EFF               	movlw	255
 46846  001528  24E1               	addwf	fsr1l,w,c
 46847  00152A  6ED9               	movwf	fsr2l,c
 46848  00152C  0EFF               	movlw	255
 46849  00152E  20E2               	addwfc	fsr1h,w,c
 46850  001530  6EDA               	movwf	fsr2h,c
 46851  001532  50DF               	movf	indf2,w,c
 46852  001534  6F67               	movwf	103,b	;volatile
 46853                           
 46854                           ; BSR set to: 57
 46855                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 46856  001536  0ED5               	movlw	213
 46857  001538  6F66               	movwf	102,b	;volatile
 46858                           
 46859                           ; BSR set to: 57
 46860                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 46861                           ;stkvar	_seed @ sp[(-4)+0]
 46862  00153A  0EFC               	movlw	-4
 46863  00153C  6AE3               	clrf	plusw1,c
 46864  00153E  0EFD               	movlw	-3
 46865  001540  6AE3               	clrf	plusw1,c
 46866                           
 46867                           ; BSR set to: 57
 46868                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 46869                           ;stkvar	_seed @ sp[(-4)+0]
 46870  001542  0EFD               	movlw	253
 46871  001544  24E1               	addwf	fsr1l,w,c
 46872  001546  6ED9               	movwf	fsr2l,c
 46873  001548  0EFF               	movlw	255
 46874  00154A  20E2               	addwfc	fsr1h,w,c
 46875  00154C  6EDA               	movwf	fsr2h,c
 46876  00154E  50DF               	movf	indf2,w,c
 46877  001550  6F63               	movwf	99,b	;volatile
 46878                           
 46879                           ; BSR set to: 57
 46880                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 46881  001552  6B62               	clrf	98,b	;volatile
 46882                           
 46883                           ; BSR set to: 57
 46884                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 46885  001554  3969               	swapf	105,w,b	;volatile
 46886  001556  0B0F               	andlw	15
 46887  001558  6E35               	movwf	(btemp+11)^0,c
 46888  00155A  2835               	incf	(btemp+11)^0,w,c
 46889  00155C  0100               	movlb	0	; () banked
 46890  00155E  6FE2               	movwf	_crcObj& (0+255),b
 46891                           
 46892                           ; BSR set to: 0
 46893                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 46894  001560  0139               	movlb	57	; () banked
 46895  001562  5169               	movf	105,w,b	;volatile
 46896  001564  0B0F               	andlw	15
 46897  001566  6E35               	movwf	(btemp+11)^0,c
 46898  001568  2835               	incf	(btemp+11)^0,w,c
 46899  00156A  0100               	movlb	0	; () banked
 46900  00156C  6FE3               	movwf	(_crcObj+1)& (0+255),b
 46901                           
 46902                           ; BSR set to: 0
 46903                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46904  00156E  52E5               	movf	postdec1,f,c
 46905  001570  52E5               	movf	postdec1,f,c
 46906  001572  52E5               	movf	postdec1,f,c
 46907  001574  52E5               	movf	postdec1,f,c
 46908  001576  0012               	return		;funcret
 46909  001578                     __end_of_CRC_Initialize:
 46910                           	opt callstack 0
 46911                           
 46912 ;; *************** function _CLKREF_Initialize *****************
 46913 ;; Defined at:
 46914 ;;		line 58 in file "mcc_generated_files/clkref.c"
 46915 ;; Parameters:    Size  Location     Type
 46916 ;;		None
 46917 ;; Auto vars:     Size  Location     Type
 46918 ;;		None
 46919 ;; Return value:  Size  Location     Type
 46920 ;;                  1  [STACK] void 
 46921 ;; Registers used:
 46922 ;;		wreg, status,2
 46923 ;; Tracked objects:
 46924 ;;		On entry : 3F/3B
 46925 ;;		On exit  : 3F/3C
 46926 ;;		Unchanged: 0/0
 46927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46932 ;;Total ram usage:        0 bytes
 46933 ;; Hardware stack levels used:    1
 46934 ;; Hardware stack levels required when called:   15
 46935 ;; This function calls:
 46936 ;;		Nothing
 46937 ;; This function is called by:
 46938 ;;		_SYSTEM_Initialize
 46939 ;; This function uses a reentrant model
 46940 ;;
 46941                           
 46942                           	psect	text183
 46943  002F6E                     __ptext183:
 46944                           	opt callstack 0
 46945  002F6E                     _CLKREF_Initialize:
 46946                           	opt callstack 14
 46947                           
 46948                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 46949                           
 46950                           ; BSR set to: 0
 46951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46952                           ;incstack = 0
 46953  002F6E  013C               	movlb	60	; () banked
 46954  002F70  6BE6               	clrf	230,b	;volatile
 46955                           
 46956                           ; BSR set to: 60
 46957                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 46958  002F72  0E94               	movlw	148
 46959  002F74  6FE5               	movwf	229,b	;volatile
 46960                           
 46961                           ; BSR set to: 60
 46962                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46963  002F76  0012               	return		;funcret
 46964  002F78                     __end_of_CLKREF_Initialize:
 46965                           	opt callstack 0
 46966                           
 46967 ;; *************** function _ADCC_Initialize *****************
 46968 ;; Defined at:
 46969 ;;		line 65 in file "mcc_generated_files/adcc.c"
 46970 ;; Parameters:    Size  Location     Type
 46971 ;;		None
 46972 ;; Auto vars:     Size  Location     Type
 46973 ;;		None
 46974 ;; Return value:  Size  Location     Type
 46975 ;;                  1  [STACK] void 
 46976 ;; Registers used:
 46977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 46978 ;; Tracked objects:
 46979 ;;		On entry : 3F/0
 46980 ;;		On exit  : 0/0
 46981 ;;		Unchanged: 0/0
 46982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46987 ;;Total ram usage:        0 bytes
 46988 ;; Hardware stack levels used:    1
 46989 ;; Hardware stack levels required when called:   16
 46990 ;; This function calls:
 46991 ;;		_ADCC_SetADIInterruptHandler
 46992 ;;		_ADCC_SetADTIInterruptHandler
 46993 ;; This function is called by:
 46994 ;;		_SYSTEM_Initialize
 46995 ;; This function uses a reentrant model
 46996 ;;
 46997                           
 46998                           	psect	text184
 46999  001A54                     __ptext184:
 47000                           	opt callstack 0
 47001  001A54                     _ADCC_Initialize:
 47002                           	opt callstack 13
 47003                           
 47004                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 47005                           
 47006                           ; BSR set to: 60
 47007                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47008                           ;incstack = 0
 47009  001A54  013E               	movlb	62	; () banked
 47010  001A56  6BDE               	clrf	222,b	;volatile
 47011                           
 47012                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 47013  001A58  6BDF               	clrf	223,b	;volatile
 47014                           
 47015                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 47016  001A5A  6BE0               	clrf	224,b	;volatile
 47017                           
 47018                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 47019  001A5C  6BE1               	clrf	225,b	;volatile
 47020                           
 47021                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 47022  001A5E  6BE4               	clrf	228,b	;volatile
 47023                           
 47024                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 47025  001A60  6BE5               	clrf	229,b	;volatile
 47026                           
 47027                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 47028  001A62  6BEA               	clrf	234,b	;volatile
 47029                           
 47030                           ; BSR set to: 62
 47031                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 47032  001A64  0E40               	movlw	64
 47033  001A66  6FEC               	movwf	236,b	;volatile
 47034                           
 47035                           ; BSR set to: 62
 47036                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 47037  001A68  6BF1               	clrf	241,b	;volatile
 47038                           
 47039                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 47040  001A6A  0E20               	movlw	32
 47041  001A6C  6FF3               	movwf	243,b	;volatile
 47042                           
 47043                           ; BSR set to: 62
 47044                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 47045  001A6E  6BF4               	clrf	244,b	;volatile
 47046                           
 47047                           ; BSR set to: 62
 47048                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 47049  001A70  6BF5               	clrf	245,b	;volatile
 47050                           
 47051                           ; BSR set to: 62
 47052                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 47053  001A72  6BF6               	clrf	246,b	;volatile
 47054                           
 47055                           ; BSR set to: 62
 47056                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 47057  001A74  6BF7               	clrf	247,b	;volatile
 47058                           
 47059                           ; BSR set to: 62
 47060                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 47061  001A76  6BF9               	clrf	249,b	;volatile
 47062                           
 47063                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 47064  001A78  0E5B               	movlw	91
 47065  001A7A  6FFA               	movwf	250,b	;volatile
 47066                           
 47067                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 47068  001A7C  0E27               	movlw	39
 47069  001A7E  6FFB               	movwf	251,b	;volatile
 47070                           
 47071                           ; BSR set to: 62
 47072                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 47073  001A80  6BFC               	clrf	252,b	;volatile
 47074                           
 47075                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 47076  001A82  0E02               	movlw	2
 47077  001A84  6FFD               	movwf	253,b	;volatile
 47078                           
 47079                           ; BSR set to: 62
 47080                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 47081  001A86  6BFE               	clrf	254,b	;volatile
 47082                           
 47083                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 47084  001A88  0E07               	movlw	7
 47085  001A8A  6FFF               	movwf	255,b	;volatile
 47086                           
 47087                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 47088  001A8C  0E84               	movlw	132
 47089  001A8E  6FF8               	movwf	248,b	;volatile
 47090                           
 47091                           ; BSR set to: 62
 47092                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 47093  001A90  0139               	movlb	57	; () banked
 47094  001A92  95A1               	bcf	161,2,b	;volatile
 47095                           
 47096                           ; BSR set to: 57
 47097                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 47098  001A94  8591               	bsf	145,2,b	;volatile
 47099                           
 47100                           ; BSR set to: 57
 47101                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 47102  001A96  0E00               	movlw	low _ADCC_DefaultInterruptHandler
 47103  001A98  6EE6               	movwf	postinc1,c
 47104  001A9A  0E30               	movlw	high _ADCC_DefaultInterruptHandler
 47105  001A9C  6EE6               	movwf	postinc1,c
 47106  001A9E  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 47107  001AA0  6EE6               	movwf	postinc1,c
 47108  001AA2  EC9D  F015         	call	_ADCC_SetADIInterruptHandler	;wreg free
 47109                           
 47110                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 47111  001AA6  0139               	movlb	57	; () banked
 47112  001AA8  97A1               	bcf	161,3,b	;volatile
 47113                           
 47114                           ; BSR set to: 57
 47115                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 47116  001AAA  8791               	bsf	145,3,b	;volatile
 47117                           
 47118                           ; BSR set to: 57
 47119                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 47120  001AAC  0E00               	movlw	low _ADCC_DefaultInterruptHandler
 47121  001AAE  6EE6               	movwf	postinc1,c
 47122  001AB0  0E30               	movlw	high _ADCC_DefaultInterruptHandler
 47123  001AB2  6EE6               	movwf	postinc1,c
 47124  001AB4  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 47125  001AB6  6EE6               	movwf	postinc1,c
 47126  001AB8  EC89  F015         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 47127                           
 47128                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 47129  001ABC  0012               	return		;funcret
 47130  001ABE                     __end_of_ADCC_Initialize:
 47131                           	opt callstack 0
 47132                           
 47133 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 47134 ;; Defined at:
 47135 ;;		line 336 in file "mcc_generated_files/adcc.c"
 47136 ;; Parameters:    Size  Location     Type
 47137 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 47138 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 47139 ;; Auto vars:     Size  Location     Type
 47140 ;;		None
 47141 ;; Return value:  Size  Location     Type
 47142 ;;                  1  [STACK] void 
 47143 ;; Registers used:
 47144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 47145 ;; Tracked objects:
 47146 ;;		On entry : 0/1
 47147 ;;		On exit  : 0/0
 47148 ;;		Unchanged: 0/0
 47149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47154 ;;Total ram usage:        0 bytes
 47155 ;; Hardware stack levels used:    1
 47156 ;; Hardware stack levels required when called:   15
 47157 ;; This function calls:
 47158 ;;		Nothing
 47159 ;; This function is called by:
 47160 ;;		_ADCC_Initialize
 47161 ;;		_start_adc_scan
 47162 ;; This function uses a reentrant model
 47163 ;;
 47164                           
 47165                           	psect	text185
 47166  002B12                     __ptext185:
 47167                           	opt callstack 0
 47168  002B12                     _ADCC_SetADTIInterruptHandler:
 47169                           	opt callstack 14
 47170                           
 47171                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 47172                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 47173                           
 47174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47175                           ;incstack = 0
 47176  002B12  50E1               	movf	fsr1l,w,c
 47177  002B14  0FFD               	addlw	-3
 47178  002B16  6ED9               	movwf	fsr2l,c
 47179  002B18  50E2               	movf	fsr1h,w,c
 47180  002B1A  6EDA               	movwf	fsr2h,c
 47181  002B1C  0EFF               	movlw	255
 47182  002B1E  22DA               	addwfc	fsr2h,f,c
 47183  002B20  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 47184  002B26  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 47185  002B2C  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 47186                           
 47187                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 47188  002B32  52E5               	movf	postdec1,f,c
 47189  002B34  52E5               	movf	postdec1,f,c
 47190  002B36  52E5               	movf	postdec1,f,c
 47191  002B38  0012               	return		;funcret
 47192  002B3A                     __end_of_ADCC_SetADTIInterruptHandler:
 47193                           	opt callstack 0
 47194                           
 47195 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 47196 ;; Defined at:
 47197 ;;		line 323 in file "mcc_generated_files/adcc.c"
 47198 ;; Parameters:    Size  Location     Type
 47199 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 47200 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 47201 ;; Auto vars:     Size  Location     Type
 47202 ;;		None
 47203 ;; Return value:  Size  Location     Type
 47204 ;;                  1  [STACK] void 
 47205 ;; Registers used:
 47206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 47207 ;; Tracked objects:
 47208 ;;		On entry : 7/1
 47209 ;;		On exit  : 0/0
 47210 ;;		Unchanged: 0/0
 47211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47216 ;;Total ram usage:        0 bytes
 47217 ;; Hardware stack levels used:    1
 47218 ;; Hardware stack levels required when called:   15
 47219 ;; This function calls:
 47220 ;;		Nothing
 47221 ;; This function is called by:
 47222 ;;		_ADCC_Initialize
 47223 ;;		_start_adc_scan
 47224 ;; This function uses a reentrant model
 47225 ;;
 47226                           
 47227                           	psect	text186
 47228  002B3A                     __ptext186:
 47229                           	opt callstack 0
 47230  002B3A                     _ADCC_SetADIInterruptHandler:
 47231                           	opt callstack 14
 47232                           
 47233                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 47234                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 47235                           
 47236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47237                           ;incstack = 0
 47238  002B3A  50E1               	movf	fsr1l,w,c
 47239  002B3C  0FFD               	addlw	-3
 47240  002B3E  6ED9               	movwf	fsr2l,c
 47241  002B40  50E2               	movf	fsr1h,w,c
 47242  002B42  6EDA               	movwf	fsr2h,c
 47243  002B44  0EFF               	movlw	255
 47244  002B46  22DA               	addwfc	fsr2h,f,c
 47245  002B48  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 47246  002B4E  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 47247  002B54  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 47248                           
 47249                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 47250  002B5A  52E5               	movf	postdec1,f,c
 47251  002B5C  52E5               	movf	postdec1,f,c
 47252  002B5E  52E5               	movf	postdec1,f,c
 47253  002B60  0012               	return		;funcret
 47254  002B62                     __end_of_ADCC_SetADIInterruptHandler:
 47255                           	opt callstack 0
 47256                           
 47257 ;; *************** function _INT1_ISR *****************
 47258 ;; Defined at:
 47259 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 47260 ;; Parameters:    Size  Location     Type
 47261 ;;		None
 47262 ;; Auto vars:     Size  Location     Type
 47263 ;;		None
 47264 ;; Return value:  Size  Location     Type
 47265 ;;                  1    wreg      void 
 47266 ;; Registers used:
 47267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 47268 ;; Tracked objects:
 47269 ;;		On entry : 0/0
 47270 ;;		On exit  : 0/0
 47271 ;;		Unchanged: 0/0
 47272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47277 ;;Total ram usage:        4 bytes
 47278 ;; Hardware stack levels used:    1
 47279 ;; Hardware stack levels required when called:    5
 47280 ;; This function calls:
 47281 ;;		_INT1_CallBack
 47282 ;; This function is called by:
 47283 ;;		Interrupt level 1
 47284 ;; This function uses a non-reentrant model
 47285 ;;
 47286                           
 47287                           	psect	text187
 47288  002554                     __ptext187:
 47289                           	opt callstack 0
 47290  002554                     _INT1_ISR:
 47291                           	opt callstack 12
 47292                           
 47293                           ;incstack = 0
 47294  002554  006F FF60  F007    	movff	status,??_INT1_ISR
 47295  00255A  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 47296  002560  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 47297  002566  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 47298  00256C  EE16  F196         	lfsr	1,___intlo_sp
 47299                           
 47300                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 47301  002570  0139               	movlb	57	; () banked
 47302  002572  91A5               	bcf	165,0,b	;volatile
 47303                           
 47304                           ; BSR set to: 57
 47305                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 47306  002574  EC00  F016         	call	_INT1_CallBack	;wreg free
 47307  002578  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 47308  00257E  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 47309  002584  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 47310  00258A  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 47311  002590  0011               	retfie		f
 47312  002592                     __end_of_INT1_ISR:
 47313                           	opt callstack 0
 47314                           
 47315 ;; *************** function _INT1_CallBack *****************
 47316 ;; Defined at:
 47317 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 47318 ;; Parameters:    Size  Location     Type
 47319 ;;		None
 47320 ;; Auto vars:     Size  Location     Type
 47321 ;;		None
 47322 ;; Return value:  Size  Location     Type
 47323 ;;                  1  [STACK] void 
 47324 ;; Registers used:
 47325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 47326 ;; Tracked objects:
 47327 ;;		On entry : 3F/39
 47328 ;;		On exit  : 0/0
 47329 ;;		Unchanged: 0/0
 47330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47335 ;;Total ram usage:        0 bytes
 47336 ;; Hardware stack levels used:    1
 47337 ;; Hardware stack levels required when called:    4
 47338 ;; This function calls:
 47339 ;;		Absolute function
 47340 ;;		_INT1_DefaultInterruptHandler
 47341 ;;		_switch_handler
 47342 ;; This function is called by:
 47343 ;;		_INT1_ISR
 47344 ;; This function uses a reentrant model
 47345 ;;
 47346                           
 47347                           	psect	text188
 47348  002C00                     __ptext188:
 47349                           	opt callstack 0
 47350  002C00                     _INT1_CallBack:
 47351                           	opt callstack 12
 47352                           
 47353                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 47354                           
 47355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47356                           ;incstack = 0
 47357  002C00  0100               	movlb	0	; () banked
 47358  002C02  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47359  002C04  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47360  002C06  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47361  002C08  B4D8               	btfsc	status,2,c
 47362  002C0A  0012               	return	
 47363                           
 47364                           ; BSR set to: 0
 47365                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 47366  002C0C  D801               	call	u1327_28
 47367  002C0E  0012               	return	
 47368  002C10                     u1327_28:
 47369  002C10  0005               	push	
 47370  002C12  6EFA               	movwf	pclath,c
 47371  002C14  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47372  002C16  6EFD               	movwf	tosl,c
 47373  002C18  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47374  002C1A  6EFE               	movwf	tosh,c
 47375  002C1C  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47376  002C1E  6EFF               	movwf	tosu,c
 47377  002C20  50FA               	movf	pclath,w,c
 47378  002C22  0012               	return		;indir
 47379  002C24                     __end_of_INT1_CallBack:
 47380                           	opt callstack 0
 47381                           
 47382 ;; *************** function _INT1_DefaultInterruptHandler *****************
 47383 ;; Defined at:
 47384 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 47385 ;; Parameters:    Size  Location     Type
 47386 ;;		None
 47387 ;; Auto vars:     Size  Location     Type
 47388 ;;		None
 47389 ;; Return value:  Size  Location     Type
 47390 ;;                  1  [STACK] void 
 47391 ;; Registers used:
 47392 ;;		None
 47393 ;; Tracked objects:
 47394 ;;		On entry : 3F/0
 47395 ;;		On exit  : 0/0
 47396 ;;		Unchanged: 0/0
 47397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47402 ;;Total ram usage:        0 bytes
 47403 ;; Hardware stack levels used:    1
 47404 ;; Hardware stack levels required when called:    3
 47405 ;; This function calls:
 47406 ;;		Nothing
 47407 ;; This function is called by:
 47408 ;;		_EXT_INT_Initialize
 47409 ;;		_INT1_CallBack
 47410 ;; This function uses a reentrant model
 47411 ;;
 47412                           
 47413                           	psect	text189
 47414  002FFA                     __ptext189:
 47415                           	opt callstack 0
 47416  002FFA                     _INT1_DefaultInterruptHandler:
 47417                           	opt callstack 12
 47418                           
 47419                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47420                           
 47421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47422                           ;incstack = 0
 47423  002FFA  0012               	return		;funcret
 47424  002FFC                     __end_of_INT1_DefaultInterruptHandler:
 47425                           	opt callstack 0
 47426                           
 47427 ;; *************** function _switch_handler *****************
 47428 ;; Defined at:
 47429 ;;		line 58 in file "dio.c"
 47430 ;; Parameters:    Size  Location     Type
 47431 ;;		None
 47432 ;; Auto vars:     Size  Location     Type
 47433 ;;  i               1  [STACK] unsigned char 
 47434 ;;  sw_value        1  [STACK] unsigned char 
 47435 ;; Return value:  Size  Location     Type
 47436 ;;                  1  [STACK] void 
 47437 ;; Registers used:
 47438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 47439 ;; Tracked objects:
 47440 ;;		On entry : 3F/0
 47441 ;;		On exit  : 0/0
 47442 ;;		Unchanged: 0/0
 47443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47448 ;;Total ram usage:        0 bytes
 47449 ;; Hardware stack levels used:    1
 47450 ;; Hardware stack levels required when called:    3
 47451 ;; This function calls:
 47452 ;;		Nothing
 47453 ;; This function is called by:
 47454 ;;		_start_switch_handler
 47455 ;;		_INT1_CallBack
 47456 ;; This function uses a reentrant model
 47457 ;;
 47458                           
 47459                           	psect	text190
 47460  01F5F6                     __ptext190:
 47461                           	opt callstack 0
 47462  01F5F6                     _switch_handler:
 47463                           	opt callstack 0
 47464                           
 47465                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47466  01F5F6  52E6               	movf	postinc1,f,c
 47467  01F5F8  52E6               	movf	postinc1,f,c
 47468                           
 47469                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 47470                           ;stkvar	_i @ sp[(-2)+0]
 47471                           
 47472                           ;incstack = 0
 47473  01F5FA  0EFE               	movlw	-2
 47474  01F5FC  6AE3               	clrf	plusw1,c
 47475  01F5FE  9ABF               	bcf	191,5,c	;volatile
 47476                           
 47477                           ;dio.c: 72:  __nop();
 47478  01F600  F000               	nop	
 47479                           
 47480                           ;dio.c: 73:  __nop();
 47481  01F602  F000               	nop	
 47482                           
 47483                           ;dio.c: 74:  __nop();
 47484  01F604  F000               	nop	
 47485                           
 47486                           ;dio.c: 75:  __nop();
 47487  01F606  F000               	nop	
 47488                           
 47489                           ;dio.c: 76:  __nop();
 47490  01F608  F000               	nop	
 47491                           
 47492                           ;dio.c: 77:  __nop();
 47493  01F60A  F000               	nop	
 47494  01F60C  D016               	goto	l13867
 47495  01F60E                     l13853:
 47496                           
 47497                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 47498  01F60E  A6CF               	btfss	207,3,c	;volatile
 47499  01F610  D00E               	goto	u1293_20
 47500  01F612  D00A               	goto	u1293_21
 47501  01F614                     u1291_28:
 47502                           
 47503                           ;stkvar	_sw_value @ sp[(-2)+1]
 47504  01F614  0EFF               	movlw	-1
 47505  01F616  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47506                           
 47507                           ;dio.c: 83:    break;
 47508  01F61C  D027               	goto	l13869
 47509  01F61E                     l13855:
 47510                           
 47511                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 47512  01F61E  A4CF               	btfss	207,2,c	;volatile
 47513  01F620  D006               	goto	u1293_20
 47514  01F622  D002               	goto	u1293_21
 47515  01F624                     l13857:
 47516                           
 47517                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 47518  01F624  A6CD               	btfss	205,3,c	;volatile
 47519  01F626  D003               	goto	u1293_20
 47520  01F628                     u1293_21:
 47521  01F628  6A35               	clrf	(btemp+11)^0,c
 47522  01F62A  2A35               	incf	(btemp+11)^0,f,c
 47523  01F62C  D7F3               	goto	u1291_28
 47524  01F62E                     u1293_20:
 47525  01F62E  6A35               	clrf	(btemp+11)^0,c
 47526  01F630  D7F1               	goto	u1291_28
 47527  01F632                     l13859:
 47528                           
 47529                           ;dio.c: 91:    sw_value = 1;
 47530                           ;stkvar	_sw_value @ sp[(-2)+1]
 47531  01F632  0EFF               	movlw	-1
 47532  01F634  6AE3               	clrf	plusw1,c
 47533  01F636  2AE3               	incf	plusw1,f,c
 47534                           
 47535                           ;dio.c: 92:    break;
 47536  01F638  D019               	goto	l13869
 47537  01F63A                     l13867:
 47538                           
 47539                           ;stkvar	_i @ sp[(-2)+0]
 47540  01F63A  0EFE               	movlw	-2
 47541  01F63C  50E3               	movf	plusw1,w,c
 47542  01F63E  6E34               	movwf	(btemp+10)^0,c
 47543  01F640  6A35               	clrf	(btemp+11)^0,c
 47544                           
 47545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 47546                           ; Switch size 1, requested type "simple"
 47547                           ; Number of cases is 1, Range of values is 0 to 0
 47548                           ; switch strategies available:
 47549                           ; Name         Instructions Cycles
 47550                           ; simple_byte            4     3 (average)
 47551                           ;	Chosen strategy is simple_byte
 47552  01F642  5035               	movf	(btemp+11)^0,w,c
 47553  01F644  0A00               	xorlw	0	; case 0
 47554  01F646  A4D8               	btfss	status,2,c
 47555  01F648  D7F4               	goto	l13859
 47556                           
 47557                           ; Switch size 1, requested type "simple"
 47558                           ; Number of cases is 5, Range of values is 0 to 4
 47559                           ; switch strategies available:
 47560                           ; Name         Instructions Cycles
 47561                           ; simple_byte           16     9 (average)
 47562                           ;	Chosen strategy is simple_byte
 47563  01F64A  5034               	movf	(btemp+10)^0,w,c
 47564  01F64C  0A00               	xorlw	0	; case 0
 47565  01F64E  B4D8               	btfsc	status,2,c
 47566  01F650  D7F0               	goto	l13859
 47567  01F652  0A01               	xorlw	1	; case 1
 47568  01F654  B4D8               	btfsc	status,2,c
 47569  01F656  D7ED               	goto	l13859
 47570  01F658  0A03               	xorlw	3	; case 2
 47571  01F65A  B4D8               	btfsc	status,2,c
 47572  01F65C  D7E0               	goto	l13855
 47573  01F65E  0A01               	xorlw	1	; case 3
 47574  01F660  B4D8               	btfsc	status,2,c
 47575  01F662  D7D5               	goto	l13853
 47576  01F664  0A07               	xorlw	7	; case 4
 47577  01F666  B4D8               	btfsc	status,2,c
 47578  01F668  D7DD               	goto	l13857
 47579  01F66A  D7E3               	goto	l13859
 47580  01F66C                     l13869:
 47581                           
 47582                           ;dio.c: 102:   if (sw_value) {
 47583                           ;stkvar	_sw_value @ sp[(-2)+1]
 47584  01F66C  0EFF               	movlw	-1
 47585  01F66E  50E3               	movf	plusw1,w,c
 47586  01F670  B4D8               	btfsc	status,2,c
 47587  01F672  D018               	goto	l13875
 47588                           
 47589                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 47590                           ;stkvar	_i @ sp[(-2)+0]
 47591  01F674  0EFE               	movlw	-2
 47592  01F676  50E3               	movf	plusw1,w,c
 47593  01F678  0D05               	mullw	5
 47594  01F67A  0EA4               	movlw	low _S
 47595  01F67C  24F3               	addwf	243,w,c
 47596  01F67E  6ED9               	movwf	fsr2l,c
 47597  01F680  0E01               	movlw	high _S
 47598  01F682  20F4               	addwfc	prodh,w,c
 47599  01F684  6EDA               	movwf	fsr2h,c
 47600  01F686  04DE               	decf	postinc2,w,c
 47601  01F688  A4D8               	btfss	status,2,c
 47602  01F68A  D049               	goto	l13883
 47603                           
 47604                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 47605                           ;stkvar	_i @ sp[(-2)+0]
 47606  01F68C  0EFE               	movlw	-2
 47607  01F68E  50E3               	movf	plusw1,w,c
 47608  01F690  0D05               	mullw	5
 47609  01F692  0EA4               	movlw	low _S
 47610  01F694  24F3               	addwf	243,w,c
 47611  01F696  6ED9               	movwf	fsr2l,c
 47612  01F698  0E01               	movlw	high _S
 47613  01F69A  20F4               	addwfc	prodh,w,c
 47614  01F69C  6EDA               	movwf	fsr2h,c
 47615  01F69E  0E00               	movlw	0
 47616  01F6A0  6EDF               	movwf	indf2,c
 47617  01F6A2  D03D               	goto	l13883
 47618  01F6A4                     l13875:
 47619                           
 47620                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 47621                           ;stkvar	_i @ sp[(-2)+0]
 47622  01F6A4  0EFE               	movlw	-2
 47623  01F6A6  50E3               	movf	plusw1,w,c
 47624  01F6A8  0D05               	mullw	5
 47625  01F6AA  0EA4               	movlw	low _S
 47626  01F6AC  24F3               	addwf	243,w,c
 47627  01F6AE  6ED9               	movwf	fsr2l,c
 47628  01F6B0  0E01               	movlw	high _S
 47629  01F6B2  20F4               	addwfc	prodh,w,c
 47630  01F6B4  6EDA               	movwf	fsr2h,c
 47631  01F6B6  50DF               	movf	indf2,w,c
 47632  01F6B8  A4D8               	btfss	status,2,c
 47633  01F6BA  D031               	goto	l13883
 47634                           
 47635                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 47636                           ;stkvar	_i @ sp[(-2)+0]
 47637  01F6BC  0EFE               	movlw	-2
 47638  01F6BE  50E3               	movf	plusw1,w,c
 47639  01F6C0  0D05               	mullw	5
 47640  01F6C2  0EA4               	movlw	low _S
 47641  01F6C4  24F3               	addwf	243,w,c
 47642  01F6C6  6ED9               	movwf	fsr2l,c
 47643  01F6C8  0E01               	movlw	high _S
 47644  01F6CA  20F4               	addwfc	prodh,w,c
 47645  01F6CC  6EDA               	movwf	fsr2h,c
 47646  01F6CE  0E01               	movlw	1
 47647  01F6D0  6EDF               	movwf	indf2,c
 47648                           
 47649                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 47650  01F6D2  EE20  F2B8         	lfsr	2,_V+177	;volatile
 47651                           
 47652                           ;stkvar	_i @ sp[(-2)+0]
 47653  01F6D6  0EFE               	movlw	-2
 47654  01F6D8  50E3               	movf	plusw1,w,c
 47655  01F6DA  0D05               	mullw	5
 47656  01F6DC  0EA5               	movlw	low (_S+1)
 47657  01F6DE  24F3               	addwf	243,w,c
 47658  01F6E0  6EE9               	movwf	fsr0l,c
 47659  01F6E2  0E01               	movlw	high (_S+1)
 47660  01F6E4  20F4               	addwfc	prodh,w,c
 47661  01F6E6  6EEA               	movwf	fsr0h,c
 47662  01F6E8  006F FF7B FFEE     	movff	postinc2,postinc0
 47663  01F6EE  006F FF7B FFEE     	movff	postinc2,postinc0
 47664  01F6F4  006F FF7B FFEE     	movff	postinc2,postinc0
 47665  01F6FA  006F FF7B FFEE     	movff	postinc2,postinc0
 47666                           
 47667                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 47668                           ;stkvar	_i @ sp[(-2)+0]
 47669  01F700  0EFE               	movlw	-2
 47670  01F702  006F FF8C  F035    	movff	plusw1,btemp+11
 47671  01F708  0E01               	movlw	1
 47672  01F70A  6E34               	movwf	(btemp+10)^0,c
 47673  01F70C  2A35               	incf	(btemp+11)^0,f,c
 47674  01F70E  D002               	goto	u1297_24
 47675  01F710                     u1297_25:
 47676  01F710  90D8               	bcf	status,0,c
 47677  01F712  3634               	rlcf	(btemp+10)^0,f,c
 47678  01F714                     u1297_24:
 47679  01F714  2E35               	decfsz	(btemp+11)^0,f,c
 47680  01F716  D7FC               	goto	u1297_25
 47681  01F718  5034               	movf	(btemp+10)^0,w,c
 47682  01F71A  0101               	movlb	1	; () banked
 47683  01F71C  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 47684  01F71E                     l13883:
 47685                           
 47686                           ;dio.c: 113:  } while (++i < 6);
 47687                           ;stkvar	_i @ sp[(-2)+0]
 47688  01F71E  0EFE               	movlw	-2
 47689  01F720  2AE3               	incf	plusw1,f,c
 47690  01F722  0EFE               	movlw	-2
 47691  01F724  006F FF8C  F02A    	movff	plusw1,btemp
 47692  01F72A  0E05               	movlw	5
 47693  01F72C  642A               	cpfsgt	btemp^0,c
 47694  01F72E  D785               	goto	l13867
 47695                           
 47696                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 47697  01F730  8ABF               	bsf	191,5,c	;volatile
 47698                           
 47699                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47700  01F732  52E5               	movf	postdec1,f,c
 47701  01F734  52E5               	movf	postdec1,f,c
 47702  01F736  0012               	return		;funcret
 47703  01F738                     __end_of_switch_handler:
 47704                           	opt callstack 0
 47705                           
 47706 ;; *************** function _TMR5_ISR *****************
 47707 ;; Defined at:
 47708 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 47709 ;; Parameters:    Size  Location     Type
 47710 ;;		None
 47711 ;; Auto vars:     Size  Location     Type
 47712 ;;		None
 47713 ;; Return value:  Size  Location     Type
 47714 ;;                  1    wreg      void 
 47715 ;; Registers used:
 47716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47717 ;; Tracked objects:
 47718 ;;		On entry : 0/0
 47719 ;;		On exit  : 3F/0
 47720 ;;		Unchanged: 0/0
 47721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47724 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47725 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47726 ;;Total ram usage:       31 bytes
 47727 ;; Hardware stack levels used:    1
 47728 ;; Hardware stack levels required when called:    9
 47729 ;; This function calls:
 47730 ;;		_TMR5_CallBack
 47731 ;;		_TMR5_WriteTimer
 47732 ;; This function is called by:
 47733 ;;		Interrupt level 1
 47734 ;; This function uses a non-reentrant model
 47735 ;;
 47736                           
 47737                           	psect	text191
 47738  01E028                     __ptext191:
 47739                           	opt callstack 0
 47740  01E028                     _TMR5_ISR:
 47741                           	opt callstack 8
 47742                           
 47743                           ;incstack = 0
 47744  01E028  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 47745  01E02E  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 47746  01E034  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 47747  01E03A  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 47748  01E040  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 47749  01E046  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 47750  01E04C  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 47751  01E052  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 47752  01E058  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 47753  01E05E  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 47754  01E064  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 47755  01E06A  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 47756  01E070  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 47757  01E076  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 47758  01E07C  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 47759  01E082  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 47760  01E088  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 47761  01E08E  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 47762  01E094  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 47763  01E09A  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 47764  01E0A0  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 47765  01E0A6  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 47766  01E0AC  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 47767  01E0B2  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 47768  01E0B8  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 47769  01E0BE  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 47770  01E0C4  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 47771  01E0CA  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 47772  01E0D0  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 47773  01E0D6  EE16  F196         	lfsr	1,___intlo_sp
 47774                           
 47775                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 47776  01E0DA  0139               	movlb	57	; () banked
 47777  01E0DC  9DA8               	bcf	168,6,b	;volatile
 47778                           
 47779                           ; BSR set to: 57
 47780                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 47781  01E0DE  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 47782  01E0E4  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 47783  01E0EA  EC69  F012         	call	_TMR5_WriteTimer	;wreg free
 47784                           
 47785                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 47786  01E0EE  0102               	movlb	2	; () banked
 47787  01E0F0  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 47788  01E0F2  6E0B               	movwf	??_TMR5_ISR^0,c
 47789  01E0F4  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 47790  01E0F6  0E05               	movlw	5
 47791  01E0F8  260B               	addwf	??_TMR5_ISR^0,f,c
 47792  01E0FA  0E00               	movlw	0
 47793  01E0FC  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 47794  01E0FE  0100               	movlb	0	; () banked
 47795  01E100  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 47796  01E102  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47797  01E104  500B               	movf	??_TMR5_ISR^0,w,c
 47798  01E106  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 47799  01E108  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 47800  01E10A  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47801  01E10C  A0D8               	btfss	status,0,c
 47802  01E10E  D005               	goto	i1l1021
 47803                           
 47804                           ; BSR set to: 0
 47805                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 47806  01E110  EC12  F016         	call	_TMR5_CallBack	;wreg free
 47807                           
 47808                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 47809  01E114  0100               	movlb	0	; () banked
 47810  01E116  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 47811  01E118  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 47812  01E11A                     i1l1021:
 47813                           
 47814                           ; BSR set to: 0
 47815  01E11A  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 47816  01E120  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 47817  01E126  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 47818  01E12C  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 47819  01E132  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 47820  01E138  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 47821  01E13E  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 47822  01E144  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 47823  01E14A  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 47824  01E150  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 47825  01E156  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 47826  01E15C  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 47827  01E162  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 47828  01E168  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 47829  01E16E  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 47830  01E174  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 47831  01E17A  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 47832  01E180  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 47833  01E186  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 47834  01E18C  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 47835  01E192  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 47836  01E198  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 47837  01E19E  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 47838  01E1A4  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 47839  01E1AA  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 47840  01E1B0  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 47841  01E1B6  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 47842  01E1BC  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 47843  01E1C2  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 47844  01E1C8  0011               	retfie		f
 47845  01E1CA                     __end_of_TMR5_ISR:
 47846                           	opt callstack 0
 47847                           
 47848 ;; *************** function _TMR5_WriteTimer *****************
 47849 ;; Defined at:
 47850 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 47851 ;; Parameters:    Size  Location     Type
 47852 ;;  timerVal        2  [STACK] unsigned short 
 47853 ;; Auto vars:     Size  Location     Type
 47854 ;;		None
 47855 ;; Return value:  Size  Location     Type
 47856 ;;                  1  [STACK] void 
 47857 ;; Registers used:
 47858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47859 ;; Tracked objects:
 47860 ;;		On entry : 3F/39
 47861 ;;		On exit  : 0/0
 47862 ;;		Unchanged: 0/0
 47863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47868 ;;Total ram usage:        0 bytes
 47869 ;; Hardware stack levels used:    1
 47870 ;; Hardware stack levels required when called:    3
 47871 ;; This function calls:
 47872 ;;		Nothing
 47873 ;; This function is called by:
 47874 ;;		_TMR5_ISR
 47875 ;; This function uses a reentrant model
 47876 ;;
 47877                           
 47878                           	psect	text192
 47879  0024D2                     __ptext192:
 47880                           	opt callstack 0
 47881  0024D2                     _TMR5_WriteTimer:
 47882                           	opt callstack 13
 47883                           
 47884                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 47885                           
 47886                           ; BSR set to: 0
 47887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47888                           ;incstack = 0
 47889  0024D2  A49A               	btfss	154,2,c	;volatile
 47890  0024D4  D00F               	goto	l14095
 47891                           
 47892                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 47893  0024D6  909A               	bcf	154,0,c	;volatile
 47894                           
 47895                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 47896                           ;stkvar	_timerVal @ sp[(0)+-2]
 47897  0024D8  0EFF               	movlw	255
 47898  0024DA  24E1               	addwf	fsr1l,w,c
 47899  0024DC  6ED9               	movwf	fsr2l,c
 47900  0024DE  0EFF               	movlw	255
 47901  0024E0  20E2               	addwfc	fsr1h,w,c
 47902  0024E2  6EDA               	movwf	fsr2h,c
 47903  0024E4  50DF               	movf	indf2,w,c
 47904  0024E6  6E99               	movwf	153,c	;volatile
 47905                           
 47906                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 47907                           ;stkvar	_timerVal @ sp[(0)+-2]
 47908  0024E8  0EFE               	movlw	-2
 47909  0024EA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47910                           
 47911                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 47912  0024F0  809A               	bsf	154,0,c	;volatile
 47913                           
 47914                           ;mcc_generated_files/tmr5.c: 144:  } else {
 47915  0024F2  D00C               	goto	l1004
 47916  0024F4                     l14095:
 47917                           
 47918                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 47919                           ;stkvar	_timerVal @ sp[(0)+-2]
 47920  0024F4  0EFF               	movlw	255
 47921  0024F6  24E1               	addwf	fsr1l,w,c
 47922  0024F8  6ED9               	movwf	fsr2l,c
 47923  0024FA  0EFF               	movlw	255
 47924  0024FC  20E2               	addwfc	fsr1h,w,c
 47925  0024FE  6EDA               	movwf	fsr2h,c
 47926  002500  50DF               	movf	indf2,w,c
 47927  002502  6E99               	movwf	153,c	;volatile
 47928                           
 47929                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 47930                           ;stkvar	_timerVal @ sp[(0)+-2]
 47931  002504  0EFE               	movlw	-2
 47932  002506  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47933  00250C                     l1004:
 47934                           
 47935                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47936  00250C  52E5               	movf	postdec1,f,c
 47937  00250E  52E5               	movf	postdec1,f,c
 47938  002510  0012               	return		;funcret
 47939  002512                     __end_of_TMR5_WriteTimer:
 47940                           	opt callstack 0
 47941                           
 47942 ;; *************** function _TMR5_CallBack *****************
 47943 ;; Defined at:
 47944 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 47945 ;; Parameters:    Size  Location     Type
 47946 ;;		None
 47947 ;; Auto vars:     Size  Location     Type
 47948 ;;		None
 47949 ;; Return value:  Size  Location     Type
 47950 ;;                  1  [STACK] void 
 47951 ;; Registers used:
 47952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47953 ;; Tracked objects:
 47954 ;;		On entry : 3F/0
 47955 ;;		On exit  : 0/0
 47956 ;;		Unchanged: 0/0
 47957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47962 ;;Total ram usage:        0 bytes
 47963 ;; Hardware stack levels used:    1
 47964 ;; Hardware stack levels required when called:    8
 47965 ;; This function calls:
 47966 ;;		Absolute function
 47967 ;;		_TMR5_DefaultInterruptHandler
 47968 ;; This function is called by:
 47969 ;;		_TMR5_ISR
 47970 ;; This function uses a reentrant model
 47971 ;;
 47972                           
 47973                           	psect	text193
 47974  002C24                     __ptext193:
 47975                           	opt callstack 0
 47976  002C24                     _TMR5_CallBack:
 47977                           	opt callstack 8
 47978                           
 47979                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 47980                           
 47981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47982                           ;incstack = 0
 47983  002C24  0100               	movlb	0	; () banked
 47984  002C26  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47985  002C28  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47986  002C2A  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47987  002C2C  B4D8               	btfsc	status,2,c
 47988  002C2E  0012               	return	
 47989                           
 47990                           ; BSR set to: 0
 47991                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 47992  002C30  D801               	call	u1336_28
 47993  002C32  0012               	return	
 47994  002C34                     u1336_28:
 47995  002C34  0005               	push	
 47996  002C36  6EFA               	movwf	pclath,c
 47997  002C38  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47998  002C3A  6EFD               	movwf	tosl,c
 47999  002C3C  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 48000  002C3E  6EFE               	movwf	tosh,c
 48001  002C40  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 48002  002C42  6EFF               	movwf	tosu,c
 48003  002C44  50FA               	movf	pclath,w,c
 48004  002C46  0012               	return		;indir
 48005  002C48                     __end_of_TMR5_CallBack:
 48006                           	opt callstack 0
 48007                           
 48008 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 48009 ;; Defined at:
 48010 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 48011 ;; Parameters:    Size  Location     Type
 48012 ;;		None
 48013 ;; Auto vars:     Size  Location     Type
 48014 ;;		None
 48015 ;; Return value:  Size  Location     Type
 48016 ;;                  1  [STACK] void 
 48017 ;; Registers used:
 48018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 48019 ;; Tracked objects:
 48020 ;;		On entry : 3F/0
 48021 ;;		On exit  : 0/0
 48022 ;;		Unchanged: 0/0
 48023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48028 ;;Total ram usage:        0 bytes
 48029 ;; Hardware stack levels used:    1
 48030 ;; Hardware stack levels required when called:    7
 48031 ;; This function calls:
 48032 ;;		_check_day_time
 48033 ;; This function is called by:
 48034 ;;		_TMR5_Initialize
 48035 ;;		_TMR5_CallBack
 48036 ;; This function uses a reentrant model
 48037 ;;
 48038                           
 48039                           	psect	text194
 48040  002640                     __ptext194:
 48041                           	opt callstack 0
 48042  002640                     _TMR5_DefaultInterruptHandler:
 48043                           	opt callstack 8
 48044                           
 48045                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 48046                           
 48047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48048                           ;incstack = 0
 48049  002640  A0BE               	btfss	190,0,c	;volatile
 48050  002642  D002               	goto	u1257_20
 48051  002644  0E01               	movlw	1
 48052  002646  D001               	goto	u1257_26
 48053  002648                     u1257_20:
 48054  002648  0E00               	movlw	0
 48055  00264A                     u1257_26:
 48056  00264A  0AFF               	xorlw	255
 48057  00264C  6E35               	movwf	(btemp+11)^0,c
 48058  00264E  50BE               	movf	190,w,c	;volatile
 48059  002650  1835               	xorwf	(btemp+11)^0,w,c
 48060  002652  0BFE               	andlw	-2
 48061  002654  1835               	xorwf	(btemp+11)^0,w,c
 48062  002656  6EBE               	movwf	190,c	;volatile
 48063                           
 48064                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 48065  002658  0E01               	movlw	1
 48066  00265A  0102               	movlb	2	; () banked
 48067  00265C  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 48068  00265E  0E00               	movlw	0
 48069  002660  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 48070  002662  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 48071  002664  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 48072                           
 48073                           ; BSR set to: 2
 48074                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 48075  002666  0E01               	movlw	1
 48076  002668  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 48077  00266A  0E00               	movlw	0
 48078  00266C  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 48079  00266E  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 48080  002670  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 48081                           
 48082                           ; BSR set to: 2
 48083                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 48084  002672  ECA8  F0D1         	call	_check_day_time	;wreg free
 48085                           
 48086                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48087  002676  0012               	return		;funcret
 48088  002678                     __end_of_TMR5_DefaultInterruptHandler:
 48089                           	opt callstack 0
 48090                           
 48091 ;; *************** function _check_day_time *****************
 48092 ;; Defined at:
 48093 ;;		line 167 in file "mbmc.c"
 48094 ;; Parameters:    Size  Location     Type
 48095 ;;		None
 48096 ;; Auto vars:     Size  Location     Type
 48097 ;;  light           4  [STACK] float 
 48098 ;; Return value:  Size  Location     Type
 48099 ;;                  1  [STACK] _Bool 
 48100 ;; Registers used:
 48101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 48102 ;; Tracked objects:
 48103 ;;		On entry : 3F/2
 48104 ;;		On exit  : 0/0
 48105 ;;		Unchanged: 0/0
 48106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48111 ;;Total ram usage:        0 bytes
 48112 ;; Hardware stack levels used:    1
 48113 ;; Hardware stack levels required when called:    6
 48114 ;; This function calls:
 48115 ;;		___flge
 48116 ;;		_conv_raw_result
 48117 ;;		_get_ac_charger_relay
 48118 ;;		_set_ac_charger_relay
 48119 ;;		_time
 48120 ;; This function is called by:
 48121 ;;		_TMR5_DefaultInterruptHandler
 48122 ;; This function uses a reentrant model
 48123 ;;
 48124                           
 48125                           	psect	text195
 48126  01A350                     __ptext195:
 48127                           	opt callstack 0
 48128  01A350                     _check_day_time:
 48129                           	opt callstack 0
 48130                           
 48131                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48132  01A350  52E6               	movf	postinc1,f,c
 48133  01A352  52E6               	movf	postinc1,f,c
 48134  01A354  52E6               	movf	postinc1,f,c
 48135  01A356  52E6               	movf	postinc1,f,c
 48136                           
 48137                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 48138                           
 48139                           ;incstack = 0
 48140  01A358  0E00               	movlw	0
 48141  01A35A  6EE6               	movwf	postinc1,c
 48142  01A35C  0E0D               	movlw	13
 48143  01A35E  6EE6               	movwf	postinc1,c
 48144  01A360  EC00  F0C9         	call	_conv_raw_result	;wreg free
 48145                           
 48146                           ;stkvar	_light @ sp[(-4)+0]
 48147  01A364  0EFC               	movlw	-4
 48148  01A366  0060  F0AB  FFE3   	movff	btemp,plusw1
 48149  01A36C  0EFD               	movlw	-3
 48150  01A36E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 48151  01A374  0EFE               	movlw	-2
 48152  01A376  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 48153  01A37C  0EFF               	movlw	-1
 48154  01A37E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 48155                           
 48156                           ;mbmc.c: 176:  if (C.day_update) {
 48157  01A384  EE22  F237         	lfsr	2,_C+312	;volatile
 48158  01A388  50DE               	movf	postinc2,w,c
 48159  01A38A  10DE               	iorwf	postinc2,w,c
 48160  01A38C  10DE               	iorwf	postinc2,w,c
 48161  01A38E  10DE               	iorwf	postinc2,w,c
 48162  01A390  B4D8               	btfsc	status,2,c
 48163  01A392  D068               	goto	l12807
 48164                           
 48165                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 48166  01A394  0062  F8DC  F032   	movff	_C+312,btemp+8	;volatile
 48167  01A39A  0062  F8E0  F033   	movff	_C+313,btemp+9	;volatile
 48168  01A3A0  0062  F8E4  F034   	movff	_C+314,btemp+10	;volatile
 48169  01A3A6  0062  F8E8  F035   	movff	_C+315,btemp+11	;volatile
 48170  01A3AC  5032               	movf	(btemp+8)^0,w,c
 48171  01A3AE  6E3A               	movwf	(btemp+16)^0,c
 48172  01A3B0  5033               	movf	(btemp+9)^0,w,c
 48173  01A3B2  6E3B               	movwf	(btemp+17)^0,c
 48174  01A3B4  5034               	movf	(btemp+10)^0,w,c
 48175  01A3B6  6E3C               	movwf	(btemp+18)^0,c
 48176  01A3B8  5035               	movf	(btemp+11)^0,w,c
 48177  01A3BA  6E3D               	movwf	(btemp+19)^0,c
 48178  01A3BC  6A3E               	clrf	(btemp+20)^0,c
 48179  01A3BE  6A3F               	clrf	(btemp+21)^0,c
 48180  01A3C0  6A40               	clrf	(btemp+22)^0,c
 48181  01A3C2  6A41               	clrf	(btemp+23)^0,c
 48182  01A3C4  0E00               	movlw	0
 48183  01A3C6  6EE6               	movwf	postinc1,c
 48184  01A3C8  0E00               	movlw	0
 48185  01A3CA  6EE6               	movwf	postinc1,c
 48186  01A3CC  EC25  F00F         	call	_time	;wreg free
 48187  01A3D0  52E5               	movf	postdec1,f,c
 48188  01A3D2  006F FF9C  F049    	movff	indf1,btemp+31
 48189  01A3D8  52E5               	movf	postdec1,f,c
 48190  01A3DA  006F FF9C  F048    	movff	indf1,btemp+30
 48191  01A3E0  52E5               	movf	postdec1,f,c
 48192  01A3E2  006F FF9C  F047    	movff	indf1,btemp+29
 48193  01A3E8  52E5               	movf	postdec1,f,c
 48194  01A3EA  006F FF9C  F046    	movff	indf1,btemp+28
 48195  01A3F0  52E5               	movf	postdec1,f,c
 48196  01A3F2  006F FF9C  F045    	movff	indf1,btemp+27
 48197  01A3F8  52E5               	movf	postdec1,f,c
 48198  01A3FA  006F FF9C  F044    	movff	indf1,btemp+26
 48199  01A400  52E5               	movf	postdec1,f,c
 48200  01A402  006F FF9C  F043    	movff	indf1,btemp+25
 48201  01A408  52E5               	movf	postdec1,f,c
 48202  01A40A  006F FF9C  F042    	movff	indf1,btemp+24
 48203  01A410  503A               	movf	(btemp+16)^0,w,c
 48204  01A412  5C42               	subwf	(btemp+24)^0,w,c
 48205  01A414  503B               	movf	(btemp+17)^0,w,c
 48206  01A416  5843               	subwfb	(btemp+25)^0,w,c
 48207  01A418  503C               	movf	(btemp+18)^0,w,c
 48208  01A41A  5844               	subwfb	(btemp+26)^0,w,c
 48209  01A41C  503D               	movf	(btemp+19)^0,w,c
 48210  01A41E  5845               	subwfb	(btemp+27)^0,w,c
 48211  01A420  503E               	movf	(btemp+20)^0,w,c
 48212  01A422  5846               	subwfb	(btemp+28)^0,w,c
 48213  01A424  503F               	movf	(btemp+21)^0,w,c
 48214  01A426  5847               	subwfb	(btemp+29)^0,w,c
 48215  01A428  5040               	movf	(btemp+22)^0,w,c
 48216  01A42A  5848               	subwfb	(btemp+30)^0,w,c
 48217  01A42C  5049               	movf	(btemp+31)^0,w,c
 48218  01A42E  0A80               	xorlw	128
 48219  01A430  6E2A               	movwf	btemp^0,c
 48220  01A432  5041               	movf	(btemp+23)^0,w,c
 48221  01A434  0A80               	xorlw	128
 48222  01A436  582A               	subwfb	btemp^0,w,c
 48223  01A438  A0D8               	btfss	status,0,c
 48224  01A43A  D014               	goto	l12807
 48225                           
 48226                           ; BSR set to: 57
 48227                           ;mbmc.c: 178:    C.day_update = 0;
 48228  01A43C  0E00               	movlw	0
 48229  01A43E  006F FFA0  FA37    	movff	wreg,_C+312	;volatile
 48230  01A444  0E00               	movlw	0
 48231  01A446  006F FFA0  FA38    	movff	wreg,_C+313	;volatile
 48232  01A44C  0E00               	movlw	0
 48233  01A44E  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 48234  01A454  0E00               	movlw	0
 48235  01A456  006F FFA0  FA3A    	movff	wreg,_C+315	;volatile
 48236                           
 48237                           ;mbmc.c: 179:    C.dupdate = 1;
 48238  01A45C  0E01               	movlw	1
 48239  01A45E  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
 48240  01A464                     l12807:
 48241                           
 48242                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 48243  01A464  2A51               	incf	check_day_time@day_delay^0,f,c
 48244  01A466  0451               	decf	check_day_time@day_delay^0,w,c
 48245  01A468  A4D8               	btfss	status,2,c
 48246  01A46A  D123               	goto	l2214
 48247  01A46C  0102               	movlb	2	; () banked
 48248  01A46E  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 48249  01A470  B4D8               	btfsc	status,2,c
 48250  01A472  D11F               	goto	l2214
 48251                           
 48252                           ; BSR set to: 2
 48253                           ;mbmc.c: 184:   if (C.soc > 3) {
 48254  01A474  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48255  01A478  0E01               	movlw	1
 48256  01A47A  50DB               	movf	plusw2,w,c
 48257  01A47C  E104               	bnz	u1222_20
 48258  01A47E  0E04               	movlw	4
 48259  01A480  5CDE               	subwf	postinc2,w,c
 48260  01A482  A0D8               	btfss	status,0,c
 48261  01A484  D0ED               	goto	l12841
 48262  01A486                     u1222_20:
 48263                           
 48264                           ; BSR set to: 2
 48265                           ;mbmc.c: 185:    if (!C.day) {
 48266  01A486  EE22  F22D         	lfsr	2,_C+302	;volatile
 48267  01A48A  50DF               	movf	indf2,w,c
 48268  01A48C  A4D8               	btfss	status,2,c
 48269  01A48E  D065               	goto	l12827
 48270                           
 48271                           ; BSR set to: 2
 48272                           ;mbmc.c: 186:     if (light > 22.0) {
 48273                           ;stkvar	_light @ sp[(-4)+0]
 48274  01A490  0EFC               	movlw	-4
 48275  01A492  006F FF8F FFE6     	movff	plusw1,postinc1
 48276  01A498  006F FF8F FFE6     	movff	plusw1,postinc1
 48277  01A49E  006F FF8F FFE6     	movff	plusw1,postinc1
 48278  01A4A4  006F FF8F FFE6     	movff	plusw1,postinc1
 48279  01A4AA  0E00               	movlw	0
 48280  01A4AC  6EE6               	movwf	postinc1,c
 48281  01A4AE  0E00               	movlw	0
 48282  01A4B0  6EE6               	movwf	postinc1,c
 48283  01A4B2  0EB0               	movlw	176
 48284  01A4B4  6EE6               	movwf	postinc1,c
 48285  01A4B6  0E41               	movlw	65
 48286  01A4B8  6EE6               	movwf	postinc1,c
 48287  01A4BA  ECE9  F0F6         	call	___flge	;wreg free
 48288  01A4BE  B02A               	btfsc	btemp& (0+255),0,c
 48289  01A4C0  D0F8               	goto	l2214
 48290                           
 48291                           ;mbmc.c: 187:      C.day = 1;
 48292  01A4C2  0E01               	movlw	1
 48293  01A4C4  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 48294                           
 48295                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 48296  01A4CA  0E00               	movlw	0
 48297  01A4CC  6EE6               	movwf	postinc1,c
 48298  01A4CE  0E00               	movlw	0
 48299  01A4D0  6EE6               	movwf	postinc1,c
 48300  01A4D2  EC25  F00F         	call	_time	;wreg free
 48301  01A4D6  52E5               	movf	postdec1,f,c
 48302  01A4D8  006F FF9C  F041    	movff	indf1,btemp+23
 48303  01A4DE  52E5               	movf	postdec1,f,c
 48304  01A4E0  006F FF9C  F040    	movff	indf1,btemp+22
 48305  01A4E6  52E5               	movf	postdec1,f,c
 48306  01A4E8  006F FF9C  F03F    	movff	indf1,btemp+21
 48307  01A4EE  52E5               	movf	postdec1,f,c
 48308  01A4F0  006F FF9C  F03E    	movff	indf1,btemp+20
 48309  01A4F6  52E5               	movf	postdec1,f,c
 48310  01A4F8  006F FF9C  F03D    	movff	indf1,btemp+19
 48311  01A4FE  52E5               	movf	postdec1,f,c
 48312  01A500  006F FF9C  F03C    	movff	indf1,btemp+18
 48313  01A506  52E5               	movf	postdec1,f,c
 48314  01A508  006F FF9C  F03B    	movff	indf1,btemp+17
 48315  01A50E  52E5               	movf	postdec1,f,c
 48316  01A510  006F FF9C  F03A    	movff	indf1,btemp+16
 48317  01A516  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48318  01A51C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48319  01A522  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48320  01A528  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48321  01A52E  0060  F0C8  FA2F   	movff	btemp+8,_C+304	;volatile
 48322  01A534  0060  F0CC  FA30   	movff	btemp+9,_C+305	;volatile
 48323  01A53A  0060  F0D0  FA31   	movff	btemp+10,_C+306	;volatile
 48324  01A540  0060  F0D4  FA32   	movff	btemp+11,_C+307	;volatile
 48325                           
 48326                           ; BSR set to: 57
 48327                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 48328  01A546  ECA0  F017         	call	_get_ac_charger_relay	;wreg free
 48329  01A54A  502A               	movf	btemp^0,w,c
 48330  01A54C  B4D8               	btfsc	status,2,c
 48331  01A54E  D0B5               	goto	l2210
 48332                           
 48333                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 48334  01A550  0E00               	movlw	0
 48335  01A552  6EE6               	movwf	postinc1,c
 48336  01A554  EC83  F017         	call	_set_ac_charger_relay	;wreg free
 48337  01A558  D0B0               	goto	l2210
 48338  01A55A                     l12827:
 48339                           
 48340                           ; BSR set to: 2
 48341                           ;mbmc.c: 195:     if (light < 12.0) {
 48342  01A55A  0E00               	movlw	0
 48343  01A55C  6EE6               	movwf	postinc1,c
 48344  01A55E  0E00               	movlw	0
 48345  01A560  6EE6               	movwf	postinc1,c
 48346  01A562  0E40               	movlw	64
 48347  01A564  6EE6               	movwf	postinc1,c
 48348  01A566  0E41               	movlw	65
 48349  01A568  6EE6               	movwf	postinc1,c
 48350                           
 48351                           ;stkvar	_light @ sp[(-8)+0]
 48352  01A56A  0EF8               	movlw	-8
 48353  01A56C  006F FF8F FFE6     	movff	plusw1,postinc1
 48354  01A572  006F FF8F FFE6     	movff	plusw1,postinc1
 48355  01A578  006F FF8F FFE6     	movff	plusw1,postinc1
 48356  01A57E  006F FF8F FFE6     	movff	plusw1,postinc1
 48357  01A584  ECE9  F0F6         	call	___flge	;wreg free
 48358  01A588  B02A               	btfsc	btemp& (0+255),0,c
 48359  01A58A  D093               	goto	l2214
 48360                           
 48361                           ;mbmc.c: 196:      C.day = 0;
 48362  01A58C  0E00               	movlw	0
 48363  01A58E  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 48364                           
 48365                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 48366  01A594  0E00               	movlw	0
 48367  01A596  6EE6               	movwf	postinc1,c
 48368  01A598  0E00               	movlw	0
 48369  01A59A  6EE6               	movwf	postinc1,c
 48370  01A59C  EC25  F00F         	call	_time	;wreg free
 48371  01A5A0  52E5               	movf	postdec1,f,c
 48372  01A5A2  006F FF9C  F041    	movff	indf1,btemp+23
 48373  01A5A8  52E5               	movf	postdec1,f,c
 48374  01A5AA  006F FF9C  F040    	movff	indf1,btemp+22
 48375  01A5B0  52E5               	movf	postdec1,f,c
 48376  01A5B2  006F FF9C  F03F    	movff	indf1,btemp+21
 48377  01A5B8  52E5               	movf	postdec1,f,c
 48378  01A5BA  006F FF9C  F03E    	movff	indf1,btemp+20
 48379  01A5C0  52E5               	movf	postdec1,f,c
 48380  01A5C2  006F FF9C  F03D    	movff	indf1,btemp+19
 48381  01A5C8  52E5               	movf	postdec1,f,c
 48382  01A5CA  006F FF9C  F03C    	movff	indf1,btemp+18
 48383  01A5D0  52E5               	movf	postdec1,f,c
 48384  01A5D2  006F FF9C  F03B    	movff	indf1,btemp+17
 48385  01A5D8  52E5               	movf	postdec1,f,c
 48386  01A5DA  006F FF9C  F03A    	movff	indf1,btemp+16
 48387  01A5E0  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48388  01A5E6  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48389  01A5EC  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48390  01A5F2  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48391  01A5F8  0060  F0C8  FA33   	movff	btemp+8,_C+308	;volatile
 48392  01A5FE  0060  F0CC  FA34   	movff	btemp+9,_C+309	;volatile
 48393  01A604  0060  F0D0  FA35   	movff	btemp+10,_C+310	;volatile
 48394  01A60A  0060  F0D4  FA36   	movff	btemp+11,_C+311	;volatile
 48395                           
 48396                           ; BSR set to: 57
 48397                           ;mbmc.c: 198:      C.day_update = C.day_end + 600;
 48398  01A610  EE22  F233         	lfsr	2,_C+308	;volatile
 48399  01A614  0E58               	movlw	88
 48400  01A616  24DE               	addwf	postinc2,w,c
 48401  01A618  6E32               	movwf	(btemp+8)^0,c
 48402  01A61A  0E02               	movlw	2
 48403  01A61C  20DE               	addwfc	postinc2,w,c
 48404  01A61E  6E33               	movwf	(btemp+9)^0,c
 48405  01A620  0E00               	movlw	0
 48406  01A622  20DE               	addwfc	postinc2,w,c
 48407  01A624  6E34               	movwf	(btemp+10)^0,c
 48408  01A626  0E00               	movlw	0
 48409  01A628  20DE               	addwfc	postinc2,w,c
 48410  01A62A  6E35               	movwf	(btemp+11)^0,c
 48411  01A62C  0060  F0C8  FA37   	movff	btemp+8,_C+312	;volatile
 48412  01A632  0060  F0CC  FA38   	movff	btemp+9,_C+313	;volatile
 48413  01A638  0060  F0D0  FA39   	movff	btemp+10,_C+314	;volatile
 48414  01A63E  0060  F0D4  FA3A   	movff	btemp+11,_C+315	;volatile
 48415                           
 48416                           ; BSR set to: 57
 48417                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 48418  01A644  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48419  01A648  0E01               	movlw	1
 48420  01A64A  50DB               	movf	plusw2,w,c
 48421  01A64C  E136               	bnz	l2210
 48422  01A64E  0E14               	movlw	20
 48423  01A650  5CDE               	subwf	postinc2,w,c
 48424  01A652  B0D8               	btfsc	status,0,c
 48425  01A654  D032               	goto	l2210
 48426                           
 48427                           ; BSR set to: 57
 48428                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 48429  01A656  0E01               	movlw	1
 48430  01A658  6EE6               	movwf	postinc1,c
 48431  01A65A  EC83  F017         	call	_set_ac_charger_relay	;wreg free
 48432  01A65E  D02D               	goto	l2210
 48433  01A660                     l12841:
 48434                           
 48435                           ; BSR set to: 2
 48436                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 48437  01A660  EE22  F177         	lfsr	2,_C+120	;volatile
 48438  01A664  006F FF7B FFE6     	movff	postinc2,postinc1
 48439  01A66A  006F FF7B FFE6     	movff	postinc2,postinc1
 48440  01A670  006F FF7B FFE6     	movff	postinc2,postinc1
 48441  01A676  006F FF7B FFE6     	movff	postinc2,postinc1
 48442  01A67C  EE22  F17B         	lfsr	2,_C+124	;volatile
 48443  01A680  006F FF7B FFE6     	movff	postinc2,postinc1
 48444  01A686  006F FF7B FFE6     	movff	postinc2,postinc1
 48445  01A68C  006F FF7B FFE6     	movff	postinc2,postinc1
 48446  01A692  006F FF7B FFE6     	movff	postinc2,postinc1
 48447  01A698  ECE9  F0F6         	call	___flge	;wreg free
 48448  01A69C  B02A               	btfsc	btemp& (0+255),0,c
 48449  01A69E  D009               	goto	l2214
 48450                           
 48451                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 48452  01A6A0  ECA0  F017         	call	_get_ac_charger_relay	;wreg free
 48453  01A6A4  502A               	movf	btemp^0,w,c
 48454  01A6A6  A4D8               	btfss	status,2,c
 48455  01A6A8  D004               	goto	l2214
 48456                           
 48457                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 48458  01A6AA  0E01               	movlw	1
 48459  01A6AC  6EE6               	movwf	postinc1,c
 48460  01A6AE  EC83  F017         	call	_set_ac_charger_relay	;wreg free
 48461  01A6B2                     l2214:
 48462                           
 48463                           ;mbmc.c: 216:  if (day_delay >= 240)
 48464  01A6B2  0EEF               	movlw	239
 48465  01A6B4  6451               	cpfsgt	check_day_time@day_delay^0,c
 48466  01A6B6  D001               	goto	l2210
 48467                           
 48468                           ;mbmc.c: 217:   day_delay = 0;
 48469  01A6B8  6A51               	clrf	check_day_time@day_delay^0,c
 48470  01A6BA                     l2210:
 48471                           
 48472                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 48473  01A6BA  52E5               	movf	postdec1,f,c
 48474  01A6BC  52E5               	movf	postdec1,f,c
 48475  01A6BE  52E5               	movf	postdec1,f,c
 48476  01A6C0  52E5               	movf	postdec1,f,c
 48477  01A6C2  0012               	return		;funcret
 48478  01A6C4                     __end_of_check_day_time:
 48479                           	opt callstack 0
 48480                           
 48481 ;; *************** function _set_ac_charger_relay *****************
 48482 ;; Defined at:
 48483 ;;		line 136 in file "mbmc.c"
 48484 ;; Parameters:    Size  Location     Type
 48485 ;;  mode            1  [STACK] const _Bool 
 48486 ;; Auto vars:     Size  Location     Type
 48487 ;;		None
 48488 ;; Return value:  Size  Location     Type
 48489 ;;                  1  [STACK] void 
 48490 ;; Registers used:
 48491 ;;		wreg, fsr1l, fsr1h
 48492 ;; Tracked objects:
 48493 ;;		On entry : 0/39
 48494 ;;		On exit  : 0/0
 48495 ;;		Unchanged: 0/0
 48496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48501 ;;Total ram usage:        0 bytes
 48502 ;; Hardware stack levels used:    1
 48503 ;; Hardware stack levels required when called:    3
 48504 ;; This function calls:
 48505 ;;		Nothing
 48506 ;; This function is called by:
 48507 ;;		_check_day_time
 48508 ;; This function uses a reentrant model
 48509 ;;
 48510                           
 48511                           	psect	text196
 48512  002F06                     __ptext196:
 48513                           	opt callstack 0
 48514  002F06                     _set_ac_charger_relay:
 48515                           	opt callstack 10
 48516                           
 48517                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 48518                           ;stkvar	_mode @ sp[(0)+-1]
 48519                           
 48520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48521                           ;incstack = 0
 48522  002F06  0EFF               	movlw	-1
 48523  002F08  B0E3               	btfsc	plusw1,0,c
 48524  002F0A  D002               	bra	u1182_25
 48525  002F0C  9CBD               	bcf	189,6,c	;volatile
 48526  002F0E  D001               	bra	u1182_26
 48527  002F10                     u1182_25:
 48528  002F10  8CBD               	bsf	189,6,c	;volatile
 48529  002F12                     u1182_26:
 48530                           
 48531                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 48532  002F12  52E5               	movf	postdec1,f,c
 48533  002F14  0012               	return		;funcret
 48534  002F16                     __end_of_set_ac_charger_relay:
 48535                           	opt callstack 0
 48536                           
 48537 ;; *************** function _get_ac_charger_relay *****************
 48538 ;; Defined at:
 48539 ;;		line 141 in file "mbmc.c"
 48540 ;; Parameters:    Size  Location     Type
 48541 ;;		None
 48542 ;; Auto vars:     Size  Location     Type
 48543 ;;		None
 48544 ;; Return value:  Size  Location     Type
 48545 ;;                  1  [STACK] _Bool 
 48546 ;; Registers used:
 48547 ;;		btemp
 48548 ;; Tracked objects:
 48549 ;;		On entry : 0/39
 48550 ;;		On exit  : 0/0
 48551 ;;		Unchanged: 0/0
 48552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48557 ;;Total ram usage:        0 bytes
 48558 ;; Hardware stack levels used:    1
 48559 ;; Hardware stack levels required when called:    3
 48560 ;; This function calls:
 48561 ;;		Nothing
 48562 ;; This function is called by:
 48563 ;;		_check_day_time
 48564 ;;		_calc_bsoc
 48565 ;; This function uses a reentrant model
 48566 ;;
 48567                           
 48568                           	psect	text197
 48569  002F40                     __ptext197:
 48570                           	opt callstack 0
 48571  002F40                     _get_ac_charger_relay:
 48572                           	opt callstack 11
 48573                           
 48574                           ;mbmc.c: 143:  return LATDbits.LATD6;
 48575                           
 48576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48577                           ;incstack = 0
 48578  002F40  ACBD               	btfss	189,6,c	;volatile
 48579  002F42  D003               	goto	u1246_20
 48580  002F44  6A2A               	clrf	btemp^0,c
 48581  002F46  2A2A               	incf	btemp^0,f,c
 48582  002F48  0012               	return	
 48583  002F4A                     u1246_20:
 48584  002F4A  6A2A               	clrf	btemp^0,c
 48585                           
 48586                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 48587  002F4C  0012               	return		;funcret
 48588  002F4E                     __end_of_get_ac_charger_relay:
 48589                           	opt callstack 0
 48590                           
 48591 ;; *************** function _TMR3_ISR *****************
 48592 ;; Defined at:
 48593 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 48594 ;; Parameters:    Size  Location     Type
 48595 ;;		None
 48596 ;; Auto vars:     Size  Location     Type
 48597 ;;		None
 48598 ;; Return value:  Size  Location     Type
 48599 ;;                  1    wreg      void 
 48600 ;; Registers used:
 48601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48602 ;; Tracked objects:
 48603 ;;		On entry : 0/0
 48604 ;;		On exit  : 3F/0
 48605 ;;		Unchanged: 0/0
 48606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48609 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48610 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48611 ;;Total ram usage:       25 bytes
 48612 ;; Hardware stack levels used:    1
 48613 ;; Hardware stack levels required when called:   14
 48614 ;; This function calls:
 48615 ;;		_TMR3_CallBack
 48616 ;;		_TMR3_WriteTimer
 48617 ;; This function is called by:
 48618 ;;		Interrupt level 1
 48619 ;; This function uses a non-reentrant model
 48620 ;;
 48621                           
 48622                           	psect	text198
 48623  01EF34                     __ptext198:
 48624                           	opt callstack 0
 48625  01EF34                     _TMR3_ISR:
 48626                           	opt callstack 3
 48627                           
 48628                           ;incstack = 0
 48629  01EF34  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 48630  01EF3A  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 48631  01EF40  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 48632  01EF46  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 48633  01EF4C  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 48634  01EF52  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 48635  01EF58  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 48636  01EF5E  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 48637  01EF64  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 48638  01EF6A  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 48639  01EF70  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 48640  01EF76  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 48641  01EF7C  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 48642  01EF82  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 48643  01EF88  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 48644  01EF8E  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 48645  01EF94  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 48646  01EF9A  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 48647  01EFA0  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 48648  01EFA6  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 48649  01EFAC  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 48650  01EFB2  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 48651  01EFB8  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 48652  01EFBE  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 48653  01EFC4  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 48654  01EFCA  EE16  F196         	lfsr	1,___intlo_sp
 48655                           
 48656                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 48657  01EFCE  0139               	movlb	57	; () banked
 48658  01EFD0  9DA6               	bcf	166,6,b	;volatile
 48659                           
 48660                           ; BSR set to: 57
 48661                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 48662  01EFD2  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 48663  01EFD8  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 48664  01EFDE  EC89  F012         	call	_TMR3_WriteTimer	;wreg free
 48665                           
 48666                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 48667  01EFE2  0100               	movlb	0	; () banked
 48668  01EFE4  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 48669  01EFE6  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 48670  01EFE8  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 48671  01EFEA  E104               	bnz	i1u1724_20
 48672  01EFEC  0E28               	movlw	40
 48673  01EFEE  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 48674  01EFF0  A0D8               	btfss	status,0,c
 48675  01EFF2  D005               	goto	i1l1209
 48676  01EFF4                     i1u1724_20:
 48677                           
 48678                           ; BSR set to: 0
 48679                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 48680  01EFF4  EC24  F016         	call	_TMR3_CallBack	;wreg free
 48681                           
 48682                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 48683  01EFF8  0100               	movlb	0	; () banked
 48684  01EFFA  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 48685  01EFFC  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 48686  01EFFE                     i1l1209:
 48687                           
 48688                           ; BSR set to: 0
 48689  01EFFE  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 48690  01F004  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 48691  01F00A  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 48692  01F010  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 48693  01F016  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 48694  01F01C  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 48695  01F022  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 48696  01F028  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 48697  01F02E  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 48698  01F034  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 48699  01F03A  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 48700  01F040  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 48701  01F046  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 48702  01F04C  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 48703  01F052  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 48704  01F058  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 48705  01F05E  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 48706  01F064  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 48707  01F06A  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 48708  01F070  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 48709  01F076  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 48710  01F07C  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 48711  01F082  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 48712  01F088  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 48713  01F08E  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 48714  01F094  0011               	retfie		f
 48715  01F096                     __end_of_TMR3_ISR:
 48716                           	opt callstack 0
 48717                           
 48718 ;; *************** function _TMR3_WriteTimer *****************
 48719 ;; Defined at:
 48720 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 48721 ;; Parameters:    Size  Location     Type
 48722 ;;  timerVal        2  [STACK] unsigned short 
 48723 ;; Auto vars:     Size  Location     Type
 48724 ;;		None
 48725 ;; Return value:  Size  Location     Type
 48726 ;;                  1  [STACK] void 
 48727 ;; Registers used:
 48728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 48729 ;; Tracked objects:
 48730 ;;		On entry : 3F/39
 48731 ;;		On exit  : 0/0
 48732 ;;		Unchanged: 0/0
 48733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48738 ;;Total ram usage:        0 bytes
 48739 ;; Hardware stack levels used:    1
 48740 ;; Hardware stack levels required when called:    3
 48741 ;; This function calls:
 48742 ;;		Nothing
 48743 ;; This function is called by:
 48744 ;;		_TMR3_ISR
 48745 ;; This function uses a reentrant model
 48746 ;;
 48747                           
 48748                           	psect	text199
 48749  002512                     __ptext199:
 48750                           	opt callstack 0
 48751  002512                     _TMR3_WriteTimer:
 48752                           	opt callstack 13
 48753                           
 48754                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 48755                           
 48756                           ; BSR set to: 0
 48757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48758                           ;incstack = 0
 48759  002512  A4A6               	btfss	166,2,c	;volatile
 48760  002514  D00F               	goto	l14113
 48761                           
 48762                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 48763  002516  90A6               	bcf	166,0,c	;volatile
 48764                           
 48765                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 48766                           ;stkvar	_timerVal @ sp[(0)+-2]
 48767  002518  0EFF               	movlw	255
 48768  00251A  24E1               	addwf	fsr1l,w,c
 48769  00251C  6ED9               	movwf	fsr2l,c
 48770  00251E  0EFF               	movlw	255
 48771  002520  20E2               	addwfc	fsr1h,w,c
 48772  002522  6EDA               	movwf	fsr2h,c
 48773  002524  50DF               	movf	indf2,w,c
 48774  002526  6EA5               	movwf	165,c	;volatile
 48775                           
 48776                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 48777                           ;stkvar	_timerVal @ sp[(0)+-2]
 48778  002528  0EFE               	movlw	-2
 48779  00252A  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48780                           
 48781                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 48782  002530  80A6               	bsf	166,0,c	;volatile
 48783                           
 48784                           ;mcc_generated_files/tmr3.c: 141:     }
 48785  002532  D00C               	goto	l1192
 48786  002534                     l14113:
 48787                           
 48788                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 48789                           ;stkvar	_timerVal @ sp[(0)+-2]
 48790  002534  0EFF               	movlw	255
 48791  002536  24E1               	addwf	fsr1l,w,c
 48792  002538  6ED9               	movwf	fsr2l,c
 48793  00253A  0EFF               	movlw	255
 48794  00253C  20E2               	addwfc	fsr1h,w,c
 48795  00253E  6EDA               	movwf	fsr2h,c
 48796  002540  50DF               	movf	indf2,w,c
 48797  002542  6EA5               	movwf	165,c	;volatile
 48798                           
 48799                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 48800                           ;stkvar	_timerVal @ sp[(0)+-2]
 48801  002544  0EFE               	movlw	-2
 48802  002546  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48803  00254C                     l1192:
 48804                           
 48805                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 48806  00254C  52E5               	movf	postdec1,f,c
 48807  00254E  52E5               	movf	postdec1,f,c
 48808  002550  0012               	return		;funcret
 48809  002552                     __end_of_TMR3_WriteTimer:
 48810                           	opt callstack 0
 48811                           
 48812 ;; *************** function _TMR3_CallBack *****************
 48813 ;; Defined at:
 48814 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 48815 ;; Parameters:    Size  Location     Type
 48816 ;;		None
 48817 ;; Auto vars:     Size  Location     Type
 48818 ;;		None
 48819 ;; Return value:  Size  Location     Type
 48820 ;;                  1  [STACK] void 
 48821 ;; Registers used:
 48822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48823 ;; Tracked objects:
 48824 ;;		On entry : 3F/0
 48825 ;;		On exit  : 0/0
 48826 ;;		Unchanged: 0/0
 48827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48832 ;;Total ram usage:        0 bytes
 48833 ;; Hardware stack levels used:    1
 48834 ;; Hardware stack levels required when called:   13
 48835 ;; This function calls:
 48836 ;;		Absolute function
 48837 ;;		_TMR3_DefaultInterruptHandler
 48838 ;;		_calc_bsoc
 48839 ;; This function is called by:
 48840 ;;		_TMR3_ISR
 48841 ;; This function uses a reentrant model
 48842 ;;
 48843                           
 48844                           	psect	text200
 48845  002C48                     __ptext200:
 48846                           	opt callstack 0
 48847  002C48                     _TMR3_CallBack:
 48848                           	opt callstack 3
 48849                           
 48850                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 48851                           
 48852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48853                           ;incstack = 0
 48854  002C48  0100               	movlb	0	; () banked
 48855  002C4A  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48856  002C4C  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48857  002C4E  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48858  002C50  B4D8               	btfsc	status,2,c
 48859  002C52  0012               	return	
 48860                           
 48861                           ; BSR set to: 0
 48862                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 48863  002C54  D801               	call	u1696_28
 48864  002C56  0012               	return	
 48865  002C58                     u1696_28:
 48866  002C58  0005               	push	
 48867  002C5A  6EFA               	movwf	pclath,c
 48868  002C5C  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48869  002C5E  6EFD               	movwf	tosl,c
 48870  002C60  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48871  002C62  6EFE               	movwf	tosh,c
 48872  002C64  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48873  002C66  6EFF               	movwf	tosu,c
 48874  002C68  50FA               	movf	pclath,w,c
 48875  002C6A  0012               	return		;indir
 48876  002C6C                     __end_of_TMR3_CallBack:
 48877                           	opt callstack 0
 48878                           
 48879 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 48880 ;; Defined at:
 48881 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 48882 ;; Parameters:    Size  Location     Type
 48883 ;;		None
 48884 ;; Auto vars:     Size  Location     Type
 48885 ;;		None
 48886 ;; Return value:  Size  Location     Type
 48887 ;;                  1  [STACK] void 
 48888 ;; Registers used:
 48889 ;;		None
 48890 ;; Tracked objects:
 48891 ;;		On entry : 3F/0
 48892 ;;		On exit  : 0/0
 48893 ;;		Unchanged: 0/0
 48894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48899 ;;Total ram usage:        0 bytes
 48900 ;; Hardware stack levels used:    1
 48901 ;; Hardware stack levels required when called:    3
 48902 ;; This function calls:
 48903 ;;		Nothing
 48904 ;; This function is called by:
 48905 ;;		_TMR3_Initialize
 48906 ;;		_TMR3_CallBack
 48907 ;; This function uses a reentrant model
 48908 ;;
 48909                           
 48910                           	psect	text201
 48911  002FFC                     __ptext201:
 48912                           	opt callstack 0
 48913  002FFC                     _TMR3_DefaultInterruptHandler:
 48914                           	opt callstack 12
 48915                           
 48916                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48917                           
 48918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48919                           ;incstack = 0
 48920  002FFC  0012               	return		;funcret
 48921  002FFE                     __end_of_TMR3_DefaultInterruptHandler:
 48922                           	opt callstack 0
 48923                           
 48924 ;; *************** function _calc_bsoc *****************
 48925 ;; Defined at:
 48926 ;;		line 39 in file "bsoc.c"
 48927 ;; Parameters:    Size  Location     Type
 48928 ;;		None
 48929 ;; Auto vars:     Size  Location     Type
 48930 ;;  adj             4  [STACK] float 
 48931 ;;  log_ptr         2  [STACK] PTR unsigned char 
 48932 ;;		 -> port_data(512), 
 48933 ;; Return value:  Size  Location     Type
 48934 ;;                  1  [STACK] void 
 48935 ;; Registers used:
 48936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 48937 ;; Tracked objects:
 48938 ;;		On entry : 3F/0
 48939 ;;		On exit  : 6/2
 48940 ;;		Unchanged: 0/0
 48941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48946 ;;Total ram usage:        0 bytes
 48947 ;; Hardware stack levels used:    1
 48948 ;; Hardware stack levels required when called:   12
 48949 ;; This function calls:
 48950 ;;		_StartTimer
 48951 ;;		___asfladd
 48952 ;;		___fldiv
 48953 ;;		___flge
 48954 ;;		___flmul
 48955 ;;		___flneg
 48956 ;;		___fltol
 48957 ;;		_fabsf
 48958 ;;		_get_ac_charger_relay
 48959 ;;		_port_data_dma_ptr
 48960 ;;		_send_port_data_dma
 48961 ;;		_sprintf
 48962 ;;		_strlen
 48963 ;; This function is called by:
 48964 ;;		_init_bsoc
 48965 ;;		_TMR3_CallBack
 48966 ;; This function uses a reentrant model
 48967 ;;
 48968                           
 48969                           	psect	text202
 48970  01544C                     __ptext202:
 48971                           	opt callstack 0
 48972  01544C                     _calc_bsoc:
 48973                           	opt callstack 0
 48974                           
 48975                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48976  01544C  0E06               	movlw	6
 48977  01544E  26E1               	addwf	fsr1l,f,c
 48978  015450  0E00               	movlw	0
 48979  015452  22E2               	addwfc	fsr1h,f,c
 48980                           
 48981                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 48982                           
 48983                           ;incstack = 0
 48984  015454  0E00               	movlw	0
 48985  015456  6E32               	movwf	(btemp+8)^0,c
 48986  015458  0E00               	movlw	0
 48987  01545A  6E33               	movwf	(btemp+9)^0,c
 48988  01545C  0E80               	movlw	128
 48989  01545E  6E34               	movwf	(btemp+10)^0,c
 48990  015460  0E3F               	movlw	63
 48991  015462  6E35               	movwf	(btemp+11)^0,c
 48992                           
 48993                           ;stkvar	_adj @ sp[(-6)+0]
 48994  015464  0EFA               	movlw	-6
 48995  015466  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48996  01546C  0EFB               	movlw	-5
 48997  01546E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48998  015474  0EFC               	movlw	-4
 48999  015476  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49000  01547C  0EFD               	movlw	-3
 49001  01547E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49002  015484  82BE               	bsf	190,1,c	;volatile
 49003                           
 49004                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 49005  015486  0E00               	movlw	0
 49006  015488  6EE6               	movwf	postinc1,c
 49007  01548A  0E00               	movlw	0
 49008  01548C  6EE6               	movwf	postinc1,c
 49009  01548E  0E61               	movlw	97
 49010  015490  6EE6               	movwf	postinc1,c
 49011  015492  0E45               	movlw	69
 49012  015494  6EE6               	movwf	postinc1,c
 49013  015496  EE22  F143         	lfsr	2,_C+68	;volatile
 49014  01549A  006F FF7B FFE6     	movff	postinc2,postinc1
 49015  0154A0  006F FF7B FFE6     	movff	postinc2,postinc1
 49016  0154A6  006F FF7B FFE6     	movff	postinc2,postinc1
 49017  0154AC  006F FF7B FFE6     	movff	postinc2,postinc1
 49018  0154B2  ECB8  F0C3         	call	___fldiv	;wreg free
 49019  0154B6  0060  F0AB  FFE6   	movff	btemp,postinc1
 49020  0154BC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49021  0154C2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49022  0154C8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49023  0154CE  0E8F               	movlw	low (_C+144)
 49024  0154D0  6EE6               	movwf	postinc1,c
 49025  0154D2  0E09               	movlw	high (_C+144)
 49026  0154D4  6EE6               	movwf	postinc1,c
 49027  0154D6  EC80  F00C         	call	___asfladd	;wreg free
 49028                           
 49029                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 49030  0154DA  EE22  F18F         	lfsr	2,_C+144	;volatile
 49031  0154DE  006F FF7B FFE6     	movff	postinc2,postinc1
 49032  0154E4  006F FF7B FFE6     	movff	postinc2,postinc1
 49033  0154EA  006F FF7B FFE6     	movff	postinc2,postinc1
 49034  0154F0  006F FF7B FFE6     	movff	postinc2,postinc1
 49035  0154F6  EE22  F18B         	lfsr	2,_C+140	;volatile
 49036  0154FA  006F FF7B FFE6     	movff	postinc2,postinc1
 49037  015500  006F FF7B FFE6     	movff	postinc2,postinc1
 49038  015506  006F FF7B FFE6     	movff	postinc2,postinc1
 49039  01550C  006F FF7B FFE6     	movff	postinc2,postinc1
 49040  015512  ECE9  F0F6         	call	___flge	;wreg free
 49041  015516  B02A               	btfsc	btemp& (0+255),0,c
 49042  015518  D00E               	goto	l17237
 49043                           
 49044                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 49045  01551A  EE22  F18B         	lfsr	2,_C+140	;volatile
 49046  01551E  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 49047  015524  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 49048  01552A  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 49049  015530  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 49050  015536                     l17237:
 49051                           
 49052                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 49053  015536  0ECD               	movlw	205
 49054  015538  6EE6               	movwf	postinc1,c
 49055  01553A  0ECC               	movlw	204
 49056  01553C  6EE6               	movwf	postinc1,c
 49057  01553E  0ECC               	movlw	204
 49058  015540  6EE6               	movwf	postinc1,c
 49059  015542  0E3D               	movlw	61
 49060  015544  6EE6               	movwf	postinc1,c
 49061  015546  EE22  F18F         	lfsr	2,_C+144	;volatile
 49062  01554A  006F FF7B FFE6     	movff	postinc2,postinc1
 49063  015550  006F FF7B FFE6     	movff	postinc2,postinc1
 49064  015556  006F FF7B FFE6     	movff	postinc2,postinc1
 49065  01555C  006F FF7B FFE6     	movff	postinc2,postinc1
 49066  015562  ECE9  F0F6         	call	___flge	;wreg free
 49067  015566  B02A               	btfsc	btemp& (0+255),0,c
 49068  015568  D010               	goto	l17241
 49069                           
 49070                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 49071  01556A  0ECD               	movlw	205
 49072  01556C  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 49073  015572  0ECC               	movlw	204
 49074  015574  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 49075  01557A  0ECC               	movlw	204
 49076  01557C  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 49077  015582  0E3D               	movlw	61
 49078  015584  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 49079  01558A                     l17241:
 49080                           
 49081                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 49082  01558A  EE22  F143         	lfsr	2,_C+68	;volatile
 49083  01558E  006F FF7B FFE6     	movff	postinc2,postinc1
 49084  015594  006F FF7B FFE6     	movff	postinc2,postinc1
 49085  01559A  006F FF7B FFE6     	movff	postinc2,postinc1
 49086  0155A0  006F FF7B FFE6     	movff	postinc2,postinc1
 49087  0155A6  0E0A               	movlw	10
 49088  0155A8  6EE6               	movwf	postinc1,c
 49089  0155AA  0ED7               	movlw	215
 49090  0155AC  6EE6               	movwf	postinc1,c
 49091  0155AE  0E23               	movlw	35
 49092  0155B0  6EE6               	movwf	postinc1,c
 49093  0155B2  0E3C               	movlw	60
 49094  0155B4  6EE6               	movwf	postinc1,c
 49095  0155B6  ECE9  F0F6         	call	___flge	;wreg free
 49096  0155BA  B02A               	btfsc	btemp& (0+255),0,c
 49097  0155BC  D01C               	goto	l17245
 49098                           
 49099                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 49100  0155BE  0062  F714  F032   	movff	_C+198,btemp+8	;volatile
 49101  0155C4  0062  F718  F033   	movff	_C+199,btemp+9	;volatile
 49102  0155CA  0062  F71C  F034   	movff	_C+200,btemp+10	;volatile
 49103  0155D0  0062  F720  F035   	movff	_C+201,btemp+11	;volatile
 49104                           
 49105                           ;stkvar	_adj @ sp[(-6)+0]
 49106  0155D6  0EFA               	movlw	-6
 49107  0155D8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 49108  0155DE  0EFB               	movlw	-5
 49109  0155E0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 49110  0155E6  0EFC               	movlw	-4
 49111  0155E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49112  0155EE  0EFD               	movlw	-3
 49113  0155F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49114  0155F6                     l17245:
 49115                           
 49116                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 49117  0155F6  0E0A               	movlw	10
 49118  0155F8  6EE6               	movwf	postinc1,c
 49119  0155FA  0ED7               	movlw	215
 49120  0155FC  6EE6               	movwf	postinc1,c
 49121  0155FE  0E23               	movlw	35
 49122  015600  6EE6               	movwf	postinc1,c
 49123  015602  0E3C               	movlw	60
 49124  015604  6EE6               	movwf	postinc1,c
 49125  015606  EE22  F143         	lfsr	2,_C+68	;volatile
 49126  01560A  006F FF7B FFE6     	movff	postinc2,postinc1
 49127  015610  006F FF7B FFE6     	movff	postinc2,postinc1
 49128  015616  006F FF7B FFE6     	movff	postinc2,postinc1
 49129  01561C  006F FF7B FFE6     	movff	postinc2,postinc1
 49130  015622  ECE9  F0F6         	call	___flge	;wreg free
 49131  015626  B02A               	btfsc	btemp& (0+255),0,c
 49132  015628  D01C               	goto	l17249
 49133                           
 49134                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 49135  01562A  0062  F704  F032   	movff	_C+194,btemp+8	;volatile
 49136  015630  0062  F708  F033   	movff	_C+195,btemp+9	;volatile
 49137  015636  0062  F70C  F034   	movff	_C+196,btemp+10	;volatile
 49138  01563C  0062  F710  F035   	movff	_C+197,btemp+11	;volatile
 49139                           
 49140                           ;stkvar	_adj @ sp[(-6)+0]
 49141  015642  0EFA               	movlw	-6
 49142  015644  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 49143  01564A  0EFB               	movlw	-5
 49144  01564C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 49145  015652  0EFC               	movlw	-4
 49146  015654  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49147  01565A  0EFD               	movlw	-3
 49148  01565C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49149  015662                     l17249:
 49150                           
 49151                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 49152  015662  0E00               	movlw	0
 49153  015664  6EE6               	movwf	postinc1,c
 49154  015666  0E00               	movlw	0
 49155  015668  6EE6               	movwf	postinc1,c
 49156  01566A  0E61               	movlw	97
 49157  01566C  6EE6               	movwf	postinc1,c
 49158  01566E  0E45               	movlw	69
 49159  015670  6EE6               	movwf	postinc1,c
 49160                           
 49161                           ;stkvar	_adj @ sp[(-10)+0]
 49162  015672  0EF6               	movlw	-10
 49163  015674  006F FF8F FFE6     	movff	plusw1,postinc1
 49164  01567A  006F FF8F FFE6     	movff	plusw1,postinc1
 49165  015680  006F FF8F FFE6     	movff	plusw1,postinc1
 49166  015686  006F FF8F FFE6     	movff	plusw1,postinc1
 49167  01568C  EE22  F143         	lfsr	2,_C+68	;volatile
 49168  015690  006F FF7B FFE6     	movff	postinc2,postinc1
 49169  015696  006F FF7B FFE6     	movff	postinc2,postinc1
 49170  01569C  006F FF7B FFE6     	movff	postinc2,postinc1
 49171  0156A2  006F FF7B FFE6     	movff	postinc2,postinc1
 49172  0156A8  EC67  F0B8         	call	___flmul	;wreg free
 49173  0156AC  0060  F0AB  FFE6   	movff	btemp,postinc1
 49174  0156B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49175  0156B8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49176  0156BE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49177  0156C4  ECB8  F0C3         	call	___fldiv	;wreg free
 49178  0156C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 49179  0156CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49180  0156D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49181  0156DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49182  0156E0  0E8F               	movlw	low (_C+144)
 49183  0156E2  6EE6               	movwf	postinc1,c
 49184  0156E4  0E09               	movlw	high (_C+144)
 49185  0156E6  6EE6               	movwf	postinc1,c
 49186  0156E8  EC80  F00C         	call	___asfladd	;wreg free
 49187                           
 49188                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 49189  0156EC  EE22  F18F         	lfsr	2,_C+144	;volatile
 49190  0156F0  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 49191  0156F6  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 49192  0156FC  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 49193  015702  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 49194                           
 49195                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 49196  015708  EE22  F19B         	lfsr	2,_C+156	;volatile
 49197  01570C  006F FF7B FFE6     	movff	postinc2,postinc1
 49198  015712  006F FF7B FFE6     	movff	postinc2,postinc1
 49199  015718  006F FF7B FFE6     	movff	postinc2,postinc1
 49200  01571E  006F FF7B FFE6     	movff	postinc2,postinc1
 49201  015724  EE22  F18B         	lfsr	2,_C+140	;volatile
 49202  015728  006F FF7B FFE6     	movff	postinc2,postinc1
 49203  01572E  006F FF7B FFE6     	movff	postinc2,postinc1
 49204  015734  006F FF7B FFE6     	movff	postinc2,postinc1
 49205  01573A  006F FF7B FFE6     	movff	postinc2,postinc1
 49206  015740  ECE9  F0F6         	call	___flge	;wreg free
 49207  015744  B02A               	btfsc	btemp& (0+255),0,c
 49208  015746  D00E               	goto	l17257
 49209                           
 49210                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 49211  015748  EE22  F18B         	lfsr	2,_C+140	;volatile
 49212  01574C  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 49213  015752  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 49214  015758  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 49215  01575E  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 49216  015764                     l17257:
 49217                           
 49218                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 49219  015764  0ECD               	movlw	205
 49220  015766  6EE6               	movwf	postinc1,c
 49221  015768  0ECC               	movlw	204
 49222  01576A  6EE6               	movwf	postinc1,c
 49223  01576C  0ECC               	movlw	204
 49224  01576E  6EE6               	movwf	postinc1,c
 49225  015770  0E3D               	movlw	61
 49226  015772  6EE6               	movwf	postinc1,c
 49227  015774  EE22  F19B         	lfsr	2,_C+156	;volatile
 49228  015778  006F FF7B FFE6     	movff	postinc2,postinc1
 49229  01577E  006F FF7B FFE6     	movff	postinc2,postinc1
 49230  015784  006F FF7B FFE6     	movff	postinc2,postinc1
 49231  01578A  006F FF7B FFE6     	movff	postinc2,postinc1
 49232  015790  ECE9  F0F6         	call	___flge	;wreg free
 49233  015794  B02A               	btfsc	btemp& (0+255),0,c
 49234  015796  D010               	goto	l17261
 49235                           
 49236                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 49237  015798  0ECD               	movlw	205
 49238  01579A  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 49239  0157A0  0ECC               	movlw	204
 49240  0157A2  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 49241  0157A8  0ECC               	movlw	204
 49242  0157AA  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 49243  0157B0  0E3D               	movlw	61
 49244  0157B2  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 49245  0157B8                     l17261:
 49246                           
 49247                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 49248  0157B8  0E00               	movlw	0
 49249  0157BA  6EE6               	movwf	postinc1,c
 49250  0157BC  0E00               	movlw	0
 49251  0157BE  6EE6               	movwf	postinc1,c
 49252  0157C0  0E61               	movlw	97
 49253  0157C2  6EE6               	movwf	postinc1,c
 49254  0157C4  0E45               	movlw	69
 49255  0157C6  6EE6               	movwf	postinc1,c
 49256  0157C8  EE22  F147         	lfsr	2,_C+72	;volatile
 49257  0157CC  006F FF7B FFE6     	movff	postinc2,postinc1
 49258  0157D2  006F FF7B FFE6     	movff	postinc2,postinc1
 49259  0157D8  006F FF7B FFE6     	movff	postinc2,postinc1
 49260  0157DE  006F FF7B FFE6     	movff	postinc2,postinc1
 49261  0157E4  ECB8  F0C3         	call	___fldiv	;wreg free
 49262  0157E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 49263  0157EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49264  0157F4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49265  0157FA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49266  015800  0E93               	movlw	low (_C+148)
 49267  015802  6EE6               	movwf	postinc1,c
 49268  015804  0E09               	movlw	high (_C+148)
 49269  015806  6EE6               	movwf	postinc1,c
 49270  015808  EC80  F00C         	call	___asfladd	;wreg free
 49271                           
 49272                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 49273  01580C  0E00               	movlw	0
 49274  01580E  6EE6               	movwf	postinc1,c
 49275  015810  0E00               	movlw	0
 49276  015812  6EE6               	movwf	postinc1,c
 49277  015814  0E61               	movlw	97
 49278  015816  6EE6               	movwf	postinc1,c
 49279  015818  0E45               	movlw	69
 49280  01581A  6EE6               	movwf	postinc1,c
 49281  01581C  EE22  F17B         	lfsr	2,_C+124	;volatile
 49282  015820  006F FF7B FFE6     	movff	postinc2,postinc1
 49283  015826  006F FF7B FFE6     	movff	postinc2,postinc1
 49284  01582C  006F FF7B FFE6     	movff	postinc2,postinc1
 49285  015832  006F FF7B FFE6     	movff	postinc2,postinc1
 49286  015838  ECB8  F0C3         	call	___fldiv	;wreg free
 49287  01583C  0060  F0AB  FFE6   	movff	btemp,postinc1
 49288  015842  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49289  015848  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49290  01584E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49291  015854  0EA7               	movlw	low (_C+168)
 49292  015856  6EE6               	movwf	postinc1,c
 49293  015858  0E09               	movlw	high (_C+168)
 49294  01585A  6EE6               	movwf	postinc1,c
 49295  01585C  EC80  F00C         	call	___asfladd	;wreg free
 49296                           
 49297                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 49298  015860  0E00               	movlw	0
 49299  015862  6EE6               	movwf	postinc1,c
 49300  015864  0E00               	movlw	0
 49301  015866  6EE6               	movwf	postinc1,c
 49302  015868  0E61               	movlw	97
 49303  01586A  6EE6               	movwf	postinc1,c
 49304  01586C  0E45               	movlw	69
 49305  01586E  6EE6               	movwf	postinc1,c
 49306  015870  EE22  F177         	lfsr	2,_C+120	;volatile
 49307  015874  006F FF7B FFE6     	movff	postinc2,postinc1
 49308  01587A  006F FF7B FFE6     	movff	postinc2,postinc1
 49309  015880  006F FF7B FFE6     	movff	postinc2,postinc1
 49310  015886  006F FF7B FFE6     	movff	postinc2,postinc1
 49311  01588C  ECB8  F0C3         	call	___fldiv	;wreg free
 49312  015890  0060  F0AB  FFE6   	movff	btemp,postinc1
 49313  015896  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49314  01589C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49315  0158A2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49316  0158A8  0EAB               	movlw	low (_C+172)
 49317  0158AA  6EE6               	movwf	postinc1,c
 49318  0158AC  0E09               	movlw	high (_C+172)
 49319  0158AE  6EE6               	movwf	postinc1,c
 49320  0158B0  EC80  F00C         	call	___asfladd	;wreg free
 49321                           
 49322                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 49323  0158B4  0E00               	movlw	0
 49324  0158B6  6EE6               	movwf	postinc1,c
 49325  0158B8  0E00               	movlw	0
 49326  0158BA  6EE6               	movwf	postinc1,c
 49327  0158BC  0E61               	movlw	97
 49328  0158BE  6EE6               	movwf	postinc1,c
 49329  0158C0  0E45               	movlw	69
 49330  0158C2  6EE6               	movwf	postinc1,c
 49331  0158C4  EE22  F173         	lfsr	2,_C+116	;volatile
 49332  0158C8  006F FF7B FFE6     	movff	postinc2,postinc1
 49333  0158CE  006F FF7B FFE6     	movff	postinc2,postinc1
 49334  0158D4  006F FF7B FFE6     	movff	postinc2,postinc1
 49335  0158DA  006F FF7B FFE6     	movff	postinc2,postinc1
 49336  0158E0  ECB8  F0C3         	call	___fldiv	;wreg free
 49337  0158E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 49338  0158EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49339  0158F0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49340  0158F6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49341  0158FC  0EAF               	movlw	low (_C+176)
 49342  0158FE  6EE6               	movwf	postinc1,c
 49343  015900  0E09               	movlw	high (_C+176)
 49344  015902  6EE6               	movwf	postinc1,c
 49345  015904  EC80  F00C         	call	___asfladd	;wreg free
 49346                           
 49347                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 49348  015908  EE22  F17F         	lfsr	2,_C+128	;volatile
 49349  01590C  006F FF7B FFE6     	movff	postinc2,postinc1
 49350  015912  006F FF7B FFE6     	movff	postinc2,postinc1
 49351  015918  006F FF7B FFE6     	movff	postinc2,postinc1
 49352  01591E  006F FF7B FFE6     	movff	postinc2,postinc1
 49353  015924  0E00               	movlw	0
 49354  015926  6EE6               	movwf	postinc1,c
 49355  015928  0E00               	movlw	0
 49356  01592A  6EE6               	movwf	postinc1,c
 49357  01592C  0E00               	movlw	0
 49358  01592E  6EE6               	movwf	postinc1,c
 49359  015930  0E00               	movlw	0
 49360  015932  6EE6               	movwf	postinc1,c
 49361  015934  ECE9  F0F6         	call	___flge	;wreg free
 49362  015938  B02A               	btfsc	btemp& (0+255),0,c
 49363  01593A  D02A               	goto	l17267
 49364                           
 49365                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 49366  01593C  0E00               	movlw	0
 49367  01593E  6EE6               	movwf	postinc1,c
 49368  015940  0E00               	movlw	0
 49369  015942  6EE6               	movwf	postinc1,c
 49370  015944  0E61               	movlw	97
 49371  015946  6EE6               	movwf	postinc1,c
 49372  015948  0E45               	movlw	69
 49373  01594A  6EE6               	movwf	postinc1,c
 49374  01594C  EE22  F17F         	lfsr	2,_C+128	;volatile
 49375  015950  006F FF7B FFE6     	movff	postinc2,postinc1
 49376  015956  006F FF7B FFE6     	movff	postinc2,postinc1
 49377  01595C  006F FF7B FFE6     	movff	postinc2,postinc1
 49378  015962  006F FF7B FFE6     	movff	postinc2,postinc1
 49379  015968  ECB8  F0C3         	call	___fldiv	;wreg free
 49380  01596C  0060  F0AB  FFE6   	movff	btemp,postinc1
 49381  015972  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49382  015978  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49383  01597E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49384  015984  0E9F               	movlw	low (_C+160)
 49385  015986  6EE6               	movwf	postinc1,c
 49386  015988  0E09               	movlw	high (_C+160)
 49387  01598A  6EE6               	movwf	postinc1,c
 49388  01598C  EC80  F00C         	call	___asfladd	;wreg free
 49389  015990                     l17267:
 49390                           
 49391                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 49392  015990  EE22  F17F         	lfsr	2,_C+128	;volatile
 49393  015994  0E03               	movlw	3
 49394  015996  AEDB               	btfss	plusw2,7,c
 49395  015998  D038               	goto	l17271
 49396                           
 49397                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 49398  01599A  0E00               	movlw	0
 49399  01599C  6EE6               	movwf	postinc1,c
 49400  01599E  0E00               	movlw	0
 49401  0159A0  6EE6               	movwf	postinc1,c
 49402  0159A2  0E61               	movlw	97
 49403  0159A4  6EE6               	movwf	postinc1,c
 49404  0159A6  0E45               	movlw	69
 49405  0159A8  6EE6               	movwf	postinc1,c
 49406  0159AA  EE22  F17F         	lfsr	2,_C+128	;volatile
 49407  0159AE  006F FF7B FFE6     	movff	postinc2,postinc1
 49408  0159B4  006F FF7B FFE6     	movff	postinc2,postinc1
 49409  0159BA  006F FF7B FFE6     	movff	postinc2,postinc1
 49410  0159C0  006F FF7B FFE6     	movff	postinc2,postinc1
 49411  0159C6  ECB8  F0C3         	call	___fldiv	;wreg free
 49412  0159CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 49413  0159D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49414  0159D6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49415  0159DC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49416  0159E2  ECBE  F006         	call	_fabsf	;wreg free
 49417  0159E6  0060  F0AB  FFE6   	movff	btemp,postinc1
 49418  0159EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49419  0159F2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49420  0159F8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49421  0159FE  0EA3               	movlw	low (_C+164)
 49422  015A00  6EE6               	movwf	postinc1,c
 49423  015A02  0E09               	movlw	high (_C+164)
 49424  015A04  6EE6               	movwf	postinc1,c
 49425  015A06  EC80  F00C         	call	___asfladd	;wreg free
 49426  015A0A                     l17271:
 49427                           
 49428                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 49429  015A0A  0E00               	movlw	0
 49430  015A0C  6EE6               	movwf	postinc1,c
 49431  015A0E  0E00               	movlw	0
 49432  015A10  6EE6               	movwf	postinc1,c
 49433  015A12  0EC8               	movlw	200
 49434  015A14  6EE6               	movwf	postinc1,c
 49435  015A16  0E42               	movlw	66
 49436  015A18  6EE6               	movwf	postinc1,c
 49437  015A1A  EE22  F18B         	lfsr	2,_C+140	;volatile
 49438  015A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 49439  015A24  006F FF7B FFE6     	movff	postinc2,postinc1
 49440  015A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 49441  015A30  006F FF7B FFE6     	movff	postinc2,postinc1
 49442  015A36  EE22  F19B         	lfsr	2,_C+156	;volatile
 49443  015A3A  006F FF7B FFE6     	movff	postinc2,postinc1
 49444  015A40  006F FF7B FFE6     	movff	postinc2,postinc1
 49445  015A46  006F FF7B FFE6     	movff	postinc2,postinc1
 49446  015A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 49447  015A52  ECB8  F0C3         	call	___fldiv	;wreg free
 49448  015A56  0060  F0AB  FFE6   	movff	btemp,postinc1
 49449  015A5C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49450  015A62  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49451  015A68  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49452  015A6E  EC67  F0B8         	call	___flmul	;wreg free
 49453  015A72  0060  F0AB  FFE6   	movff	btemp,postinc1
 49454  015A78  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49455  015A7E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49456  015A84  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49457  015A8A  EC7D  F0F5         	call	___fltol	;wreg free
 49458  015A8E  0060  F0A8  F034   	movff	btemp,btemp+10
 49459  015A94  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49460  015A9A  0E01               	movlw	1
 49461  015A9C  2634               	addwf	(btemp+10)^0,f,c
 49462  015A9E  0E00               	movlw	0
 49463  015AA0  2235               	addwfc	(btemp+11)^0,f,c
 49464  015AA2  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 49465  015AA8  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 49466                           
 49467                           ;bsoc.c: 76:  if (C.soc > 100)
 49468  015AAE  EE22  F1B5         	lfsr	2,_C+182	;volatile
 49469  015AB2  0E01               	movlw	1
 49470  015AB4  50DB               	movf	plusw2,w,c
 49471  015AB6  E104               	bnz	u1689_20
 49472  015AB8  0E65               	movlw	101
 49473  015ABA  5CDE               	subwf	postinc2,w,c
 49474  015ABC  A0D8               	btfss	status,0,c
 49475  015ABE  D008               	goto	l17277
 49476  015AC0                     u1689_20:
 49477                           
 49478                           ;bsoc.c: 77:   C.soc = 100;
 49479  015AC0  0E64               	movlw	100
 49480  015AC2  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 49481  015AC8  0E00               	movlw	0
 49482  015ACA  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 49483  015AD0                     l17277:
 49484                           
 49485                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 49486  015AD0  EE22  F143         	lfsr	2,_C+68	;volatile
 49487  015AD4  0E03               	movlw	3
 49488  015AD6  AEDB               	btfss	plusw2,7,c
 49489  015AD8  D047               	goto	l2371
 49490                           
 49491                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 49492  015ADA  EE22  F143         	lfsr	2,_C+68	;volatile
 49493  015ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 49494  015AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 49495  015AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 49496  015AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 49497  015AF6  EE22  F19B         	lfsr	2,_C+156	;volatile
 49498  015AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 49499  015B00  006F FF7B FFE6     	movff	postinc2,postinc1
 49500  015B06  006F FF7B FFE6     	movff	postinc2,postinc1
 49501  015B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 49502  015B12  ECB8  F0C3         	call	___fldiv	;wreg free
 49503  015B16  0060  F0AB  FFE6   	movff	btemp,postinc1
 49504  015B1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49505  015B22  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49506  015B28  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49507  015B2E  ECCD  F010         	call	___flneg	;wreg free
 49508  015B32  0060  F0AB  FFE6   	movff	btemp,postinc1
 49509  015B38  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49510  015B3E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49511  015B44  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49512  015B4A  EC7D  F0F5         	call	___fltol	;wreg free
 49513  015B4E  0060  F0A8  F034   	movff	btemp,btemp+10
 49514  015B54  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49515  015B5A  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 49516  015B60  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 49517                           
 49518                           ;bsoc.c: 81:  } else {
 49519  015B66  D008               	goto	l17281
 49520  015B68                     l2371:
 49521                           
 49522                           ;bsoc.c: 82:   C.runtime = 99;
 49523  015B68  0E63               	movlw	99
 49524  015B6A  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 49525  015B70  0E00               	movlw	0
 49526  015B72  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 49527  015B78                     l17281:
 49528                           
 49529                           ;bsoc.c: 84:  if (C.runtime > 99)
 49530  015B78  EE22  F1B3         	lfsr	2,_C+180	;volatile
 49531  015B7C  0E01               	movlw	1
 49532  015B7E  50DB               	movf	plusw2,w,c
 49533  015B80  E104               	bnz	u1691_20
 49534  015B82  0E64               	movlw	100
 49535  015B84  5CDE               	subwf	postinc2,w,c
 49536  015B86  A0D8               	btfss	status,0,c
 49537  015B88  D008               	goto	l17285
 49538  015B8A                     u1691_20:
 49539                           
 49540                           ;bsoc.c: 85:   C.runtime = 99;
 49541  015B8A  0E63               	movlw	99
 49542  015B8C  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 49543  015B92  0E00               	movlw	0
 49544  015B94  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 49545  015B9A                     l17285:
 49546                           
 49547                           ;bsoc.c: 87:  V.lowint_count++;
 49548  015B9A  0E01               	movlw	1
 49549  015B9C  0102               	movlb	2	; () banked
 49550  015B9E  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 49551  015BA0  0E00               	movlw	0
 49552  015BA2  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 49553  015BA4  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 49554  015BA6  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 49555                           
 49556                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 49557  015BA8  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 49558  015BAA  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 49559  015BAC  A4D8               	btfss	status,2,c
 49560  015BAE  D177               	goto	l17297
 49561                           
 49562                           ; BSR set to: 2
 49563  015BB0  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 49564  015BB2  B4D8               	btfsc	status,2,c
 49565  015BB4  D174               	goto	l17297
 49566                           
 49567                           ; BSR set to: 2
 49568                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 49569  015BB6  ECBC  F017         	call	_port_data_dma_ptr	;wreg free
 49570                           
 49571                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49572  015BBA  0EFF               	movlw	-1
 49573  015BBC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 49574  015BC2  0EFE               	movlw	-2
 49575  015BC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 49576                           
 49577                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 49578  015BCA  EE22  F1C1         	lfsr	2,_C+194	;volatile
 49579  015BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 49580  015BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 49581  015BDA  006F FF7B FFE6     	movff	postinc2,postinc1
 49582  015BE0  006F FF7B FFE6     	movff	postinc2,postinc1
 49583  015BE6  EE22  F1C5         	lfsr	2,_C+198	;volatile
 49584  015BEA  006F FF7B FFE6     	movff	postinc2,postinc1
 49585  015BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 49586  015BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 49587  015BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 49588  015C02  EE22  F19B         	lfsr	2,_C+156	;volatile
 49589  015C06  006F FF7B FFE6     	movff	postinc2,postinc1
 49590  015C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 49591  015C12  006F FF7B FFE6     	movff	postinc2,postinc1
 49592  015C18  006F FF7B FFE6     	movff	postinc2,postinc1
 49593  015C1E  EE22  F233         	lfsr	2,_C+308	;volatile
 49594  015C22  006F FF7B FFE6     	movff	postinc2,postinc1
 49595  015C28  006F FF7B FFE6     	movff	postinc2,postinc1
 49596  015C2E  006F FF7B FFE6     	movff	postinc2,postinc1
 49597  015C34  006F FF7B FFE6     	movff	postinc2,postinc1
 49598  015C3A  EE22  F22F         	lfsr	2,_C+304	;volatile
 49599  015C3E  006F FF7B FFE6     	movff	postinc2,postinc1
 49600  015C44  006F FF7B FFE6     	movff	postinc2,postinc1
 49601  015C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 49602  015C50  006F FF7B FFE6     	movff	postinc2,postinc1
 49603  015C56  EE22  F22D         	lfsr	2,_C+302	;volatile
 49604  015C5A  50DF               	movf	indf2,w,c
 49605  015C5C  6EE6               	movwf	postinc1,c
 49606  015C5E  0E00               	movlw	0
 49607  015C60  6EE6               	movwf	postinc1,c
 49608  015C62  ECA0  F017         	call	_get_ac_charger_relay	;wreg free
 49609  015C66  502A               	movf	btemp^0,w,c
 49610  015C68  6EE6               	movwf	postinc1,c
 49611  015C6A  0E00               	movlw	0
 49612  015C6C  6EE6               	movwf	postinc1,c
 49613  015C6E  EE22  F167         	lfsr	2,_C+104	;volatile
 49614  015C72  006F FF7B FFE6     	movff	postinc2,postinc1
 49615  015C78  006F FF7B FFE6     	movff	postinc2,postinc1
 49616  015C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 49617  015C84  006F FF7B FFE6     	movff	postinc2,postinc1
 49618  015C8A  EE22  F187         	lfsr	2,_C+136	;volatile
 49619  015C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 49620  015C94  006F FF7B FFE6     	movff	postinc2,postinc1
 49621  015C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 49622  015CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 49623  015CA6  EE22  F1B3         	lfsr	2,_C+180	;volatile
 49624  015CAA  006F FF78  F034    	movff	postinc2,btemp+10
 49625  015CB0  006F FF74  F035    	movff	postdec2,btemp+11
 49626  015CB6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49627  015CBC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49628  015CC2  EE22  F1B5         	lfsr	2,_C+182	;volatile
 49629  015CC6  006F FF78  F034    	movff	postinc2,btemp+10
 49630  015CCC  006F FF74  F035    	movff	postdec2,btemp+11
 49631  015CD2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49632  015CD8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49633  015CDE  EE22  F193         	lfsr	2,_C+148	;volatile
 49634  015CE2  006F FF7B FFE6     	movff	postinc2,postinc1
 49635  015CE8  006F FF7B FFE6     	movff	postinc2,postinc1
 49636  015CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 49637  015CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 49638  015CFA  EE22  F18F         	lfsr	2,_C+144	;volatile
 49639  015CFE  006F FF7B FFE6     	movff	postinc2,postinc1
 49640  015D04  006F FF7B FFE6     	movff	postinc2,postinc1
 49641  015D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 49642  015D10  006F FF7B FFE6     	movff	postinc2,postinc1
 49643  015D16  EE22  F177         	lfsr	2,_C+120	;volatile
 49644  015D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 49645  015D20  006F FF7B FFE6     	movff	postinc2,postinc1
 49646  015D26  006F FF7B FFE6     	movff	postinc2,postinc1
 49647  015D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 49648  015D32  EE22  F173         	lfsr	2,_C+116	;volatile
 49649  015D36  006F FF7B FFE6     	movff	postinc2,postinc1
 49650  015D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 49651  015D42  006F FF7B FFE6     	movff	postinc2,postinc1
 49652  015D48  006F FF7B FFE6     	movff	postinc2,postinc1
 49653  015D4E  EE22  F17B         	lfsr	2,_C+124	;volatile
 49654  015D52  006F FF7B FFE6     	movff	postinc2,postinc1
 49655  015D58  006F FF7B FFE6     	movff	postinc2,postinc1
 49656  015D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 49657  015D64  006F FF7B FFE6     	movff	postinc2,postinc1
 49658  015D6A  EE22  F17F         	lfsr	2,_C+128	;volatile
 49659  015D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 49660  015D74  006F FF7B FFE6     	movff	postinc2,postinc1
 49661  015D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 49662  015D80  006F FF7B FFE6     	movff	postinc2,postinc1
 49663  015D86  EE22  F147         	lfsr	2,_C+72	;volatile
 49664  015D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 49665  015D90  006F FF7B FFE6     	movff	postinc2,postinc1
 49666  015D96  006F FF7B FFE6     	movff	postinc2,postinc1
 49667  015D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 49668  015DA2  EE22  F143         	lfsr	2,_C+68	;volatile
 49669  015DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 49670  015DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 49671  015DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 49672  015DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 49673  015DBE  EE22  F163         	lfsr	2,_C+100	;volatile
 49674  015DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 49675  015DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 49676  015DCE  006F FF7B FFE6     	movff	postinc2,postinc1
 49677  015DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 49678  015DDA  EE22  F14B         	lfsr	2,_C+76	;volatile
 49679  015DDE  006F FF7B FFE6     	movff	postinc2,postinc1
 49680  015DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 49681  015DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 49682  015DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 49683  015DF6  EE22  F14F         	lfsr	2,_C+80	;volatile
 49684  015DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 49685  015E00  006F FF7B FFE6     	movff	postinc2,postinc1
 49686  015E06  006F FF7B FFE6     	movff	postinc2,postinc1
 49687  015E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 49688  015E12  EE22  F153         	lfsr	2,_C+84	;volatile
 49689  015E16  006F FF7B FFE6     	movff	postinc2,postinc1
 49690  015E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 49691  015E22  006F FF7B FFE6     	movff	postinc2,postinc1
 49692  015E28  006F FF7B FFE6     	movff	postinc2,postinc1
 49693  015E2E  0060  FA23  FFE6   	movff	_V+129,postinc1
 49694  015E34  0060  FA27  FFE6   	movff	_V+130,postinc1
 49695  015E3A  0060  FA2B  FFE6   	movff	_V+131,postinc1
 49696  015E40  0060  FA2F  FFE6   	movff	_V+132,postinc1
 49697  015E46  0E32               	movlw	50
 49698  015E48  6EE6               	movwf	postinc1,c
 49699  015E4A  0E00               	movlw	0
 49700  015E4C  6EE6               	movwf	postinc1,c
 49701  015E4E  0E63               	movlw	low STR_103
 49702  015E50  6EE6               	movwf	postinc1,c
 49703  015E52  0EF9               	movlw	high STR_103
 49704  015E54  6EE6               	movwf	postinc1,c
 49705                           
 49706                           ;stkvar	_log_ptr @ sp[(-98)+4]
 49707  015E56  0EA2               	movlw	-94
 49708  015E58  006F FF8F FFE6     	movff	plusw1,postinc1
 49709  015E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 49710  015E64  0E5E               	movlw	94
 49711  015E66  6EE6               	movwf	postinc1,c
 49712  015E68  EC5B  F000         	call	_sprintf	;wreg free
 49713                           
 49714                           ; BSR set to: 0
 49715                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 49716  015E6C  0E7D               	movlw	125
 49717  015E6E  6EE6               	movwf	postinc1,c
 49718  015E70  0E00               	movlw	0
 49719  015E72  6EE6               	movwf	postinc1,c
 49720  015E74  0E0A               	movlw	10
 49721  015E76  6EE6               	movwf	postinc1,c
 49722  015E78  EC49  F012         	call	_StartTimer	;wreg free
 49723                           
 49724                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 49725                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49726  015E7C  0EFE               	movlw	-2
 49727  015E7E  006F FF8F FFE6     	movff	plusw1,postinc1
 49728  015E84  006F FF8F FFE6     	movff	plusw1,postinc1
 49729  015E8A  EC65  F008         	call	_strlen	;wreg free
 49730  015E8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 49731  015E94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49732  015E9A  EC2F  F010         	call	_send_port_data_dma	;wreg free
 49733  015E9E                     l17297:
 49734                           
 49735                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 49736  015E9E  0E09               	movlw	9
 49737  015EA0  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 49738  015EA2  D001               	goto	l2375
 49739                           
 49740                           ;bsoc.c: 102:   log_update_wait = 0;
 49741  015EA4  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 49742  015EA6                     l2375:
 49743                           
 49744                           ;bsoc.c: 104:  C.update = 0;
 49745  015EA6  0E00               	movlw	0
 49746  015EA8  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 49747                           
 49748                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 49749  015EAE  92BE               	bcf	190,1,c	;volatile
 49750                           
 49751                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 49752  015EB0  0EFA               	movlw	250
 49753  015EB2  26E1               	addwf	fsr1l,f,c
 49754  015EB4  0EFF               	movlw	255
 49755  015EB6  22E2               	addwfc	fsr1h,f,c
 49756  015EB8  0012               	return		;funcret
 49757  015EBA                     __end_of_calc_bsoc:
 49758                           	opt callstack 0
 49759                           
 49760 ;; *************** function _send_port_data_dma *****************
 49761 ;; Defined at:
 49762 ;;		line 397 in file "eadog.c"
 49763 ;; Parameters:    Size  Location     Type
 49764 ;;  dsize           2  [STACK] unsigned short 
 49765 ;; Auto vars:     Size  Location     Type
 49766 ;;		None
 49767 ;; Return value:  Size  Location     Type
 49768 ;;                  1  [STACK] void 
 49769 ;; Registers used:
 49770 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 49771 ;; Tracked objects:
 49772 ;;		On entry : 0/0
 49773 ;;		On exit  : 3F/3B
 49774 ;;		Unchanged: 0/0
 49775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49780 ;;Total ram usage:        0 bytes
 49781 ;; Hardware stack levels used:    1
 49782 ;; Hardware stack levels required when called:    3
 49783 ;; This function calls:
 49784 ;;		Nothing
 49785 ;; This function is called by:
 49786 ;;		_calc_bsoc
 49787 ;; This function uses a reentrant model
 49788 ;;
 49789                           
 49790                           	psect	text203
 49791  00205E                     __ptext203:
 49792                           	opt callstack 0
 49793  00205E                     _send_port_data_dma:
 49794                           	opt callstack 11
 49795                           
 49796                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 49797                           ;stkvar	_dsize @ sp[(0)+-2]
 49798                           
 49799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49800                           ;incstack = 0
 49801  00205E  0EFE               	movlw	-2
 49802  002060  04E3               	decf	plusw1,w,c
 49803  002062  0EFF               	movlw	-1
 49804  002064  006F FF8C  F02A    	movff	plusw1,btemp
 49805  00206A  0E02               	movlw	2
 49806  00206C  5A2A               	subwfb	btemp^0,f,c
 49807  00206E  A0D8               	btfss	status,0,c
 49808  002070  D00C               	goto	l13007
 49809                           
 49810                           ;eadog.c: 400:   dsize = 512;
 49811  002072  0E00               	movlw	0
 49812  002074  6E34               	movwf	(btemp+10)^0,c
 49813  002076  0E02               	movlw	2
 49814  002078  6E35               	movwf	(btemp+11)^0,c
 49815                           
 49816                           ;stkvar	_dsize @ sp[(0)+-2]
 49817  00207A  0EFE               	movlw	-2
 49818  00207C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49819  002082  0EFF               	movlw	-1
 49820  002084  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49821  00208A                     l13007:
 49822                           
 49823                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 49824  00208A  013B               	movlb	59	; () banked
 49825  00208C  9FDC               	bcf	220,7,b	;volatile
 49826                           
 49827                           ; BSR set to: 59
 49828                           ;eadog.c: 403:  DMA2SSZ = dsize;
 49829                           ;stkvar	_dsize @ sp[(0)+-2]
 49830  00208E  0EFE               	movlw	-2
 49831  002090  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 49832  002096  0EFF               	movlw	-1
 49833  002098  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 49834                           
 49835                           ; BSR set to: 59
 49836                           ;eadog.c: 404:  DMA2DSZ = 1;
 49837  00209E  0E00               	movlw	0
 49838  0020A0  6FCF               	movwf	207,b	;volatile
 49839  0020A2  0E01               	movlw	1
 49840  0020A4  6FCE               	movwf	206,b	;volatile
 49841                           
 49842                           ; BSR set to: 59
 49843                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 49844  0020A6  8FDC               	bsf	220,7,b	;volatile
 49845                           
 49846                           ; BSR set to: 59
 49847                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 49848  0020A8  8DDC               	bsf	220,6,b	;volatile
 49849                           
 49850                           ; BSR set to: 59
 49851                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 49852  0020AA  52E5               	movf	postdec1,f,c
 49853  0020AC  52E5               	movf	postdec1,f,c
 49854  0020AE  0012               	return		;funcret
 49855  0020B0                     __end_of_send_port_data_dma:
 49856                           	opt callstack 0
 49857                           
 49858 ;; *************** function _port_data_dma_ptr *****************
 49859 ;; Defined at:
 49860 ;;		line 412 in file "eadog.c"
 49861 ;; Parameters:    Size  Location     Type
 49862 ;;		None
 49863 ;; Auto vars:     Size  Location     Type
 49864 ;;		None
 49865 ;; Return value:  Size  Location     Type
 49866 ;;                  2  [STACK] PTR unsigned char 
 49867 ;; Registers used:
 49868 ;;		wreg, status,2, status,0, btemp, btemp+1
 49869 ;; Tracked objects:
 49870 ;;		On entry : 3F/2
 49871 ;;		On exit  : 0/0
 49872 ;;		Unchanged: 0/0
 49873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49878 ;;Total ram usage:        0 bytes
 49879 ;; Hardware stack levels used:    1
 49880 ;; Hardware stack levels required when called:    3
 49881 ;; This function calls:
 49882 ;;		Nothing
 49883 ;; This function is called by:
 49884 ;;		_calc_bsoc
 49885 ;; This function uses a reentrant model
 49886 ;;
 49887                           
 49888                           	psect	text204
 49889  002F78                     __ptext204:
 49890                           	opt callstack 0
 49891  002F78                     _port_data_dma_ptr:
 49892                           	opt callstack 11
 49893                           
 49894                           ;eadog.c: 414:  return port_data;
 49895                           
 49896                           ; BSR set to: 59
 49897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49898                           ;incstack = 0
 49899  002F78  0EFF               	movlw	low _port_data
 49900  002F7A  6E2A               	movwf	btemp^0,c
 49901  002F7C  0E06               	movlw	high _port_data
 49902  002F7E  6E2B               	movwf	(btemp+1)^0,c
 49903                           
 49904                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49905  002F80  0012               	return		;funcret
 49906  002F82                     __end_of_port_data_dma_ptr:
 49907                           	opt callstack 0
 49908                           
 49909 ;; *************** function ___asfladd *****************
 49910 ;; Defined at:
 49911 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 49912 ;; Parameters:    Size  Location     Type
 49913 ;;  f1p             2  [STACK] PTR 
 49914 ;;		 -> C(320), 
 49915 ;;  f2              4  [STACK] PTR 
 49916 ;; Auto vars:     Size  Location     Type
 49917 ;;		None
 49918 ;; Return value:  Size  Location     Type
 49919 ;;                  4  [STACK] PTR 
 49920 ;; Registers used:
 49921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 49922 ;; Tracked objects:
 49923 ;;		On entry : 0/0
 49924 ;;		On exit  : 0/0
 49925 ;;		Unchanged: 0/0
 49926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49931 ;;Total ram usage:        0 bytes
 49932 ;; Hardware stack levels used:    1
 49933 ;; Hardware stack levels required when called:    4
 49934 ;; This function calls:
 49935 ;;		___fladd
 49936 ;; This function is called by:
 49937 ;;		_calc_bsoc
 49938 ;; This function uses a reentrant model
 49939 ;;
 49940                           
 49941                           	psect	text205
 49942  001900                     __ptext205:
 49943                           	opt callstack 0
 49944  001900                     ___asfladd:
 49945                           	opt callstack 10
 49946                           
 49947                           ;	Return value of ___asfladd is never used
 49948                           ;stkvar	_f2 @ sp[(0)+-6]
 49949                           
 49950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49951                           ;incstack = 0
 49952  001900  0EFA               	movlw	-6
 49953  001902  006F FF8F FFE6     	movff	plusw1,postinc1
 49954  001908  006F FF8F FFE6     	movff	plusw1,postinc1
 49955  00190E  006F FF8F FFE6     	movff	plusw1,postinc1
 49956  001914  006F FF8F FFE6     	movff	plusw1,postinc1
 49957                           
 49958                           ;stkvar	_f1p @ sp[(-4)+-2]
 49959  00191A  0EFA               	movlw	-6
 49960  00191C  006F FF8F FFD9     	movff	plusw1,fsr2l
 49961  001922  0EFB               	movlw	-5
 49962  001924  006F FF8F FFDA     	movff	plusw1,fsr2h
 49963  00192A  006F FF7B FFE6     	movff	postinc2,postinc1
 49964  001930  006F FF7B FFE6     	movff	postinc2,postinc1
 49965  001936  006F FF7B FFE6     	movff	postinc2,postinc1
 49966  00193C  006F FF7B FFE6     	movff	postinc2,postinc1
 49967  001942  EC7C  F0BC         	call	___fladd	;wreg free
 49968                           
 49969                           ;stkvar	_f1p @ sp[(0)+-2]
 49970  001946  0EFE               	movlw	-2
 49971  001948  006F FF8F FFD9     	movff	plusw1,fsr2l
 49972  00194E  0EFF               	movlw	-1
 49973  001950  006F FF8F FFDA     	movff	plusw1,fsr2h
 49974  001956  0060  F0AB  FFDE   	movff	btemp,postinc2
 49975  00195C  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 49976  001962  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 49977  001968  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 49978                           
 49979                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 49980  00196E  0EFA               	movlw	250
 49981  001970  26E1               	addwf	fsr1l,f,c
 49982  001972  0EFF               	movlw	255
 49983  001974  22E2               	addwfc	fsr1h,f,c
 49984  001976  0012               	return		;funcret
 49985  001978                     __end_of___asfladd:
 49986                           	opt callstack 0
 49987                           
 49988 ;; *************** function _INT0_ISR *****************
 49989 ;; Defined at:
 49990 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 49991 ;; Parameters:    Size  Location     Type
 49992 ;;		None
 49993 ;; Auto vars:     Size  Location     Type
 49994 ;;		None
 49995 ;; Return value:  Size  Location     Type
 49996 ;;                  1    wreg      void 
 49997 ;; Registers used:
 49998 ;;		wreg, status,2, status,0, pclath, tosl
 49999 ;; Tracked objects:
 50000 ;;		On entry : 0/0
 50001 ;;		On exit  : 0/0
 50002 ;;		Unchanged: 0/0
 50003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50008 ;;Total ram usage:        0 bytes
 50009 ;; Hardware stack levels used:    1
 50010 ;; Hardware stack levels required when called:    2
 50011 ;; This function calls:
 50012 ;;		_INT0_CallBack
 50013 ;; This function is called by:
 50014 ;;		Interrupt level 2
 50015 ;; This function uses a non-reentrant model
 50016 ;;
 50017                           
 50018                           	psect	text206
 50019  002F50                     __ptext206:
 50020                           	opt callstack 0
 50021  002F50                     _INT0_ISR:
 50022                           	opt callstack 3
 50023                           
 50024                           ;incstack = 0
 50025  002F50  EE14  F32C         	lfsr	1,___inthi_sp
 50026                           
 50027                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 50028  002F54  0139               	movlb	57	; () banked
 50029  002F56  91A1               	bcf	161,0,b	;volatile
 50030                           
 50031                           ; BSR set to: 57
 50032                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 50033  002F58  EC36  F016         	call	_INT0_CallBack	;wreg free
 50034  002F5C  0011               	retfie		f
 50035  002F5E                     __end_of_INT0_ISR:
 50036                           	opt callstack 0
 50037                           
 50038 ;; *************** function _INT0_CallBack *****************
 50039 ;; Defined at:
 50040 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 50041 ;; Parameters:    Size  Location     Type
 50042 ;;		None
 50043 ;; Auto vars:     Size  Location     Type
 50044 ;;		None
 50045 ;; Return value:  Size  Location     Type
 50046 ;;                  1  [STACK] void 
 50047 ;; Registers used:
 50048 ;;		wreg, status,2, status,0, pclath, tosl
 50049 ;; Tracked objects:
 50050 ;;		On entry : 3F/39
 50051 ;;		On exit  : 0/0
 50052 ;;		Unchanged: 0/0
 50053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50058 ;;Total ram usage:        0 bytes
 50059 ;; Hardware stack levels used:    1
 50060 ;; Hardware stack levels required when called:    1
 50061 ;; This function calls:
 50062 ;;		Absolute function
 50063 ;;		_INT0_DefaultInterruptHandler
 50064 ;; This function is called by:
 50065 ;;		_INT0_ISR
 50066 ;; This function uses a reentrant model
 50067 ;;
 50068                           
 50069                           	psect	text207
 50070  002C6C                     __ptext207:
 50071                           	opt callstack 0
 50072  002C6C                     _INT0_CallBack:
 50073                           	opt callstack 3
 50074                           
 50075                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 50076                           
 50077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50078                           ;incstack = 0
 50079  002C6C  0100               	movlb	0	; () banked
 50080  002C6E  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 50081  002C70  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 50082  002C72  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 50083  002C74  B4D8               	btfsc	status,2,c
 50084  002C76  0012               	return	
 50085                           
 50086                           ; BSR set to: 0
 50087                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 50088  002C78  D801               	call	u1325_48
 50089  002C7A  0012               	return	
 50090  002C7C                     u1325_48:
 50091  002C7C  0005               	push	
 50092  002C7E  6EFA               	movwf	pclath,c
 50093  002C80  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 50094  002C82  6EFD               	movwf	tosl,c
 50095  002C84  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 50096  002C86  6EFE               	movwf	tosh,c
 50097  002C88  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 50098  002C8A  6EFF               	movwf	tosu,c
 50099  002C8C  50FA               	movf	pclath,w,c
 50100  002C8E  0012               	return		;indir
 50101  002C90                     __end_of_INT0_CallBack:
 50102                           	opt callstack 0
 50103                           
 50104 ;; *************** function _INT0_DefaultInterruptHandler *****************
 50105 ;; Defined at:
 50106 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 50107 ;; Parameters:    Size  Location     Type
 50108 ;;		None
 50109 ;; Auto vars:     Size  Location     Type
 50110 ;;		None
 50111 ;; Return value:  Size  Location     Type
 50112 ;;                  1  [STACK] void 
 50113 ;; Registers used:
 50114 ;;		None
 50115 ;; Tracked objects:
 50116 ;;		On entry : 3F/0
 50117 ;;		On exit  : 0/0
 50118 ;;		Unchanged: 0/0
 50119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50124 ;;Total ram usage:        0 bytes
 50125 ;; Hardware stack levels used:    1
 50126 ;; This function calls:
 50127 ;;		Nothing
 50128 ;; This function is called by:
 50129 ;;		_EXT_INT_Initialize
 50130 ;;		_INT0_CallBack
 50131 ;; This function uses a reentrant model
 50132 ;;
 50133                           
 50134                           	psect	text208
 50135  002FFE                     __ptext208:
 50136                           	opt callstack 0
 50137  002FFE                     _INT0_DefaultInterruptHandler:
 50138                           	opt callstack 3
 50139                           
 50140                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50141                           
 50142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50143                           ;incstack = 0
 50144  002FFE  0012               	return		;funcret
 50145  003000                     __end_of_INT0_DefaultInterruptHandler:
 50146                           	opt callstack 0
 50147                           
 50148 ;; *************** function _Default_ISR *****************
 50149 ;; Defined at:
 50150 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 50151 ;; Parameters:    Size  Location     Type
 50152 ;;		None
 50153 ;; Auto vars:     Size  Location     Type
 50154 ;;		None
 50155 ;; Return value:  Size  Location     Type
 50156 ;;                  1    wreg      void 
 50157 ;; Registers used:
 50158 ;;		None
 50159 ;; Tracked objects:
 50160 ;;		On entry : 0/0
 50161 ;;		On exit  : 0/0
 50162 ;;		Unchanged: 0/0
 50163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50168 ;;Total ram usage:        0 bytes
 50169 ;; Hardware stack levels used:    1
 50170 ;; This function calls:
 50171 ;;		Nothing
 50172 ;; This function is called by:
 50173 ;;		Interrupt level 2
 50174 ;; This function uses a non-reentrant model
 50175 ;;
 50176                           
 50177                           	psect	text209
 50178  002FF4                     __ptext209:
 50179                           	opt callstack 0
 50180  002FF4                     _Default_ISR:
 50181                           	opt callstack 5
 50182                           
 50183                           ;incstack = 0
 50184  002FF4  EE14  F32C         	lfsr	1,___inthi_sp
 50185  002FF8  0011               	retfie		f
 50186  002FFA                     __end_of_Default_ISR:
 50187                           	opt callstack 0
 50188                           
 50189 ;; *************** function _ADCC_ISR *****************
 50190 ;; Defined at:
 50191 ;;		line 314 in file "mcc_generated_files/adcc.c"
 50192 ;; Parameters:    Size  Location     Type
 50193 ;;		None
 50194 ;; Auto vars:     Size  Location     Type
 50195 ;;		None
 50196 ;; Return value:  Size  Location     Type
 50197 ;;                  1    wreg      void 
 50198 ;; Registers used:
 50199 ;;		wreg, status,2, status,0, pclath, tosl
 50200 ;; Tracked objects:
 50201 ;;		On entry : 0/0
 50202 ;;		On exit  : 0/0
 50203 ;;		Unchanged: 0/0
 50204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50209 ;;Total ram usage:        0 bytes
 50210 ;; Hardware stack levels used:    1
 50211 ;; Hardware stack levels required when called:    1
 50212 ;; This function calls:
 50213 ;;		Absolute function
 50214 ;;		_ADCC_DefaultInterruptHandler
 50215 ;;		_adc_int_handler
 50216 ;; This function is called by:
 50217 ;;		Interrupt level 2
 50218 ;; This function uses a non-reentrant model
 50219 ;;
 50220                           
 50221                           	psect	text210
 50222  002900                     __ptext210:
 50223                           	opt callstack 0
 50224  002900                     _ADCC_ISR:
 50225                           	opt callstack 4
 50226                           
 50227                           ;incstack = 0
 50228  002900  EE14  F32C         	lfsr	1,___inthi_sp
 50229                           
 50230                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 50231  002904  0139               	movlb	57	; () banked
 50232  002906  95A1               	bcf	161,2,b	;volatile
 50233                           
 50234                           ; BSR set to: 57
 50235                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 50236  002908  0100               	movlb	0	; () banked
 50237  00290A  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 50238  00290C  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 50239  00290E  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 50240  002910  B4D8               	btfsc	status,2,c
 50241  002912  0011               	retfie		f
 50242                           
 50243                           ; BSR set to: 0
 50244                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 50245  002914  D801               	call	i2u1396_48
 50246  002916  0011               	retfie		f
 50247  002918                     i2u1396_48:
 50248  002918  0005               	push	
 50249  00291A  6EFA               	movwf	pclath,c
 50250  00291C  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 50251  00291E  6EFD               	movwf	tosl,c
 50252  002920  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 50253  002922  6EFE               	movwf	tosh,c
 50254  002924  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 50255  002926  6EFF               	movwf	tosu,c
 50256  002928  50FA               	movf	pclath,w,c
 50257  00292A  0012               	return		;indir
 50258  00292C                     __end_of_ADCC_ISR:
 50259                           	opt callstack 0
 50260                           
 50261 ;; *************** function _adc_int_t_handler *****************
 50262 ;; Defined at:
 50263 ;;		line 183 in file "daq.c"
 50264 ;; Parameters:    Size  Location     Type
 50265 ;;		None
 50266 ;; Auto vars:     Size  Location     Type
 50267 ;;		None
 50268 ;; Return value:  Size  Location     Type
 50269 ;;                  1  [STACK] void 
 50270 ;; Registers used:
 50271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 50272 ;; Tracked objects:
 50273 ;;		On entry : 3F/0
 50274 ;;		On exit  : 0/0
 50275 ;;		Unchanged: 0/0
 50276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50281 ;;Total ram usage:        0 bytes
 50282 ;; Hardware stack levels used:    1
 50283 ;; Hardware stack levels required when called:    1
 50284 ;; This function calls:
 50285 ;;		_ADCC_DischargeSampleCapacitor
 50286 ;;		_ADCC_StartConversion
 50287 ;; This function is called by:
 50288 ;;		_start_adc_scan
 50289 ;;		_ADCC_ThresholdISR
 50290 ;; This function uses a reentrant model
 50291 ;;
 50292                           
 50293                           	psect	text211
 50294  001708                     __ptext211:
 50295                           	opt callstack 0
 50296  001708                     _adc_int_t_handler:
 50297                           	opt callstack 3
 50298                           
 50299                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 50300                           
 50301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50302                           ;incstack = 0
 50303  001708  013E               	movlb	62	; () banked
 50304  00170A  51E6               	movf	230,w,b	;volatile
 50305  00170C  006F FB9C  F02A    	movff	16103,btemp	;volatile
 50306  001712  6A2B               	clrf	(btemp+1)^0,c
 50307  001714  0060  F0A8  F02B   	movff	btemp,btemp+1
 50308  00171A  6A2A               	clrf	btemp^0,c
 50309  00171C  262A               	addwf	btemp^0,f,c
 50310  00171E  0E00               	movlw	0
 50311  001720  222B               	addwfc	(btemp+1)^0,f,c
 50312  001722  0101               	movlb	1	; () banked
 50313  001724  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50314  001726  0D02               	mullw	2
 50315  001728  0E00               	movlw	low _R
 50316  00172A  24F3               	addwf	243,w,c
 50317  00172C  6ED9               	movwf	fsr2l,c
 50318  00172E  0E01               	movlw	high _R
 50319  001730  20F4               	addwfc	prodh,w,c
 50320  001732  6EDA               	movwf	fsr2h,c
 50321  001734  0060  F0AB  FFDE   	movff	btemp,postinc2
 50322  00173A  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 50323  001740                     l14811:
 50324                           
 50325                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 50326  001740  0101               	movlb	1	; () banked
 50327  001742  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 50328  001744  0E0D               	movlw	13
 50329  001746  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 50330  001748  D003               	goto	l14817
 50331                           
 50332                           ; BSR set to: 1
 50333                           ;daq.c: 191:    R.done = 1;
 50334  00174A  0E01               	movlw	1
 50335  00174C  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 50336  00174E  0012               	return	
 50337  001750                     l14817:
 50338                           
 50339                           ; BSR set to: 1
 50340                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 50341  001750  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 50342  001756  EE20  F133         	lfsr	2,_R+51	;volatile
 50343  00175A  006F FF78  F032    	movff	postinc2,btemp+8
 50344  001760  006F FF74  F033    	movff	postdec2,btemp+9
 50345  001766  2A35               	incf	(btemp+11)^0,f,c
 50346  001768  D003               	goto	u1393_44
 50347  00176A                     u1393_45:
 50348  00176A  90D8               	bcf	status,0,c
 50349  00176C  3233               	rrcf	(btemp+9)^0,f,c
 50350  00176E  3232               	rrcf	(btemp+8)^0,f,c
 50351  001770                     u1393_44:
 50352  001770  2E35               	decfsz	(btemp+11)^0,f,c
 50353  001772  D7FB               	goto	u1393_45
 50354  001774  A032               	btfss	(btemp+8)^0,0,c
 50355  001776  D7E4               	goto	l14811
 50356                           
 50357                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 50358  001778  ECD7  F017         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 50359                           
 50360                           ; BSR set to: 62
 50361                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 50362  00177C  0101               	movlb	1	; () banked
 50363  00177E  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50364  001780  0B0F               	andlw	15
 50365  001782  6EE6               	movwf	postinc1,c
 50366  001784  EC5A  F017         	call	_ADCC_StartConversion	;wreg free
 50367                           
 50368                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50369  001788  0012               	return		;funcret
 50370  00178A                     __end_of_adc_int_t_handler:
 50371                           	opt callstack 0
 50372                           
 50373 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 50374 ;; Defined at:
 50375 ;;		line 339 in file "mcc_generated_files/adcc.c"
 50376 ;; Parameters:    Size  Location     Type
 50377 ;;		None
 50378 ;; Auto vars:     Size  Location     Type
 50379 ;;		None
 50380 ;; Return value:  Size  Location     Type
 50381 ;;                  1  [STACK] void 
 50382 ;; Registers used:
 50383 ;;		None
 50384 ;; Tracked objects:
 50385 ;;		On entry : 3F/0
 50386 ;;		On exit  : 0/0
 50387 ;;		Unchanged: 0/0
 50388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50393 ;;Total ram usage:        0 bytes
 50394 ;; Hardware stack levels used:    1
 50395 ;; This function calls:
 50396 ;;		Nothing
 50397 ;; This function is called by:
 50398 ;;		_ADCC_Initialize
 50399 ;;		_ADCC_ISR
 50400 ;;		_ADCC_ThresholdISR
 50401 ;; This function uses a reentrant model
 50402 ;;
 50403                           
 50404                           	psect	text212
 50405  003000                     __ptext212:
 50406                           	opt callstack 0
 50407  003000                     _ADCC_DefaultInterruptHandler:
 50408                           	opt callstack 4
 50409                           
 50410                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50411                           
 50412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50413                           ;incstack = 0
 50414  003000  0012               	return		;funcret
 50415  003002                     __end_of_ADCC_DefaultInterruptHandler:
 50416                           	opt callstack 0
 50417                           
 50418 ;; *************** function _adc_int_handler *****************
 50419 ;; Defined at:
 50420 ;;		line 173 in file "daq.c"
 50421 ;; Parameters:    Size  Location     Type
 50422 ;;		None
 50423 ;; Auto vars:     Size  Location     Type
 50424 ;;		None
 50425 ;; Return value:  Size  Location     Type
 50426 ;;                  1  [STACK] void 
 50427 ;; Registers used:
 50428 ;;		None
 50429 ;; Tracked objects:
 50430 ;;		On entry : 3F/0
 50431 ;;		On exit  : 0/0
 50432 ;;		Unchanged: 0/0
 50433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50438 ;;Total ram usage:        0 bytes
 50439 ;; Hardware stack levels used:    1
 50440 ;; This function calls:
 50441 ;;		Nothing
 50442 ;; This function is called by:
 50443 ;;		_start_adc_scan
 50444 ;;		_ADCC_ISR
 50445 ;; This function uses a reentrant model
 50446 ;;
 50447                           
 50448                           	psect	text213
 50449  003002                     __ptext213:
 50450                           	opt callstack 0
 50451  003002                     _adc_int_handler:
 50452                           	opt callstack 4
 50453                           
 50454                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 50455                           
 50456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50457                           ;incstack = 0
 50458  003002  0012               	return		;funcret
 50459  003004                     __end_of_adc_int_handler:
 50460                           	opt callstack 0
 50461                           
 50462 ;; *************** function _ADCC_ThresholdISR *****************
 50463 ;; Defined at:
 50464 ;;		line 327 in file "mcc_generated_files/adcc.c"
 50465 ;; Parameters:    Size  Location     Type
 50466 ;;		None
 50467 ;; Auto vars:     Size  Location     Type
 50468 ;;		None
 50469 ;; Return value:  Size  Location     Type
 50470 ;;                  1    wreg      void 
 50471 ;; Registers used:
 50472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 50473 ;; Tracked objects:
 50474 ;;		On entry : 0/0
 50475 ;;		On exit  : 0/0
 50476 ;;		Unchanged: 0/0
 50477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50480 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50481 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50482 ;;Total ram usage:        5 bytes
 50483 ;; Hardware stack levels used:    1
 50484 ;; Hardware stack levels required when called:    2
 50485 ;; This function calls:
 50486 ;;		Absolute function
 50487 ;;		_ADCC_DefaultInterruptHandler
 50488 ;;		_adc_int_t_handler
 50489 ;; This function is called by:
 50490 ;;		Interrupt level 2
 50491 ;; This function uses a non-reentrant model
 50492 ;;
 50493                           
 50494                           	psect	text214
 50495  001AC0                     __ptext214:
 50496                           	opt callstack 0
 50497  001AC0                     _ADCC_ThresholdISR:
 50498                           	opt callstack 3
 50499                           
 50500                           ;incstack = 0
 50501  001AC0  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 50502  001AC6  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 50503  001ACC  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 50504  001AD2  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 50505  001AD8  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 50506  001ADE  EE14  F32C         	lfsr	1,___inthi_sp
 50507                           
 50508                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 50509  001AE2  0139               	movlb	57	; () banked
 50510  001AE4  97A1               	bcf	161,3,b	;volatile
 50511                           
 50512                           ; BSR set to: 57
 50513                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 50514  001AE6  0100               	movlb	0	; () banked
 50515  001AE8  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50516  001AEA  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50517  001AEC  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50518  001AEE  B4D8               	btfsc	status,2,c
 50519  001AF0  D00C               	goto	i2u1398_49
 50520                           
 50521                           ; BSR set to: 0
 50522                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 50523  001AF2  D801               	call	i2u1398_48
 50524  001AF4  D00A               	goto	i2u1398_49
 50525  001AF6                     i2u1398_48:
 50526  001AF6  0005               	push	
 50527  001AF8  6EFA               	movwf	pclath,c
 50528  001AFA  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50529  001AFC  6EFD               	movwf	tosl,c
 50530  001AFE  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50531  001B00  6EFE               	movwf	tosh,c
 50532  001B02  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50533  001B04  6EFF               	movwf	tosu,c
 50534  001B06  50FA               	movf	pclath,w,c
 50535  001B08  0012               	return		;indir
 50536  001B0A                     i2u1398_49:
 50537  001B0A  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 50538  001B10  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 50539  001B16  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 50540  001B1C  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 50541  001B22  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 50542  001B28  0011               	retfie		f
 50543  001B2A                     __end_of_ADCC_ThresholdISR:
 50544                           	opt callstack 0
 50545                           
 50546 ;; *************** function _UART1_rx_vect_isr *****************
 50547 ;; Defined at:
 50548 ;;		line 181 in file "mcc_generated_files/uart1.c"
 50549 ;; Parameters:    Size  Location     Type
 50550 ;;		None
 50551 ;; Auto vars:     Size  Location     Type
 50552 ;;		None
 50553 ;; Return value:  Size  Location     Type
 50554 ;;                  1    wreg      void 
 50555 ;; Registers used:
 50556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50557 ;; Tracked objects:
 50558 ;;		On entry : 0/0
 50559 ;;		On exit  : 0/0
 50560 ;;		Unchanged: 0/0
 50561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50566 ;;Total ram usage:        0 bytes
 50567 ;; Hardware stack levels used:    1
 50568 ;; Hardware stack levels required when called:    1
 50569 ;; This function calls:
 50570 ;;		Absolute function
 50571 ;;		_UART1_Receive_ISR
 50572 ;; This function is called by:
 50573 ;;		Interrupt level 2
 50574 ;; This function uses a non-reentrant model
 50575 ;;
 50576                           
 50577                           	psect	text215
 50578  002B64                     __ptext215:
 50579                           	opt callstack 0
 50580  002B64                     _UART1_rx_vect_isr:
 50581                           	opt callstack 4
 50582                           
 50583                           ;incstack = 0
 50584  002B64  EE14  F32C         	lfsr	1,___inthi_sp
 50585                           
 50586                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 50587  002B68  0100               	movlb	0	; () banked
 50588  002B6A  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50589  002B6C  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50590  002B6E  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50591  002B70  B4D8               	btfsc	status,2,c
 50592  002B72  0011               	retfie		f
 50593                           
 50594                           ; BSR set to: 0
 50595                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 50596  002B74  D801               	call	i2u1400_48
 50597  002B76  0011               	retfie		f
 50598  002B78                     i2u1400_48:
 50599  002B78  0005               	push	
 50600  002B7A  6EFA               	movwf	pclath,c
 50601  002B7C  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50602  002B7E  6EFD               	movwf	tosl,c
 50603  002B80  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50604  002B82  6EFE               	movwf	tosh,c
 50605  002B84  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50606  002B86  6EFF               	movwf	tosu,c
 50607  002B88  50FA               	movf	pclath,w,c
 50608  002B8A  0012               	return		;indir
 50609  002B8C                     __end_of_UART1_rx_vect_isr:
 50610                           	opt callstack 0
 50611                           
 50612 ;; *************** function _UART1_Receive_ISR *****************
 50613 ;; Defined at:
 50614 ;;		line 192 in file "mcc_generated_files/uart1.c"
 50615 ;; Parameters:    Size  Location     Type
 50616 ;;		None
 50617 ;; Auto vars:     Size  Location     Type
 50618 ;;		None
 50619 ;; Return value:  Size  Location     Type
 50620 ;;                  1  [STACK] void 
 50621 ;; Registers used:
 50622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50623 ;; Tracked objects:
 50624 ;;		On entry : 3F/0
 50625 ;;		On exit  : 3F/0
 50626 ;;		Unchanged: 0/0
 50627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50632 ;;Total ram usage:        0 bytes
 50633 ;; Hardware stack levels used:    1
 50634 ;; This function calls:
 50635 ;;		Nothing
 50636 ;; This function is called by:
 50637 ;;		_UART1_Initialize
 50638 ;;		_UART1_rx_vect_isr
 50639 ;; This function uses a reentrant model
 50640 ;;
 50641                           
 50642                           	psect	text216
 50643  002CF8                     __ptext216:
 50644                           	opt callstack 0
 50645  002CF8                     _UART1_Receive_ISR:
 50646                           	opt callstack 4
 50647                           
 50648                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 50649                           
 50650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50651                           ;incstack = 0
 50652  002CF8  0ED6               	movlw	low _uart1RxBuffer
 50653  002CFA  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 50654  002CFC  6ED9               	movwf	fsr2l,c
 50655  002CFE  6ADA               	clrf	fsr2h,c
 50656  002D00  0E02               	movlw	high _uart1RxBuffer
 50657  002D02  22DA               	addwfc	fsr2h,f,c
 50658  002D04  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 50659  002D0A  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 50660                           
 50661                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 50662  002D0C  0E07               	movlw	7
 50663  002D0E  6457               	cpfsgt	_uart1RxHead^0,c
 50664  002D10  D001               	goto	l14057
 50665                           
 50666                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 50667  002D12  6A57               	clrf	_uart1RxHead^0,c	;volatile
 50668  002D14                     l14057:
 50669                           
 50670                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 50671  002D14  0100               	movlb	0	; () banked
 50672  002D16  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 50673                           
 50674                           ; BSR set to: 0
 50675                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50676  002D18  0012               	return		;funcret
 50677  002D1A                     __end_of_UART1_Receive_ISR:
 50678                           	opt callstack 0
 50679                           
 50680 ;; *************** function _UART2_tx_vect_isr *****************
 50681 ;; Defined at:
 50682 ;;		line 195 in file "mcc_generated_files/uart2.c"
 50683 ;; Parameters:    Size  Location     Type
 50684 ;;		None
 50685 ;; Auto vars:     Size  Location     Type
 50686 ;;		None
 50687 ;; Return value:  Size  Location     Type
 50688 ;;                  1    wreg      void 
 50689 ;; Registers used:
 50690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50691 ;; Tracked objects:
 50692 ;;		On entry : 0/0
 50693 ;;		On exit  : 0/0
 50694 ;;		Unchanged: 0/0
 50695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50700 ;;Total ram usage:        0 bytes
 50701 ;; Hardware stack levels used:    1
 50702 ;; Hardware stack levels required when called:    1
 50703 ;; This function calls:
 50704 ;;		Absolute function
 50705 ;;		_UART2_Transmit_ISR
 50706 ;; This function is called by:
 50707 ;;		Interrupt level 2
 50708 ;; This function uses a non-reentrant model
 50709 ;;
 50710                           
 50711                           	psect	text217
 50712  002B8C                     __ptext217:
 50713                           	opt callstack 0
 50714  002B8C                     _UART2_tx_vect_isr:
 50715                           	opt callstack 4
 50716                           
 50717                           ; BSR set to: 0
 50718                           ;incstack = 0
 50719  002B8C  EE14  F32C         	lfsr	1,___inthi_sp
 50720                           
 50721                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 50722  002B90  0100               	movlb	0	; () banked
 50723  002B92  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50724  002B94  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50725  002B96  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50726  002B98  B4D8               	btfsc	status,2,c
 50727  002B9A  0011               	retfie		f
 50728                           
 50729                           ; BSR set to: 0
 50730                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 50731  002B9C  D801               	call	i2u1402_48
 50732  002B9E  0011               	retfie		f
 50733  002BA0                     i2u1402_48:
 50734  002BA0  0005               	push	
 50735  002BA2  6EFA               	movwf	pclath,c
 50736  002BA4  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50737  002BA6  6EFD               	movwf	tosl,c
 50738  002BA8  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50739  002BAA  6EFE               	movwf	tosh,c
 50740  002BAC  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50741  002BAE  6EFF               	movwf	tosu,c
 50742  002BB0  50FA               	movf	pclath,w,c
 50743  002BB2  0012               	return		;indir
 50744  002BB4                     __end_of_UART2_tx_vect_isr:
 50745                           	opt callstack 0
 50746                           
 50747 ;; *************** function _UART2_Transmit_ISR *****************
 50748 ;; Defined at:
 50749 ;;		line 213 in file "mcc_generated_files/uart2.c"
 50750 ;; Parameters:    Size  Location     Type
 50751 ;;		None
 50752 ;; Auto vars:     Size  Location     Type
 50753 ;;		None
 50754 ;; Return value:  Size  Location     Type
 50755 ;;                  1  [STACK] void 
 50756 ;; Registers used:
 50757 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50758 ;; Tracked objects:
 50759 ;;		On entry : 3F/0
 50760 ;;		On exit  : 3B/39
 50761 ;;		Unchanged: 0/0
 50762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50767 ;;Total ram usage:        0 bytes
 50768 ;; Hardware stack levels used:    1
 50769 ;; This function calls:
 50770 ;;		Nothing
 50771 ;; This function is called by:
 50772 ;;		_UART2_Initialize
 50773 ;;		_UART2_tx_vect_isr
 50774 ;; This function uses a reentrant model
 50775 ;;
 50776                           
 50777                           	psect	text218
 50778  00292C                     __ptext218:
 50779                           	opt callstack 0
 50780  00292C                     _UART2_Transmit_ISR:
 50781                           	opt callstack 4
 50782                           
 50783                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 50784                           
 50785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50786                           ;incstack = 0
 50787  00292C  0E40               	movlw	64
 50788  00292E  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 50789  002930  D010               	goto	l675
 50790                           
 50791                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 50792  002932  0E00               	movlw	low _uart2TxBuffer
 50793  002934  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 50794  002936  6ED9               	movwf	fsr2l,c
 50795  002938  6ADA               	clrf	fsr2h,c
 50796  00293A  0E04               	movlw	high _uart2TxBuffer
 50797  00293C  22DA               	addwfc	fsr2h,f,c
 50798  00293E  50DF               	movf	indf2,w,c
 50799  002940  013D               	movlb	61	; () banked
 50800  002942  6FD2               	movwf	210,b	;volatile
 50801                           
 50802                           ; BSR set to: 61
 50803  002944  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 50804                           
 50805                           ; BSR set to: 61
 50806                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 50807  002946  0E3F               	movlw	63
 50808  002948  6456               	cpfsgt	_uart2TxTail^0,c
 50809  00294A  D001               	goto	l14069
 50810                           
 50811                           ; BSR set to: 61
 50812                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 50813  00294C  6A56               	clrf	_uart2TxTail^0,c	;volatile
 50814  00294E                     l14069:
 50815                           
 50816                           ; BSR set to: 61
 50817                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 50818  00294E  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 50819                           
 50820                           ;mcc_generated_files/uart2.c: 224:     }
 50821  002950  0012               	return	
 50822  002952                     l675:
 50823                           
 50824                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 50825  002952  0139               	movlb	57	; () banked
 50826  002954  9796               	bcf	150,3,b	;volatile
 50827                           
 50828                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 50829  002956  0012               	return		;funcret
 50830  002958                     __end_of_UART2_Transmit_ISR:
 50831                           	opt callstack 0
 50832                           
 50833 ;; *************** function _UART2_rx_vect_isr *****************
 50834 ;; Defined at:
 50835 ;;		line 203 in file "mcc_generated_files/uart2.c"
 50836 ;; Parameters:    Size  Location     Type
 50837 ;;		None
 50838 ;; Auto vars:     Size  Location     Type
 50839 ;;		None
 50840 ;; Return value:  Size  Location     Type
 50841 ;;                  1    wreg      void 
 50842 ;; Registers used:
 50843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50844 ;; Tracked objects:
 50845 ;;		On entry : 0/0
 50846 ;;		On exit  : 0/0
 50847 ;;		Unchanged: 0/0
 50848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50853 ;;Total ram usage:        0 bytes
 50854 ;; Hardware stack levels used:    1
 50855 ;; Hardware stack levels required when called:    1
 50856 ;; This function calls:
 50857 ;;		Absolute function
 50858 ;;		_UART2_Receive_ISR
 50859 ;; This function is called by:
 50860 ;;		Interrupt level 2
 50861 ;; This function uses a non-reentrant model
 50862 ;;
 50863                           
 50864                           	psect	text219
 50865  002BB4                     __ptext219:
 50866                           	opt callstack 0
 50867  002BB4                     _UART2_rx_vect_isr:
 50868                           	opt callstack 4
 50869                           
 50870                           ;incstack = 0
 50871  002BB4  EE14  F32C         	lfsr	1,___inthi_sp
 50872                           
 50873                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 50874  002BB8  0100               	movlb	0	; () banked
 50875  002BBA  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50876  002BBC  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50877  002BBE  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50878  002BC0  B4D8               	btfsc	status,2,c
 50879  002BC2  0011               	retfie		f
 50880                           
 50881                           ; BSR set to: 0
 50882                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 50883  002BC4  D801               	call	i2u1404_48
 50884  002BC6  0011               	retfie		f
 50885  002BC8                     i2u1404_48:
 50886  002BC8  0005               	push	
 50887  002BCA  6EFA               	movwf	pclath,c
 50888  002BCC  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50889  002BCE  6EFD               	movwf	tosl,c
 50890  002BD0  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50891  002BD2  6EFE               	movwf	tosh,c
 50892  002BD4  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50893  002BD6  6EFF               	movwf	tosu,c
 50894  002BD8  50FA               	movf	pclath,w,c
 50895  002BDA  0012               	return		;indir
 50896  002BDC                     __end_of_UART2_rx_vect_isr:
 50897                           	opt callstack 0
 50898                           
 50899 ;; *************** function _UART2_Receive_ISR *****************
 50900 ;; Defined at:
 50901 ;;		line 233 in file "mcc_generated_files/uart2.c"
 50902 ;; Parameters:    Size  Location     Type
 50903 ;;		None
 50904 ;; Auto vars:     Size  Location     Type
 50905 ;;		None
 50906 ;; Return value:  Size  Location     Type
 50907 ;;                  1  [STACK] void 
 50908 ;; Registers used:
 50909 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50910 ;; Tracked objects:
 50911 ;;		On entry : 3F/0
 50912 ;;		On exit  : 3F/0
 50913 ;;		Unchanged: 0/0
 50914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50919 ;;Total ram usage:        0 bytes
 50920 ;; Hardware stack levels used:    1
 50921 ;; This function calls:
 50922 ;;		Nothing
 50923 ;; This function is called by:
 50924 ;;		_UART2_Initialize
 50925 ;;		_UART2_rx_vect_isr
 50926 ;; This function uses a reentrant model
 50927 ;;
 50928                           
 50929                           	psect	text220
 50930  002D3A                     __ptext220:
 50931                           	opt callstack 0
 50932  002D3A                     _UART2_Receive_ISR:
 50933                           	opt callstack 4
 50934                           
 50935                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 50936                           
 50937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50938                           ;incstack = 0
 50939  002D3A  0E00               	movlw	low _uart2RxBuffer
 50940  002D3C  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 50941  002D3E  6ED9               	movwf	fsr2l,c
 50942  002D40  6ADA               	clrf	fsr2h,c
 50943  002D42  0E06               	movlw	high _uart2RxBuffer
 50944  002D44  22DA               	addwfc	fsr2h,f,c
 50945  002D46  006F F743 FFDF     	movff	15824,indf2	;volatile
 50946  002D4C  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 50947                           
 50948                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 50949  002D4E  2854               	incf	_uart2RxHead^0,w,c
 50950  002D50  B4D8               	btfsc	status,2,c
 50951                           
 50952                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 50953  002D52  6A54               	clrf	_uart2RxHead^0,c	;volatile
 50954                           
 50955                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 50956  002D54  0100               	movlb	0	; () banked
 50957  002D56  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 50958                           
 50959                           ; BSR set to: 0
 50960                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50961  002D58  0012               	return		;funcret
 50962  002D5A                     __end_of_UART2_Receive_ISR:
 50963                           	opt callstack 0
 50964                           
 50965 ;; *************** function _TMR6_ISR *****************
 50966 ;; Defined at:
 50967 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 50968 ;; Parameters:    Size  Location     Type
 50969 ;;		None
 50970 ;; Auto vars:     Size  Location     Type
 50971 ;;		None
 50972 ;; Return value:  Size  Location     Type
 50973 ;;                  1    wreg      void 
 50974 ;; Registers used:
 50975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50976 ;; Tracked objects:
 50977 ;;		On entry : 0/0
 50978 ;;		On exit  : 0/0
 50979 ;;		Unchanged: 0/0
 50980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50985 ;;Total ram usage:        1 bytes
 50986 ;; Hardware stack levels used:    1
 50987 ;; Hardware stack levels required when called:    2
 50988 ;; This function calls:
 50989 ;;		_TMR6_CallBack
 50990 ;; This function is called by:
 50991 ;;		Interrupt level 2
 50992 ;; This function uses a non-reentrant model
 50993 ;;
 50994                           
 50995                           	psect	text221
 50996  002DEC                     __ptext221:
 50997                           	opt callstack 0
 50998  002DEC                     _TMR6_ISR:
 50999                           	opt callstack 3
 51000                           
 51001                           ; BSR set to: 0
 51002                           ;incstack = 0
 51003  002DEC  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 51004  002DF2  EE14  F32C         	lfsr	1,___inthi_sp
 51005                           
 51006                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 51007  002DF6  0139               	movlb	57	; () banked
 51008  002DF8  91A9               	bcf	169,0,b	;volatile
 51009                           
 51010                           ; BSR set to: 57
 51011                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 51012  002DFA  EC48  F016         	call	_TMR6_CallBack	;wreg free
 51013  002DFE  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 51014  002E04  0011               	retfie		f
 51015  002E06                     __end_of_TMR6_ISR:
 51016                           	opt callstack 0
 51017                           
 51018 ;; *************** function _TMR6_CallBack *****************
 51019 ;; Defined at:
 51020 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 51021 ;; Parameters:    Size  Location     Type
 51022 ;;		None
 51023 ;; Auto vars:     Size  Location     Type
 51024 ;;		None
 51025 ;; Return value:  Size  Location     Type
 51026 ;;                  1  [STACK] void 
 51027 ;; Registers used:
 51028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 51029 ;; Tracked objects:
 51030 ;;		On entry : 3F/39
 51031 ;;		On exit  : 0/0
 51032 ;;		Unchanged: 0/0
 51033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51038 ;;Total ram usage:        0 bytes
 51039 ;; Hardware stack levels used:    1
 51040 ;; Hardware stack levels required when called:    1
 51041 ;; This function calls:
 51042 ;;		Absolute function
 51043 ;;		_TMR6_DefaultInterruptHandler
 51044 ;; This function is called by:
 51045 ;;		_TMR6_ISR
 51046 ;; This function uses a reentrant model
 51047 ;;
 51048                           
 51049                           	psect	text222
 51050  002C90                     __ptext222:
 51051                           	opt callstack 0
 51052  002C90                     _TMR6_CallBack:
 51053                           	opt callstack 3
 51054                           
 51055                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 51056                           
 51057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 51058                           ;incstack = 0
 51059  002C90  0100               	movlb	0	; () banked
 51060  002C92  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 51061  002C94  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 51062  002C96  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 51063  002C98  B4D8               	btfsc	status,2,c
 51064  002C9A  0012               	return	
 51065                           
 51066                           ; BSR set to: 0
 51067                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 51068  002C9C  D801               	call	u1333_48
 51069  002C9E  0012               	return	
 51070  002CA0                     u1333_48:
 51071  002CA0  0005               	push	
 51072  002CA2  6EFA               	movwf	pclath,c
 51073  002CA4  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 51074  002CA6  6EFD               	movwf	tosl,c
 51075  002CA8  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 51076  002CAA  6EFE               	movwf	tosh,c
 51077  002CAC  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 51078  002CAE  6EFF               	movwf	tosu,c
 51079  002CB0  50FA               	movf	pclath,w,c
 51080  002CB2  0012               	return		;indir
 51081  002CB4                     __end_of_TMR6_CallBack:
 51082                           	opt callstack 0
 51083                           
 51084 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 51085 ;; Defined at:
 51086 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 51087 ;; Parameters:    Size  Location     Type
 51088 ;;		None
 51089 ;; Auto vars:     Size  Location     Type
 51090 ;;  i               1  [STACK] unsigned char 
 51091 ;; Return value:  Size  Location     Type
 51092 ;;                  1  [STACK] void 
 51093 ;; Registers used:
 51094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 51095 ;; Tracked objects:
 51096 ;;		On entry : 3F/0
 51097 ;;		On exit  : 0/0
 51098 ;;		Unchanged: 0/0
 51099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51104 ;;Total ram usage:        0 bytes
 51105 ;; Hardware stack levels used:    1
 51106 ;; This function calls:
 51107 ;;		Nothing
 51108 ;; This function is called by:
 51109 ;;		_TMR6_Initialize
 51110 ;;		_TMR6_CallBack
 51111 ;; This function uses a reentrant model
 51112 ;;
 51113                           
 51114                           	psect	text223
 51115  00214C                     __ptext223:
 51116                           	opt callstack 0
 51117  00214C                     _TMR6_DefaultInterruptHandler:
 51118                           	opt callstack 0
 51119                           
 51120                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 51121  00214C  52E6               	movf	postinc1,f,c
 51122                           
 51123                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 51124                           ;stkvar	_i @ sp[(-1)+0]
 51125                           
 51126                           ;incstack = 0
 51127  00214E  0EFF               	movlw	-1
 51128  002150  6AE3               	clrf	plusw1,c
 51129  002152                     l13443:
 51130                           
 51131                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 51132                           ;stkvar	_i @ sp[(-1)+0]
 51133  002152  0EFF               	movlw	-1
 51134  002154  50E3               	movf	plusw1,w,c
 51135  002156  0D02               	mullw	2
 51136  002158  0EBC               	movlw	low _tickCount
 51137  00215A  24F3               	addwf	243,w,c
 51138  00215C  6ED9               	movwf	fsr2l,c
 51139  00215E  0E02               	movlw	high _tickCount
 51140  002160  20F4               	addwfc	prodh,w,c
 51141  002162  6EDA               	movwf	fsr2h,c
 51142  002164  50DE               	movf	postinc2,w,c
 51143  002166  10DE               	iorwf	postinc2,w,c
 51144  002168  B4D8               	btfsc	status,2,c
 51145  00216A  D00C               	goto	l13447
 51146                           
 51147                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 51148                           ;stkvar	_i @ sp[(-1)+0]
 51149  00216C  0EFF               	movlw	-1
 51150  00216E  50E3               	movf	plusw1,w,c
 51151  002170  0D02               	mullw	2
 51152  002172  0EBC               	movlw	low _tickCount
 51153  002174  24F3               	addwf	243,w,c
 51154  002176  6ED9               	movwf	fsr2l,c
 51155  002178  0E02               	movlw	high _tickCount
 51156  00217A  20F4               	addwfc	prodh,w,c
 51157  00217C  6EDA               	movwf	fsr2h,c
 51158  00217E  06DE               	decf	postinc2,f,c
 51159  002180  0E00               	movlw	0
 51160  002182  5ADD               	subwfb	postdec2,f,c
 51161  002184                     l13447:
 51162                           
 51163                           ;mcc_generated_files/tmr6.c: 207:  }
 51164                           ;stkvar	_i @ sp[(-1)+0]
 51165  002184  0EFF               	movlw	-1
 51166  002186  2AE3               	incf	plusw1,f,c
 51167                           
 51168                           ;stkvar	_i @ sp[(-1)+0]
 51169  002188  0EFF               	movlw	-1
 51170  00218A  006F FF8C  F02A    	movff	plusw1,btemp
 51171  002190  0E0C               	movlw	12
 51172  002192  642A               	cpfsgt	btemp^0,c
 51173  002194  D7DE               	goto	l13443
 51174                           
 51175                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 51176  002196  52E5               	movf	postdec1,f,c
 51177  002198  0012               	return		;funcret
 51178  00219A                     __end_of_TMR6_DefaultInterruptHandler:
 51179                           	opt callstack 0
 51180                           
 51181 ;; *************** function _DMA1_DMASCNT_ISR *****************
 51182 ;; Defined at:
 51183 ;;		line 126 in file "mcc_generated_files/dma1.c"
 51184 ;; Parameters:    Size  Location     Type
 51185 ;;		None
 51186 ;; Auto vars:     Size  Location     Type
 51187 ;;		None
 51188 ;; Return value:  Size  Location     Type
 51189 ;;                  1    wreg      void 
 51190 ;; Registers used:
 51191 ;;		None
 51192 ;; Tracked objects:
 51193 ;;		On entry : 0/0
 51194 ;;		On exit  : 3F/0
 51195 ;;		Unchanged: 0/0
 51196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51201 ;;Total ram usage:        0 bytes
 51202 ;; Hardware stack levels used:    1
 51203 ;; This function calls:
 51204 ;;		Nothing
 51205 ;; This function is called by:
 51206 ;;		Interrupt level 2
 51207 ;; This function uses a non-reentrant model
 51208 ;;
 51209                           
 51210                           	psect	text224
 51211  002F60                     __ptext224:
 51212                           	opt callstack 0
 51213  002F60                     _DMA1_DMASCNT_ISR:
 51214                           	opt callstack 5
 51215                           
 51216                           ;incstack = 0
 51217  002F60  EE14  F32C         	lfsr	1,___inthi_sp
 51218                           
 51219                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 51220  002F64  0139               	movlb	57	; () banked
 51221  002F66  91A2               	bcf	162,0,b	;volatile
 51222                           
 51223                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 51224  002F68  0100               	movlb	0	; () banked
 51225  002F6A  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 51226                           
 51227                           ; BSR set to: 0
 51228  002F6C  0011               	retfie		f
 51229  002F6E                     __end_of_DMA1_DMASCNT_ISR:
 51230                           	opt callstack 0
 51231                           
 51232 ;; *************** function _DMA1_DMADCNT_ISR *****************
 51233 ;; Defined at:
 51234 ;;		line 133 in file "mcc_generated_files/dma1.c"
 51235 ;; Parameters:    Size  Location     Type
 51236 ;;		None
 51237 ;; Auto vars:     Size  Location     Type
 51238 ;;		None
 51239 ;; Return value:  Size  Location     Type
 51240 ;;                  1    wreg      void 
 51241 ;; Registers used:
 51242 ;;		None
 51243 ;; Tracked objects:
 51244 ;;		On entry : 0/0
 51245 ;;		On exit  : 3F/39
 51246 ;;		Unchanged: 0/0
 51247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51252 ;;Total ram usage:        0 bytes
 51253 ;; Hardware stack levels used:    1
 51254 ;; This function calls:
 51255 ;;		Nothing
 51256 ;; This function is called by:
 51257 ;;		Interrupt level 2
 51258 ;; This function uses a non-reentrant model
 51259 ;;
 51260                           
 51261                           	psect	text225
 51262  002F84                     __ptext225:
 51263                           	opt callstack 0
 51264  002F84                     _DMA1_DMADCNT_ISR:
 51265                           	opt callstack 5
 51266                           
 51267                           ; BSR set to: 0
 51268                           ;incstack = 0
 51269  002F84  EE14  F32C         	lfsr	1,___inthi_sp
 51270                           
 51271                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 51272  002F88  0139               	movlb	57	; () banked
 51273  002F8A  93A2               	bcf	162,1,b	;volatile
 51274                           
 51275                           ; BSR set to: 57
 51276  002F8C  0011               	retfie		f
 51277  002F8E                     __end_of_DMA1_DMADCNT_ISR:
 51278                           	opt callstack 0
 51279                           
 51280 ;; *************** function _DMA1_DMAA_ISR *****************
 51281 ;; Defined at:
 51282 ;;		line 143 in file "mcc_generated_files/dma1.c"
 51283 ;; Parameters:    Size  Location     Type
 51284 ;;		None
 51285 ;; Auto vars:     Size  Location     Type
 51286 ;;		None
 51287 ;; Return value:  Size  Location     Type
 51288 ;;                  1    wreg      void 
 51289 ;; Registers used:
 51290 ;;		None
 51291 ;; Tracked objects:
 51292 ;;		On entry : 0/0
 51293 ;;		On exit  : 3F/39
 51294 ;;		Unchanged: 0/0
 51295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51300 ;;Total ram usage:        0 bytes
 51301 ;; Hardware stack levels used:    1
 51302 ;; This function calls:
 51303 ;;		Nothing
 51304 ;; This function is called by:
 51305 ;;		Interrupt level 2
 51306 ;; This function uses a non-reentrant model
 51307 ;;
 51308                           
 51309                           	psect	text226
 51310  002F90                     __ptext226:
 51311                           	opt callstack 0
 51312  002F90                     _DMA1_DMAA_ISR:
 51313                           	opt callstack 5
 51314                           
 51315                           ; BSR set to: 57
 51316                           ;incstack = 0
 51317  002F90  EE14  F32C         	lfsr	1,___inthi_sp
 51318                           
 51319                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 51320  002F94  0139               	movlb	57	; () banked
 51321  002F96  97A2               	bcf	162,3,b	;volatile
 51322                           
 51323                           ; BSR set to: 57
 51324  002F98  0011               	retfie		f
 51325  002F9A                     __end_of_DMA1_DMAA_ISR:
 51326                           	opt callstack 0
 51327                           
 51328 ;; *************** function _DMA1_DMAOR_ISR *****************
 51329 ;; Defined at:
 51330 ;;		line 154 in file "mcc_generated_files/dma1.c"
 51331 ;; Parameters:    Size  Location     Type
 51332 ;;		None
 51333 ;; Auto vars:     Size  Location     Type
 51334 ;;		None
 51335 ;; Return value:  Size  Location     Type
 51336 ;;                  1    wreg      void 
 51337 ;; Registers used:
 51338 ;;		None
 51339 ;; Tracked objects:
 51340 ;;		On entry : 0/0
 51341 ;;		On exit  : 3F/39
 51342 ;;		Unchanged: 0/0
 51343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51348 ;;Total ram usage:        0 bytes
 51349 ;; Hardware stack levels used:    1
 51350 ;; This function calls:
 51351 ;;		Nothing
 51352 ;; This function is called by:
 51353 ;;		Interrupt level 2
 51354 ;; This function uses a non-reentrant model
 51355 ;;
 51356                           
 51357                           	psect	text227
 51358  002F9C                     __ptext227:
 51359                           	opt callstack 0
 51360  002F9C                     _DMA1_DMAOR_ISR:
 51361                           	opt callstack 5
 51362                           
 51363                           ; BSR set to: 57
 51364                           ;incstack = 0
 51365  002F9C  EE14  F32C         	lfsr	1,___inthi_sp
 51366                           
 51367                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 51368  002FA0  0139               	movlb	57	; () banked
 51369  002FA2  95A2               	bcf	162,2,b	;volatile
 51370                           
 51371                           ; BSR set to: 57
 51372  002FA4  0011               	retfie		f
 51373  002FA6                     __end_of_DMA1_DMAOR_ISR:
 51374                           	opt callstack 0
 51375                           
 51376                           ;
 51377                           ; Interrupt Vector Table @ 0x8
 51378                           ;
 51379                           
 51380                           	psect	ivt0x8
 51381  000008                     __pivt0x8:
 51382                           	opt callstack 0
 51383  000008                     ivt0x8_base:
 51384                           	opt callstack 0
 51385                           
 51386                           ; Vector 0 : SWINT
 51387  000008  0BFD               	dw	_Default_ISR shr (0+2)
 51388                           
 51389                           ; Vector 1 : HLVD
 51390  00000A  0BFD               	dw	_Default_ISR shr (0+2)
 51391                           
 51392                           ; Vector 2 : OSF
 51393  00000C  0BFD               	dw	_Default_ISR shr (0+2)
 51394                           
 51395                           ; Vector 3 : CSW
 51396  00000E  0BFD               	dw	_Default_ISR shr (0+2)
 51397                           
 51398                           ; Vector 4 : NVM
 51399  000010  0BFD               	dw	_Default_ISR shr (0+2)
 51400                           
 51401                           ; Vector 5 : SCAN
 51402  000012  0BFD               	dw	_Default_ISR shr (0+2)
 51403                           
 51404                           ; Vector 6 : CRC
 51405  000014  0BFD               	dw	_Default_ISR shr (0+2)
 51406                           
 51407                           ; Vector 7 : IOC
 51408  000016  0BFD               	dw	_Default_ISR shr (0+2)
 51409                           
 51410                           ; Vector 8 : INT0
 51411  000018  0BD4               	dw	_INT0_ISR shr (0+2)
 51412                           
 51413                           ; Vector 9 : ZCD
 51414  00001A  0BFD               	dw	_Default_ISR shr (0+2)
 51415                           
 51416                           ; Vector 10 : AD
 51417  00001C  0A40               	dw	_ADCC_ISR shr (0+2)
 51418                           
 51419                           ; Vector 11 : ADT
 51420  00001E  06B0               	dw	_ADCC_ThresholdISR shr (0+2)
 51421                           
 51422                           ; Vector 12 : CMP1
 51423  000020  0BFD               	dw	_Default_ISR shr (0+2)
 51424                           
 51425                           ; Vector 13 : SMT1
 51426  000022  0BFD               	dw	_Default_ISR shr (0+2)
 51427                           
 51428                           ; Vector 14 : SMT1PRA
 51429  000024  0BFD               	dw	_Default_ISR shr (0+2)
 51430                           
 51431                           ; Vector 15 : SMT1PRW
 51432  000026  0BFD               	dw	_Default_ISR shr (0+2)
 51433                           
 51434                           ; Vector 16 : DMA1SCNT
 51435  000028  0BD8               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 51436                           
 51437                           ; Vector 17 : DMA1DCNT
 51438  00002A  0BE1               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 51439                           
 51440                           ; Vector 18 : DMA1OR
 51441  00002C  0BE7               	dw	_DMA1_DMAOR_ISR shr (0+2)
 51442                           
 51443                           ; Vector 19 : DMA1A
 51444  00002E  0BE4               	dw	_DMA1_DMAA_ISR shr (0+2)
 51445                           
 51446                           ; Vector 20 : SPI1RX
 51447  000030  0BFD               	dw	_Default_ISR shr (0+2)
 51448                           
 51449                           ; Vector 21 : SPI1TX
 51450  000032  0BFD               	dw	_Default_ISR shr (0+2)
 51451                           
 51452                           ; Vector 22 : SPI1
 51453  000034  0BFD               	dw	_Default_ISR shr (0+2)
 51454                           
 51455                           ; Vector 23 : I2C1RX
 51456  000036  0BFD               	dw	_Default_ISR shr (0+2)
 51457                           
 51458                           ; Vector 24 : I2C1TX
 51459  000038  0BFD               	dw	_Default_ISR shr (0+2)
 51460                           
 51461                           ; Vector 25 : I2C1
 51462  00003A  0BFD               	dw	_Default_ISR shr (0+2)
 51463                           
 51464                           ; Vector 26 : I2C1E
 51465  00003C  0BFD               	dw	_Default_ISR shr (0+2)
 51466                           
 51467                           ; Vector 27 : U1RX
 51468  00003E  0AD9               	dw	_UART1_rx_vect_isr shr (0+2)
 51469                           
 51470                           ; Vector 28 : U1TX
 51471  000040  0BFD               	dw	_Default_ISR shr (0+2)
 51472                           
 51473                           ; Vector 29 : U1E
 51474  000042  0BFD               	dw	_Default_ISR shr (0+2)
 51475                           
 51476                           ; Vector 30 : U1
 51477  000044  0BFD               	dw	_Default_ISR shr (0+2)
 51478                           
 51479                           ; Vector 31 : TMR0
 51480  000046  0BFD               	dw	_Default_ISR shr (0+2)
 51481                           
 51482                           ; Vector 32 : TMR1
 51483  000048  0BFD               	dw	_Default_ISR shr (0+2)
 51484                           
 51485                           ; Vector 33 : TMR1G
 51486  00004A  0BFD               	dw	_Default_ISR shr (0+2)
 51487                           
 51488                           ; Vector 34 : TMR2
 51489  00004C  0BFD               	dw	_Default_ISR shr (0+2)
 51490                           
 51491                           ; Vector 35 : CCP1
 51492  00004E  0BFD               	dw	_Default_ISR shr (0+2)
 51493                           
 51494                           ; Vector 36 : Undefined
 51495  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 51496                           
 51497                           ; Vector 37 : NCO1
 51498  000052  0BFD               	dw	_Default_ISR shr (0+2)
 51499                           
 51500                           ; Vector 38 : CWG1
 51501  000054  0BFD               	dw	_Default_ISR shr (0+2)
 51502                           
 51503                           ; Vector 39 : CLC1
 51504  000056  0BFD               	dw	_Default_ISR shr (0+2)
 51505                           
 51506                           ; Vector 40 : INT1
 51507  000058  0955               	dw	_INT1_ISR shr (0+2)
 51508                           
 51509                           ; Vector 41 : CMP2
 51510  00005A  0BFD               	dw	_Default_ISR shr (0+2)
 51511                           
 51512                           ; Vector 42 : DMA2SCNT
 51513  00005C  0BFD               	dw	_Default_ISR shr (0+2)
 51514                           
 51515                           ; Vector 43 : DMA2DCNT
 51516  00005E  0BFD               	dw	_Default_ISR shr (0+2)
 51517                           
 51518                           ; Vector 44 : DMA2OR
 51519  000060  0BFD               	dw	_Default_ISR shr (0+2)
 51520                           
 51521                           ; Vector 45 : DMA2A
 51522  000062  0BFD               	dw	_Default_ISR shr (0+2)
 51523                           
 51524                           ; Vector 46 : I2C2RX
 51525  000064  0BFD               	dw	_Default_ISR shr (0+2)
 51526                           
 51527                           ; Vector 47 : I2C2TX
 51528  000066  0BFD               	dw	_Default_ISR shr (0+2)
 51529                           
 51530                           ; Vector 48 : I2C2
 51531  000068  0BFD               	dw	_Default_ISR shr (0+2)
 51532                           
 51533                           ; Vector 49 : I2C2E
 51534  00006A  0BFD               	dw	_Default_ISR shr (0+2)
 51535                           
 51536                           ; Vector 50 : U2RX
 51537  00006C  0AED               	dw	_UART2_rx_vect_isr shr (0+2)
 51538                           
 51539                           ; Vector 51 : U2TX
 51540  00006E  0AE3               	dw	_UART2_tx_vect_isr shr (0+2)
 51541                           
 51542                           ; Vector 52 : U2E
 51543  000070  0BFD               	dw	_Default_ISR shr (0+2)
 51544                           
 51545                           ; Vector 53 : U2
 51546  000072  0BFD               	dw	_Default_ISR shr (0+2)
 51547                           
 51548                           ; Vector 54 : TMR3
 51549  000074  7BCD               	dw	_TMR3_ISR shr (0+2)
 51550                           
 51551                           ; Vector 55 : TMR3G
 51552  000076  0BFD               	dw	_Default_ISR shr (0+2)
 51553                           
 51554                           ; Vector 56 : TMR4
 51555  000078  0BFD               	dw	_Default_ISR shr (0+2)
 51556                           
 51557                           ; Vector 57 : CCP2
 51558  00007A  0BFD               	dw	_Default_ISR shr (0+2)
 51559                           
 51560                           ; Vector 58 : Undefined
 51561  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 51562                           
 51563                           ; Vector 59 : CWG2
 51564  00007E  0BFD               	dw	_Default_ISR shr (0+2)
 51565                           
 51566                           ; Vector 60 : CLC2
 51567  000080  0BFD               	dw	_Default_ISR shr (0+2)
 51568                           
 51569                           ; Vector 61 : INT2
 51570  000082  0BFD               	dw	_Default_ISR shr (0+2)
 51571                           
 51572                           ; Vector 62 : Undefined
 51573  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 51574                           
 51575                           ; Vector 63 : Undefined
 51576  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 51577                           
 51578                           ; Vector 64 : Undefined
 51579  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 51580                           
 51581                           ; Vector 65 : Undefined
 51582  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 51583                           
 51584                           ; Vector 66 : Undefined
 51585  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 51586                           
 51587                           ; Vector 67 : Undefined
 51588  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 51589                           
 51590                           ; Vector 68 : Undefined
 51591  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 51592                           
 51593                           ; Vector 69 : Undefined
 51594  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 51595                           
 51596                           ; Vector 70 : TMR5
 51597  000094  780A               	dw	_TMR5_ISR shr (0+2)
 51598                           
 51599                           ; Vector 71 : TMR5G
 51600  000096  0BFD               	dw	_Default_ISR shr (0+2)
 51601                           
 51602                           ; Vector 72 : TMR6
 51603  000098  0B7B               	dw	_TMR6_ISR shr (0+2)
 51604                           
 51605                           ; Vector 73 : CCP3
 51606  00009A  0BFD               	dw	_Default_ISR shr (0+2)
 51607                           
 51608                           ; Vector 74 : CWG3
 51609  00009C  0BFD               	dw	_Default_ISR shr (0+2)
 51610                           
 51611                           ; Vector 75 : CLC3
 51612  00009E  0BFD               	dw	_Default_ISR shr (0+2)
 51613                           
 51614                           ; Vector 76 : Undefined
 51615  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 51616                           
 51617                           ; Vector 77 : Undefined
 51618  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 51619                           
 51620                           ; Vector 78 : Undefined
 51621  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 51622                           
 51623                           ; Vector 79 : Undefined
 51624  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 51625                           
 51626                           ; Vector 80 : CCP4
 51627  0000A8  0BFD               	dw	_Default_ISR shr (0+2)
 51628                           
 51629                           ; Vector 81 : CLC4
 51630  0000AA  0BFD               	dw	_Default_ISR shr (0+2)
 51631  0000AC                     ivt0x8_undefint:
 51632                           	opt callstack 0
 51633  0000AC  00FF               	reset	
 51634                           
 51635                           	psect	text228
 51636  000000                     __ptext228:
 51637                           	opt callstack 0
 51638                           
 51639                           	psect	rparam
 51640  0000                     
 51641                           	psect	temp
 51642  00002A                     btemp:
 51643                           	opt callstack 0
 51644  00002A                     	ds	32
 51645  0000                     wtemp0	set	btemp
 51646  0000                     wtemp1	set	btemp+2
 51647  0000                     wtemp2	set	btemp+4
 51648  0000                     wtemp3	set	btemp+6
 51649  0000                     wtemp4	set	btemp+8
 51650  0000                     wtemp5	set	btemp+10
 51651  0000                     wtemp8	set	btemp+1
 51652  0000                     ttemp0	set	btemp
 51653  0000                     ttemp1	set	btemp+3
 51654  0000                     ttemp2	set	btemp+6
 51655  0000                     ttemp3	set	btemp+9
 51656  0000                     ttemp5	set	btemp+1
 51657  0000                     ttemp6	set	btemp+4
 51658  0000                     ttemp7	set	btemp+8
 51659  0000                     ltemp0	set	btemp
 51660  0000                     ltemp1	set	btemp+4
 51661  0000                     ltemp2	set	btemp+8
 51662  0000                     lltemp0	set	btemp
 51663  0000                     lltemp1	set	btemp+8
 51664  0000                     lltemp2	set	btemp+16
 51665  0000                     lltemp3	set	btemp+24
 51666                           tosu	equ	0x3FFF
 51667                           tosh	equ	0x3FFE
 51668                           tosl	equ	0x3FFD
 51669                           stkptr	equ	0x3FFC
 51670                           pclatu	equ	0x3FFB
 51671                           pclath	equ	0x3FFA
 51672                           pcl	equ	0x3FF9
 51673                           tblptru	equ	0x3FF8
 51674                           tblptrh	equ	0x3FF7
 51675                           tblptrl	equ	0x3FF6
 51676                           tablat	equ	0x3FF5
 51677                           prodh	equ	0x3FF4
 51678                           prodl	equ	0x3FF3
 51679                           indf0	equ	0x3FEF
 51680                           postinc0	equ	0x3FEE
 51681                           postdec0	equ	0x3FED
 51682                           preinc0	equ	0x3FEC
 51683                           plusw0	equ	0x3FEB
 51684                           fsr0h	equ	0x3FEA
 51685                           fsr0l	equ	0x3FE9
 51686                           wreg	equ	0x3FE8
 51687                           indf1	equ	0x3FE7
 51688                           postinc1	equ	0x3FE6
 51689                           postdec1	equ	0x3FE5
 51690                           preinc1	equ	0x3FE4
 51691                           plusw1	equ	0x3FE3
 51692                           fsr1h	equ	0x3FE2
 51693                           fsr1l	equ	0x3FE1
 51694                           bsr	equ	0x3FE0
 51695                           indf2	equ	0x3FDF
 51696                           postinc2	equ	0x3FDE
 51697                           postdec2	equ	0x3FDD
 51698                           preinc2	equ	0x3FDC
 51699                           plusw2	equ	0x3FDB
 51700                           fsr2h	equ	0x3FDA
 51701                           fsr2l	equ	0x3FD9
 51702                           status	equ	0x3FD8


Data Sizes:
    Strings     1692
    Constant    588
    Data        1184
    BSS         1775
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_142(CODE[1]), STR_102(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_143(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), 
		 -> STR_118(CODE[3]), STR_114(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), 
		 -> STR_118(CODE[3]), STR_114(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), 
		 -> STR_99(CODE[21]), STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), 
		 -> STR_95(CODE[21]), STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), 
		 -> STR_91(CODE[15]), STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), 
		 -> STR_81(CODE[14]), STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), 
		 -> STR_77(CODE[22]), STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), 
		 -> STR_73(CODE[22]), STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), 
		 -> STR_69(CODE[22]), STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), 
		 -> STR_53(CODE[22]), STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), 
		 -> STR_45(CODE[30]), STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[23]), STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), 
		 -> STR_21(CODE[23]), STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), 
		 -> STR_17(CODE[22]), STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), 
		 -> STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), 
		 -> STR_99(CODE[21]), STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), 
		 -> STR_95(CODE[21]), STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), 
		 -> STR_91(CODE[15]), STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), 
		 -> STR_81(CODE[14]), STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), 
		 -> STR_77(CODE[22]), STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), 
		 -> STR_73(CODE[22]), STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), 
		 -> STR_69(CODE[22]), STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), 
		 -> STR_53(CODE[22]), STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), 
		 -> STR_45(CODE[30]), STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[23]), STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), 
		 -> STR_21(CODE[23]), STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), 
		 -> STR_17(CODE[22]), STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), 
		 -> STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_84(CODE[9]), STR_83(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_84(CODE[9]), STR_83(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_109(CODE[4]), STR_108(CODE[4]), STR_105(CODE[4]), STR_104(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_109(CODE[4]), STR_108(CODE[4]), STR_105(CODE[4]), STR_104(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_82(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_81(CODE[14]), STR_80(CODE[28]), 
		 -> STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), STR_76(CODE[22]), 
		 -> STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), STR_72(CODE[22]), 
		 -> STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), STR_68(CODE[19]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), 
		 -> STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), 
		 -> STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), 
		 -> STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), 
		 -> STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), 
		 -> STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7410_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), 
		 -> STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), 
		 -> STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), 
		 -> STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_141(CODE[37]), STR_140(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), 
		 -> STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), 
		 -> STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), 
		 -> STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), 
		 -> STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), 
		 -> STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), 
		 -> STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_84(CODE[9]), 
		 -> STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_84(CODE[9]), 
		 -> STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_84(CODE[9]), STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), 
		 -> V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_84(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_83(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  440949
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    2841
                            ___fldiv
                            ___flmul
                            ___fltol
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1451
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83116
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                  17    17      0   69864
                             _WaitMs
                            ___fldiv
                           ___xxtofl
                    _cal_current_10A
                   _cal_current_zero
                     _clear_adc_scan
                       _clear_switch
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _clear_switch                                         1     0      1      66
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (2) _cal_current_10A                                     13     0     13     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  131766
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65599
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35090
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34808
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1420
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___xxtofl
     _cal_current_10A
       _check_range
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _clear_switch
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fldiv
     ___flmul
     ___fltol
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
     _wait_lcd_done
   _wait_lcd_done
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 01:03:28 2020

                         _SPI1_Exchange8bit 2D5A                    __end_of_set_display_info 2DD2  
                                         _C 08FF                                           _D 0A3F  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F823                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 2A9A                __end_of_start_switch_handler 2D3A  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1FB6                                          _r0 01E5  
                                        _r1 01DB                                          _bp F94B  
                    __end_of_FVR_Initialize 2FCE                              _check_day_time A350  
                               __CFG_LVP$ON 000000                                         l171 2E88  
                                       l809 2D68                                         l675 2952  
                                       l942 1B76                                         _GIE 01FE97  
                                       _abs 2300                                         _pad FE1E  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 2E1E  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs 0682  
                             _INT0_CallBack 2C6C                           _update_adc_result 25CE  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 2C00  
                              __CFG_ZCD$OFF 000000                                        l1004 250C  
                                      l2210 A6BA                                        l3003 EF2A  
                                      l2107 187E                                        l2028 18FC  
                                      l2044 0D6A                                        l1500 0FC0  
                                      l2301 D886                                        l2214 A6B2  
                                      l3030 EC62                                        l1271 2EB0  
                                      l1192 254C                                        l1505 1596  
                                      l1282 E9B6                                        l2075 0A8E  
                           _timer3ReloadVal 00C0                                        l2148 E01E  
                                      l2260 20FA                                        l1284 E9BC  
                                      l1524 5442                                        l2069 1326  
                                      l4030 85B0                                        l2417 BC46  
                                      l1625 1F0C                                        l1481 08C8  
                                      l1466 03A4                                        l2371 5B68  
                                      l3315 8CE0                                        l2195 03C2  
                                      l1459 005E                                        l2532 2810  
                                      l2700 488E                                        l2292 F9AA  
                                      l3270 80AA                                        l3422 2340  
                                      l3414 E356                                        l2614 BD34  
                                      l4038 70C4                                        l2375 5EA6  
                                      l3351 78EE                                        l1831 2624  
                                      l1479 08C2                                        l1840 D93E  
                                      l1753 0F78                                        l2561 1C40  
                                      l1841 DA9A                                        l1489 0B90  
                                      l3282 7F3A                                        l2650 9FDA  
                                      l2635 ADB4                                        l3427 FBE4  
                                      l1499 0D96                                        l2476 FE7A  
                                      l1772 26C6                                        l1757 144C  
                                      l2742 0784                                        l3526 CFD8  
                      _ADCC_StartConversion 2EB4                                        l3391 DC98  
                                      l3463 C8F2                                        l3552 FACA  
                                      l2496 979A                                        l2576 20F0  
                                      l1848 F1F2                                        l1888 2DCE  
                                      l3834 16FE                                        l3819 D666  
                                      l1988 96B6                                        l3942 D446  
                                      l3847 167A                                        l3951 C3FE  
                                      l2992 09D0                                        l3858 38E2  
                                      l2996 EE56                                        l3986 C182  
                                      l3978 C09C                                        l9901 798E  
                                      l9913 7A0C                                        l9905 79A4  
                                      l9931 7AC4                                        l9907 79D4  
                                      l9925 7A7E                                        l9919 7A3E  
                                      STR_1 FEF5                                        STR_2 FECB  
                                      l9937 7AE6                                        l9929 7A94  
                                      STR_3 FFD5                                        STR_4 FEA1  
                                      STR_5 FB25                                        STR_6 FB25  
                                      l9981 7CB6                                        STR_7 FB25  
                                      STR_8 FB25                                        l9983 7CC8  
                                      l9991 7D02                                        l9967 7C24  
                                      l9895 794E                                        STR_9 FB25  
                                      l9977 7C96                                        l9987 7CD2  
                                      _LATA 003FBA                                        _LATB 003FBB  
                                      _LATC 003FBC                                        _LATD 003FBD  
                                      _LATE 003FBE                                        _LATF 003FBF  
                                      _T2PR 003FAB                                        _T6PR 003F93  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      _PMD2 0039C2                                        _PMD3 0039C3  
                                      _PMD4 0039C4                                        _PMD5 0039C5  
                                      u8010 A8A6                                        _PMD6 0039C6  
                                      _PMD7 0039C7                                        u8110 289A  
                                      u8030 A97E                                        u8015 A89C  
                                      u8120 289C                                        u8200 C464  
                                      u8035 A974                                        u7500 7DE2  
                                      u8220 C4BA                                        u9100 21B4  
                                      u8060 23C4                                        u7430 7CFA  
                                      u9110 EB2C                                        u7270 286A  
                                      u8070 23C6                                        u8231 C4C4  
                                      u8151 F204                                        u7600 7F9A  
                                      u7440 7D1A                                        u7408 7C6C  
                                      u8240 C4FE                                        u8400 D1FC  
                                      u8320 D038                                        u9040 09CA  
                                      u9200 EC42                                        u9120 EB40  
                                      u7280 286C                                        u8080 1628  
                                      u7505 7DD2                                        u8250 C530  
                                      u9130 EB7A                                        u8090 162A  
                                      u7435 7CEA                                        u9115 EB22  
                                      u9211 E816                                        u8171 F326  
                                      u7540 7F0C                                        u7380 7C4A  
                                      u8340 D08E                                        u9220 E850  
                                      u9300 F856                                        u7390 7C6A  
                                      u8270 C60E                                        u8350 D0C0  
                                      u9230 E882                                        u7710 283A  
                                      u7391 7C64                                        u9135 EB70  
                                      u7640 7FF6                                        u9320 202A  
                                      u8360 D0F2                                        u7720 283C  
                                      u9330 204A                                        u8290 C660  
                                      u9250 E960                                        u7730 057C  
                                      u7580 7F80                                        u8620 8BFA  
                                      u8540 8B14                                        u8380 D1AA  
                                      u9180 EC18                                        u7900 E348  
                                      u7645 7FE6                                        u7670 8016  
                                      u8630 8C34                                        u7830 2314  
                                      u9270 F76C                                        u8800 7766  
                                      u8640 8C70                                        u7840 E278  
                                      u9280 F79E                                        u8625 8BEA  
                                      u8730 7278                                        u7930 16AC  
                                      u8580 8B9E                                        u7940 16AE  
                                      u7845 E26E                                        u8840 77C2  
                                      u7960 A77A                                        u8745 740C  
                                      u8850 77FC                                        u7890 E346  
                                      u7970 A7C6                                        _PLLR 01CEE0  
                                      u8755 74D4                                        u8860 7842  
                                      u8845 77B2                                        u8765 769C  
                                      u7885 E328                                        u7965 A770  
                                      u7995 A800                                        u7996 A806  
                                      u7997 A814                     __end_of_display_history B972  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUD 003A71  
                                      _WPUE 003A81                                        _WPUF 003A91  
                          __end_of_ADCC_ISR 292C                       __size_of___secs_to_tm 10D2  
                             __CFG_FCMEN$ON 000000                                _rule_to_secs 80B4  
                                      _dbuf 0354                          __size_of_CRC_Start 0006  
                                      _cp_h F95F                                        _cp_l F95B  
                                      _atoi C688                                        _ctoa 1578  
                                      _main 0000                                        _dtoa 96BC  
                                      _nanf 1D88                                        _lock 01D3  
                                      _seed 02DE                                        _prec 004C  
                                      _time 1E4A                                        _nout 00BA  
                                      _spin F8D3                                        fsr0h 003FEA  
                                      fsr1h 003FE2                                        indf0 003FEF  
                                      fsr2h 003FDA                                        fsr0l 003FE9  
                                      indf1 003FE7                                        indf2 003FDF  
                                      fsr1l 003FE1                                        fsr2l 003FD9  
                                      _stoa BC4A                                        btemp 002A  
                                      _utoa AD70                                        _xtoa 9F96  
                    __end_of_check_adc_scan 2FAE                               ___fpclassifyf E1CA  
                                      prodh 003FF4                                        prodl 003FF3  
                                      start 00AE                             _timer5ReloadVal 00C4  
                 __end_of_SPI1_Exchange8bit 2D78                   __size_of_clear_hid_pflags 0066  
                           _TMR3_Initialize 2272                 __size_of_set_load_relay_one 0010  
               __size_of_set_load_relay_two 0010                               __CFG_CSWEN$ON 000000  
                            _SPI1STATUSbits 003D17                           _UART1_rx_vect_isr 2B64  
                              ___param_bank 000000                        display_history@bwait 0053  
                    __end_of_check_day_time A6C4                          ?_UART1_rx_vect_isr 0001  
                 __size_of_DATAEE_WriteByte 0068                            _update_hist_data 180A  
                          __end_of_INT0_ISR 2F5E                            __end_of_INT1_ISR 2592  
            __size_of_OSCILLATOR_Initialize 0016                    __end_of_ringBufS_put_dma 0F80  
             __end_of_OSCILLATOR_Initialize 2E8E                                       l10011 7DB0  
                                     l10103 808A                                       l10031 7EC4  
                                     l10015 7DBA                                       l10041 7F1E  
                                     l10033 7EEA                                       l10009 7D9E  
                                     l10113 04B2                                       l10051 7F6E  
                                     l10019 7DEC                                       l10205 E2F4  
                                     l10301 07DA                                       l10117 0538  
                                     l10055 7F7A                                       l10215 E34E  
                                     l10311 F20C                                       l10081 8006  
                                     l10065 7FA2                                       l10049 7F5C  
                                     l10209 E2F8                                       l10233 16EE  
                                     l10091 8032                                       l10411 87C6  
                                     l10331 C46A                                       l10315 F2B2  
                                     l10069 7FA8                                       l10421 881C  
                                     l10261 A900                                       l10095 804A  
                                     l10503 8B36                                       l10431 88A4  
                                     l10423 884C                                       l10343 C504  
                                     l10191 2330                                       l10271 AA06  
                                     l10263 A950                                       l10247 A7E2  
                                     l10097 805A                                       l10521 8BAC  
                                     l10441 88FA                                       l10417 8806  
                                     l12121 DB54                                       l12113 DAE8  
                                     l10337 C4BE                                       l10603 728A  
                                     l10531 8C20                                       l10507 8B5C  
                                     l10443 892A                                       l12123 DB62  
                                     l10355 C5D6                                       l10267 A998  
                                     l10517 8BA6                                       l10437 88E4  
                                     l12133 DBC4                                       l12125 DB78  
                                     l13007 208A                                       l10551 8CC4  
                                     l10543 8C8C                                       l10463 89BC  
                                     l10455 89A2                                       l12135 DBE2  
                                     l12127 DB96                                       l10391 D172  
                                     l10383 D0C6                                       l10375 D03E  
                                     l10537 8C5C                                       l10481 8A82  
                                     l10473 8A4C                                       l10449 8968  
                                     l12145 DC16                                       l12137 DBF8  
                                     l11601 D544                                       l10289 166A  
                                     l10707 789C                                       l10483 8A94  
                                     l10491 8AEC                                       l12155 DC78  
                                     l12411 943A                                       l13027 17C2  
                                     l10709 78B6                                       l10661 76FE  
                                     l10573 7164                                       l10549 8CB4  
                                     l10813 099A                                       l10901 E856  
                                     l11621 E39A                                       l10655 76E2  
                                     l10591 7232                                       l10575 716A  
                                     l10567 7124                                       l10831 EEA4  
                                     l12431 95E8                                       l12423 9508  
                                     l12407 9358                                       l12095 ED56  
                                     l12087 ECEA                                       l12079 ECA2  
                                     l14113 2534                                       l10665 7724  
                                     l10593 7238                                       l10585 71F2  
                                     l10577 719A                                       l10825 EE14  
                                     l10497 8B1A                                       l10489 8AE8  
                                     l10817 09CE                                       l10809 0958  
                                     l10913 E928                                       l12361 FF82  
                                     l11633 E3F6                                       l10675 776E  
                                     l10595 7268                                       l10843 EF28  
                                     l10835 EEF2                                       l12419 946C  
                                     l11563 C764                                       l11547 C6A2  
                                     l10851 21B8                                       l11627 E3C6  
                                     l11811 657A                                       l10693 782E  
                                     l12437 9684                                       l12445 9696  
                                     l11573 C846                                       l11565 C77C  
                                     l11557 C738                                       l11549 C6C4  
                                     l10861 EB4C                                       l10933 F81E  
                                     l10925 F772                                       l12365 FFC0  
                                     l11645 E478                                       l11805 64E6  
                                     PRLOCK 0039EF                                       l10679 7774  
                                     l12391 9202                                       l12463 29CA  
                                     l11583 C8E2                                       l11567 C7A0  
                                     l11751 5FFE                                       l14311 1858  
                                     l14057 2D14                                       l10689 77E8  
                                     l11569 C7DE                                       l12369 FFD4  
                                     l10961 D28A                                       l11825 0658  
                                     l11761 613A                                       l11729 1C86  
                                     l13443 2152                                       l10699 7858  
                                     l14331 E7E2                                       l11771 6392  
                                     l11747 5FD4                                       l11755 6104  
                                     l14069 294E                                       l12397 9232  
                                     l10949 204E                                       l10885 EBFA  
                                     l10877 EBCE                                       l16005 2208  
                                     l12901 26D0                                       l13701 0A3C  
                                     l13613 F3A6                                       l10965 D2CA  
                                     l14421 BC36                                       l14261 DDA0  
                                     l13447 2184                                       l12807 A464  
                                     l14095 24F4                                       l13631 DEA4  
                                     l10887 EC10                                       l10879 EBEA  
                                     l11599 D4D8                                       l10983 D42C  
                                     l11791 6468                                       l14351 B98E  
                                     l14263 DDD4                                       l12841 A660  
                                     l16105 2770                                       l16017 2290  
                                     l16025 22FA                                       l16033 2366  
                                     l16041 2478                                       l13617 F41C  
                                     l11777 63C4                                       l14361 B9D4  
                                     l14353 B99E                                       l14249 DCEA  
                                     l12827 A55A                                       l13643 DEE4  
                                     l10979 D408                                       l11787 643A  
                                     l11779 63CE                                       l14371 BA0A  
                                     l14355 B9A4                                       l14419 BC0C  
                                     l13803 18BA                                       l13741 263A  
                                     l16053 2510                                       l16141 BD6A  
                                     l16125 BCB6                                       l11797 64B2  
                                     l14381 BA3E                                       l14365 B9E0  
                                     l14277 DE56                                       l14269 DE52  
                                     l13639 DED0                                       l14631 9F88  
                                     l16223 A004                                       l17031 133C  
                                     l13655 12CA                                       l11799 64BA  
                                     l13815 18D2                                       l13823 FC50  
                                     l16145 BDA6                                       l16217 9FCA  
                                     l15601 B56C                                       l17033 1346  
                                     l17041 135A                                       l17121 03E2  
                                     l16321 B198                                       l14377 BA32  
                                     l14289 1FE6                                       l14811 1740  
                                     l16067 25AC                                       l16163 BEC8  
                                     l16155 BE60                                       l16403 3B50  
                                     l17035 1354                                       l17043 1386  
                                     l13667 1300                                       l12955 28E6  
                                     l13827 FCB2                                       l14299 1820  
                                     l18003 1546                                       l13853 F60E  
                                     l15621 FE4A                                       l15701 FD38  
                                     l16069 25C6                                       l16149 BDD6  
                                     l16253 A196                                       l16237 A0A0  
                                     l16229 A040                                       l16261 A21C  
                                     l16405 3B8A                                       l17029 1334  
                                     l14581 0C14                                       l12885 EA7E  
                                     l16333 B2BE                                       l16317 B0FE  
                                     l16309 C3DA                                       l14397 BAB2  
                                     l14389 BA8C                                       l17213 F8DE  
                                     l13855 F61E                                       l15631 FEC0  
                                     l16079 2668                                       l16159 BE8C  
                                     l16423 3D04                                       l16407 3BA0  
                                     l13679 20C0                                       l17127 0494  
                                     l16327 B21A                                       l18007 156C  
                                     l14817 1750                                       l17241 558A  
                                     l13857 F624                                       l15561 1112  
                                     l15625 FE72                                       l15705 FD50  
                                     l15641 088A                                       l16089 26B8  
                                     l16185 AE00                                       l16177 ADA4  
                                     l16441 3E88                                       l16433 3D9C  
                                     l15609 B61A                                       l14585 0C52  
                                     l13689 0A06                                       l12889 EAA8  
                                     l17065 FBA4                                       l16329 B224  
                                     l16337 B34A                                       l18017 15C2  
                                     l13883 F71E                                       l13875 F6A4  
                                     l13859 F632                                       l13867 F63A  
                                     l15547 F9E0                                       l15635 FF0A  
                                     l15627 FE84                                       l15651 F4CC  
                                     l15723 FE04                                       l15715 FDD0  
                                     l16195 AFF6                                       l16291 C248  
                                     l16603 C114                                       l17075 CE0A  
                                     l13779 25EE                                       l17219 F944  
                                     l17261 57B8                                       l17245 55F6  
                                     l17237 5536                                       l13869 F66C  
                                     l15573 1254                                       l15805 9AB6  
                                     l16277 A306                                       l16533 4684  
                                     l16509 4452                                       l16445 3EDC  
                                     l16381 39CE                                       l17405 49C8  
                                     l16293 C26E                                       l17271 5A0A  
                                     l15559 10F0                                       l15663 F502  
                                     l15823 1682                                       l16519 4508  
                                     l16383 3A08                                       l17095 F0BA  
                                     l16623 25BC                                       l13991 0B66  
                                     l17281 5B78                                       l17257 5764  
                                     l17249 5662                                       l15569 1216  
                                     l15737 1596                                       l15809 9AF2  
                                     l15657 F4E2                                       l15921 1B6A  
                                     l15913 1B52                                       l16553 4816  
                                     l16465 40EE                                       l16457 4036  
                                     l16385 3A1E                                       l17521 5398  
                                     l16289 C230                                       l17267 5990  
                                     l15739 15C2                                       l15771 97D4  
                                     l15763 978A                                       l15931 1BD8  
                                     l15915 1B64                                       l15835 16C6  
                                     l15843 171C                                       l16547 47BC  
                                     l16563 483A                                       l15595 B502  
                                     l17443 4C50                                       l17603 B962  
                                     l13995 0BE2                                       l17285 5B9A  
                                     l17277 5AD0                                       l15685 F5DC  
                                     l15677 F5A8                                       l15909 1B2A  
                                     l15853 17C0                                       l15861 182E  
                                     l16557 481A                                       l16469 4122  
                                     l15589 B444                                       l17445 4CF8  
                                     l16813 11DE                                       l16805 117A  
                                     l15775 97F2                                       l15951 1CC6  
                                     l15871 18D2                                       l15855 17EC  
                                     l17463 4D9E                                       l17297 5E9E  
                                     l15785 9A04                                       l15697 FD26  
                                     l15929 1BCC                                       l15857 1802  
                                     l16489 4282                                       l17449 4D06  
                                     l17393 4950                                       l16905 28D8  
                                     l16737 826E                                       l17545 D778  
                                     l17529 D684                                       l15947 1C8E  
                                     l15891 19DC                                       l16499 4330  
                                     l17643 DA36                                       l17483 4EB4  
                                     l17467 4DB2                                       l16931 2EC0  
                                     l16923 2CC0                                       l16595 C082  
                                     l16755 8626                                       l16739 82C2  
                                     l16843 695E                                       l17555 D850  
                                     l17573 19E0                                       l15981 201E  
                                     l15957 1D50                                       l15893 1A46  
                                     l16773 0FD8                                       l17629 D90E  
                                     l17397 4966                                       l16917 2B84  
                                     l16597 C0A6                                       l16845 697E  
                                     l15991 210A                                       l15967 1EFC  
                                     l15887 196C                                       l15879 1900  
                                     l16847 6A74                                       l17911 0BA2  
                                     l17831 0728                                       l15897 1AA8  
                                     l16793 0E56                                       l16953 30F0  
                                     l16945 301C                                       l16937 2F48  
                                     l16849 6A94                                       l17905 0B80  
                                     l16795 0E98                                       l16963 318E  
                                     l16883 6FBC                                       l16859 6D7A  
                                     l17923 0CA2                                       l17819 064E  
                                     l17771 03BE                                       l17763 0352  
                                     l17691 0040                                       l15989 20E8  
                                     l16981 34BA                                       l16973 324E  
                                     l16965 3194                                       l16869 6E5A  
                                     l17597 B95E                                       l17765 037C  
                                     l17693 0048                                       l16895 70A8  
                                     l16887 6FDA                                       l17935 11FE  
                                     l17951 140E                                       l17855 08CC  
                                     l16977 345A                                       l17857 08FC  
                                     l17849 08B8                                       l17697 0066  
                                     l17939 1260                                       l17875 0956  
                                     l17699 007A                                       l16997 3672  
                                     l16989 3578                                       l17965 1468  
                                     l17949 13E2                                       l17869 0930  
                           __end_of___aldiv E4F4                                       l17995 1510  
                                     l17979 14C0                                       l17997 1528  
                                     l17989 14FE                             __end_of___aodiv C688  
                              _Volts_to_SOC 0B54                                       _ADCAP 003EF5  
                                     _ADACT 003EFE                             __end_of___almod EDD2  
                           __end_of___fladd 80B4                                       _ADCLK 003EFF  
                           __end_of___aomod D220                                       _ADPCH 003EF1  
                           __end_of___fldiv 8CEA                                       _ADREF 003EFD  
                           __end_of___awdiv F5F6                             __end_of___flneg 21E2  
                                     STR_10 FF1F                                       STR_11 FF49  
                                     STR_20 FDB1                                       STR_12 FCEB  
                                     STR_21 FB3A                                       STR_13 FA91  
                                     STR_30 FF84                                       STR_14 FB51  
                                     STR_22 FA41                                       STR_15 FC37  
                                     STR_31 FC20                                       STR_23 FA5C  
                                     STR_24 FF63                                       STR_32 FC09  
                                     STR_40 FB68                                       STR_16 FB23  
                                     STR_25 FE61                                       STR_17 FD17  
                                     STR_33 FBF2                                       STR_41 FB7F  
                             __CFG_WDTE$OFF 000000                                       STR_50 FE35  
                                     STR_18 FD2D                                       STR_26 FD01  
                                     STR_34 FBDB                                       STR_42 FB96  
                                     STR_51 FE35                                       STR_19 FE09  
                                     STR_27 FDC7                                       STR_35 FBC4  
                                     STR_43 FAC3                                       STR_28 FF96  
                                     STR_52 FD9B                                       STR_60 FCD5  
                                     STR_36 FBAD                                       STR_44 FB0B  
                           __end_of___awmod FE1E                                       STR_61 FD85  
                                     STR_53 FD59                                       STR_37 FC7C  
                                     STR_45 FA07                                       STR_70 FCA9  
                                     STR_62 FD9B                                       STR_54 FD43  
                                     STR_38 FC4E                                       STR_46 FAAB  
                                     STR_63 FCD5                                       STR_71 FE4B  
                                     STR_55 FF34                                       STR_39 FC65  
                                     STR_47 FADB                                       STR_80 FA25  
                                     STR_72 FD9B                                       STR_64 FE1F  
                                     STR_56 FDDD                                       STR_48 FAF3  
                                     _ADRPT 003EEC                                       STR_81 FF63  
                                     STR_65 FF0A                                       STR_49 FE35  
                                     STR_73 FCBF                                       STR_57 FCA9  
                                     STR_90 FFA7                                       STR_82 FFFC  
                                     STR_66 FEE0                                       STR_58 FE4B  
                                     STR_74 FD6F                                       STR_75 FD9B  
                                     STR_59 FD9B                                       STR_91 FFA7  
                                     STR_83 FFB6                                       STR_67 FEB6  
                                     STR_76 FCD5                                       STR_92 FFA7  
                                     STR_84 FFCC                                       STR_68 FF71  
                           __end_of___lbmod 1206                                       STR_69 FDDD  
                                     STR_85 FF5E                                       STR_77 FDF3  
                                     STR_93 FA77                                       STR_86 FF5E  
                                     STR_94 FE77                                       STR_78 FA25  
                                     STR_79 FA25                                       STR_87 FFC2  
                                     STR_95 FE8C                                       STR_88 FFC2  
                           __end_of___flmul 78F8                                       STR_89 FFA7  
                           __end_of___flsub 238C                             __end_of___fltol EC6C  
                                     u10500 C88E                                       u11310 ECCA  
                                     u11320 ECE4                                       u10610 E394  
                                     u11330 ED06                             __end_of___lodiv E988  
                                     u10540 D572                                       u10470 C734  
                                     u12150 1B36                                       u10630 E3C2  
                                     u11350 ED7E                                       u11440 DC0C  
                                     u10640 E3F0                                       u10801 5F34  
                                     u10490 C88C                                       u10650 E412  
                                     u11370 EDA8                                       u11290 EC9C  
                                     _U1P1H 003DED                                       u12315 2400  
                                     u10547 D564                                       u10580 D60C  
                                     _U1P2H 003DEF                                       u12510 1C06  
                                     u10590 D63A                                       u11630 FF74  
                                     u12158 1B38                                       u10670 E4A0  
                                     u10910 6558                                       _U1P1L 003DEC  
                                     _U1P3H 003DF1                                       u12175 1B86  
                                     _T3CLK 003FA9                                       u11704 924C  
                                     u12440 17BE                                       u12176 1B88  
                                     u10920 655A                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u11705 9246  
                                     u10585 D606                                       u10690 E4CA  
                                     _U1P3L 003DF0                                       u10587 D5F8  
                                     u11635 FF6E                                       u11724 926E  
                                     u12364 EA2A                                       u12380 2EF2  
                                     u10940 063A                                       u13500 181C  
                                     u11725 9268                                       u10597 D62C  
                                     u12365 EA24                                       u15030 1AE4  
                                     u10950 2F2A                                       u12710 12C6  
                                     u10870 63EA                                       _U2P1L 003DD4  
                                     u12535 1C3A                                       u12536 1C3C  
                                     u12528 1C08                                       u11744 9454  
                                     u15200 1FEE                                       u16000 3DF0  
                                     _T3CON 003FA6                                       _U2P2L 003DD6  
                                     u11745 944E                                       u14410 FA50  
                                     u15130 1C1E                                       u12730 12FA  
                                     u10890 6484                                       u10794 1CA4  
                                     _U2P3L 003DD8                                       u10795 1C9E  
                                     u13531 1844                                       u12900 2CE2  
                                     u11764 9522                                       u11684 921C  
                                     u14420 1140                                       u15300 24BA  
                                     u15060 1B38                                       u16020 3F64  
                                     u13460 DE52                                       u11765 951C  
                                     u11685 9216                                       u11790 954C  
                                     u13471 1FC0                                       u13551 186E  
                                     _T5CLK 003F9D                                       u12680 DE82  
                                     u11784 9544                                       u16120 455C  
                                     u12760 0A02                                       u17000 4B0E  
                                     u11785 953E                             __end_of___lomod F878  
                                     u12585 2EE0                                       u12906 2CE4  
                                     u14610 F5C8                                       u15090 1B9C  
                                     u16050 41DC                                       u12754 20EE  
                                     u17010 4B38                                       u12586 2EE2  
                                     u14427 1132                                       u12755 20EA  
                                     u12595 2ED0                                       u14540 0904  
                                     u15500 BEEE                                       u16140 470C  
                                     u16060 41DE                                       u12780 0A36  
                                     u12596 2ED2                                       _T2HLT 003FAD  
                                     u17005 4B00                                       u14390 F9D4  
                                     u16310 0FB8                                       u17015 4B2A  
                                     u14800 97C0                                       u15360 268E  
                                     u15520 AD8A                                       u15600 9FB0  
                                     _T5CON 003F9A                                       u14810 9A18  
                                     u14730 96EC                                       u14490 B68E  
                                     u16250 8248                                       u14547 08F6  
                                     u14740 96EE                                       u14660 FD7C  
                                     u15380 2744                                       u15460 BDCC  
                                     u15700 A218                                       u17220 DA86  
                                     u17060 4FFA                                       u16260 825A  
                                     u14821 9A48                                       u14830 9A5E  
                                     u14590 F52E                                       u15390 2746  
                                     u14910 16B0                                       u15470 BE12  
                                     u15710 A238                                       u15630 A098  
                                     u17230 DA88                                       u17070 5024  
                                     u16190 C058                                       u16430 6EEE  
                                     u17310 04D8                                       u14831 9A5C  
                                     u15551 B038                                       u14840 9A72  
                                     u14760 975E                                       u14680 FDF0  
                                     u15560 B04E                                       u15640 A0EC  
                                     u16600 3542                                       _T6CON 003F94  
                                     u15561 B04C                                       u15721 A268  
                                     u15705 A1FA                                       u17065 4FEC  
                                     u14850 9A76                                       u15570 B062  
                                     u15730 A27E                                       u15650 A0EE  
                                     u16610 35F0                                       u17330 0756  
                                     u15731 A27C                                       u17075 5016  
                                     u16611 35EC                                       u14780 9770  
                                     u14940 176A                                       u15580 B066  
                                     u15740 A292                                       u15900 3A8E  
                                     u16460 2874                                       u15820 B202  
                                     u17500 1484                                       u17340 0880  
                                     u15477 BE04                                       u14870 9A8C  
                                     u14950 176C                                       u15750 A296  
                                     u15670 A14C                                       u16470 28C4  
                                     u17350 0882                              __CFG_DEBUG$OFF 000000  
                                     u15680 A14E                                       u16560 318E  
                                     u15840 B34A                                       u16640 CDCA  
                                     u15930 3BE8                                       u15770 C202  
                                     u16650 CE00                                       u16730 F8BA  
                                     u17506 1486                                       u14980 187C  
                                     u15940 3BEA                                       u14990 187E  
                                     u15950 3C10                                       u15880 3A66  
                                     u16808 F988                                       u16760 F920  
                                     u17480 1458                                       u16585 3270  
                                     u15890 3A68                                       u17490 1472  
                                     u16748 F8BC                                       _T6HLT 003F95  
                                     u16790 F986                                       u17486 145A  
                                     u17496 1474                  _ADCC_ADTI_InterruptHandler 00A1  
                                     u16778 F922                                       _T2TMR 003FAA  
                                     _U1UIR 003DF8                                       _T2RST 003FAF  
                                     _U1RXB 003DE8                                       _U2UIR 003DE0  
                                     _U2RXB 003DD0                                       _U2TXB 003DD2  
                                     _T6TMR 003F92                                       _T6RST 003F97  
                       ??_UART1_rx_vect_isr 0006                                       _ISRPR 0039F1  
                                     _OSCEN 0039DD                                       _TMR3H 003FA5  
                                     _TMR5H 003F99                                       _TMR3L 003FA4  
                                     _TMR5L 003F98                   __end_of_update_adc_result 2608  
                                     _TRISA 003FC2                                       _TRISB 003FC3  
                                     _TRISC 003FC4                                       _TRISD 003FC5  
                                     _TRISE 003FC6                                       _TRISF 003FC7  
                               _Default_ISR 2FF4                         __size_of_CRC_IsBusy 0010  
                   __size_of_clear_adc_scan 0006                          _current_sensor_cal 4898  
         __size_of_TMR3_SetInterruptHandler 0028                                ___secs_to_tm 281A  
         __size_of_TMR6_SetInterruptHandler 0028                             __end_of_asctime 9200  
                             __CFG_WRTB$OFF 000000                            __end_of_TMR3_ISR F096  
                             __CFG_WRTC$OFF 000000                            _cal_current_zero 129E  
                                     ___gmt F953                               __CFG_WRTD$OFF 000000  
                          __end_of_TMR5_ISR E1CA                             __end_of_getname B3AC  
                              _DMA1CON0bits 003BFC                            __end_of_TMR6_ISR 2E06  
                              _DMA1CON1bits 003BFD                  __size_of_send_lcd_data_dma 0046  
                           _DATAEE_ReadByte 27B4                                       _fabsf 0D7C  
                           __end_of_getrule C408                        __end_of_clear_switch 20FE  
                                     _flags 004E                        __size_of_check_range 0080  
                 __size_of_CRC_ReverseValue 00CE                                       _r_cal 0440  
                  __size_of_calc_model_data 045A                                _DMA2CON0bits 003BDC  
                              _DMA2CON1bits 003BDD                __end_of_get_ac_charger_relay 2F4E  
                                     _fputc F9B0                  __size_of_send_lcd_cmd_long 0040  
                           __end_of_isalpha 23D0                                       _fputs 1206  
                           __end_of_isdigit 28A6                             __end_of_ivln2_h F95B  
                                     _put2d FAD4                          __CFG_MCLRE$EXTMCLR 000000  
                                     _srand 26E4                                       _width 004A  
                                     _putch 2DD2                __end_of_set_ac_charger_relay 2F16  
                           __end_of_islower 2846                             __end_of_isspace 205E  
                  _INT1_SetInterruptHandler 2AC2                             __end_of_set_dac 0D7C  
                           __end_of_isupper 2876                                       pclath 003FFA  
                                     tablat 003FF5                                       ltemp0 002A  
                                     ltemp1 002E                                       ltemp2 0032  
                  __size_of_DMA1_Initialize 006A                                       plusw0 003FEB  
                                     plusw1 003FE3                                       plusw2 003FDB  
                                     ttemp0 002A                                       ttemp1 002D  
                                     ttemp2 0030                                       ttemp3 0033  
                                     ttemp5 002B                                       ttemp6 002E  
                                     ttemp7 0032                                       status 003FD8  
       __end_of_UART1_SetRxInterruptHandler 2A4A                 _UART1_SetRxInterruptHandler 2A22  
                                     wtemp0 002A                                       wtemp1 002C  
                                     wtemp2 002E                                       wtemp3 0030  
                                     wtemp4 0032                                       wtemp5 0034  
                                     wtemp8 002B                             __end_of_sprintf 01C0  
                           __end_of_tolower 1708                             __end_of_strncmp D670  
                           __end_of_toupper 1684                   __size_of_DMA1_DMADCNT_ISR 000A  
                 __end_of_UART1_rx_vect_isr 2B8C                    __size_of_SPI1_Initialize 0016  
                   __end_of_update_cal_data 200C                             _TMR5_Initialize 222A  
                     __end_of_ringBufS_init 29AA                             __initialization 01C0  
                         _UART2_rx_vect_isr 2BB4                               ___localtime_r CD9C  
                              __end_of_cp_h F963                                __end_of_cp_l F95F  
                              __end_of_atoi C8FC                                __end_of_ctoa 1600  
                              __end_of_main 15D6                                __end_of_dtoa 9B3C  
                              __end_of_nanf 1DEA                                __end_of_time 1EA8  
                              __end_of_spin F94B                                __end_of_stoa BF08  
                              __end_of_utoa B0B0                                __end_of_xtoa A350  
                            __CFG_SAFEN$OFF 000000                          ?_UART2_rx_vect_isr 0001  
                   __end_of_TMR2_Initialize 2E36                    __size_of_cal_current_10A 00BE  
                     __end_of_send_lcd_data 2C00                    __size_of_DMA2_Initialize 005A  
                __end_of_check_enter_button 19EA                           __end_of_CRC_Start 2FDA  
                  _TMR5_SetInterruptHandler 2A72                               __activetblptr 000003  
                 __size_of_DMA1_DMASCNT_ISR 000E                       _TMR3_InterruptHandler 0098  
                         _port_data_dma_ptr 2F78                          esr_check@esr_state 00C6  
                       ??_UART2_rx_vect_isr 0006                                      INTCON0 003FD2  
      __size_of_UART2_SetRxInterruptHandler 0028                              __CFG_MVECEN$ON 000000  
                           _TMR6_Initialize 2958                             _PWM8_Initialize 2E62  
                          _UART1_Initialize 21E2                           _UART2_tx_vect_isr 2B8C  
                        _UART2_Transmit_ISR 292C                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                            _start_adc_scan 1CC2                                      _ADLTHH 003EDF  
                                    _ADLTHL 003EDE                                      STR_102 F9E1  
                                    STR_103 F963                                      STR_112 FFED  
                                    STR_104 FFDA                                      STR_121 FFF0  
                                    STR_105 FFE2                                      STR_114 FFED  
                                    STR_123 FFF0                                      STR_131 FFF9  
                                    STR_116 FFF3                                      STR_108 FFDE  
                                    STR_140 FC93                                      STR_133 FFF9  
                                    STR_109 FFE6                                      STR_141 F9E2  
                                    STR_118 FFF3                                      STR_126 FFF6  
                                    STR_135 FFEA                                      STR_128 FFF6  
                                    STR_137 FFEA                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 23D0                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 E11A  
                                    _RB6PPS 003A0E                                      i1l1209 EFFE  
                      _start_switch_handler 2D1A                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 22BA  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 2F32                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl DCA2  
     __end_of_ADCC_DischargeSampleCapacitor 2FB6      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 2FAE                    __end_of_send_lcd_cmd_dma 2D96  
                           _TMR3_WriteTimer 2512                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 2BDC                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 2F6E  
                          _UART2_Initialize 1DEA                                      _WaitMs 26AE  
                           _conv_raw_result 9200                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset C188  
                                    ___flge EDD2                                      ___fleq 0916  
                                    ___lmul 076C                                      ___omul F1F6  
                         _ADCC_ThresholdISR 1AC0                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E2                              _ringBufS_flush 13C2  
                                    _efgtoa 15D6                                      _getoff D220  
                                    _getint 04A4                                      _floorf A6C4  
                         dac_spi_control@S0 00CB                           dac_spi_control@S1 00CA  
                         dac_spi_control@S2 00C9                           dac_spi_control@SB 00C7  
                         dac_spi_control@SC 00C8                          ?_ADCC_ThresholdISR 0001  
                                    _memset B3AC                                      _pclock 00DA  
                      __size_of_help_button 0038                                      clear_0 0232  
                                    clear_1 0246                                      clear_2 0258  
                                    clear_3 0264                                      clear_4 0270  
                                    clear_5 027C                                      clear_6 0288  
                                    clear_7 0294                                      clear_8 02A0  
                                    _t_mbmc 00BC                   __end_of_port_data_dma_ptr 2F82  
                    __size_of_read_cal_data 01CA                                      _printf 1D26  
                        _eaDogM_WriteString 0F80                     __end_of_DATAEE_ReadByte 27E6  
                                    _strcpy 0842                                   ?_ADCC_ISR 0001  
                                    _strlen 10CA                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 1A54  
                            _PMD_Initialize 2E8E                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 2BB4                            __end_of_set_time 26AE  
                                    lltemp0 002A                                      lltemp1 0032  
                                    lltemp2 003A                                      lltemp3 0042  
                       ??_ADCC_ThresholdISR 0001                      __end_of_start_adc_scan 1D26  
                              __mediumconst F716                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 1F5C                            __end_of_spinners 04A4  
                          __end_of_vfprintf 0ED6                                  _StartTimer 2492  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 2272  
                         _SYSTEM_Initialize 20FE                                  ___daylight 00B8  
                                __accesstop 0060                     __end_of__initialization 02B2  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                      __end_of_display_help 2FC6                        __end_of_display_info 2FBE  
                 __end_of_CLKREF_Initialize 2F78                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 24D2  
                     _set_temp_display_help 2EF6                            _clear_hid_pflags 1B92  
                     __end_of_TMR3_CallBack 2C6C                   __end_of_ADCC_ThresholdISR 1B2A  
                     __end_of_set_hist_flag 2FD4                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 1454                              __pcstackCOMRAM 0001  
                                ___inthi_sp 132C                                  ___intlo_sp 1996  
                              __pidataBANK1 1026                                __pidataBANK2 0A98  
                             __end_of___gmt F957                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf 0E2A                                   ?_TMR3_ISR 0001  
                                 ?_TMR5_ISR 0001                                   ?_TMR6_ISR 0001  
                          _DATAEE_WriteByte 1B2A                              ivt0x8_undefint 00AC  
                             __end_of_fputc FAD4                               __end_of_fputs 129E  
                      _get_ac_charger_relay 2F40                               __end_of_put2d FBEE  
                             __end_of_srand 2718                       __end_of_TMR5_CallBack 2C48  
                             __end_of_putch 2DEC                        _set_ac_charger_relay 2F06  
                   __end_of_PWM8_Initialize 2E78                     __end_of_TMR6_Initialize 2982  
                         _adc_int_t_handler 1708                      __end_of_PMD_Initialize 2EA2  
                                __end_of_bp F953                                  ___timezone 0070  
                                ??_ADCC_ISR 0001                       __end_of_TMR6_CallBack 2CB4  
                     __size_of_clear_switch 004E                 __size_of_EXT_INT_Initialize 0034  
                  calc_bsoc@log_update_wait 0050                      __size_of_calc_ror_data 0186  
                             _DMA1_DMAA_ISR 2F90                       TMR3_ISR@CountCallBack 00BE  
                            _clear_adc_scan 2FDA                          __size_of_hid_input 0138  
                        __end_of_CRC_IsBusy 2EF6                      __size_of_mode_lamp_dim 0018  
                          time@current_time 00D2                            _CRC_ReverseValue FF32  
                  _UART2_RxInterruptHandler 00AD                   __end_of_SYSTEM_Initialize 214C  
                           __CFG_PR1WAY$OFF 000000                             __CFG_IVT1WAY$ON 000000  
                   __end_of_TMR3_WriteTimer 2552                                  __pbssBANK0 0060  
                                __pbssBANK1 01A4                                  __pbssBANK2 02BC  
                                __pbssBANK3 0300                                  __pbssBANK4 0400  
                                __pbssBANK5 0500                                  __pbssBANK6 0600  
                  __end_of_update_hist_data 1886                                  _check_help D88C  
                             _read_cal_data DCA2                     __end_of_conv_raw_result 96BC  
                        __size_of_esr_check 02D8                       _INT0_InterruptHandler 00B3  
                                ??_INT0_ISR 0001                                  ??_INT1_ISR 0007  
                     __end_of_days_in_month 1CC2                           __end_of_TimerDone 29D2  
                          _DMA1_DMADCNT_ISR 2F84                             _convert_dac_raw FBEE  
                        __size_of_init_bsoc 0246                  __size_of_UART2_rx_vect_isr 0028  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                          __size_of_lp_filter 01BC  
                        __size_of_localtime 0016                               _init_port_dma 27E6  
                     __end_of_wait_lcd_done 2F32                    __end_of_cal_current_zero 1330  
          __end_of_TMR3_SetInterruptHandler 2AC2                                _clear_switch 20B0  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 2A72  
                                ??_TMR3_ISR 00E5                     __end_of_ADCC_Initialize 1ABE  
                                ??_TMR5_ISR 000B                   __end_of_adc_int_t_handler 178A  
                                ??_TMR6_ISR 0006                           __end_of___asfladd 1978  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 2B3A       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 2B12                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 025A                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 2CF8  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 2FE0                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1222_20 A486  
                            ?_DMA1_DMAA_ISR 0001                            _DMA1_DMASCNT_ISR 2F60  
                                   _U1ERRIE 003DFA                          __size_of_set_vterm 001E  
                                   _U1ERRIR 003DF9                                     _U2ERRIE 003DE2  
                                   u1246_20 2F4A                                     u1333_48 2CA0  
                                   u1325_48 2C7C                                     u1182_25 2F10  
                                   u1182_26 2F12                                     _U2ERRIR 003DE1  
                                   u1327_28 2C10                                     u1257_20 2648  
                                   u1336_28 2C34                                     u1257_26 264A  
                                   u1291_28 F614                                     u1293_20 F62E  
                                   u1293_21 F628                                     u1297_24 F714  
                                   u1297_25 F710                                     u1393_44 1770  
                                   u1393_45 176A                           _CRC_8BitDataWrite 2EA2  
                                   _INT0PPS 003AC0                         __CFG_PWRTS$PWRT_OFF 000000  
                                   _INT1PPS 003AC1                                ?_Default_ISR 0001  
                                   u1691_20 5B8A                  __size_of_UART2_tx_vect_isr 0028  
                                   u1689_20 5AC0                                     u1696_28 2C58  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 1886                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 5EBA  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 28D4  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 2512                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 2EE6  
                __end_of_set_load_relay_two 2ED6           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data E682  
                            ___secs_to_zone 682C                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 2E06                                     __Lparam 0000  
                  __end_of_UART1_Initialize 222A                           __end_of_hid_input F9B0  
                           __size_of_WaitMs 0036                                     ___aldiv E360  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv C408                                     ___almod EC6C  
                                   ___fladd 78F8                                     ___aomod CFE0  
                                   ___fldiv 8770                                     ___awdiv F4A8  
                                   ___flneg 219A                             __size_of___lmul 00D6  
                                   ___awmod FD06                             __size_of___omul 015A  
                                   ___lbmod 116C                                     ___flmul 70CE  
                                   ___flsub 2346                                     ___fltol EAFA  
                                   ___lodiv E808                                     ___lomod F738  
                 __end_of_UART1_Receive_ISR 2D1A                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display 076C  
                                   __pcinit 01C0                    __end_of_mode_lamp_bright 2F40  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 2F16                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 2EB4                                     __ptext0 0000  
                                   __ptext1 180A                                     __ptext2 1FB6  
                                   __ptext3 1EA8                                     __ptext4 2D1A  
                                   __ptext5 26E4                                     __ptext6 2678  
                                   __ptext7 2FCE                                     __ptext8 2718  
                                   __ptext9 274C                           __end_of_esr_check BC4A  
                         _UART2_Receive_ISR 2D3A                                     _asctime 8CEA  
                           __size_of_printf 0062                                     _getname B0B0  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule C188  
                                   _dst_off 00B6                       _OSCILLATOR_Initialize 2E78  
                              __size_of_abs 0046                                __size_of_pad 0114  
                         __end_of_init_bsoc CD9C                                     us830999 C672  
                                   _isalpha 238C                                     _isdigit 2876  
                                   us841999 D20E                                     _ivln2_h F957  
                                   us818999 F33A                                     us931999 F868  
                                   us926999 E972                                   _T3CONbits 003FA6  
                                   _mode_sw 00CC                           __end_of_lp_filter E028  
                         __end_of_localtime 2E4C                                     _islower 2816  
                                   _isspace 200C                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 2592                                   _T5CONbits 003F9A  
                                   _set_dac 0CC6                    __end_of_UART2_Initialize 1E4A  
                                   _isupper 2846                                   _CRC_Start 2FD4  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf 00B6                                     _tolower 1684  
                     __size_of_display_help 0008                                     _utctime 01D7  
                   __end_of_convert_dac_raw FD06                       __size_of_display_info 0008  
                                   _strncmp D450                                     _toupper 1600  
                      end_of_initialization 02B2                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 1978  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 2780  
                         __end_of_set_dac_b 274C                      __end_of___secs_to_zone 70CE  
       __end_of_UART2_SetRxInterruptHandler 2A22                 _UART2_SetRxInterruptHandler 29FA  
                                 i1u1724_20 EFF4                                   i2u1400_48 2B78  
                                 i2u1402_48 2BA0                                   i2u1404_48 2BC8  
                   check_day_time@day_delay 0051                           __end_of_set_vterm 2DB4  
                                 i2u1396_48 2918                                   i2u1398_48 1AF6  
                                 i2u1398_49 1B0A                           __end_of_vfpfcnvrt 4898  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 03AE  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 2FEC                   __end_of_UART2_Receive_ISR 2D5A  
                            wdtdelay@dcount 0090                     __end_of_dac_spi_control 1900  
               __size_of_current_sensor_cal 0BB4                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00B0  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 2FF2  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 2A9A  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 2A4A  
                              _display_help 2FBE                       _TMR5_InterruptHandler 009B  
                              _display_info 2FB6        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 1BF8                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 2B62                 _ADCC_SetADIInterruptHandler 2B3A  
                                asctime@buf 03C4                                  _update_lcd F096  
                           _calc_model_data 9B3C                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 1EA8  
                  __end_of_DATAEE_WriteByte 1B92                             _DMA1_Initialize 19EA  
                       __end_of_check_range 180A                                  _start_bsoc 2CD6  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 2E4C                       __end_of_get_vterm_ptr 28D4  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 02DA                    __end_of_CRC_ReverseValue 0000  
                            __end_of_WaitMs 26E4                __end_of_INTERRUPT_Initialize 1C5E  
                                _vterm_dump E4F4                              __end_of___flge EF34  
                            __end_of___fleq 09DA                             _cal_current_10A 09DA  
      __end_of_INT0_DefaultInterruptHandler 3000       __size_of_INT0_DefaultInterruptHandler 0002  
              _INT0_DefaultInterruptHandler 2FFE                  __size_of_UART1_Receive_ISR 0022  
                           _DMA2_Initialize 1F5C                              __end_of___lmul 0842  
                            __end_of___omul F350                               __pidataBIGRAM AA30  
                            _load_hist_data C8FC                              __end_of_efgtoa 281A  
                __size_of_CRC_8BitDataWrite 0012                           __size_of_TMR3_ISR 0162  
                            __end_of_getoff D450                           __size_of_TMR5_ISR 01A2  
                            __end_of_getint 0596                           __size_of_TMR6_ISR 001A  
                       __size_of_check_help 0212                              __end_of_floorf AA30  
               __size_of_UART2_Transmit_ISR 002C                                  floorf@F524 0074  
                            __end_of_memset B698  __end_of___month_to_secs@secs_through_month F817  
        ___month_to_secs@secs_through_month F7E7                              __end_of_printf 1D88  
                  __end_of_DMA1_DMADCNT_ISR 2F8E                 __size_of_PWM8_LoadDutyValue 0042  
                     __end_of_INT0_CallBack 2C90                              __end_of_strcpy 0916  
                            __end_of_strlen 116C                         start_initialization 01C0  
                   __size_of_write_cal_data 0158        __end_of_TMR5_DefaultInterruptHandler 2678  
     __size_of_TMR5_DefaultInterruptHandler 0038                _TMR5_DefaultInterruptHandler 2640  
           __size_of_PIN_MANAGER_Initialize 0092                                 __end_of_abs 2346  
                     __end_of_INT1_CallBack 2C24                   __size_of_set_display_info 001E  
                               __end_of_pad FF32                        __size_of_Default_ISR 0006  
                   __size_of_CRC_Initialize 0092                              ___year_to_secs 5EBA  
                      __end_of_send_lcd_cmd 2492                              _switch_handler F5F6  
             __size_of_ADCC_StartConversion 0012                                  ivt0x8_base 0008  
                             _uart1RxBuffer 02D6                       __end_of___fpclassifyf E360  
                             _uart2RxBuffer 0600                    __end_of_DMA1_DMASCNT_ISR 2F6E  
                             _uart2TxBuffer 0400                              _DMA1_DMAOR_ISR 2F9C  
                       __end_of_hid_display D88C                  __end_of_send_port_data_dma 20B0  
                          __CFG_LPBOREN$OFF 000000                       __size_of_init_display 00EA  
               __size_of_eaDogM_WriteString 00A6             __end_of_CRC_CalculatedResultGet EAFA  
                                 _TimerDone 29AA                               _ringBufS_init 2982  
                    __end_of_load_hist_data CB56                                 __pdataBANK1 0100  
                               __pdataBANK2 0200                  __size_of_UART2_Receive_ISR 0020  
                       __size_of_get_switch 002C                  __end_of_EXT_INT_Initialize 27B4  
                  __size_of_update_cal_data 0056                     __end_of_calc_model_data 9F96  
                             _send_lcd_data 2BDC                         __end_of_help_button 2640  
           __end_of_eaDogM_WriteStringAtPos 13C2                         __end_of_BVSOC_TABLE F7E7  
                                 ___asfladd 1900                        calc_model_data@bcror 0088  
                               __pbssBIGRAM 0A3F                     __end_of_DMA1_Initialize 1A54  
                      calc_model_data@bvror 008C                                 __pbssCOMRAM 004A  
                               _check_range 178A            __end_of_INT0_SetInterruptHandler 2B12  
                    __end_of___year_to_secs 682C                               __pcstackBANK0 00E5  
                  __size_of_TMR2_Initialize 0018                      __size_of_TMR3_CallBack 0024  
                    __end_of_switch_handler F738                                 _CRCCON0bits 003968  
                               _CRCCON1bits 003969                      __size_of_set_hist_flag 0006  
                         __size_of___xxtofl 0204                     __end_of_SPI1_Initialize 2E62  
                  _UART1_RxInterruptHandler 00A7                    _UART2_TxInterruptHandler 00AA  
                                 __end_of_T F8D3                            _convert_adc_data 0C0E  
                                 _calc_bsoc 544C                   __size_of_ringBufS_put_dma 00AA  
                              _init_display 0682                      __end_of_DMA1_DMAOR_ISR 2FA6  
                    __size_of_TMR5_CallBack 0024                           __size_of_do_tzset 0280  
                     _TMR6_InterruptHandler 009E                          calc_ror_data@bcror 0080  
                    __size_of_TMR6_CallBack 0024                     __end_of_cal_current_10A 0A98  
                   __end_of_DMA2_Initialize 1FB6                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 1454                       __end_of___localtime_r CFE0  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 2FE6  
                       __size_of_scan_trans 003C                               __pmediumconst F716  
                                 __ptext100 AD70                                   __ptext101 F738  
                                 __ptext110 E1CA                                   __ptext102 E808  
                                 __ptext111 EAFA                                   __ptext103 D450  
                                 __ptext200 2C48                                   __ptext120 1578  
                                 __ptext112 219A                                   __ptext104 BC4A  
                                 __ptext201 2FFC                                   __ptext121 FE1E  
                                 __ptext113 0916                                   __ptext105 15D6  
                                 __ptext210 2900                                   __ptext202 544C  
                                 __ptext130 2D96                                   __ptext122 10CA  
                                 __ptext114 FD06                                   __ptext106 1684  
                                 __ptext211 1708                                   __ptext203 205E  
                                 __ptext131 2EF6                                   __ptext123 1206  
                                 __ptext115 F4A8                                   __ptext107 2846  
                                 __ptext220 2D3A                                   __ptext212 3000  
                                 __ptext204 2F78                                   __ptext140 2FBE  
                                 __ptext132 2DB4                                   __ptext124 F9B0  
                                 __ptext116 96BC                                   __ptext108 0842  
                                 __ptext221 2DEC                                   __ptext213 3002  
                                 __ptext205 1900                                   __ptext141 1978  
                                 __ptext133 2E06                                   __ptext125 2DD2  
                                 __ptext117 2300                                   __ptext109 A6C4  
                                 __ptext222 2C90                                   __ptext214 1AC0  
                                 __ptext206 2F50                                   __ptext150 9B3C  
                                 __ptext142 E682                                   __ptext134 2F32  
                                 __ptext126 0ED6                                   __ptext118 CFE0  
                                 __ptext223 214C                                   __ptext215 2B64  
                                 __ptext207 2C6C                                   __ptext151 2FEC  
                                 __ptext143 0D7C                                   __ptext135 23D0  
                                 __ptext127 C688                                   __ptext119 C408  
                                 __ptext224 2F60                                   __ptext216 2CF8  
                                 __ptext208 2FFE                                   __ptext160 29FA  
                                 __ptext152 2CD6                                   __ptext144 9200  
                                 __ptext136 2608                                   __ptext128 200C  
                                 __ptext225 2F84                                   __ptext217 2B8C  
                                 __ptext209 2FF4                                   __ptext161 21E2  
                                 __ptext153 DE6C                                   __ptext145 1D88  
                                 __ptext137 29AA                                   __ptext129 2876  
                                 __ptext226 2F90                                   __ptext218 292C  
                                 __ptext170 2E4C                                   __ptext162 2A22  
                                 __ptext154 2346                                   __ptext146 2CB4  
                                 __ptext138 2492                                   __ptext227 2F9C  
                                 __ptext219 2BB4                                   __ptext171 2E62  
                                 __ptext163 2958                                   __ptext155 78F8  
                                 __ptext147 DA9E                                   __ptext139 2FB6  
                                 __ptext228 0000                                   __ptext180 1F5C  
                                 __ptext172 2E8E                                   __ptext164 2A4A  
                                 __ptext156 70CE                                   __ptext148 8770  
                                 __ptext181 19EA                                   __ptext173 1454  
                                 __ptext165 222A                                   __ptext157 20FE  
                                 __ptext149 EDD2                                   __ptext190 F5F6  
                                 __ptext182 14E6                                   __ptext174 2E78  
                                 __ptext166 2A72                                   __ptext158 1DEA  
                                 __ptext191 E028                                   __ptext183 2F6E  
                                 __ptext175 1BF8                                   __ptext167 2272  
                                 __ptext159 29D2                                   __ptext192 24D2  
                                 __ptext184 1A54                                   __ptext176 2FC6  
                                 __ptext168 2A9A                                   __ptext193 2C24  
                                 __ptext185 2B12                                   __ptext177 2780  
                                 __ptext169 2E1E                                   __ptext194 2640  
                                 __ptext186 2B3A                                   __ptext178 2AC2  
                                 __ptext195 A350                                   __ptext187 2554  
                                 __ptext179 2AEA                                   __ptext196 2F06  
                                 __ptext188 2C00                                   __ptext197 2F40  
                                 __ptext189 2FFA                                   __ptext198 EF34  
                                 __ptext199 2512                           __size_of_set_time 0036  
                                 _hid_input F878                          __end_of_StartTimer 24D2  
                        _set_load_relay_one 2ED6                          _set_load_relay_two 2EC6  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 2900  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check B972  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc CB56                      __size_of_wait_lcd_done 000E  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter DE6C  
                                 _localtime 2E36                                 _hid_display D670  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 1BF8                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2F50                                    _INT1_ISR 2554  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 274C  
                                 _set_dac_b 2718                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 2C48  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 2FCE  
                                 _set_vterm 2D96                         __size_of_update_lcd 0160  
                               _help_button 2608                                    _TMR3_ISR EF34  
                               _BVSOC_TABLE F717                                    _TMR5_ISR E028  
                                  _TMR6_ISR 2DEC          __end_of___secs_to_tm@days_in_month F823  
                ___secs_to_tm@days_in_month F817                                   _port_data 06FF  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 38EC  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 2C24                                  _ADCON0bits 003EF8  
                                 _zi_read32 02B8                          __end_of_check_help DA9E  
                                 _start_lcd 2FE6                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 2C90  
                            _write_cal_data F350                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 2FEC  
                          _set_display_info 2DB4                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 14E6  
                               _INTCON0bits 003FD2                                   copy_data0 01D4  
                                 copy_data1 01FA                                   copy_data2 021C  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 2AEA  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 29FA  
               _UART2_SetTxInterruptHandler 29D2                               _days_in_month 1C5E  
                              _uart1RxCount 00D0                                _uart2RxCount 00CD  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 544C  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 2F24  
                              _send_lcd_cmd 2452                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 3002  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 2900  
                      __end_of_rule_to_secs 8770                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data F4A8                       __end_of_DMA1_DMAA_ISR 2F9A  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl DA9E                      __end_of_CRC_Initialize 1578  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 2F24                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 FBEE                                    __ptext11 0CC6  
                                  __ptext20 2452                                    __ptext12 1886  
                                  __ptext21 1F02                                    __ptext13 DCA2  
                                  __ptext30 2FA6                                    __ptext22 2D5A  
                                  __ptext14 27B4                                    __ptext31 2EC6  
                                  __ptext23 2982                                    __ptext15 C8FC  
                                  __ptext40 02B8                                    __ptext32 2ED6  
                                  __ptext24 CB56                                    __ptext16 27E6  
                                  __ptext41 80B4                                    __ptext33 2F16  
                                  __ptext25 0B54                                    __ptext17 0682  
                                  __ptext50 281A                                    __ptext42 1C5E  
                                  __ptext34 B698                                    __ptext26 D670  
                                  __ptext18 2BDC                                    __ptext51 F1F6  
                                  __ptext43 5EBA                                    __ptext35 1E4A  
                                  __ptext27 F878                                    __ptext19 2412  
                                  __ptext60 1B2A                                    __ptext52 076C  
                                  __ptext44 0596                                    __ptext36 2E36  
                                  __ptext28 B972                                    __ptext61 2FD4  
                                  __ptext53 EC6C                                    __ptext45 BF08  
                                  __ptext37 CD9C                                    __ptext29 25CE  
                                  __ptext70 28D4                                    __ptext62 2EE6  
                                  __ptext54 E360                                    __ptext46 C188  
                                  __ptext38 682C                                    __ptext71 20B0  
                                  __ptext63 E988                                    __ptext55 8CEA  
                                  __ptext47 D220                                    __ptext39 2592  
                                  __ptext80 00B6                                    __ptext72 2FDA  
                                  __ptext64 FF32                                    __ptext56 FAD4  
                                  __ptext48 04A4                                    __ptext81 28A6  
                                  __ptext73 129E                                    __ptext65 2EA2  
                                  __ptext57 116C                                    __ptext49 B0B0  
                                  __ptext90 2FE6                                    __ptext82 26AE  
                                  __ptext74 09DA                                    __ptext66 1CC2  
                                  __ptext58 4898                                    __ptext91 13C2  
                                  __ptext83 F096                                    __ptext75 178A  
                                  __ptext67 2EB4                                    __ptext59 F350  
                                  __ptext92 B3AC                                    __ptext84 1330  
                                  __ptext76 0C0E                                    __ptext68 2FAE  
                                  __ptext93 1D26                                    __ptext85 2D78  
                                  __ptext77 1B92                                    __ptext69 03AE  
                                  __ptext94 0E2A                                    __ptext86 2F24  
                                  __ptext78 D88C                                    __ptext95 38EC  
                                  __ptext87 22BA                                    __ptext79 E4F4  
                                  __ptext96 9F96                                    __ptext88 0F80  
                                  __ptext97 1600                                    __ptext89 2FE0  
                                  __ptext98 2816                                    __ptext99 238C  
                          __size_of_isupper 0030                                    _do_tzset BF08  
                     __end_of_read_cal_data DE6C                            __size_of_sprintf 010A  
                          __size_of_tolower 0084                                    us1167999 1E9A  
                                  us1541999 BC5C                                    us1630999 875A  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                                  us1472999 96D6                                    us1553999 ADD6  
                                  us1562999 A016                            _ringBufS_put_dma 0ED6  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 0C0E  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 15D6                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 2EE6  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 2816                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 38EC                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time 2678                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 2EC6                          __end_of_scan_trans 25CE  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 1F02                  __end_of_UART2_Transmit_ISR 2958  
                                  _spinners 03AE                                    _vfprintf 0E2A  
                  __end_of_convert_adc_data 0CC6                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 2412        __end_of_TMR3_DefaultInterruptHandler 2FFE  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 2FFC  
      __end_of_INT1_DefaultInterruptHandler 2FFC       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 2FFA                          _send_port_data_dma 205E  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00D1                              _get_raw_result 2CB4  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00CF  
                               _uart2RxTail 00CE                                   spinners@s 01CD  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 2FE0                          _EXT_INT_Initialize 2780  
      __end_of_TMR6_DefaultInterruptHandler 219A       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 214C                           _send_lcd_data_dma 22BA  
      __end_of_ADCC_DefaultInterruptHandler 3002       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 3000                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs 0596  
                         _send_lcd_cmd_long 2412              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 2F06                       __end_of_calc_ror_data E808  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 1026  
                     __end_of_mode_lamp_dim 2E1E                     __end_of_adc_int_handler 3004  
                  __size_of_convert_dac_raw 0118                             _display_history B698  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd F1F6                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 1F02                          __end_of_start_bsoc 2CF8  
                            _FVR_Initialize 2FC6                      __end_of_get_raw_result 2CD6  
                          _send_lcd_cmd_dma 2D78                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00C2            __end_of_INT1_SetInterruptHandler 2AEA  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 2300                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet E988                   __end_of_send_lcd_cmd_long 2452  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 2FFA  
            __end_of_PIN_MANAGER_Initialize 14E6                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump E682                     _eaDogM_WriteStringAtPos 1330  
                             _get_vterm_ptr 28A6                              _check_adc_scan 2FA6  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
