

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr  9 03:26:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=4,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=4,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=4,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=4,class=CODE,delta=1
   117                           	psect	text93,global,reloc=4,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=4,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=4,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=4,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=4,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=4,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=4,class=CODE,delta=1
   131                           	psect	text107,global,reloc=4,class=CODE,delta=1
   132                           	psect	text108,global,reloc=4,class=CODE,delta=1
   133                           	psect	text109,global,reloc=4,class=CODE,delta=1
   134                           	psect	text110,global,reloc=4,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   139                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   142                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   143  0000                     
   144                           ; Version 2.05
   145                           ; Generated 20/12/2018 GMT
   146                           ; 
   147                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   148                           ; All rights reserved.
   149                           ; 
   150                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   151                           ; 
   152                           ; Redistribution and use in source and binary forms, with or without modification, are
   153                           ; permitted provided that the following conditions are met:
   154                           ; 
   155                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   156                           ;        conditions and the following disclaimer.
   157                           ; 
   158                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   159                           ;        of conditions and the following disclaimer in the documentation and/or other
   160                           ;        materials provided with the distribution.
   161                           ; 
   162                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   163                           ;        software without specific prior written permission.
   164                           ; 
   165                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   166                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   167                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   168                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   169                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   170                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   171                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   172                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   173                           ; 
   174                           ; 
   175                           ; Code-generator required, PIC18F57K42 Definitions
   176                           ; 
   177                           ; SFR Addresses
   178  0000                     
   179 ;;_mode	offset	0
   180 ;;_rxData	offset	0
   181 ;;_t_link	offset=-2 (param)
   182 ;;_k	offset	0
   183 ;;_checksum	offset	2
   184 ;;_i	offset	4
   185 ;;_byte_block	offset=-2 (param)
   186 ;;_length	offset=-3 (param)
   187 ;;_fake	offset=-4 (param)
   188 ;;_s_uart	offset=-5 (param)
   189 ;;_i	offset	0
   190 ;;_sum	offset	2
   191 ;;_byte_block	offset=-2 (param)
   192 ;;_byte_count	offset=-4 (param)
   193 ;;_bufData	offset=-1 (param)
   194 ;;_txData	offset=-1 (param)
   195 ;;_bufData	offset=-1 (param)
   196 ;;_stream	offset=-6 (param)
   197 ;;_function	offset=-7 (param)
   198 ;;_s	offset=-2 (param)
   199 ;;_f	offset	0
   200 ;;_ap	offset	6
   201 ;;_s	offset=-3 (param)
   202 ;;_fmt	offset=-5 (param)
   203 ;;_rxData	offset	0
   204 ;;_r_link	offset=-2 (param)
   205 ;;_txData	offset=-1 (param)
   206 ;;_rxData	offset	0
   207 ;;_m_link	offset=-2 (param)
   208 ;;_stream	offset=-1 (param)
   209 ;;_function	offset=-2 (param)
   210 ;;_byte_block	offset=-1 (param)
   211 ;;_clear	offset=-2 (param)
   212 ;;_numMilliseconds	offset=-2 (param)
   213 ;;_timer	offset=-1 (param)
   214 ;;_timer	offset=-1 (param)
   215 ;;_count	offset=-3 (param)
   216 ;;_readValue	offset	0
   217 ;;_readValue	offset	0
   218 ;;_cmd	offset=-1 (param)
   219 ;;_cmd	offset=-1 (param)
   220 ;;_data	offset=-1 (param)
   221 ;;__this	offset=-2 (param)
   222 ;;_r	offset=-1 (param)
   223 ;;_c	offset=-2 (param)
   224 ;;_strPtr	offset=-4 (param)
   225 ;;_strPtr	offset=-2 (param)
   226 ;;_cmd	offset=-1 (param)
   227 ;;_strPtr	offset=-1 (param)
   228 ;;_delay	offset=-4 (param)
   229 ;;__this	offset=-2 (param)
   230 ;;_clearBuffer	offset=-3 (param)
   231 ;;_s	offset	0
   232 ;;_k	offset	2
   233 ;;_dest	offset=-2 (param)
   234 ;;_c	offset=-4 (param)
   235 ;;_n	offset=-6 (param)
   236 ;;_ap	offset	0
   237 ;;_fmt	offset=-3 (param)
   238 ;;_cfmt	offset	0
   239 ;;_fp	offset=-2 (param)
   240 ;;_fmt	offset=-4 (param)
   241 ;;_ap	offset=-6 (param)
   242 ;;_ll	offset	0
   243 ;;_cp	offset	8
   244 ;;_c	offset	10
   245 ;;_fp	offset=-2 (param)
   246 ;;_fmt	offset=-4 (param)
   247 ;;_ap	offset=-6 (param)
   248 ;;_r	offset	0
   249 ;;_l	offset	2
   250 ;;__l	offset=-2 (param)
   251 ;;__r	offset=-4 (param)
   252 ;;_n	offset=-6 (param)
   253 ;;_nuls	offset	0
   254 ;;_l	offset	7
   255 ;;_p	offset	9
   256 ;;_cp	offset	11
   257 ;;_w	offset	13
   258 ;;_i	offset	15
   259 ;;_fp	offset=-2 (param)
   260 ;;_s	offset=-4 (param)
   261 ;;_dtoa$4035	offset	0
   262 ;;_n	offset	2
   263 ;;_i	offset	10
   264 ;;_s	offset	12
   265 ;;_w	offset	14
   266 ;;_p	offset	16
   267 ;;_fp	offset=-2 (param)
   268 ;;_d	offset=-10 (param)
   269 ;;_a	offset=-2 (param)
   270 ;;_sign	offset	0
   271 ;;_counter	offset	1
   272 ;;_dividend	offset=-8 (param)
   273 ;;_divisor	offset=-16 (param)
   274 ;;_quotient	offset	0
   275 ;;_sign	offset	8
   276 ;;_counter	offset	9
   277 ;;_dividend	offset=-8 (param)
   278 ;;_divisor	offset=-16 (param)
   279 ;;_w	offset	0
   280 ;;_fp	offset=-2 (param)
   281 ;;_c	offset=-3 (param)
   282 ;;_w	offset	0
   283 ;;_i	offset	2
   284 ;;_fp	offset=-2 (param)
   285 ;;_buf	offset=-4 (param)
   286 ;;_p	offset=-6 (param)
   287 ;;_a	offset	0
   288 ;;_s	offset=-2 (param)
   289 ;;_i	offset	0
   290 ;;_c	offset	2
   291 ;;_s	offset=-2 (param)
   292 ;;_fp	offset=-4 (param)
   293 ;;_c	offset=-2 (param)
   294 ;;_fp	offset=-4 (param)
   295 ;;_c	offset=-1 (param)
   296 ;;__this	offset=-2 (param)
   297 ;;_c	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_InterruptHandler	offset=-3 (param)
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_InterruptHandler	offset=-3 (param)
   303 ;;_InterruptHandler	offset=-3 (param)
   304 ;;_state	offset	0
   305 ;;_InterruptHandler	offset=-3 (param)
   306 ;;_InterruptHandler	offset=-3 (param)
   307 ;;_InterruptHandler	offset=-3 (param)
   308 ;;_InterruptHandler	offset=-3 (param)
   309 ;;_i	offset	0
   310 ;;_timerVal	offset=-2 (param)
   311                           
   312                           	psect	idataCOMRAM
   313  014CEE                     __pidataCOMRAM:
   314                           	opt callstack 0
   315                           
   316                           ;initializer for r_protocol@retry
   317  014CEE  03                 	db	3
   318                           
   319                           	psect	idataBIGRAM
   320  012E20                     __pidataBIGRAM:
   321                           	opt callstack 0
   322                           
   323                           ;initializer for _V
   324  012E20  00                 	db	0
   325  012E21  00                 	db	0
   326  012E22  00                 	db	0
   327  012E23  00                 	db	0
   328  012E24  00                 	db	0
   329  012E25  00                 	db	0
   330  012E26  00                 	db	0
   331  012E27  00                 	db	0
   332  012E28  00                 	db	0
   333  012E29  00                 	db	0
   334  012E2A  00                 	db	0
   335  012E2B  00                 	db	0
   336  012E2C  00                 	db	0
   337  012E2D  00                 	db	0
   338  012E2E  00                 	db	0
   339  012E2F  00                 	db	0
   340  012E30  00                 	db	0
   341  012E31  00                 	db	0
   342  012E32  00                 	db	0
   343  012E33  00                 	db	0
   344  012E34  00                 	db	0
   345  012E35  00                 	db	0
   346  012E36  00                 	db	0
   347  012E37  00                 	db	0
   348  012E38  00                 	db	0
   349  012E39  00                 	db	0
   350  012E3A  00                 	db	0
   351  012E3B  00                 	db	0
   352  012E3C  00                 	db	0
   353  012E3D  00                 	db	0
   354  012E3E  00                 	db	0
   355  012E3F  00                 	db	0
   356  012E40  00                 	db	0
   357  012E41  00                 	db	0
   358  012E42  00                 	db	0
   359  012E43  00                 	db	0
   360  012E44  00                 	db	0
   361  012E45  00                 	db	0
   362  012E46  00                 	db	0
   363  012E47  00                 	db	0
   364  012E48  00                 	db	0
   365  012E49  00                 	db	0
   366  012E4A  00                 	db	0
   367  012E4B  00                 	db	0
   368  012E4C  00                 	db	0
   369  012E4D  00                 	db	0
   370  012E4E  00                 	db	0
   371  012E4F  00                 	db	0
   372  012E50  00                 	db	0
   373  012E51  00                 	db	0
   374  012E52  00                 	db	0
   375  012E53  00                 	db	0
   376  012E54  00                 	db	0
   377  012E55  00                 	db	0
   378  012E56  00                 	db	0
   379  012E57  00                 	db	0
   380  012E58  00                 	db	0
   381  012E59  00                 	db	0
   382  012E5A  00                 	db	0
   383  012E5B  00                 	db	0
   384  012E5C  00                 	db	0
   385  012E5D  00                 	db	0
   386  012E5E  00                 	db	0
   387  012E5F  00                 	db	0
   388  012E60  00                 	db	0
   389  012E61  00                 	db	0
   390  012E62  00                 	db	0
   391  012E63  00                 	db	0
   392  012E64  00                 	db	0
   393  012E65  00                 	db	0
   394  012E66  00                 	db	0
   395  012E67  00                 	db	0
   396  012E68  00                 	db	0
   397  012E69  00                 	db	0
   398  012E6A  00                 	db	0
   399  012E6B  00                 	db	0
   400  012E6C  00                 	db	0
   401  012E6D  00                 	db	0
   402  012E6E  00                 	db	0
   403  012E6F  00                 	db	0
   404  012E70  00                 	db	0
   405  012E71  00                 	db	0
   406  012E72  00                 	db	0
   407  012E73  00                 	db	0
   408  012E74  00                 	db	0
   409  012E75  00                 	db	0
   410  012E76  00                 	db	0
   411  012E77  00                 	db	0
   412  012E78  00                 	db	0
   413  012E79  00                 	db	0
   414  012E7A  00                 	db	0
   415  012E7B  00                 	db	0
   416  012E7C  00                 	db	0
   417  012E7D  00                 	db	0
   418  012E7E  00                 	db	0
   419  012E7F  00                 	db	0
   420  012E80  00                 	db	0
   421  012E81  00                 	db	0
   422  012E82  00                 	db	0
   423  012E83  00                 	db	0
   424  012E84  00                 	db	0
   425  012E85  00                 	db	0
   426  012E86  00                 	db	0
   427  012E87  00                 	db	0
   428  012E88  00                 	db	0
   429  012E89  00                 	db	0
   430  012E8A  00                 	db	0
   431  012E8B  00                 	db	0
   432  012E8C  00                 	db	0
   433  012E8D  00                 	db	0
   434  012E8E  00                 	db	0
   435  012E8F  00                 	db	0
   436  012E90  00                 	db	0
   437  012E91  00                 	db	0
   438  012E92  00                 	db	0
   439  012E93  00                 	db	0
   440  012E94  00                 	db	0
   441  012E95  00                 	db	0
   442  012E96  00                 	db	0
   443  012E97  00                 	db	0
   444  012E98  00                 	db	0
   445  012E99  00                 	db	0
   446  012E9A  00                 	db	0
   447  012E9B  00                 	db	0
   448  012E9C  00                 	db	0
   449  012E9D  00                 	db	0
   450  012E9E  00                 	db	0
   451  012E9F  00                 	db	0
   452  012EA0  00                 	db	0
   453  012EA1  00                 	db	0
   454  012EA2  00                 	db	0
   455  012EA3  00                 	db	0
   456  012EA4  00                 	db	0
   457  012EA5  00                 	db	0
   458  012EA6  00                 	db	0
   459  012EA7  00                 	db	0
   460  012EA8  00                 	db	0
   461  012EA9  00                 	db	0
   462  012EAA  00                 	db	0
   463  012EAB  00                 	db	0
   464  012EAC  00                 	db	0
   465  012EAD  00                 	db	0
   466  012EAE  00                 	db	0
   467  012EAF  00                 	db	0
   468  012EB0  00                 	db	0
   469  012EB1  00                 	db	0
   470  012EB2  00                 	db	0
   471  012EB3  00                 	db	0
   472  012EB4  00                 	db	0
   473  012EB5  00                 	db	0
   474  012EB6  00                 	db	0
   475  012EB7  00                 	db	0
   476  012EB8  00                 	db	0
   477  012EB9  00                 	db	0
   478  012EBA  00                 	db	0
   479  012EBB  00                 	db	0
   480  012EBC  00                 	db	0
   481  012EBD  00                 	db	0
   482  012EBE  00                 	db	0
   483  012EBF  00                 	db	0
   484  012EC0  00                 	db	0
   485  012EC1  00                 	db	0
   486  012EC2  00                 	db	0
   487  012EC3  00                 	db	0
   488  012EC4  00                 	db	0
   489  012EC5  00                 	db	0
   490  012EC6  00                 	db	0
   491  012EC7  00                 	db	0
   492  012EC8  00                 	db	0
   493  012EC9  00                 	db	0
   494  012ECA  00                 	db	0
   495  012ECB  00                 	db	0
   496  012ECC  00                 	db	0
   497  012ECD  00                 	db	0
   498  012ECE  00                 	db	0
   499  012ECF  00                 	db	0
   500  012ED0  00                 	db	0
   501  012ED1  00                 	db	0
   502  012ED2  00                 	db	0
   503  012ED3  00                 	db	0
   504  012ED4  00                 	db	0
   505  012ED5  00                 	db	0
   506  012ED6  00                 	db	0
   507  012ED7  00                 	db	0
   508  012ED8  00                 	db	0
   509  012ED9  00                 	db	0
   510  012EDA  00                 	db	0
   511  012EDB  00                 	db	0
   512  012EDC  00                 	db	0
   513  012EDD  00                 	db	0
   514  012EDE  00                 	db	0
   515  012EDF  00                 	db	0
   516  012EE0  00                 	db	0
   517  012EE1  00                 	db	0
   518  012EE2  00                 	db	0
   519  012EE3  00                 	db	0
   520  012EE4  00                 	db	0
   521  012EE5  00                 	db	0
   522  012EE6  00                 	db	0
   523  012EE7  00                 	db	0
   524  012EE8  00                 	db	0
   525  012EE9  00                 	db	0
   526  012EEA  00                 	db	0
   527  012EEB  00                 	db	0
   528  012EEC  00                 	db	0
   529  012EED  00                 	db	0
   530  012EEE  00                 	db	0
   531  012EEF  00                 	db	0
   532  012EF0  00                 	db	0
   533  012EF1  00                 	db	0
   534  012EF2  00                 	db	0
   535  012EF3  00                 	db	0
   536  012EF4  00                 	db	0
   537  012EF5  00                 	db	0
   538  012EF6  00                 	db	0
   539  012EF7  00                 	db	0
   540  012EF8  00                 	db	0
   541  012EF9  00                 	db	0
   542  012EFA  00                 	db	0
   543  012EFB  00                 	db	0
   544  012EFC  00                 	db	0
   545  012EFD  00                 	db	0
   546  012EFE  00                 	db	0
   547  012EFF  00                 	db	0
   548  012F00  00                 	db	0
   549  012F01  00                 	db	0
   550  012F02  00                 	db	0
   551  012F03  00                 	db	0
   552  012F04  00                 	db	0
   553  012F05  00                 	db	0
   554  012F06  0000               	dw	0
   555  012F08  0000               	dw	0
   556  012F0A  0000               	dw	0
   557  012F0C  0000               	dw	0
   558  012F0E  00                 	db	0
   559  012F0F  00                 	db	0
   560  012F10  0A                 	db	10
   561  012F11  00                 	db	0
   562  012F12  14                 	db	20
   563  012F13  00                 	db	0
   564  012F14  0000               	dw	0
   565  012F16  0000               	dw	0
   566  012F18  0000               	dw	0
   567  012F1A  0000               	dw	0
   568  012F1C  0000               	dw	0
   569  012F1E  00                 	db	0
   570  012F1F  20                 	db	32
   571  012F20  00                 	db	0
   572  012F21  00                 	db	0
   573  012F22  00                 	db	0
   574  012F23  01                 	db	1
   575  012F24  2D                 	db	45
   576                           
   577                           ;initializer for _H254
   578  012F25  0000               	dw	0
   579  012F27  00                 	db	0
   580  012F28  00                 	db	0
   581  012F29  00                 	db	0
   582  012F2A  00                 	db	0
   583  012F2B  00                 	db	0
   584  012F2C  00                 	db	0
   585  012F2D  00                 	db	0
   586  012F2E  00                 	db	0
   587  012F2F  00                 	db	0
   588  012F30  00                 	db	0
   589  012F31  00                 	db	0
   590  012F32  00                 	db	0
   591  012F33  00                 	db	0
   592  012F34  00                 	db	0
   593  012F35  00                 	db	0
   594  012F36  00                 	db	0
   595  012F37  00                 	db	0
   596  012F38  00                 	db	0
   597  012F39  00                 	db	0
   598  012F3A  00                 	db	0
   599  012F3B  00                 	db	0
   600  012F3C  00                 	db	0
   601  012F3D  00                 	db	0
   602  012F3E  00                 	db	0
   603  012F3F  00                 	db	0
   604  012F40  00                 	db	0
   605  012F41  00                 	db	0
   606  012F42  00                 	db	0
   607  012F43  00                 	db	0
   608  012F44  00                 	db	0
   609  012F45  00                 	db	0
   610  012F46  00                 	db	0
   611  012F47  00                 	db	0
   612  012F48  00                 	db	0
   613  012F49  00                 	db	0
   614  012F4A  00                 	db	0
   615  012F4B  00                 	db	0
   616  012F4C  00                 	db	0
   617  012F4D  00                 	db	0
   618  012F4E  00                 	db	0
   619  012F4F  00                 	db	0
   620  012F50  00                 	db	0
   621  012F51  00                 	db	0
   622  012F52  00                 	db	0
   623  012F53  00                 	db	0
   624  012F54  00                 	db	0
   625  012F55  00                 	db	0
   626  012F56  00                 	db	0
   627  012F57  00                 	db	0
   628  012F58  00                 	db	0
   629  012F59  00                 	db	0
   630  012F5A  00                 	db	0
   631  012F5B  00                 	db	0
   632  012F5C  00                 	db	0
   633  012F5D  00                 	db	0
   634  012F5E  00                 	db	0
   635  012F5F  00                 	db	0
   636  012F60  00                 	db	0
   637  012F61  00                 	db	0
   638  012F62  00                 	db	0
   639  012F63  00                 	db	0
   640  012F64  00                 	db	0
   641  012F65  00                 	db	0
   642  012F66  00                 	db	0
   643  012F67  00                 	db	0
   644  012F68  00                 	db	0
   645  012F69  00                 	db	0
   646  012F6A  00                 	db	0
   647  012F6B  00                 	db	0
   648  012F6C  00                 	db	0
   649  012F6D  00                 	db	0
   650  012F6E  00                 	db	0
   651  012F6F  00                 	db	0
   652  012F70  00                 	db	0
   653  012F71  00                 	db	0
   654  012F72  00                 	db	0
   655  012F73  00                 	db	0
   656  012F74  00                 	db	0
   657  012F75  00                 	db	0
   658  012F76  00                 	db	0
   659  012F77  00                 	db	0
   660  012F78  00                 	db	0
   661  012F79  00                 	db	0
   662  012F7A  00                 	db	0
   663  012F7B  00                 	db	0
   664  012F7C  00                 	db	0
   665  012F7D  00                 	db	0
   666  012F7E  00                 	db	0
   667  012F7F  00                 	db	0
   668  012F80  00                 	db	0
   669  012F81  00                 	db	0
   670  012F82  00                 	db	0
   671  012F83  00                 	db	0
   672  012F84  00                 	db	0
   673  012F85  00                 	db	0
   674  012F86  00                 	db	0
   675  012F87  00                 	db	0
   676  012F88  00                 	db	0
   677  012F89  00                 	db	0
   678  012F8A  00                 	db	0
   679  012F8B  00                 	db	0
   680  012F8C  00                 	db	0
   681  012F8D  00                 	db	0
   682  012F8E  00                 	db	0
   683  012F8F  00                 	db	0
   684  012F90  00                 	db	0
   685  012F91  00                 	db	0
   686  012F92  00                 	db	0
   687  012F93  00                 	db	0
   688  012F94  00                 	db	0
   689  012F95  00                 	db	0
   690  012F96  00                 	db	0
   691  012F97  00                 	db	0
   692  012F98  00                 	db	0
   693  012F99  00                 	db	0
   694  012F9A  00                 	db	0
   695  012F9B  00                 	db	0
   696  012F9C  00                 	db	0
   697  012F9D  00                 	db	0
   698  012F9E  00                 	db	0
   699  012F9F  00                 	db	0
   700  012FA0  00                 	db	0
   701  012FA1  00                 	db	0
   702  012FA2  00                 	db	0
   703  012FA3  00                 	db	0
   704  012FA4  00                 	db	0
   705  012FA5  00                 	db	0
   706  012FA6  00                 	db	0
   707  012FA7  00                 	db	0
   708  012FA8  00                 	db	0
   709  012FA9  00                 	db	0
   710  012FAA  00                 	db	0
   711  012FAB  00                 	db	0
   712  012FAC  00                 	db	0
   713  012FAD  00                 	db	0
   714  012FAE  00                 	db	0
   715  012FAF  00                 	db	0
   716  012FB0  00                 	db	0
   717  012FB1  00                 	db	0
   718  012FB2  00                 	db	0
   719  012FB3  00                 	db	0
   720  012FB4  00                 	db	0
   721  012FB5  00                 	db	0
   722  012FB6  00                 	db	0
   723  012FB7  00                 	db	0
   724  012FB8  00                 	db	0
   725  012FB9  00                 	db	0
   726  012FBA  00                 	db	0
   727  012FBB  00                 	db	0
   728  012FBC  00                 	db	0
   729  012FBD  00                 	db	0
   730  012FBE  00                 	db	0
   731  012FBF  00                 	db	0
   732  012FC0  00                 	db	0
   733  012FC1  00                 	db	0
   734  012FC2  00                 	db	0
   735  012FC3  00                 	db	0
   736  012FC4  00                 	db	0
   737  012FC5  00                 	db	0
   738  012FC6  00                 	db	0
   739  012FC7  00                 	db	0
   740  012FC8  00                 	db	0
   741  012FC9  00                 	db	0
   742  012FCA  00                 	db	0
   743  012FCB  00                 	db	0
   744  012FCC  00                 	db	0
   745  012FCD  00                 	db	0
   746  012FCE  00                 	db	0
   747  012FCF  00                 	db	0
   748  012FD0  00                 	db	0
   749  012FD1  00                 	db	0
   750  012FD2  00                 	db	0
   751  012FD3  00                 	db	0
   752  012FD4  00                 	db	0
   753  012FD5  00                 	db	0
   754  012FD6  00                 	db	0
   755  012FD7  00                 	db	0
   756  012FD8  00                 	db	0
   757  012FD9  00                 	db	0
   758  012FDA  00                 	db	0
   759  012FDB  00                 	db	0
   760  012FDC  00                 	db	0
   761  012FDD  00                 	db	0
   762  012FDE  00                 	db	0
   763  012FDF  00                 	db	0
   764  012FE0  00                 	db	0
   765  012FE1  00                 	db	0
   766  012FE2  00                 	db	0
   767  012FE3  00                 	db	0
   768  012FE4  00                 	db	0
   769  012FE5  00                 	db	0
   770  012FE6  00                 	db	0
   771  012FE7  00                 	db	0
   772  012FE8  00                 	db	0
   773  012FE9  00                 	db	0
   774  012FEA  00                 	db	0
   775  012FEB  00                 	db	0
   776  012FEC  00                 	db	0
   777  012FED  00                 	db	0
   778  012FEE  00                 	db	0
   779  012FEF  00                 	db	0
   780  012FF0  00                 	db	0
   781  012FF1  00                 	db	0
   782  012FF2  00                 	db	0
   783  012FF3  00                 	db	0
   784  012FF4  00                 	db	0
   785  012FF5  00                 	db	0
   786  012FF6  00                 	db	0
   787  012FF7  00                 	db	0
   788  012FF8  00                 	db	0
   789  012FF9  00                 	db	0
   790  012FFA  00                 	db	0
   791  012FFB  00                 	db	0
   792  012FFC  00                 	db	0
   793  012FFD  00                 	db	0
   794  012FFE  00                 	db	0
   795  012FFF  00                 	db	0
   796  013000  00                 	db	0
   797  013001  00                 	db	0
   798  013002  00                 	db	0
   799  013003  00                 	db	0
   800  013004  00                 	db	0
   801  013005  00                 	db	0
   802  013006  00                 	db	0
   803  013007  00                 	db	0
   804  013008  00                 	db	0
   805  013009  00                 	db	0
   806  01300A  00                 	db	0
   807  01300B  00                 	db	0
   808  01300C  00                 	db	0
   809  01300D  00                 	db	0
   810  01300E  00                 	db	0
   811  01300F  00                 	db	0
   812  013010  00                 	db	0
   813  013011  00                 	db	0
   814  013012  00                 	db	0
   815  013013  00                 	db	0
   816  013014  00                 	db	0
   817  013015  00                 	db	0
   818  013016  00                 	db	0
   819  013017  00                 	db	0
   820  013018  00                 	db	0
   821  013019  00                 	db	0
   822  01301A  00                 	db	0
   823  01301B  0001               	dw	1
   824  01301D  0000               	dw	0
   825  01301F  01                 	db	1
   826  013020  80                 	db	128
   827  013021  03                 	db	3
   828  013022  8A                 	db	138
   829  013023  00                 	db	0
   830  013024  00                 	db	0
   831  013025  FE                 	db	254
   832                           
   833                           	psect	idataBANK0
   834  014276                     __pidataBANK0:
   835                           	opt callstack 0
   836                           
   837                           ;initializer for stoa@F1144
   838  014276  28                 	db	40
   839  014277  6E                 	db	110
   840  014278  75                 	db	117
   841  014279  6C                 	db	108
   842  01427A  6C                 	db	108
   843  01427B  29                 	db	41
   844  01427C  00                 	db	0
   845                           
   846                           ;initializer for _H12
   847  01427D  0000               	dw	0
   848  01427F  00                 	db	0
   849  014280  01                 	db	1
   850  014281  0001               	dw	1
   851  014283  0000               	dw	0
   852  014285  01                 	db	1
   853  014286  80                 	db	128
   854  014287  02                 	db	2
   855  014288  01                 	db	1
   856  014289  00                 	db	0
   857  01428A  00                 	db	0
   858  01428B  0C                 	db	12
   859  01428C  0000               	dw	0
   860  01428E  00                 	db	0
   861  01428F  01                 	db	1
   862  014290  0001               	dw	1
   863  014292  0000               	dw	0
   864  014294  01                 	db	1
   865  014295  80                 	db	128
   866  014296  0D                 	db	13
   867  014297  81                 	db	129
   868  014298  00                 	db	0
   869  014299  00                 	db	0
   870  01429A  0C                 	db	12
   871                           
   872                           ;initializer for _H17
   873  01429B  0000               	dw	0
   874  01429D  00                 	db	0
   875  01429E  01                 	db	1
   876  01429F  00                 	db	0
   877  0142A0  01                 	db	1
   878  0142A1  21                 	db	33
   879  0142A2  02                 	db	2
   880  0142A3  01                 	db	1
   881  0142A4  0001               	dw	1
   882  0142A6  0000               	dw	0
   883  0142A8  01                 	db	1
   884  0142A9  80                 	db	128
   885  0142AA  0E                 	db	14
   886  0142AB  01                 	db	1
   887  0142AC  00                 	db	0
   888  0142AD  00                 	db	0
   889  0142AE  11                 	db	17
   890                           
   891                           ;initializer for _H14
   892  0142AF  0000               	dw	0
   893  0142B1  00                 	db	0
   894  0142B2  41                 	db	65
   895  0142B3  11                 	db	17
   896  0142B4  01                 	db	1
   897  0142B5  0001               	dw	1
   898  0142B7  0000               	dw	0
   899  0142B9  01                 	db	1
   900  0142BA  80                 	db	128
   901  0142BB  04                 	db	4
   902  0142BC  01                 	db	1
   903  0142BD  00                 	db	0
   904  0142BE  00                 	db	0
   905  0142BF  0E                 	db	14
   906                           
   907                           	psect	idataBANK1
   908  013AD6                     __pidataBANK1:
   909                           	opt callstack 0
   910                           
   911                           ;initializer for _H10
   912  013AD6  0000               	dw	0
   913  013AD8  0001               	dw	1
   914  013ADA  0000               	dw	0
   915  013ADC  01                 	db	1
   916  013ADD  80                 	db	128
   917  013ADE  01                 	db	1
   918  013ADF  81                 	db	129
   919  013AE0  00                 	db	0
   920  013AE1  00                 	db	0
   921  013AE2  0A                 	db	10
   922  013AE3  0000               	dw	0
   923  013AE5  00                 	db	0
   924  013AE6  00                 	db	0
   925  013AE7  00                 	db	0
   926  013AE8  00                 	db	0
   927  013AE9  00                 	db	0
   928  013AEA  00                 	db	0
   929  013AEB  00                 	db	0
   930  013AEC  00                 	db	0
   931  013AED  00                 	db	0
   932  013AEE  00                 	db	0
   933  013AEF  0A                 	db	10
   934  013AF0  0000               	dw	0
   935  013AF2  0001               	dw	1
   936  013AF4  0000               	dw	0
   937  013AF6  01                 	db	1
   938  013AF7  80                 	db	128
   939  013AF8  00                 	db	0
   940  013AF9  01                 	db	1
   941  013AFA  00                 	db	0
   942  013AFB  00                 	db	0
   943  013AFC  0A                 	db	10
   944  013AFD  0000               	dw	0
   945  013AFF  0001               	dw	1
   946  013B01  0000               	dw	0
   947  013B03  01                 	db	1
   948  013B04  80                 	db	128
   949  013B05  01                 	db	1
   950  013B06  81                 	db	129
   951  013B07  00                 	db	0
   952  013B08  80                 	db	128
   953  013B09  0A                 	db	10
   954  013B0A  0000               	dw	0
   955  013B0C  0001               	dw	1
   956  013B0E  0000               	dw	0
   957  013B10  01                 	db	1
   958  013B11  80                 	db	128
   959  013B12  11                 	db	17
   960  013B13  82                 	db	130
   961  013B14  00                 	db	0
   962  013B15  00                 	db	0
   963  013B16  0A                 	db	10
   964  013B17  0000               	dw	0
   965  013B19  0001               	dw	1
   966  013B1B  0000               	dw	0
   967  013B1D  01                 	db	1
   968  013B1E  80                 	db	128
   969  013B1F  0F                 	db	15
   970  013B20  81                 	db	129
   971  013B21  00                 	db	0
   972  013B22  00                 	db	0
   973  013B23  0A                 	db	10
   974  013B24  0000               	dw	0
   975  013B26  0001               	dw	1
   976  013B28  0000               	dw	0
   977  013B2A  01                 	db	1
   978  013B2B  80                 	db	128
   979  013B2C  11                 	db	17
   980  013B2D  81                 	db	129
   981  013B2E  00                 	db	0
   982  013B2F  00                 	db	0
   983  013B30  0A                 	db	10
   984                           
   985                           ;initializer for _H13
   986  013B31  0000               	dw	0
   987  013B33  00                 	db	0
   988  013B34  01                 	db	1
   989  013B35  21                 	db	33
   990  013B36  0001               	dw	1
   991  013B38  0000               	dw	0
   992  013B3A  01                 	db	1
   993  013B3B  80                 	db	128
   994  013B3C  0C                 	db	12
   995  013B3D  06                 	db	6
   996  013B3E  00                 	db	0
   997  013B3F  00                 	db	0
   998  013B40  0D                 	db	13
   999  013B41  0000               	dw	0
  1000  013B43  00                 	db	0
  1001  013B44  01                 	db	1
  1002  013B45  21                 	db	33
  1003  013B46  0001               	dw	1
  1004  013B48  0000               	dw	0
  1005  013B4A  01                 	db	1
  1006  013B4B  80                 	db	128
  1007  013B4C  02                 	db	2
  1008  013B4D  0A                 	db	10
  1009  013B4E  00                 	db	0
  1010  013B4F  00                 	db	0
  1011  013B50  0D                 	db	13
  1012  013B51  0000               	dw	0
  1013  013B53  00                 	db	0
  1014  013B54  01                 	db	1
  1015  013B55  21                 	db	33
  1016  013B56  0001               	dw	1
  1017  013B58  0000               	dw	0
  1018  013B5A  01                 	db	1
  1019  013B5B  80                 	db	128
  1020  013B5C  02                 	db	2
  1021  013B5D  05                 	db	5
  1022  013B5E  00                 	db	0
  1023  013B5F  00                 	db	0
  1024  013B60  0D                 	db	13
  1025                           
  1026                           ;initializer for _H24
  1027  013B61  0000               	dw	0
  1028  013B63  41                 	db	65
  1029  013B64  20                 	db	32
  1030  013B65  30                 	db	48
  1031  013B66  31                 	db	49
  1032  013B67  30                 	db	48
  1033  013B68  39                 	db	57
  1034  013B69  31                 	db	49
  1035  013B6A  31                 	db	49
  1036  013B6B  30                 	db	48
  1037  013B6C  38                 	db	56
  1038  013B6D  34                 	db	52
  1039  013B6E  36                 	db	54
  1040  013B6F  30                 	db	48
  1041  013B70  30                 	db	48
  1042  013B71  0001               	dw	1
  1043  013B73  0000               	dw	0
  1044  013B75  01                 	db	1
  1045  013B76  80                 	db	128
  1046  013B77  12                 	db	18
  1047  013B78  02                 	db	2
  1048  013B79  00                 	db	0
  1049  013B7A  00                 	db	0
  1050  013B7B  18                 	db	24
  1051                           
  1052                           	psect	idataBANK3
  1053  013E74                     __pidataBANK3:
  1054                           	opt callstack 0
  1055                           
  1056                           ;initializer for _H53
  1057  013E74  0000               	dw	0
  1058  013E76  4B                 	db	75
  1059  013E77  4F                 	db	79
  1060  013E78  4F                 	db	79
  1061  013E79  52                 	db	82
  1062  013E7A  42                 	db	66
  1063  013E7B  42                 	db	66
  1064  013E7C  42                 	db	66
  1065  013E7D  42                 	db	66
  1066  013E7E  34                 	db	52
  1067  013E7F  33                 	db	51
  1068  013E80  32                 	db	50
  1069  013E81  31                 	db	49
  1070  013E82  44                 	db	68
  1071  013E83  45                 	db	69
  1072  013E84  32                 	db	50
  1073  013E85  31                 	db	49
  1074  013E86  53                 	db	83
  1075  013E87  4B                 	db	75
  1076  013E88  4F                 	db	79
  1077  013E89  4F                 	db	79
  1078  013E8A  52                 	db	82
  1079  013E8B  42                 	db	66
  1080  013E8C  42                 	db	66
  1081  013E8D  42                 	db	66
  1082  013E8E  42                 	db	66
  1083  013E8F  34                 	db	52
  1084  013E90  33                 	db	51
  1085  013E91  34                 	db	52
  1086  013E92  33                 	db	51
  1087  013E93  32                 	db	50
  1088  013E94  31                 	db	49
  1089  013E95  44                 	db	68
  1090  013E96  45                 	db	69
  1091  013E97  52                 	db	82
  1092  013E98  46                 	db	70
  1093  013E99  23                 	db	35
  1094  013E9A  01                 	db	1
  1095  013E9B  41                 	db	65
  1096  013E9C  00                 	db	0
  1097  013E9D  01                 	db	1
  1098  013E9E  21                 	db	33
  1099  013E9F  02                 	db	2
  1100  013EA0  01                 	db	1
  1101  013EA1  0001               	dw	1
  1102  013EA3  0000               	dw	0
  1103  013EA5  01                 	db	1
  1104  013EA6  80                 	db	128
  1105  013EA7  03                 	db	3
  1106  013EA8  8A                 	db	138
  1107  013EA9  00                 	db	0
  1108  013EAA  00                 	db	0
  1109  013EAB  35                 	db	53
  1110  013EAC  0000               	dw	0
  1111  013EAE  4F                 	db	79
  1112  013EAF  4F                 	db	79
  1113  013EB0  4B                 	db	75
  1114  013EB1  4F                 	db	79
  1115  013EB2  4F                 	db	79
  1116  013EB3  52                 	db	82
  1117  013EB4  42                 	db	66
  1118  013EB5  42                 	db	66
  1119  013EB6  42                 	db	66
  1120  013EB7  42                 	db	66
  1121  013EB8  34                 	db	52
  1122  013EB9  33                 	db	51
  1123  013EBA  32                 	db	50
  1124  013EBB  31                 	db	49
  1125  013EBC  44                 	db	68
  1126  013EBD  45                 	db	69
  1127  013EBE  32                 	db	50
  1128  013EBF  31                 	db	49
  1129  013EC0  53                 	db	83
  1130  013EC1  4B                 	db	75
  1131  013EC2  4F                 	db	79
  1132  013EC3  4F                 	db	79
  1133  013EC4  52                 	db	82
  1134  013EC5  42                 	db	66
  1135  013EC6  18                 	db	24
  1136  013EC7  01                 	db	1
  1137  013EC8  41                 	db	65
  1138  013EC9  34                 	db	52
  1139  013ECA  33                 	db	51
  1140  013ECB  32                 	db	50
  1141  013ECC  31                 	db	49
  1142  013ECD  44                 	db	68
  1143  013ECE  45                 	db	69
  1144  013ECF  52                 	db	82
  1145  013ED0  46                 	db	70
  1146  013ED1  08                 	db	8
  1147  013ED2  01                 	db	1
  1148  013ED3  41                 	db	65
  1149  013ED4  00                 	db	0
  1150  013ED5  01                 	db	1
  1151  013ED6  21                 	db	33
  1152  013ED7  02                 	db	2
  1153  013ED8  01                 	db	1
  1154  013ED9  0001               	dw	1
  1155  013EDB  0000               	dw	0
  1156  013EDD  01                 	db	1
  1157  013EDE  80                 	db	128
  1158  013EDF  05                 	db	5
  1159  013EE0  8A                 	db	138
  1160  013EE1  00                 	db	0
  1161  013EE2  00                 	db	0
  1162  013EE3  35                 	db	53
  1163  0000                     _IVTADL	set	14493
  1164  0000                     _IVTADH	set	14494
  1165  0000                     _IVTADU	set	14495
  1166  0000                     _PIE8bits	set	14744
  1167  0000                     _PIR8bits	set	14760
  1168  0000                     _SCANPR	set	14839
  1169  0000                     _DMA2PR	set	14836
  1170  0000                     _DMA1PR	set	14835
  1171  0000                     _MAINPR	set	14834
  1172  0000                     _ISRPR	set	14833
  1173  0000                     _PIE2bits	set	14738
  1174  0000                     _PIR2bits	set	14754
  1175  0000                     _PIE9bits	set	14745
  1176  0000                     _PIR9bits	set	14761
  1177  0000                     _PIE6bits	set	14742
  1178  0000                     _PIE3bits	set	14739
  1179  0000                     _PMD7	set	14791
  1180  0000                     _PMD6	set	14790
  1181  0000                     _PMD5	set	14789
  1182  0000                     _PMD4	set	14788
  1183  0000                     _PMD3	set	14787
  1184  0000                     _PMD2	set	14786
  1185  0000                     _PMD1	set	14785
  1186  0000                     _PMD0	set	14784
  1187  0000                     _OSCTUNE	set	14814
  1188  0000                     _OSCFRQ	set	14815
  1189  0000                     _OSCEN	set	14813
  1190  0000                     _OSCCON3	set	14811
  1191  0000                     _OSCCON1	set	14809
  1192  0000                     _IPR8bits	set	14728
  1193  0000                     _IPR9bits	set	14729
  1194  0000                     _IPR7bits	set	14727
  1195  0000                     _IPR5bits	set	14725
  1196  0000                     _IPR1bits	set	14721
  1197  0000                     _IPR3bits	set	14723
  1198  0000                     _IPR6bits	set	14726
  1199  0000                     _IPR2bits	set	14722
  1200  0000                     _PIE7bits	set	14743
  1201  0000                     _PIE5bits	set	14741
  1202  0000                     _PIE1bits	set	14737
  1203  0000                     _PIR7bits	set	14759
  1204  0000                     _PIR5bits	set	14757
  1205  0000                     _PIR1bits	set	14753
  1206  0000                     _PLLR	set	118496
  1207  0000                     _SPI1SDIPPS	set	15071
  1208  0000                     _RC6PPS	set	14870
  1209  0000                     _RC5PPS	set	14869
  1210  0000                     _RA6PPS	set	14854
  1211  0000                     _RA5PPS	set	14853
  1212  0000                     _RA4PPS	set	14852
  1213  0000                     _SPI1SCKPPS	set	15070
  1214  0000                     _U1RXPPS	set	15077
  1215  0000                     _INT1PPS	set	15041
  1216  0000                     _INT2PPS	set	15042
  1217  0000                     _INT0PPS	set	15040
  1218  0000                     _RC3PPS	set	14867
  1219  0000                     _RB6PPS	set	14862
  1220  0000                     _U2RXPPS	set	15080
  1221  0000                     _SLRCONF	set	14995
  1222  0000                     _SLRCONE	set	14979
  1223  0000                     _SLRCOND	set	14963
  1224  0000                     _SLRCONC	set	14947
  1225  0000                     _SLRCONB	set	14931
  1226  0000                     _SLRCONA	set	14915
  1227  0000                     _ODCOND	set	14962
  1228  0000                     _ODCONC	set	14946
  1229  0000                     _ODCONB	set	14930
  1230  0000                     _ODCONA	set	14914
  1231  0000                     _ODCONF	set	14994
  1232  0000                     _ODCONE	set	14978
  1233  0000                     _WPUC	set	14945
  1234  0000                     _WPUA	set	14913
  1235  0000                     _WPUB	set	14929
  1236  0000                     _WPUE	set	14977
  1237  0000                     _WPUF	set	14993
  1238  0000                     _WPUD	set	14961
  1239  0000                     _ANSELA	set	14912
  1240  0000                     _ANSELF	set	14992
  1241  0000                     _ANSELE	set	14976
  1242  0000                     _ANSELB	set	14928
  1243  0000                     _ANSELC	set	14944
  1244  0000                     _ANSELD	set	14960
  1245  0000                     _DMA1SSA	set	15353
  1246  0000                     _DMA1DSZ	set	15342
  1247  0000                     _DMA1SSZ	set	15351
  1248  0000                     _DMA1DSA	set	15344
  1249  0000                     _DMA1CON0bits	set	15356
  1250  0000                     _DMA1CON1bits	set	15357
  1251  0000                     _DMA1CON0	set	15356
  1252  0000                     _DMA1AIRQ	set	15358
  1253  0000                     _DMA1SIRQ	set	15359
  1254  0000                     _DMA1CON1	set	15357
  1255  0000                     _CLC1CON	set	15476
  1256  0000                     _CLC1GLS3	set	15485
  1257  0000                     _CLC1GLS2	set	15484
  1258  0000                     _CLC1GLS1	set	15483
  1259  0000                     _CLC1GLS0	set	15482
  1260  0000                     _CLC1SEL3	set	15481
  1261  0000                     _CLC1SEL2	set	15480
  1262  0000                     _CLC1SEL1	set	15479
  1263  0000                     _CLC1SEL0	set	15478
  1264  0000                     _CLC1POL	set	15477
  1265  0000                     _CLKRCON	set	15589
  1266  0000                     _CLKRCLK	set	15590
  1267  0000                     _MD1CARL	set	15613
  1268  0000                     _MD1CARH	set	15614
  1269  0000                     _MD1SRC	set	15612
  1270  0000                     _MD1CON1bits	set	15611
  1271  0000                     _MD1CON0bits	set	15610
  1272  0000                     _SPI1INTFbits	set	15642
  1273  0000                     _SPI1RXB	set	15632
  1274  0000                     _SPI1TXB	set	15633
  1275  0000                     _SPI1TCNTL	set	15634
  1276  0000                     _SPI1CON0	set	15636
  1277  0000                     _SPI1CLK	set	15644
  1278  0000                     _SPI1BAUD	set	15641
  1279  0000                     _SPI1CON2	set	15638
  1280  0000                     _SPI1CON1	set	15637
  1281  0000                     _U2RXB	set	15824
  1282  0000                     _U2TXB	set	15826
  1283  0000                     _U2ERRIE	set	15842
  1284  0000                     _U2ERRIR	set	15841
  1285  0000                     _U2UIR	set	15840
  1286  0000                     _U2FIFO	set	15839
  1287  0000                     _U2BRGH	set	15838
  1288  0000                     _U2BRGL	set	15837
  1289  0000                     _U2CON2	set	15836
  1290  0000                     _U2CON1	set	15835
  1291  0000                     _U2CON0	set	15834
  1292  0000                     _U2P3L	set	15832
  1293  0000                     _U2P2L	set	15830
  1294  0000                     _U2P1L	set	15828
  1295  0000                     _U1RXB	set	15848
  1296  0000                     _U1TXB	set	15850
  1297  0000                     _U1ERRIE	set	15866
  1298  0000                     _U1ERRIR	set	15865
  1299  0000                     _U1UIR	set	15864
  1300  0000                     _U1FIFO	set	15863
  1301  0000                     _U1BRGH	set	15862
  1302  0000                     _U1BRGL	set	15861
  1303  0000                     _U1CON2	set	15860
  1304  0000                     _U1CON1	set	15859
  1305  0000                     _U1CON0	set	15858
  1306  0000                     _U1P3H	set	15857
  1307  0000                     _U1P3L	set	15856
  1308  0000                     _U1P2H	set	15855
  1309  0000                     _U1P2L	set	15854
  1310  0000                     _U1P1H	set	15853
  1311  0000                     _U1P1L	set	15852
  1312  0000                     _ADCON0	set	16120
  1313  0000                     _ADCLK	set	16127
  1314  0000                     _ADACT	set	16126
  1315  0000                     _ADREF	set	16125
  1316  0000                     _ADSTAT	set	16124
  1317  0000                     _ADCON3	set	16123
  1318  0000                     _ADCON2	set	16122
  1319  0000                     _ADCON1	set	16121
  1320  0000                     _ADPREH	set	16119
  1321  0000                     _ADPREL	set	16118
  1322  0000                     _ADCAP	set	16117
  1323  0000                     _ADACQH	set	16116
  1324  0000                     _ADACQL	set	16115
  1325  0000                     _ADPCH	set	16113
  1326  0000                     _ADRPT	set	16108
  1327  0000                     _ADACCU	set	16106
  1328  0000                     _ADSTPTH	set	16101
  1329  0000                     _ADSTPTL	set	16100
  1330  0000                     _ADUTHH	set	16097
  1331  0000                     _ADUTHL	set	16096
  1332  0000                     _ADLTHH	set	16095
  1333  0000                     _ADLTHL	set	16094
  1334  0000                     _NCO1CONbits	set	16190
  1335  0000                     _NCO1INCL	set	16187
  1336  0000                     _NCO1INCH	set	16188
  1337  0000                     _NCO1INCU	set	16189
  1338  0000                     _NCO1ACCL	set	16184
  1339  0000                     _NCO1ACCH	set	16185
  1340  0000                     _NCO1ACCU	set	16186
  1341  0000                     _NCO1CLK	set	16191
  1342  0000                     _NCO1CON	set	16190
  1343  0000                     _LATCbits	set	16316
  1344  0000                     _LATDbits	set	16317
  1345  0000                     _PORTBbits	set	16331
  1346  0000                     _T5CONbits	set	16282
  1347  0000                     _T5CON	set	16282
  1348  0000                     _TMR5L	set	16280
  1349  0000                     _TMR5H	set	16281
  1350  0000                     _T5CLK	set	16285
  1351  0000                     _T5GATE	set	16284
  1352  0000                     _T5GCON	set	16283
  1353  0000                     _LATEbits	set	16318
  1354  0000                     _T6CON	set	16276
  1355  0000                     _T6TMR	set	16274
  1356  0000                     _T6PR	set	16275
  1357  0000                     _T6RST	set	16279
  1358  0000                     _T6HLT	set	16277
  1359  0000                     _T6CLKCON	set	16278
  1360  0000                     _TRISD	set	16325
  1361  0000                     _TRISC	set	16324
  1362  0000                     _TRISB	set	16323
  1363  0000                     _TRISA	set	16322
  1364  0000                     _TRISF	set	16327
  1365  0000                     _TRISE	set	16326
  1366  0000                     _LATC	set	16316
  1367  0000                     _LATB	set	16315
  1368  0000                     _LATF	set	16319
  1369  0000                     _LATA	set	16314
  1370  0000                     _LATD	set	16317
  1371  0000                     _LATE	set	16318
  1372  0000                     _IVTLOCKbits	set	16340
  1373  0000                     _IVTLOCK	set	16340
  1374  0000                     _INTCON0bits	set	16338
  1375  0000                     _GIE	set	130711
  1376                           
  1377                           	psect	mediumconst
  1378  00FEC0                     __pmediumconst:
  1379                           	opt callstack 0
  1380  00FEC0  00                 	db	0
  1381  00FEC1  52                 	db	82	;'R'
  1382  00FEC2  25                 	db	37
  1383  00FEC3  64                 	db	100	;'d'
  1384  00FEC4  20                 	db	32
  1385  00FEC5  25                 	db	37
  1386  00FEC6  64                 	db	100	;'d'
  1387  00FEC7  2C                 	db	44
  1388  00FEC8  20                 	db	32
  1389  00FEC9  54                 	db	84	;'T'
  1390  00FECA  25                 	db	37
  1391  00FECB  64                 	db	100	;'d'
  1392  00FECC  20                 	db	32
  1393  00FECD  25                 	db	37
  1394  00FECE  64                 	db	100	;'d'
  1395  00FECF  20                 	db	32
  1396  00FED0  43                 	db	67	;'C'
  1397  00FED1  25                 	db	37
  1398  00FED2  64                 	db	100	;'d'
  1399  00FED3  20                 	db	32
  1400  00FED4  20                 	db	32
  1401  00FED5  46                 	db	70	;'F'
  1402  00FED6  47                 	db	71	;'G'
  1403  00FED7  42                 	db	66	;'B'
  1404  00FED8  40                 	db	64	;'@'
  1405  00FED9  4D                 	db	77	;'M'
  1406  00FEDA  43                 	db	67	;'C'
  1407  00FEDB  48                 	db	72	;'H'
  1408  00FEDC  50                 	db	80	;'P'
  1409  00FEDD  20                 	db	32
  1410  00FEDE  25                 	db	37
  1411  00FEDF  73                 	db	115	;'s'
  1412  00FEE0  20                 	db	32
  1413  00FEE1  20                 	db	32
  1414  00FEE2  20                 	db	32
  1415  00FEE3  20                 	db	32
  1416  00FEE4  20                 	db	32
  1417  00FEE5  20                 	db	32
  1418  00FEE6  20                 	db	32
  1419  00FEE7  20                 	db	32
  1420  00FEE8  20                 	db	32
  1421  00FEE9  20                 	db	32
  1422  00FEEA  20                 	db	32
  1423  00FEEB  20                 	db	32
  1424  00FEEC  20                 	db	32
  1425  00FEED  20                 	db	32
  1426  00FEEE  20                 	db	32
  1427  00FEEF  20                 	db	32
  1428  00FEF0  20                 	db	32
  1429  00FEF1  20                 	db	32
  1430  00FEF2  20                 	db	32
  1431  00FEF3  20                 	db	32
  1432  00FEF4  20                 	db	32
  1433  00FEF5  20                 	db	32
  1434  00FEF6  20                 	db	32
  1435  00FEF7  20                 	db	32
  1436  00FEF8  20                 	db	32
  1437  00FEF9  20                 	db	32
  1438  00FEFA  20                 	db	32
  1439  00FEFB  20                 	db	32
  1440  00FEFC  20                 	db	32
  1441  00FEFD  20                 	db	32
  1442  00FEFE  20                 	db	32
  1443  00FEFF  20                 	db	32
  1444  00FF00  20                 	db	32
  1445  00FF01  20                 	db	32
  1446  00FF02  20                 	db	32
  1447  00FF03  20                 	db	32
  1448  00FF04  20                 	db	32
  1449  00FF05  20                 	db	32
  1450  00FF06  20                 	db	32
  1451  00FF07  20                 	db	32
  1452  00FF08  20                 	db	32
  1453  00FF09  20                 	db	32
  1454  00FF0A  20                 	db	32
  1455  00FF0B  20                 	db	32
  1456  00FF0C  20                 	db	32
  1457  00FF0D  20                 	db	32
  1458  00FF0E  20                 	db	32
  1459  00FF0F  20                 	db	32
  1460  00FF10  20                 	db	32
  1461  00FF11  20                 	db	32
  1462  00FF12  20                 	db	32
  1463  00FF13  20                 	db	32
  1464  00FF14  20                 	db	32
  1465  00FF15  20                 	db	32
  1466  00FF16  20                 	db	32
  1467  00FF17  20                 	db	32
  1468  00FF18  20                 	db	32
  1469  00FF19  20                 	db	32
  1470  00FF1A  20                 	db	32
  1471  00FF1B  00                 	db	0
  1472  00FF1C                     STR_13:
  1473  00FF1C  4C                 	db	76	;'L'
  1474  00FF1D  4F                 	db	79	;'O'
  1475  00FF1E  47                 	db	71	;'G'
  1476  00FF1F  3A                 	db	58	;':'
  1477  00FF20  20                 	db	32
  1478  00FF21  55                 	db	85	;'U'
  1479  00FF22  25                 	db	37
  1480  00FF23  64                 	db	100	;'d'
  1481  00FF24  20                 	db	32
  1482  00FF25  47                 	db	71	;'G'
  1483  00FF26  25                 	db	37
  1484  00FF27  64                 	db	100	;'d'
  1485  00FF28  20                 	db	32
  1486  00FF29  25                 	db	37
  1487  00FF2A  64                 	db	100	;'d'
  1488  00FF2B  20                 	db	32
  1489  00FF2C  25                 	db	37
  1490  00FF2D  64                 	db	100	;'d'
  1491  00FF2E  20                 	db	32
  1492  00FF2F  20                 	db	32
  1493  00FF30  20                 	db	32
  1494  00FF31  20                 	db	32
  1495  00FF32  20                 	db	32
  1496  00FF33  20                 	db	32
  1497  00FF34  23                 	db	35
  1498  00FF35  00                 	db	0
  1499  00FF36                     STR_17:
  1500  00FF36  52                 	db	82	;'R'
  1501  00FF37  25                 	db	37
  1502  00FF38  64                 	db	100	;'d'
  1503  00FF39  20                 	db	32
  1504  00FF3A  25                 	db	37
  1505  00FF3B  64                 	db	100	;'d'
  1506  00FF3C  2C                 	db	44
  1507  00FF3D  20                 	db	32
  1508  00FF3E  54                 	db	84	;'T'
  1509  00FF3F  25                 	db	37
  1510  00FF40  64                 	db	100	;'d'
  1511  00FF41  20                 	db	32
  1512  00FF42  25                 	db	37
  1513  00FF43  64                 	db	100	;'d'
  1514  00FF44  20                 	db	32
  1515  00FF45  43                 	db	67	;'C'
  1516  00FF46  25                 	db	37
  1517  00FF47  64                 	db	100	;'d'
  1518  00FF48  20                 	db	32
  1519  00FF49  20                 	db	32
  1520  00FF4A  20                 	db	32
  1521  00FF4B  20                 	db	32
  1522  00FF4C  20                 	db	32
  1523  00FF4D  20                 	db	32
  1524  00FF4E  23                 	db	35
  1525  00FF4F  00                 	db	0
  1526  00FF50                     STR_5:
  1527  00FF50  48                 	db	72	;'H'
  1528  00FF51  4F                 	db	79	;'O'
  1529  00FF52  53                 	db	83	;'S'
  1530  00FF53  54                 	db	84	;'T'
  1531  00FF54  3A                 	db	58	;':'
  1532  00FF55  20                 	db	32
  1533  00FF56  25                 	db	37
  1534  00FF57  6C                 	db	108	;'l'
  1535  00FF58  64                 	db	100	;'d'
  1536  00FF59  20                 	db	32
  1537  00FF5A  47                 	db	71	;'G'
  1538  00FF5B  25                 	db	37
  1539  00FF5C  64                 	db	100	;'d'
  1540  00FF5D  20                 	db	32
  1541  00FF5E  20                 	db	32
  1542  00FF5F  20                 	db	32
  1543  00FF60  20                 	db	32
  1544  00FF61  20                 	db	32
  1545  00FF62  20                 	db	32
  1546  00FF63  23                 	db	35
  1547  00FF64  00                 	db	0
  1548  00FF65                     STR_14:
  1549  00FF65  20                 	db	32
  1550  00FF66  53                 	db	83	;'S'
  1551  00FF67  25                 	db	37
  1552  00FF68  64                 	db	100	;'d'
  1553  00FF69  46                 	db	70	;'F'
  1554  00FF6A  25                 	db	37
  1555  00FF6B  64                 	db	100	;'d'
  1556  00FF6C  20                 	db	32
  1557  00FF6D  23                 	db	35
  1558  00FF6E  25                 	db	37
  1559  00FF6F  6C                 	db	108	;'l'
  1560  00FF70  64                 	db	100	;'d'
  1561  00FF71  20                 	db	32
  1562  00FF72  20                 	db	32
  1563  00FF73  20                 	db	32
  1564  00FF74  20                 	db	32
  1565  00FF75  20                 	db	32
  1566  00FF76  20                 	db	32
  1567  00FF77  00                 	db	0
  1568  00FF78                     STR_10:
  1569  00FF78  45                 	db	69	;'E'
  1570  00FF79  25                 	db	37
  1571  00FF7A  64                 	db	100	;'d'
  1572  00FF7B  20                 	db	32
  1573  00FF7C  41                 	db	65	;'A'
  1574  00FF7D  25                 	db	37
  1575  00FF7E  64                 	db	100	;'d'
  1576  00FF7F  20                 	db	32
  1577  00FF80  54                 	db	84	;'T'
  1578  00FF81  25                 	db	37
  1579  00FF82  64                 	db	100	;'d'
  1580  00FF83  20                 	db	32
  1581  00FF84  47                 	db	71	;'G'
  1582  00FF85  25                 	db	37
  1583  00FF86  64                 	db	100	;'d'
  1584  00FF87  20                 	db	32
  1585  00FF88  23                 	db	35
  1586  00FF89  00                 	db	0
  1587  00FF8A                     STR_12:
  1588  00FF8A  20                 	db	32
  1589  00FF8B  50                 	db	80	;'P'
  1590  00FF8C  69                 	db	105	;'i'
  1591  00FF8D  6E                 	db	110	;'n'
  1592  00FF8E  67                 	db	103	;'g'
  1593  00FF8F  20                 	db	32
  1594  00FF90  47                 	db	71	;'G'
  1595  00FF91  25                 	db	37
  1596  00FF92  64                 	db	100	;'d'
  1597  00FF93  20                 	db	32
  1598  00FF94  20                 	db	32
  1599  00FF95  50                 	db	80	;'P'
  1600  00FF96  25                 	db	37
  1601  00FF97  64                 	db	100	;'d'
  1602  00FF98  20                 	db	32
  1603  00FF99  23                 	db	35
  1604  00FF9A  00                 	db	0
  1605  00FF9B                     STR_1:
  1606  00FF9B  20                 	db	32
  1607  00FF9C  52                 	db	82	;'R'
  1608  00FF9D  56                 	db	86	;'V'
  1609  00FF9E  49                 	db	73	;'I'
  1610  00FF9F  20                 	db	32
  1611  00FFA0  48                 	db	72	;'H'
  1612  00FFA1  4F                 	db	79	;'O'
  1613  00FFA2  53                 	db	83	;'S'
  1614  00FFA3  54                 	db	84	;'T'
  1615  00FFA4  20                 	db	32
  1616  00FFA5  54                 	db	84	;'T'
  1617  00FFA6  45                 	db	69	;'E'
  1618  00FFA7  53                 	db	83	;'S'
  1619  00FFA8  54                 	db	84	;'T'
  1620  00FFA9  45                 	db	69	;'E'
  1621  00FFAA  52                 	db	82	;'R'
  1622  00FFAB  00                 	db	0
  1623  00FFAC                     STR_6:
  1624  00FFAC  53                 	db	83	;'S'
  1625  00FFAD  25                 	db	37
  1626  00FFAE  64                 	db	100	;'d'
  1627  00FFAF  46                 	db	70	;'F'
  1628  00FFB0  25                 	db	37
  1629  00FFB1  64                 	db	100	;'d'
  1630  00FFB2  20                 	db	32
  1631  00FFB3  45                 	db	69	;'E'
  1632  00FFB4  72                 	db	114	;'r'
  1633  00FFB5  72                 	db	114	;'r'
  1634  00FFB6  20                 	db	32
  1635  00FFB7  20                 	db	32
  1636  00FFB8  20                 	db	32
  1637  00FFB9  20                 	db	32
  1638  00FFBA  00                 	db	0
  1639  00FFBB                     STR_4:
  1640  00FFBB  20                 	db	32
  1641  00FFBC  46                 	db	70	;'F'
  1642  00FFBD  47                 	db	71	;'G'
  1643  00FFBE  42                 	db	66	;'B'
  1644  00FFBF  40                 	db	64	;'@'
  1645  00FFC0  4D                 	db	77	;'M'
  1646  00FFC1  43                 	db	67	;'C'
  1647  00FFC2  48                 	db	72	;'H'
  1648  00FFC3  50                 	db	80	;'P'
  1649  00FFC4  20                 	db	32
  1650  00FFC5  46                 	db	70	;'F'
  1651  00FFC6  41                 	db	65	;'A'
  1652  00FFC7  42                 	db	66	;'B'
  1653  00FFC8  34                 	db	52	;'4'
  1654  00FFC9  00                 	db	0
  1655  00FFCA                     STR_7:
  1656  00FFCA  20                 	db	32
  1657  00FFCB  53                 	db	83	;'S'
  1658  00FFCC  25                 	db	37
  1659  00FFCD  64                 	db	100	;'d'
  1660  00FFCE  46                 	db	70	;'F'
  1661  00FFCF  25                 	db	37
  1662  00FFD0  64                 	db	100	;'d'
  1663  00FFD1  20                 	db	32
  1664  00FFD2  23                 	db	35
  1665  00FFD3  20                 	db	32
  1666  00FFD4  20                 	db	32
  1667  00FFD5  20                 	db	32
  1668  00FFD6  20                 	db	32
  1669  00FFD7  00                 	db	0
  1670  00FFD8                     STR_2:
  1671  00FFD8  20                 	db	32
  1672  00FFD9  56                 	db	86	;'V'
  1673  00FFDA  65                 	db	101	;'e'
  1674  00FFDB  72                 	db	114	;'r'
  1675  00FFDC  73                 	db	115	;'s'
  1676  00FFDD  69                 	db	105	;'i'
  1677  00FFDE  6F                 	db	111	;'o'
  1678  00FFDF  6E                 	db	110	;'n'
  1679  00FFE0  20                 	db	32
  1680  00FFE1  25                 	db	37
  1681  00FFE2  73                 	db	115	;'s'
  1682  00FFE3  00                 	db	0
  1683  00FFE4                     STR_9:
  1684  00FFE4  20                 	db	32
  1685  00FFE5  4F                 	db	79	;'O'
  1686  00FFE6  4B                 	db	75	;'K'
  1687  00FFE7  20                 	db	32
  1688  00FFE8  23                 	db	35
  1689  00FFE9  00                 	db	0
  1690  00FFEA                     STR_8:
  1691  00FFEA  20                 	db	32
  1692  00FFEB  4F                 	db	79	;'O'
  1693  00FFEC  4B                 	db	75	;'K'
  1694  00FFED  51                 	db	81	;'Q'
  1695  00FFEE  23                 	db	35
  1696  00FFEF  00                 	db	0
  1697  00FFF0                     STR_3:
  1698  00FFF0  30                 	db	48	;'0'
  1699  00FFF1  2E                 	db	46
  1700  00FFF2  39                 	db	57	;'9'
  1701  00FFF3  36                 	db	54	;'6'
  1702  00FFF4  42                 	db	66	;'B'
  1703  00FFF5  00                 	db	0
  1704  00FFF6                     STR_23:
  1705  00FFF6  6C                 	db	108	;'l'
  1706  00FFF7  64                 	db	100	;'d'
  1707  00FFF8  00                 	db	0
  1708  00FFF9                     STR_27:
  1709  00FFF9  6C                 	db	108	;'l'
  1710  00FFFA  69                 	db	105	;'i'
  1711  00FFFB  00                 	db	0
  1712  00FFFC                     STR_19:
  1713  00FFFC  25                 	db	37
  1714  00FFFD  63                 	db	99	;'c'
  1715  00FFFE  00                 	db	0
  1716  0000                     
  1717                           ; #config settings
  1718  00FFFF  00                 	db	0	; dummy byte at the end
  1719  0000                     
  1720                           	psect	cinit
  1721  013564                     __pcinit:
  1722                           	opt callstack 0
  1723  013564                     start_initialization:
  1724                           	opt callstack 0
  1725  013564                     __initialization:
  1726                           	opt callstack 0
  1727                           
  1728                           ; Initialize objects allocated to BIGRAM (518 bytes)
  1729                           ; load TBLPTR registers with __pidataBIGRAM
  1730  013564  0E20               	movlw	low __pidataBIGRAM
  1731  013566  6EF6               	movwf	tblptrl,c
  1732  013568  0E2E               	movlw	high __pidataBIGRAM
  1733  01356A  6EF7               	movwf	tblptrh,c
  1734  01356C  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  1735  01356E  6EF8               	movwf	tblptru,c
  1736  013570  EE00  F3F6         	lfsr	0,__pdataBIGRAM
  1737  013574  EE20 F206          	lfsr	2,518
  1738  013578                     copy_data0:
  1739  013578  0009               	tblrd		*+
  1740  01357A  006F FFD7 FFEE     	movff	tablat,postinc0
  1741  013580  50DD               	movf	postdec2,w,c
  1742  013582  50D9               	movf	fsr2l,w,c
  1743  013584  E1F9               	bnz	copy_data0
  1744  013586  50DA               	movf	fsr2h,w,c
  1745  013588  E1F7               	bnz	copy_data0
  1746                           
  1747                           ; Initialize objects allocated to BANK3 (112 bytes)
  1748                           ; load TBLPTR registers with __pidataBANK3
  1749  01358A  0E74               	movlw	low __pidataBANK3
  1750  01358C  6EF6               	movwf	tblptrl,c
  1751  01358E  0E3E               	movlw	high __pidataBANK3
  1752  013590  6EF7               	movwf	tblptrh,c
  1753  013592  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1754  013594  6EF8               	movwf	tblptru,c
  1755  013596  EE00  F386         	lfsr	0,__pdataBANK3
  1756  01359A  EE20 F070          	lfsr	2,112
  1757  01359E                     copy_data1:
  1758  01359E  0009               	tblrd		*+
  1759  0135A0  006F FFD7 FFEE     	movff	tablat,postinc0
  1760  0135A6  50DD               	movf	postdec2,w,c
  1761  0135A8  50D9               	movf	fsr2l,w,c
  1762  0135AA  E1F9               	bnz	copy_data1
  1763                           
  1764                           ; Initialize objects allocated to BANK1 (166 bytes)
  1765                           ; load TBLPTR registers with __pidataBANK1
  1766  0135AC  0ED6               	movlw	low __pidataBANK1
  1767  0135AE  6EF6               	movwf	tblptrl,c
  1768  0135B0  0E3A               	movlw	high __pidataBANK1
  1769  0135B2  6EF7               	movwf	tblptrh,c
  1770  0135B4  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1771  0135B6  6EF8               	movwf	tblptru,c
  1772  0135B8  EE00  F100         	lfsr	0,__pdataBANK1
  1773  0135BC  EE20 F0A6          	lfsr	2,166
  1774  0135C0                     copy_data2:
  1775  0135C0  0009               	tblrd		*+
  1776  0135C2  006F FFD7 FFEE     	movff	tablat,postinc0
  1777  0135C8  50DD               	movf	postdec2,w,c
  1778  0135CA  50D9               	movf	fsr2l,w,c
  1779  0135CC  E1F9               	bnz	copy_data2
  1780                           
  1781                           ; Initialize objects allocated to BANK0 (74 bytes)
  1782                           ; load TBLPTR registers with __pidataBANK0
  1783  0135CE  0E76               	movlw	low __pidataBANK0
  1784  0135D0  6EF6               	movwf	tblptrl,c
  1785  0135D2  0E42               	movlw	high __pidataBANK0
  1786  0135D4  6EF7               	movwf	tblptrh,c
  1787  0135D6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1788  0135D8  6EF8               	movwf	tblptru,c
  1789  0135DA  EE00  F060         	lfsr	0,__pdataBANK0
  1790  0135DE  EE20 F04A          	lfsr	2,74
  1791  0135E2                     copy_data3:
  1792  0135E2  0009               	tblrd		*+
  1793  0135E4  006F FFD7 FFEE     	movff	tablat,postinc0
  1794  0135EA  50DD               	movf	postdec2,w,c
  1795  0135EC  50D9               	movf	fsr2l,w,c
  1796  0135EE  E1F9               	bnz	copy_data3
  1797                           
  1798                           ; Initialize objects allocated to COMRAM (1 bytes)
  1799                           ; load TBLPTR registers with __pidataCOMRAM
  1800  0135F0  0EEE               	movlw	low __pidataCOMRAM
  1801  0135F2  6EF6               	movwf	tblptrl,c
  1802  0135F4  0E4C               	movlw	high __pidataCOMRAM
  1803  0135F6  6EF7               	movwf	tblptrh,c
  1804  0135F8  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1805  0135FA  6EF8               	movwf	tblptru,c
  1806  0135FC  0009               	tblrd		*+	;fetch initializer
  1807  0135FE  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1808                           
  1809                           ; Clear objects allocated to BANK3 (134 bytes)
  1810  013604  EE00  F300         	lfsr	0,__pbssBANK3
  1811  013608  0E86               	movlw	134
  1812  01360A                     clear_0:
  1813  01360A  6AEE               	clrf	postinc0,c
  1814  01360C  06E8               	decf	wreg,f,c
  1815  01360E  E1FD               	bnz	clear_0
  1816                           
  1817                           ; Clear objects allocated to BANK2 (256 bytes)
  1818  013610  EE00  F200         	lfsr	0,__pbssBANK2
  1819  013614  EE20 F100          	lfsr	2,256
  1820  013618                     clear_1:
  1821  013618  6AEE               	clrf	postinc0,c
  1822  01361A  50DD               	movf	postdec2,w,c
  1823  01361C  50D9               	movf	fsr2l,w,c
  1824  01361E  E1FC               	bnz	clear_1
  1825  013620  50DA               	movf	fsr2h,w,c
  1826  013622  E1FA               	bnz	clear_1
  1827                           
  1828                           ; Clear objects allocated to BANK1 (32 bytes)
  1829  013624  EE00  F1A6         	lfsr	0,__pbssBANK1
  1830  013628  0E20               	movlw	32
  1831  01362A                     clear_2:
  1832  01362A  6AEE               	clrf	postinc0,c
  1833  01362C  06E8               	decf	wreg,f,c
  1834  01362E  E1FD               	bnz	clear_2
  1835                           
  1836                           ; Clear objects allocated to BANK0 (69 bytes)
  1837  013630  EE00  F0AA         	lfsr	0,__pbssBANK0
  1838  013634  0E45               	movlw	69
  1839  013636                     clear_3:
  1840  013636  6AEE               	clrf	postinc0,c
  1841  013638  06E8               	decf	wreg,f,c
  1842  01363A  E1FD               	bnz	clear_3
  1843                           
  1844                           ; Clear objects allocated to COMRAM (60 bytes)
  1845  01363C  EE00  F001         	lfsr	0,__pbssCOMRAM
  1846  013640  0E3C               	movlw	60
  1847  013642                     clear_4:
  1848  013642  6AEE               	clrf	postinc0,c
  1849  013644  06E8               	decf	wreg,f,c
  1850  013646  E1FD               	bnz	clear_4
  1851                           
  1852                           ;
  1853                           ; Setup IVTBASE
  1854                           ;
  1855  013648  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1856  01364A  6ED5               	movwf	213,c
  1857  01364C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1858  01364E  6ED6               	movwf	214,c
  1859  013650  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1860  013652  6ED7               	movwf	215,c
  1861  013654                     end_of_initialization:
  1862                           	opt callstack 0
  1863  013654                     __end_of__initialization:
  1864                           	opt callstack 0
  1865  013654  0100               	movlb	0
  1866  013656  EF00  F080         	goto	_main	;jump to C main() function
  1867                           
  1868                           	psect	bssCOMRAM
  1869  000001                     __pbssCOMRAM:
  1870                           	opt callstack 0
  1871  000001                     secs_II_message@block:
  1872                           	opt callstack 0
  1873  000001                     	ds	7
  1874  000008                     _UART1_TxInterruptHandler:
  1875                           	opt callstack 0
  1876  000008                     	ds	3
  1877  00000B                     _UART1_RxInterruptHandler:
  1878                           	opt callstack 0
  1879  00000B                     	ds	3
  1880  00000E                     _UART2_TxInterruptHandler:
  1881                           	opt callstack 0
  1882  00000E                     	ds	3
  1883  000011                     _UART2_RxInterruptHandler:
  1884                           	opt callstack 0
  1885  000011                     	ds	3
  1886  000014                     _INT2_InterruptHandler:
  1887                           	opt callstack 0
  1888  000014                     	ds	3
  1889  000017                     _INT1_InterruptHandler:
  1890                           	opt callstack 0
  1891  000017                     	ds	3
  1892  00001A                     _INT0_InterruptHandler:
  1893                           	opt callstack 0
  1894  00001A                     	ds	3
  1895  00001D                     _width:
  1896                           	opt callstack 0
  1897  00001D                     	ds	2
  1898  00001F                     _prec:
  1899                           	opt callstack 0
  1900  00001F                     	ds	2
  1901  000021                     _flags:
  1902                           	opt callstack 0
  1903  000021                     	ds	2
  1904  000023                     r_protocol@b_block:
  1905                           	opt callstack 0
  1906  000023                     	ds	2
  1907  000025                     run_checksum@sum:
  1908                           	opt callstack 0
  1909  000025                     	ds	2
  1910  000027                     TMR5_ISR@CountCallBack:
  1911                           	opt callstack 0
  1912  000027                     	ds	2
  1913  000029                     _timer5ReloadVal:
  1914                           	opt callstack 0
  1915  000029                     	ds	2
  1916  00002B                     secs_gem_state@block:
  1917                           	opt callstack 0
  1918  00002B                     	ds	1
  1919  00002C                     t_protocol@requeue:
  1920                           	opt callstack 0
  1921  00002C                     	ds	1
  1922  00002D                     t_protocol@retry:
  1923                           	opt callstack 0
  1924  00002D                     	ds	1
  1925  00002E                     r_protocol@rxData_l:
  1926                           	opt callstack 0
  1927  00002E                     	ds	1
  1928  00002F                     m_protocol@rxData_l:
  1929                           	opt callstack 0
  1930  00002F                     	ds	1
  1931  000030                     _mode_sw:
  1932                           	opt callstack 0
  1933  000030                     	ds	1
  1934  000031                     _uart2RxCount:
  1935                           	opt callstack 0
  1936  000031                     	ds	1
  1937  000032                     _uart2RxTail:
  1938                           	opt callstack 0
  1939  000032                     	ds	1
  1940  000033                     _uart2RxHead:
  1941                           	opt callstack 0
  1942  000033                     	ds	1
  1943  000034                     _uart2TxBufferRemaining:
  1944                           	opt callstack 0
  1945  000034                     	ds	1
  1946  000035                     _uart2TxTail:
  1947                           	opt callstack 0
  1948  000035                     	ds	1
  1949  000036                     _uart2TxHead:
  1950                           	opt callstack 0
  1951  000036                     	ds	1
  1952  000037                     _uart1RxCount:
  1953                           	opt callstack 0
  1954  000037                     	ds	1
  1955  000038                     _uart1RxTail:
  1956                           	opt callstack 0
  1957  000038                     	ds	1
  1958  000039                     _uart1RxHead:
  1959                           	opt callstack 0
  1960  000039                     	ds	1
  1961  00003A                     _uart1TxBufferRemaining:
  1962                           	opt callstack 0
  1963  00003A                     	ds	1
  1964  00003B                     _uart1TxTail:
  1965                           	opt callstack 0
  1966  00003B                     	ds	1
  1967  00003C                     _uart1TxHead:
  1968                           	opt callstack 0
  1969  00003C                     	ds	1
  1970                           
  1971                           	psect	dataCOMRAM
  1972  00005D                     __pdataCOMRAM:
  1973                           	opt callstack 0
  1974  00005D                     r_protocol@retry:
  1975                           	opt callstack 0
  1976  00005D                     	ds	1
  1977                           
  1978                           	psect	bssBANK0
  1979  0000AA                     __pbssBANK0:
  1980                           	opt callstack 0
  1981  0000AA                     _tickCount:
  1982                           	opt callstack 0
  1983  0000AA                     	ds	14
  1984  0000B8                     _r_block:
  1985                           	opt callstack 0
  1986  0000B8                     	ds	13
  1987  0000C5                     _spi_link:
  1988                           	opt callstack 0
  1989  0000C5                     	ds	12
  1990  0000D1                     t_protocol@block:
  1991                           	opt callstack 0
  1992  0000D1                     	ds	7
  1993  0000D8                     wdtdelay@dcount:
  1994                           	opt callstack 0
  1995  0000D8                     	ds	4
  1996  0000DC                     _TMR5_InterruptHandler:
  1997                           	opt callstack 0
  1998  0000DC                     	ds	3
  1999  0000DF                     _TMR6_InterruptHandler:
  2000                           	opt callstack 0
  2001  0000DF                     	ds	3
  2002  0000E2                     _ADCC_ADI_InterruptHandler:
  2003                           	opt callstack 0
  2004  0000E2                     	ds	3
  2005  0000E5                     _nout:
  2006                           	opt callstack 0
  2007  0000E5                     	ds	2
  2008  0000E7                     _seed:
  2009                           	opt callstack 0
  2010  0000E7                     	ds	8
  2011                           
  2012                           	psect	dataBANK0
  2013  000060                     __pdataBANK0:
  2014                           	opt callstack 0
  2015  000060                     stoa@F1144:
  2016                           	opt callstack 0
  2017  000060                     	ds	7
  2018  000067                     _H12:
  2019                           	opt callstack 0
  2020  000067                     	ds	30
  2021  000085                     _H17:
  2022                           	opt callstack 0
  2023  000085                     	ds	20
  2024  000099                     _H14:
  2025                           	opt callstack 0
  2026  000099                     	ds	17
  2027                           
  2028                           	psect	bssBANK1
  2029  0001A6                     __pbssBANK1:
  2030                           	opt callstack 0
  2031  0001A6                     _dbuf:
  2032                           	opt callstack 0
  2033  0001A6                     	ds	32
  2034                           
  2035                           	psect	dataBANK1
  2036  000100                     __pdataBANK1:
  2037                           	opt callstack 0
  2038  000100                     _H10:
  2039                           	opt callstack 0
  2040  000100                     	ds	91
  2041  00015B                     _H13:
  2042                           	opt callstack 0
  2043  00015B                     	ds	48
  2044  00018B                     _H24:
  2045                           	opt callstack 0
  2046  00018B                     	ds	27
  2047                           
  2048                           	psect	bssBANK2
  2049  000200                     __pbssBANK2:
  2050                           	opt callstack 0
  2051  000200                     _uart2RxBuffer:
  2052                           	opt callstack 0
  2053  000200                     	ds	64
  2054  000240                     _uart2TxBuffer:
  2055                           	opt callstack 0
  2056  000240                     	ds	64
  2057  000280                     _uart1RxBuffer:
  2058                           	opt callstack 0
  2059  000280                     	ds	64
  2060  0002C0                     _uart1TxBuffer:
  2061                           	opt callstack 0
  2062  0002C0                     	ds	64
  2063                           
  2064                           	psect	bssBANK3
  2065  000300                     __pbssBANK3:
  2066                           	opt callstack 0
  2067  000300                     _ring_buf2:
  2068                           	opt callstack 0
  2069  000300                     	ds	67
  2070  000343                     _ring_buf1:
  2071                           	opt callstack 0
  2072  000343                     	ds	67
  2073                           
  2074                           	psect	dataBANK3
  2075  000386                     __pdataBANK3:
  2076                           	opt callstack 0
  2077  000386                     _H53:
  2078                           	opt callstack 0
  2079  000386                     	ds	112
  2080                           
  2081                           	psect	dataBIGRAM
  2082  0003F6                     __pdataBIGRAM:
  2083                           	opt callstack 0
  2084  0003F6                     _V:
  2085                           	opt callstack 0
  2086  0003F6                     	ds	261
  2087  0004FB                     _H254:
  2088                           	opt callstack 0
  2089  0004FB                     	ds	257
  2090                           
  2091                           	psect	cstackBANK0
  2092  0000EF                     __pcstackBANK0:
  2093                           	opt callstack 0
  2094  0000EF                     ??_TMR5_ISR:
  2095                           
  2096                           ; 1 bytes @ 0x0
  2097  0000EF                     	ds	3
  2098                           
  2099                           	psect	cstackCOMRAM
  2100  00005E                     __pcstackCOMRAM:
  2101                           	opt callstack 0
  2102  00005E                     ??_TMR6_ISR:
  2103  00005E                     
  2104                           ; 1 bytes @ 0x0
  2105  00005E                     	ds	1
  2106  00005F                     
  2107                           ; 1 bytes @ 0x1
  2108 ;;
  2109 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  2110 ;;
  2111 ;; *************** function _main *****************
  2112 ;; Defined at:
  2113 ;;		line 458 in file "main.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  mode            1  [STACK] enum E16897
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1  [STACK] void 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 4/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels required when called:   14
  2133 ;; This function calls:
  2134 ;;		_SYSTEM_Initialize
  2135 ;;		_StartTimer
  2136 ;;		_TimerDone
  2137 ;;		_WaitMs
  2138 ;;		_eaDogM_WriteCommand
  2139 ;;		_eaDogM_WriteStringAtPos
  2140 ;;		_hb_message
  2141 ;;		_init_display
  2142 ;;		_m_protocol
  2143 ;;		_r_protocol
  2144 ;;		_sprintf
  2145 ;;		_srand
  2146 ;;		_t_protocol
  2147 ;;		_wait_lcd_done
  2148 ;; This function is called by:
  2149 ;;		Startup code after reset
  2150 ;; This function uses a reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text0
  2154  010000                     __ptext0:
  2155                           	opt callstack 0
  2156  010000                     _main:
  2157                           	opt callstack 0
  2158                           
  2159                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2160  010000  52E6               	movf	postinc1,f,c
  2161                           
  2162                           ;main.c: 460:  UI_STATES mode;;main.c: 463:  SYSTEM_Initialize();
  2163                           
  2164                           ;incstack = 0
  2165  010002  ECEE  F0A1         	call	_SYSTEM_Initialize	;wreg free
  2166                           
  2167                           ; BSR set to: 60
  2168                           ;main.c: 466:  (INTCON0bits.GIEH = 1);
  2169  010006  8ED2               	bsf	16338,7,c	;volatile
  2170                           
  2171                           ; BSR set to: 60
  2172                           ;main.c: 469:  (INTCON0bits.GIEL = 1);
  2173  010008  8CD2               	bsf	16338,6,c	;volatile
  2174                           
  2175                           ; BSR set to: 60
  2176                           ;main.c: 471:  V.ui_state = UI_STATE_INIT;
  2177  01000A  0E00               	movlw	0
  2178  01000C  006F FFA0  F3F7    	movff	wreg,_V+1	;volatile
  2179                           
  2180                           ; BSR set to: 60
  2181                           ;main.c: 476:  WaitMs(300);
  2182  010012  0E2C               	movlw	44
  2183  010014  6EE6               	movwf	postinc1,c
  2184  010016  0E01               	movlw	1
  2185  010018  6EE6               	movwf	postinc1,c
  2186  01001A  ECC9  F0A2         	call	_WaitMs	;wreg free
  2187                           
  2188                           ;main.c: 477:  if (PORTBbits.RB0) {
  2189  01001E  A0CB               	btfss	16331,0,c	;volatile
  2190  010020  D004               	goto	l8802
  2191                           
  2192                           ;main.c: 478:   mode = UI_STATE_HOST;
  2193                           ;stkvar	_mode @ sp[(-1)+0]
  2194  010022  0EFF               	movlw	-1
  2195  010024  6AE3               	clrf	plusw1,c
  2196  010026  2AE3               	incf	plusw1,f,c
  2197                           
  2198                           ;main.c: 479:  } else {
  2199  010028  D004               	goto	l8804
  2200  01002A                     l8802:
  2201                           
  2202                           ;main.c: 480:   mode = UI_STATE_LOG;
  2203                           ;stkvar	_mode @ sp[(-1)+0]
  2204  01002A  0EFF               	movlw	-1
  2205  01002C  6AE3               	clrf	plusw1,c
  2206  01002E  80E3               	bsf	plusw1,0,c
  2207  010030  82E3               	bsf	plusw1,1,c	;indir
  2208  010032                     l8804:
  2209                           
  2210                           ;main.c: 483:  if (mode == UI_STATE_HOST) {
  2211                           ;stkvar	_mode @ sp[(-1)+0]
  2212  010032  0EFF               	movlw	-1
  2213  010034  04E3               	decf	plusw1,w,c
  2214  010036  A4D8               	btfss	status,2,c
  2215  010038  D003               	goto	l1236
  2216                           
  2217                           ;main.c: 484:   do { LATDbits.LATD0 = 1; } while(0);
  2218  01003A  80BD               	bsf	16317,0,c	;volatile
  2219                           
  2220                           ;main.c: 485:   do { LATDbits.LATD1 = 1; } while(0);
  2221  01003C  82BD               	bsf	16317,1,c	;volatile
  2222  01003E  D3A3               	goto	l8996
  2223  010040                     l1236:
  2224  010040  90BD               	bcf	16317,0,c	;volatile
  2225                           
  2226                           ;main.c: 488:   do { LATDbits.LATD1 = 0; } while(0);
  2227  010042  92BD               	bcf	16317,1,c	;volatile
  2228  010044  D3A0               	goto	l8996
  2229  010046                     l8806:
  2230                           
  2231                           ;main.c: 494:    init_display();
  2232  010046  EC2D  F09B         	call	_init_display	;wreg free
  2233                           
  2234                           ; BSR set to: 61
  2235                           ;main.c: 495:    eaDogM_WriteCommand(0b00001100);
  2236  01004A  0E0C               	movlw	12
  2237  01004C  6EE6               	movwf	postinc1,c
  2238  01004E  EC24  F0A6         	call	_eaDogM_WriteCommand	;wreg free
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;main.c: 497:    V.ui_state = mode;
  2242                           ;stkvar	_mode @ sp[(-1)+0]
  2243  010052  0EFF               	movlw	-1
  2244  010054  006F FF8C  F048    	movff	plusw1,btemp+11
  2245  01005A  0060  F120  F3F7   	movff	btemp+11,_V+1	;volatile
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;main.c: 498:    V.s_state = SEQ_STATE_INIT;
  2249  010060  0E00               	movlw	0
  2250  010062  006F FFA0  F3F6    	movff	wreg,_V
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;main.c: 499:    srand(1957);
  2254  010068  0EA5               	movlw	165
  2255  01006A  6EE6               	movwf	postinc1,c
  2256  01006C  0E07               	movlw	7
  2257  01006E  6EE6               	movwf	postinc1,c
  2258  010070  ECFF  F0A2         	call	_srand	;wreg free
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;main.c: 500:    sprintf(V.buf, " RVI HOST TESTER");
  2262  010074  0E9B               	movlw	low STR_1
  2263  010076  6EE6               	movwf	postinc1,c
  2264  010078  0EFF               	movlw	high STR_1
  2265  01007A  6EE6               	movwf	postinc1,c
  2266  01007C  0EFC               	movlw	low (_V+6)
  2267  01007E  6EE6               	movwf	postinc1,c
  2268  010080  0E03               	movlw	high (_V+6)
  2269  010082  6EE6               	movwf	postinc1,c
  2270  010084  0E04               	movlw	4
  2271  010086  6EE6               	movwf	postinc1,c
  2272  010088  EC2D  F09A         	call	_sprintf	;wreg free
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;main.c: 501:    wait_lcd_done();
  2276  01008C  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;main.c: 502:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  2280  010090  0EFC               	movlw	low (_V+6)
  2281  010092  6EE6               	movwf	postinc1,c
  2282  010094  0E03               	movlw	high (_V+6)
  2283  010096  6EE6               	movwf	postinc1,c
  2284  010098  0E00               	movlw	0
  2285  01009A  6EE6               	movwf	postinc1,c
  2286  01009C  0E00               	movlw	0
  2287  01009E  6EE6               	movwf	postinc1,c
  2288  0100A0  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  2289                           
  2290                           ; BSR set to: 59
  2291                           ;main.c: 503:    sprintf(V.buf, " Version %s", "0.96B");
  2292  0100A4  0EF0               	movlw	low STR_3
  2293  0100A6  6EE6               	movwf	postinc1,c
  2294  0100A8  0EFF               	movlw	high STR_3
  2295  0100AA  6EE6               	movwf	postinc1,c
  2296  0100AC  0ED8               	movlw	low STR_2
  2297  0100AE  6EE6               	movwf	postinc1,c
  2298  0100B0  0EFF               	movlw	high STR_2
  2299  0100B2  6EE6               	movwf	postinc1,c
  2300  0100B4  0EFC               	movlw	low (_V+6)
  2301  0100B6  6EE6               	movwf	postinc1,c
  2302  0100B8  0E03               	movlw	high (_V+6)
  2303  0100BA  6EE6               	movwf	postinc1,c
  2304  0100BC  0E06               	movlw	6
  2305  0100BE  6EE6               	movwf	postinc1,c
  2306  0100C0  EC2D  F09A         	call	_sprintf	;wreg free
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;main.c: 504:    wait_lcd_done();
  2310  0100C4  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;main.c: 505:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2314  0100C8  0EFC               	movlw	low (_V+6)
  2315  0100CA  6EE6               	movwf	postinc1,c
  2316  0100CC  0E03               	movlw	high (_V+6)
  2317  0100CE  6EE6               	movwf	postinc1,c
  2318  0100D0  0E00               	movlw	0
  2319  0100D2  6EE6               	movwf	postinc1,c
  2320  0100D4  0E01               	movlw	1
  2321  0100D6  6EE6               	movwf	postinc1,c
  2322  0100D8  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  2323                           
  2324                           ; BSR set to: 59
  2325                           ;main.c: 506:    sprintf(V.buf, " FGB@MCHP FAB4");
  2326  0100DC  0EBB               	movlw	low STR_4
  2327  0100DE  6EE6               	movwf	postinc1,c
  2328  0100E0  0EFF               	movlw	high STR_4
  2329  0100E2  6EE6               	movwf	postinc1,c
  2330  0100E4  0EFC               	movlw	low (_V+6)
  2331  0100E6  6EE6               	movwf	postinc1,c
  2332  0100E8  0E03               	movlw	high (_V+6)
  2333  0100EA  6EE6               	movwf	postinc1,c
  2334  0100EC  0E04               	movlw	4
  2335  0100EE  6EE6               	movwf	postinc1,c
  2336  0100F0  EC2D  F09A         	call	_sprintf	;wreg free
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;main.c: 507:    wait_lcd_done();
  2340  0100F4  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;main.c: 508:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  2344  0100F8  0EFC               	movlw	low (_V+6)
  2345  0100FA  6EE6               	movwf	postinc1,c
  2346  0100FC  0E03               	movlw	high (_V+6)
  2347  0100FE  6EE6               	movwf	postinc1,c
  2348  010100  0E00               	movlw	0
  2349  010102  6EE6               	movwf	postinc1,c
  2350  010104  0E02               	movlw	2
  2351  010106  6EE6               	movwf	postinc1,c
  2352  010108  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  2353                           
  2354                           ; BSR set to: 59
  2355                           ;main.c: 509:    WaitMs(3000);
  2356  01010C  0EB8               	movlw	184
  2357  01010E  6EE6               	movwf	postinc1,c
  2358  010110  0E0B               	movlw	11
  2359  010112  6EE6               	movwf	postinc1,c
  2360  010114  ECC9  F0A2         	call	_WaitMs	;wreg free
  2361                           
  2362                           ;main.c: 510:    break;
  2363  010118  D34B               	goto	l1288
  2364  01011A                     l1246:
  2365                           
  2366                           ;main.c: 514:     V.r_l_state = LINK_STATE_IDLE;
  2367  01011A  0E00               	movlw	0
  2368  01011C  006F FFA0  F3FA    	movff	wreg,_V+4	;volatile
  2369                           
  2370                           ;main.c: 515:     V.t_l_state = LINK_STATE_IDLE;
  2371  010122  0E00               	movlw	0
  2372  010124  006F FFA0  F3FB    	movff	wreg,_V+5	;volatile
  2373                           
  2374                           ;main.c: 516:     V.s_state = SEQ_STATE_RX;
  2375  01012A  0E01               	movlw	1
  2376  01012C  006F FFA0  F3F6    	movff	wreg,_V
  2377                           
  2378                           ;main.c: 517:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2379  010132  0061  F39B  FFE8   	movff	_V+240,wreg	;volatile
  2380  010138  0A0A               	xorlw	10
  2381  01013A  A4D8               	btfss	status,2,c
  2382  01013C  D15E               	goto	l8910
  2383  01013E  0061  F39F  FFE8   	movff	_V+241,wreg	;volatile
  2384  010144  0A0A               	xorlw	10
  2385  010146  A4D8               	btfss	status,2,c
  2386  010148  D158               	goto	l8910
  2387                           
  2388                           ;main.c: 518:      sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2389  01014A  EE20  F3F8         	lfsr	2,_V+2	;volatile
  2390  01014E  50DF               	movf	indf2,w,c
  2391  010150  6EE6               	movwf	postinc1,c
  2392  010152  0E00               	movlw	0
  2393  010154  6EE6               	movwf	postinc1,c
  2394  010156  EE21  F0DC         	lfsr	2,_V+230	;volatile
  2395  01015A  006F FF7B FFE6     	movff	postinc2,postinc1
  2396  010160  006F FF7B FFE6     	movff	postinc2,postinc1
  2397  010166  006F FF7B FFE6     	movff	postinc2,postinc1
  2398  01016C  006F FF7B FFE6     	movff	postinc2,postinc1
  2399  010172  0E50               	movlw	low STR_5
  2400  010174  6EE6               	movwf	postinc1,c
  2401  010176  0EFF               	movlw	high STR_5
  2402  010178  6EE6               	movwf	postinc1,c
  2403  01017A  0EFC               	movlw	low (_V+6)
  2404  01017C  6EE6               	movwf	postinc1,c
  2405  01017E  0E03               	movlw	high (_V+6)
  2406  010180  6EE6               	movwf	postinc1,c
  2407  010182  0E0A               	movlw	10
  2408  010184  6EE6               	movwf	postinc1,c
  2409  010186  EC2D  F09A         	call	_sprintf	;wreg free
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;main.c: 519:      V.buf[16] = 0;
  2413  01018A  0E00               	movlw	0
  2414  01018C  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;main.c: 520:      wait_lcd_done();
  2418  010192  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;main.c: 521:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  2422  010196  0EFC               	movlw	low (_V+6)
  2423  010198  6EE6               	movwf	postinc1,c
  2424  01019A  0E03               	movlw	high (_V+6)
  2425  01019C  6EE6               	movwf	postinc1,c
  2426  01019E  0E00               	movlw	0
  2427  0101A0  6EE6               	movwf	postinc1,c
  2428  0101A2  0E02               	movlw	2
  2429  0101A4  6EE6               	movwf	postinc1,c
  2430  0101A6  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  2431  0101AA  D127               	goto	l8910
  2432  0101AC                     l8848:
  2433                           
  2434                           ;main.c: 532:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  2435  0101AC  0EFA               	movlw	low (_V+4)
  2436  0101AE  6EE6               	movwf	postinc1,c
  2437  0101B0  0E03               	movlw	high (_V+4)
  2438  0101B2  6EE6               	movwf	postinc1,c
  2439  0101B4  ECB4  F08B         	call	_r_protocol	;wreg free
  2440  0101B8  0E04               	movlw	4
  2441  0101BA  183D               	xorwf	btemp,w,c
  2442  0101BC  A4D8               	btfss	status,2,c
  2443  0101BE  D062               	goto	l8872
  2444                           
  2445                           ;main.c: 533:      if (V.stream == 9) {
  2446  0101C0  0061  F393  FFE8   	movff	_V+238,wreg	;volatile
  2447  0101C6  0A09               	xorlw	9
  2448  0101C8  A4D8               	btfss	status,2,c
  2449  0101CA  D01B               	goto	l1251
  2450                           
  2451                           ;main.c: 534:       V.msg_error = V.function;
  2452  0101CC  C4E5  F4E8         	movff	_V+239,_V+242	;volatile
  2453                           
  2454                           ;main.c: 535:       sprintf(V.buf, "S%dF%d Err    ", V.stream, V.function);
  2455  0101D0  EE21  F0E5         	lfsr	2,_V+239	;volatile
  2456  0101D4  50DF               	movf	indf2,w,c
  2457  0101D6  6EE6               	movwf	postinc1,c
  2458  0101D8  0E00               	movlw	0
  2459  0101DA  6EE6               	movwf	postinc1,c
  2460  0101DC  EE21  F0E4         	lfsr	2,_V+238	;volatile
  2461  0101E0  50DF               	movf	indf2,w,c
  2462  0101E2  6EE6               	movwf	postinc1,c
  2463  0101E4  0E00               	movlw	0
  2464  0101E6  6EE6               	movwf	postinc1,c
  2465  0101E8  0EAC               	movlw	low STR_6
  2466  0101EA  6EE6               	movwf	postinc1,c
  2467  0101EC  0EFF               	movlw	high STR_6
  2468  0101EE  6EE6               	movwf	postinc1,c
  2469  0101F0  0EFC               	movlw	low (_V+6)
  2470  0101F2  6EE6               	movwf	postinc1,c
  2471  0101F4  0E03               	movlw	high (_V+6)
  2472  0101F6  6EE6               	movwf	postinc1,c
  2473  0101F8  0E08               	movlw	8
  2474  0101FA  6EE6               	movwf	postinc1,c
  2475  0101FC  EC2D  F09A         	call	_sprintf	;wreg free
  2476                           
  2477                           ;main.c: 536:      } else {
  2478  010200  D01C               	goto	l8858
  2479  010202                     l1251:
  2480                           
  2481                           ;main.c: 537:       V.msg_error = MSG_ERROR_NONE;
  2482  010202  0E00               	movlw	0
  2483  010204  006F FFA0  F4E8    	movff	wreg,_V+242	;volatile
  2484                           
  2485                           ;main.c: 538:       sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  2486  01020A  EE21  F0E5         	lfsr	2,_V+239	;volatile
  2487  01020E  50DF               	movf	indf2,w,c
  2488  010210  6EE6               	movwf	postinc1,c
  2489  010212  0E00               	movlw	0
  2490  010214  6EE6               	movwf	postinc1,c
  2491  010216  EE21  F0E4         	lfsr	2,_V+238	;volatile
  2492  01021A  50DF               	movf	indf2,w,c
  2493  01021C  6EE6               	movwf	postinc1,c
  2494  01021E  0E00               	movlw	0
  2495  010220  6EE6               	movwf	postinc1,c
  2496  010222  0ECA               	movlw	low STR_7
  2497  010224  6EE6               	movwf	postinc1,c
  2498  010226  0EFF               	movlw	high STR_7
  2499  010228  6EE6               	movwf	postinc1,c
  2500  01022A  0EFC               	movlw	low (_V+6)
  2501  01022C  6EE6               	movwf	postinc1,c
  2502  01022E  0E03               	movlw	high (_V+6)
  2503  010230  6EE6               	movwf	postinc1,c
  2504  010232  0E08               	movlw	8
  2505  010234  6EE6               	movwf	postinc1,c
  2506  010236  EC2D  F09A         	call	_sprintf	;wreg free
  2507  01023A                     l8858:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;main.c: 540:      V.buf[11] = 0;
  2511  01023A  0E00               	movlw	0
  2512  01023C  006F FFA0  F407    	movff	wreg,_V+17	;volatile
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;main.c: 541:      wait_lcd_done();
  2516  010242  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;main.c: 542:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  2520  010246  0EFC               	movlw	low (_V+6)
  2521  010248  6EE6               	movwf	postinc1,c
  2522  01024A  0E03               	movlw	high (_V+6)
  2523  01024C  6EE6               	movwf	postinc1,c
  2524  01024E  0E00               	movlw	0
  2525  010250  6EE6               	movwf	postinc1,c
  2526  010252  0E00               	movlw	0
  2527  010254  6EE6               	movwf	postinc1,c
  2528  010256  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  2529                           
  2530                           ; BSR set to: 59
  2531                           ;main.c: 546:      if (V.wbit) {
  2532  01025A  EE21  F0F4         	lfsr	2,_V+254	;volatile
  2533  01025E  A2DF               	btfss	indf2,1,c
  2534  010260  D00D               	goto	l1253
  2535                           
  2536                           ; BSR set to: 59
  2537                           ;main.c: 547:       V.s_state = SEQ_STATE_TX;
  2538  010262  0E02               	movlw	2
  2539  010264  006F FFA0  F3F6    	movff	wreg,_V
  2540                           
  2541                           ; BSR set to: 59
  2542                           ;main.c: 548:       V.failed_send = 0;
  2543  01026A  EE21  F0F4         	lfsr	2,_V+254	;volatile
  2544  01026E  0E87               	movlw	-121
  2545  010270  16DF               	andwf	223,f,c
  2546                           
  2547                           ; BSR set to: 59
  2548                           ;main.c: 549:       V.t_l_state = LINK_STATE_IDLE;
  2549  010272  0E00               	movlw	0
  2550  010274  006F FFA0  F3FB    	movff	wreg,_V+5	;volatile
  2551                           
  2552                           ;main.c: 550:      } else {
  2553  01027A  D004               	goto	l8872
  2554  01027C                     l1253:
  2555                           
  2556                           ; BSR set to: 59
  2557                           ;main.c: 551:       V.s_state = SEQ_STATE_TRIGGER;
  2558  01027C  0E03               	movlw	3
  2559  01027E  006F FFA0  F3F6    	movff	wreg,_V
  2560  010284                     l8872:
  2561                           
  2562                           ;main.c: 554:     if (V.r_l_state == LINK_STATE_ERROR)
  2563  010284  0060  FFEB  FFE8   	movff	_V+4,wreg	;volatile
  2564  01028A  D011               	goto	L34
  2565  01028C                     l8876:
  2566                           
  2567                           ;main.c: 561:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  2568  01028C  0EFB               	movlw	low (_V+5)
  2569  01028E  6EE6               	movwf	postinc1,c
  2570  010290  0E03               	movlw	high (_V+5)
  2571  010292  6EE6               	movwf	postinc1,c
  2572  010294  ECB1  F08D         	call	_t_protocol	;wreg free
  2573  010298  0E04               	movlw	4
  2574  01029A  183D               	xorwf	btemp,w,c
  2575  01029C  A4D8               	btfss	status,2,c
  2576  01029E  D004               	goto	l8880
  2577                           
  2578                           ;main.c: 562:      V.s_state = SEQ_STATE_TRIGGER;
  2579  0102A0  0E03               	movlw	3
  2580  0102A2  006F FFA0  F3F6    	movff	wreg,_V
  2581  0102A8                     l8880:
  2582                           
  2583                           ;main.c: 564:     if (V.t_l_state == LINK_STATE_ERROR)
  2584  0102A8  0060  FFEF  FFE8   	movff	_V+5,wreg	;volatile
  2585  0102AE                     L34:
  2586  0102AE  0A06               	xorlw	6
  2587  0102B0  A4D8               	btfss	status,2,c
  2588  0102B2  D0A3               	goto	l8910
  2589                           
  2590                           ;main.c: 565:      V.s_state = SEQ_STATE_ERROR;
  2591  0102B4  0E06               	movlw	6
  2592  0102B6  D03B               	goto	L1
  2593  0102B8                     l8884:
  2594                           
  2595                           ;main.c: 568:     if (V.queue) {
  2596  0102B8  EE21  F0F5         	lfsr	2,_V+255	;volatile
  2597  0102BC  A8DF               	btfss	indf2,4,c
  2598  0102BE  D019               	goto	l1260
  2599                           
  2600                           ;main.c: 569:      V.r_l_state = LINK_STATE_IDLE;
  2601  0102C0  0E00               	movlw	0
  2602  0102C2  006F FFA0  F3FA    	movff	wreg,_V+4	;volatile
  2603                           
  2604                           ;main.c: 570:      V.t_l_state = LINK_STATE_IDLE;
  2605  0102C8  0E00               	movlw	0
  2606  0102CA  006F FFA0  F3FB    	movff	wreg,_V+5	;volatile
  2607                           
  2608                           ;main.c: 571:      V.s_state = SEQ_STATE_TX;
  2609  0102D0  0E02               	movlw	2
  2610  0102D2  006F FFA0  F3F6    	movff	wreg,_V
  2611                           
  2612                           ;main.c: 572:      sprintf(V.buf, " OKQ#");
  2613  0102D8  0EEA               	movlw	low STR_8
  2614  0102DA  6EE6               	movwf	postinc1,c
  2615  0102DC  0EFF               	movlw	high STR_8
  2616  0102DE  6EE6               	movwf	postinc1,c
  2617  0102E0  0EFC               	movlw	low (_V+6)
  2618  0102E2  6EE6               	movwf	postinc1,c
  2619  0102E4  0E03               	movlw	high (_V+6)
  2620  0102E6  6EE6               	movwf	postinc1,c
  2621  0102E8  0E04               	movlw	4
  2622  0102EA  6EE6               	movwf	postinc1,c
  2623  0102EC  EC2D  F09A         	call	_sprintf	;wreg free
  2624                           
  2625                           ;main.c: 573:     } else {
  2626  0102F0  D010               	goto	l8892
  2627  0102F2                     l1260:
  2628                           
  2629                           ;main.c: 574:      V.s_state = SEQ_STATE_DONE;
  2630  0102F2  0E05               	movlw	5
  2631  0102F4  006F FFA0  F3F6    	movff	wreg,_V
  2632                           
  2633                           ;main.c: 575:      sprintf(V.buf, " OK #");
  2634  0102FA  0EE4               	movlw	low STR_9
  2635  0102FC  6EE6               	movwf	postinc1,c
  2636  0102FE  0EFF               	movlw	high STR_9
  2637  010300  6EE6               	movwf	postinc1,c
  2638  010302  0EFC               	movlw	low (_V+6)
  2639  010304  6EE6               	movwf	postinc1,c
  2640  010306  0E03               	movlw	high (_V+6)
  2641  010308  6EE6               	movwf	postinc1,c
  2642  01030A  0E04               	movlw	4
  2643  01030C  6EE6               	movwf	postinc1,c
  2644  01030E  EC2D  F09A         	call	_sprintf	;wreg free
  2645  010312                     l8892:
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;main.c: 577:     wait_lcd_done();
  2649  010312  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;main.c: 578:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  2653  010316  0EFC               	movlw	low (_V+6)
  2654  010318  6EE6               	movwf	postinc1,c
  2655  01031A  0E03               	movlw	high (_V+6)
  2656  01031C  6EE6               	movwf	postinc1,c
  2657  01031E  0E0B               	movlw	11
  2658  010320  6EE6               	movwf	postinc1,c
  2659  010322  0E00               	movlw	0
  2660  010324  6EE6               	movwf	postinc1,c
  2661  010326  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  2662                           
  2663                           ;main.c: 579:     break;
  2664  01032A  D067               	goto	l8910
  2665  01032C                     l1262:
  2666                           
  2667                           ;main.c: 581:     V.s_state = SEQ_STATE_INIT;
  2668  01032C  0E00               	movlw	0
  2669  01032E                     L1:
  2670  01032E  006F FFA0  F3F6    	movff	wreg,_V
  2671                           
  2672                           ;main.c: 582:     break;
  2673  010334  D062               	goto	l8910
  2674  010336                     l1264:
  2675                           
  2676                           ;main.c: 585:     V.s_state = SEQ_STATE_INIT;
  2677  010336  0E00               	movlw	0
  2678  010338  006F FFA0  F3F6    	movff	wreg,_V
  2679                           
  2680                           ;main.c: 586:     sprintf(V.buf, "E%d A%d T%d G%d #", V.error, V.abort, V.timer_error, V
      +                          .g_state);
  2681  01033E  EE20  F3F8         	lfsr	2,_V+2	;volatile
  2682  010342  50DF               	movf	indf2,w,c
  2683  010344  6EE6               	movwf	postinc1,c
  2684  010346  0E00               	movlw	0
  2685  010348  6EE6               	movwf	postinc1,c
  2686  01034A  EE21  F0F0         	lfsr	2,_V+250	;volatile
  2687  01034E  006F FF78  F047    	movff	postinc2,btemp+10
  2688  010354  006F FF74  F048    	movff	postdec2,btemp+11
  2689  01035A  0060  F11F  FFE6   	movff	btemp+10,postinc1
  2690  010360  0060  F123  FFE6   	movff	btemp+11,postinc1
  2691  010366  EE21  F0E7         	lfsr	2,_V+241	;volatile
  2692  01036A  50DF               	movf	indf2,w,c
  2693  01036C  6EE6               	movwf	postinc1,c
  2694  01036E  0E00               	movlw	0
  2695  010370  6EE6               	movwf	postinc1,c
  2696  010372  EE21  F0E6         	lfsr	2,_V+240	;volatile
  2697  010376  50DF               	movf	indf2,w,c
  2698  010378  6EE6               	movwf	postinc1,c
  2699  01037A  0E00               	movlw	0
  2700  01037C  6EE6               	movwf	postinc1,c
  2701  01037E  0E78               	movlw	low STR_10
  2702  010380  6EE6               	movwf	postinc1,c
  2703  010382  0EFF               	movlw	high STR_10
  2704  010384  6EE6               	movwf	postinc1,c
  2705  010386  0EFC               	movlw	low (_V+6)
  2706  010388  6EE6               	movwf	postinc1,c
  2707  01038A  0E03               	movlw	high (_V+6)
  2708  01038C  6EE6               	movwf	postinc1,c
  2709  01038E  0E0C               	movlw	12
  2710  010390  6EE6               	movwf	postinc1,c
  2711  010392  EC2D  F09A         	call	_sprintf	;wreg free
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;main.c: 587:     V.buf[16] = 0;
  2715  010396  0E00               	movlw	0
  2716  010398  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;main.c: 588:     wait_lcd_done();
  2720  01039E  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;main.c: 589:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2724  0103A2  0EFC               	movlw	low (_V+6)
  2725  0103A4  6EE6               	movwf	postinc1,c
  2726  0103A6  0E03               	movlw	high (_V+6)
  2727  0103A8  6EE6               	movwf	postinc1,c
  2728  0103AA  0E00               	movlw	0
  2729  0103AC  6EE6               	movwf	postinc1,c
  2730  0103AE  0E02               	movlw	2
  2731  0103B0  6EE6               	movwf	postinc1,c
  2732  0103B2  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  2733                           
  2734                           ; BSR set to: 59
  2735                           ;main.c: 590:     WaitMs(2000);
  2736  0103B6  0ED0               	movlw	208
  2737  0103B8  6EE6               	movwf	postinc1,c
  2738  0103BA  0E07               	movlw	7
  2739  0103BC  6EE6               	movwf	postinc1,c
  2740  0103BE  ECC9  F0A2         	call	_WaitMs	;wreg free
  2741                           
  2742                           ;main.c: 591:     break;
  2743  0103C2  D01B               	goto	l8910
  2744  0103C4                     l8908:
  2745  0103C4  EE20  F3F6         	lfsr	2,_V
  2746  0103C8  50DF               	movf	indf2,w,c
  2747  0103CA  6E47               	movwf	btemp+10,c
  2748  0103CC  6A48               	clrf	btemp+11,c
  2749                           
  2750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2751                           ; Switch size 1, requested type "simple"
  2752                           ; Number of cases is 1, Range of values is 0 to 0
  2753                           ; switch strategies available:
  2754                           ; Name         Instructions Cycles
  2755                           ; simple_byte            4     3 (average)
  2756                           ;	Chosen strategy is simple_byte
  2757  0103CE  5048               	movf	btemp+11,w,c
  2758  0103D0  0A00               	xorlw	0	; case 0
  2759  0103D2  A4D8               	btfss	status,2,c
  2760  0103D4  D7B0               	goto	l1264
  2761                           
  2762                           ; Switch size 1, requested type "simple"
  2763                           ; Number of cases is 6, Range of values is 0 to 6
  2764                           ; switch strategies available:
  2765                           ; Name         Instructions Cycles
  2766                           ; simple_byte           19    10 (average)
  2767                           ;	Chosen strategy is simple_byte
  2768  0103D6  5047               	movf	btemp+10,w,c
  2769  0103D8  0A00               	xorlw	0	; case 0
  2770  0103DA  B4D8               	btfsc	status,2,c
  2771  0103DC  D69E               	goto	l1246
  2772  0103DE  0A01               	xorlw	1	; case 1
  2773  0103E0  B4D8               	btfsc	status,2,c
  2774  0103E2  D6E4               	goto	l8848
  2775  0103E4  0A03               	xorlw	3	; case 2
  2776  0103E6  B4D8               	btfsc	status,2,c
  2777  0103E8  D751               	goto	l8876
  2778  0103EA  0A01               	xorlw	1	; case 3
  2779  0103EC  B4D8               	btfsc	status,2,c
  2780  0103EE  D764               	goto	l8884
  2781  0103F0  0A06               	xorlw	6	; case 5
  2782  0103F2  B4D8               	btfsc	status,2,c
  2783  0103F4  D79B               	goto	l1262
  2784  0103F6  0A03               	xorlw	3	; case 6
  2785  0103F8  D79E               	goto	l1264
  2786  0103FA                     l8910:
  2787                           
  2788                           ;main.c: 593:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2789  0103FA  0061  F39B  FFE8   	movff	_V+240,wreg	;volatile
  2790  010400  0A0A               	xorlw	10
  2791  010402  A4D8               	btfss	status,2,c
  2792  010404  D1D5               	goto	l1288
  2793  010406  0061  F39F  FFE8   	movff	_V+241,wreg	;volatile
  2794  01040C  0A0A               	xorlw	10
  2795  01040E  A4D8               	btfss	status,2,c
  2796  010410  D1CF               	goto	l1288
  2797                           
  2798                           ;main.c: 594:     sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2799  010412  EE20  F3F8         	lfsr	2,_V+2	;volatile
  2800  010416  50DF               	movf	indf2,w,c
  2801  010418  6EE6               	movwf	postinc1,c
  2802  01041A  0E00               	movlw	0
  2803  01041C  6EE6               	movwf	postinc1,c
  2804  01041E  EE21  F0DC         	lfsr	2,_V+230	;volatile
  2805  010422  006F FF7B FFE6     	movff	postinc2,postinc1
  2806  010428  006F FF7B FFE6     	movff	postinc2,postinc1
  2807  01042E  006F FF7B FFE6     	movff	postinc2,postinc1
  2808  010434  006F FF7B FFE6     	movff	postinc2,postinc1
  2809  01043A  0E50               	movlw	low STR_5
  2810  01043C  6EE6               	movwf	postinc1,c
  2811  01043E  0EFF               	movlw	high STR_5
  2812  010440  6EE6               	movwf	postinc1,c
  2813  010442  0EFC               	movlw	low (_V+6)
  2814  010444  6EE6               	movwf	postinc1,c
  2815  010446  0E03               	movlw	high (_V+6)
  2816  010448  6EE6               	movwf	postinc1,c
  2817  01044A  0E0A               	movlw	10
  2818  01044C  6EE6               	movwf	postinc1,c
  2819  01044E  EC2D  F09A         	call	_sprintf	;wreg free
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;main.c: 595:     V.buf[16] = 0;
  2823  010452  0E00               	movlw	0
  2824  010454  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;main.c: 596:     wait_lcd_done();
  2828  01045A  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;main.c: 597:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2832  01045E  0EFC               	movlw	low (_V+6)
  2833  010460  6EE6               	movwf	postinc1,c
  2834  010462  0E03               	movlw	high (_V+6)
  2835  010464  6EE6               	movwf	postinc1,c
  2836  010466  0E00               	movlw	0
  2837  010468  6EE6               	movwf	postinc1,c
  2838  01046A  0E02               	movlw	2
  2839  01046C  6EE6               	movwf	postinc1,c
  2840  01046E  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  2841                           
  2842                           ; BSR set to: 59
  2843                           ;main.c: 601:     if ((V.g_state == GEM_STATE_REMOTE && V.s_state == SEQ_STATE_RX) || V.
      +                          reset) {
  2844  010472  0060  FFE3  FFE8   	movff	_V+2,wreg	;volatile
  2845  010478  0A04               	xorlw	4
  2846  01047A  A4D8               	btfss	status,2,c
  2847  01047C  D006               	goto	u5690
  2848                           
  2849                           ; BSR set to: 59
  2850  01047E  0060  FFDB  FFE8   	movff	_V,wreg
  2851  010484  0A01               	xorlw	1
  2852  010486  B4D8               	btfsc	status,2,c
  2853  010488  D004               	goto	u5700
  2854  01048A                     u5690:
  2855                           
  2856                           ; BSR set to: 59
  2857  01048A  EE21  F0F5         	lfsr	2,_V+255	;volatile
  2858  01048E  AADF               	btfss	indf2,5,c
  2859  010490  D18F               	goto	l1288
  2860  010492                     u5700:
  2861                           
  2862                           ; BSR set to: 59
  2863                           ;main.c: 602:      if (TimerDone(TMR_HBIO) || V.reset) {
  2864  010492  0E06               	movlw	6
  2865  010494  6EE6               	movwf	postinc1,c
  2866  010496  EC01  F0A5         	call	_TimerDone	;wreg free
  2867  01049A  503D               	movf	btemp,w,c
  2868  01049C  A4D8               	btfss	status,2,c
  2869  01049E  D004               	goto	u5720
  2870  0104A0  EE21  F0F5         	lfsr	2,_V+255	;volatile
  2871  0104A4  AADF               	btfss	indf2,5,c
  2872  0104A6  D184               	goto	l1288
  2873  0104A8                     u5720:
  2874                           
  2875                           ;main.c: 603:       StartTimer(TMR_HBIO, 30000);
  2876  0104A8  0E30               	movlw	48
  2877  0104AA  6EE6               	movwf	postinc1,c
  2878  0104AC  0E75               	movlw	117
  2879  0104AE  6EE6               	movwf	postinc1,c
  2880  0104B0  0E06               	movlw	6
  2881  0104B2  6EE6               	movwf	postinc1,c
  2882  0104B4  ECAB  F0A2         	call	_StartTimer	;wreg free
  2883                           
  2884                           ;main.c: 605:       hb_message();
  2885  0104B8  ECED  F0A0         	call	_hb_message	;wreg free
  2886                           
  2887                           ;main.c: 606:       if (!V.reset) {
  2888  0104BC  EE21  F0F5         	lfsr	2,_V+255	;volatile
  2889  0104C0  BADF               	btfsc	indf2,5,c
  2890  0104C2  D036               	goto	l8948
  2891                           
  2892                           ;main.c: 607:        sprintf(V.buf, " Ping G%d  P%d #", V.g_state, V.ping);
  2893  0104C4  EE21  F0F2         	lfsr	2,_V+252	;volatile
  2894  0104C8  006F FF78  F047    	movff	postinc2,btemp+10
  2895  0104CE  006F FF74  F048    	movff	postdec2,btemp+11
  2896  0104D4  0060  F11F  FFE6   	movff	btemp+10,postinc1
  2897  0104DA  0060  F123  FFE6   	movff	btemp+11,postinc1
  2898  0104E0  EE20  F3F8         	lfsr	2,_V+2	;volatile
  2899  0104E4  50DF               	movf	indf2,w,c
  2900  0104E6  6EE6               	movwf	postinc1,c
  2901  0104E8  0E00               	movlw	0
  2902  0104EA  6EE6               	movwf	postinc1,c
  2903  0104EC  0E8A               	movlw	low STR_12
  2904  0104EE  6EE6               	movwf	postinc1,c
  2905  0104F0  0EFF               	movlw	high STR_12
  2906  0104F2  6EE6               	movwf	postinc1,c
  2907  0104F4  0EFC               	movlw	low (_V+6)
  2908  0104F6  6EE6               	movwf	postinc1,c
  2909  0104F8  0E03               	movlw	high (_V+6)
  2910  0104FA  6EE6               	movwf	postinc1,c
  2911  0104FC  0E08               	movlw	8
  2912  0104FE  6EE6               	movwf	postinc1,c
  2913  010500  EC2D  F09A         	call	_sprintf	;wreg free
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;main.c: 608:        V.buf[16] = 0;
  2917  010504  0E00               	movlw	0
  2918  010506  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;main.c: 609:        wait_lcd_done();
  2922  01050C  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;main.c: 610:        eaDogM_WriteStringAtPos(0, 0, V.buf);
  2926  010510  0EFC               	movlw	low (_V+6)
  2927  010512  6EE6               	movwf	postinc1,c
  2928  010514  0E03               	movlw	high (_V+6)
  2929  010516  6EE6               	movwf	postinc1,c
  2930  010518  0E00               	movlw	0
  2931  01051A  6EE6               	movwf	postinc1,c
  2932  01051C  0E00               	movlw	0
  2933  01051E  6EE6               	movwf	postinc1,c
  2934  010520  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  2935                           
  2936                           ; BSR set to: 59
  2937                           ;main.c: 611:        WaitMs(1000);
  2938  010524  0EE8               	movlw	232
  2939  010526  6EE6               	movwf	postinc1,c
  2940  010528  0E03               	movlw	3
  2941  01052A  6EE6               	movwf	postinc1,c
  2942  01052C  ECC9  F0A2         	call	_WaitMs	;wreg free
  2943  010530                     l8948:
  2944                           
  2945                           ;main.c: 613:       V.msg_error = MSG_ERROR_NONE;
  2946  010530  0E00               	movlw	0
  2947  010532  006F FFA0  F4E8    	movff	wreg,_V+242	;volatile
  2948                           
  2949                           ;main.c: 614:       V.reset = 0;
  2950  010538  EE21  F0F5         	lfsr	2,_V+255	;volatile
  2951  01053C  9ADF               	bcf	indf2,5,c
  2952                           
  2953                           ;main.c: 618:    break;
  2954                           
  2955                           ;main.c: 617:    }
  2956  01053E  D138               	goto	l1288
  2957  010540                     l1277:
  2958                           
  2959                           ;main.c: 622:     V.m_l_state = LINK_STATE_IDLE;
  2960  010540  0E00               	movlw	0
  2961  010542  006F FFA0  F3F9    	movff	wreg,_V+3	;volatile
  2962                           
  2963                           ;main.c: 623:     V.s_state = SEQ_STATE_RX;
  2964  010548  0E01               	movlw	1
  2965  01054A  006F FFA0  F3F6    	movff	wreg,_V
  2966                           
  2967                           ;main.c: 624:     sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer
      +                          _error, V.checksum_error);
  2968  010550  EE21  F0EE         	lfsr	2,_V+248	;volatile
  2969  010554  006F FF78  F047    	movff	postinc2,btemp+10
  2970  01055A  006F FF74  F048    	movff	postdec2,btemp+11
  2971  010560  0060  F11F  FFE6   	movff	btemp+10,postinc1
  2972  010566  0060  F123  FFE6   	movff	btemp+11,postinc1
  2973  01056C  EE21  F0F0         	lfsr	2,_V+250	;volatile
  2974  010570  006F FF78  F047    	movff	postinc2,btemp+10
  2975  010576  006F FF74  F048    	movff	postdec2,btemp+11
  2976  01057C  0060  F11F  FFE6   	movff	btemp+10,postinc1
  2977  010582  0060  F123  FFE6   	movff	btemp+11,postinc1
  2978  010588  EE20  F3F8         	lfsr	2,_V+2	;volatile
  2979  01058C  50DF               	movf	indf2,w,c
  2980  01058E  6EE6               	movwf	postinc1,c
  2981  010590  0E00               	movlw	0
  2982  010592  6EE6               	movwf	postinc1,c
  2983  010594  EE21  F0F9         	lfsr	2,_V+259	;volatile
  2984  010598  50DF               	movf	indf2,w,c
  2985  01059A  6EE6               	movwf	postinc1,c
  2986  01059C  0E00               	movlw	0
  2987  01059E  6EE6               	movwf	postinc1,c
  2988  0105A0  0E1C               	movlw	low STR_13
  2989  0105A2  6EE6               	movwf	postinc1,c
  2990  0105A4  0EFF               	movlw	high STR_13
  2991  0105A6  6EE6               	movwf	postinc1,c
  2992  0105A8  0EFC               	movlw	low (_V+6)
  2993  0105AA  6EE6               	movwf	postinc1,c
  2994  0105AC  0E03               	movlw	high (_V+6)
  2995  0105AE  6EE6               	movwf	postinc1,c
  2996  0105B0  0E0C               	movlw	12
  2997  0105B2  6EE6               	movwf	postinc1,c
  2998  0105B4  EC2D  F09A         	call	_sprintf	;wreg free
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;main.c: 625:     V.buf[16] = 0;
  3002  0105B8  0E00               	movlw	0
  3003  0105BA  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;main.c: 626:     wait_lcd_done();
  3007  0105C0  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;main.c: 627:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  3011  0105C4  0EFC               	movlw	low (_V+6)
  3012  0105C6  6EE6               	movwf	postinc1,c
  3013  0105C8  0E03               	movlw	high (_V+6)
  3014  0105CA  6EE6               	movwf	postinc1,c
  3015  0105CC  0E00               	movlw	0
  3016  0105CE  6EE6               	movwf	postinc1,c
  3017  0105D0  0E02               	movlw	2
  3018  0105D2  6EE6               	movwf	postinc1,c
  3019  0105D4  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  3020                           
  3021                           ;main.c: 635:     break;
  3022  0105D8  D08C               	goto	l8986
  3023  0105DA                     l8960:
  3024                           
  3025                           ;main.c: 640:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  3026  0105DA  0EF9               	movlw	low (_V+3)
  3027  0105DC  6EE6               	movwf	postinc1,c
  3028  0105DE  0E03               	movlw	high (_V+3)
  3029  0105E0  6EE6               	movwf	postinc1,c
  3030  0105E2  EC4B  F084         	call	_m_protocol	;wreg free
  3031  0105E6  0E04               	movlw	4
  3032  0105E8  183D               	xorwf	btemp,w,c
  3033  0105EA  A4D8               	btfss	status,2,c
  3034  0105EC  D03D               	goto	l8972
  3035                           
  3036                           ;main.c: 641:      sprintf(V.buf, " S%dF%d #%ld      ", V.stream, V.function, V.ticks);
  3037  0105EE  EE21  F0DC         	lfsr	2,_V+230	;volatile
  3038  0105F2  006F FF7B FFE6     	movff	postinc2,postinc1
  3039  0105F8  006F FF7B FFE6     	movff	postinc2,postinc1
  3040  0105FE  006F FF7B FFE6     	movff	postinc2,postinc1
  3041  010604  006F FF7B FFE6     	movff	postinc2,postinc1
  3042  01060A  EE21  F0E5         	lfsr	2,_V+239	;volatile
  3043  01060E  50DF               	movf	indf2,w,c
  3044  010610  6EE6               	movwf	postinc1,c
  3045  010612  0E00               	movlw	0
  3046  010614  6EE6               	movwf	postinc1,c
  3047  010616  EE21  F0E4         	lfsr	2,_V+238	;volatile
  3048  01061A  50DF               	movf	indf2,w,c
  3049  01061C  6EE6               	movwf	postinc1,c
  3050  01061E  0E00               	movlw	0
  3051  010620  6EE6               	movwf	postinc1,c
  3052  010622  0E65               	movlw	low STR_14
  3053  010624  6EE6               	movwf	postinc1,c
  3054  010626  0EFF               	movlw	high STR_14
  3055  010628  6EE6               	movwf	postinc1,c
  3056  01062A  0EFC               	movlw	low (_V+6)
  3057  01062C  6EE6               	movwf	postinc1,c
  3058  01062E  0E03               	movlw	high (_V+6)
  3059  010630  6EE6               	movwf	postinc1,c
  3060  010632  0E0C               	movlw	12
  3061  010634  6EE6               	movwf	postinc1,c
  3062  010636  EC2D  F09A         	call	_sprintf	;wreg free
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;main.c: 642:      V.buf[13] = 0;
  3066  01063A  0E00               	movlw	0
  3067  01063C  006F FFA0  F409    	movff	wreg,_V+19	;volatile
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;main.c: 643:      wait_lcd_done();
  3071  010642  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;main.c: 644:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  3075  010646  0EFC               	movlw	low (_V+6)
  3076  010648  6EE6               	movwf	postinc1,c
  3077  01064A  0E03               	movlw	high (_V+6)
  3078  01064C  6EE6               	movwf	postinc1,c
  3079  01064E  0E00               	movlw	0
  3080  010650  6EE6               	movwf	postinc1,c
  3081  010652  0061  F3E4  F048   	movff	_V+259,btemp+11	;volatile
  3082  010658  0448               	decf	btemp+11,w,c
  3083  01065A  6EE6               	movwf	postinc1,c
  3084  01065C  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  3085                           
  3086                           ; BSR set to: 59
  3087                           ;main.c: 645:      V.s_state = SEQ_STATE_TRIGGER;
  3088  010660  0E03               	movlw	3
  3089  010662  006F FFA0  F3F6    	movff	wreg,_V
  3090  010668                     l8972:
  3091                           
  3092                           ;main.c: 647:     if (V.m_l_state == LINK_STATE_ERROR)
  3093  010668  0060  FFE7  FFE8   	movff	_V+3,wreg	;volatile
  3094  01066E  0A06               	xorlw	6
  3095  010670  A4D8               	btfss	status,2,c
  3096  010672  D03F               	goto	l8986
  3097                           
  3098                           ;main.c: 648:      V.s_state = SEQ_STATE_ERROR;
  3099  010674  0E06               	movlw	6
  3100  010676  D021               	goto	L3
  3101  010678                     l1282:
  3102                           
  3103                           ;main.c: 651:     V.s_state = SEQ_STATE_DONE;
  3104  010678  0E05               	movlw	5
  3105  01067A  006F FFA0  F3F6    	movff	wreg,_V
  3106                           
  3107                           ;main.c: 652:     sprintf(V.buf, " OK #");
  3108  010680  0EE4               	movlw	low STR_9
  3109  010682  6EE6               	movwf	postinc1,c
  3110  010684  0EFF               	movlw	high STR_9
  3111  010686  6EE6               	movwf	postinc1,c
  3112  010688  0EFC               	movlw	low (_V+6)
  3113  01068A  6EE6               	movwf	postinc1,c
  3114  01068C  0E03               	movlw	high (_V+6)
  3115  01068E  6EE6               	movwf	postinc1,c
  3116  010690  0E04               	movlw	4
  3117  010692  6EE6               	movwf	postinc1,c
  3118  010694  EC2D  F09A         	call	_sprintf	;wreg free
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;main.c: 653:     wait_lcd_done();
  3122  010698  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;main.c: 654:     eaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  3126  01069C  0EFC               	movlw	low (_V+6)
  3127  01069E  6EE6               	movwf	postinc1,c
  3128  0106A0  0E03               	movlw	high (_V+6)
  3129  0106A2  6EE6               	movwf	postinc1,c
  3130  0106A4  0E0D               	movlw	13
  3131  0106A6  6EE6               	movwf	postinc1,c
  3132  0106A8  0061  F3E4  F048   	movff	_V+259,btemp+11	;volatile
  3133  0106AE  0448               	decf	btemp+11,w,c
  3134  0106B0  6EE6               	movwf	postinc1,c
  3135  0106B2  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  3136                           
  3137                           ;main.c: 655:     break;
  3138  0106B6  D01D               	goto	l8986
  3139  0106B8                     l1283:
  3140                           
  3141                           ;main.c: 661:     V.s_state = SEQ_STATE_INIT;
  3142                           
  3143                           ;main.c: 660:    default:
  3144                           
  3145                           ;main.c: 658:     break;
  3146                           
  3147                           ;main.c: 657:     V.s_state = SEQ_STATE_INIT;
  3148  0106B8  0E00               	movlw	0
  3149  0106BA                     L3:
  3150  0106BA  006F FFA0  F3F6    	movff	wreg,_V
  3151                           
  3152                           ;main.c: 662:     break;
  3153  0106C0  D018               	goto	l8986
  3154  0106C2                     l8984:
  3155  0106C2  EE20  F3F6         	lfsr	2,_V
  3156  0106C6  50DF               	movf	indf2,w,c
  3157  0106C8  6E47               	movwf	btemp+10,c
  3158  0106CA  6A48               	clrf	btemp+11,c
  3159                           
  3160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3161                           ; Switch size 1, requested type "simple"
  3162                           ; Number of cases is 1, Range of values is 0 to 0
  3163                           ; switch strategies available:
  3164                           ; Name         Instructions Cycles
  3165                           ; simple_byte            4     3 (average)
  3166                           ;	Chosen strategy is simple_byte
  3167  0106CC  5048               	movf	btemp+11,w,c
  3168  0106CE  0A00               	xorlw	0	; case 0
  3169  0106D0  A4D8               	btfss	status,2,c
  3170  0106D2  D7F2               	goto	l1283
  3171                           
  3172                           ; Switch size 1, requested type "simple"
  3173                           ; Number of cases is 5, Range of values is 0 to 6
  3174                           ; switch strategies available:
  3175                           ; Name         Instructions Cycles
  3176                           ; simple_byte           16     9 (average)
  3177                           ;	Chosen strategy is simple_byte
  3178  0106D4  5047               	movf	btemp+10,w,c
  3179  0106D6  0A00               	xorlw	0	; case 0
  3180  0106D8  B4D8               	btfsc	status,2,c
  3181  0106DA  D732               	goto	l1277
  3182  0106DC  0A01               	xorlw	1	; case 1
  3183  0106DE  B4D8               	btfsc	status,2,c
  3184  0106E0  D77C               	goto	l8960
  3185  0106E2  0A02               	xorlw	2	; case 3
  3186  0106E4  B4D8               	btfsc	status,2,c
  3187  0106E6  D7C8               	goto	l1282
  3188  0106E8  0A06               	xorlw	6	; case 5
  3189  0106EA  B4D8               	btfsc	status,2,c
  3190  0106EC  D7E5               	goto	l1283
  3191  0106EE  0A03               	xorlw	3	; case 6
  3192  0106F0  D7E3               	goto	l1283
  3193  0106F2                     l8986:
  3194                           
  3195                           ;main.c: 664:    sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer_
      +                          error, V.checksum_error);
  3196  0106F2  EE21  F0EE         	lfsr	2,_V+248	;volatile
  3197  0106F6  006F FF78  F047    	movff	postinc2,btemp+10
  3198  0106FC  006F FF74  F048    	movff	postdec2,btemp+11
  3199  010702  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3200  010708  0060  F123  FFE6   	movff	btemp+11,postinc1
  3201  01070E  EE21  F0F0         	lfsr	2,_V+250	;volatile
  3202  010712  006F FF78  F047    	movff	postinc2,btemp+10
  3203  010718  006F FF74  F048    	movff	postdec2,btemp+11
  3204  01071E  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3205  010724  0060  F123  FFE6   	movff	btemp+11,postinc1
  3206  01072A  EE20  F3F8         	lfsr	2,_V+2	;volatile
  3207  01072E  50DF               	movf	indf2,w,c
  3208  010730  6EE6               	movwf	postinc1,c
  3209  010732  0E00               	movlw	0
  3210  010734  6EE6               	movwf	postinc1,c
  3211  010736  EE21  F0F9         	lfsr	2,_V+259	;volatile
  3212  01073A  50DF               	movf	indf2,w,c
  3213  01073C  6EE6               	movwf	postinc1,c
  3214  01073E  0E00               	movlw	0
  3215  010740  6EE6               	movwf	postinc1,c
  3216  010742  0E1C               	movlw	low STR_13
  3217  010744  6EE6               	movwf	postinc1,c
  3218  010746  0EFF               	movlw	high STR_13
  3219  010748  6EE6               	movwf	postinc1,c
  3220  01074A  0EFC               	movlw	low (_V+6)
  3221  01074C  6EE6               	movwf	postinc1,c
  3222  01074E  0E03               	movlw	high (_V+6)
  3223  010750  6EE6               	movwf	postinc1,c
  3224  010752  0E0C               	movlw	12
  3225  010754  6EE6               	movwf	postinc1,c
  3226  010756  EC2D  F09A         	call	_sprintf	;wreg free
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;main.c: 665:    V.buf[16] = 0;
  3230  01075A  0E00               	movlw	0
  3231  01075C  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;main.c: 666:    wait_lcd_done();
  3235  010762  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;main.c: 667:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  3239  010766  0EFC               	movlw	low (_V+6)
  3240  010768  6EE6               	movwf	postinc1,c
  3241  01076A  0E03               	movlw	high (_V+6)
  3242  01076C  6EE6               	movwf	postinc1,c
  3243  01076E  0E00               	movlw	0
  3244  010770  6EE6               	movwf	postinc1,c
  3245  010772  0E02               	movlw	2
  3246  010774  6EE6               	movwf	postinc1,c
  3247  010776  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  3248                           
  3249                           ;main.c: 668:    break;
  3250  01077A  D01A               	goto	l1288
  3251  01077C                     l1287:
  3252                           
  3253                           ;main.c: 671:    V.ui_state = UI_STATE_INIT;
  3254  01077C  0E00               	movlw	0
  3255  01077E  006F FFA0  F3F7    	movff	wreg,_V+1	;volatile
  3256                           
  3257                           ;main.c: 672:    break;
  3258  010784  D015               	goto	l1288
  3259  010786                     l8996:
  3260  010786  EE20  F3F7         	lfsr	2,_V+1	;volatile
  3261  01078A  50DF               	movf	indf2,w,c
  3262  01078C  6E47               	movwf	btemp+10,c
  3263  01078E  6A48               	clrf	btemp+11,c
  3264                           
  3265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 1, Range of values is 0 to 0
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte            4     3 (average)
  3271                           ;	Chosen strategy is simple_byte
  3272  010790  5048               	movf	btemp+11,w,c
  3273  010792  0A00               	xorlw	0	; case 0
  3274  010794  A4D8               	btfss	status,2,c
  3275  010796  D7F2               	goto	l1287
  3276                           
  3277                           ; Switch size 1, requested type "simple"
  3278                           ; Number of cases is 4, Range of values is 0 to 4
  3279                           ; switch strategies available:
  3280                           ; Name         Instructions Cycles
  3281                           ; simple_byte           13     7 (average)
  3282                           ;	Chosen strategy is simple_byte
  3283  010798  5047               	movf	btemp+10,w,c
  3284  01079A  0A00               	xorlw	0	; case 0
  3285  01079C  B4D8               	btfsc	status,2,c
  3286  01079E  D453               	goto	l8806
  3287  0107A0  0A01               	xorlw	1	; case 1
  3288  0107A2  B4D8               	btfsc	status,2,c
  3289  0107A4  D60F               	goto	l8908
  3290  0107A6  0A02               	xorlw	2	; case 3
  3291  0107A8  B4D8               	btfsc	status,2,c
  3292  0107AA  D78B               	goto	l8984
  3293  0107AC  0A07               	xorlw	7	; case 4
  3294  0107AE  D7E6               	goto	l1287
  3295  0107B0                     l1288:
  3296  0107B0  84BE               	bsf	16318,2,c	;volatile
  3297                           
  3298                           ;main.c: 675:   if (V.ticks) {
  3299  0107B2  EE21  F0DC         	lfsr	2,_V+230	;volatile
  3300  0107B6  50DE               	movf	postinc2,w,c
  3301  0107B8  10DE               	iorwf	postinc2,w,c
  3302  0107BA  10DE               	iorwf	postinc2,w,c
  3303  0107BC  10DE               	iorwf	postinc2,w,c
  3304  0107BE  B4D8               	btfsc	status,2,c
  3305  0107C0  D01A               	goto	l9004
  3306                           
  3307                           ;main.c: 676:    if (V.failed_receive) {
  3308  0107C2  EE21  F0F5         	lfsr	2,_V+255	;volatile
  3309  0107C6  50DF               	movf	223,w,c
  3310  0107C8  0B0F               	andlw	15
  3311  0107CA  0900               	iorlw	0
  3312  0107CC  B4D8               	btfsc	status,2,c
  3313  0107CE  D003               	goto	l1297
  3314                           
  3315                           ;main.c: 677:     do { LATDbits.LATD4 = 0; } while(0);
  3316  0107D0  98BD               	bcf	16317,4,c	;volatile
  3317                           
  3318                           ;main.c: 678:     do { LATDbits.LATD5 = 1; } while(0);
  3319  0107D2  8ABD               	bsf	16317,5,c	;volatile
  3320  0107D4  D002               	goto	l9002
  3321  0107D6                     l1297:
  3322  0107D6  88BD               	bsf	16317,4,c	;volatile
  3323                           
  3324                           ;main.c: 681:     do { LATDbits.LATD5 = 0; } while(0);
  3325  0107D8  9ABD               	bcf	16317,5,c	;volatile
  3326  0107DA                     l9002:
  3327                           
  3328                           ;main.c: 683:    if (V.failed_send) {
  3329  0107DA  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3330  0107DE  30DF               	rrcf	223,w,c
  3331  0107E0  32E8               	rrcf	wreg,f,c
  3332  0107E2  32E8               	rrcf	wreg,f,c
  3333  0107E4  0B0F               	andlw	15
  3334  0107E6  0900               	iorlw	0
  3335  0107E8  B4D8               	btfsc	status,2,c
  3336  0107EA  D003               	goto	l1307
  3337                           
  3338                           ;main.c: 684:     do { LATDbits.LATD6 = 0; } while(0);
  3339  0107EC  9CBD               	bcf	16317,6,c	;volatile
  3340                           
  3341                           ;main.c: 685:     do { LATDbits.LATD7 = 1; } while(0);
  3342  0107EE  8EBD               	bsf	16317,7,c	;volatile
  3343  0107F0  D002               	goto	l9004
  3344  0107F2                     l1307:
  3345  0107F2  8CBD               	bsf	16317,6,c	;volatile
  3346                           
  3347                           ;main.c: 688:     do { LATDbits.LATD7 = 0; } while(0);
  3348  0107F4  9EBD               	bcf	16317,7,c	;volatile
  3349  0107F6                     l9004:
  3350                           
  3351                           ;main.c: 691:   sprintf(V.buf, "R%d %d, T%d %d C%d      #", V.r_l_state, V.failed_receiv
      +                          e, V.t_l_state, V.failed_send, V.checksum_error);
  3352  0107F6  EE21  F0EE         	lfsr	2,_V+248	;volatile
  3353  0107FA  006F FF78  F047    	movff	postinc2,btemp+10
  3354  010800  006F FF74  F048    	movff	postdec2,btemp+11
  3355  010806  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3356  01080C  0060  F123  FFE6   	movff	btemp+11,postinc1
  3357  010812  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3358  010816  30DF               	rrcf	223,w,c
  3359  010818  32E8               	rrcf	wreg,f,c
  3360  01081A  32E8               	rrcf	wreg,f,c
  3361  01081C  0B0F               	andlw	15
  3362  01081E  6EE6               	movwf	postinc1,c
  3363  010820  0E00               	movlw	0
  3364  010822  6EE6               	movwf	postinc1,c
  3365  010824  EE20  F3FB         	lfsr	2,_V+5	;volatile
  3366  010828  50DF               	movf	indf2,w,c
  3367  01082A  6EE6               	movwf	postinc1,c
  3368  01082C  0E00               	movlw	0
  3369  01082E  6EE6               	movwf	postinc1,c
  3370  010830  EE21  F0F5         	lfsr	2,_V+255	;volatile
  3371  010834  50DF               	movf	223,w,c
  3372  010836  0B0F               	andlw	15
  3373  010838  6EE6               	movwf	postinc1,c
  3374  01083A  0E00               	movlw	0
  3375  01083C  6EE6               	movwf	postinc1,c
  3376  01083E  EE20  F3FA         	lfsr	2,_V+4	;volatile
  3377  010842  50DF               	movf	indf2,w,c
  3378  010844  6EE6               	movwf	postinc1,c
  3379  010846  0E00               	movlw	0
  3380  010848  6EE6               	movwf	postinc1,c
  3381  01084A  0E36               	movlw	low STR_17
  3382  01084C  6EE6               	movwf	postinc1,c
  3383  01084E  0EFF               	movlw	high STR_17
  3384  010850  6EE6               	movwf	postinc1,c
  3385  010852  0EFC               	movlw	low (_V+6)
  3386  010854  6EE6               	movwf	postinc1,c
  3387  010856  0E03               	movlw	high (_V+6)
  3388  010858  6EE6               	movwf	postinc1,c
  3389  01085A  0E0E               	movlw	14
  3390  01085C  6EE6               	movwf	postinc1,c
  3391  01085E  EC2D  F09A         	call	_sprintf	;wreg free
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;main.c: 692:   V.buf[16] = 0;
  3395  010862  0E00               	movlw	0
  3396  010864  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;main.c: 693:   wait_lcd_done();
  3400  01086A  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;main.c: 694:   if (mode != UI_STATE_LOG)
  3404                           ;stkvar	_mode @ sp[(-1)+0]
  3405  01086E  0EFF               	movlw	-1
  3406  010870  006F FF8C  F03D    	movff	plusw1,btemp
  3407  010876  0E03               	movlw	3
  3408  010878  183D               	xorwf	btemp,w,c
  3409  01087A  B4D8               	btfsc	status,2,c
  3410  01087C  D00A               	goto	l9014
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;main.c: 695:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  3414  01087E  0EFC               	movlw	low (_V+6)
  3415  010880  6EE6               	movwf	postinc1,c
  3416  010882  0E03               	movlw	high (_V+6)
  3417  010884  6EE6               	movwf	postinc1,c
  3418  010886  0E00               	movlw	0
  3419  010888  6EE6               	movwf	postinc1,c
  3420  01088A  0E01               	movlw	1
  3421  01088C  6EE6               	movwf	postinc1,c
  3422  01088E  ECE4  F0A2         	call	_eaDogM_WriteStringAtPos	;wreg free
  3423  010892                     l9014:
  3424  010892  94BE               	bcf	16318,2,c	;volatile
  3425  010894  D778               	goto	l8996
  3426  010896                     __end_of_main:
  3427                           	opt callstack 0
  3428                           
  3429 ;; *************** function _t_protocol *****************
  3430 ;; Defined at:
  3431 ;;		line 334 in file "gemsecs.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  t_link          2  [STACK] PTR enum E16658
  3434 ;;		 -> V(261), 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  rxData          1  [STACK] unsigned char 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1  [STACK] enum E16913
  3439 ;; Registers used:
  3440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/3C
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    5
  3453 ;; This function calls:
  3454 ;;		_StartTimer
  3455 ;;		_TimerDone
  3456 ;;		_UART1_Read
  3457 ;;		_UART1_Write
  3458 ;;		_UART1_is_rx_ready
  3459 ;;		_UART1_put_buffer
  3460 ;;		_secs_II_message
  3461 ;;		_secs_send
  3462 ;; This function is called by:
  3463 ;;		_main
  3464 ;; This function uses a reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text1
  3468  011B62                     __ptext1:
  3469                           	opt callstack 0
  3470  011B62                     _t_protocol:
  3471                           	opt callstack 0
  3472                           
  3473                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3474  011B62  52E6               	movf	postinc1,f,c
  3475                           
  3476                           ;gemsecs.c: 334: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 335: {;gemsecs.
      +                          c: 336:  uint8_t rxData;;gemsecs.c: 337:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          338:  static response_type block;;gemsecs.c: 340:  switch (*t_link) {
  3477                           
  3478                           ;incstack = 0
  3479  011B64  D150               	goto	l8766
  3480  011B66                     l1697:
  3481                           
  3482                           ;gemsecs.c: 342:   V.error = LINK_ERROR_NONE;
  3483  011B66  0E0A               	movlw	10
  3484  011B68  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  3485                           
  3486                           ;gemsecs.c: 343:   retry = 3;
  3487  011B6E  0E03               	movlw	3
  3488  011B70  6E2D               	movwf	t_protocol@retry,c
  3489                           
  3490                           ;gemsecs.c: 344:   UART1_Write(0x05);
  3491  011B72  0E05               	movlw	5
  3492  011B74  6EE6               	movwf	postinc1,c
  3493  011B76  EC4E  F0A2         	call	_UART1_Write	;wreg free
  3494                           
  3495                           ; BSR set to: 57
  3496                           ;gemsecs.c: 345:   StartTimer(TMR_T2, 2000);
  3497  011B7A  0ED0               	movlw	208
  3498  011B7C  6EE6               	movwf	postinc1,c
  3499  011B7E  0E07               	movlw	7
  3500  011B80  6EE6               	movwf	postinc1,c
  3501  011B82  0E02               	movlw	2
  3502  011B84  6EE6               	movwf	postinc1,c
  3503  011B86  ECAB  F0A2         	call	_StartTimer	;wreg free
  3504                           
  3505                           ;gemsecs.c: 346:   *t_link = LINK_STATE_ENQ;
  3506                           ;stkvar	_t_link @ sp[(-1)+-2]
  3507  011B8A  0EFD               	movlw	-3
  3508  011B8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  3509  011B92  0EFE               	movlw	-2
  3510  011B94  006F FF8F FFDA     	movff	plusw1,fsr2h
  3511  011B9A  0E01               	movlw	1
  3512  011B9C  D132               	goto	L8
  3513  011B9E                     l8672:
  3514                           
  3515                           ;gemsecs.c: 353:   if (TimerDone(TMR_T2)) {
  3516  011B9E  0E02               	movlw	2
  3517  011BA0  6EE6               	movwf	postinc1,c
  3518  011BA2  EC01  F0A5         	call	_TimerDone	;wreg free
  3519  011BA6  503D               	movf	btemp,w,c
  3520  011BA8  B4D8               	btfsc	status,2,c
  3521  011BAA  D026               	goto	l8686
  3522                           
  3523                           ;gemsecs.c: 354:    V.timer_error++;
  3524  011BAC  EE21  F0F0         	lfsr	2,_V+250	;volatile
  3525  011BB0  2ADE               	incf	postinc2,f,c
  3526  011BB2  0E00               	movlw	0
  3527  011BB4  22DD               	addwfc	postdec2,f,c
  3528                           
  3529                           ;gemsecs.c: 355:    if (!retry--) {
  3530  011BB6  062D               	decf	t_protocol@retry,f,c
  3531  011BB8  282D               	incf	t_protocol@retry,w,c
  3532  011BBA  A4D8               	btfss	status,2,c
  3533  011BBC  D014               	goto	l8684
  3534                           
  3535                           ;gemsecs.c: 356:     V.error = LINK_ERROR_T2;
  3536  011BBE  0E0C               	movlw	12
  3537  011BC0  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  3538                           
  3539                           ;gemsecs.c: 357:     V.failed_send = 1;
  3540  011BC6  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3541  011BCA  50DF               	movf	223,w,c
  3542  011BCC  0B87               	andlw	-121
  3543  011BCE  0908               	iorlw	8
  3544  011BD0  6EDF               	movwf	223,c
  3545                           
  3546                           ;gemsecs.c: 358:     *t_link = LINK_STATE_NAK;
  3547                           ;stkvar	_t_link @ sp[(-1)+-2]
  3548  011BD2  0EFD               	movlw	-3
  3549  011BD4  006F FF8F FFD9     	movff	plusw1,fsr2l
  3550  011BDA  0EFE               	movlw	-2
  3551  011BDC  006F FF8F FFDA     	movff	plusw1,fsr2h
  3552  011BE2  0E05               	movlw	5
  3553  011BE4  D10E               	goto	L8
  3554  011BE6                     l8684:
  3555                           
  3556                           ;gemsecs.c: 360:     StartTimer(TMR_T2, 2000);
  3557  011BE6  0ED0               	movlw	208
  3558  011BE8  6EE6               	movwf	postinc1,c
  3559  011BEA  0E07               	movlw	7
  3560  011BEC  6EE6               	movwf	postinc1,c
  3561  011BEE  0E02               	movlw	2
  3562  011BF0  6EE6               	movwf	postinc1,c
  3563  011BF2  ECAB  F0A2         	call	_StartTimer	;wreg free
  3564  011BF6  D12C               	goto	l8768
  3565  011BF8                     l8686:
  3566                           
  3567                           ;gemsecs.c: 363:    if (UART1_is_rx_ready()) {
  3568  011BF8  EC65  F0A6         	call	_UART1_is_rx_ready	;wreg free
  3569  011BFC  503D               	movf	btemp,w,c
  3570  011BFE  B4D8               	btfsc	status,2,c
  3571  011C00  D127               	goto	l8768
  3572                           
  3573                           ;gemsecs.c: 364:     rxData = UART1_Read();
  3574  011C02  EC8C  F0A2         	call	_UART1_Read	;wreg free
  3575                           
  3576                           ;stkvar	_rxData @ sp[(-1)+0]
  3577  011C06  0EFF               	movlw	-1
  3578  011C08  0060  F0F7  FFE3   	movff	btemp,plusw1
  3579                           
  3580                           ; BSR set to: 57
  3581                           ;gemsecs.c: 365:     if (rxData == 0x04) {
  3582                           ;stkvar	_rxData @ sp[(-1)+0]
  3583  011C0E  0EFF               	movlw	-1
  3584  011C10  006F FF8C  F03D    	movff	plusw1,btemp
  3585  011C16  0E04               	movlw	4
  3586  011C18  183D               	xorwf	btemp,w,c
  3587  011C1A  A4D8               	btfss	status,2,c
  3588  011C1C  D012               	goto	l8696
  3589                           
  3590                           ; BSR set to: 57
  3591                           ;gemsecs.c: 366:      StartTimer(TMR_T3, 5000);
  3592  011C1E  0E88               	movlw	136
  3593  011C20  6EE6               	movwf	postinc1,c
  3594  011C22  0E13               	movlw	19
  3595  011C24  6EE6               	movwf	postinc1,c
  3596  011C26  0E03               	movlw	3
  3597  011C28  6EE6               	movwf	postinc1,c
  3598  011C2A  ECAB  F0A2         	call	_StartTimer	;wreg free
  3599                           
  3600                           ;gemsecs.c: 367:      *t_link = LINK_STATE_EOT;
  3601                           ;stkvar	_t_link @ sp[(-1)+-2]
  3602  011C2E  0EFD               	movlw	-3
  3603  011C30  006F FF8F FFD9     	movff	plusw1,fsr2l
  3604  011C36  0EFE               	movlw	-2
  3605  011C38  006F FF8F FFDA     	movff	plusw1,fsr2h
  3606  011C3E  0E02               	movlw	2
  3607  011C40  6EDF               	movwf	indf2,c
  3608  011C42                     l8696:
  3609                           
  3610                           ;gemsecs.c: 369:     if (rxData == 0x05) {
  3611                           ;stkvar	_rxData @ sp[(-1)+0]
  3612  011C42  0EFF               	movlw	-1
  3613  011C44  006F FF8C  F03D    	movff	plusw1,btemp
  3614  011C4A  0E05               	movlw	5
  3615  011C4C  183D               	xorwf	btemp,w,c
  3616  011C4E  A4D8               	btfss	status,2,c
  3617  011C50  D0FF               	goto	l8768
  3618                           
  3619                           ;gemsecs.c: 370:      UART1_put_buffer(0x04);
  3620  011C52  0E04               	movlw	4
  3621  011C54  6EE6               	movwf	postinc1,c
  3622  011C56  EC71  F0A3         	call	_UART1_put_buffer	;wreg free
  3623  011C5A                     l8700:
  3624                           
  3625                           ; BSR set to: 57
  3626                           ;gemsecs.c: 371:      *t_link = LINK_STATE_DONE;
  3627                           ;stkvar	_t_link @ sp[(-1)+-2]
  3628  011C5A  0EFD               	movlw	-3
  3629  011C5C  006F FF8F FFD9     	movff	plusw1,fsr2l
  3630  011C62  0EFE               	movlw	-2
  3631  011C64  006F FF8F FFDA     	movff	plusw1,fsr2h
  3632  011C6A  0E04               	movlw	4
  3633  011C6C  D0CA               	goto	L8
  3634  011C6E                     l8702:
  3635                           
  3636                           ;gemsecs.c: 377:   if (!requeue)
  3637  011C6E  502C               	movf	t_protocol@requeue,w,c
  3638  011C70  A4D8               	btfss	status,2,c
  3639  011C72  D013               	goto	l8706
  3640                           
  3641                           ;gemsecs.c: 378:    block = secs_II_message(V.stream, V.function);
  3642  011C74  EE21  F0E5         	lfsr	2,_V+239	;volatile
  3643  011C78  50DF               	movf	indf2,w,c
  3644  011C7A  6EE6               	movwf	postinc1,c
  3645  011C7C  EE21  F0E4         	lfsr	2,_V+238	;volatile
  3646  011C80  50DF               	movf	indf2,w,c
  3647  011C82  6EE6               	movwf	postinc1,c
  3648  011C84  ECAC  F090         	call	_secs_II_message	;wreg free
  3649  011C88  EE20  F0D1         	lfsr	2,t_protocol@block
  3650  011C8C  0E06               	movlw	6
  3651  011C8E                     u5451:
  3652  011C8E  52E5               	movf	postdec1,f,c
  3653  011C90  006F FF9F FFDB     	movff	indf1,plusw2
  3654  011C96  06E8               	decf	wreg,f,c
  3655  011C98  E2FA               	bc	u5451
  3656  011C9A                     l8706:
  3657                           
  3658                           ;gemsecs.c: 380:   if (V.abort == LINK_ERROR_ABORT) {
  3659  011C9A  0061  F39F  FFE8   	movff	_V+241,wreg	;volatile
  3660  011CA0  0A11               	xorlw	17
  3661  011CA2  A4D8               	btfss	status,2,c
  3662  011CA4  D01F               	goto	l8714
  3663                           
  3664                           ;gemsecs.c: 381:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  3665  011CA6  0E01               	movlw	1
  3666  011CA8  6EE6               	movwf	postinc1,c
  3667  011CAA  0E00               	movlw	0
  3668  011CAC  6EE6               	movwf	postinc1,c
  3669  011CAE  0100               	movlb	0	; () banked
  3670  011CB0  51D3               	movf	(t_protocol@block+2)& (0+255),w,b
  3671  011CB2  6EE6               	movwf	postinc1,c
  3672  011CB4  0060  F347  FFE6   	movff	t_protocol@block,postinc1
  3673  011CBA  0060  F34B  FFE6   	movff	t_protocol@block+1,postinc1
  3674  011CC0  ECB2  F094         	call	_secs_send	;wreg free
  3675                           
  3676                           ;gemsecs.c: 382:    V.failed_send = 2;
  3677  011CC4  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3678  011CC8  50DF               	movf	223,w,c
  3679  011CCA  0B87               	andlw	-121
  3680  011CCC  0910               	iorlw	16
  3681  011CCE  6EDF               	movwf	223,c
  3682                           
  3683                           ;gemsecs.c: 383:    *t_link = LINK_STATE_ERROR;
  3684                           ;stkvar	_t_link @ sp[(-1)+-2]
  3685  011CD0  0EFD               	movlw	-3
  3686  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  3687  011CD8  0EFE               	movlw	-2
  3688  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  3689  011CE0  0E06               	movlw	6
  3690  011CE2  D08F               	goto	L8
  3691  011CE4                     l8714:
  3692                           
  3693                           ;gemsecs.c: 385:    if (!requeue) {
  3694  011CE4  502C               	movf	t_protocol@requeue,w,c
  3695  011CE6  A4D8               	btfss	status,2,c
  3696  011CE8  D016               	goto	l1711
  3697                           
  3698                           ;gemsecs.c: 386:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  3699  011CEA  0E01               	movlw	1
  3700  011CEC  6EE6               	movwf	postinc1,c
  3701  011CEE  0E00               	movlw	0
  3702  011CF0  6EE6               	movwf	postinc1,c
  3703  011CF2  0100               	movlb	0	; () banked
  3704  011CF4  51D3               	movf	(t_protocol@block+2)& (0+255),w,b
  3705  011CF6  6EE6               	movwf	postinc1,c
  3706  011CF8  0060  F347  FFE6   	movff	t_protocol@block,postinc1
  3707  011CFE  0060  F34B  FFE6   	movff	t_protocol@block+1,postinc1
  3708  011D04  ECB2  F094         	call	_secs_send	;wreg free
  3709                           
  3710                           ;gemsecs.c: 387:     if (V.queue)
  3711  011D08  EE21  F0F5         	lfsr	2,_V+255	;volatile
  3712  011D0C  A8DF               	btfss	indf2,4,c
  3713  011D0E  D016               	goto	l8726
  3714                           
  3715                           ;gemsecs.c: 388:      requeue = 1;
  3716  011D10  0E01               	movlw	1
  3717  011D12  6E2C               	movwf	t_protocol@requeue,c
  3718  011D14  D013               	goto	l8726
  3719  011D16                     l1711:
  3720                           
  3721                           ;gemsecs.c: 390:     requeue = 0;
  3722  011D16  6A2C               	clrf	t_protocol@requeue,c
  3723                           
  3724                           ;gemsecs.c: 391:     V.queue = 0;
  3725  011D18  EE21  F0F5         	lfsr	2,_V+255	;volatile
  3726  011D1C  98DF               	bcf	indf2,4,c
  3727                           
  3728                           ;gemsecs.c: 392:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  3729  011D1E  0E01               	movlw	1
  3730  011D20  6EE6               	movwf	postinc1,c
  3731  011D22  0E00               	movlw	0
  3732  011D24  6EE6               	movwf	postinc1,c
  3733  011D26  0100               	movlb	0	; () banked
  3734  011D28  51D6               	movf	(t_protocol@block+5)& (0+255),w,b
  3735  011D2A  6EE6               	movwf	postinc1,c
  3736  011D2C  0060  F353  FFE6   	movff	t_protocol@block+3,postinc1
  3737  011D32  0060  F357  FFE6   	movff	t_protocol@block+4,postinc1
  3738  011D38  ECB2  F094         	call	_secs_send	;wreg free
  3739  011D3C                     l8726:
  3740                           
  3741                           ;gemsecs.c: 394:    if (V.error == LINK_ERROR_NONE) {
  3742  011D3C  0061  F39B  FFE8   	movff	_V+240,wreg	;volatile
  3743  011D42  0A0A               	xorlw	10
  3744  011D44  A4D8               	btfss	status,2,c
  3745  011D46  D00A               	goto	l8730
  3746                           
  3747                           ;gemsecs.c: 395:     *t_link = LINK_STATE_ACK;
  3748                           ;stkvar	_t_link @ sp[(-1)+-2]
  3749  011D48  0EFD               	movlw	-3
  3750  011D4A  006F FF8F FFD9     	movff	plusw1,fsr2l
  3751  011D50  0EFE               	movlw	-2
  3752  011D52  006F FF8F FFDA     	movff	plusw1,fsr2h
  3753  011D58  0E03               	movlw	3
  3754  011D5A  D053               	goto	L8
  3755  011D5C                     l8730:
  3756                           
  3757                           ;gemsecs.c: 397:     V.failed_send = 3;
  3758  011D5C  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3759  011D60  50DF               	movf	223,w,c
  3760  011D62  0B87               	andlw	-121
  3761  011D64  0918               	iorlw	24
  3762  011D66  D7B3               	goto	L9
  3763  011D68                     l8734:
  3764                           
  3765                           ;gemsecs.c: 410:   if (TimerDone(TMR_T3)) {
  3766  011D68  0E03               	movlw	3
  3767  011D6A  6EE6               	movwf	postinc1,c
  3768  011D6C  EC01  F0A5         	call	_TimerDone	;wreg free
  3769  011D70  503D               	movf	btemp,w,c
  3770  011D72  B4D8               	btfsc	status,2,c
  3771  011D74  D00F               	goto	l8744
  3772                           
  3773                           ;gemsecs.c: 411:    V.timer_error++;
  3774  011D76  EE21  F0F0         	lfsr	2,_V+250	;volatile
  3775  011D7A  2ADE               	incf	postinc2,f,c
  3776  011D7C  0E00               	movlw	0
  3777  011D7E  22DD               	addwfc	postdec2,f,c
  3778                           
  3779                           ;gemsecs.c: 412:    V.error = LINK_ERROR_T3;
  3780  011D80  0E0D               	movlw	13
  3781  011D82  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  3782                           
  3783                           ;gemsecs.c: 413:    V.failed_send = 4;
  3784  011D88  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3785  011D8C  50DF               	movf	223,w,c
  3786  011D8E  0B87               	andlw	-121
  3787  011D90  0920               	iorlw	32
  3788  011D92  D71E               	goto	L10
  3789  011D94                     l8744:
  3790                           
  3791                           ;gemsecs.c: 416:    if (UART1_is_rx_ready()) {
  3792  011D94  EC65  F0A6         	call	_UART1_is_rx_ready	;wreg free
  3793  011D98  503D               	movf	btemp,w,c
  3794  011D9A  B4D8               	btfsc	status,2,c
  3795  011D9C  D059               	goto	l8768
  3796                           
  3797                           ;gemsecs.c: 417:     rxData = UART1_Read();
  3798  011D9E  EC8C  F0A2         	call	_UART1_Read	;wreg free
  3799                           
  3800                           ;stkvar	_rxData @ sp[(-1)+0]
  3801  011DA2  0EFF               	movlw	-1
  3802  011DA4  0060  F0F7  FFE3   	movff	btemp,plusw1
  3803                           
  3804                           ; BSR set to: 57
  3805                           ;gemsecs.c: 418:     if (rxData == 0x06) {
  3806                           ;stkvar	_rxData @ sp[(-1)+0]
  3807  011DAA  0EFF               	movlw	-1
  3808  011DAC  006F FF8C  F03D    	movff	plusw1,btemp
  3809  011DB2  0E06               	movlw	6
  3810  011DB4  183D               	xorwf	btemp,w,c
  3811  011DB6  A4D8               	btfss	status,2,c
  3812  011DB8  D04B               	goto	l8768
  3813                           
  3814                           ; BSR set to: 57
  3815                           ;gemsecs.c: 419:      V.failed_send = 0;
  3816  011DBA  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3817  011DBE  0E87               	movlw	-121
  3818  011DC0  16DF               	andwf	223,f,c
  3819  011DC2  D74B               	goto	l8700
  3820  011DC4                     l8754:
  3821                           
  3822                           ;gemsecs.c: 426:   *t_link = LINK_STATE_ERROR;
  3823                           ;stkvar	_t_link @ sp[(-1)+-2]
  3824  011DC4  0EFD               	movlw	-3
  3825  011DC6  006F FF8F FFD9     	movff	plusw1,fsr2l
  3826  011DCC  0EFE               	movlw	-2
  3827  011DCE  006F FF8F FFDA     	movff	plusw1,fsr2h
  3828  011DD4  0E06               	movlw	6
  3829  011DD6  6EDF               	movwf	indf2,c
  3830                           
  3831                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3832  011DD8  D002               	goto	l8758
  3833  011DDA                     l8756:
  3834                           
  3835                           ;gemsecs.c: 428:    UART1_Read();
  3836  011DDA  EC8C  F0A2         	call	_UART1_Read	;wreg free
  3837  011DDE                     l8758:
  3838                           
  3839                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3840  011DDE  5037               	movf	_uart1RxCount,w,c	;volatile
  3841  011DE0  B4D8               	btfsc	status,2,c
  3842  011DE2  D036               	goto	l8768
  3843  011DE4  D7FA               	goto	l8756
  3844  011DE6                     l8760:
  3845                           
  3846                           ;gemsecs.c: 434:   V.failed_send = 0;
  3847  011DE6  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3848  011DEA  0E87               	movlw	-121
  3849  011DEC  16DF               	andwf	223,f,c
  3850                           
  3851                           ;gemsecs.c: 435:   break;
  3852  011DEE  D030               	goto	l8768
  3853  011DF0                     l8762:
  3854                           
  3855                           ;gemsecs.c: 437:   *t_link = LINK_STATE_IDLE;
  3856                           ;stkvar	_t_link @ sp[(-1)+-2]
  3857  011DF0  0EFD               	movlw	-3
  3858  011DF2  006F FF8F FFD9     	movff	plusw1,fsr2l
  3859  011DF8  0EFE               	movlw	-2
  3860  011DFA  006F FF8F FFDA     	movff	plusw1,fsr2h
  3861  011E00  0E00               	movlw	0
  3862  011E02                     L8:
  3863  011E02  6EDF               	movwf	indf2,c
  3864                           
  3865                           ;gemsecs.c: 439:   break;
  3866  011E04  D025               	goto	l8768
  3867  011E06                     l8766:
  3868                           
  3869                           ;stkvar	_t_link @ sp[(-1)+-2]
  3870  011E06  0EFD               	movlw	-3
  3871  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
  3872  011E0E  0EFE               	movlw	-2
  3873  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
  3874  011E16  50DF               	movf	indf2,w,c
  3875  011E18  6E47               	movwf	btemp+10,c
  3876  011E1A  6A48               	clrf	btemp+11,c
  3877                           
  3878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3879                           ; Switch size 1, requested type "simple"
  3880                           ; Number of cases is 1, Range of values is 0 to 0
  3881                           ; switch strategies available:
  3882                           ; Name         Instructions Cycles
  3883                           ; simple_byte            4     3 (average)
  3884                           ;	Chosen strategy is simple_byte
  3885  011E1C  5048               	movf	btemp+11,w,c
  3886  011E1E  0A00               	xorlw	0	; case 0
  3887  011E20  A4D8               	btfss	status,2,c
  3888  011E22  D7E6               	goto	l8762
  3889                           
  3890                           ; Switch size 1, requested type "simple"
  3891                           ; Number of cases is 7, Range of values is 0 to 6
  3892                           ; switch strategies available:
  3893                           ; Name         Instructions Cycles
  3894                           ; simple_byte           22    12 (average)
  3895                           ;	Chosen strategy is simple_byte
  3896  011E24  5047               	movf	btemp+10,w,c
  3897  011E26  0A00               	xorlw	0	; case 0
  3898  011E28  B4D8               	btfsc	status,2,c
  3899  011E2A  D69D               	goto	l1697
  3900  011E2C  0A01               	xorlw	1	; case 1
  3901  011E2E  B4D8               	btfsc	status,2,c
  3902  011E30  D6B6               	goto	l8672
  3903  011E32  0A03               	xorlw	3	; case 2
  3904  011E34  B4D8               	btfsc	status,2,c
  3905  011E36  D71B               	goto	l8702
  3906  011E38  0A01               	xorlw	1	; case 3
  3907  011E3A  B4D8               	btfsc	status,2,c
  3908  011E3C  D795               	goto	l8734
  3909  011E3E  0A07               	xorlw	7	; case 4
  3910  011E40  B4D8               	btfsc	status,2,c
  3911  011E42  D7D1               	goto	l8760
  3912  011E44  0A01               	xorlw	1	; case 5
  3913  011E46  B4D8               	btfsc	status,2,c
  3914  011E48  D7BD               	goto	l8754
  3915  011E4A  0A03               	xorlw	3	; case 6
  3916  011E4C  A4D8               	btfss	status,2,c
  3917  011E4E  D7D0               	goto	l8762
  3918  011E50                     l8768:
  3919                           
  3920                           ;gemsecs.c: 442:  return *t_link;
  3921                           ;stkvar	_t_link @ sp[(-1)+-2]
  3922  011E50  0EFD               	movlw	-3
  3923  011E52  006F FF8F FFD9     	movff	plusw1,fsr2l
  3924  011E58  0EFE               	movlw	-2
  3925  011E5A  006F FF8F FFDA     	movff	plusw1,fsr2h
  3926  011E60  50DF               	movf	indf2,w,c
  3927  011E62  6E3D               	movwf	btemp,c
  3928                           
  3929                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  3930  011E64  52E5               	movf	postdec1,f,c
  3931  011E66  52E5               	movf	postdec1,f,c
  3932  011E68  52E5               	movf	postdec1,f,c
  3933  011E6A  0012               	return		;funcret
  3934  011E6C                     __end_of_t_protocol:
  3935                           	opt callstack 0
  3936                           
  3937 ;; *************** function _secs_send *****************
  3938 ;; Defined at:
  3939 ;;		line 446 in file "gemsecs.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  byte_block      2  [STACK] PTR unsigned char 
  3942 ;;		 -> H53(112), H24(27), H17(20), H14(17), 
  3943 ;;		 -> H13(48), H12(30), H10(91), 
  3944 ;;  length          1  [STACK] unsigned char 
  3945 ;;  fake            1  [STACK] _Bool 
  3946 ;;  s_uart          1  [STACK] unsigned char 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  k               2  [STACK] PTR unsigned char 
  3949 ;;		 -> H53(112), H24(27), H17(20), H14(17), 
  3950 ;;		 -> H13(48), H12(30), H10(91), 
  3951 ;;  checksum        2  [STACK] unsigned short 
  3952 ;;  i               1  [STACK] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1  [STACK] _Bool 
  3955 ;; Registers used:
  3956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3957 ;; Tracked objects:
  3958 ;;		On entry : 3F/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    4
  3969 ;; This function calls:
  3970 ;;		_UART1_Write
  3971 ;;		_UART1_is_tx_ready
  3972 ;;		_UART1_put_buffer
  3973 ;;		_UART2_Write
  3974 ;;		_UART2_is_tx_ready
  3975 ;;		_UART2_put_buffer
  3976 ;;		_block_checksum
  3977 ;; This function is called by:
  3978 ;;		_t_protocol
  3979 ;; This function uses a reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text2
  3983  012964                     __ptext2:
  3984                           	opt callstack 0
  3985  012964                     _secs_send:
  3986                           	opt callstack 0
  3987                           
  3988                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3989  012964  0E05               	movlw	5
  3990  012966  26E1               	addwf	fsr1l,f,c
  3991  012968  0E00               	movlw	0
  3992  01296A  22E2               	addwfc	fsr1h,f,c
  3993                           
  3994                           ;gemsecs.c: 446: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 447: {;gemsecs.c: 448:  uint8_t i, *k;;gemsecs.c: 449:  uint16_t ch
      +                          ecksum;;gemsecs.c: 451:  k = (uint8_t *) byte_block;
  3995                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3996                           
  3997                           ;incstack = 0
  3998  01296C  0EF9               	movlw	-7
  3999  01296E  006F FF8C  F047    	movff	plusw1,btemp+10
  4000  012974  0EFA               	movlw	-6
  4001  012976  006F FF8C  F048    	movff	plusw1,btemp+11
  4002                           
  4003                           ;stkvar	_k @ sp[(-5)+0]
  4004  01297C  0EFC               	movlw	-4
  4005  01297E  0060  F123  FFE3   	movff	btemp+11,plusw1
  4006  012984  0EFB               	movlw	-5
  4007  012986  0060  F11F  FFE3   	movff	btemp+10,plusw1
  4008                           
  4009                           ;gemsecs.c: 453:  ++V.ticks;
  4010  01298C  EE21  F0DC         	lfsr	2,_V+230	;volatile
  4011  012990  2ADE               	incf	postinc2,f,c
  4012  012992  0E00               	movlw	0
  4013  012994  22DE               	addwfc	postinc2,f,c
  4014  012996  22DE               	addwfc	postinc2,f,c
  4015  012998  22DE               	addwfc	postinc2,f,c
  4016                           
  4017                           ;gemsecs.c: 454:  V.error = LINK_ERROR_NONE;
  4018  01299A  0E0A               	movlw	10
  4019  01299C  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  4020                           
  4021                           ;gemsecs.c: 455:  if ((length - 3) != k[length - 1]) {
  4022                           ;stkvar	_length @ sp[(-5)+-3]
  4023  0129A2  0EF8               	movlw	-8
  4024  0129A4  50E3               	movf	plusw1,w,c
  4025  0129A6  6E47               	movwf	btemp+10,c
  4026  0129A8  6A48               	clrf	btemp+11,c
  4027                           
  4028                           ;stkvar	_k @ sp[(-5)+0]
  4029  0129AA  0EFB               	movlw	-5
  4030  0129AC  50E3               	movf	plusw1,w,c
  4031  0129AE  2647               	addwf	btemp+10,f,c
  4032  0129B0  0EFC               	movlw	-4
  4033  0129B2  50E3               	movf	plusw1,w,c
  4034  0129B4  2248               	addwfc	btemp+11,f,c
  4035  0129B6  0EFF               	movlw	255
  4036  0129B8  2447               	addwf	btemp+10,w,c
  4037  0129BA  6ED9               	movwf	fsr2l,c
  4038  0129BC  0EFF               	movlw	255
  4039  0129BE  2048               	addwfc	btemp+11,w,c
  4040  0129C0  6EDA               	movwf	fsr2h,c
  4041  0129C2  50DF               	movf	indf2,w,c
  4042  0129C4  6E47               	movwf	btemp+10,c
  4043  0129C6  6A48               	clrf	btemp+11,c
  4044  0129C8  0EFD               	movlw	253
  4045  0129CA  6E45               	movwf	btemp+8,c
  4046  0129CC  0EFF               	movlw	255
  4047  0129CE  6E46               	movwf	btemp+9,c
  4048                           
  4049                           ;stkvar	_length @ sp[(-5)+-3]
  4050  0129D0  0EF8               	movlw	-8
  4051  0129D2  50E3               	movf	plusw1,w,c
  4052  0129D4  6E43               	movwf	btemp+6,c
  4053  0129D6  6A44               	clrf	btemp+7,c
  4054  0129D8  5045               	movf	btemp+8,w,c
  4055  0129DA  2643               	addwf	btemp+6,f,c
  4056  0129DC  5046               	movf	btemp+9,w,c
  4057  0129DE  2244               	addwfc	btemp+7,f,c
  4058  0129E0  5047               	movf	btemp+10,w,c
  4059  0129E2  1843               	xorwf	btemp+6,w,c
  4060  0129E4  E104               	bnz	u5320
  4061  0129E6  5048               	movf	btemp+11,w,c
  4062  0129E8  1844               	xorwf	btemp+7,w,c
  4063  0129EA  B4D8               	btfsc	status,2,c
  4064  0129EC  D005               	goto	l8528
  4065  0129EE                     u5320:
  4066                           
  4067                           ;gemsecs.c: 456:   V.error = LINK_ERROR_SEND;
  4068  0129EE  0E12               	movlw	18
  4069  0129F0  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  4070                           
  4071                           ;gemsecs.c: 457:   return 0;;	Return value of _secs_send is never used
  4072  0129F6  D0EF               	goto	l1732
  4073  0129F8                     l8528:
  4074                           
  4075                           ;gemsecs.c: 465:  checksum = block_checksum(&k[2], length - 3);
  4076  0129F8  0EFD               	movlw	253
  4077  0129FA  6E47               	movwf	btemp+10,c
  4078  0129FC  0EFF               	movlw	255
  4079  0129FE  6E48               	movwf	btemp+11,c
  4080                           
  4081                           ;stkvar	_length @ sp[(-5)+-3]
  4082  012A00  0EF8               	movlw	-8
  4083  012A02  50E3               	movf	plusw1,w,c
  4084  012A04  6E45               	movwf	btemp+8,c
  4085  012A06  6A46               	clrf	btemp+9,c
  4086  012A08  5047               	movf	btemp+10,w,c
  4087  012A0A  2645               	addwf	btemp+8,f,c
  4088  012A0C  5048               	movf	btemp+11,w,c
  4089  012A0E  2246               	addwfc	btemp+9,f,c
  4090  012A10  0060  F117  FFE6   	movff	btemp+8,postinc1
  4091  012A16  0060  F11B  FFE6   	movff	btemp+9,postinc1
  4092                           
  4093                           ;stkvar	_k @ sp[(-7)+0]
  4094  012A1C  0EF9               	movlw	-7
  4095  012A1E  50E3               	movf	plusw1,w,c
  4096  012A20  0F02               	addlw	2
  4097  012A22  6E47               	movwf	btemp+10,c
  4098  012A24  0EFA               	movlw	-6
  4099  012A26  006F FF8C  F048    	movff	plusw1,btemp+11
  4100  012A2C  0E00               	movlw	0
  4101  012A2E  2248               	addwfc	btemp+11,f,c
  4102  012A30  0060  F11F  FFE6   	movff	btemp+10,postinc1
  4103  012A36  0060  F123  FFE6   	movff	btemp+11,postinc1
  4104  012A3C  ECA2  F09B         	call	_block_checksum	;wreg free
  4105                           
  4106                           ;stkvar	_checksum @ sp[(-5)+2]
  4107  012A40  0EFD               	movlw	-3
  4108  012A42  0060  F0F7  FFE3   	movff	btemp,plusw1
  4109  012A48  0EFE               	movlw	-2
  4110  012A4A  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  4111                           
  4112                           ;gemsecs.c: 466:  k[0] = checksum & 0xff;
  4113                           ;stkvar	_checksum @ sp[(-5)+2]
  4114                           ;stkvar	_k @ sp[(-5)+0]
  4115  012A50  0EFB               	movlw	-5
  4116  012A52  006F FF8F FFD9     	movff	plusw1,fsr2l
  4117  012A58  0EFC               	movlw	-4
  4118  012A5A  006F FF8F FFDA     	movff	plusw1,fsr2h
  4119  012A60  0EFD               	movlw	-3
  4120  012A62  006F FF8F FFDF     	movff	plusw1,indf2
  4121                           
  4122                           ;gemsecs.c: 467:  k[1] = (checksum >> 8)&0xff;
  4123                           ;stkvar	_checksum @ sp[(-5)+2]
  4124  012A68  0EFE               	movlw	254
  4125  012A6A  24E1               	addwf	fsr1l,w,c
  4126  012A6C  6ED9               	movwf	fsr2l,c
  4127  012A6E  0EFF               	movlw	255
  4128  012A70  20E2               	addwfc	fsr1h,w,c
  4129  012A72  6EDA               	movwf	fsr2h,c
  4130                           
  4131                           ;stkvar	_k @ sp[(-5)+0]
  4132  012A74  0EFB               	movlw	-5
  4133  012A76  006F FF8C  F047    	movff	plusw1,btemp+10
  4134  012A7C  0EFC               	movlw	-4
  4135  012A7E  006F FF8C  F048    	movff	plusw1,btemp+11
  4136  012A84  0E01               	movlw	1
  4137  012A86  2447               	addwf	btemp+10,w,c
  4138  012A88  6EE9               	movwf	fsr0l,c
  4139  012A8A  0E00               	movlw	0
  4140  012A8C  2048               	addwfc	btemp+11,w,c
  4141  012A8E  6EEA               	movwf	fsr0h,c
  4142  012A90  006F FF7F FFEF     	movff	indf2,indf0
  4143                           
  4144                           ;gemsecs.c: 468:  V.t_checksum = checksum;
  4145                           ;stkvar	_checksum @ sp[(-5)+2]
  4146  012A96  50E1               	movf	fsr1l,w,c
  4147  012A98  0FFD               	addlw	-3
  4148  012A9A  6ED9               	movwf	fsr2l,c
  4149  012A9C  50E2               	movf	fsr1h,w,c
  4150  012A9E  6EDA               	movwf	fsr2h,c
  4151  012AA0  0EFF               	movlw	255
  4152  012AA2  22DA               	addwfc	fsr2h,f,c
  4153  012AA4  006F FF78  F4EC    	movff	postinc2,_V+246	;volatile
  4154  012AAA  006F FF74  F4ED    	movff	postdec2,_V+247	;volatile
  4155                           
  4156                           ;gemsecs.c: 470:  switch (s_uart) {
  4157  012AB0  D082               	goto	l8574
  4158  012AB2                     l8536:
  4159  012AB2  EC59  F0A6         	call	_UART2_is_tx_ready	;wreg free
  4160  012AB6  0E3F               	movlw	63
  4161  012AB8  643D               	cpfsgt	btemp,c
  4162  012ABA  D7FB               	goto	l8536
  4163                           
  4164                           ;gemsecs.c: 473:   for (i = length; i > 0; i--) {
  4165                           ;stkvar	_length @ sp[(-5)+-3]
  4166                           ;stkvar	_i @ sp[(-5)+4]
  4167  012ABC  0EF8               	movlw	-8
  4168  012ABE  006F FF8C  F03D    	movff	plusw1,btemp
  4169  012AC4  0EFF               	movlw	-1
  4170  012AC6  0060  F0F7  FFE3   	movff	btemp,plusw1
  4171  012ACC                     l8540:
  4172                           
  4173                           ;stkvar	_i @ sp[(-5)+4]
  4174  012ACC  0EFF               	movlw	-1
  4175  012ACE  50E3               	movf	plusw1,w,c
  4176  012AD0  B4D8               	btfsc	status,2,c
  4177  012AD2  D081               	goto	l1732
  4178                           
  4179                           ;gemsecs.c: 474:    if (fake) {
  4180                           ;stkvar	_fake @ sp[(-5)+-4]
  4181  012AD4  0EF7               	movlw	-9
  4182  012AD6  50E3               	movf	plusw1,w,c
  4183  012AD8  B4D8               	btfsc	status,2,c
  4184  012ADA  D015               	goto	l8548
  4185                           
  4186                           ;gemsecs.c: 475:     UART2_put_buffer(k[i - 1]);
  4187                           ;stkvar	_i @ sp[(-5)+4]
  4188  012ADC  0EFF               	movlw	-1
  4189  012ADE  50E3               	movf	plusw1,w,c
  4190  012AE0  6E47               	movwf	btemp+10,c
  4191  012AE2  6A48               	clrf	btemp+11,c
  4192                           
  4193                           ;stkvar	_k @ sp[(-5)+0]
  4194  012AE4  0EFB               	movlw	-5
  4195  012AE6  50E3               	movf	plusw1,w,c
  4196  012AE8  2647               	addwf	btemp+10,f,c
  4197  012AEA  0EFC               	movlw	-4
  4198  012AEC  50E3               	movf	plusw1,w,c
  4199  012AEE  2248               	addwfc	btemp+11,f,c
  4200  012AF0  0EFF               	movlw	255
  4201  012AF2  2447               	addwf	btemp+10,w,c
  4202  012AF4  6ED9               	movwf	fsr2l,c
  4203  012AF6  0EFF               	movlw	255
  4204  012AF8  2048               	addwfc	btemp+11,w,c
  4205  012AFA  6EDA               	movwf	fsr2h,c
  4206  012AFC  50DF               	movf	indf2,w,c
  4207  012AFE  6EE6               	movwf	postinc1,c
  4208  012B00  EC5C  F0A3         	call	_UART2_put_buffer	;wreg free
  4209                           
  4210                           ;gemsecs.c: 476:    } else {
  4211  012B04  D014               	goto	l8550
  4212  012B06                     l8548:
  4213                           
  4214                           ;gemsecs.c: 478:     UART2_Write(k[i - 1]);
  4215                           ;stkvar	_i @ sp[(-5)+4]
  4216  012B06  0EFF               	movlw	-1
  4217  012B08  50E3               	movf	plusw1,w,c
  4218  012B0A  6E47               	movwf	btemp+10,c
  4219  012B0C  6A48               	clrf	btemp+11,c
  4220                           
  4221                           ;stkvar	_k @ sp[(-5)+0]
  4222  012B0E  0EFB               	movlw	-5
  4223  012B10  50E3               	movf	plusw1,w,c
  4224  012B12  2647               	addwf	btemp+10,f,c
  4225  012B14  0EFC               	movlw	-4
  4226  012B16  50E3               	movf	plusw1,w,c
  4227  012B18  2248               	addwfc	btemp+11,f,c
  4228  012B1A  0EFF               	movlw	255
  4229  012B1C  2447               	addwf	btemp+10,w,c
  4230  012B1E  6ED9               	movwf	fsr2l,c
  4231  012B20  0EFF               	movlw	255
  4232  012B22  2048               	addwfc	btemp+11,w,c
  4233  012B24  6EDA               	movwf	fsr2h,c
  4234  012B26  50DF               	movf	indf2,w,c
  4235  012B28  6EE6               	movwf	postinc1,c
  4236  012B2A  EC2F  F0A2         	call	_UART2_Write	;wreg free
  4237  012B2E                     l8550:
  4238                           
  4239                           ; BSR set to: 57
  4240                           ;gemsecs.c: 480:   }
  4241                           ;stkvar	_i @ sp[(-5)+4]
  4242  012B2E  0EFF               	movlw	-1
  4243  012B30  06E3               	decf	plusw1,f,c
  4244  012B32  D7CC               	goto	l8540
  4245  012B34                     l8554:
  4246  012B34  EC5D  F0A6         	call	_UART1_is_tx_ready	;wreg free
  4247  012B38  0E3F               	movlw	63
  4248  012B3A  643D               	cpfsgt	btemp,c
  4249  012B3C  D7FB               	goto	l8554
  4250                           
  4251                           ;gemsecs.c: 485:   for (i = length; i > 0; i--) {
  4252                           ;stkvar	_length @ sp[(-5)+-3]
  4253                           ;stkvar	_i @ sp[(-5)+4]
  4254  012B3E  0EF8               	movlw	-8
  4255  012B40  006F FF8C  F03D    	movff	plusw1,btemp
  4256  012B46  0EFF               	movlw	-1
  4257  012B48  0060  F0F7  FFE3   	movff	btemp,plusw1
  4258  012B4E                     l8558:
  4259                           
  4260                           ;stkvar	_i @ sp[(-5)+4]
  4261  012B4E  0EFF               	movlw	-1
  4262  012B50  50E3               	movf	plusw1,w,c
  4263  012B52  B4D8               	btfsc	status,2,c
  4264  012B54  D040               	goto	l1732
  4265                           
  4266                           ;gemsecs.c: 486:    if (fake) {
  4267                           ;stkvar	_fake @ sp[(-5)+-4]
  4268  012B56  0EF7               	movlw	-9
  4269  012B58  50E3               	movf	plusw1,w,c
  4270  012B5A  B4D8               	btfsc	status,2,c
  4271  012B5C  D015               	goto	l8566
  4272                           
  4273                           ;gemsecs.c: 487:     UART1_put_buffer(k[i - 1]);
  4274                           ;stkvar	_i @ sp[(-5)+4]
  4275  012B5E  0EFF               	movlw	-1
  4276  012B60  50E3               	movf	plusw1,w,c
  4277  012B62  6E47               	movwf	btemp+10,c
  4278  012B64  6A48               	clrf	btemp+11,c
  4279                           
  4280                           ;stkvar	_k @ sp[(-5)+0]
  4281  012B66  0EFB               	movlw	-5
  4282  012B68  50E3               	movf	plusw1,w,c
  4283  012B6A  2647               	addwf	btemp+10,f,c
  4284  012B6C  0EFC               	movlw	-4
  4285  012B6E  50E3               	movf	plusw1,w,c
  4286  012B70  2248               	addwfc	btemp+11,f,c
  4287  012B72  0EFF               	movlw	255
  4288  012B74  2447               	addwf	btemp+10,w,c
  4289  012B76  6ED9               	movwf	fsr2l,c
  4290  012B78  0EFF               	movlw	255
  4291  012B7A  2048               	addwfc	btemp+11,w,c
  4292  012B7C  6EDA               	movwf	fsr2h,c
  4293  012B7E  50DF               	movf	indf2,w,c
  4294  012B80  6EE6               	movwf	postinc1,c
  4295  012B82  EC71  F0A3         	call	_UART1_put_buffer	;wreg free
  4296                           
  4297                           ;gemsecs.c: 488:    } else {
  4298  012B86  D014               	goto	l8568
  4299  012B88                     l8566:
  4300                           
  4301                           ;gemsecs.c: 490:     UART1_Write(k[i - 1]);
  4302                           ;stkvar	_i @ sp[(-5)+4]
  4303  012B88  0EFF               	movlw	-1
  4304  012B8A  50E3               	movf	plusw1,w,c
  4305  012B8C  6E47               	movwf	btemp+10,c
  4306  012B8E  6A48               	clrf	btemp+11,c
  4307                           
  4308                           ;stkvar	_k @ sp[(-5)+0]
  4309  012B90  0EFB               	movlw	-5
  4310  012B92  50E3               	movf	plusw1,w,c
  4311  012B94  2647               	addwf	btemp+10,f,c
  4312  012B96  0EFC               	movlw	-4
  4313  012B98  50E3               	movf	plusw1,w,c
  4314  012B9A  2248               	addwfc	btemp+11,f,c
  4315  012B9C  0EFF               	movlw	255
  4316  012B9E  2447               	addwf	btemp+10,w,c
  4317  012BA0  6ED9               	movwf	fsr2l,c
  4318  012BA2  0EFF               	movlw	255
  4319  012BA4  2048               	addwfc	btemp+11,w,c
  4320  012BA6  6EDA               	movwf	fsr2h,c
  4321  012BA8  50DF               	movf	indf2,w,c
  4322  012BAA  6EE6               	movwf	postinc1,c
  4323  012BAC  EC4E  F0A2         	call	_UART1_Write	;wreg free
  4324  012BB0                     l8568:
  4325                           
  4326                           ; BSR set to: 57
  4327                           ;gemsecs.c: 492:   }
  4328                           ;stkvar	_i @ sp[(-5)+4]
  4329  012BB0  0EFF               	movlw	-1
  4330  012BB2  06E3               	decf	plusw1,f,c
  4331  012BB4  D7CC               	goto	l8558
  4332  012BB6                     l8574:
  4333                           
  4334                           ;stkvar	_s_uart @ sp[(-5)+-5]
  4335  012BB6  0EF6               	movlw	-10
  4336  012BB8  50E3               	movf	plusw1,w,c
  4337  012BBA  6E47               	movwf	btemp+10,c
  4338  012BBC  6A48               	clrf	btemp+11,c
  4339                           
  4340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4341                           ; Switch size 1, requested type "simple"
  4342                           ; Number of cases is 1, Range of values is 0 to 0
  4343                           ; switch strategies available:
  4344                           ; Name         Instructions Cycles
  4345                           ; simple_byte            4     3 (average)
  4346                           ;	Chosen strategy is simple_byte
  4347  012BBE  5048               	movf	btemp+11,w,c
  4348  012BC0  0A00               	xorlw	0	; case 0
  4349  012BC2  A4D8               	btfss	status,2,c
  4350  012BC4  D7B7               	goto	l8554
  4351                           
  4352                           ; Switch size 1, requested type "simple"
  4353                           ; Number of cases is 2, Range of values is 1 to 2
  4354                           ; switch strategies available:
  4355                           ; Name         Instructions Cycles
  4356                           ; simple_byte            7     4 (average)
  4357                           ;	Chosen strategy is simple_byte
  4358  012BC6  5047               	movf	btemp+10,w,c
  4359  012BC8  0A01               	xorlw	1	; case 1
  4360  012BCA  B4D8               	btfsc	status,2,c
  4361  012BCC  D7B3               	goto	l8554
  4362  012BCE  0A03               	xorlw	3	; case 2
  4363  012BD0  B4D8               	btfsc	status,2,c
  4364  012BD2  D76F               	goto	l8536
  4365  012BD4  D7AF               	goto	l8554
  4366  012BD6                     l1732:
  4367                           
  4368                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  4369  012BD6  0EF6               	movlw	246
  4370  012BD8  26E1               	addwf	fsr1l,f,c
  4371  012BDA  0EFF               	movlw	255
  4372  012BDC  22E2               	addwfc	fsr1h,f,c
  4373  012BDE  0012               	return		;funcret
  4374  012BE0                     __end_of_secs_send:
  4375                           	opt callstack 0
  4376                           
  4377 ;; *************** function _block_checksum *****************
  4378 ;; Defined at:
  4379 ;;		line 19 in file "gemsecs.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  byte_block      2  [STACK] PTR unsigned char 
  4382 ;;		 -> H53(112), H24(27), H17(20), H14(17), 
  4383 ;;		 -> H13(48), H12(30), H10(91), 
  4384 ;;  byte_count      2  [STACK] unsigned short 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  i               2  [STACK] unsigned short 
  4387 ;;  sum             2  [STACK] unsigned short 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  2  [STACK] unsigned short 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    3
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_secs_send
  4408 ;; This function uses a reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text3
  4412  013744                     __ptext3:
  4413                           	opt callstack 0
  4414  013744                     _block_checksum:
  4415                           	opt callstack 0
  4416                           
  4417                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4418  013744  52E6               	movf	postinc1,f,c
  4419  013746  52E6               	movf	postinc1,f,c
  4420  013748  52E6               	movf	postinc1,f,c
  4421  01374A  52E6               	movf	postinc1,f,c
  4422                           
  4423                           ;gemsecs.c: 19: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 20: {;gemsecs.c: 21:  uint16_t sum = 0, i;
  4424                           ;stkvar	_sum @ sp[(-4)+2]
  4425                           
  4426                           ;incstack = 0
  4427  01374C  0EFE               	movlw	-2
  4428  01374E  6AE3               	clrf	plusw1,c
  4429  013750  0EFF               	movlw	-1
  4430  013752  6AE3               	clrf	plusw1,c
  4431                           
  4432                           ;gemsecs.c: 23:  for (i = 0; i < byte_count; i++) {
  4433                           ;stkvar	_i @ sp[(-4)+0]
  4434  013754  0EFC               	movlw	-4
  4435  013756  6AE3               	clrf	plusw1,c
  4436  013758  0EFD               	movlw	-3
  4437  01375A  6AE3               	clrf	plusw1,c
  4438  01375C  D039               	goto	l8472
  4439  01375E                     l8468:
  4440                           
  4441                           ;gemsecs.c: 24:   sum += byte_block[i];
  4442                           ;stkvar	_i @ sp[(-4)+0]
  4443  01375E  0EFC               	movlw	-4
  4444  013760  006F FF8C  F047    	movff	plusw1,btemp+10
  4445  013766  0EFD               	movlw	-3
  4446  013768  006F FF8C  F048    	movff	plusw1,btemp+11
  4447                           
  4448                           ;stkvar	_byte_block @ sp[(-4)+-2]
  4449  01376E  0EFA               	movlw	-6
  4450  013770  006F FF8C  F045    	movff	plusw1,btemp+8
  4451  013776  0EFB               	movlw	-5
  4452  013778  006F FF8C  F046    	movff	plusw1,btemp+9
  4453  01377E  5047               	movf	btemp+10,w,c
  4454  013780  2445               	addwf	btemp+8,w,c
  4455  013782  6ED9               	movwf	fsr2l,c
  4456  013784  5048               	movf	btemp+11,w,c
  4457  013786  2046               	addwfc	btemp+9,w,c
  4458  013788  6EDA               	movwf	fsr2h,c
  4459  01378A  50DF               	movf	indf2,w,c
  4460  01378C  6E48               	movwf	btemp+11,c
  4461                           
  4462                           ;stkvar	_sum @ sp[(-4)+2]
  4463  01378E  0EFE               	movlw	-2
  4464  013790  50E3               	movf	plusw1,w,c
  4465  013792  2448               	addwf	btemp+11,w,c
  4466  013794  6E3D               	movwf	btemp,c
  4467  013796  0EFE               	movlw	-2
  4468  013798  0060  F0F7  FFE3   	movff	btemp,plusw1
  4469  01379E  6A3D               	clrf	btemp,c
  4470  0137A0  0EFF               	movlw	-1
  4471  0137A2  50E3               	movf	plusw1,w,c
  4472  0137A4  223D               	addwfc	btemp,f,c
  4473  0137A6  0EFF               	movlw	-1
  4474  0137A8  0060  F0F7  FFE3   	movff	btemp,plusw1
  4475                           
  4476                           ;gemsecs.c: 25:  }
  4477                           ;stkvar	_i @ sp[(-4)+0]
  4478  0137AE  0EFC               	movlw	-4
  4479  0137B0  50E3               	movf	plusw1,w,c
  4480  0137B2  0F01               	addlw	1
  4481  0137B4  6E3D               	movwf	btemp,c
  4482  0137B6  0EFC               	movlw	-4
  4483  0137B8  0060  F0F7  FFE3   	movff	btemp,plusw1
  4484  0137BE  6A3D               	clrf	btemp,c
  4485  0137C0  0EFD               	movlw	-3
  4486  0137C2  50E3               	movf	plusw1,w,c
  4487  0137C4  203D               	addwfc	btemp,w,c
  4488  0137C6  6E3D               	movwf	btemp,c
  4489  0137C8  0EFD               	movlw	-3
  4490  0137CA  0060  F0F7  FFE3   	movff	btemp,plusw1
  4491  0137D0                     l8472:
  4492                           
  4493                           ;stkvar	_byte_count @ sp[(-4)+-4]
  4494  0137D0  0EF8               	movlw	-8
  4495  0137D2  006F FF8C  F047    	movff	plusw1,btemp+10
  4496  0137D8  0EF9               	movlw	-7
  4497  0137DA  006F FF8C  F048    	movff	plusw1,btemp+11
  4498                           
  4499                           ;stkvar	_i @ sp[(-4)+0]
  4500  0137E0  0EFC               	movlw	-4
  4501  0137E2  006F FF8C  F045    	movff	plusw1,btemp+8
  4502  0137E8  0EFD               	movlw	-3
  4503  0137EA  006F FF8C  F046    	movff	plusw1,btemp+9
  4504  0137F0  5047               	movf	btemp+10,w,c
  4505  0137F2  5C45               	subwf	btemp+8,w,c
  4506  0137F4  5048               	movf	btemp+11,w,c
  4507  0137F6  5846               	subwfb	btemp+9,w,c
  4508  0137F8  A0D8               	btfss	status,0,c
  4509  0137FA  D7B1               	goto	l8468
  4510                           
  4511                           ;gemsecs.c: 30:  return sum;
  4512                           ;stkvar	_sum @ sp[(-4)+2]
  4513  0137FC  0EFE               	movlw	-2
  4514  0137FE  006F FF8C  F03D    	movff	plusw1,btemp
  4515  013804  0EFF               	movlw	-1
  4516  013806  006F FF8C  F03E    	movff	plusw1,btemp+1
  4517                           
  4518                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  4519  01380C  0EF8               	movlw	248
  4520  01380E  26E1               	addwf	fsr1l,f,c
  4521  013810  0EFF               	movlw	255
  4522  013812  22E2               	addwfc	fsr1h,f,c
  4523  013814  0012               	return		;funcret
  4524  013816                     __end_of_block_checksum:
  4525                           	opt callstack 0
  4526                           
  4527 ;; *************** function _UART2_put_buffer *****************
  4528 ;; Defined at:
  4529 ;;		line 257 in file "mcc_generated_files/uart2.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  bufData         1  [STACK] unsigned char 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1  [STACK] void 
  4536 ;; Registers used:
  4537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 3F/39
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    3
  4550 ;; This function calls:
  4551 ;;		Nothing
  4552 ;; This function is called by:
  4553 ;;		_secs_send
  4554 ;; This function uses a reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text4
  4558  0146B8                     __ptext4:
  4559                           	opt callstack 0
  4560  0146B8                     _UART2_put_buffer:
  4561                           	opt callstack 25
  4562                           
  4563                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  4564                           
  4565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4566                           ;incstack = 0
  4567  0146B8  0139               	movlb	57	; () banked
  4568  0146BA  9596               	bcf	150,2,b	;volatile
  4569                           
  4570                           ; BSR set to: 57
  4571                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  4572                           ;stkvar	_bufData @ sp[(0)+-1]
  4573  0146BC  0E00               	movlw	low _uart2RxBuffer
  4574  0146BE  2433               	addwf	_uart2RxHead,w,c	;volatile
  4575  0146C0  6ED9               	movwf	fsr2l,c
  4576  0146C2  6ADA               	clrf	fsr2h,c
  4577  0146C4  0E02               	movlw	high _uart2RxBuffer
  4578  0146C6  22DA               	addwfc	fsr2h,f,c
  4579  0146C8  0EFF               	movlw	-1
  4580  0146CA  006F FF8F FFDF     	movff	plusw1,indf2
  4581                           
  4582                           ; BSR set to: 57
  4583  0146D0  2A33               	incf	_uart2RxHead,f,c	;volatile
  4584                           
  4585                           ; BSR set to: 57
  4586                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  4587  0146D2  0E3F               	movlw	63
  4588  0146D4  6433               	cpfsgt	_uart2RxHead,c
  4589  0146D6  D001               	goto	l5964
  4590                           
  4591                           ; BSR set to: 57
  4592                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  4593  0146D8  6A33               	clrf	_uart2RxHead,c	;volatile
  4594  0146DA                     l5964:
  4595                           
  4596                           ; BSR set to: 57
  4597                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  4598  0146DA  2A31               	incf	_uart2RxCount,f,c	;volatile
  4599                           
  4600                           ; BSR set to: 57
  4601                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  4602  0146DC  8596               	bsf	150,2,b	;volatile
  4603                           
  4604                           ; BSR set to: 57
  4605                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4606  0146DE  52E5               	movf	postdec1,f,c
  4607  0146E0  0012               	return		;funcret
  4608  0146E2                     __end_of_UART2_put_buffer:
  4609                           	opt callstack 0
  4610                           
  4611 ;; *************** function _UART2_is_tx_ready *****************
  4612 ;; Defined at:
  4613 ;;		line 142 in file "mcc_generated_files/uart2.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1  [STACK] unsigned char 
  4620 ;; Registers used:
  4621 ;;		btemp
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    3
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_secs_send
  4638 ;; This function uses a reentrant model
  4639 ;;
  4640                           
  4641                           	psect	text5
  4642  014CB2                     __ptext5:
  4643                           	opt callstack 0
  4644  014CB2                     _UART2_is_tx_ready:
  4645                           	opt callstack 25
  4646                           
  4647                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  4648                           
  4649                           ; BSR set to: 57
  4650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4651                           ;incstack = 0
  4652  014CB2  0060  F0D0  F03D   	movff	_uart2TxBufferRemaining,btemp	;volatile
  4653                           
  4654                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4655  014CB8  0012               	return		;funcret
  4656  014CBA                     __end_of_UART2_is_tx_ready:
  4657                           	opt callstack 0
  4658                           
  4659 ;; *************** function _UART2_Write *****************
  4660 ;; Defined at:
  4661 ;;		line 172 in file "mcc_generated_files/uart2.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  txData          1  [STACK] unsigned char 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1  [STACK] void 
  4668 ;; Registers used:
  4669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 3F/39
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4679 ;;Total ram usage:        0 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    3
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_secs_send
  4686 ;; This function uses a reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text6
  4690  01445E                     __ptext6:
  4691                           	opt callstack 0
  4692  01445E                     _UART2_Write:
  4693                           	opt callstack 25
  4694                           
  4695                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  4696                           
  4697                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  4698                           
  4699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4700                           ;incstack = 0
  4701  01445E  5034               	movf	_uart2TxBufferRemaining,w,c	;volatile
  4702  014460  B4D8               	btfsc	status,2,c
  4703  014462  D7FD               	goto	_UART2_Write
  4704                           
  4705                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  4706  014464  0139               	movlb	57	; () banked
  4707  014466  B796               	btfsc	150,3,b	;volatile
  4708  014468  D005               	goto	l699
  4709                           
  4710                           ; BSR set to: 57
  4711                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  4712                           ;stkvar	_txData @ sp[(0)+-1]
  4713  01446A  0EFF               	movlw	-1
  4714  01446C  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  4715                           
  4716                           ;mcc_generated_files/uart2.c: 181:     }
  4717  014472  D011               	goto	l5952
  4718  014474                     l699:
  4719                           
  4720                           ; BSR set to: 57
  4721                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  4722  014474  9796               	bcf	150,3,b	;volatile
  4723                           
  4724                           ; BSR set to: 57
  4725                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  4726                           ;stkvar	_txData @ sp[(0)+-1]
  4727  014476  0E40               	movlw	low _uart2TxBuffer
  4728  014478  2436               	addwf	_uart2TxHead,w,c	;volatile
  4729  01447A  6ED9               	movwf	fsr2l,c
  4730  01447C  6ADA               	clrf	fsr2h,c
  4731  01447E  0E02               	movlw	high _uart2TxBuffer
  4732  014480  22DA               	addwfc	fsr2h,f,c
  4733  014482  0EFF               	movlw	-1
  4734  014484  006F FF8F FFDF     	movff	plusw1,indf2
  4735                           
  4736                           ; BSR set to: 57
  4737  01448A  2A36               	incf	_uart2TxHead,f,c	;volatile
  4738                           
  4739                           ; BSR set to: 57
  4740                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  4741  01448C  0E3F               	movlw	63
  4742  01448E  6436               	cpfsgt	_uart2TxHead,c
  4743  014490  D001               	goto	l5950
  4744                           
  4745                           ; BSR set to: 57
  4746                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  4747  014492  6A36               	clrf	_uart2TxHead,c	;volatile
  4748  014494                     l5950:
  4749                           
  4750                           ; BSR set to: 57
  4751                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  4752  014494  0634               	decf	_uart2TxBufferRemaining,f,c	;volatile
  4753  014496                     l5952:
  4754                           
  4755                           ; BSR set to: 57
  4756                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  4757  014496  8796               	bsf	150,3,b	;volatile
  4758                           
  4759                           ; BSR set to: 57
  4760                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4761  014498  52E5               	movf	postdec1,f,c
  4762  01449A  0012               	return		;funcret
  4763  01449C                     __end_of_UART2_Write:
  4764                           	opt callstack 0
  4765                           
  4766 ;; *************** function _UART1_put_buffer *****************
  4767 ;; Defined at:
  4768 ;;		line 250 in file "mcc_generated_files/uart1.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  bufData         1  [STACK] unsigned char 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1  [STACK] void 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/39
  4779 ;;		On exit  : 3F/39
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4786 ;;Total ram usage:        0 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    3
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_t_protocol
  4793 ;;		_secs_send
  4794 ;; This function uses a reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text7
  4798  0146E2                     __ptext7:
  4799                           	opt callstack 0
  4800  0146E2                     _UART1_put_buffer:
  4801                           	opt callstack 25
  4802                           
  4803                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  4804                           
  4805                           ; BSR set to: 57
  4806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4807                           ;incstack = 0
  4808  0146E2  0139               	movlb	57	; () banked
  4809  0146E4  9793               	bcf	147,3,b	;volatile
  4810                           
  4811                           ; BSR set to: 57
  4812                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  4813                           ;stkvar	_bufData @ sp[(0)+-1]
  4814  0146E6  0E80               	movlw	low _uart1RxBuffer
  4815  0146E8  2439               	addwf	_uart1RxHead,w,c	;volatile
  4816  0146EA  6ED9               	movwf	fsr2l,c
  4817  0146EC  6ADA               	clrf	fsr2h,c
  4818  0146EE  0E02               	movlw	high _uart1RxBuffer
  4819  0146F0  22DA               	addwfc	fsr2h,f,c
  4820  0146F2  0EFF               	movlw	-1
  4821  0146F4  006F FF8F FFDF     	movff	plusw1,indf2
  4822                           
  4823                           ; BSR set to: 57
  4824  0146FA  2A39               	incf	_uart1RxHead,f,c	;volatile
  4825                           
  4826                           ; BSR set to: 57
  4827                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  4828  0146FC  0E3F               	movlw	63
  4829  0146FE  6439               	cpfsgt	_uart1RxHead,c
  4830  014700  D001               	goto	l5924
  4831                           
  4832                           ; BSR set to: 57
  4833                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  4834  014702  6A39               	clrf	_uart1RxHead,c	;volatile
  4835  014704                     l5924:
  4836                           
  4837                           ; BSR set to: 57
  4838                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  4839  014704  2A37               	incf	_uart1RxCount,f,c	;volatile
  4840                           
  4841                           ; BSR set to: 57
  4842                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  4843  014706  8793               	bsf	147,3,b	;volatile
  4844                           
  4845                           ; BSR set to: 57
  4846                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4847  014708  52E5               	movf	postdec1,f,c
  4848  01470A  0012               	return		;funcret
  4849  01470C                     __end_of_UART1_put_buffer:
  4850                           	opt callstack 0
  4851                           
  4852 ;; *************** function _UART1_is_tx_ready *****************
  4853 ;; Defined at:
  4854 ;;		line 151 in file "mcc_generated_files/uart1.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1  [STACK] unsigned char 
  4861 ;; Registers used:
  4862 ;;		btemp
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    3
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_secs_send
  4879 ;; This function uses a reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text8
  4883  014CBA                     __ptext8:
  4884                           	opt callstack 0
  4885  014CBA                     _UART1_is_tx_ready:
  4886                           	opt callstack 25
  4887                           
  4888                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4889                           
  4890                           ; BSR set to: 57
  4891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4892                           ;incstack = 0
  4893  014CBA  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4894                           
  4895                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4896  014CC0  0012               	return		;funcret
  4897  014CC2                     __end_of_UART1_is_tx_ready:
  4898                           	opt callstack 0
  4899                           
  4900 ;; *************** function _secs_II_message *****************
  4901 ;; Defined at:
  4902 ;;		line 533 in file "gemsecs.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  stream          1  [STACK] unsigned char 
  4905 ;;  function        1  [STACK] unsigned char 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  7  [STACK] struct response_type
  4910 ;; Registers used:
  4911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/3C
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4921 ;;Total ram usage:        0 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    3
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_t_protocol
  4928 ;; This function uses a reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text9
  4932  012158                     __ptext9:
  4933                           	opt callstack 0
  4934  012158                     _secs_II_message:
  4935                           	opt callstack 0
  4936                           
  4937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  4938  012158  0E05               	movlw	5
  4939  01215A  26E1               	addwf	fsr1l,f,c
  4940  01215C  0E00               	movlw	0
  4941  01215E  22E2               	addwfc	fsr1h,f,c
  4942                           
  4943                           ;gemsecs.c: 533: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 534: {;gemsecs.c: 535:  static response_type block;;gemsecs.c: 537:  V.abort = LINK_
      +                          ERROR_NONE;
  4944                           
  4945                           ;incstack = 0
  4946  012160  0E0A               	movlw	10
  4947  012162  006F FFA0  F4E7    	movff	wreg,_V+241	;volatile
  4948                           
  4949                           ;gemsecs.c: 538:  V.queue = 0;
  4950  012168  EE21  F0F5         	lfsr	2,_V+255	;volatile
  4951  01216C  98DF               	bcf	indf2,4,c
  4952                           
  4953                           ;gemsecs.c: 539:  block.respond = 0;
  4954  01216E  9007               	bcf	secs_II_message@block+6,0,c
  4955                           
  4956                           ;gemsecs.c: 541:  switch (stream) {
  4957  012170  D132               	goto	l6708
  4958  012172                     l6546:
  4959                           
  4960                           ;gemsecs.c: 545:    block.header = (uint8_t*) & H12[0];
  4961  012172  0E67               	movlw	low _H12
  4962  012174  6E01               	movwf	secs_II_message@block,c
  4963  012176  6A02               	clrf	secs_II_message@block+1,c
  4964                           
  4965                           ;gemsecs.c: 546:    block.length = sizeof(header12);
  4966  012178  0E0F               	movlw	15
  4967  01217A  6E03               	movwf	secs_II_message@block+2,c
  4968                           
  4969                           ;gemsecs.c: 547:    H12[0].block.block.systemb = V.systemb;
  4970  01217C  C4E0  F06B         	movff	_V+234,_H12+4	;volatile
  4971  012180  C4E1  F06C         	movff	_V+235,_H12+5	;volatile
  4972  012184  C4E2  F06D         	movff	_V+236,_H12+6	;volatile
  4973  012188  C4E3  F06E         	movff	_V+237,_H12+7	;volatile
  4974                           
  4975                           ;gemsecs.c: 548:    H10[0].block.block.systemb = V.systemb;
  4976  01218C  C4E0  F102         	movff	_V+234,_H10+2	;volatile
  4977  012190  C4E1  F103         	movff	_V+235,_H10+3	;volatile
  4978  012194  C4E2  F104         	movff	_V+236,_H10+4	;volatile
  4979  012198  C4E3  F105         	movff	_V+237,_H10+5	;volatile
  4980                           
  4981                           ;gemsecs.c: 549:    block.respond = 1;
  4982  01219C  8007               	bsf	secs_II_message@block+6,0,c
  4983                           
  4984                           ;gemsecs.c: 550:    block.reply = (uint8_t*) & H10[0];
  4985  01219E  0E00               	movlw	low _H10
  4986  0121A0  6E04               	movwf	secs_II_message@block+3,c
  4987  0121A2  0E01               	movlw	high _H10
  4988  0121A4  6E05               	movwf	secs_II_message@block+4,c
  4989                           
  4990                           ;gemsecs.c: 551:    block.reply_length = sizeof(header10);
  4991  0121A6  0E0D               	movlw	13
  4992  0121A8                     L11:
  4993  0121A8  6E06               	movwf	secs_II_message@block+5,c
  4994                           
  4995                           ;gemsecs.c: 552:    V.queue = 1;
  4996  0121AA  EE21  F0F5         	lfsr	2,_V+255	;volatile
  4997  0121AE  88DF               	bsf	indf2,4,c
  4998                           
  4999                           ;gemsecs.c: 553:    break;
  5000  0121B0  D12E               	goto	l6710
  5001  0121B2                     l6560:
  5002                           
  5003                           ;gemsecs.c: 555:    block.header = (uint8_t*) & H10[0];
  5004  0121B2  0E00               	movlw	low _H10
  5005  0121B4  6E01               	movwf	secs_II_message@block,c
  5006  0121B6  0E01               	movlw	high _H10
  5007  0121B8  6E02               	movwf	secs_II_message@block+1,c
  5008                           
  5009                           ;gemsecs.c: 556:    block.length = sizeof(header10);
  5010  0121BA  0E0D               	movlw	13
  5011  0121BC  6E03               	movwf	secs_II_message@block+2,c
  5012                           
  5013                           ;gemsecs.c: 557:    H10[0].block.block.systemb = V.systemb;
  5014  0121BE  C4E0  F102         	movff	_V+234,_H10+2	;volatile
  5015  0121C2  C4E1  F103         	movff	_V+235,_H10+3	;volatile
  5016  0121C6  C4E2  F104         	movff	_V+236,_H10+4	;volatile
  5017  0121CA  C4E3  F105         	movff	_V+237,_H10+5	;volatile
  5018                           
  5019                           ;gemsecs.c: 558:    break;
  5020  0121CE  D11F               	goto	l6710
  5021  0121D0                     l6566:
  5022                           
  5023                           ;gemsecs.c: 560:    block.header = (uint8_t*) & H14[0];
  5024  0121D0  0E99               	movlw	low _H14
  5025  0121D2  6E01               	movwf	secs_II_message@block,c
  5026  0121D4  6A02               	clrf	secs_II_message@block+1,c
  5027                           
  5028                           ;gemsecs.c: 561:    block.length = sizeof(header14);
  5029  0121D6  0E11               	movlw	17
  5030  0121D8  6E03               	movwf	secs_II_message@block+2,c
  5031                           
  5032                           ;gemsecs.c: 562:    H14[0].block.block.systemb = V.systemb;
  5033  0121DA  C4E0  F09F         	movff	_V+234,_H14+6	;volatile
  5034  0121DE  C4E1  F0A0         	movff	_V+235,_H14+7	;volatile
  5035  0121E2  C4E2  F0A1         	movff	_V+236,_H14+8	;volatile
  5036  0121E6  C4E3  F0A2         	movff	_V+237,_H14+9	;volatile
  5037                           
  5038                           ;gemsecs.c: 563:    break;
  5039  0121EA  D111               	goto	l6710
  5040  0121EC                     l6572:
  5041                           
  5042                           ;gemsecs.c: 565:    block.header = (uint8_t*) & H17[0];
  5043  0121EC  0E85               	movlw	low _H17
  5044  0121EE  6E01               	movwf	secs_II_message@block,c
  5045  0121F0  6A02               	clrf	secs_II_message@block+1,c
  5046                           
  5047                           ;gemsecs.c: 566:    block.length = sizeof(header17);
  5048  0121F2  0E14               	movlw	20
  5049  0121F4  6E03               	movwf	secs_II_message@block+2,c
  5050                           
  5051                           ;gemsecs.c: 567:    H17[0].block.block.systemb = V.systemb;
  5052  0121F6  C4E0  F08E         	movff	_V+234,_H17+9	;volatile
  5053  0121FA  C4E1  F08F         	movff	_V+235,_H17+10	;volatile
  5054  0121FE  C4E2  F090         	movff	_V+236,_H17+11	;volatile
  5055  012202  C4E3  F091         	movff	_V+237,_H17+12	;volatile
  5056                           
  5057                           ;gemsecs.c: 568:    H12[1].block.block.systemb = V.systemb;
  5058  012206  C4E0  F07A         	movff	_V+234,_H12+19	;volatile
  5059  01220A  C4E1  F07B         	movff	_V+235,_H12+20	;volatile
  5060  01220E  C4E2  F07C         	movff	_V+236,_H12+21	;volatile
  5061  012212  C4E3  F07D         	movff	_V+237,_H12+22	;volatile
  5062                           
  5063                           ;gemsecs.c: 569:    block.respond = 1;
  5064  012216  8007               	bsf	secs_II_message@block+6,0,c
  5065                           
  5066                           ;gemsecs.c: 570:    block.reply = (uint8_t*) & H12[1];
  5067  012218  0E76               	movlw	low (_H12+15)
  5068  01221A  6E04               	movwf	secs_II_message@block+3,c
  5069  01221C  6A05               	clrf	secs_II_message@block+4,c
  5070                           
  5071                           ;gemsecs.c: 571:    block.reply_length = sizeof(header12);
  5072  01221E  0E0F               	movlw	15
  5073  012220  D7C3               	goto	L11
  5074  012222                     l6586:
  5075                           
  5076                           ;gemsecs.c: 575:    block.header = (uint8_t*) & H12[1];
  5077  012222  0E76               	movlw	low (_H12+15)
  5078  012224  6E01               	movwf	secs_II_message@block,c
  5079  012226  6A02               	clrf	secs_II_message@block+1,c
  5080                           
  5081                           ;gemsecs.c: 576:    block.length = sizeof(header12);
  5082  012228  0E0F               	movlw	15
  5083  01222A  6E03               	movwf	secs_II_message@block+2,c
  5084                           
  5085                           ;gemsecs.c: 577:    H12[1].block.block.systemb = V.systemb;
  5086  01222C  C4E0  F07A         	movff	_V+234,_H12+19	;volatile
  5087  012230  C4E1  F07B         	movff	_V+235,_H12+20	;volatile
  5088  012234  C4E2  F07C         	movff	_V+236,_H12+21	;volatile
  5089  012238  C4E3  F07D         	movff	_V+237,_H12+22	;volatile
  5090                           
  5091                           ;gemsecs.c: 578:    break;
  5092  01223C  D0E8               	goto	l6710
  5093  01223E                     l6592:
  5094                           
  5095                           ;gemsecs.c: 580:    block.header = (uint8_t*) & H10[2];
  5096  01223E  0E1A               	movlw	low (_H10+26)
  5097  012240  6E01               	movwf	secs_II_message@block,c
  5098  012242  0E01               	movlw	high (_H10+26)
  5099  012244  6E02               	movwf	secs_II_message@block+1,c
  5100                           
  5101                           ;gemsecs.c: 581:    block.length = sizeof(header10);
  5102  012246  0E0D               	movlw	13
  5103  012248  6E03               	movwf	secs_II_message@block+2,c
  5104                           
  5105                           ;gemsecs.c: 582:    H10[2].block.block.systemb = V.systemb;
  5106  01224A  C4E0  F11C         	movff	_V+234,_H10+28	;volatile
  5107  01224E  C4E1  F11D         	movff	_V+235,_H10+29	;volatile
  5108  012252  C4E2  F11E         	movff	_V+236,_H10+30	;volatile
  5109  012256  C4E3  F11F         	movff	_V+237,_H10+31	;volatile
  5110                           
  5111                           ;gemsecs.c: 583:    V.abort = LINK_ERROR_ABORT;
  5112  01225A  0E11               	movlw	17
  5113  01225C  006F FFA0  F4E7    	movff	wreg,_V+241	;volatile
  5114                           
  5115                           ;gemsecs.c: 584:    break;
  5116  012262  D0D5               	goto	l6710
  5117  012264                     l6602:
  5118                           
  5119                           ;stkvar	_function @ sp[(0)+-7]
  5120  012264  0EF9               	movlw	-7
  5121  012266  50E3               	movf	plusw1,w,c
  5122  012268  6E47               	movwf	btemp+10,c
  5123  01226A  6A48               	clrf	btemp+11,c
  5124                           
  5125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5126                           ; Switch size 1, requested type "simple"
  5127                           ; Number of cases is 1, Range of values is 0 to 0
  5128                           ; switch strategies available:
  5129                           ; Name         Instructions Cycles
  5130                           ; simple_byte            4     3 (average)
  5131                           ;	Chosen strategy is simple_byte
  5132  01226C  5048               	movf	btemp+11,w,c
  5133  01226E  0A00               	xorlw	0	; case 0
  5134  012270  A4D8               	btfss	status,2,c
  5135  012272  D7E5               	goto	l6592
  5136                           
  5137                           ; Switch size 1, requested type "simple"
  5138                           ; Number of cases is 5, Range of values is 1 to 14
  5139                           ; switch strategies available:
  5140                           ; Name         Instructions Cycles
  5141                           ; simple_byte           16     9 (average)
  5142                           ;	Chosen strategy is simple_byte
  5143  012274  5047               	movf	btemp+10,w,c
  5144  012276  0A01               	xorlw	1	; case 1
  5145  012278  B4D8               	btfsc	status,2,c
  5146  01227A  D77B               	goto	l6546
  5147  01227C  0A03               	xorlw	3	; case 2
  5148  01227E  B4D8               	btfsc	status,2,c
  5149  012280  D798               	goto	l6560
  5150  012282  0A01               	xorlw	1	; case 3
  5151  012284  B4D8               	btfsc	status,2,c
  5152  012286  D7A4               	goto	l6566
  5153  012288  0A0E               	xorlw	14	; case 13
  5154  01228A  B4D8               	btfsc	status,2,c
  5155  01228C  D7AF               	goto	l6572
  5156  01228E  0A03               	xorlw	3	; case 14
  5157  012290  B4D8               	btfsc	status,2,c
  5158  012292  D7C7               	goto	l6586
  5159  012294  D7D4               	goto	l6592
  5160  012296                     l6604:
  5161                           
  5162                           ;gemsecs.c: 590:    block.header = (uint8_t*) & H24[0];
  5163  012296  0E8B               	movlw	low _H24
  5164  012298  6E01               	movwf	secs_II_message@block,c
  5165  01229A  0E01               	movlw	high _H24
  5166  01229C  6E02               	movwf	secs_II_message@block+1,c
  5167                           
  5168                           ;gemsecs.c: 591:    block.length = sizeof(header24);
  5169  01229E  0E1B               	movlw	27
  5170  0122A0  6E03               	movwf	secs_II_message@block+2,c
  5171                           
  5172                           ;gemsecs.c: 592:    H24[0].block.block.systemb = V.systemb;
  5173  0122A2  C4E0  F19B         	movff	_V+234,_H24+16	;volatile
  5174  0122A6  C4E1  F19C         	movff	_V+235,_H24+17	;volatile
  5175  0122AA  C4E2  F19D         	movff	_V+236,_H24+18	;volatile
  5176  0122AE  C4E3  F19E         	movff	_V+237,_H24+19	;volatile
  5177                           
  5178                           ;gemsecs.c: 593:    H24[0].data[12] = 12;
  5179  0122B2  0E0C               	movlw	12
  5180  0122B4  0101               	movlb	1	; () banked
  5181  0122B6  6F99               	movwf	(_H24+14)& (0+255),b
  5182                           
  5183                           ;gemsecs.c: 594:    break;
  5184  0122B8  D0AA               	goto	l6710
  5185  0122BA                     l6622:
  5186                           
  5187                           ;stkvar	_function @ sp[(0)+-7]
  5188  0122BA  0EF9               	movlw	-7
  5189  0122BC  50E3               	movf	plusw1,w,c
  5190  0122BE  6E47               	movwf	btemp+10,c
  5191  0122C0  6A48               	clrf	btemp+11,c
  5192                           
  5193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5194                           ; Switch size 1, requested type "simple"
  5195                           ; Number of cases is 1, Range of values is 0 to 0
  5196                           ; switch strategies available:
  5197                           ; Name         Instructions Cycles
  5198                           ; simple_byte            4     3 (average)
  5199                           ;	Chosen strategy is simple_byte
  5200  0122C2  5048               	movf	btemp+11,w,c
  5201  0122C4  0A00               	xorlw	0	; case 0
  5202  0122C6  A4D8               	btfss	status,2,c
  5203  0122C8  D7BA               	goto	l6592
  5204                           
  5205                           ; Switch size 1, requested type "simple"
  5206                           ; Number of cases is 1, Range of values is 17 to 17
  5207                           ; switch strategies available:
  5208                           ; Name         Instructions Cycles
  5209                           ; simple_byte            4     3 (average)
  5210                           ;	Chosen strategy is simple_byte
  5211  0122CA  5047               	movf	btemp+10,w,c
  5212  0122CC  0A11               	xorlw	17	; case 17
  5213  0122CE  B4D8               	btfsc	status,2,c
  5214  0122D0  D7E2               	goto	l6604
  5215  0122D2  D7B5               	goto	l6592
  5216  0122D4                     l6624:
  5217                           
  5218                           ;gemsecs.c: 606:    block.header = (uint8_t*) & H13[2];
  5219  0122D4  0E7B               	movlw	low (_H13+32)
  5220  0122D6  6E01               	movwf	secs_II_message@block,c
  5221  0122D8  0E01               	movlw	high (_H13+32)
  5222  0122DA  6E02               	movwf	secs_II_message@block+1,c
  5223                           
  5224                           ;gemsecs.c: 607:    block.length = sizeof(header13);
  5225  0122DC  0E10               	movlw	16
  5226  0122DE  6E03               	movwf	secs_II_message@block+2,c
  5227                           
  5228                           ;gemsecs.c: 608:    H13[2].block.block.systemb = V.systemb;
  5229  0122E0  C4E0  F180         	movff	_V+234,_H13+37	;volatile
  5230  0122E4  C4E1  F181         	movff	_V+235,_H13+38	;volatile
  5231  0122E8  C4E2  F182         	movff	_V+236,_H13+39	;volatile
  5232  0122EC  C4E3  F183         	movff	_V+237,_H13+40	;volatile
  5233                           
  5234                           ;gemsecs.c: 609:    break;
  5235  0122F0  D08E               	goto	l6710
  5236  0122F2                     l6640:
  5237                           
  5238                           ;stkvar	_function @ sp[(0)+-7]
  5239  0122F2  0EF9               	movlw	-7
  5240  0122F4  50E3               	movf	plusw1,w,c
  5241  0122F6  6E47               	movwf	btemp+10,c
  5242  0122F8  6A48               	clrf	btemp+11,c
  5243                           
  5244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5245                           ; Switch size 1, requested type "simple"
  5246                           ; Number of cases is 1, Range of values is 0 to 0
  5247                           ; switch strategies available:
  5248                           ; Name         Instructions Cycles
  5249                           ; simple_byte            4     3 (average)
  5250                           ;	Chosen strategy is simple_byte
  5251  0122FA  5048               	movf	btemp+11,w,c
  5252  0122FC  0A00               	xorlw	0	; case 0
  5253  0122FE  A4D8               	btfss	status,2,c
  5254  012300  D79E               	goto	l6592
  5255                           
  5256                           ; Switch size 1, requested type "simple"
  5257                           ; Number of cases is 1, Range of values is 1 to 1
  5258                           ; switch strategies available:
  5259                           ; Name         Instructions Cycles
  5260                           ; simple_byte            4     3 (average)
  5261                           ;	Chosen strategy is simple_byte
  5262  012302  5047               	movf	btemp+10,w,c
  5263  012304  0A01               	xorlw	1	; case 1
  5264  012306  B4D8               	btfsc	status,2,c
  5265  012308  D7E5               	goto	l6624
  5266  01230A  D799               	goto	l6592
  5267  01230C                     l6642:
  5268                           
  5269                           ;gemsecs.c: 621:    block.header = (uint8_t*) & H13[0];
  5270  01230C  0E5B               	movlw	low _H13
  5271  01230E  6E01               	movwf	secs_II_message@block,c
  5272  012310  0E01               	movlw	high _H13
  5273  012312  6E02               	movwf	secs_II_message@block+1,c
  5274                           
  5275                           ;gemsecs.c: 622:    block.length = sizeof(header13);
  5276  012314  0E10               	movlw	16
  5277  012316  6E03               	movwf	secs_II_message@block+2,c
  5278                           
  5279                           ;gemsecs.c: 623:    H13[0].block.block.systemb = V.systemb;
  5280  012318  C4E0  F160         	movff	_V+234,_H13+5	;volatile
  5281  01231C  C4E1  F161         	movff	_V+235,_H13+6	;volatile
  5282  012320  C4E2  F162         	movff	_V+236,_H13+7	;volatile
  5283  012324  C4E3  F163         	movff	_V+237,_H13+8	;volatile
  5284                           
  5285                           ;gemsecs.c: 624:    break;
  5286  012328  D072               	goto	l6710
  5287  01232A                     l6658:
  5288                           
  5289                           ;stkvar	_function @ sp[(0)+-7]
  5290  01232A  0EF9               	movlw	-7
  5291  01232C  50E3               	movf	plusw1,w,c
  5292  01232E  6E47               	movwf	btemp+10,c
  5293  012330  6A48               	clrf	btemp+11,c
  5294                           
  5295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5296                           ; Switch size 1, requested type "simple"
  5297                           ; Number of cases is 1, Range of values is 0 to 0
  5298                           ; switch strategies available:
  5299                           ; Name         Instructions Cycles
  5300                           ; simple_byte            4     3 (average)
  5301                           ;	Chosen strategy is simple_byte
  5302  012332  5048               	movf	btemp+11,w,c
  5303  012334  0A00               	xorlw	0	; case 0
  5304  012336  A4D8               	btfss	status,2,c
  5305  012338  D782               	goto	l6592
  5306                           
  5307                           ; Switch size 1, requested type "simple"
  5308                           ; Number of cases is 1, Range of values is 11 to 11
  5309                           ; switch strategies available:
  5310                           ; Name         Instructions Cycles
  5311                           ; simple_byte            4     3 (average)
  5312                           ;	Chosen strategy is simple_byte
  5313  01233A  5047               	movf	btemp+10,w,c
  5314  01233C  0A0B               	xorlw	11	; case 11
  5315  01233E  B4D8               	btfsc	status,2,c
  5316  012340  D7E5               	goto	l6642
  5317  012342  D77D               	goto	l6592
  5318  012344                     l6670:
  5319                           
  5320                           ;stkvar	_function @ sp[(0)+-7]
  5321  012344  0EF9               	movlw	-7
  5322  012346  50E3               	movf	plusw1,w,c
  5323  012348  6E47               	movwf	btemp+10,c
  5324  01234A  6A48               	clrf	btemp+11,c
  5325                           
  5326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5327                           ; Switch size 1, requested type "simple"
  5328                           ; Number of cases is 1, Range of values is 0 to 0
  5329                           ; switch strategies available:
  5330                           ; Name         Instructions Cycles
  5331                           ; simple_byte            4     3 (average)
  5332                           ;	Chosen strategy is simple_byte
  5333  01234C  5048               	movf	btemp+11,w,c
  5334  01234E  0A00               	xorlw	0	; case 0
  5335  012350  A4D8               	btfss	status,2,c
  5336  012352  D775               	goto	l6592
  5337                           
  5338                           ; Switch size 1, requested type "simple"
  5339                           ; Number of cases is 7, Range of values is 1 to 13
  5340                           ; switch strategies available:
  5341                           ; Name         Instructions Cycles
  5342                           ; simple_byte           22    12 (average)
  5343                           ;	Chosen strategy is simple_byte
  5344  012354  5047               	movf	btemp+10,w,c
  5345  012356  0A01               	xorlw	1	; case 1
  5346  012358  B4D8               	btfsc	status,2,c
  5347  01235A  D059               	goto	l6710
  5348  01235C  0A02               	xorlw	2	; case 3
  5349  01235E  B4D8               	btfsc	status,2,c
  5350  012360  D056               	goto	l6710
  5351  012362  0A06               	xorlw	6	; case 5
  5352  012364  B4D8               	btfsc	status,2,c
  5353  012366  D053               	goto	l6710
  5354  012368  0A02               	xorlw	2	; case 7
  5355  01236A  B4D8               	btfsc	status,2,c
  5356  01236C  D050               	goto	l6710
  5357  01236E  0A0E               	xorlw	14	; case 9
  5358  012370  B4D8               	btfsc	status,2,c
  5359  012372  D04D               	goto	l6710
  5360  012374  0A02               	xorlw	2	; case 11
  5361  012376  B4D8               	btfsc	status,2,c
  5362  012378  D04A               	goto	l6710
  5363  01237A  0A06               	xorlw	6	; case 13
  5364  01237C  B4D8               	btfsc	status,2,c
  5365  01237E  D047               	goto	l6710
  5366  012380  D75E               	goto	l6592
  5367  012382                     l6672:
  5368                           
  5369                           ;gemsecs.c: 660:    block.header = (uint8_t*) & H13[1];
  5370  012382  0E6B               	movlw	low (_H13+16)
  5371  012384  6E01               	movwf	secs_II_message@block,c
  5372  012386  0E01               	movlw	high (_H13+16)
  5373  012388  6E02               	movwf	secs_II_message@block+1,c
  5374                           
  5375                           ;gemsecs.c: 661:    block.length = sizeof(header13);
  5376  01238A  0E10               	movlw	16
  5377  01238C  6E03               	movwf	secs_II_message@block+2,c
  5378                           
  5379                           ;gemsecs.c: 662:    H13[1].block.block.systemb = V.systemb;
  5380  01238E  C4E0  F170         	movff	_V+234,_H13+21	;volatile
  5381  012392  C4E1  F171         	movff	_V+235,_H13+22	;volatile
  5382  012396  C4E2  F172         	movff	_V+236,_H13+23	;volatile
  5383  01239A  C4E3  F173         	movff	_V+237,_H13+24	;volatile
  5384                           
  5385                           ;gemsecs.c: 663:    H53[0].block.block.systemb = V.systemb;
  5386  01239E  C4E0  F3B3         	movff	_V+234,_H53+45	;volatile
  5387  0123A2  C4E1  F3B4         	movff	_V+235,_H53+46	;volatile
  5388  0123A6  C4E2  F3B5         	movff	_V+236,_H53+47	;volatile
  5389  0123AA  C4E3  F3B6         	movff	_V+237,_H53+48	;volatile
  5390                           
  5391                           ;gemsecs.c: 664:    block.respond = 1;
  5392  0123AE  8007               	bsf	secs_II_message@block+6,0,c
  5393                           
  5394                           ;gemsecs.c: 666:    block.reply = (uint8_t*) & H53[1];
  5395  0123B0  0EBE               	movlw	low (_H53+56)
  5396  0123B2  6E04               	movwf	secs_II_message@block+3,c
  5397  0123B4  0E03               	movlw	high (_H53+56)
  5398  0123B6  6E05               	movwf	secs_II_message@block+4,c
  5399                           
  5400                           ;gemsecs.c: 667:    block.reply_length = sizeof(header53);
  5401  0123B8  0E38               	movlw	56
  5402  0123BA  D6F6               	goto	L11
  5403  0123BC                     l6696:
  5404                           
  5405                           ;stkvar	_function @ sp[(0)+-7]
  5406  0123BC  0EF9               	movlw	-7
  5407  0123BE  50E3               	movf	plusw1,w,c
  5408  0123C0  6E47               	movwf	btemp+10,c
  5409  0123C2  6A48               	clrf	btemp+11,c
  5410                           
  5411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5412                           ; Switch size 1, requested type "simple"
  5413                           ; Number of cases is 1, Range of values is 0 to 0
  5414                           ; switch strategies available:
  5415                           ; Name         Instructions Cycles
  5416                           ; simple_byte            4     3 (average)
  5417                           ;	Chosen strategy is simple_byte
  5418  0123C4  5048               	movf	btemp+11,w,c
  5419  0123C6  0A00               	xorlw	0	; case 0
  5420  0123C8  A4D8               	btfss	status,2,c
  5421  0123CA  D739               	goto	l6592
  5422                           
  5423                           ; Switch size 1, requested type "simple"
  5424                           ; Number of cases is 1, Range of values is 1 to 1
  5425                           ; switch strategies available:
  5426                           ; Name         Instructions Cycles
  5427                           ; simple_byte            4     3 (average)
  5428                           ;	Chosen strategy is simple_byte
  5429  0123CC  5047               	movf	btemp+10,w,c
  5430  0123CE  0A01               	xorlw	1	; case 1
  5431  0123D0  B4D8               	btfsc	status,2,c
  5432  0123D2  D7D7               	goto	l6672
  5433  0123D4  D734               	goto	l6592
  5434  0123D6                     l6708:
  5435                           
  5436                           ;stkvar	_stream @ sp[(0)+-6]
  5437  0123D6  0EFA               	movlw	-6
  5438  0123D8  50E3               	movf	plusw1,w,c
  5439  0123DA  6E47               	movwf	btemp+10,c
  5440  0123DC  6A48               	clrf	btemp+11,c
  5441                           
  5442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5443                           ; Switch size 1, requested type "simple"
  5444                           ; Number of cases is 1, Range of values is 0 to 0
  5445                           ; switch strategies available:
  5446                           ; Name         Instructions Cycles
  5447                           ; simple_byte            4     3 (average)
  5448                           ;	Chosen strategy is simple_byte
  5449  0123DE  5048               	movf	btemp+11,w,c
  5450  0123E0  0A00               	xorlw	0	; case 0
  5451  0123E2  A4D8               	btfss	status,2,c
  5452  0123E4  D72C               	goto	l6592
  5453                           
  5454                           ; Switch size 1, requested type "simple"
  5455                           ; Number of cases is 6, Range of values is 1 to 10
  5456                           ; switch strategies available:
  5457                           ; Name         Instructions Cycles
  5458                           ; simple_byte           19    10 (average)
  5459                           ;	Chosen strategy is simple_byte
  5460  0123E6  5047               	movf	btemp+10,w,c
  5461  0123E8  0A01               	xorlw	1	; case 1
  5462  0123EA  B4D8               	btfsc	status,2,c
  5463  0123EC  D73B               	goto	l6602
  5464  0123EE  0A03               	xorlw	3	; case 2
  5465  0123F0  B4D8               	btfsc	status,2,c
  5466  0123F2  D763               	goto	l6622
  5467  0123F4  0A07               	xorlw	7	; case 5
  5468  0123F6  B4D8               	btfsc	status,2,c
  5469  0123F8  D77C               	goto	l6640
  5470  0123FA  0A03               	xorlw	3	; case 6
  5471  0123FC  B4D8               	btfsc	status,2,c
  5472  0123FE  D795               	goto	l6658
  5473  012400  0A0F               	xorlw	15	; case 9
  5474  012402  B4D8               	btfsc	status,2,c
  5475  012404  D79F               	goto	l6670
  5476  012406  0A03               	xorlw	3	; case 10
  5477  012408  B4D8               	btfsc	status,2,c
  5478  01240A  D7D8               	goto	l6696
  5479  01240C  D718               	goto	l6592
  5480  01240E                     l6710:
  5481                           
  5482                           ;gemsecs.c: 691:  return(block);
  5483  01240E  EE20  F001         	lfsr	2,secs_II_message@block
  5484                           
  5485                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  5486  012412  0E07               	movlw	7
  5487  012414  6E3D               	movwf	btemp,c
  5488  012416  0EF9               	movlw	-7
  5489  012418                     us358999:
  5490  012418  006F FF7B FFE3     	movff	postinc2,plusw1
  5491  01241E  28E8               	incf	wreg,w,c
  5492  012420  2E3D               	decfsz	btemp,f,c
  5493  012422  D7FA               	bra	us358999
  5494                           
  5495                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  5496  012424  0012               	return		;funcret
  5497  012426                     __end_of_secs_II_message:
  5498                           	opt callstack 0
  5499                           
  5500 ;; *************** function _srand *****************
  5501 ;; Defined at:
  5502 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  s               2  [STACK] unsigned int 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1  [STACK] void 
  5509 ;; Registers used:
  5510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5511 ;; Tracked objects:
  5512 ;;		On entry : 3F/0
  5513 ;;		On exit  : 3F/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5520 ;;Total ram usage:        0 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    3
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_main
  5527 ;; This function uses a reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text10
  5531  0145FE                     __ptext10:
  5532                           	opt callstack 0
  5533  0145FE                     _srand:
  5534                           	opt callstack 27
  5535                           
  5536                           ;stkvar	_s @ sp[(0)+-2]
  5537                           
  5538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5539                           ;incstack = 0
  5540  0145FE  0EFE               	movlw	-2
  5541  014600  50E3               	movf	plusw1,w,c
  5542  014602  0FFF               	addlw	255
  5543  014604  6E47               	movwf	btemp+10,c
  5544  014606  0EFF               	movlw	-1
  5545  014608  006F FF8C  F048    	movff	plusw1,btemp+11
  5546  01460E  0EFF               	movlw	255
  5547  014610  2248               	addwfc	btemp+11,f,c
  5548  014612  0060  F11C  F0E7   	movff	btemp+10,_seed
  5549  014618  0060  F120  F0E8   	movff	btemp+11,_seed+1
  5550  01461E  0100               	movlb	0	; () banked
  5551  014620  6BE9               	clrf	(_seed+2)& (0+255),b
  5552  014622  6BEA               	clrf	(_seed+3)& (0+255),b
  5553  014624  6BEB               	clrf	(_seed+4)& (0+255),b
  5554  014626  6BEC               	clrf	(_seed+5)& (0+255),b
  5555  014628  6BED               	clrf	(_seed+6)& (0+255),b
  5556  01462A  6BEE               	clrf	(_seed+7)& (0+255),b
  5557                           
  5558                           ; BSR set to: 0
  5559                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5560  01462C  52E5               	movf	postdec1,f,c
  5561  01462E  52E5               	movf	postdec1,f,c
  5562  014630  0012               	return		;funcret
  5563  014632                     __end_of_srand:
  5564                           	opt callstack 0
  5565                           
  5566 ;; *************** function _sprintf *****************
  5567 ;; Defined at:
  5568 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  s               2  [STACK] PTR unsigned char 
  5571 ;;		 -> V(261), 
  5572 ;;  fmt             2  [STACK] PTR const unsigned char 
  5573 ;;		 -> STR_21(91), STR_17(26), STR_16(26), STR_15(6), 
  5574 ;;		 -> STR_14(19), STR_13(26), STR_12(17), STR_11(21), 
  5575 ;;		 -> STR_10(18), STR_9(6), STR_8(6), STR_7(14), 
  5576 ;;		 -> STR_6(15), STR_5(21), STR_4(15), STR_2(12), 
  5577 ;;		 -> STR_1(17), 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  f               6  [STACK] struct _IO_FILE
  5580 ;;  ap              2  [STACK] PTR void [1]
  5581 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5582 ;;  ret             2    0        int 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  2  [STACK] int 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 3F/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:   11
  5599 ;; This function calls:
  5600 ;;		_vfprintf
  5601 ;; This function is called by:
  5602 ;;		_main
  5603 ;; This function uses a reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text11
  5607  01345A                     __ptext11:
  5608                           	opt callstack 0
  5609  01345A                     _sprintf:
  5610                           	opt callstack 0
  5611                           
  5612                           ; BSR set to: 0
  5613                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5614  01345A  0E08               	movlw	8
  5615  01345C  26E1               	addwf	fsr1l,f,c
  5616  01345E  0E00               	movlw	0
  5617  013460  22E2               	addwfc	fsr1h,f,c
  5618                           
  5619                           ;incstack = 0
  5620  013462  0EFE               	movlw	254
  5621  013464  6E47               	movwf	btemp+10,c
  5622  013466  0EFF               	movlw	255
  5623  013468  6E48               	movwf	btemp+11,c
  5624                           
  5625                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5626  01346A  0EF5               	movlw	245
  5627  01346C  24E1               	addwf	fsr1l,w,c
  5628  01346E  6E45               	movwf	btemp+8,c
  5629  013470  0EFF               	movlw	255
  5630  013472  20E2               	addwfc	fsr1h,w,c
  5631  013474  6E46               	movwf	btemp+9,c
  5632  013476  5047               	movf	btemp+10,w,c
  5633  013478  2645               	addwf	btemp+8,f,c
  5634  01347A  5048               	movf	btemp+11,w,c
  5635  01347C  2246               	addwfc	btemp+9,f,c
  5636                           
  5637                           ;stkvar	_ap @ sp[(-8)+6]
  5638  01347E  0EFF               	movlw	-1
  5639  013480  0060  F11B  FFE3   	movff	btemp+9,plusw1
  5640  013486  0EFE               	movlw	-2
  5641  013488  0060  F117  FFE3   	movff	btemp+8,plusw1
  5642                           
  5643                           ;stkvar	_s @ sp[(-8)+-3]
  5644  01348E  0EF5               	movlw	-11
  5645  013490  006F FF8C  F047    	movff	plusw1,btemp+10
  5646  013496  0EF6               	movlw	-10
  5647  013498  006F FF8C  F048    	movff	plusw1,btemp+11
  5648                           
  5649                           ;stkvar	_f @ sp[(-8)+0]
  5650  01349E  0EF9               	movlw	-7
  5651  0134A0  0060  F123  FFE3   	movff	btemp+11,plusw1
  5652  0134A6  0EF8               	movlw	-8
  5653  0134A8  0060  F11F  FFE3   	movff	btemp+10,plusw1
  5654                           
  5655                           ;stkvar	_f @ sp[(-8)+0]
  5656  0134AE  0EFA               	movlw	250
  5657  0134B0  24E1               	addwf	fsr1l,w,c
  5658  0134B2  6ED9               	movwf	fsr2l,c
  5659  0134B4  0EFF               	movlw	255
  5660  0134B6  20E2               	addwfc	fsr1h,w,c
  5661  0134B8  6EDA               	movwf	fsr2h,c
  5662  0134BA  0E00               	movlw	0
  5663  0134BC  6EDE               	movwf	postinc2,c
  5664  0134BE  0E00               	movlw	0
  5665  0134C0  6EDD               	movwf	postdec2,c
  5666                           
  5667                           ;stkvar	_f @ sp[(-8)+0]
  5668  0134C2  0EFC               	movlw	252
  5669  0134C4  24E1               	addwf	fsr1l,w,c
  5670  0134C6  6ED9               	movwf	fsr2l,c
  5671  0134C8  0EFF               	movlw	255
  5672  0134CA  20E2               	addwfc	fsr1h,w,c
  5673  0134CC  6EDA               	movwf	fsr2h,c
  5674  0134CE  0E00               	movlw	0
  5675  0134D0  6EDE               	movwf	postinc2,c
  5676  0134D2  0E00               	movlw	0
  5677  0134D4  6EDD               	movwf	postdec2,c
  5678                           
  5679                           ;stkvar	_ap @ sp[(-8)+6]
  5680  0134D6  0EFE               	movlw	254
  5681  0134D8  24E1               	addwf	fsr1l,w,c
  5682  0134DA  6E3D               	movwf	btemp,c
  5683  0134DC  0EFF               	movlw	255
  5684  0134DE  20E2               	addwfc	fsr1h,w,c
  5685  0134E0  6E3E               	movwf	btemp+1,c
  5686  0134E2  0060  F0F7  FFE6   	movff	btemp,postinc1
  5687  0134E8  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  5688                           
  5689                           ;stkvar	_fmt @ sp[(-10)+-5]
  5690  0134EE  0EF1               	movlw	-15
  5691  0134F0  006F FF8F FFE6     	movff	plusw1,postinc1
  5692  0134F6  006F FF8F FFE6     	movff	plusw1,postinc1
  5693                           
  5694                           ;stkvar	_f @ sp[(-12)+0]
  5695  0134FC  0EF4               	movlw	244
  5696  0134FE  24E1               	addwf	fsr1l,w,c
  5697  013500  6E3D               	movwf	btemp,c
  5698  013502  0EFF               	movlw	255
  5699  013504  20E2               	addwfc	fsr1h,w,c
  5700  013506  6E3E               	movwf	btemp+1,c
  5701  013508  0060  F0F7  FFE6   	movff	btemp,postinc1
  5702  01350E  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  5703  013514  EC6C  F09C         	call	_vfprintf	;wreg free
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;stkvar	_f @ sp[(-8)+0]
  5707  013518  0EFA               	movlw	250
  5708  01351A  24E1               	addwf	fsr1l,w,c
  5709  01351C  6ED9               	movwf	fsr2l,c
  5710  01351E  0EFF               	movlw	255
  5711  013520  20E2               	addwfc	fsr1h,w,c
  5712  013522  6EDA               	movwf	fsr2h,c
  5713  013524  006F FF78  F047    	movff	postinc2,btemp+10
  5714  01352A  006F FF74  F048    	movff	postdec2,btemp+11
  5715                           
  5716                           ;stkvar	_s @ sp[(-8)+-3]
  5717  013530  0EF5               	movlw	-11
  5718  013532  006F FF8C  F045    	movff	plusw1,btemp+8
  5719  013538  0EF6               	movlw	-10
  5720  01353A  006F FF8C  F046    	movff	plusw1,btemp+9
  5721  013540  5047               	movf	btemp+10,w,c
  5722  013542  2445               	addwf	btemp+8,w,c
  5723  013544  6ED9               	movwf	fsr2l,c
  5724  013546  5048               	movf	btemp+11,w,c
  5725  013548  2046               	addwfc	btemp+9,w,c
  5726  01354A  6EDA               	movwf	fsr2h,c
  5727  01354C  0E00               	movlw	0
  5728  01354E  6EDF               	movwf	indf2,c
  5729                           
  5730                           ; BSR set to: 0
  5731                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, args
      +                          ize = 4, vargsize = 0
  5732  013550  0EF8               	movlw	248
  5733  013552  26E1               	addwf	fsr1l,f,c
  5734  013554  0EFF               	movlw	255
  5735  013556  22E2               	addwfc	fsr1h,f,c
  5736  013558  52E5               	movf	postdec1,f,c
  5737  01355A  50E7               	movf	indf1,w,c
  5738  01355C  5EE1               	subwf	fsr1l,f,c
  5739  01355E  0E00               	movlw	0
  5740  013560  5AE2               	subwfb	fsr1h,f,c
  5741  013562  0012               	return		;funcret
  5742  013564                     __end_of_sprintf:
  5743                           	opt callstack 0
  5744                           
  5745 ;; *************** function _r_protocol *****************
  5746 ;; Defined at:
  5747 ;;		line 213 in file "gemsecs.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  r_link          2  [STACK] PTR enum E16658
  5750 ;;		 -> V(261), 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  rxData          1  [STACK] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1  [STACK] enum E16913
  5755 ;; Registers used:
  5756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/3C
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5766 ;;Total ram usage:        0 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    5
  5769 ;; This function calls:
  5770 ;;		_StartTimer
  5771 ;;		_TimerDone
  5772 ;;		_UART1_Read
  5773 ;;		_UART1_Write
  5774 ;;		_UART1_is_rx_ready
  5775 ;;		_WaitMs
  5776 ;;		_run_checksum
  5777 ;;		_secs_gem_state
  5778 ;; This function is called by:
  5779 ;;		_main
  5780 ;; This function uses a reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text12
  5784  011768                     __ptext12:
  5785                           	opt callstack 0
  5786  011768                     _r_protocol:
  5787                           	opt callstack 0
  5788                           
  5789                           ; BSR set to: 0
  5790                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5791  011768  52E6               	movf	postinc1,f,c
  5792                           
  5793                           ;gemsecs.c: 213: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 214: {;gemsecs.
      +                          c: 215:  uint8_t rxData;;gemsecs.c: 216:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck;;gemsecs.c: 218:  switch (*r_link) {
  5794                           
  5795                           ;incstack = 0
  5796  01176A  D1C8               	goto	l7120
  5797  01176C                     l6986:
  5798                           
  5799                           ;gemsecs.c: 220:   if (UART1_is_rx_ready()) {
  5800  01176C  EC65  F0A6         	call	_UART1_is_rx_ready	;wreg free
  5801  011770  503D               	movf	btemp,w,c
  5802  011772  B4D8               	btfsc	status,2,c
  5803  011774  D1E8               	goto	l7122
  5804                           
  5805                           ;gemsecs.c: 221:    rxData = UART1_Read();
  5806  011776  EC8C  F0A2         	call	_UART1_Read	;wreg free
  5807                           
  5808                           ;stkvar	_rxData @ sp[(-1)+0]
  5809  01177A  0EFF               	movlw	-1
  5810  01177C  0060  F0F7  FFE3   	movff	btemp,plusw1
  5811                           
  5812                           ; BSR set to: 57
  5813                           ;gemsecs.c: 222:    if (rxData == 0x05) {
  5814                           ;stkvar	_rxData @ sp[(-1)+0]
  5815  011782  0EFF               	movlw	-1
  5816  011784  006F FF8C  F03D    	movff	plusw1,btemp
  5817  01178A  0E05               	movlw	5
  5818  01178C  183D               	xorwf	btemp,w,c
  5819  01178E  A4D8               	btfss	status,2,c
  5820  011790  D1DA               	goto	l7122
  5821                           
  5822                           ; BSR set to: 57
  5823                           ;gemsecs.c: 223:     V.error = LINK_ERROR_NONE;
  5824  011792  0E0A               	movlw	10
  5825  011794  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  5826                           
  5827                           ; BSR set to: 57
  5828                           ;gemsecs.c: 224:     *r_link = LINK_STATE_ENQ;
  5829                           ;stkvar	_r_link @ sp[(-1)+-2]
  5830  01179A  0EFD               	movlw	-3
  5831  01179C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5832  0117A2  0EFE               	movlw	-2
  5833  0117A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  5834  0117AA  0E01               	movlw	1
  5835  0117AC  D189               	goto	L16
  5836  0117AE                     l1657:
  5837                           
  5838                           ;gemsecs.c: 229:   rxData_l = 0;
  5839  0117AE  6A2E               	clrf	r_protocol@rxData_l,c
  5840                           
  5841                           ;gemsecs.c: 230:   b_block = (uint8_t*) & H254[0];
  5842  0117B0  0EFB               	movlw	low _H254
  5843  0117B2  6E23               	movwf	r_protocol@b_block,c
  5844  0117B4  0E04               	movlw	high _H254
  5845  0117B6  6E24               	movwf	r_protocol@b_block+1,c
  5846                           
  5847                           ;gemsecs.c: 231:   UART1_Write(0x04);
  5848  0117B8  0E04               	movlw	4
  5849  0117BA  6EE6               	movwf	postinc1,c
  5850  0117BC  EC4E  F0A2         	call	_UART1_Write	;wreg free
  5851                           
  5852                           ; BSR set to: 57
  5853                           ;gemsecs.c: 232:   StartTimer(TMR_T2, 2000);
  5854  0117C0  0ED0               	movlw	208
  5855  0117C2  6EE6               	movwf	postinc1,c
  5856  0117C4  0E07               	movlw	7
  5857  0117C6  6EE6               	movwf	postinc1,c
  5858  0117C8  0E02               	movlw	2
  5859  0117CA  6EE6               	movwf	postinc1,c
  5860  0117CC  ECAB  F0A2         	call	_StartTimer	;wreg free
  5861                           
  5862                           ;gemsecs.c: 233:   *r_link = LINK_STATE_EOT;
  5863                           ;stkvar	_r_link @ sp[(-1)+-2]
  5864  0117D0  0EFD               	movlw	-3
  5865  0117D2  006F FF8F FFD9     	movff	plusw1,fsr2l
  5866  0117D8  0EFE               	movlw	-2
  5867  0117DA  006F FF8F FFDA     	movff	plusw1,fsr2h
  5868  0117E0  0E02               	movlw	2
  5869  0117E2  D16E               	goto	L16
  5870  0117E4                     l7004:
  5871                           
  5872                           ;gemsecs.c: 243:   if (TimerDone(TMR_T2)) {
  5873  0117E4  0E02               	movlw	2
  5874  0117E6  6EE6               	movwf	postinc1,c
  5875  0117E8  EC01  F0A5         	call	_TimerDone	;wreg free
  5876  0117EC  503D               	movf	btemp,w,c
  5877  0117EE  B4D8               	btfsc	status,2,c
  5878  0117F0  D027               	goto	l7018
  5879                           
  5880                           ;gemsecs.c: 244:    V.timer_error++;
  5881  0117F2  EE21  F0F0         	lfsr	2,_V+250	;volatile
  5882  0117F6  2ADE               	incf	postinc2,f,c
  5883  0117F8  0E00               	movlw	0
  5884  0117FA  22DD               	addwfc	postdec2,f,c
  5885                           
  5886                           ;gemsecs.c: 245:    if (!retry--) {
  5887  0117FC  065D               	decf	r_protocol@retry,f,c
  5888  0117FE  285D               	incf	r_protocol@retry,w,c
  5889  011800  A4D8               	btfss	status,2,c
  5890  011802  D014               	goto	l7016
  5891                           
  5892                           ;gemsecs.c: 246:     V.error = LINK_ERROR_T2;
  5893  011804  0E0C               	movlw	12
  5894  011806  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  5895                           
  5896                           ;gemsecs.c: 247:     V.failed_receive = 1;
  5897  01180C  EE21  F0F5         	lfsr	2,_V+255	;volatile
  5898  011810  50DF               	movf	223,w,c
  5899  011812  0BF0               	andlw	-16
  5900  011814  0901               	iorlw	1
  5901  011816  6EDF               	movwf	223,c
  5902                           
  5903                           ;gemsecs.c: 248:     *r_link = LINK_STATE_NAK;
  5904                           ;stkvar	_r_link @ sp[(-1)+-2]
  5905  011818  0EFD               	movlw	-3
  5906  01181A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5907  011820  0EFE               	movlw	-2
  5908  011822  006F FF8F FFDA     	movff	plusw1,fsr2h
  5909  011828  0E05               	movlw	5
  5910  01182A  D14A               	goto	L16
  5911  01182C                     l7016:
  5912                           
  5913                           ;gemsecs.c: 250:     *r_link = LINK_STATE_IDLE;
  5914                           ;stkvar	_r_link @ sp[(-1)+-2]
  5915  01182C  0EFD               	movlw	-3
  5916  01182E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5917  011834  0EFE               	movlw	-2
  5918  011836  006F FF8F FFDA     	movff	plusw1,fsr2h
  5919  01183C  0E00               	movlw	0
  5920  01183E  D140               	goto	L16
  5921  011840                     l7018:
  5922                           
  5923                           ;gemsecs.c: 253:    if (UART1_is_rx_ready()) {
  5924  011840  EC65  F0A6         	call	_UART1_is_rx_ready	;wreg free
  5925  011844  503D               	movf	btemp,w,c
  5926  011846  B4D8               	btfsc	status,2,c
  5927  011848  D17E               	goto	l7122
  5928                           
  5929                           ;gemsecs.c: 254:     rxData = UART1_Read();
  5930  01184A  EC8C  F0A2         	call	_UART1_Read	;wreg free
  5931                           
  5932                           ;stkvar	_rxData @ sp[(-1)+0]
  5933  01184E  0EFF               	movlw	-1
  5934  011850  0060  F0F7  FFE3   	movff	btemp,plusw1
  5935                           
  5936                           ; BSR set to: 57
  5937                           ;gemsecs.c: 255:     if (rxData_l == 0) {
  5938  011856  502E               	movf	r_protocol@rxData_l,w,c
  5939  011858  A4D8               	btfss	status,2,c
  5940  01185A  D01C               	goto	l7032
  5941                           
  5942                           ; BSR set to: 57
  5943                           ;gemsecs.c: 256:      r_block.length = rxData;
  5944                           ;stkvar	_rxData @ sp[(-1)+0]
  5945  01185C  0EFF               	movlw	-1
  5946  01185E  006F FF8C  F0C4    	movff	plusw1,_r_block+12
  5947                           
  5948                           ; BSR set to: 57
  5949                           ;gemsecs.c: 257:      run_checksum(0, 1);
  5950  011864  0E01               	movlw	1
  5951  011866  6EE6               	movwf	postinc1,c
  5952  011868  0E00               	movlw	0
  5953  01186A  6EE6               	movwf	postinc1,c
  5954  01186C  EC86  F0A3         	call	_run_checksum	;wreg free
  5955                           
  5956                           ;gemsecs.c: 258:      rxData_l++;
  5957  011870  2A2E               	incf	r_protocol@rxData_l,f,c
  5958                           
  5959                           ;gemsecs.c: 259:      b_block[sizeof(header254) - rxData_l] = rxData;
  5960                           ;stkvar	_rxData @ sp[(-1)+0]
  5961  011872  502E               	movf	r_protocol@rxData_l,w,c
  5962  011874  5C23               	subwf	r_protocol@b_block,w,c
  5963  011876  6E47               	movwf	btemp+10,c
  5964  011878  0E00               	movlw	0
  5965  01187A  5824               	subwfb	r_protocol@b_block+1,w,c
  5966  01187C  6E48               	movwf	btemp+11,c
  5967  01187E  0E01               	movlw	1
  5968  011880  2447               	addwf	btemp+10,w,c
  5969  011882  6ED9               	movwf	fsr2l,c
  5970  011884  0E01               	movlw	1
  5971  011886  2048               	addwfc	btemp+11,w,c
  5972  011888  6EDA               	movwf	fsr2h,c
  5973  01188A  0EFF               	movlw	-1
  5974  01188C  006F FF8F FFDF     	movff	plusw1,indf2
  5975                           
  5976                           ;gemsecs.c: 260:     } else {
  5977  011892  D159               	goto	l7122
  5978  011894                     l7032:
  5979                           
  5980                           ; BSR set to: 57
  5981                           ;gemsecs.c: 264:      if (rxData_l <= sizeof(block10))
  5982  011894  0E0B               	movlw	11
  5983  011896  602E               	cpfslt	r_protocol@rxData_l,c
  5984  011898  D00C               	goto	l7036
  5985                           
  5986                           ; BSR set to: 57
  5987                           ;gemsecs.c: 265:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5988                           ;stkvar	_rxData @ sp[(-1)+0]
  5989  01189A  502E               	movf	r_protocol@rxData_l,w,c
  5990  01189C  0819               	sublw	low (_H10+25)
  5991  01189E  6ED9               	movwf	fsr2l,c
  5992  0118A0  0E00               	movlw	0
  5993  0118A2  A0D8               	btfss	status,0,c
  5994  0118A4  2AE8               	incf	wreg,f,c
  5995  0118A6  0801               	sublw	high (_H10+25)
  5996  0118A8  6EDA               	movwf	fsr2h,c
  5997  0118AA  0EFF               	movlw	-1
  5998  0118AC  006F FF8F FFDF     	movff	plusw1,indf2
  5999  0118B2                     l7036:
  6000                           
  6001                           ; BSR set to: 57
  6002                           ;gemsecs.c: 267:      if (rxData_l == sizeof(block10) + 1)
  6003  0118B2  0E0B               	movlw	11
  6004  0118B4  182E               	xorwf	r_protocol@rxData_l,w,c
  6005  0118B6  A4D8               	btfss	status,2,c
  6006  0118B8  D007               	goto	l7040
  6007                           
  6008                           ; BSR set to: 57
  6009                           ;gemsecs.c: 268:       V.ack[2] = rxData;
  6010                           ;stkvar	_rxData @ sp[(-1)+0]
  6011  0118BA  0EFF               	movlw	-1
  6012  0118BC  006F FF8C  F048    	movff	plusw1,btemp+11
  6013  0118C2  0060  F120  F4F8   	movff	btemp+11,_V+258	;volatile
  6014  0118C8                     l7040:
  6015                           
  6016                           ; BSR set to: 57
  6017                           ;gemsecs.c: 269:      if (rxData_l == sizeof(block10) + 2)
  6018  0118C8  0E0C               	movlw	12
  6019  0118CA  182E               	xorwf	r_protocol@rxData_l,w,c
  6020  0118CC  A4D8               	btfss	status,2,c
  6021  0118CE  D007               	goto	l7044
  6022                           
  6023                           ; BSR set to: 57
  6024                           ;gemsecs.c: 270:       V.ack[1] = rxData;
  6025                           ;stkvar	_rxData @ sp[(-1)+0]
  6026  0118D0  0EFF               	movlw	-1
  6027  0118D2  006F FF8C  F048    	movff	plusw1,btemp+11
  6028  0118D8  0060  F120  F4F7   	movff	btemp+11,_V+257	;volatile
  6029  0118DE                     l7044:
  6030                           
  6031                           ; BSR set to: 57
  6032                           ;gemsecs.c: 271:      if (rxData_l == sizeof(block10) + 3)
  6033  0118DE  0E0D               	movlw	13
  6034  0118E0  182E               	xorwf	r_protocol@rxData_l,w,c
  6035  0118E2  A4D8               	btfss	status,2,c
  6036  0118E4  D007               	goto	l7048
  6037                           
  6038                           ; BSR set to: 57
  6039                           ;gemsecs.c: 272:       V.ack[0] = rxData;
  6040                           ;stkvar	_rxData @ sp[(-1)+0]
  6041  0118E6  0EFF               	movlw	-1
  6042  0118E8  006F FF8C  F048    	movff	plusw1,btemp+11
  6043  0118EE  0060  F120  F4F6   	movff	btemp+11,_V+256	;volatile
  6044  0118F4                     l7048:
  6045                           
  6046                           ; BSR set to: 57
  6047                           ;gemsecs.c: 274:      if (rxData_l <= r_block.length)
  6048  0118F4  502E               	movf	r_protocol@rxData_l,w,c
  6049  0118F6  0100               	movlb	0	; () banked
  6050  0118F8  5DC4               	subwf	(_r_block+12)& (0+255),w,b
  6051  0118FA  A0D8               	btfss	status,0,c
  6052  0118FC  D00D               	goto	l7052
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;gemsecs.c: 275:       V.r_checksum = run_checksum(rxData, 0);
  6056  0118FE  0E00               	movlw	0
  6057  011900  6EE6               	movwf	postinc1,c
  6058                           
  6059                           ;stkvar	_rxData @ sp[(-2)+0]
  6060  011902  0EFE               	movlw	-2
  6061  011904  50E3               	movf	plusw1,w,c
  6062  011906  6EE6               	movwf	postinc1,c
  6063  011908  EC86  F0A3         	call	_run_checksum	;wreg free
  6064  01190C  0060  F0F4  F4EA   	movff	btemp,_V+244	;volatile
  6065  011912  0060  F0F8  F4EB   	movff	btemp+1,_V+245	;volatile
  6066  011918                     l7052:
  6067                           
  6068                           ;gemsecs.c: 277:      if (rxData_l == r_block.length + 1)
  6069  011918  502E               	movf	r_protocol@rxData_l,w,c
  6070  01191A  6E47               	movwf	btemp+10,c
  6071  01191C  6A48               	clrf	btemp+11,c
  6072  01191E  0100               	movlb	0	; () banked
  6073  011920  51C4               	movf	(_r_block+12)& (0+255),w,b
  6074  011922  6E45               	movwf	btemp+8,c
  6075  011924  6A46               	clrf	btemp+9,c
  6076  011926  0E01               	movlw	1
  6077  011928  2645               	addwf	btemp+8,f,c
  6078  01192A  0E00               	movlw	0
  6079  01192C  2246               	addwfc	btemp+9,f,c
  6080  01192E  5047               	movf	btemp+10,w,c
  6081  011930  1845               	xorwf	btemp+8,w,c
  6082  011932  E109               	bnz	l7056
  6083  011934  5048               	movf	btemp+11,w,c
  6084  011936  1846               	xorwf	btemp+9,w,c
  6085  011938  A4D8               	btfss	status,2,c
  6086  01193A  D005               	goto	l7056
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;gemsecs.c: 278:       H10[1].checksum = (uint16_t) rxData << 8;
  6090                           ;stkvar	_rxData @ sp[(-1)+0]
  6091  01193C  0EFF               	movlw	-1
  6092  01193E  50E3               	movf	plusw1,w,c
  6093  011940  0101               	movlb	1	; () banked
  6094  011942  6F0E               	movwf	(_H10+14)& (0+255),b
  6095  011944  6B0D               	clrf	(_H10+13)& (0+255),b
  6096  011946                     l7056:
  6097                           
  6098                           ;gemsecs.c: 279:      if (rxData_l == r_block.length + 2)
  6099  011946  502E               	movf	r_protocol@rxData_l,w,c
  6100  011948  6E47               	movwf	btemp+10,c
  6101  01194A  6A48               	clrf	btemp+11,c
  6102  01194C  0100               	movlb	0	; () banked
  6103  01194E  51C4               	movf	(_r_block+12)& (0+255),w,b
  6104  011950  6E45               	movwf	btemp+8,c
  6105  011952  6A46               	clrf	btemp+9,c
  6106  011954  0E02               	movlw	2
  6107  011956  2645               	addwf	btemp+8,f,c
  6108  011958  0E00               	movlw	0
  6109  01195A  2246               	addwfc	btemp+9,f,c
  6110  01195C  5047               	movf	btemp+10,w,c
  6111  01195E  1845               	xorwf	btemp+8,w,c
  6112  011960  E10A               	bnz	l7060
  6113  011962  5048               	movf	btemp+11,w,c
  6114  011964  1846               	xorwf	btemp+9,w,c
  6115  011966  A4D8               	btfss	status,2,c
  6116  011968  D006               	goto	l7060
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;gemsecs.c: 280:       H10[1].checksum += rxData;
  6120                           ;stkvar	_rxData @ sp[(-1)+0]
  6121  01196A  0EFF               	movlw	-1
  6122  01196C  50E3               	movf	plusw1,w,c
  6123  01196E  0101               	movlb	1	; () banked
  6124  011970  270D               	addwf	(_H10+13)& (0+255),f,b
  6125  011972  0E00               	movlw	0
  6126  011974  230E               	addwfc	(_H10+14)& (0+255),f,b
  6127  011976                     l7060:
  6128                           
  6129                           ;gemsecs.c: 282:      rxData_l++;
  6130  011976  2A2E               	incf	r_protocol@rxData_l,f,c
  6131                           
  6132                           ;gemsecs.c: 283:      b_block[sizeof(header254) - rxData_l] = rxData;
  6133                           ;stkvar	_rxData @ sp[(-1)+0]
  6134  011978  502E               	movf	r_protocol@rxData_l,w,c
  6135  01197A  5C23               	subwf	r_protocol@b_block,w,c
  6136  01197C  6E47               	movwf	btemp+10,c
  6137  01197E  0E00               	movlw	0
  6138  011980  5824               	subwfb	r_protocol@b_block+1,w,c
  6139  011982  6E48               	movwf	btemp+11,c
  6140  011984  0E01               	movlw	1
  6141  011986  2447               	addwf	btemp+10,w,c
  6142  011988  6ED9               	movwf	fsr2l,c
  6143  01198A  0E01               	movlw	1
  6144  01198C  2048               	addwfc	btemp+11,w,c
  6145  01198E  6EDA               	movwf	fsr2h,c
  6146  011990  0EFF               	movlw	-1
  6147  011992  006F FF8F FFDF     	movff	plusw1,indf2
  6148                           
  6149                           ;gemsecs.c: 284:      if (rxData_l > (r_block.length + 2)) {
  6150  011998  502E               	movf	r_protocol@rxData_l,w,c
  6151  01199A  6E47               	movwf	btemp+10,c
  6152  01199C  6A48               	clrf	btemp+11,c
  6153  01199E  0100               	movlb	0	; () banked
  6154  0119A0  51C4               	movf	(_r_block+12)& (0+255),w,b
  6155  0119A2  6E45               	movwf	btemp+8,c
  6156  0119A4  6A46               	clrf	btemp+9,c
  6157  0119A6  0E02               	movlw	2
  6158  0119A8  2645               	addwf	btemp+8,f,c
  6159  0119AA  0E00               	movlw	0
  6160  0119AC  2246               	addwfc	btemp+9,f,c
  6161  0119AE  5047               	movf	btemp+10,w,c
  6162  0119B0  5C45               	subwf	btemp+8,w,c
  6163  0119B2  5046               	movf	btemp+9,w,c
  6164  0119B4  0A80               	xorlw	128
  6165  0119B6  6E3D               	movwf	btemp,c
  6166  0119B8  5048               	movf	btemp+11,w,c
  6167  0119BA  0A80               	xorlw	128
  6168  0119BC  583D               	subwfb	btemp,w,c
  6169  0119BE  B0D8               	btfsc	status,0,c
  6170  0119C0  D0C2               	goto	l7122
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;gemsecs.c: 285:       if (V.r_checksum == H10[1].checksum) {
  6174  0119C2  EE21  F0EA         	lfsr	2,_V+244	;volatile
  6175  0119C6  0101               	movlb	1	; () banked
  6176  0119C8  510D               	movf	(_H10+13)& (0+255),w,b
  6177  0119CA  18DE               	xorwf	postinc2,w,c
  6178  0119CC  E110               	bnz	l7072
  6179  0119CE  510E               	movf	(_H10+14)& (0+255),w,b
  6180  0119D0  18DE               	xorwf	postinc2,w,c
  6181  0119D2  A4D8               	btfss	status,2,c
  6182  0119D4  D00C               	goto	l7072
  6183                           
  6184                           ; BSR set to: 1
  6185                           ;gemsecs.c: 286:        *r_link = LINK_STATE_ACK;
  6186                           ;stkvar	_r_link @ sp[(-1)+-2]
  6187  0119D6  0EFD               	movlw	-3
  6188  0119D8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6189  0119DE  0EFE               	movlw	-2
  6190  0119E0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6191  0119E6  0E03               	movlw	3
  6192  0119E8  D06B               	goto	L16
  6193  0119EA                     l7070:
  6194  0119EA  EC8C  F0A2         	call	_UART1_Read	;wreg free
  6195  0119EE                     l7072:
  6196                           
  6197                           ;gemsecs.c: 288:        while (UART1_is_rx_ready())
  6198  0119EE  EC65  F0A6         	call	_UART1_is_rx_ready	;wreg free
  6199  0119F2  503D               	movf	btemp,w,c
  6200  0119F4  A4D8               	btfss	status,2,c
  6201  0119F6  D7F9               	goto	l7070
  6202                           
  6203                           ;gemsecs.c: 290:        WaitMs(500);
  6204  0119F8  0EF4               	movlw	244
  6205  0119FA  6EE6               	movwf	postinc1,c
  6206  0119FC  0E01               	movlw	1
  6207  0119FE  6EE6               	movwf	postinc1,c
  6208  011A00  ECC9  F0A2         	call	_WaitMs	;wreg free
  6209                           
  6210                           ;gemsecs.c: 291:        V.error = LINK_ERROR_CHECKSUM;
  6211  011A04  0E0F               	movlw	15
  6212  011A06  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  6213                           
  6214                           ;gemsecs.c: 292:        V.checksum_error++;
  6215  011A0C  EE21  F0EE         	lfsr	2,_V+248	;volatile
  6216  011A10  2ADE               	incf	postinc2,f,c
  6217  011A12  0E00               	movlw	0
  6218  011A14  22DD               	addwfc	postdec2,f,c
  6219                           
  6220                           ;gemsecs.c: 293:        V.failed_receive = 2;
  6221  011A16  EE21  F0F5         	lfsr	2,_V+255	;volatile
  6222  011A1A  50DF               	movf	223,w,c
  6223  011A1C  0BF0               	andlw	-16
  6224  011A1E  0902               	iorlw	2
  6225  011A20  D6FA               	goto	L17
  6226  011A22                     l7084:
  6227                           
  6228                           ;gemsecs.c: 302:   V.stream = H10[1].block.block.stream;
  6229  011A22  0101               	movlb	1	; () banked
  6230  011A24  5116               	movf	(_H10+22)& (0+255),w,b
  6231  011A26  0B7F               	andlw	127
  6232  011A28  6E48               	movwf	btemp+11,c
  6233  011A2A  0060  F120  F4E4   	movff	btemp+11,_V+238	;volatile
  6234                           
  6235                           ; BSR set to: 1
  6236                           ;gemsecs.c: 303:   V.function = H10[1].block.block.function;
  6237  011A30  EE21  F0E5         	lfsr	2,_V+239	;volatile
  6238  011A34  0060  F457  FFDF   	movff	_H10+21,indf2
  6239                           
  6240                           ; BSR set to: 1
  6241                           ;gemsecs.c: 304:   V.systemb = H10[1].block.block.systemb;
  6242  011A3A  EE20  F10F         	lfsr	2,_H10+15
  6243  011A3E  006F FF78  F4E0    	movff	postinc2,_V+234	;volatile
  6244  011A44  006F FF78  F4E1    	movff	postinc2,_V+235	;volatile
  6245  011A4A  006F FF78  F4E2    	movff	postinc2,_V+236	;volatile
  6246  011A50  006F FF74  F4E3    	movff	postdec2,_V+237	;volatile
  6247                           
  6248                           ; BSR set to: 1
  6249                           ;gemsecs.c: 305:   V.rbit = H10[1].block.block.rbit;
  6250  011A56  EE21  F0F4         	lfsr	2,_V+254	;volatile
  6251  011A5A  BF18               	btfsc	(_H10+24)& (0+255),7,b
  6252  011A5C  D002               	bra	u3935
  6253  011A5E  90DF               	bcf	indf2,0,c
  6254  011A60  D001               	bra	u3936
  6255  011A62                     u3935:
  6256  011A62  80DF               	bsf	indf2,0,c
  6257  011A64                     u3936:
  6258                           
  6259                           ;gemsecs.c: 306:   V.wbit = H10[1].block.block.wbit;
  6260  011A64  EE21  F0F4         	lfsr	2,_V+254	;volatile
  6261  011A68  0101               	movlb	1	; () banked
  6262  011A6A  BF16               	btfsc	(_H10+22)& (0+255),7,b
  6263  011A6C  D002               	bra	u3945
  6264  011A6E  92DF               	bcf	indf2,1,c
  6265  011A70  D001               	bra	u3946
  6266  011A72                     u3945:
  6267  011A72  82DF               	bsf	indf2,1,c
  6268  011A74                     u3946:
  6269                           
  6270                           ;gemsecs.c: 307:   V.ebit = H10[1].block.block.ebit;
  6271  011A74  EE21  F0F4         	lfsr	2,_V+254	;volatile
  6272  011A78  0101               	movlb	1	; () banked
  6273  011A7A  BF14               	btfsc	(_H10+20)& (0+255),7,b
  6274  011A7C  D002               	bra	u3955
  6275  011A7E  94DF               	bcf	indf2,2,c
  6276  011A80  D001               	bra	u3956
  6277  011A82                     u3955:
  6278  011A82  84DF               	bsf	indf2,2,c
  6279  011A84                     u3956:
  6280                           
  6281                           ;gemsecs.c: 308:   V.g_state = secs_gem_state(V.stream, V.function);
  6282  011A84  EE21  F0E5         	lfsr	2,_V+239	;volatile
  6283  011A88  50DF               	movf	indf2,w,c
  6284  011A8A  6EE6               	movwf	postinc1,c
  6285  011A8C  EE21  F0E4         	lfsr	2,_V+238	;volatile
  6286  011A90  50DF               	movf	indf2,w,c
  6287  011A92  6EE6               	movwf	postinc1,c
  6288  011A94  EC0B  F09C         	call	_secs_gem_state	;wreg free
  6289  011A98  0060  F0F4  F3F8   	movff	btemp,_V+2	;volatile
  6290                           
  6291                           ;gemsecs.c: 309:   UART1_Write(0x06);
  6292  011A9E  0E06               	movlw	6
  6293  011AA0  6EE6               	movwf	postinc1,c
  6294  011AA2  EC4E  F0A2         	call	_UART1_Write	;wreg free
  6295                           
  6296                           ; BSR set to: 57
  6297                           ;gemsecs.c: 310:   V.failed_receive = 0;
  6298  011AA6  EE21  F0F5         	lfsr	2,_V+255	;volatile
  6299  011AAA  0EF0               	movlw	-16
  6300  011AAC  16DF               	andwf	223,f,c
  6301                           
  6302                           ; BSR set to: 57
  6303                           ;gemsecs.c: 311:   *r_link = LINK_STATE_DONE;
  6304                           ;stkvar	_r_link @ sp[(-1)+-2]
  6305  011AAE  0EFD               	movlw	-3
  6306  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  6307  011AB6  0EFE               	movlw	-2
  6308  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  6309  011ABE  0E04               	movlw	4
  6310  011AC0                     L16:
  6311  011AC0  6EDF               	movwf	indf2,c
  6312                           
  6313                           ;gemsecs.c: 312:   break;
  6314  011AC2  D041               	goto	l7122
  6315  011AC4                     l7104:
  6316                           
  6317                           ;gemsecs.c: 314:   UART1_Write(0x15);
  6318  011AC4  0E15               	movlw	21
  6319  011AC6  6EE6               	movwf	postinc1,c
  6320  011AC8  EC4E  F0A2         	call	_UART1_Write	;wreg free
  6321                           
  6322                           ; BSR set to: 57
  6323                           ;gemsecs.c: 315:   *r_link = LINK_STATE_ERROR;
  6324                           ;stkvar	_r_link @ sp[(-1)+-2]
  6325  011ACC  0EFD               	movlw	-3
  6326  011ACE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6327  011AD4  0EFE               	movlw	-2
  6328  011AD6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6329  011ADC  0E06               	movlw	6
  6330  011ADE  6EDF               	movwf	indf2,c
  6331                           
  6332                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  6333  011AE0  D002               	goto	l7110
  6334  011AE2                     l7108:
  6335                           
  6336                           ; BSR set to: 57
  6337                           ;gemsecs.c: 317:    UART1_Read();
  6338  011AE2  EC8C  F0A2         	call	_UART1_Read	;wreg free
  6339  011AE6                     l7110:
  6340                           
  6341                           ; BSR set to: 57
  6342                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  6343  011AE6  5037               	movf	_uart1RxCount,w,c	;volatile
  6344  011AE8  A4D8               	btfss	status,2,c
  6345  011AEA  D7FB               	goto	l7108
  6346                           
  6347                           ; BSR set to: 57
  6348                           ;gemsecs.c: 319:   retry = 3;
  6349  011AEC  0E03               	movlw	3
  6350  011AEE  6E5D               	movwf	r_protocol@retry,c
  6351                           
  6352                           ;gemsecs.c: 320:   break;
  6353  011AF0  D02A               	goto	l7122
  6354  011AF2                     l7114:
  6355                           
  6356                           ;gemsecs.c: 324:   V.failed_receive = 0;
  6357  011AF2  EE21  F0F5         	lfsr	2,_V+255	;volatile
  6358  011AF6  0EF0               	movlw	-16
  6359  011AF8  16DF               	andwf	223,f,c
  6360  011AFA  D698               	goto	l7016
  6361  011AFC                     l7120:
  6362                           
  6363                           ;stkvar	_r_link @ sp[(-1)+-2]
  6364  011AFC  0EFD               	movlw	-3
  6365  011AFE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6366  011B04  0EFE               	movlw	-2
  6367  011B06  006F FF8F FFDA     	movff	plusw1,fsr2h
  6368  011B0C  50DF               	movf	indf2,w,c
  6369  011B0E  6E47               	movwf	btemp+10,c
  6370  011B10  6A48               	clrf	btemp+11,c
  6371                           
  6372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6373                           ; Switch size 1, requested type "simple"
  6374                           ; Number of cases is 1, Range of values is 0 to 0
  6375                           ; switch strategies available:
  6376                           ; Name         Instructions Cycles
  6377                           ; simple_byte            4     3 (average)
  6378                           ;	Chosen strategy is simple_byte
  6379  011B12  5048               	movf	btemp+11,w,c
  6380  011B14  0A00               	xorlw	0	; case 0
  6381  011B16  A4D8               	btfss	status,2,c
  6382  011B18  D689               	goto	l7016
  6383                           
  6384                           ; Switch size 1, requested type "simple"
  6385                           ; Number of cases is 7, Range of values is 0 to 6
  6386                           ; switch strategies available:
  6387                           ; Name         Instructions Cycles
  6388                           ; simple_byte           22    12 (average)
  6389                           ;	Chosen strategy is simple_byte
  6390  011B1A  5047               	movf	btemp+10,w,c
  6391  011B1C  0A00               	xorlw	0	; case 0
  6392  011B1E  B4D8               	btfsc	status,2,c
  6393  011B20  D625               	goto	l6986
  6394  011B22  0A01               	xorlw	1	; case 1
  6395  011B24  B4D8               	btfsc	status,2,c
  6396  011B26  D643               	goto	l1657
  6397  011B28  0A03               	xorlw	3	; case 2
  6398  011B2A  B4D8               	btfsc	status,2,c
  6399  011B2C  D65B               	goto	l7004
  6400  011B2E  0A01               	xorlw	1	; case 3
  6401  011B30  B4D8               	btfsc	status,2,c
  6402  011B32  D777               	goto	l7084
  6403  011B34  0A07               	xorlw	7	; case 4
  6404  011B36  B4D8               	btfsc	status,2,c
  6405  011B38  D7DC               	goto	l7114
  6406  011B3A  0A01               	xorlw	1	; case 5
  6407  011B3C  B4D8               	btfsc	status,2,c
  6408  011B3E  D7C2               	goto	l7104
  6409  011B40  0A03               	xorlw	3	; case 6
  6410  011B42  A4D8               	btfss	status,2,c
  6411  011B44  D673               	goto	l7016
  6412  011B46                     l7122:
  6413                           
  6414                           ;gemsecs.c: 331:  return *r_link;
  6415                           ;stkvar	_r_link @ sp[(-1)+-2]
  6416  011B46  0EFD               	movlw	-3
  6417  011B48  006F FF8F FFD9     	movff	plusw1,fsr2l
  6418  011B4E  0EFE               	movlw	-2
  6419  011B50  006F FF8F FFDA     	movff	plusw1,fsr2h
  6420  011B56  50DF               	movf	indf2,w,c
  6421  011B58  6E3D               	movwf	btemp,c
  6422                           
  6423                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  6424  011B5A  52E5               	movf	postdec1,f,c
  6425  011B5C  52E5               	movf	postdec1,f,c
  6426  011B5E  52E5               	movf	postdec1,f,c
  6427  011B60  0012               	return		;funcret
  6428  011B62                     __end_of_r_protocol:
  6429                           	opt callstack 0
  6430                           
  6431 ;; *************** function _UART1_Write *****************
  6432 ;; Defined at:
  6433 ;;		line 179 in file "mcc_generated_files/uart1.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  txData          1  [STACK] unsigned char 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;		None
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1  [STACK] void 
  6440 ;; Registers used:
  6441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/3C
  6444 ;;		On exit  : 3F/39
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6451 ;;Total ram usage:        0 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:    3
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_r_protocol
  6458 ;;		_t_protocol
  6459 ;;		_secs_send
  6460 ;; This function uses a reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text13
  6464  01449C                     __ptext13:
  6465                           	opt callstack 0
  6466  01449C                     _UART1_Write:
  6467                           	opt callstack 25
  6468                           
  6469                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6470                           
  6471                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6472                           
  6473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6474                           ;incstack = 0
  6475  01449C  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  6476  01449E  B4D8               	btfsc	status,2,c
  6477  0144A0  D7FD               	goto	_UART1_Write
  6478                           
  6479                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  6480  0144A2  0139               	movlb	57	; () banked
  6481  0144A4  B993               	btfsc	147,4,b	;volatile
  6482  0144A6  D005               	goto	l579
  6483                           
  6484                           ; BSR set to: 57
  6485                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  6486                           ;stkvar	_txData @ sp[(0)+-1]
  6487  0144A8  0EFF               	movlw	-1
  6488  0144AA  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  6489                           
  6490                           ;mcc_generated_files/uart1.c: 186:  } else {
  6491  0144B0  D011               	goto	l5912
  6492  0144B2                     l579:
  6493                           
  6494                           ; BSR set to: 57
  6495                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  6496  0144B2  9993               	bcf	147,4,b	;volatile
  6497                           
  6498                           ; BSR set to: 57
  6499                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  6500                           ;stkvar	_txData @ sp[(0)+-1]
  6501  0144B4  0EC0               	movlw	low _uart1TxBuffer
  6502  0144B6  243C               	addwf	_uart1TxHead,w,c	;volatile
  6503  0144B8  6ED9               	movwf	fsr2l,c
  6504  0144BA  6ADA               	clrf	fsr2h,c
  6505  0144BC  0E02               	movlw	high _uart1TxBuffer
  6506  0144BE  22DA               	addwfc	fsr2h,f,c
  6507  0144C0  0EFF               	movlw	-1
  6508  0144C2  006F FF8F FFDF     	movff	plusw1,indf2
  6509                           
  6510                           ; BSR set to: 57
  6511  0144C8  2A3C               	incf	_uart1TxHead,f,c	;volatile
  6512                           
  6513                           ; BSR set to: 57
  6514                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  6515  0144CA  0E3F               	movlw	63
  6516  0144CC  643C               	cpfsgt	_uart1TxHead,c
  6517  0144CE  D001               	goto	l5910
  6518                           
  6519                           ; BSR set to: 57
  6520                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  6521  0144D0  6A3C               	clrf	_uart1TxHead,c	;volatile
  6522  0144D2                     l5910:
  6523                           
  6524                           ; BSR set to: 57
  6525                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  6526  0144D2  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  6527  0144D4                     l5912:
  6528                           
  6529                           ; BSR set to: 57
  6530                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  6531  0144D4  8993               	bsf	147,4,b	;volatile
  6532                           
  6533                           ; BSR set to: 57
  6534                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6535  0144D6  52E5               	movf	postdec1,f,c
  6536  0144D8  0012               	return		;funcret
  6537  0144DA                     __end_of_UART1_Write:
  6538                           	opt callstack 0
  6539                           
  6540 ;; *************** function _m_protocol *****************
  6541 ;; Defined at:
  6542 ;;		line 47 in file "gemsecs.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  m_link          2  [STACK] PTR enum E16658
  6545 ;;		 -> V(261), 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  rxData          1  [STACK] unsigned char 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1  [STACK] enum E16913
  6550 ;; Registers used:
  6551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/3C
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6561 ;;Total ram usage:        0 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:    5
  6564 ;; This function calls:
  6565 ;;		_StartTimer
  6566 ;;		_TimerDone
  6567 ;;		_UART1_Read
  6568 ;;		_UART1_is_rx_ready
  6569 ;;		_UART2_Read
  6570 ;;		_UART2_is_rx_ready
  6571 ;;		_WaitMs
  6572 ;;		_run_checksum
  6573 ;;		_secs_gem_state
  6574 ;; This function is called by:
  6575 ;;		_main
  6576 ;; This function uses a reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text14
  6580  010896                     __ptext14:
  6581                           	opt callstack 0
  6582  010896                     _m_protocol:
  6583                           	opt callstack 0
  6584                           
  6585                           ; BSR set to: 57
  6586                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6587  010896  52E6               	movf	postinc1,f,c
  6588                           
  6589                           ;gemsecs.c: 47: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 48: {;gemsecs.c: 
      +                          49:  uint8_t rxData;;gemsecs.c: 50:  static uint8_t rxData_l = 0;;gemsecs.c: 52:  switch
      +                           (*m_link) {
  6590                           
  6591                           ;incstack = 0
  6592  010898  D26E               	goto	l7436
  6593  01089A                     l7260:
  6594                           
  6595                           ;gemsecs.c: 57:   if (UART1_is_rx_ready()) {
  6596  01089A  EC65  F0A6         	call	_UART1_is_rx_ready	;wreg free
  6597  01089E  503D               	movf	btemp,w,c
  6598  0108A0  B4D8               	btfsc	status,2,c
  6599  0108A2  D028               	goto	l7274
  6600                           
  6601                           ;gemsecs.c: 58:    rxData = UART1_Read();
  6602  0108A4  EC8C  F0A2         	call	_UART1_Read	;wreg free
  6603                           
  6604                           ;stkvar	_rxData @ sp[(-1)+0]
  6605  0108A8  0EFF               	movlw	-1
  6606  0108AA  0060  F0F7  FFE3   	movff	btemp,plusw1
  6607                           
  6608                           ; BSR set to: 57
  6609                           ;gemsecs.c: 59:    if (rxData == 0x05) {
  6610                           ;stkvar	_rxData @ sp[(-1)+0]
  6611  0108B0  0EFF               	movlw	-1
  6612  0108B2  006F FF8C  F03D    	movff	plusw1,btemp
  6613  0108B8  0E05               	movlw	5
  6614  0108BA  183D               	xorwf	btemp,w,c
  6615  0108BC  A4D8               	btfss	status,2,c
  6616  0108BE  D01A               	goto	l7274
  6617                           
  6618                           ; BSR set to: 57
  6619                           ;gemsecs.c: 60:     V.uart = 1;
  6620  0108C0  0E01               	movlw	1
  6621  0108C2  006F FFA0  F4F9    	movff	wreg,_V+259	;volatile
  6622                           
  6623                           ; BSR set to: 57
  6624                           ;gemsecs.c: 61:     StartTimer(TMR_T2, 2000);
  6625  0108C8  0ED0               	movlw	208
  6626  0108CA  6EE6               	movwf	postinc1,c
  6627  0108CC  0E07               	movlw	7
  6628  0108CE  6EE6               	movwf	postinc1,c
  6629  0108D0  0E02               	movlw	2
  6630  0108D2  6EE6               	movwf	postinc1,c
  6631  0108D4  ECAB  F0A2         	call	_StartTimer	;wreg free
  6632                           
  6633                           ;gemsecs.c: 62:     V.error = LINK_ERROR_NONE;
  6634  0108D8  0E0A               	movlw	10
  6635  0108DA  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  6636                           
  6637                           ;gemsecs.c: 63:     *m_link = LINK_STATE_ENQ;
  6638                           ;stkvar	_m_link @ sp[(-1)+-2]
  6639  0108E0  0EFD               	movlw	-3
  6640  0108E2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6641  0108E8  0EFE               	movlw	-2
  6642  0108EA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6643  0108F0  0E01               	movlw	1
  6644  0108F2  6EDF               	movwf	indf2,c
  6645  0108F4                     l7274:
  6646                           
  6647                           ;gemsecs.c: 66:   if (UART2_is_rx_ready()) {
  6648  0108F4  EC61  F0A6         	call	_UART2_is_rx_ready	;wreg free
  6649  0108F8  503D               	movf	btemp,w,c
  6650  0108FA  B4D8               	btfsc	status,2,c
  6651  0108FC  D261               	goto	l7438
  6652                           
  6653                           ;gemsecs.c: 67:    rxData = UART2_Read();
  6654  0108FE  EC6D  F0A2         	call	_UART2_Read	;wreg free
  6655                           
  6656                           ;stkvar	_rxData @ sp[(-1)+0]
  6657  010902  0EFF               	movlw	-1
  6658  010904  0060  F0F7  FFE3   	movff	btemp,plusw1
  6659                           
  6660                           ; BSR set to: 57
  6661                           ;gemsecs.c: 68:    if (rxData == 0x05) {
  6662                           ;stkvar	_rxData @ sp[(-1)+0]
  6663  01090A  0EFF               	movlw	-1
  6664  01090C  006F FF8C  F03D    	movff	plusw1,btemp
  6665  010912  0E05               	movlw	5
  6666  010914  183D               	xorwf	btemp,w,c
  6667  010916  A4D8               	btfss	status,2,c
  6668  010918  D253               	goto	l7438
  6669                           
  6670                           ; BSR set to: 57
  6671                           ;gemsecs.c: 69:     V.uart = 2;
  6672  01091A  0E02               	movlw	2
  6673  01091C  006F FFA0  F4F9    	movff	wreg,_V+259	;volatile
  6674                           
  6675                           ; BSR set to: 57
  6676                           ;gemsecs.c: 70:     StartTimer(TMR_T2, 2000);
  6677  010922  0ED0               	movlw	208
  6678  010924  6EE6               	movwf	postinc1,c
  6679  010926  0E07               	movlw	7
  6680  010928  6EE6               	movwf	postinc1,c
  6681  01092A  0E02               	movlw	2
  6682  01092C  6EE6               	movwf	postinc1,c
  6683  01092E  ECAB  F0A2         	call	_StartTimer	;wreg free
  6684                           
  6685                           ;gemsecs.c: 71:     V.error = LINK_ERROR_NONE;
  6686  010932  0E0A               	movlw	10
  6687  010934  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  6688                           
  6689                           ;gemsecs.c: 72:     *m_link = LINK_STATE_ENQ;
  6690                           ;stkvar	_m_link @ sp[(-1)+-2]
  6691  01093A  0EFD               	movlw	-3
  6692  01093C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6693  010942  0EFE               	movlw	-2
  6694  010944  006F FF8F FFDA     	movff	plusw1,fsr2h
  6695  01094A  0E01               	movlw	1
  6696  01094C  D212               	goto	L23
  6697  01094E                     l1602:
  6698                           
  6699                           ;gemsecs.c: 77:   rxData_l = 0;
  6700  01094E  6A2F               	clrf	m_protocol@rxData_l,c
  6701                           
  6702                           ;gemsecs.c: 91:   V.error = LINK_ERROR_NONE;
  6703  010950  0E0A               	movlw	10
  6704  010952  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  6705                           
  6706                           ;gemsecs.c: 92:   *m_link = LINK_STATE_EOT;
  6707                           ;stkvar	_m_link @ sp[(-1)+-2]
  6708  010958  0EFD               	movlw	-3
  6709  01095A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6710  010960  0EFE               	movlw	-2
  6711  010962  006F FF8F FFDA     	movff	plusw1,fsr2h
  6712  010968  0E02               	movlw	2
  6713  01096A  6EDF               	movwf	indf2,c
  6714                           
  6715                           ;gemsecs.c: 93:   StartTimer(TMR_T2, 2000);
  6716  01096C  0ED0               	movlw	208
  6717  01096E  6EE6               	movwf	postinc1,c
  6718  010970  0E07               	movlw	7
  6719  010972  6EE6               	movwf	postinc1,c
  6720  010974  0E02               	movlw	2
  6721  010976  6EE6               	movwf	postinc1,c
  6722  010978  ECAB  F0A2         	call	_StartTimer	;wreg free
  6723                           
  6724                           ;gemsecs.c: 94:   break;
  6725  01097C  D221               	goto	l7438
  6726  01097E                     l7292:
  6727                           
  6728                           ;gemsecs.c: 96:   if (TimerDone(TMR_T2)) {
  6729  01097E  0E02               	movlw	2
  6730  010980  6EE6               	movwf	postinc1,c
  6731  010982  EC01  F0A5         	call	_TimerDone	;wreg free
  6732  010986  503D               	movf	btemp,w,c
  6733  010988  B4D8               	btfsc	status,2,c
  6734  01098A  D019               	goto	l7302
  6735                           
  6736                           ;gemsecs.c: 97:    V.error = LINK_ERROR_T2;
  6737  01098C  0E0C               	movlw	12
  6738  01098E  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  6739                           
  6740                           ;gemsecs.c: 98:    V.timer_error++;
  6741  010994  EE21  F0F0         	lfsr	2,_V+250	;volatile
  6742  010998  2ADE               	incf	postinc2,f,c
  6743  01099A  0E00               	movlw	0
  6744  01099C  22DD               	addwfc	postdec2,f,c
  6745                           
  6746                           ;gemsecs.c: 99:    V.failed_receive = 2;
  6747  01099E  EE21  F0F5         	lfsr	2,_V+255	;volatile
  6748  0109A2  50DF               	movf	223,w,c
  6749  0109A4  0BF0               	andlw	-16
  6750  0109A6  0902               	iorlw	2
  6751  0109A8  6EDF               	movwf	223,c
  6752                           
  6753                           ;gemsecs.c: 100:    *m_link = LINK_STATE_NAK;
  6754                           ;stkvar	_m_link @ sp[(-1)+-2]
  6755  0109AA  0EFD               	movlw	-3
  6756  0109AC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6757  0109B2  0EFE               	movlw	-2
  6758  0109B4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6759  0109BA  0E05               	movlw	5
  6760  0109BC  D1DA               	goto	L23
  6761  0109BE                     l7302:
  6762                           
  6763                           ;gemsecs.c: 102:    if (UART1_is_rx_ready()) {
  6764  0109BE  EC65  F0A6         	call	_UART1_is_rx_ready	;wreg free
  6765  0109C2  503D               	movf	btemp,w,c
  6766  0109C4  B4D8               	btfsc	status,2,c
  6767  0109C6  D0B5               	goto	l7352
  6768                           
  6769                           ;gemsecs.c: 103:     rxData = UART1_Read();
  6770  0109C8  EC8C  F0A2         	call	_UART1_Read	;wreg free
  6771                           
  6772                           ;stkvar	_rxData @ sp[(-1)+0]
  6773  0109CC  0EFF               	movlw	-1
  6774  0109CE  0060  F0F7  FFE3   	movff	btemp,plusw1
  6775                           
  6776                           ; BSR set to: 57
  6777                           ;gemsecs.c: 104:     if (rxData_l == 0) {
  6778  0109D4  502F               	movf	m_protocol@rxData_l,w,c
  6779  0109D6  A4D8               	btfss	status,2,c
  6780  0109D8  D00C               	goto	l7314
  6781                           
  6782                           ; BSR set to: 57
  6783                           ;gemsecs.c: 105:      r_block.length = rxData;
  6784                           ;stkvar	_rxData @ sp[(-1)+0]
  6785  0109DA  0EFF               	movlw	-1
  6786  0109DC  006F FF8C  F0C4    	movff	plusw1,_r_block+12
  6787                           
  6788                           ; BSR set to: 57
  6789                           ;gemsecs.c: 106:      run_checksum(0, 1);
  6790  0109E2  0E01               	movlw	1
  6791  0109E4  6EE6               	movwf	postinc1,c
  6792  0109E6  0E00               	movlw	0
  6793  0109E8  6EE6               	movwf	postinc1,c
  6794  0109EA  EC86  F0A3         	call	_run_checksum	;wreg free
  6795                           
  6796                           ;gemsecs.c: 107:      rxData_l++;
  6797  0109EE  2A2F               	incf	m_protocol@rxData_l,f,c
  6798                           
  6799                           ;gemsecs.c: 108:     } else {
  6800  0109F0  D0A0               	goto	l7352
  6801  0109F2                     l7314:
  6802                           
  6803                           ; BSR set to: 57
  6804                           ;gemsecs.c: 112:      if (rxData_l <= sizeof(block10))
  6805  0109F2  0E0B               	movlw	11
  6806  0109F4  602F               	cpfslt	m_protocol@rxData_l,c
  6807  0109F6  D00C               	goto	l7318
  6808                           
  6809                           ; BSR set to: 57
  6810                           ;gemsecs.c: 113:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  6811                           ;stkvar	_rxData @ sp[(-1)+0]
  6812  0109F8  502F               	movf	m_protocol@rxData_l,w,c
  6813  0109FA  0819               	sublw	low (_H10+25)
  6814  0109FC  6ED9               	movwf	fsr2l,c
  6815  0109FE  0E00               	movlw	0
  6816  010A00  A0D8               	btfss	status,0,c
  6817  010A02  2AE8               	incf	wreg,f,c
  6818  010A04  0801               	sublw	high (_H10+25)
  6819  010A06  6EDA               	movwf	fsr2h,c
  6820  010A08  0EFF               	movlw	-1
  6821  010A0A  006F FF8F FFDF     	movff	plusw1,indf2
  6822  010A10                     l7318:
  6823                           
  6824                           ; BSR set to: 57
  6825                           ;gemsecs.c: 114:      if (rxData_l <= r_block.length)
  6826  010A10  502F               	movf	m_protocol@rxData_l,w,c
  6827  010A12  0100               	movlb	0	; () banked
  6828  010A14  5DC4               	subwf	(_r_block+12)& (0+255),w,b
  6829  010A16  A0D8               	btfss	status,0,c
  6830  010A18  D00D               	goto	l7322
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;gemsecs.c: 115:       V.r_checksum = run_checksum(rxData, 0);
  6834  010A1A  0E00               	movlw	0
  6835  010A1C  6EE6               	movwf	postinc1,c
  6836                           
  6837                           ;stkvar	_rxData @ sp[(-2)+0]
  6838  010A1E  0EFE               	movlw	-2
  6839  010A20  50E3               	movf	plusw1,w,c
  6840  010A22  6EE6               	movwf	postinc1,c
  6841  010A24  EC86  F0A3         	call	_run_checksum	;wreg free
  6842  010A28  0060  F0F4  F4EA   	movff	btemp,_V+244	;volatile
  6843  010A2E  0060  F0F8  F4EB   	movff	btemp+1,_V+245	;volatile
  6844  010A34                     l7322:
  6845                           
  6846                           ;gemsecs.c: 117:      if (rxData_l == r_block.length + 1)
  6847  010A34  502F               	movf	m_protocol@rxData_l,w,c
  6848  010A36  6E47               	movwf	btemp+10,c
  6849  010A38  6A48               	clrf	btemp+11,c
  6850  010A3A  0100               	movlb	0	; () banked
  6851  010A3C  51C4               	movf	(_r_block+12)& (0+255),w,b
  6852  010A3E  6E45               	movwf	btemp+8,c
  6853  010A40  6A46               	clrf	btemp+9,c
  6854  010A42  0E01               	movlw	1
  6855  010A44  2645               	addwf	btemp+8,f,c
  6856  010A46  0E00               	movlw	0
  6857  010A48  2246               	addwfc	btemp+9,f,c
  6858  010A4A  5047               	movf	btemp+10,w,c
  6859  010A4C  1845               	xorwf	btemp+8,w,c
  6860  010A4E  E109               	bnz	l7326
  6861  010A50  5048               	movf	btemp+11,w,c
  6862  010A52  1846               	xorwf	btemp+9,w,c
  6863  010A54  A4D8               	btfss	status,2,c
  6864  010A56  D005               	goto	l7326
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;gemsecs.c: 118:       H10[1].checksum = (uint16_t) rxData << 8;
  6868                           ;stkvar	_rxData @ sp[(-1)+0]
  6869  010A58  0EFF               	movlw	-1
  6870  010A5A  50E3               	movf	plusw1,w,c
  6871  010A5C  0101               	movlb	1	; () banked
  6872  010A5E  6F0E               	movwf	(_H10+14)& (0+255),b
  6873  010A60  6B0D               	clrf	(_H10+13)& (0+255),b
  6874  010A62                     l7326:
  6875                           
  6876                           ;gemsecs.c: 119:      if (rxData_l == r_block.length + 2)
  6877  010A62  502F               	movf	m_protocol@rxData_l,w,c
  6878  010A64  6E47               	movwf	btemp+10,c
  6879  010A66  6A48               	clrf	btemp+11,c
  6880  010A68  0100               	movlb	0	; () banked
  6881  010A6A  51C4               	movf	(_r_block+12)& (0+255),w,b
  6882  010A6C  6E45               	movwf	btemp+8,c
  6883  010A6E  6A46               	clrf	btemp+9,c
  6884  010A70  0E02               	movlw	2
  6885  010A72  2645               	addwf	btemp+8,f,c
  6886  010A74  0E00               	movlw	0
  6887  010A76  2246               	addwfc	btemp+9,f,c
  6888  010A78  5047               	movf	btemp+10,w,c
  6889  010A7A  1845               	xorwf	btemp+8,w,c
  6890  010A7C  E10A               	bnz	l7330
  6891  010A7E  5048               	movf	btemp+11,w,c
  6892  010A80  1846               	xorwf	btemp+9,w,c
  6893  010A82  A4D8               	btfss	status,2,c
  6894  010A84  D006               	goto	l7330
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;gemsecs.c: 120:       H10[1].checksum += rxData;
  6898                           ;stkvar	_rxData @ sp[(-1)+0]
  6899  010A86  0EFF               	movlw	-1
  6900  010A88  50E3               	movf	plusw1,w,c
  6901  010A8A  0101               	movlb	1	; () banked
  6902  010A8C  270D               	addwf	(_H10+13)& (0+255),f,b
  6903  010A8E  0E00               	movlw	0
  6904  010A90  230E               	addwfc	(_H10+14)& (0+255),f,b
  6905  010A92                     l7330:
  6906                           
  6907                           ;gemsecs.c: 122:      rxData_l++;
  6908  010A92  2A2F               	incf	m_protocol@rxData_l,f,c
  6909                           
  6910                           ;gemsecs.c: 123:      if (rxData_l > (r_block.length + 2)) {
  6911  010A94  502F               	movf	m_protocol@rxData_l,w,c
  6912  010A96  6E47               	movwf	btemp+10,c
  6913  010A98  6A48               	clrf	btemp+11,c
  6914  010A9A  0100               	movlb	0	; () banked
  6915  010A9C  51C4               	movf	(_r_block+12)& (0+255),w,b
  6916  010A9E  6E45               	movwf	btemp+8,c
  6917  010AA0  6A46               	clrf	btemp+9,c
  6918  010AA2  0E02               	movlw	2
  6919  010AA4  2645               	addwf	btemp+8,f,c
  6920  010AA6  0E00               	movlw	0
  6921  010AA8  2246               	addwfc	btemp+9,f,c
  6922  010AAA  5047               	movf	btemp+10,w,c
  6923  010AAC  5C45               	subwf	btemp+8,w,c
  6924  010AAE  5046               	movf	btemp+9,w,c
  6925  010AB0  0A80               	xorlw	128
  6926  010AB2  6E3D               	movwf	btemp,c
  6927  010AB4  5048               	movf	btemp+11,w,c
  6928  010AB6  0A80               	xorlw	128
  6929  010AB8  583D               	subwfb	btemp,w,c
  6930  010ABA  B0D8               	btfsc	status,0,c
  6931  010ABC  D03A               	goto	l7352
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;gemsecs.c: 124:       if (V.r_checksum == H10[1].checksum) {
  6935  010ABE  EE21  F0EA         	lfsr	2,_V+244	;volatile
  6936  010AC2  0101               	movlb	1	; () banked
  6937  010AC4  510D               	movf	(_H10+13)& (0+255),w,b
  6938  010AC6  18DE               	xorwf	postinc2,w,c
  6939  010AC8  E110               	bnz	l7340
  6940  010ACA  510E               	movf	(_H10+14)& (0+255),w,b
  6941  010ACC  18DE               	xorwf	postinc2,w,c
  6942  010ACE  A4D8               	btfss	status,2,c
  6943  010AD0  D00C               	goto	l7340
  6944                           
  6945                           ; BSR set to: 1
  6946                           ;gemsecs.c: 125:        *m_link = LINK_STATE_ACK;
  6947                           ;stkvar	_m_link @ sp[(-1)+-2]
  6948  010AD2  0EFD               	movlw	-3
  6949  010AD4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6950  010ADA  0EFE               	movlw	-2
  6951  010ADC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6952  010AE2  0E03               	movlw	3
  6953  010AE4  D025               	goto	L20
  6954  010AE6                     l7338:
  6955  010AE6  EC8C  F0A2         	call	_UART1_Read	;wreg free
  6956  010AEA                     l7340:
  6957                           
  6958                           ;gemsecs.c: 127:        while (UART1_is_rx_ready())
  6959  010AEA  EC65  F0A6         	call	_UART1_is_rx_ready	;wreg free
  6960  010AEE  503D               	movf	btemp,w,c
  6961  010AF0  A4D8               	btfss	status,2,c
  6962  010AF2  D7F9               	goto	l7338
  6963                           
  6964                           ;gemsecs.c: 129:        WaitMs(500);
  6965  010AF4  0EF4               	movlw	244
  6966  010AF6  6EE6               	movwf	postinc1,c
  6967  010AF8  0E01               	movlw	1
  6968  010AFA  6EE6               	movwf	postinc1,c
  6969  010AFC  ECC9  F0A2         	call	_WaitMs	;wreg free
  6970                           
  6971                           ;gemsecs.c: 130:        V.error = LINK_ERROR_CHECKSUM;
  6972  010B00  0E0F               	movlw	15
  6973  010B02  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  6974                           
  6975                           ;gemsecs.c: 131:        V.checksum_error++;
  6976  010B08  EE21  F0EE         	lfsr	2,_V+248	;volatile
  6977  010B0C  2ADE               	incf	postinc2,f,c
  6978  010B0E  0E00               	movlw	0
  6979  010B10  22DD               	addwfc	postdec2,f,c
  6980                           
  6981                           ;gemsecs.c: 132:        V.failed_receive = 3;
  6982  010B12  EE21  F0F5         	lfsr	2,_V+255	;volatile
  6983  010B16  50DF               	movf	223,w,c
  6984  010B18  0BF0               	andlw	-16
  6985  010B1A  0903               	iorlw	3
  6986  010B1C  6EDF               	movwf	223,c
  6987                           
  6988                           ;gemsecs.c: 133:        *m_link = LINK_STATE_NAK;
  6989                           ;stkvar	_m_link @ sp[(-1)+-2]
  6990  010B1E  0EFD               	movlw	-3
  6991  010B20  006F FF8F FFD9     	movff	plusw1,fsr2l
  6992  010B26  0EFE               	movlw	-2
  6993  010B28  006F FF8F FFDA     	movff	plusw1,fsr2h
  6994  010B2E  0E05               	movlw	5
  6995  010B30                     L20:
  6996  010B30  6EDF               	movwf	indf2,c
  6997  010B32                     l7352:
  6998                           
  6999                           ;gemsecs.c: 139:    if (UART2_is_rx_ready()) {
  7000  010B32  EC61  F0A6         	call	_UART2_is_rx_ready	;wreg free
  7001  010B36  503D               	movf	btemp,w,c
  7002  010B38  B4D8               	btfsc	status,2,c
  7003  010B3A  D142               	goto	l7438
  7004                           
  7005                           ;gemsecs.c: 140:     rxData = UART2_Read();
  7006  010B3C  EC6D  F0A2         	call	_UART2_Read	;wreg free
  7007                           
  7008                           ;stkvar	_rxData @ sp[(-1)+0]
  7009  010B40  0EFF               	movlw	-1
  7010  010B42  0060  F0F7  FFE3   	movff	btemp,plusw1
  7011                           
  7012                           ; BSR set to: 57
  7013                           ;gemsecs.c: 141:     if (rxData_l == 0) {
  7014  010B48  502F               	movf	m_protocol@rxData_l,w,c
  7015  010B4A  A4D8               	btfss	status,2,c
  7016  010B4C  D00C               	goto	l7364
  7017                           
  7018                           ; BSR set to: 57
  7019                           ;gemsecs.c: 142:      r_block.length = rxData;
  7020                           ;stkvar	_rxData @ sp[(-1)+0]
  7021  010B4E  0EFF               	movlw	-1
  7022  010B50  006F FF8C  F0C4    	movff	plusw1,_r_block+12
  7023                           
  7024                           ; BSR set to: 57
  7025                           ;gemsecs.c: 143:      run_checksum(0, 1);
  7026  010B56  0E01               	movlw	1
  7027  010B58  6EE6               	movwf	postinc1,c
  7028  010B5A  0E00               	movlw	0
  7029  010B5C  6EE6               	movwf	postinc1,c
  7030  010B5E  EC86  F0A3         	call	_run_checksum	;wreg free
  7031                           
  7032                           ;gemsecs.c: 144:      rxData_l++;
  7033  010B62  2A2F               	incf	m_protocol@rxData_l,f,c
  7034                           
  7035                           ;gemsecs.c: 145:     } else {
  7036  010B64  D12D               	goto	l7438
  7037  010B66                     l7364:
  7038                           
  7039                           ; BSR set to: 57
  7040                           ;gemsecs.c: 149:      if (rxData_l <= sizeof(block10))
  7041  010B66  0E0B               	movlw	11
  7042  010B68  602F               	cpfslt	m_protocol@rxData_l,c
  7043  010B6A  D00C               	goto	l7368
  7044                           
  7045                           ; BSR set to: 57
  7046                           ;gemsecs.c: 150:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  7047                           ;stkvar	_rxData @ sp[(-1)+0]
  7048  010B6C  502F               	movf	m_protocol@rxData_l,w,c
  7049  010B6E  0819               	sublw	low (_H10+25)
  7050  010B70  6ED9               	movwf	fsr2l,c
  7051  010B72  0E00               	movlw	0
  7052  010B74  A0D8               	btfss	status,0,c
  7053  010B76  2AE8               	incf	wreg,f,c
  7054  010B78  0801               	sublw	high (_H10+25)
  7055  010B7A  6EDA               	movwf	fsr2h,c
  7056  010B7C  0EFF               	movlw	-1
  7057  010B7E  006F FF8F FFDF     	movff	plusw1,indf2
  7058  010B84                     l7368:
  7059                           
  7060                           ; BSR set to: 57
  7061                           ;gemsecs.c: 151:      if (rxData_l <= r_block.length)
  7062  010B84  502F               	movf	m_protocol@rxData_l,w,c
  7063  010B86  0100               	movlb	0	; () banked
  7064  010B88  5DC4               	subwf	(_r_block+12)& (0+255),w,b
  7065  010B8A  A0D8               	btfss	status,0,c
  7066  010B8C  D00D               	goto	l7372
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;gemsecs.c: 152:       V.r_checksum = run_checksum(rxData, 0);
  7070  010B8E  0E00               	movlw	0
  7071  010B90  6EE6               	movwf	postinc1,c
  7072                           
  7073                           ;stkvar	_rxData @ sp[(-2)+0]
  7074  010B92  0EFE               	movlw	-2
  7075  010B94  50E3               	movf	plusw1,w,c
  7076  010B96  6EE6               	movwf	postinc1,c
  7077  010B98  EC86  F0A3         	call	_run_checksum	;wreg free
  7078  010B9C  0060  F0F4  F4EA   	movff	btemp,_V+244	;volatile
  7079  010BA2  0060  F0F8  F4EB   	movff	btemp+1,_V+245	;volatile
  7080  010BA8                     l7372:
  7081                           
  7082                           ;gemsecs.c: 154:      if (rxData_l == r_block.length + 1)
  7083  010BA8  502F               	movf	m_protocol@rxData_l,w,c
  7084  010BAA  6E47               	movwf	btemp+10,c
  7085  010BAC  6A48               	clrf	btemp+11,c
  7086  010BAE  0100               	movlb	0	; () banked
  7087  010BB0  51C4               	movf	(_r_block+12)& (0+255),w,b
  7088  010BB2  6E45               	movwf	btemp+8,c
  7089  010BB4  6A46               	clrf	btemp+9,c
  7090  010BB6  0E01               	movlw	1
  7091  010BB8  2645               	addwf	btemp+8,f,c
  7092  010BBA  0E00               	movlw	0
  7093  010BBC  2246               	addwfc	btemp+9,f,c
  7094  010BBE  5047               	movf	btemp+10,w,c
  7095  010BC0  1845               	xorwf	btemp+8,w,c
  7096  010BC2  E109               	bnz	l7376
  7097  010BC4  5048               	movf	btemp+11,w,c
  7098  010BC6  1846               	xorwf	btemp+9,w,c
  7099  010BC8  A4D8               	btfss	status,2,c
  7100  010BCA  D005               	goto	l7376
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;gemsecs.c: 155:       H10[1].checksum = (uint16_t) rxData << 8;
  7104                           ;stkvar	_rxData @ sp[(-1)+0]
  7105  010BCC  0EFF               	movlw	-1
  7106  010BCE  50E3               	movf	plusw1,w,c
  7107  010BD0  0101               	movlb	1	; () banked
  7108  010BD2  6F0E               	movwf	(_H10+14)& (0+255),b
  7109  010BD4  6B0D               	clrf	(_H10+13)& (0+255),b
  7110  010BD6                     l7376:
  7111                           
  7112                           ;gemsecs.c: 156:      if (rxData_l == r_block.length + 2)
  7113  010BD6  502F               	movf	m_protocol@rxData_l,w,c
  7114  010BD8  6E47               	movwf	btemp+10,c
  7115  010BDA  6A48               	clrf	btemp+11,c
  7116  010BDC  0100               	movlb	0	; () banked
  7117  010BDE  51C4               	movf	(_r_block+12)& (0+255),w,b
  7118  010BE0  6E45               	movwf	btemp+8,c
  7119  010BE2  6A46               	clrf	btemp+9,c
  7120  010BE4  0E02               	movlw	2
  7121  010BE6  2645               	addwf	btemp+8,f,c
  7122  010BE8  0E00               	movlw	0
  7123  010BEA  2246               	addwfc	btemp+9,f,c
  7124  010BEC  5047               	movf	btemp+10,w,c
  7125  010BEE  1845               	xorwf	btemp+8,w,c
  7126  010BF0  E10A               	bnz	l7380
  7127  010BF2  5048               	movf	btemp+11,w,c
  7128  010BF4  1846               	xorwf	btemp+9,w,c
  7129  010BF6  A4D8               	btfss	status,2,c
  7130  010BF8  D006               	goto	l7380
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;gemsecs.c: 157:       H10[1].checksum += rxData;
  7134                           ;stkvar	_rxData @ sp[(-1)+0]
  7135  010BFA  0EFF               	movlw	-1
  7136  010BFC  50E3               	movf	plusw1,w,c
  7137  010BFE  0101               	movlb	1	; () banked
  7138  010C00  270D               	addwf	(_H10+13)& (0+255),f,b
  7139  010C02  0E00               	movlw	0
  7140  010C04  230E               	addwfc	(_H10+14)& (0+255),f,b
  7141  010C06                     l7380:
  7142                           
  7143                           ;gemsecs.c: 159:      rxData_l++;
  7144  010C06  2A2F               	incf	m_protocol@rxData_l,f,c
  7145                           
  7146                           ;gemsecs.c: 160:      if (rxData_l > (r_block.length + 2)) {
  7147  010C08  502F               	movf	m_protocol@rxData_l,w,c
  7148  010C0A  6E47               	movwf	btemp+10,c
  7149  010C0C  6A48               	clrf	btemp+11,c
  7150  010C0E  0100               	movlb	0	; () banked
  7151  010C10  51C4               	movf	(_r_block+12)& (0+255),w,b
  7152  010C12  6E45               	movwf	btemp+8,c
  7153  010C14  6A46               	clrf	btemp+9,c
  7154  010C16  0E02               	movlw	2
  7155  010C18  2645               	addwf	btemp+8,f,c
  7156  010C1A  0E00               	movlw	0
  7157  010C1C  2246               	addwfc	btemp+9,f,c
  7158  010C1E  5047               	movf	btemp+10,w,c
  7159  010C20  5C45               	subwf	btemp+8,w,c
  7160  010C22  5046               	movf	btemp+9,w,c
  7161  010C24  0A80               	xorlw	128
  7162  010C26  6E3D               	movwf	btemp,c
  7163  010C28  5048               	movf	btemp+11,w,c
  7164  010C2A  0A80               	xorlw	128
  7165  010C2C  583D               	subwfb	btemp,w,c
  7166  010C2E  B0D8               	btfsc	status,0,c
  7167  010C30  D0C7               	goto	l7438
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;gemsecs.c: 161:       if (V.r_checksum == H10[1].checksum) {
  7171  010C32  EE21  F0EA         	lfsr	2,_V+244	;volatile
  7172  010C36  0101               	movlb	1	; () banked
  7173  010C38  510D               	movf	(_H10+13)& (0+255),w,b
  7174  010C3A  18DE               	xorwf	postinc2,w,c
  7175  010C3C  E110               	bnz	l7390
  7176  010C3E  510E               	movf	(_H10+14)& (0+255),w,b
  7177  010C40  18DE               	xorwf	postinc2,w,c
  7178  010C42  A4D8               	btfss	status,2,c
  7179  010C44  D00C               	goto	l7390
  7180                           
  7181                           ; BSR set to: 1
  7182                           ;gemsecs.c: 162:        *m_link = LINK_STATE_ACK;
  7183                           ;stkvar	_m_link @ sp[(-1)+-2]
  7184  010C46  0EFD               	movlw	-3
  7185  010C48  006F FF8F FFD9     	movff	plusw1,fsr2l
  7186  010C4E  0EFE               	movlw	-2
  7187  010C50  006F FF8F FFDA     	movff	plusw1,fsr2h
  7188  010C56  0E03               	movlw	3
  7189  010C58  D08C               	goto	L23
  7190  010C5A                     l7388:
  7191  010C5A  EC6D  F0A2         	call	_UART2_Read	;wreg free
  7192  010C5E                     l7390:
  7193                           
  7194                           ;gemsecs.c: 164:        while (UART2_is_rx_ready())
  7195  010C5E  EC61  F0A6         	call	_UART2_is_rx_ready	;wreg free
  7196  010C62  503D               	movf	btemp,w,c
  7197  010C64  A4D8               	btfss	status,2,c
  7198  010C66  D7F9               	goto	l7388
  7199                           
  7200                           ;gemsecs.c: 166:        WaitMs(500);
  7201  010C68  0EF4               	movlw	244
  7202  010C6A  6EE6               	movwf	postinc1,c
  7203  010C6C  0E01               	movlw	1
  7204  010C6E  6EE6               	movwf	postinc1,c
  7205  010C70  ECC9  F0A2         	call	_WaitMs	;wreg free
  7206                           
  7207                           ;gemsecs.c: 167:        V.error = LINK_ERROR_CHECKSUM;
  7208  010C74  0E0F               	movlw	15
  7209  010C76  006F FFA0  F4E6    	movff	wreg,_V+240	;volatile
  7210                           
  7211                           ;gemsecs.c: 168:        V.checksum_error++;
  7212  010C7C  EE21  F0EE         	lfsr	2,_V+248	;volatile
  7213  010C80  2ADE               	incf	postinc2,f,c
  7214  010C82  0E00               	movlw	0
  7215  010C84  22DD               	addwfc	postdec2,f,c
  7216                           
  7217                           ;gemsecs.c: 169:        V.failed_receive = 4;
  7218  010C86  EE21  F0F5         	lfsr	2,_V+255	;volatile
  7219  010C8A  50DF               	movf	223,w,c
  7220  010C8C  0BF0               	andlw	-16
  7221  010C8E  0904               	iorlw	4
  7222  010C90  D68B               	goto	L22
  7223  010C92                     l7402:
  7224                           
  7225                           ;gemsecs.c: 181:   V.stream = H10[1].block.block.stream;
  7226  010C92  0101               	movlb	1	; () banked
  7227  010C94  5116               	movf	(_H10+22)& (0+255),w,b
  7228  010C96  0B7F               	andlw	127
  7229  010C98  6E48               	movwf	btemp+11,c
  7230  010C9A  0060  F120  F4E4   	movff	btemp+11,_V+238	;volatile
  7231                           
  7232                           ; BSR set to: 1
  7233                           ;gemsecs.c: 182:   V.function = H10[1].block.block.function;
  7234  010CA0  EE21  F0E5         	lfsr	2,_V+239	;volatile
  7235  010CA4  0060  F457  FFDF   	movff	_H10+21,indf2
  7236                           
  7237                           ; BSR set to: 1
  7238                           ;gemsecs.c: 183:   V.systemb = H10[1].block.block.systemb;
  7239  010CAA  EE20  F10F         	lfsr	2,_H10+15
  7240  010CAE  006F FF78  F4E0    	movff	postinc2,_V+234	;volatile
  7241  010CB4  006F FF78  F4E1    	movff	postinc2,_V+235	;volatile
  7242  010CBA  006F FF78  F4E2    	movff	postinc2,_V+236	;volatile
  7243  010CC0  006F FF74  F4E3    	movff	postdec2,_V+237	;volatile
  7244                           
  7245                           ; BSR set to: 1
  7246                           ;gemsecs.c: 184:   V.rbit = H10[1].block.block.rbit;
  7247  010CC6  EE21  F0F4         	lfsr	2,_V+254	;volatile
  7248  010CCA  BF18               	btfsc	(_H10+24)& (0+255),7,b
  7249  010CCC  D002               	bra	u4365
  7250  010CCE  90DF               	bcf	indf2,0,c
  7251  010CD0  D001               	bra	u4366
  7252  010CD2                     u4365:
  7253  010CD2  80DF               	bsf	indf2,0,c
  7254  010CD4                     u4366:
  7255                           
  7256                           ;gemsecs.c: 185:   V.wbit = H10[1].block.block.wbit;
  7257  010CD4  EE21  F0F4         	lfsr	2,_V+254	;volatile
  7258  010CD8  0101               	movlb	1	; () banked
  7259  010CDA  BF16               	btfsc	(_H10+22)& (0+255),7,b
  7260  010CDC  D002               	bra	u4375
  7261  010CDE  92DF               	bcf	indf2,1,c
  7262  010CE0  D001               	bra	u4376
  7263  010CE2                     u4375:
  7264  010CE2  82DF               	bsf	indf2,1,c
  7265  010CE4                     u4376:
  7266                           
  7267                           ;gemsecs.c: 186:   V.ebit = H10[1].block.block.ebit;
  7268  010CE4  EE21  F0F4         	lfsr	2,_V+254	;volatile
  7269  010CE8  0101               	movlb	1	; () banked
  7270  010CEA  BF14               	btfsc	(_H10+20)& (0+255),7,b
  7271  010CEC  D002               	bra	u4385
  7272  010CEE  94DF               	bcf	indf2,2,c
  7273  010CF0  D001               	bra	u4386
  7274  010CF2                     u4385:
  7275  010CF2  84DF               	bsf	indf2,2,c
  7276  010CF4                     u4386:
  7277                           
  7278                           ;gemsecs.c: 187:   V.failed_receive = 0;
  7279  010CF4  EE21  F0F5         	lfsr	2,_V+255	;volatile
  7280  010CF8  0EF0               	movlw	-16
  7281  010CFA  16DF               	andwf	223,f,c
  7282                           
  7283                           ;gemsecs.c: 188:   V.g_state = secs_gem_state(V.stream, V.function);
  7284  010CFC  EE21  F0E5         	lfsr	2,_V+239	;volatile
  7285  010D00  50DF               	movf	indf2,w,c
  7286  010D02  6EE6               	movwf	postinc1,c
  7287  010D04  EE21  F0E4         	lfsr	2,_V+238	;volatile
  7288  010D08  50DF               	movf	indf2,w,c
  7289  010D0A  6EE6               	movwf	postinc1,c
  7290  010D0C  EC0B  F09C         	call	_secs_gem_state	;wreg free
  7291  010D10  0060  F0F4  F3F8   	movff	btemp,_V+2	;volatile
  7292                           
  7293                           ;gemsecs.c: 189:   *m_link = LINK_STATE_DONE;
  7294                           ;stkvar	_m_link @ sp[(-1)+-2]
  7295  010D16  0EFD               	movlw	-3
  7296  010D18  006F FF8F FFD9     	movff	plusw1,fsr2l
  7297  010D1E  0EFE               	movlw	-2
  7298  010D20  006F FF8F FFDA     	movff	plusw1,fsr2h
  7299  010D26  0E04               	movlw	4
  7300  010D28  D024               	goto	L23
  7301  010D2A                     l7420:
  7302                           
  7303                           ;gemsecs.c: 192:   *m_link = LINK_STATE_ERROR;
  7304                           ;stkvar	_m_link @ sp[(-1)+-2]
  7305  010D2A  0EFD               	movlw	-3
  7306  010D2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7307  010D32  0EFE               	movlw	-2
  7308  010D34  006F FF8F FFDA     	movff	plusw1,fsr2h
  7309  010D3A  0E06               	movlw	6
  7310  010D3C  6EDF               	movwf	indf2,c
  7311                           
  7312                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  7313  010D3E  D002               	goto	l7424
  7314  010D40                     l7422:
  7315                           
  7316                           ;gemsecs.c: 194:    UART1_Read();
  7317  010D40  EC8C  F0A2         	call	_UART1_Read	;wreg free
  7318  010D44                     l7424:
  7319                           
  7320                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  7321  010D44  5037               	movf	_uart1RxCount,w,c	;volatile
  7322  010D46  B4D8               	btfsc	status,2,c
  7323  010D48  D003               	goto	l7428
  7324  010D4A  D7FA               	goto	l7422
  7325  010D4C                     l7426:
  7326                           
  7327                           ;gemsecs.c: 197:    UART2_Read();
  7328  010D4C  EC6D  F0A2         	call	_UART2_Read	;wreg free
  7329  010D50                     l7428:
  7330                           
  7331                           ;gemsecs.c: 196:   while ((uart2RxCount)) {
  7332  010D50  5031               	movf	_uart2RxCount,w,c	;volatile
  7333  010D52  B4D8               	btfsc	status,2,c
  7334  010D54  D035               	goto	l7438
  7335  010D56  D7FA               	goto	l7426
  7336  010D58                     l7430:
  7337                           
  7338                           ;gemsecs.c: 203:   V.failed_receive = 0;
  7339  010D58  EE21  F0F5         	lfsr	2,_V+255	;volatile
  7340  010D5C  0EF0               	movlw	-16
  7341  010D5E  16DF               	andwf	223,f,c
  7342  010D60                     l7432:
  7343                           
  7344                           ;gemsecs.c: 205:   *m_link = LINK_STATE_IDLE;
  7345                           ;stkvar	_m_link @ sp[(-1)+-2]
  7346  010D60  0EFD               	movlw	-3
  7347  010D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  7348  010D68  0EFE               	movlw	-2
  7349  010D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7350  010D70  0E00               	movlw	0
  7351  010D72                     L23:
  7352  010D72  6EDF               	movwf	indf2,c
  7353                           
  7354                           ;gemsecs.c: 207:   break;
  7355  010D74  D025               	goto	l7438
  7356  010D76                     l7436:
  7357                           
  7358                           ;stkvar	_m_link @ sp[(-1)+-2]
  7359  010D76  0EFD               	movlw	-3
  7360  010D78  006F FF8F FFD9     	movff	plusw1,fsr2l
  7361  010D7E  0EFE               	movlw	-2
  7362  010D80  006F FF8F FFDA     	movff	plusw1,fsr2h
  7363  010D86  50DF               	movf	indf2,w,c
  7364  010D88  6E47               	movwf	btemp+10,c
  7365  010D8A  6A48               	clrf	btemp+11,c
  7366                           
  7367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7368                           ; Switch size 1, requested type "simple"
  7369                           ; Number of cases is 1, Range of values is 0 to 0
  7370                           ; switch strategies available:
  7371                           ; Name         Instructions Cycles
  7372                           ; simple_byte            4     3 (average)
  7373                           ;	Chosen strategy is simple_byte
  7374  010D8C  5048               	movf	btemp+11,w,c
  7375  010D8E  0A00               	xorlw	0	; case 0
  7376  010D90  A4D8               	btfss	status,2,c
  7377  010D92  D7E6               	goto	l7432
  7378                           
  7379                           ; Switch size 1, requested type "simple"
  7380                           ; Number of cases is 7, Range of values is 0 to 6
  7381                           ; switch strategies available:
  7382                           ; Name         Instructions Cycles
  7383                           ; simple_byte           22    12 (average)
  7384                           ;	Chosen strategy is simple_byte
  7385  010D94  5047               	movf	btemp+10,w,c
  7386  010D96  0A00               	xorlw	0	; case 0
  7387  010D98  B4D8               	btfsc	status,2,c
  7388  010D9A  D57F               	goto	l7260
  7389  010D9C  0A01               	xorlw	1	; case 1
  7390  010D9E  B4D8               	btfsc	status,2,c
  7391  010DA0  D5D6               	goto	l1602
  7392  010DA2  0A03               	xorlw	3	; case 2
  7393  010DA4  B4D8               	btfsc	status,2,c
  7394  010DA6  D5EB               	goto	l7292
  7395  010DA8  0A01               	xorlw	1	; case 3
  7396  010DAA  B4D8               	btfsc	status,2,c
  7397  010DAC  D772               	goto	l7402
  7398  010DAE  0A07               	xorlw	7	; case 4
  7399  010DB0  B4D8               	btfsc	status,2,c
  7400  010DB2  D7D2               	goto	l7430
  7401  010DB4  0A01               	xorlw	1	; case 5
  7402  010DB6  B4D8               	btfsc	status,2,c
  7403  010DB8  D7B8               	goto	l7420
  7404  010DBA  0A03               	xorlw	3	; case 6
  7405  010DBC  A4D8               	btfss	status,2,c
  7406  010DBE  D7D0               	goto	l7432
  7407  010DC0                     l7438:
  7408                           
  7409                           ;gemsecs.c: 210:  return *m_link;
  7410                           ;stkvar	_m_link @ sp[(-1)+-2]
  7411  010DC0  0EFD               	movlw	-3
  7412  010DC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7413  010DC8  0EFE               	movlw	-2
  7414  010DCA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7415  010DD0  50DF               	movf	indf2,w,c
  7416  010DD2  6E3D               	movwf	btemp,c
  7417                           
  7418                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  7419  010DD4  52E5               	movf	postdec1,f,c
  7420  010DD6  52E5               	movf	postdec1,f,c
  7421  010DD8  52E5               	movf	postdec1,f,c
  7422  010DDA  0012               	return		;funcret
  7423  010DDC                     __end_of_m_protocol:
  7424                           	opt callstack 0
  7425                           
  7426 ;; *************** function _secs_gem_state *****************
  7427 ;; Defined at:
  7428 ;;		line 697 in file "gemsecs.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  stream          1  [STACK] unsigned char 
  7431 ;;  function        1  [STACK] unsigned char 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1  [STACK] enum E16649
  7436 ;; Registers used:
  7437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/1
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;Total ram usage:        0 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    4
  7450 ;; This function calls:
  7451 ;;		_StartTimer
  7452 ;; This function is called by:
  7453 ;;		_m_protocol
  7454 ;;		_r_protocol
  7455 ;; This function uses a reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text15
  7459  013816                     __ptext15:
  7460                           	opt callstack 0
  7461  013816                     _secs_gem_state:
  7462                           	opt callstack 25
  7463                           
  7464                           ;gemsecs.c: 697: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          698: {;gemsecs.c: 699:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 701:  sw
      +                          itch (stream) {
  7465                           
  7466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7467                           ;incstack = 0
  7468  013816  D047               	goto	l6526
  7469  013818                     l6476:
  7470                           
  7471                           ;gemsecs.c: 708:    if (block != GEM_STATE_REMOTE)
  7472  013818  0E04               	movlw	4
  7473  01381A  182B               	xorwf	secs_gem_state@block,w,c
  7474  01381C  B4D8               	btfsc	status,2,c
  7475  01381E  D008               	goto	l6480
  7476                           
  7477                           ;gemsecs.c: 709:     StartTimer(TMR_HBIO, 30000);
  7478  013820  0E30               	movlw	48
  7479  013822  6EE6               	movwf	postinc1,c
  7480  013824  0E75               	movlw	117
  7481  013826  6EE6               	movwf	postinc1,c
  7482  013828  0E06               	movlw	6
  7483  01382A  6EE6               	movwf	postinc1,c
  7484  01382C  ECAB  F0A2         	call	_StartTimer	;wreg free
  7485  013830                     l6480:
  7486                           
  7487                           ;gemsecs.c: 711:    block = GEM_STATE_REMOTE;
  7488  013830  0E04               	movlw	4
  7489  013832                     L26:
  7490  013832  6E2B               	movwf	secs_gem_state@block,c
  7491                           
  7492                           ;gemsecs.c: 712:    V.ticker = 0;
  7493  013834  0E00               	movlw	0
  7494  013836  D033               	goto	L25
  7495  013838                     l6484:
  7496                           
  7497                           ;gemsecs.c: 719:    block = GEM_STATE_COMM;
  7498  013838  0E01               	movlw	1
  7499  01383A  6E2B               	movwf	secs_gem_state@block,c
  7500  01383C                     l6486:
  7501                           
  7502                           ;gemsecs.c: 720:    V.ticker = 15;
  7503  01383C  0E0F               	movlw	15
  7504  01383E  D02F               	goto	L25
  7505  013840                     l6488:
  7506                           
  7507                           ;gemsecs.c: 726:    block = GEM_STATE_OFFLINE;
  7508  013840  0E02               	movlw	2
  7509  013842  D7F7               	goto	L26
  7510  013844                     l6492:
  7511                           
  7512                           ;gemsecs.c: 733:    block = GEM_STATE_ONLINE;
  7513  013844  0E03               	movlw	3
  7514  013846  D7F5               	goto	L26
  7515  013848                     l6496:
  7516                           
  7517                           ;gemsecs.c: 737:    if (block == GEM_STATE_DISABLE) {
  7518  013848  502B               	movf	secs_gem_state@block,w,c
  7519  01384A  B4D8               	btfsc	status,2,c
  7520  01384C  D7F5               	goto	l6484
  7521  01384E  D03E               	goto	l6528
  7522  013850                     l6504:
  7523                           
  7524                           ;stkvar	_function @ sp[(0)+-2]
  7525  013850  0EFE               	movlw	-2
  7526  013852  50E3               	movf	plusw1,w,c
  7527  013854  6E47               	movwf	btemp+10,c
  7528  013856  6A48               	clrf	btemp+11,c
  7529                           
  7530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7531                           ; Switch size 1, requested type "simple"
  7532                           ; Number of cases is 1, Range of values is 0 to 0
  7533                           ; switch strategies available:
  7534                           ; Name         Instructions Cycles
  7535                           ; simple_byte            4     3 (average)
  7536                           ;	Chosen strategy is simple_byte
  7537  013858  5048               	movf	btemp+11,w,c
  7538  01385A  0A00               	xorlw	0	; case 0
  7539  01385C  A4D8               	btfss	status,2,c
  7540  01385E  D7F4               	goto	l6496
  7541                           
  7542                           ; Switch size 1, requested type "simple"
  7543                           ; Number of cases is 4, Range of values is 2 to 18
  7544                           ; switch strategies available:
  7545                           ; Name         Instructions Cycles
  7546                           ; simple_byte           13     7 (average)
  7547                           ;	Chosen strategy is simple_byte
  7548  013860  5047               	movf	btemp+10,w,c
  7549  013862  0A02               	xorlw	2	; case 2
  7550  013864  B4D8               	btfsc	status,2,c
  7551  013866  D7D8               	goto	l6476
  7552  013868  0A0C               	xorlw	12	; case 14
  7553  01386A  B4D8               	btfsc	status,2,c
  7554  01386C  D7E5               	goto	l6484
  7555  01386E  0A1E               	xorlw	30	; case 16
  7556  013870  B4D8               	btfsc	status,2,c
  7557  013872  D7E6               	goto	l6488
  7558  013874  0A02               	xorlw	2	; case 18
  7559  013876  B4D8               	btfsc	status,2,c
  7560  013878  D7E5               	goto	l6492
  7561  01387A  D7E6               	goto	l6496
  7562  01387C                     l6506:
  7563                           
  7564                           ;gemsecs.c: 747:    block = GEM_STATE_ALARM;
  7565  01387C  0E05               	movlw	5
  7566  01387E  6E2B               	movwf	secs_gem_state@block,c
  7567                           
  7568                           ;gemsecs.c: 748:    if (V.ticker != 45)
  7569  013880  0061  F3EB  FFE8   	movff	_V+260,wreg	;volatile
  7570  013886  0A2D               	xorlw	45
  7571  013888  A4D8               	btfss	status,2,c
  7572  01388A  D7D8               	goto	l6486
  7573  01388C  D01F               	goto	l6528
  7574  01388E                     l6512:
  7575                           
  7576                           ;gemsecs.c: 756:    block = GEM_STATE_ERROR;
  7577  01388E  0E06               	movlw	6
  7578  013890  D7F6               	goto	L27
  7579  013892                     l6518:
  7580                           
  7581                           ;gemsecs.c: 763:   if (block == GEM_STATE_DISABLE) {
  7582  013892  502B               	movf	secs_gem_state@block,w,c
  7583  013894  A4D8               	btfss	status,2,c
  7584  013896  D01A               	goto	l6528
  7585                           
  7586                           ;gemsecs.c: 764:    block = GEM_STATE_COMM;
  7587  013898  0E01               	movlw	1
  7588  01389A  6E2B               	movwf	secs_gem_state@block,c
  7589                           
  7590                           ;gemsecs.c: 765:    V.ticker = 45;
  7591  01389C  0E2D               	movlw	45
  7592  01389E                     L25:
  7593  01389E  006F FFA0  F4FA    	movff	wreg,_V+260	;volatile
  7594  0138A4  D013               	goto	l6528
  7595  0138A6                     l6526:
  7596                           
  7597                           ;stkvar	_stream @ sp[(0)+-1]
  7598  0138A6  0EFF               	movlw	-1
  7599  0138A8  50E3               	movf	plusw1,w,c
  7600  0138AA  6E47               	movwf	btemp+10,c
  7601  0138AC  6A48               	clrf	btemp+11,c
  7602                           
  7603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7604                           ; Switch size 1, requested type "simple"
  7605                           ; Number of cases is 1, Range of values is 0 to 0
  7606                           ; switch strategies available:
  7607                           ; Name         Instructions Cycles
  7608                           ; simple_byte            4     3 (average)
  7609                           ;	Chosen strategy is simple_byte
  7610  0138AE  5048               	movf	btemp+11,w,c
  7611  0138B0  0A00               	xorlw	0	; case 0
  7612  0138B2  A4D8               	btfss	status,2,c
  7613  0138B4  D7EE               	goto	l6518
  7614                           
  7615                           ; Switch size 1, requested type "simple"
  7616                           ; Number of cases is 3, Range of values is 1 to 9
  7617                           ; switch strategies available:
  7618                           ; Name         Instructions Cycles
  7619                           ; simple_byte           10     6 (average)
  7620                           ;	Chosen strategy is simple_byte
  7621  0138B6  5047               	movf	btemp+10,w,c
  7622  0138B8  0A01               	xorlw	1	; case 1
  7623  0138BA  B4D8               	btfsc	status,2,c
  7624  0138BC  D7C9               	goto	l6504
  7625  0138BE  0A04               	xorlw	4	; case 5
  7626  0138C0  B4D8               	btfsc	status,2,c
  7627  0138C2  D7DC               	goto	l6506
  7628  0138C4  0A0C               	xorlw	12	; case 9
  7629  0138C6  B4D8               	btfsc	status,2,c
  7630  0138C8  D7E2               	goto	l6512
  7631  0138CA  D7E3               	goto	l6518
  7632  0138CC                     l6528:
  7633                           
  7634                           ;gemsecs.c: 770:  return(block);
  7635  0138CC  0060  F0AC  F03D   	movff	secs_gem_state@block,btemp
  7636                           
  7637                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  7638  0138D2  52E5               	movf	postdec1,f,c
  7639  0138D4  52E5               	movf	postdec1,f,c
  7640  0138D6  0012               	return		;funcret
  7641  0138D8                     __end_of_secs_gem_state:
  7642                           	opt callstack 0
  7643                           
  7644 ;; *************** function _run_checksum *****************
  7645 ;; Defined at:
  7646 ;;		line 36 in file "gemsecs.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  byte_block      1  [STACK] unsigned char 
  7649 ;;  clear           1  [STACK] _Bool 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;		None
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  2  [STACK] unsigned short 
  7654 ;; Registers used:
  7655 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  7656 ;; Tracked objects:
  7657 ;;		On entry : 6/39
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7665 ;;Total ram usage:        0 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    3
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		_m_protocol
  7672 ;;		_r_protocol
  7673 ;; This function uses a reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text16
  7677  01470C                     __ptext16:
  7678                           	opt callstack 0
  7679  01470C                     _run_checksum:
  7680                           	opt callstack 26
  7681                           
  7682                           ;gemsecs.c: 36: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 37: {;
      +                          gemsecs.c: 38:  static uint16_t sum = 0;;gemsecs.c: 40:  if (clear)
  7683                           ;stkvar	_clear @ sp[(0)+-2]
  7684                           
  7685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7686                           ;incstack = 0
  7687  01470C  0EFE               	movlw	-2
  7688  01470E  50E3               	movf	plusw1,w,c
  7689  014710  B4D8               	btfsc	status,2,c
  7690  014712  D002               	goto	l6468
  7691                           
  7692                           ;gemsecs.c: 41:   sum = 0;
  7693  014714  6A25               	clrf	run_checksum@sum,c
  7694  014716  6A26               	clrf	run_checksum@sum+1,c
  7695  014718                     l6468:
  7696                           
  7697                           ;gemsecs.c: 43:  sum += byte_block;
  7698                           ;stkvar	_byte_block @ sp[(0)+-1]
  7699  014718  0EFF               	movlw	-1
  7700  01471A  50E3               	movf	plusw1,w,c
  7701  01471C  2625               	addwf	run_checksum@sum,f,c
  7702  01471E  0E00               	movlw	0
  7703  014720  2226               	addwfc	run_checksum@sum+1,f,c
  7704                           
  7705                           ;gemsecs.c: 44:  return sum;
  7706  014722  0060  F094  F03D   	movff	run_checksum@sum,btemp
  7707  014728  0060  F098  F03E   	movff	run_checksum@sum+1,btemp+1
  7708                           
  7709                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  7710  01472E  52E5               	movf	postdec1,f,c
  7711  014730  52E5               	movf	postdec1,f,c
  7712  014732  0012               	return		;funcret
  7713  014734                     __end_of_run_checksum:
  7714                           	opt callstack 0
  7715                           
  7716 ;; *************** function _WaitMs *****************
  7717 ;; Defined at:
  7718 ;;		line 32 in file "timers.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  numMilliseco    2  [STACK] unsigned short 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;		None
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1  [STACK] void 
  7725 ;; Registers used:
  7726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/3C
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7736 ;;Total ram usage:        0 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    4
  7739 ;; This function calls:
  7740 ;;		_StartTimer
  7741 ;;		_TimerDone
  7742 ;; This function is called by:
  7743 ;;		_main
  7744 ;;		_m_protocol
  7745 ;;		_r_protocol
  7746 ;; This function uses a reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text17
  7750  014592                     __ptext17:
  7751                           	opt callstack 0
  7752  014592                     _WaitMs:
  7753                           	opt callstack 25
  7754                           
  7755                           ;timers.c: 32: void WaitMs(uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  7756                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  7757                           
  7758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7759                           ;incstack = 0
  7760  014592  0EFE               	movlw	-2
  7761  014594  006F FF8F FFE6     	movff	plusw1,postinc1
  7762  01459A  006F FF8F FFE6     	movff	plusw1,postinc1
  7763  0145A0  0E00               	movlw	0
  7764  0145A2  6EE6               	movwf	postinc1,c
  7765  0145A4  ECAB  F0A2         	call	_StartTimer	;wreg free
  7766                           
  7767                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7768  0145A8  D005               	goto	l6410
  7769  0145AA                     l1853:
  7770                           
  7771                           ;timers.c: 36:   __nop();
  7772  0145AA  F000               	nop	
  7773                           
  7774                           ;timers.c: 37:   __nop();
  7775  0145AC  F000               	nop	
  7776                           
  7777                           ;timers.c: 38:   __nop();
  7778  0145AE  F000               	nop	
  7779                           
  7780                           ;timers.c: 39:   __nop();
  7781  0145B0  F000               	nop	
  7782  0145B2  0004               	clrwdt		;# 
  7783  0145B4                     l6410:
  7784                           
  7785                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7786  0145B4  0E00               	movlw	0
  7787  0145B6  6EE6               	movwf	postinc1,c
  7788  0145B8  EC01  F0A5         	call	_TimerDone	;wreg free
  7789  0145BC  503D               	movf	btemp,w,c
  7790  0145BE  B4D8               	btfsc	status,2,c
  7791  0145C0  D7F4               	goto	l1853
  7792                           
  7793                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7794  0145C2  52E5               	movf	postdec1,f,c
  7795  0145C4  52E5               	movf	postdec1,f,c
  7796  0145C6  0012               	return		;funcret
  7797  0145C8                     __end_of_WaitMs:
  7798                           	opt callstack 0
  7799                           
  7800 ;; *************** function _TimerDone *****************
  7801 ;; Defined at:
  7802 ;;		line 20 in file "timers.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;  timer           1  [STACK] unsigned char 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1  [STACK] _Bool 
  7809 ;; Registers used:
  7810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/3B
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7820 ;;Total ram usage:        0 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; Hardware stack levels required when called:    3
  7823 ;; This function calls:
  7824 ;;		Nothing
  7825 ;; This function is called by:
  7826 ;;		_main
  7827 ;;		_m_protocol
  7828 ;;		_r_protocol
  7829 ;;		_t_protocol
  7830 ;;		_WaitMs
  7831 ;; This function uses a reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text18
  7835  014A02                     __ptext18:
  7836                           	opt callstack 0
  7837  014A02                     _TimerDone:
  7838                           	opt callstack 26
  7839                           
  7840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7841                           ;incstack = 0
  7842  014A02  0004               	clrwdt		;# 
  7843                           
  7844                           ;timers.c: 23:  if (tickCount[timer] == 0) {
  7845                           ;stkvar	_timer @ sp[(0)+-1]
  7846  014A04  0EFF               	movlw	-1
  7847  014A06  50E3               	movf	plusw1,w,c
  7848  014A08  0D02               	mullw	2
  7849  014A0A  50F3               	movf	prodl,w,c
  7850  014A0C  0FAA               	addlw	low _tickCount
  7851  014A0E  6ED9               	movwf	fsr2l,c
  7852  014A10  6ADA               	clrf	fsr2h,c
  7853  014A12  50DE               	movf	postinc2,w,c
  7854  014A14  10DE               	iorwf	postinc2,w,c
  7855  014A16  A4D8               	btfss	status,2,c
  7856  014A18  D002               	goto	l5992
  7857                           
  7858                           ;timers.c: 24:   return 1;
  7859  014A1A  0E01               	movlw	1
  7860  014A1C  D001               	goto	L28
  7861  014A1E                     l5992:
  7862                           
  7863                           ;timers.c: 26:  return 0;
  7864  014A1E  0E00               	movlw	0
  7865  014A20                     L28:
  7866  014A20  6E3D               	movwf	btemp,c
  7867                           
  7868                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7869  014A22  52E5               	movf	postdec1,f,c
  7870  014A24  0012               	return		;funcret
  7871  014A26                     __end_of_TimerDone:
  7872                           	opt callstack 0
  7873                           
  7874 ;; *************** function _StartTimer *****************
  7875 ;; Defined at:
  7876 ;;		line 12 in file "timers.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  timer           1  [STACK] unsigned char 
  7879 ;;  count           2  [STACK] unsigned short 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;		None
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1  [STACK] void 
  7884 ;; Registers used:
  7885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/3B
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7895 ;;Total ram usage:        0 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:    3
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		_main
  7902 ;;		_m_protocol
  7903 ;;		_r_protocol
  7904 ;;		_t_protocol
  7905 ;;		_secs_gem_state
  7906 ;;		_WaitMs
  7907 ;; This function uses a reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text19
  7911  014556                     __ptext19:
  7912                           	opt callstack 0
  7913  014556                     _StartTimer:
  7914                           	opt callstack 26
  7915                           
  7916                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  7917                           ;stkvar	_count @ sp[(0)+-3]
  7918                           
  7919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7920                           ;incstack = 0
  7921  014556  0EFD               	movlw	-3
  7922  014558  006F FF8C  F047    	movff	plusw1,btemp+10
  7923  01455E  0EFE               	movlw	-2
  7924  014560  006F FF8C  F048    	movff	plusw1,btemp+11
  7925  014566  90D8               	bcf	status,0,c
  7926  014568  3447               	rlcf	btemp+10,w,c
  7927  01456A  6E45               	movwf	btemp+8,c
  7928  01456C  3448               	rlcf	btemp+11,w,c
  7929  01456E  6E46               	movwf	btemp+9,c
  7930                           
  7931                           ;stkvar	_timer @ sp[(0)+-1]
  7932  014570  0EFF               	movlw	-1
  7933  014572  50E3               	movf	plusw1,w,c
  7934  014574  0D02               	mullw	2
  7935  014576  50F3               	movf	prodl,w,c
  7936  014578  0FAA               	addlw	low _tickCount
  7937  01457A  6ED9               	movwf	fsr2l,c
  7938  01457C  6ADA               	clrf	fsr2h,c
  7939  01457E  0060  F117  FFDE   	movff	btemp+8,postinc2
  7940  014584  0060  F11B  FFDD   	movff	btemp+9,postdec2
  7941                           
  7942                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  7943  01458A  52E5               	movf	postdec1,f,c
  7944  01458C  52E5               	movf	postdec1,f,c
  7945  01458E  52E5               	movf	postdec1,f,c
  7946  014590  0012               	return		;funcret
  7947  014592                     __end_of_StartTimer:
  7948                           	opt callstack 0
  7949                           
  7950 ;; *************** function _UART2_is_rx_ready *****************
  7951 ;; Defined at:
  7952 ;;		line 137 in file "mcc_generated_files/uart2.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;		None
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;		None
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  1  [STACK] unsigned char 
  7959 ;; Registers used:
  7960 ;;		btemp
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/3C
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7970 ;;Total ram usage:        0 bytes
  7971 ;; Hardware stack levels used:    1
  7972 ;; Hardware stack levels required when called:    3
  7973 ;; This function calls:
  7974 ;;		Nothing
  7975 ;; This function is called by:
  7976 ;;		_m_protocol
  7977 ;; This function uses a reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text20
  7981  014CC2                     __ptext20:
  7982                           	opt callstack 0
  7983  014CC2                     _UART2_is_rx_ready:
  7984                           	opt callstack 26
  7985                           
  7986                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  7987                           
  7988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7989                           ;incstack = 0
  7990  014CC2  0060  F0C4  F03D   	movff	_uart2RxCount,btemp	;volatile
  7991                           
  7992                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7993  014CC8  0012               	return		;funcret
  7994  014CCA                     __end_of_UART2_is_rx_ready:
  7995                           	opt callstack 0
  7996                           
  7997 ;; *************** function _UART2_Read *****************
  7998 ;; Defined at:
  7999 ;;		line 152 in file "mcc_generated_files/uart2.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;		None
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;  readValue       1  [STACK] unsigned char 
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  1  [STACK] unsigned char 
  8006 ;; Registers used:
  8007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/3C
  8010 ;;		On exit  : 3F/39
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8017 ;;Total ram usage:        0 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:    3
  8020 ;; This function calls:
  8021 ;;		Nothing
  8022 ;; This function is called by:
  8023 ;;		_m_protocol
  8024 ;; This function uses a reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text21
  8028  0144DA                     __ptext21:
  8029                           	opt callstack 0
  8030  0144DA                     _UART2_Read:
  8031                           	opt callstack 0
  8032                           
  8033                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8034  0144DA  52E6               	movf	postinc1,f,c
  8035  0144DC                     
  8036                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  8037                           
  8038                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  8039  0144DC  5031               	movf	_uart2RxCount,w,c	;volatile
  8040  0144DE  B4D8               	btfsc	status,2,c
  8041  0144E0  D7FD               	goto	l6372
  8042                           
  8043                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  8044  0144E2  0E00               	movlw	low _uart2RxBuffer
  8045  0144E4  2432               	addwf	_uart2RxTail,w,c	;volatile
  8046  0144E6  6ED9               	movwf	fsr2l,c
  8047  0144E8  6ADA               	clrf	fsr2h,c
  8048  0144EA  0E02               	movlw	high _uart2RxBuffer
  8049  0144EC  22DA               	addwfc	fsr2h,f,c
  8050  0144EE  50DF               	movf	indf2,w,c
  8051  0144F0  6E48               	movwf	btemp+11,c
  8052                           
  8053                           ;stkvar	_readValue @ sp[(-1)+0]
  8054  0144F2  0EFF               	movlw	-1
  8055  0144F4  0060  F123  FFE3   	movff	btemp+11,plusw1
  8056  0144FA  2A32               	incf	_uart2RxTail,f,c	;volatile
  8057                           
  8058                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  8059  0144FC  0E3F               	movlw	63
  8060  0144FE  6432               	cpfsgt	_uart2RxTail,c
  8061  014500  D001               	goto	l692
  8062                           
  8063                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  8064  014502  6A32               	clrf	_uart2RxTail,c	;volatile
  8065  014504                     l692:
  8066                           
  8067                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  8068  014504  0139               	movlb	57	; () banked
  8069  014506  9596               	bcf	150,2,b	;volatile
  8070                           
  8071                           ; BSR set to: 57
  8072                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  8073  014508  0631               	decf	_uart2RxCount,f,c	;volatile
  8074                           
  8075                           ; BSR set to: 57
  8076                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  8077  01450A  8596               	bsf	150,2,b	;volatile
  8078                           
  8079                           ; BSR set to: 57
  8080                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  8081                           ;stkvar	_readValue @ sp[(-1)+0]
  8082  01450C  0EFF               	movlw	-1
  8083  01450E  006F FF8C  F03D    	movff	plusw1,btemp
  8084                           
  8085                           ; BSR set to: 57
  8086                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8087  014514  52E5               	movf	postdec1,f,c
  8088  014516  0012               	return		;funcret
  8089  014518                     __end_of_UART2_Read:
  8090                           	opt callstack 0
  8091                           
  8092 ;; *************** function _UART1_is_rx_ready *****************
  8093 ;; Defined at:
  8094 ;;		line 146 in file "mcc_generated_files/uart1.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;		None
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1  [STACK] unsigned char 
  8101 ;; Registers used:
  8102 ;;		btemp
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/3C
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8112 ;;Total ram usage:        0 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; Hardware stack levels required when called:    3
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_m_protocol
  8119 ;;		_r_protocol
  8120 ;;		_t_protocol
  8121 ;; This function uses a reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text22
  8125  014CCA                     __ptext22:
  8126                           	opt callstack 0
  8127  014CCA                     _UART1_is_rx_ready:
  8128                           	opt callstack 26
  8129                           
  8130                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  8131                           
  8132                           ; BSR set to: 57
  8133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8134                           ;incstack = 0
  8135  014CCA  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  8136                           
  8137                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  8138  014CD0  0012               	return		;funcret
  8139  014CD2                     __end_of_UART1_is_rx_ready:
  8140                           	opt callstack 0
  8141                           
  8142 ;; *************** function _UART1_Read *****************
  8143 ;; Defined at:
  8144 ;;		line 161 in file "mcc_generated_files/uart1.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;  readValue       1  [STACK] unsigned char 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1  [STACK] unsigned char 
  8151 ;; Registers used:
  8152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/3C
  8155 ;;		On exit  : 3F/39
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8162 ;;Total ram usage:        0 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    3
  8165 ;; This function calls:
  8166 ;;		Nothing
  8167 ;; This function is called by:
  8168 ;;		_m_protocol
  8169 ;;		_r_protocol
  8170 ;;		_t_protocol
  8171 ;; This function uses a reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text23
  8175  014518                     __ptext23:
  8176                           	opt callstack 0
  8177  014518                     _UART1_Read:
  8178                           	opt callstack 0
  8179                           
  8180                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8181  014518  52E6               	movf	postinc1,f,c
  8182  01451A                     
  8183                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  8184                           
  8185                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  8186  01451A  5037               	movf	_uart1RxCount,w,c	;volatile
  8187  01451C  B4D8               	btfsc	status,2,c
  8188  01451E  D7FD               	goto	l6348
  8189                           
  8190                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  8191  014520  0E80               	movlw	low _uart1RxBuffer
  8192  014522  2438               	addwf	_uart1RxTail,w,c	;volatile
  8193  014524  6ED9               	movwf	fsr2l,c
  8194  014526  6ADA               	clrf	fsr2h,c
  8195  014528  0E02               	movlw	high _uart1RxBuffer
  8196  01452A  22DA               	addwfc	fsr2h,f,c
  8197  01452C  50DF               	movf	indf2,w,c
  8198  01452E  6E48               	movwf	btemp+11,c
  8199                           
  8200                           ;stkvar	_readValue @ sp[(-1)+0]
  8201  014530  0EFF               	movlw	-1
  8202  014532  0060  F123  FFE3   	movff	btemp+11,plusw1
  8203  014538  2A38               	incf	_uart1RxTail,f,c	;volatile
  8204                           
  8205                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  8206  01453A  0E3F               	movlw	63
  8207  01453C  6438               	cpfsgt	_uart1RxTail,c
  8208  01453E  D001               	goto	l572
  8209                           
  8210                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  8211  014540  6A38               	clrf	_uart1RxTail,c	;volatile
  8212  014542                     l572:
  8213                           
  8214                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  8215  014542  0139               	movlb	57	; () banked
  8216  014544  9793               	bcf	147,3,b	;volatile
  8217                           
  8218                           ; BSR set to: 57
  8219                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  8220  014546  0637               	decf	_uart1RxCount,f,c	;volatile
  8221                           
  8222                           ; BSR set to: 57
  8223                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  8224  014548  8793               	bsf	147,3,b	;volatile
  8225                           
  8226                           ; BSR set to: 57
  8227                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  8228                           ;stkvar	_readValue @ sp[(-1)+0]
  8229  01454A  0EFF               	movlw	-1
  8230  01454C  006F FF8C  F03D    	movff	plusw1,btemp
  8231                           
  8232                           ; BSR set to: 57
  8233                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8234  014552  52E5               	movf	postdec1,f,c
  8235  014554  0012               	return		;funcret
  8236  014556                     __end_of_UART1_Read:
  8237                           	opt callstack 0
  8238                           
  8239 ;; *************** function _init_display *****************
  8240 ;; Defined at:
  8241 ;;		line 35 in file "eadog.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;		None
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1  [STACK] void 
  8248 ;; Registers used:
  8249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/3C
  8252 ;;		On exit  : 3F/3D
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;Total ram usage:        0 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; Hardware stack levels required when called:    5
  8262 ;; This function calls:
  8263 ;;		_ringBufS_init
  8264 ;;		_send_lcd_cmd
  8265 ;;		_send_lcd_cmd_long
  8266 ;;		_wdtdelay
  8267 ;; This function is called by:
  8268 ;;		_main
  8269 ;; This function uses a reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text24
  8273  01365A                     __ptext24:
  8274                           	opt callstack 0
  8275  01365A                     _init_display:
  8276                           	opt callstack 25
  8277                           
  8278                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  8279                           
  8280                           ; BSR set to: 57
  8281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8282                           ;incstack = 0
  8283  01365A  0E43               	movlw	low _ring_buf1
  8284  01365C  0100               	movlb	0	; () banked
  8285  01365E  6FCB               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8286  013660  0E03               	movlw	high _ring_buf1
  8287  013662  6FCC               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8288                           
  8289                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  8290  013664  0E00               	movlw	low _ring_buf2
  8291  013666  6FC9               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8292  013668  0E03               	movlw	high _ring_buf2
  8293  01366A  6FCA               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  8297  01366C  0060  F32F  FFE6   	movff	_spi_link+6,postinc1
  8298  013672  0060  F333  FFE6   	movff	_spi_link+7,postinc1
  8299  013678  ECC2  F0A3         	call	_ringBufS_init	;wreg free
  8300                           
  8301                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  8302  01367C  0060  F327  FFE6   	movff	_spi_link+4,postinc1
  8303  013682  0060  F32B  FFE6   	movff	_spi_link+5,postinc1
  8304  013688  ECC2  F0A3         	call	_ringBufS_init	;wreg free
  8305                           
  8306                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  8307  01368C  80BE               	bsf	16318,0,c	;volatile
  8308  01368E  84BC               	bsf	16316,2,c	;volatile
  8309                           
  8310                           ;eadog.c: 44:  wdtdelay(350000);
  8311  013690  0E30               	movlw	48
  8312  013692  6EE6               	movwf	postinc1,c
  8313  013694  0E57               	movlw	87
  8314  013696  6EE6               	movwf	postinc1,c
  8315  013698  0E05               	movlw	5
  8316  01369A  6EE6               	movwf	postinc1,c
  8317  01369C  0E00               	movlw	0
  8318  01369E  6EE6               	movwf	postinc1,c
  8319  0136A0  EC6C  F0A0         	call	_wdtdelay	;wreg free
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  8323  0136A4  0E39               	movlw	57
  8324  0136A6  6EE6               	movwf	postinc1,c
  8325  0136A8  ECAE  F0A3         	call	_send_lcd_cmd	;wreg free
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  8329  0136AC  0E1D               	movlw	29
  8330  0136AE  6EE6               	movwf	postinc1,c
  8331  0136B0  ECAE  F0A3         	call	_send_lcd_cmd	;wreg free
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  8335  0136B4  0E50               	movlw	80
  8336  0136B6  6EE6               	movwf	postinc1,c
  8337  0136B8  ECAE  F0A3         	call	_send_lcd_cmd	;wreg free
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  8341  0136BC  0E6C               	movlw	108
  8342  0136BE  6EE6               	movwf	postinc1,c
  8343  0136C0  ECAE  F0A3         	call	_send_lcd_cmd	;wreg free
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  8347  0136C4  0E76               	movlw	118
  8348  0136C6  6EE6               	movwf	postinc1,c
  8349  0136C8  ECAE  F0A3         	call	_send_lcd_cmd	;wreg free
  8350                           
  8351                           ; BSR set to: 0
  8352                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  8353  0136CC  0E38               	movlw	56
  8354  0136CE  6EE6               	movwf	postinc1,c
  8355  0136D0  EC9A  F0A3         	call	_send_lcd_cmd_long	;wreg free
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  8359  0136D4  0E0F               	movlw	15
  8360  0136D6  6EE6               	movwf	postinc1,c
  8361  0136D8  ECAE  F0A3         	call	_send_lcd_cmd	;wreg free
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  8365  0136DC  0E01               	movlw	1
  8366  0136DE  6EE6               	movwf	postinc1,c
  8367  0136E0  EC9A  F0A3         	call	_send_lcd_cmd_long	;wreg free
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  8371  0136E4  0E02               	movlw	2
  8372  0136E6  6EE6               	movwf	postinc1,c
  8373  0136E8  ECAE  F0A3         	call	_send_lcd_cmd	;wreg free
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  8377  0136EC  0E06               	movlw	6
  8378  0136EE  6EE6               	movwf	postinc1,c
  8379  0136F0  ECAE  F0A3         	call	_send_lcd_cmd	;wreg free
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;eadog.c: 55:  wdtdelay(30);
  8383  0136F4  0E1E               	movlw	30
  8384  0136F6  6EE6               	movwf	postinc1,c
  8385  0136F8  0E00               	movlw	0
  8386  0136FA  6EE6               	movwf	postinc1,c
  8387  0136FC  0E00               	movlw	0
  8388  0136FE  6EE6               	movwf	postinc1,c
  8389  013700  0E00               	movlw	0
  8390  013702  6EE6               	movwf	postinc1,c
  8391  013704  EC6C  F0A0         	call	_wdtdelay	;wreg free
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  8395  013708  0E02               	movlw	2
  8396  01370A  013D               	movlb	61	; () banked
  8397  01370C  6F16               	movwf	22,b	;volatile
  8398                           
  8399                           ; BSR set to: 61
  8400                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  8401  01370E  0E40               	movlw	64
  8402  013710  6F15               	movwf	21,b	;volatile
  8403                           
  8404                           ; BSR set to: 61
  8405                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  8406  013712  0E83               	movlw	131
  8407  013714  6F14               	movwf	20,b	;volatile
  8408                           
  8409                           ; BSR set to: 61
  8410                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  8411  013716  931A               	bcf	26,1,b	;volatile
  8412                           
  8413                           ; BSR set to: 61
  8414                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  8415  013718  0E3F               	movlw	-193
  8416  01371A  013B               	movlb	59	; () banked
  8417  01371C  17FD               	andwf	253,f,b	;volatile
  8418                           
  8419                           ; BSR set to: 59
  8420                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  8421  01371E  9BFD               	bcf	253,5,b	;volatile
  8422                           
  8423                           ; BSR set to: 59
  8424                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  8425  013720  51FD               	movf	253,w,b	;volatile
  8426  013722  0BF9               	andlw	-7
  8427  013724  0902               	iorlw	2
  8428  013726  6FFD               	movwf	253,b	;volatile
  8429                           
  8430                           ; BSR set to: 59
  8431                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  8432  013728  0EE7               	movlw	-25
  8433  01372A  17FD               	andwf	253,f,b	;volatile
  8434                           
  8435                           ; BSR set to: 59
  8436                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  8437  01372C  81FD               	bsf	253,0,b	;volatile
  8438                           
  8439                           ; BSR set to: 59
  8440                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  8441  01372E  0E43               	movlw	low _ring_buf1
  8442  013730  6FF9               	movwf	249,b	;volatile
  8443  013732  0E03               	movlw	high _ring_buf1
  8444  013734  6FFA               	movwf	250,b	;volatile
  8445  013736  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8446  013738  6FFB               	movwf	251,b	;volatile
  8447                           
  8448                           ; BSR set to: 59
  8449                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  8450  01373A  9BFC               	bcf	252,5,b	;volatile
  8451                           
  8452                           ; BSR set to: 59
  8453                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  8454  01373C  013D               	movlb	61	; () banked
  8455  01373E  831A               	bsf	26,1,b	;volatile
  8456                           
  8457                           ; BSR set to: 61
  8458                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  8459  013740  90BE               	bcf	16318,0,c	;volatile
  8460                           
  8461                           ; BSR set to: 61
  8462                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8463  013742  0012               	return		;funcret
  8464  013744                     __end_of_init_display:
  8465                           	opt callstack 0
  8466                           
  8467 ;; *************** function _send_lcd_cmd_long *****************
  8468 ;; Defined at:
  8469 ;;		line 97 in file "eadog.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  cmd             1  [STACK] unsigned char 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;		None
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1  [STACK] void 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8478 ;; Tracked objects:
  8479 ;;		On entry : 3F/0
  8480 ;;		On exit  : 3F/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8487 ;;Total ram usage:        0 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    4
  8490 ;; This function calls:
  8491 ;;		_SPI1_Exchange8bit
  8492 ;;		_wdtdelay
  8493 ;; This function is called by:
  8494 ;;		_init_display
  8495 ;; This function uses a reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text25
  8499  014734                     __ptext25:
  8500                           	opt callstack 0
  8501  014734                     _send_lcd_cmd_long:
  8502                           	opt callstack 25
  8503                           
  8504                           ; BSR set to: 61
  8505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8506                           ;incstack = 0
  8507                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  8508  014734  92BC               	bcf	16316,1,c	;volatile
  8509                           
  8510                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  8511  014736  94BC               	bcf	16316,2,c	;volatile
  8512                           
  8513                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  8514                           ;stkvar	_cmd @ sp[(0)+-1]
  8515  014738  0EFF               	movlw	-1
  8516  01473A  50E3               	movf	plusw1,w,c
  8517  01473C  6EE6               	movwf	postinc1,c
  8518  01473E  EC9B  F0A5         	call	_SPI1_Exchange8bit	;wreg free
  8519                           
  8520                           ; BSR set to: 57
  8521                           ;eadog.c: 102:  wdtdelay(800);
  8522  014742  0E20               	movlw	32
  8523  014744  6EE6               	movwf	postinc1,c
  8524  014746  0E03               	movlw	3
  8525  014748  6EE6               	movwf	postinc1,c
  8526  01474A  0E00               	movlw	0
  8527  01474C  6EE6               	movwf	postinc1,c
  8528  01474E  0E00               	movlw	0
  8529  014750  6EE6               	movwf	postinc1,c
  8530  014752  EC6C  F0A0         	call	_wdtdelay	;wreg free
  8531                           
  8532                           ; BSR set to: 0
  8533  014756  82BC               	bsf	16316,1,c	;volatile
  8534                           
  8535                           ; BSR set to: 0
  8536                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8537  014758  52E5               	movf	postdec1,f,c
  8538  01475A  0012               	return		;funcret
  8539  01475C                     __end_of_send_lcd_cmd_long:
  8540                           	opt callstack 0
  8541                           
  8542 ;; *************** function _send_lcd_cmd *****************
  8543 ;; Defined at:
  8544 ;;		line 85 in file "eadog.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  cmd             1  [STACK] unsigned char 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1  [STACK] void 
  8551 ;; Registers used:
  8552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8553 ;; Tracked objects:
  8554 ;;		On entry : 3F/0
  8555 ;;		On exit  : 3F/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8562 ;;Total ram usage:        0 bytes
  8563 ;; Hardware stack levels used:    1
  8564 ;; Hardware stack levels required when called:    4
  8565 ;; This function calls:
  8566 ;;		_SPI1_Exchange8bit
  8567 ;;		_wdtdelay
  8568 ;; This function is called by:
  8569 ;;		_init_display
  8570 ;; This function uses a reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text26
  8574  01475C                     __ptext26:
  8575                           	opt callstack 0
  8576  01475C                     _send_lcd_cmd:
  8577                           	opt callstack 25
  8578                           
  8579                           ; BSR set to: 0
  8580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8581                           ;incstack = 0
  8582                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  8583  01475C  92BC               	bcf	16316,1,c	;volatile
  8584                           
  8585                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  8586  01475E  94BC               	bcf	16316,2,c	;volatile
  8587                           
  8588                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  8589                           ;stkvar	_cmd @ sp[(0)+-1]
  8590  014760  0EFF               	movlw	-1
  8591  014762  50E3               	movf	plusw1,w,c
  8592  014764  6EE6               	movwf	postinc1,c
  8593  014766  EC9B  F0A5         	call	_SPI1_Exchange8bit	;wreg free
  8594                           
  8595                           ; BSR set to: 57
  8596                           ;eadog.c: 90:  wdtdelay(30);
  8597  01476A  0E1E               	movlw	30
  8598  01476C  6EE6               	movwf	postinc1,c
  8599  01476E  0E00               	movlw	0
  8600  014770  6EE6               	movwf	postinc1,c
  8601  014772  0E00               	movlw	0
  8602  014774  6EE6               	movwf	postinc1,c
  8603  014776  0E00               	movlw	0
  8604  014778  6EE6               	movwf	postinc1,c
  8605  01477A  EC6C  F0A0         	call	_wdtdelay	;wreg free
  8606                           
  8607                           ; BSR set to: 0
  8608  01477E  82BC               	bsf	16316,1,c	;volatile
  8609                           
  8610                           ; BSR set to: 0
  8611                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8612  014780  52E5               	movf	postdec1,f,c
  8613  014782  0012               	return		;funcret
  8614  014784                     __end_of_send_lcd_cmd:
  8615                           	opt callstack 0
  8616                           
  8617 ;; *************** function _SPI1_Exchange8bit *****************
  8618 ;; Defined at:
  8619 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;  data            1  [STACK] unsigned char 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1  [STACK] unsigned char 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 3F/39
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8637 ;;Total ram usage:        0 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    3
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_send_lcd_cmd
  8644 ;;		_send_lcd_cmd_long
  8645 ;; This function uses a reentrant model
  8646 ;;
  8647                           
  8648                           	psect	text27
  8649  014B36                     __ptext27:
  8650                           	opt callstack 0
  8651  014B36                     _SPI1_Exchange8bit:
  8652                           	opt callstack 25
  8653                           
  8654                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8655                           
  8656                           ; BSR set to: 0
  8657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8658                           ;incstack = 0
  8659  014B36  0E01               	movlw	1
  8660  014B38  013D               	movlb	61	; () banked
  8661  014B3A  6F12               	movwf	18,b	;volatile
  8662                           
  8663                           ; BSR set to: 61
  8664                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8665                           ;stkvar	_data @ sp[(0)+-1]
  8666  014B3C  0EFF               	movlw	-1
  8667  014B3E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8668  014B44                     l851:
  8669                           
  8670                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8671  014B44  0139               	movlb	57	; () banked
  8672  014B46  A9A2               	btfss	162,4,b	;volatile
  8673  014B48  D7FD               	goto	l851
  8674                           
  8675                           ; BSR set to: 57
  8676                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8677  014B4A  006F F440  F03D    	movff	15632,btemp	;volatile
  8678                           
  8679                           ; BSR set to: 57
  8680                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8681  014B50  52E5               	movf	postdec1,f,c
  8682  014B52  0012               	return		;funcret
  8683  014B54                     __end_of_SPI1_Exchange8bit:
  8684                           	opt callstack 0
  8685                           
  8686 ;; *************** function _ringBufS_init *****************
  8687 ;; Defined at:
  8688 ;;		line 22 in file "ringbufs.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  _this           2  [STACK] PTR volatile struct ring
  8691 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;		None
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  1  [STACK] void 
  8696 ;; Registers used:
  8697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8707 ;;Total ram usage:        0 bytes
  8708 ;; Hardware stack levels used:    1
  8709 ;; Hardware stack levels required when called:    4
  8710 ;; This function calls:
  8711 ;;		_memset
  8712 ;; This function is called by:
  8713 ;;		_init_display
  8714 ;; This function uses a reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text28
  8718  014784                     __ptext28:
  8719                           	opt callstack 0
  8720  014784                     _ringBufS_init:
  8721                           	opt callstack 25
  8722                           
  8723                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8724                           
  8725                           ; BSR set to: 57
  8726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8727                           ;incstack = 0
  8728  014784  0E43               	movlw	67
  8729  014786  6EE6               	movwf	postinc1,c
  8730  014788  0E00               	movlw	0
  8731  01478A  6EE6               	movwf	postinc1,c
  8732  01478C  0E00               	movlw	0
  8733  01478E  6EE6               	movwf	postinc1,c
  8734  014790  0E00               	movlw	0
  8735  014792  6EE6               	movwf	postinc1,c
  8736                           
  8737                           ;stkvar	__this @ sp[(-4)+-2]
  8738  014794  0EFA               	movlw	-6
  8739  014796  006F FF8F FFE6     	movff	plusw1,postinc1
  8740  01479C  006F FF8F FFE6     	movff	plusw1,postinc1
  8741  0147A2  EC36  F08F         	call	_memset	;wreg free
  8742                           
  8743                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8744  0147A6  52E5               	movf	postdec1,f,c
  8745  0147A8  52E5               	movf	postdec1,f,c
  8746  0147AA  0012               	return		;funcret
  8747  0147AC                     __end_of_ringBufS_init:
  8748                           	opt callstack 0
  8749                           
  8750 ;; *************** function _hb_message *****************
  8751 ;; Defined at:
  8752 ;;		line 502 in file "gemsecs.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;		None
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;		None
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  1  [STACK] void 
  8759 ;; Registers used:
  8760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/3B
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8770 ;;Total ram usage:        0 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; Hardware stack levels required when called:    3
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_main
  8777 ;; This function uses a reentrant model
  8778 ;;
  8779                           
  8780                           	psect	text29
  8781  0141DA                     __ptext29:
  8782                           	opt callstack 0
  8783  0141DA                     _hb_message:
  8784                           	opt callstack 27
  8785                           
  8786                           ;gemsecs.c: 504:  V.ping++;
  8787                           
  8788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8789                           ;incstack = 0
  8790  0141DA  EE21  F0F2         	lfsr	2,_V+252	;volatile
  8791  0141DE  2ADE               	incf	postinc2,f,c
  8792  0141E0  0E00               	movlw	0
  8793  0141E2  22DD               	addwfc	postdec2,f,c
  8794                           
  8795                           ;gemsecs.c: 505:  V.s_state = SEQ_STATE_TX;
  8796  0141E4  0E02               	movlw	2
  8797  0141E6  006F FFA0  F3F6    	movff	wreg,_V
  8798                           
  8799                           ;gemsecs.c: 506:  V.failed_send = 0;
  8800  0141EC  EE21  F0F4         	lfsr	2,_V+254	;volatile
  8801  0141F0  0E87               	movlw	-121
  8802  0141F2  16DF               	andwf	223,f,c
  8803                           
  8804                           ;gemsecs.c: 507:  V.t_l_state = LINK_STATE_IDLE;
  8805  0141F4  0E00               	movlw	0
  8806  0141F6  006F FFA0  F3FB    	movff	wreg,_V+5	;volatile
  8807                           
  8808                           ;gemsecs.c: 508:  if (V.msg_error == MSG_ERROR_NONE) {
  8809  0141FC  EE21  F0E8         	lfsr	2,_V+242	;volatile
  8810  014200  50DF               	movf	indf2,w,c
  8811  014202  A4D8               	btfss	status,2,c
  8812  014204  D009               	goto	l1754
  8813                           
  8814                           ;gemsecs.c: 509:   V.stream = 1;
  8815  014206  0E01               	movlw	1
  8816  014208  006F FFA0  F4E4    	movff	wreg,_V+238	;volatile
  8817                           
  8818                           ;gemsecs.c: 510:   V.function = 2;
  8819  01420E  0E02               	movlw	2
  8820  014210  006F FFA0  F4E5    	movff	wreg,_V+239	;volatile
  8821                           
  8822                           ;gemsecs.c: 511:  } else {
  8823  014216  0012               	return	
  8824  014218                     l1754:
  8825                           
  8826                           ;gemsecs.c: 512:   V.stream = 1;
  8827  014218  0E01               	movlw	1
  8828  01421A  006F FFA0  F4E4    	movff	wreg,_V+238	;volatile
  8829                           
  8830                           ;gemsecs.c: 513:   V.function = 14;
  8831  014220  0E0E               	movlw	14
  8832  014222  006F FFA0  F4E5    	movff	wreg,_V+239	;volatile
  8833                           
  8834                           ; _hb_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8835  014228  0012               	return		;funcret
  8836  01422A                     __end_of_hb_message:
  8837                           	opt callstack 0
  8838                           
  8839 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8840 ;; Defined at:
  8841 ;;		line 223 in file "eadog.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  r               1  [STACK] unsigned char 
  8844 ;;  c               1  [STACK] unsigned char 
  8845 ;;  strPtr          2  [STACK] PTR unsigned char 
  8846 ;;		 -> V(261), 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1  [STACK] void 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  8853 ;; Tracked objects:
  8854 ;;		On entry : 3F/0
  8855 ;;		On exit  : 3F/3B
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8862 ;;Total ram usage:        0 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:   13
  8865 ;; This function calls:
  8866 ;;		_eaDogM_WriteString
  8867 ;;		_send_lcd_cmd_dma
  8868 ;; This function is called by:
  8869 ;;		_main
  8870 ;; This function uses a reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text30
  8874  0145C8                     __ptext30:
  8875                           	opt callstack 0
  8876  0145C8                     _eaDogM_WriteStringAtPos:
  8877                           	opt callstack 17
  8878                           
  8879                           ;eadog.c: 223: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           224: {;eadog.c: 225:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8880                           ;stkvar	_c @ sp[(0)+-2]
  8881                           
  8882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8883                           ;incstack = 0
  8884  0145C8  0EFE               	movlw	-2
  8885  0145CA  006F FF8C  F048    	movff	plusw1,btemp+11
  8886                           
  8887                           ;stkvar	_r @ sp[(0)+-1]
  8888  0145D0  0EFF               	movlw	-1
  8889  0145D2  50E3               	movf	plusw1,w,c
  8890  0145D4  0D10               	mullw	16
  8891  0145D6  50F3               	movf	prodl,w,c
  8892  0145D8  2448               	addwf	btemp+11,w,c
  8893  0145DA  0F80               	addlw	128
  8894  0145DC  6EE6               	movwf	postinc1,c
  8895  0145DE  EC9A  F0A0         	call	_send_lcd_cmd_dma	;wreg free
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;eadog.c: 226:  eaDogM_WriteString(strPtr);
  8899                           ;stkvar	_strPtr @ sp[(0)+-4]
  8900  0145E2  0EFC               	movlw	-4
  8901  0145E4  006F FF8F FFE6     	movff	plusw1,postinc1
  8902  0145EA  006F FF8F FFE6     	movff	plusw1,postinc1
  8903  0145F0  EC17  F09D         	call	_eaDogM_WriteString	;wreg free
  8904                           
  8905                           ; BSR set to: 59
  8906                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8907  0145F4  52E5               	movf	postdec1,f,c
  8908  0145F6  52E5               	movf	postdec1,f,c
  8909  0145F8  52E5               	movf	postdec1,f,c
  8910  0145FA  52E5               	movf	postdec1,f,c
  8911  0145FC  0012               	return		;funcret
  8912  0145FE                     __end_of_eaDogM_WriteStringAtPos:
  8913                           	opt callstack 0
  8914                           
  8915 ;; *************** function _eaDogM_WriteString *****************
  8916 ;; Defined at:
  8917 ;;		line 167 in file "eadog.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;  strPtr          2  [STACK] PTR unsigned char 
  8920 ;;		 -> V(261), 
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;		None
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  1  [STACK] void 
  8925 ;; Registers used:
  8926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8927 ;; Tracked objects:
  8928 ;;		On entry : 3F/0
  8929 ;;		On exit  : 3F/3B
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8936 ;;Total ram usage:        0 bytes
  8937 ;; Hardware stack levels used:    1
  8938 ;; Hardware stack levels required when called:   12
  8939 ;; This function calls:
  8940 ;;		_printf
  8941 ;;		_ringBufS_flush
  8942 ;;		_start_lcd
  8943 ;;		_strlen
  8944 ;;		_wait_lcd_set
  8945 ;; This function is called by:
  8946 ;;		_eaDogM_WriteStringAtPos
  8947 ;; This function uses a reentrant model
  8948 ;;
  8949                           
  8950                           	psect	text31
  8951  013A2E                     __ptext31:
  8952                           	opt callstack 0
  8953  013A2E                     _eaDogM_WriteString:
  8954                           	opt callstack 17
  8955                           
  8956                           ; BSR set to: 59
  8957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8958                           ;incstack = 0
  8959                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  8960  013A2E  82BE               	bsf	16318,1,c	;volatile
  8961                           
  8962                           ;eadog.c: 170:  wait_lcd_set();
  8963  013A30  EC69  F0A6         	call	_wait_lcd_set	;wreg free
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;eadog.c: 172:  ringBufS_flush(spi_link.tx1a, 0);
  8967  013A34  0E00               	movlw	0
  8968  013A36  6EE6               	movwf	postinc1,c
  8969  013A38  0060  F32F  FFE6   	movff	_spi_link+6,postinc1
  8970  013A3E  0060  F333  FFE6   	movff	_spi_link+7,postinc1
  8971  013A44  ECAD  F09E         	call	_ringBufS_flush	;wreg free
  8972  013A48  94BC               	bcf	16316,2,c	;volatile
  8973                           
  8974                           ;eadog.c: 174:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8975                           ;stkvar	_strPtr @ sp[(0)+-2]
  8976  013A4A  0EFE               	movlw	-2
  8977  013A4C  006F FF8F FFE6     	movff	plusw1,postinc1
  8978  013A52  006F FF8F FFE6     	movff	plusw1,postinc1
  8979  013A58  EC10  F09E         	call	_strlen	;wreg free
  8980  013A5C  503E               	movf	btemp+1,w,c
  8981  013A5E  E104               	bnz	u5310
  8982  013A60  0E41               	movlw	65
  8983  013A62  5C3D               	subwf	btemp,w,c
  8984  013A64  A0D8               	btfss	status,0,c
  8985  013A66  D010               	goto	l8508
  8986  013A68                     u5310:
  8987                           
  8988                           ;stkvar	_strPtr @ sp[(0)+-2]
  8989  013A68  0EFE               	movlw	-2
  8990  013A6A  006F FF8C  F047    	movff	plusw1,btemp+10
  8991  013A70  0EFF               	movlw	-1
  8992  013A72  006F FF8C  F048    	movff	plusw1,btemp+11
  8993  013A78  0E40               	movlw	64
  8994  013A7A  2447               	addwf	btemp+10,w,c
  8995  013A7C  6ED9               	movwf	fsr2l,c
  8996  013A7E  0E00               	movlw	0
  8997  013A80  2048               	addwfc	btemp+11,w,c
  8998  013A82  6EDA               	movwf	fsr2h,c
  8999  013A84  0E00               	movlw	0
  9000  013A86  6EDF               	movwf	indf2,c
  9001  013A88                     l8508:
  9002                           
  9003                           ;eadog.c: 175:  DMA1CON0bits.EN = 0;
  9004  013A88  013B               	movlb	59	; () banked
  9005  013A8A  9FFC               	bcf	252,7,b	;volatile
  9006                           
  9007                           ; BSR set to: 59
  9008                           ;eadog.c: 176:  DMA1SSZ = strlen(strPtr);
  9009                           ;stkvar	_strPtr @ sp[(0)+-2]
  9010  013A8C  0EFE               	movlw	-2
  9011  013A8E  006F FF8F FFE6     	movff	plusw1,postinc1
  9012  013A94  006F FF8F FFE6     	movff	plusw1,postinc1
  9013  013A9A  EC10  F09E         	call	_strlen	;wreg free
  9014  013A9E  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  9015  013AA4  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  9016                           
  9017                           ;eadog.c: 177:  DMA1CON0bits.EN = 1;
  9018  013AAA  013B               	movlb	59	; () banked
  9019  013AAC  8FFC               	bsf	252,7,b	;volatile
  9020                           
  9021                           ; BSR set to: 59
  9022                           ;eadog.c: 178:  printf("%s", strPtr);
  9023                           ;stkvar	_strPtr @ sp[(0)+-2]
  9024  013AAE  0EFE               	movlw	-2
  9025  013AB0  006F FF8F FFE6     	movff	plusw1,postinc1
  9026  013AB6  006F FF8F FFE6     	movff	plusw1,postinc1
  9027  013ABC  0EE1               	movlw	low (STR_2+9)
  9028  013ABE  6EE6               	movwf	postinc1,c
  9029  013AC0  0EFF               	movlw	high (STR_2+9)
  9030  013AC2  6EE6               	movwf	postinc1,c
  9031  013AC4  0E04               	movlw	4
  9032  013AC6  6EE6               	movwf	postinc1,c
  9033  013AC8  EC0C  F0A0         	call	_printf	;wreg free
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;eadog.c: 179:  start_lcd();
  9037  013ACC  EC6C  F0A6         	call	_start_lcd	;wreg free
  9038                           
  9039                           ; BSR set to: 59
  9040                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9041  013AD0  52E5               	movf	postdec1,f,c
  9042  013AD2  52E5               	movf	postdec1,f,c
  9043  013AD4  0012               	return		;funcret
  9044  013AD6                     __end_of_eaDogM_WriteString:
  9045                           	opt callstack 0
  9046                           
  9047 ;; *************** function _eaDogM_WriteCommand *****************
  9048 ;; Defined at:
  9049 ;;		line 143 in file "eadog.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  cmd             1  [STACK] unsigned char 
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1  [STACK] void 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9058 ;; Tracked objects:
  9059 ;;		On entry : 3F/3D
  9060 ;;		On exit  : 3F/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:   13
  9070 ;; This function calls:
  9071 ;;		_send_lcd_cmd_dma
  9072 ;; This function is called by:
  9073 ;;		_main
  9074 ;; This function uses a reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text32
  9078  014C48                     __ptext32:
  9079                           	opt callstack 0
  9080  014C48                     _eaDogM_WriteCommand:
  9081                           	opt callstack 17
  9082                           
  9083                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  9084                           ;stkvar	_cmd @ sp[(0)+-1]
  9085                           
  9086                           ; BSR set to: 59
  9087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9088                           ;incstack = 0
  9089  014C48  0EFF               	movlw	-1
  9090  014C4A  50E3               	movf	plusw1,w,c
  9091  014C4C  6EE6               	movwf	postinc1,c
  9092  014C4E  EC9A  F0A0         	call	_send_lcd_cmd_dma	;wreg free
  9093                           
  9094                           ; BSR set to: 0
  9095                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9096  014C52  52E5               	movf	postdec1,f,c
  9097  014C54  0012               	return		;funcret
  9098  014C56                     __end_of_eaDogM_WriteCommand:
  9099                           	opt callstack 0
  9100                           
  9101 ;; *************** function _send_lcd_cmd_dma *****************
  9102 ;; Defined at:
  9103 ;;		line 188 in file "eadog.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  strPtr          1  [STACK] unsigned char 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1  [STACK] void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 3F/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:   12
  9124 ;; This function calls:
  9125 ;;		_printf
  9126 ;;		_ringBufS_flush
  9127 ;;		_start_lcd
  9128 ;;		_wait_lcd_done
  9129 ;;		_wait_lcd_set
  9130 ;; This function is called by:
  9131 ;;		_eaDogM_WriteCommand
  9132 ;;		_eaDogM_WriteStringAtPos
  9133 ;; This function uses a reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text33
  9137  014134                     __ptext33:
  9138                           	opt callstack 0
  9139  014134                     _send_lcd_cmd_dma:
  9140                           	opt callstack 17
  9141                           
  9142                           ; BSR set to: 0
  9143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9144                           ;incstack = 0
  9145                           ;eadog.c: 188: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 189: {;eadog.c: 190:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  9146  014134  82BE               	bsf	16318,1,c	;volatile
  9147                           
  9148                           ;eadog.c: 191:  wait_lcd_set();
  9149  014136  EC69  F0A6         	call	_wait_lcd_set	;wreg free
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;eadog.c: 193:  ringBufS_flush(spi_link.tx1a, 0);
  9153  01413A  0E00               	movlw	0
  9154  01413C  6EE6               	movwf	postinc1,c
  9155  01413E  0060  F32F  FFE6   	movff	_spi_link+6,postinc1
  9156  014144  0060  F333  FFE6   	movff	_spi_link+7,postinc1
  9157  01414A  ECAD  F09E         	call	_ringBufS_flush	;wreg free
  9158  01414E  92BC               	bcf	16316,1,c	;volatile
  9159  014150  94BC               	bcf	16316,2,c	;volatile
  9160                           
  9161                           ;eadog.c: 196:  DMA1CON0bits.EN = 0;
  9162  014152  013B               	movlb	59	; () banked
  9163  014154  9FFC               	bcf	252,7,b	;volatile
  9164                           
  9165                           ; BSR set to: 59
  9166                           ;eadog.c: 197:  DMA1SSZ = 1;
  9167  014156  0E00               	movlw	0
  9168  014158  6FF8               	movwf	248,b	;volatile
  9169  01415A  0E01               	movlw	1
  9170  01415C  6FF7               	movwf	247,b	;volatile
  9171                           
  9172                           ; BSR set to: 59
  9173                           ;eadog.c: 198:  DMA1CON0bits.EN = 1;
  9174  01415E  8FFC               	bsf	252,7,b	;volatile
  9175                           
  9176                           ; BSR set to: 59
  9177                           ;eadog.c: 199:  printf("%c", strPtr);
  9178                           ;stkvar	_strPtr @ sp[(0)+-1]
  9179  014160  0EFF               	movlw	-1
  9180  014162  50E3               	movf	plusw1,w,c
  9181  014164  6EE6               	movwf	postinc1,c
  9182  014166  0E00               	movlw	0
  9183  014168  6EE6               	movwf	postinc1,c
  9184  01416A  0EFC               	movlw	low STR_19
  9185  01416C  6EE6               	movwf	postinc1,c
  9186  01416E  0EFF               	movlw	high STR_19
  9187  014170  6EE6               	movwf	postinc1,c
  9188  014172  0E04               	movlw	4
  9189  014174  6EE6               	movwf	postinc1,c
  9190  014176  EC0C  F0A0         	call	_printf	;wreg free
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;eadog.c: 200:  start_lcd();
  9194  01417A  EC6C  F0A6         	call	_start_lcd	;wreg free
  9195                           
  9196                           ; BSR set to: 59
  9197                           ;eadog.c: 201:  wait_lcd_done();
  9198  01417E  ECAA  F0A5         	call	_wait_lcd_done	;wreg free
  9199                           
  9200                           ; BSR set to: 0
  9201  014182  82BC               	bsf	16316,1,c	;volatile
  9202                           
  9203                           ; BSR set to: 0
  9204                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9205  014184  52E5               	movf	postdec1,f,c
  9206  014186  0012               	return		;funcret
  9207  014188                     __end_of_send_lcd_cmd_dma:
  9208                           	opt callstack 0
  9209                           
  9210 ;; *************** function _wait_lcd_set *****************
  9211 ;; Defined at:
  9212 ;;		line 114 in file "eadog.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;		None
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;		None
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1  [STACK] void 
  9219 ;; Registers used:
  9220 ;;		None
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 3F/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9230 ;;Total ram usage:        0 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:    3
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_eaDogM_WriteString
  9237 ;;		_send_lcd_cmd_dma
  9238 ;; This function uses a reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text34
  9242  014CD2                     __ptext34:
  9243                           	opt callstack 0
  9244  014CD2                     _wait_lcd_set:
  9245                           	opt callstack 25
  9246                           
  9247                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  9248                           
  9249                           ; BSR set to: 0
  9250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9251                           ;incstack = 0
  9252  014CD2  0100               	movlb	0	; () banked
  9253  014CD4  87C5               	bsf	_spi_link& (0+255),3,b	;volatile
  9254                           
  9255                           ; BSR set to: 0
  9256                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9257  014CD6  0012               	return		;funcret
  9258  014CD8                     __end_of_wait_lcd_set:
  9259                           	opt callstack 0
  9260                           
  9261 ;; *************** function _wait_lcd_done *****************
  9262 ;; Defined at:
  9263 ;;		line 124 in file "eadog.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;		None
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;		None
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1  [STACK] void 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9272 ;; Tracked objects:
  9273 ;;		On entry : 4/0
  9274 ;;		On exit  : 3F/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9281 ;;Total ram usage:        0 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    4
  9284 ;; This function calls:
  9285 ;;		_wdtdelay
  9286 ;; This function is called by:
  9287 ;;		_main
  9288 ;;		_send_lcd_cmd_dma
  9289 ;; This function uses a reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text35
  9293  014B54                     __ptext35:
  9294                           	opt callstack 0
  9295  014B54                     _wait_lcd_done:
  9296                           	opt callstack 26
  9297                           
  9298                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  9299                           
  9300                           ; BSR set to: 0
  9301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9302                           ;incstack = 0
  9303  014B54  0100               	movlb	0	; () banked
  9304  014B56  B7C5               	btfsc	_spi_link& (0+255),3,b	;volatile
  9305  014B58  D7FD               	goto	_wait_lcd_done
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;eadog.c: 127:  wdtdelay(50);
  9309  014B5A  0E32               	movlw	50
  9310  014B5C  6EE6               	movwf	postinc1,c
  9311  014B5E  0E00               	movlw	0
  9312  014B60  6EE6               	movwf	postinc1,c
  9313  014B62  0E00               	movlw	0
  9314  014B64  6EE6               	movwf	postinc1,c
  9315  014B66  0E00               	movlw	0
  9316  014B68  6EE6               	movwf	postinc1,c
  9317  014B6A  EC6C  F0A0         	call	_wdtdelay	;wreg free
  9318                           
  9319                           ; BSR set to: 0
  9320                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9321  014B6E  0012               	return		;funcret
  9322  014B70                     __end_of_wait_lcd_done:
  9323                           	opt callstack 0
  9324                           
  9325 ;; *************** function _wdtdelay *****************
  9326 ;; Defined at:
  9327 ;;		line 21 in file "eadog.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  delay           4  [STACK] unsigned long 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;		None
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  1  [STACK] void 
  9334 ;; Registers used:
  9335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 3F/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9345 ;;Total ram usage:        0 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; Hardware stack levels required when called:    3
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_init_display
  9352 ;;		_send_lcd_cmd
  9353 ;;		_send_lcd_cmd_long
  9354 ;;		_wait_lcd_done
  9355 ;; This function uses a reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text36
  9359  0140D8                     __ptext36:
  9360                           	opt callstack 0
  9361  0140D8                     _wdtdelay:
  9362                           	opt callstack 26
  9363                           
  9364                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  9365                           
  9366                           ; BSR set to: 0
  9367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9368                           ;incstack = 0
  9369  0140D8  0100               	movlb	0	; () banked
  9370  0140DA  6BD8               	clrf	wdtdelay@dcount& (0+255),b
  9371  0140DC  6BD9               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9372  0140DE  6BDA               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9373  0140E0  6BDB               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9374  0140E2  D009               	goto	l5824
  9375  0140E4                     l1370:
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;eadog.c: 26:   __nop();
  9379  0140E4  F000               	nop	
  9380  0140E6  0004               	clrwdt		;# 
  9381                           
  9382                           ;eadog.c: 28:  };
  9383  0140E8  0E01               	movlw	1
  9384  0140EA  0100               	movlb	0	; () banked
  9385  0140EC  27D8               	addwf	wdtdelay@dcount& (0+255),f,b
  9386  0140EE  0E00               	movlw	0
  9387  0140F0  23D9               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9388  0140F2  23DA               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9389  0140F4  23DB               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9390  0140F6                     l5824:
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;stkvar	_delay @ sp[(0)+-4]
  9394  0140F6  0EFC               	movlw	-4
  9395  0140F8  006F FF8C  F03D    	movff	plusw1,btemp
  9396  0140FE  51D8               	movf	wdtdelay@dcount& (0+255),w,b
  9397  014100  5C3D               	subwf	btemp,w,c
  9398  014102  0EFD               	movlw	-3
  9399  014104  006F FF8C  F03D    	movff	plusw1,btemp
  9400  01410A  51D9               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9401  01410C  583D               	subwfb	btemp,w,c
  9402  01410E  0EFE               	movlw	-2
  9403  014110  006F FF8C  F03D    	movff	plusw1,btemp
  9404  014116  51DA               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9405  014118  583D               	subwfb	btemp,w,c
  9406  01411A  0EFF               	movlw	-1
  9407  01411C  006F FF8C  F03D    	movff	plusw1,btemp
  9408  014122  51DB               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9409  014124  583D               	subwfb	btemp,w,c
  9410  014126  B0D8               	btfsc	status,0,c
  9411  014128  D7DD               	goto	l1370
  9412                           
  9413                           ; BSR set to: 0
  9414                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9415  01412A  52E5               	movf	postdec1,f,c
  9416  01412C  52E5               	movf	postdec1,f,c
  9417  01412E  52E5               	movf	postdec1,f,c
  9418  014130  52E5               	movf	postdec1,f,c
  9419  014132  0012               	return		;funcret
  9420  014134                     __end_of_wdtdelay:
  9421                           	opt callstack 0
  9422                           
  9423 ;; *************** function _start_lcd *****************
  9424 ;; Defined at:
  9425 ;;		line 109 in file "eadog.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;		None
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;		None
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1  [STACK] void 
  9432 ;; Registers used:
  9433 ;;		None
  9434 ;; Tracked objects:
  9435 ;;		On entry : 3F/0
  9436 ;;		On exit  : 3F/3B
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;Total ram usage:        0 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:    3
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_eaDogM_WriteString
  9450 ;;		_send_lcd_cmd_dma
  9451 ;; This function uses a reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text37
  9455  014CD8                     __ptext37:
  9456                           	opt callstack 0
  9457  014CD8                     _start_lcd:
  9458                           	opt callstack 25
  9459                           
  9460                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  9461                           
  9462                           ; BSR set to: 0
  9463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9464                           ;incstack = 0
  9465  014CD8  013B               	movlb	59	; () banked
  9466  014CDA  8DFC               	bsf	252,6,b	;volatile
  9467                           
  9468                           ; BSR set to: 59
  9469                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9470  014CDC  0012               	return		;funcret
  9471  014CDE                     __end_of_start_lcd:
  9472                           	opt callstack 0
  9473                           
  9474 ;; *************** function _ringBufS_flush *****************
  9475 ;; Defined at:
  9476 ;;		line 76 in file "ringbufs.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9479 ;;		 -> ring_buf1(67), 
  9480 ;;  clearBuffer     1  [STACK] const char 
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;		None
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  1  [STACK] void 
  9485 ;; Registers used:
  9486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9487 ;; Tracked objects:
  9488 ;;		On entry : 3F/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9496 ;;Total ram usage:        0 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:    4
  9499 ;; This function calls:
  9500 ;;		_memset
  9501 ;; This function is called by:
  9502 ;;		_eaDogM_WriteString
  9503 ;;		_send_lcd_cmd_dma
  9504 ;; This function uses a reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text38
  9508  013D5A                     __ptext38:
  9509                           	opt callstack 0
  9510  013D5A                     _ringBufS_flush:
  9511                           	opt callstack 24
  9512                           
  9513                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9514                           ;stkvar	__this @ sp[(0)+-2]
  9515                           
  9516                           ; BSR set to: 59
  9517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9518                           ;incstack = 0
  9519  013D5A  0EFE               	movlw	-2
  9520  013D5C  006F FF8C  F047    	movff	plusw1,btemp+10
  9521  013D62  0EFF               	movlw	-1
  9522  013D64  006F FF8C  F048    	movff	plusw1,btemp+11
  9523  013D6A  0E42               	movlw	66
  9524  013D6C  2447               	addwf	btemp+10,w,c
  9525  013D6E  6ED9               	movwf	fsr2l,c
  9526  013D70  0E00               	movlw	0
  9527  013D72  2048               	addwfc	btemp+11,w,c
  9528  013D74  6EDA               	movwf	fsr2h,c
  9529  013D76  0E00               	movlw	0
  9530  013D78  6EDF               	movwf	indf2,c
  9531                           
  9532                           ;ringbufs.c: 79:  _this->head = 0;
  9533                           ;stkvar	__this @ sp[(0)+-2]
  9534  013D7A  0EFE               	movlw	-2
  9535  013D7C  006F FF8C  F047    	movff	plusw1,btemp+10
  9536  013D82  0EFF               	movlw	-1
  9537  013D84  006F FF8C  F048    	movff	plusw1,btemp+11
  9538  013D8A  0E40               	movlw	64
  9539  013D8C  2447               	addwf	btemp+10,w,c
  9540  013D8E  6ED9               	movwf	fsr2l,c
  9541  013D90  0E00               	movlw	0
  9542  013D92  2048               	addwfc	btemp+11,w,c
  9543  013D94  6EDA               	movwf	fsr2h,c
  9544  013D96  0E00               	movlw	0
  9545  013D98  6EDF               	movwf	indf2,c
  9546                           
  9547                           ;ringbufs.c: 80:  _this->tail = 0;
  9548                           ;stkvar	__this @ sp[(0)+-2]
  9549  013D9A  0EFE               	movlw	-2
  9550  013D9C  006F FF8C  F047    	movff	plusw1,btemp+10
  9551  013DA2  0EFF               	movlw	-1
  9552  013DA4  006F FF8C  F048    	movff	plusw1,btemp+11
  9553  013DAA  0E41               	movlw	65
  9554  013DAC  2447               	addwf	btemp+10,w,c
  9555  013DAE  6ED9               	movwf	fsr2l,c
  9556  013DB0  0E00               	movlw	0
  9557  013DB2  2048               	addwfc	btemp+11,w,c
  9558  013DB4  6EDA               	movwf	fsr2h,c
  9559  013DB6  0E00               	movlw	0
  9560  013DB8  6EDF               	movwf	indf2,c
  9561                           
  9562                           ;ringbufs.c: 81:  if (clearBuffer) {
  9563                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9564  013DBA  0EFD               	movlw	-3
  9565  013DBC  50E3               	movf	plusw1,w,c
  9566  013DBE  B4D8               	btfsc	status,2,c
  9567  013DC0  D011               	goto	l1510
  9568                           
  9569                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9570  013DC2  0E40               	movlw	64
  9571  013DC4  6EE6               	movwf	postinc1,c
  9572  013DC6  0E00               	movlw	0
  9573  013DC8  6EE6               	movwf	postinc1,c
  9574  013DCA  0E00               	movlw	0
  9575  013DCC  6EE6               	movwf	postinc1,c
  9576  013DCE  0E00               	movlw	0
  9577  013DD0  6EE6               	movwf	postinc1,c
  9578                           
  9579                           ;stkvar	__this @ sp[(-4)+-2]
  9580  013DD2  0EFA               	movlw	-6
  9581  013DD4  006F FF8F FFE6     	movff	plusw1,postinc1
  9582  013DDA  006F FF8F FFE6     	movff	plusw1,postinc1
  9583  013DE0  EC36  F08F         	call	_memset	;wreg free
  9584  013DE4                     l1510:
  9585                           
  9586                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9587  013DE4  52E5               	movf	postdec1,f,c
  9588  013DE6  52E5               	movf	postdec1,f,c
  9589  013DE8  52E5               	movf	postdec1,f,c
  9590  013DEA  0012               	return		;funcret
  9591  013DEC                     __end_of_ringBufS_flush:
  9592                           	opt callstack 0
  9593                           
  9594 ;; *************** function _memset *****************
  9595 ;; Defined at:
  9596 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  dest            2  [STACK] PTR void 
  9599 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9600 ;;  c               2  [STACK] int 
  9601 ;;  n               2  [STACK] unsigned int 
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;  s               2  [STACK] PTR unsigned char 
  9604 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9605 ;;  k               2  [STACK] unsigned int 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  2  [STACK] PTR void 
  9608 ;; Registers used:
  9609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9619 ;;Total ram usage:        0 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:    3
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		_ringBufS_init
  9626 ;;		_ringBufS_flush
  9627 ;; This function uses a reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text39
  9631  011E6C                     __ptext39:
  9632                           	opt callstack 0
  9633  011E6C                     _memset:
  9634                           	opt callstack 0
  9635                           
  9636                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9637  011E6C  52E6               	movf	postinc1,f,c
  9638  011E6E  52E6               	movf	postinc1,f,c
  9639  011E70  52E6               	movf	postinc1,f,c
  9640  011E72  52E6               	movf	postinc1,f,c
  9641                           
  9642                           ;stkvar	_dest @ sp[(-4)+-2]
  9643                           
  9644                           ;incstack = 0
  9645  011E74  0EFA               	movlw	-6
  9646  011E76  006F FF8C  F047    	movff	plusw1,btemp+10
  9647  011E7C  0EFB               	movlw	-5
  9648  011E7E  006F FF8C  F048    	movff	plusw1,btemp+11
  9649                           
  9650                           ;stkvar	_s @ sp[(-4)+0]
  9651  011E84  0EFD               	movlw	-3
  9652  011E86  0060  F123  FFE3   	movff	btemp+11,plusw1
  9653  011E8C  0EFC               	movlw	-4
  9654  011E8E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9655                           
  9656                           ;stkvar	_n @ sp[(-4)+-6]
  9657  011E94  0EF6               	movlw	-10
  9658  011E96  006F FF8C  F03D    	movff	plusw1,btemp
  9659  011E9C  0EF7               	movlw	-9
  9660  011E9E  50E3               	movf	plusw1,w,c
  9661  011EA0  103D               	iorwf	btemp,w,c
  9662  011EA2  B4D8               	btfsc	status,2,c
  9663  011EA4  D154               	goto	u5270
  9664                           
  9665                           ;stkvar	_c @ sp[(-4)+-4]
  9666                           ;stkvar	_s @ sp[(-4)+0]
  9667  011EA6  0EFC               	movlw	-4
  9668  011EA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9669  011EAE  0EFD               	movlw	-3
  9670  011EB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9671  011EB6  0EF8               	movlw	-8
  9672  011EB8  006F FF8F FFDF     	movff	plusw1,indf2
  9673                           
  9674                           ;stkvar	_c @ sp[(-4)+-4]
  9675                           ;stkvar	_n @ sp[(-4)+-6]
  9676                           ;stkvar	_s @ sp[(-4)+0]
  9677  011EBE  0EFC               	movlw	-4
  9678  011EC0  006F FF8C  F047    	movff	plusw1,btemp+10
  9679  011EC6  0EFD               	movlw	-3
  9680  011EC8  006F FF8C  F048    	movff	plusw1,btemp+11
  9681  011ECE  0EF6               	movlw	-10
  9682  011ED0  50E3               	movf	plusw1,w,c
  9683  011ED2  2647               	addwf	btemp+10,f,c
  9684  011ED4  0EF7               	movlw	-9
  9685  011ED6  50E3               	movf	plusw1,w,c
  9686  011ED8  2248               	addwfc	btemp+11,f,c
  9687  011EDA  0EFF               	movlw	255
  9688  011EDC  2447               	addwf	btemp+10,w,c
  9689  011EDE  6ED9               	movwf	fsr2l,c
  9690  011EE0  0EFF               	movlw	255
  9691  011EE2  2048               	addwfc	btemp+11,w,c
  9692  011EE4  6EDA               	movwf	fsr2h,c
  9693  011EE6  0EF8               	movlw	-8
  9694  011EE8  006F FF8F FFDF     	movff	plusw1,indf2
  9695                           
  9696                           ;stkvar	_n @ sp[(-4)+-6]
  9697  011EEE  0EF7               	movlw	-9
  9698  011EF0  50E3               	movf	plusw1,w,c
  9699  011EF2  E108               	bnz	l8414
  9700  011EF4  0EF6               	movlw	-10
  9701  011EF6  006F FF8C  F03D    	movff	plusw1,btemp
  9702  011EFC  0E03               	movlw	3
  9703  011EFE  5E3D               	subwf	btemp,f,c
  9704  011F00  A0D8               	btfss	status,0,c
  9705  011F02  D125               	goto	u5270
  9706  011F04                     l8414:
  9707                           
  9708                           ;stkvar	_c @ sp[(-4)+-4]
  9709                           ;stkvar	_s @ sp[(-4)+0]
  9710  011F04  0EFC               	movlw	-4
  9711  011F06  006F FF8C  F047    	movff	plusw1,btemp+10
  9712  011F0C  0EFD               	movlw	-3
  9713  011F0E  006F FF8C  F048    	movff	plusw1,btemp+11
  9714  011F14  0E01               	movlw	1
  9715  011F16  2447               	addwf	btemp+10,w,c
  9716  011F18  6ED9               	movwf	fsr2l,c
  9717  011F1A  0E00               	movlw	0
  9718  011F1C  2048               	addwfc	btemp+11,w,c
  9719  011F1E  6EDA               	movwf	fsr2h,c
  9720  011F20  0EF8               	movlw	-8
  9721  011F22  006F FF8F FFDF     	movff	plusw1,indf2
  9722                           
  9723                           ;stkvar	_c @ sp[(-4)+-4]
  9724                           ;stkvar	_s @ sp[(-4)+0]
  9725  011F28  0EFC               	movlw	-4
  9726  011F2A  006F FF8C  F047    	movff	plusw1,btemp+10
  9727  011F30  0EFD               	movlw	-3
  9728  011F32  006F FF8C  F048    	movff	plusw1,btemp+11
  9729  011F38  0E02               	movlw	2
  9730  011F3A  2447               	addwf	btemp+10,w,c
  9731  011F3C  6ED9               	movwf	fsr2l,c
  9732  011F3E  0E00               	movlw	0
  9733  011F40  2048               	addwfc	btemp+11,w,c
  9734  011F42  6EDA               	movwf	fsr2h,c
  9735  011F44  0EF8               	movlw	-8
  9736  011F46  006F FF8F FFDF     	movff	plusw1,indf2
  9737                           
  9738                           ;stkvar	_c @ sp[(-4)+-4]
  9739                           ;stkvar	_n @ sp[(-4)+-6]
  9740                           ;stkvar	_s @ sp[(-4)+0]
  9741  011F4C  0EFC               	movlw	-4
  9742  011F4E  006F FF8C  F047    	movff	plusw1,btemp+10
  9743  011F54  0EFD               	movlw	-3
  9744  011F56  006F FF8C  F048    	movff	plusw1,btemp+11
  9745  011F5C  0EF6               	movlw	-10
  9746  011F5E  50E3               	movf	plusw1,w,c
  9747  011F60  2647               	addwf	btemp+10,f,c
  9748  011F62  0EF7               	movlw	-9
  9749  011F64  50E3               	movf	plusw1,w,c
  9750  011F66  2248               	addwfc	btemp+11,f,c
  9751  011F68  0EFE               	movlw	254
  9752  011F6A  2447               	addwf	btemp+10,w,c
  9753  011F6C  6ED9               	movwf	fsr2l,c
  9754  011F6E  0EFF               	movlw	255
  9755  011F70  2048               	addwfc	btemp+11,w,c
  9756  011F72  6EDA               	movwf	fsr2h,c
  9757  011F74  0EF8               	movlw	-8
  9758  011F76  006F FF8F FFDF     	movff	plusw1,indf2
  9759                           
  9760                           ;stkvar	_c @ sp[(-4)+-4]
  9761                           ;stkvar	_n @ sp[(-4)+-6]
  9762                           ;stkvar	_s @ sp[(-4)+0]
  9763  011F7C  0EFC               	movlw	-4
  9764  011F7E  006F FF8C  F047    	movff	plusw1,btemp+10
  9765  011F84  0EFD               	movlw	-3
  9766  011F86  006F FF8C  F048    	movff	plusw1,btemp+11
  9767  011F8C  0EF6               	movlw	-10
  9768  011F8E  50E3               	movf	plusw1,w,c
  9769  011F90  2647               	addwf	btemp+10,f,c
  9770  011F92  0EF7               	movlw	-9
  9771  011F94  50E3               	movf	plusw1,w,c
  9772  011F96  2248               	addwfc	btemp+11,f,c
  9773  011F98  0EFD               	movlw	253
  9774  011F9A  2447               	addwf	btemp+10,w,c
  9775  011F9C  6ED9               	movwf	fsr2l,c
  9776  011F9E  0EFF               	movlw	255
  9777  011FA0  2048               	addwfc	btemp+11,w,c
  9778  011FA2  6EDA               	movwf	fsr2h,c
  9779  011FA4  0EF8               	movlw	-8
  9780  011FA6  006F FF8F FFDF     	movff	plusw1,indf2
  9781                           
  9782                           ;stkvar	_n @ sp[(-4)+-6]
  9783  011FAC  0EF7               	movlw	-9
  9784  011FAE  50E3               	movf	plusw1,w,c
  9785  011FB0  E108               	bnz	l8420
  9786  011FB2  0EF6               	movlw	-10
  9787  011FB4  006F FF8C  F03D    	movff	plusw1,btemp
  9788  011FBA  0E07               	movlw	7
  9789  011FBC  5E3D               	subwf	btemp,f,c
  9790  011FBE  A0D8               	btfss	status,0,c
  9791  011FC0  D0C6               	goto	u5270
  9792  011FC2                     l8420:
  9793                           
  9794                           ;stkvar	_c @ sp[(-4)+-4]
  9795                           ;stkvar	_s @ sp[(-4)+0]
  9796  011FC2  0EFC               	movlw	-4
  9797  011FC4  006F FF8C  F047    	movff	plusw1,btemp+10
  9798  011FCA  0EFD               	movlw	-3
  9799  011FCC  006F FF8C  F048    	movff	plusw1,btemp+11
  9800  011FD2  0E03               	movlw	3
  9801  011FD4  2447               	addwf	btemp+10,w,c
  9802  011FD6  6ED9               	movwf	fsr2l,c
  9803  011FD8  0E00               	movlw	0
  9804  011FDA  2048               	addwfc	btemp+11,w,c
  9805  011FDC  6EDA               	movwf	fsr2h,c
  9806  011FDE  0EF8               	movlw	-8
  9807  011FE0  006F FF8F FFDF     	movff	plusw1,indf2
  9808                           
  9809                           ;stkvar	_c @ sp[(-4)+-4]
  9810                           ;stkvar	_n @ sp[(-4)+-6]
  9811                           ;stkvar	_s @ sp[(-4)+0]
  9812  011FE6  0EFC               	movlw	-4
  9813  011FE8  006F FF8C  F047    	movff	plusw1,btemp+10
  9814  011FEE  0EFD               	movlw	-3
  9815  011FF0  006F FF8C  F048    	movff	plusw1,btemp+11
  9816  011FF6  0EF6               	movlw	-10
  9817  011FF8  50E3               	movf	plusw1,w,c
  9818  011FFA  2647               	addwf	btemp+10,f,c
  9819  011FFC  0EF7               	movlw	-9
  9820  011FFE  50E3               	movf	plusw1,w,c
  9821  012000  2248               	addwfc	btemp+11,f,c
  9822  012002  0EFC               	movlw	252
  9823  012004  2447               	addwf	btemp+10,w,c
  9824  012006  6ED9               	movwf	fsr2l,c
  9825  012008  0EFF               	movlw	255
  9826  01200A  2048               	addwfc	btemp+11,w,c
  9827  01200C  6EDA               	movwf	fsr2h,c
  9828  01200E  0EF8               	movlw	-8
  9829  012010  006F FF8F FFDF     	movff	plusw1,indf2
  9830                           
  9831                           ;stkvar	_n @ sp[(-4)+-6]
  9832  012016  0EF7               	movlw	-9
  9833  012018  50E3               	movf	plusw1,w,c
  9834  01201A  E108               	bnz	l8426
  9835  01201C  0EF6               	movlw	-10
  9836  01201E  006F FF8C  F03D    	movff	plusw1,btemp
  9837  012024  0E09               	movlw	9
  9838  012026  5E3D               	subwf	btemp,f,c
  9839  012028  A0D8               	btfss	status,0,c
  9840  01202A  D091               	goto	u5270
  9841  01202C                     l8426:
  9842                           
  9843                           ;stkvar	_s @ sp[(-4)+0]
  9844  01202C  0EFC               	movlw	-4
  9845  01202E  006F FF8C  F047    	movff	plusw1,btemp+10
  9846  012034  1E47               	comf	btemp+10,f,c
  9847  012036  0EFD               	movlw	-3
  9848  012038  006F FF8C  F048    	movff	plusw1,btemp+11
  9849  01203E  1E48               	comf	btemp+11,f,c
  9850  012040  2A47               	incf	btemp+10,f,c
  9851  012042  B4D8               	btfsc	status,2,c
  9852  012044  2A48               	incf	btemp+11,f,c
  9853  012046  0E03               	movlw	3
  9854  012048  1647               	andwf	btemp+10,f,c
  9855  01204A  0E00               	movlw	0
  9856  01204C  1648               	andwf	btemp+11,f,c
  9857                           
  9858                           ;stkvar	_k @ sp[(-4)+2]
  9859  01204E  0EFE               	movlw	-2
  9860  012050  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9861  012056  0EFF               	movlw	-1
  9862  012058  0060  F123  FFE3   	movff	btemp+11,plusw1
  9863                           
  9864                           ;stkvar	_k @ sp[(-4)+2]
  9865                           ;stkvar	_s @ sp[(-4)+0]
  9866  01205E  0EFC               	movlw	-4
  9867  012060  50E3               	movf	plusw1,w,c
  9868  012062  6E3D               	movwf	btemp,c
  9869  012064  0EFE               	movlw	-2
  9870  012066  50E3               	movf	plusw1,w,c
  9871  012068  263D               	addwf	btemp,f,c
  9872  01206A  0EFC               	movlw	-4
  9873  01206C  0060  F0F7  FFE3   	movff	btemp,plusw1
  9874  012072  0EFD               	movlw	-3
  9875  012074  50E3               	movf	plusw1,w,c
  9876  012076  6E3D               	movwf	btemp,c
  9877  012078  0EFF               	movlw	-1
  9878  01207A  50E3               	movf	plusw1,w,c
  9879  01207C  223D               	addwfc	btemp,f,c
  9880  01207E  0EFD               	movlw	-3
  9881  012080  0060  F0F7  FFE3   	movff	btemp,plusw1
  9882                           
  9883                           ;stkvar	_k @ sp[(-4)+2]
  9884                           ;stkvar	_n @ sp[(-4)+-6]
  9885  012086  0EF6               	movlw	-10
  9886  012088  50E3               	movf	plusw1,w,c
  9887  01208A  6E3D               	movwf	btemp,c
  9888  01208C  0EFE               	movlw	-2
  9889  01208E  50E3               	movf	plusw1,w,c
  9890  012090  5E3D               	subwf	btemp,f,c
  9891  012092  0EF6               	movlw	-10
  9892  012094  0060  F0F7  FFE3   	movff	btemp,plusw1
  9893  01209A  0EF7               	movlw	-9
  9894  01209C  50E3               	movf	plusw1,w,c
  9895  01209E  6E3D               	movwf	btemp,c
  9896  0120A0  0EFF               	movlw	-1
  9897  0120A2  50E3               	movf	plusw1,w,c
  9898  0120A4  5A3D               	subwfb	btemp,f,c
  9899  0120A6  0EF7               	movlw	-9
  9900  0120A8  0060  F0F7  FFE3   	movff	btemp,plusw1
  9901  0120AE  0EFC               	movlw	252
  9902  0120B0  6E47               	movwf	btemp+10,c
  9903  0120B2  0EFF               	movlw	255
  9904  0120B4  6E48               	movwf	btemp+11,c
  9905                           
  9906                           ;stkvar	_n @ sp[(-4)+-6]
  9907  0120B6  0EF6               	movlw	-10
  9908  0120B8  006F FF8C  F03D    	movff	plusw1,btemp
  9909  0120BE  5047               	movf	btemp+10,w,c
  9910  0120C0  163D               	andwf	btemp,f,c
  9911  0120C2  0EF6               	movlw	-10
  9912  0120C4  0060  F0F7  FFE3   	movff	btemp,plusw1
  9913  0120CA  0EF7               	movlw	-9
  9914  0120CC  006F FF8C  F03D    	movff	plusw1,btemp
  9915  0120D2  5048               	movf	btemp+11,w,c
  9916  0120D4  163D               	andwf	btemp,f,c
  9917  0120D6  0EF7               	movlw	-9
  9918  0120D8  D02E               	goto	L29
  9919  0120DA                     l8434:
  9920                           
  9921                           ;stkvar	_c @ sp[(-4)+-4]
  9922                           ;stkvar	_s @ sp[(-4)+0]
  9923  0120DA  0EFC               	movlw	-4
  9924  0120DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9925  0120E2  0EFD               	movlw	-3
  9926  0120E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9927  0120EA  0EF8               	movlw	-8
  9928  0120EC  006F FF8F FFDF     	movff	plusw1,indf2
  9929                           
  9930                           ;stkvar	_n @ sp[(-4)+-6]
  9931  0120F2  0EF6               	movlw	-10
  9932  0120F4  006F FF8C  F03D    	movff	plusw1,btemp
  9933  0120FA  0E01               	movlw	1
  9934  0120FC  5E3D               	subwf	btemp,f,c
  9935  0120FE  0EF6               	movlw	-10
  9936  012100  0060  F0F7  FFE3   	movff	btemp,plusw1
  9937  012106  0EF7               	movlw	-9
  9938  012108  006F FF8C  F03D    	movff	plusw1,btemp
  9939  01210E  0E00               	movlw	0
  9940  012110  5A3D               	subwfb	btemp,f,c
  9941  012112  0EF7               	movlw	-9
  9942  012114  0060  F0F7  FFE3   	movff	btemp,plusw1
  9943                           
  9944                           ;stkvar	_s @ sp[(-4)+0]
  9945  01211A  0EFC               	movlw	-4
  9946  01211C  50E3               	movf	plusw1,w,c
  9947  01211E  0F01               	addlw	1
  9948  012120  6E3D               	movwf	btemp,c
  9949  012122  0EFC               	movlw	-4
  9950  012124  0060  F0F7  FFE3   	movff	btemp,plusw1
  9951  01212A  6A3D               	clrf	btemp,c
  9952  01212C  0EFD               	movlw	-3
  9953  01212E  50E3               	movf	plusw1,w,c
  9954  012130  203D               	addwfc	btemp,w,c
  9955  012132  6E3D               	movwf	btemp,c
  9956  012134  0EFD               	movlw	-3
  9957  012136                     L29:
  9958  012136  0060  F0F7  FFE3   	movff	btemp,plusw1
  9959                           
  9960                           ;stkvar	_n @ sp[(-4)+-6]
  9961  01213C  0EF6               	movlw	-10
  9962  01213E  006F FF8C  F03D    	movff	plusw1,btemp
  9963  012144  0EF7               	movlw	-9
  9964  012146  50E3               	movf	plusw1,w,c
  9965  012148  103D               	iorwf	btemp,w,c
  9966  01214A  A4D8               	btfss	status,2,c
  9967  01214C  D7C6               	goto	l8434
  9968  01214E                     u5270:
  9969                           
  9970                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9971  01214E  0EF6               	movlw	246
  9972  012150  26E1               	addwf	fsr1l,f,c
  9973  012152  0EFF               	movlw	255
  9974  012154  22E2               	addwfc	fsr1h,f,c
  9975  012156  0012               	return		;funcret
  9976  012158                     __end_of_memset:
  9977                           	opt callstack 0
  9978                           
  9979 ;; *************** function _printf *****************
  9980 ;; Defined at:
  9981 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  fmt             2  [STACK] PTR const unsigned char 
  9984 ;;		 -> STR_20(3), STR_19(3), STR_18(3), 
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;  ap              2  [STACK] PTR void [1]
  9987 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9988 ;;  ret             2    0        int 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  2  [STACK] int 
  9991 ;; Registers used:
  9992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9993 ;; Tracked objects:
  9994 ;;		On entry : 3F/3B
  9995 ;;		On exit  : 3F/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10002 ;;Total ram usage:        0 bytes
 10003 ;; Hardware stack levels used:    1
 10004 ;; Hardware stack levels required when called:   11
 10005 ;; This function calls:
 10006 ;;		_vfprintf
 10007 ;; This function is called by:
 10008 ;;		_eaDogM_WriteString
 10009 ;;		_send_lcd_cmd_dma
 10010 ;; This function uses a reentrant model
 10011 ;;
 10012                           
 10013                           	psect	text40
 10014  014018                     __ptext40:
 10015                           	opt callstack 0
 10016  014018                     _printf:
 10017                           	opt callstack 0
 10018                           
 10019                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10020  014018  52E6               	movf	postinc1,f,c
 10021  01401A  52E6               	movf	postinc1,f,c
 10022                           
 10023                           ;stkvar	?_printf @ sp[(-2)+-3]
 10024                           
 10025                           ;incstack = 0
 10026  01401C  0EFB               	movlw	251
 10027  01401E  24E1               	addwf	fsr1l,w,c
 10028  014020  6E47               	movwf	btemp+10,c
 10029  014022  0EFF               	movlw	255
 10030  014024  20E2               	addwfc	fsr1h,w,c
 10031  014026  6E48               	movwf	btemp+11,c
 10032                           
 10033                           ;stkvar	_ap @ sp[(-2)+0]
 10034  014028  0EFF               	movlw	-1
 10035  01402A  0060  F123  FFE3   	movff	btemp+11,plusw1
 10036  014030  0EFE               	movlw	-2
 10037  014032  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10038                           
 10039                           ;stkvar	_ap @ sp[(-2)+0]
 10040  014038  0EFE               	movlw	254
 10041  01403A  24E1               	addwf	fsr1l,w,c
 10042  01403C  6E3D               	movwf	btemp,c
 10043  01403E  0EFF               	movlw	255
 10044  014040  20E2               	addwfc	fsr1h,w,c
 10045  014042  6E3E               	movwf	btemp+1,c
 10046  014044  0060  F0F7  FFE6   	movff	btemp,postinc1
 10047  01404A  0060  F0FB  FFE6   	movff	btemp+1,postinc1
 10048                           
 10049                           ;stkvar	_fmt @ sp[(-4)+-3]
 10050  014050  0EF9               	movlw	-7
 10051  014052  006F FF8F FFE6     	movff	plusw1,postinc1
 10052  014058  006F FF8F FFE6     	movff	plusw1,postinc1
 10053  01405E  0E00               	movlw	0
 10054  014060  6EE6               	movwf	postinc1,c
 10055  014062  0E00               	movlw	0
 10056  014064  6EE6               	movwf	postinc1,c
 10057  014066  EC6C  F09C         	call	_vfprintf	;wreg free
 10058                           
 10059                           ; BSR set to: 0
 10060                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10061  01406A  52E5               	movf	postdec1,f,c
 10062  01406C  52E5               	movf	postdec1,f,c
 10063  01406E  52E5               	movf	postdec1,f,c
 10064  014070  50E7               	movf	indf1,w,c
 10065  014072  5EE1               	subwf	fsr1l,f,c
 10066  014074  0E00               	movlw	0
 10067  014076  5AE2               	subwfb	fsr1h,f,c
 10068  014078  0012               	return		;funcret
 10069  01407A                     __end_of_printf:
 10070                           	opt callstack 0
 10071                           
 10072 ;; *************** function _vfprintf *****************
 10073 ;; Defined at:
 10074 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10077 ;;		 -> f(6), NULL(0), 
 10078 ;;  fmt             2  [STACK] PTR const unsigned char 
 10079 ;;		 -> STR_21(91), STR_20(3), STR_19(3), STR_18(3), 
 10080 ;;		 -> STR_17(26), STR_16(26), STR_15(6), STR_14(19), 
 10081 ;;		 -> STR_13(26), STR_12(17), STR_11(21), STR_10(18), 
 10082 ;;		 -> STR_9(6), STR_8(6), STR_7(14), STR_6(15), 
 10083 ;;		 -> STR_5(21), STR_4(15), STR_2(12), STR_1(17), 
 10084 ;;  ap              2  [STACK] PTR PTR void 
 10085 ;;		 -> ap(2), ap(2), 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;  cfmt            2  [STACK] PTR unsigned char 
 10088 ;;		 -> STR_21(91), STR_20(3), STR_19(3), STR_18(3), 
 10089 ;;		 -> STR_17(26), STR_16(26), STR_15(6), STR_14(19), 
 10090 ;;		 -> STR_13(26), STR_12(17), STR_11(21), STR_10(18), 
 10091 ;;		 -> STR_9(6), STR_8(6), STR_7(14), STR_6(15), 
 10092 ;;		 -> STR_5(21), STR_4(15), STR_2(12), STR_1(17), 
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  2  [STACK] int 
 10095 ;; Registers used:
 10096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 3F/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10106 ;;Total ram usage:        0 bytes
 10107 ;; Hardware stack levels used:    1
 10108 ;; Hardware stack levels required when called:   10
 10109 ;; This function calls:
 10110 ;;		_vfpfcnvrt
 10111 ;; This function is called by:
 10112 ;;		_sprintf
 10113 ;;		_printf
 10114 ;; This function uses a reentrant model
 10115 ;;
 10116                           
 10117                           	psect	text41
 10118  0138D8                     __ptext41:
 10119                           	opt callstack 0
 10120  0138D8                     _vfprintf:
 10121                           	opt callstack 0
 10122                           
 10123                           ; BSR set to: 0
 10124                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10125  0138D8  52E6               	movf	postinc1,f,c
 10126  0138DA  52E6               	movf	postinc1,f,c
 10127                           
 10128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10129                           ;stkvar	_fmt @ sp[(-2)+-4]
 10130                           
 10131                           ;incstack = 0
 10132  0138DC  0EFA               	movlw	-6
 10133  0138DE  006F FF8C  F047    	movff	plusw1,btemp+10
 10134  0138E4  0EFB               	movlw	-5
 10135  0138E6  006F FF8C  F048    	movff	plusw1,btemp+11
 10136                           
 10137                           ;stkvar	_cfmt @ sp[(-2)+0]
 10138  0138EC  0EFF               	movlw	-1
 10139  0138EE  0060  F123  FFE3   	movff	btemp+11,plusw1
 10140  0138F4  0EFE               	movlw	-2
 10141  0138F6  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10142                           
 10143                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10144  0138FC  0100               	movlb	0	; () banked
 10145  0138FE  6BE5               	clrf	_nout& (0+255),b
 10146  013900  6BE6               	clrf	(_nout+1)& (0+255),b
 10147                           
 10148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10149  013902  D021               	goto	l8448
 10150  013904                     l8446:
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10154                           ;stkvar	_ap @ sp[(-2)+-6]
 10155  013904  0EF8               	movlw	-8
 10156  013906  006F FF8F FFE6     	movff	plusw1,postinc1
 10157  01390C  006F FF8F FFE6     	movff	plusw1,postinc1
 10158                           
 10159                           ;stkvar	_cfmt @ sp[(-4)+0]
 10160  013912  0EFC               	movlw	252
 10161  013914  24E1               	addwf	fsr1l,w,c
 10162  013916  6E3D               	movwf	btemp,c
 10163  013918  0EFF               	movlw	255
 10164  01391A  20E2               	addwfc	fsr1h,w,c
 10165  01391C  6E3E               	movwf	btemp+1,c
 10166  01391E  0060  F0F7  FFE6   	movff	btemp,postinc1
 10167  013924  0060  F0FB  FFE6   	movff	btemp+1,postinc1
 10168                           
 10169                           ;stkvar	_fp @ sp[(-6)+-2]
 10170  01392A  0EF8               	movlw	-8
 10171  01392C  006F FF8F FFE6     	movff	plusw1,postinc1
 10172  013932  006F FF8F FFE6     	movff	plusw1,postinc1
 10173  013938  ECEE  F086         	call	_vfpfcnvrt	;wreg free
 10174  01393C  503D               	movf	btemp,w,c
 10175  01393E  0100               	movlb	0	; () banked
 10176  013940  27E5               	addwf	_nout& (0+255),f,b
 10177  013942  503E               	movf	btemp+1,w,c
 10178  013944  23E6               	addwfc	(_nout+1)& (0+255),f,b
 10179  013946                     l8448:
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10183                           ;stkvar	_cfmt @ sp[(-2)+0]
 10184  013946  50E1               	movf	fsr1l,w,c
 10185  013948  0FFE               	addlw	-2
 10186  01394A  6ED9               	movwf	fsr2l,c
 10187  01394C  50E2               	movf	fsr1h,w,c
 10188  01394E  6EDA               	movwf	fsr2h,c
 10189  013950  0EFF               	movlw	255
 10190  013952  22DA               	addwfc	fsr2h,f,c
 10191  013954  006F FF7B FFF6     	movff	postinc2,tblptrl
 10192  01395A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10193  013960                     	if	0	;tblptru may be non-zero
 10194  013960                     	endif
 10195  013960                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10196  013960  0E00               	movlw	low (__mediumconst shr (0+16))
 10197  013962  6EF8               	movwf	tblptru,c
 10198  013964                     	endif
 10199  013964  0008               	tblrd		*
 10200  013966  50F5               	movf	tablat,w,c
 10201  013968  0900               	iorlw	0
 10202  01396A  A4D8               	btfss	status,2,c
 10203  01396C  D7CB               	goto	l8446
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10207  01396E  0060  F394  F03D   	movff	_nout,btemp
 10208  013974  0060  F398  F03E   	movff	_nout+1,btemp+1
 10209                           
 10210                           ; BSR set to: 0
 10211                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10212  01397A  0EF8               	movlw	248
 10213  01397C  26E1               	addwf	fsr1l,f,c
 10214  01397E  0EFF               	movlw	255
 10215  013980  22E2               	addwfc	fsr1h,f,c
 10216  013982  0012               	return		;funcret
 10217  013984                     __end_of_vfprintf:
 10218                           	opt callstack 0
 10219                           
 10220 ;; *************** function _vfpfcnvrt *****************
 10221 ;; Defined at:
 10222 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10225 ;;		 -> f(6), NULL(0), 
 10226 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10227 ;;		 -> cfmt(2), 
 10228 ;;  ap              2  [STACK] PTR PTR void 
 10229 ;;		 -> ap(2), ap(2), 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;  ll              8  [STACK] long long 
 10232 ;;  llu             8    0        unsigned long long 
 10233 ;;  f               4    0        unsigned long long 
 10234 ;;  vp              3    0        PTR void 
 10235 ;;  ct              3    0        unsigned char [3]
 10236 ;;  cp              2  [STACK] PTR unsigned char 
 10237 ;;		 -> ?_printf(2), ?_sprintf(2), STR_22(6), STR_3(6), 
 10238 ;;		 -> V(261), 
 10239 ;;  i               2    0        int 
 10240 ;;  done            2    0        int 
 10241 ;;  c               1  [STACK] unsigned char 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  2  [STACK] int 
 10244 ;; Registers used:
 10245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10255 ;;Total ram usage:        0 bytes
 10256 ;; Hardware stack levels used:    1
 10257 ;; Hardware stack levels required when called:    9
 10258 ;; This function calls:
 10259 ;;		_ctoa
 10260 ;;		_dtoa
 10261 ;;		_fputc
 10262 ;;		_stoa
 10263 ;;		_strncmp
 10264 ;; This function is called by:
 10265 ;;		_vfprintf
 10266 ;; This function uses a reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text42
 10270  010DDC                     __ptext42:
 10271                           	opt callstack 0
 10272  010DDC                     _vfpfcnvrt:
 10273                           	opt callstack 0
 10274                           
 10275                           ; BSR set to: 0
 10276                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10277  010DDC  0E0B               	movlw	11
 10278  010DDE  26E1               	addwf	fsr1l,f,c
 10279  010DE0  0E00               	movlw	0
 10280  010DE2  22E2               	addwfc	fsr1h,f,c
 10281                           
 10282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10283                           ;stkvar	_fmt @ sp[(-11)+-4]
 10284                           
 10285                           ;incstack = 0
 10286  010DE4  0EF1               	movlw	-15
 10287  010DE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10288  010DEC  0EF2               	movlw	-14
 10289  010DEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10290  010DF4  006F FF7B FFF6     	movff	postinc2,tblptrl
 10291  010DFA  006F FF77 FFF7     	movff	postdec2,tblptrh
 10292  010E00                     	if	0	;tblptru may be non-zero
 10293  010E00                     	endif
 10294  010E00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10295  010E00  0E00               	movlw	low (__mediumconst shr (0+16))
 10296  010E02  6EF8               	movwf	tblptru,c
 10297  010E04                     	endif
 10298  010E04  0008               	tblrd		*
 10299  010E06  50F5               	movf	tablat,w,c
 10300  010E08  0A25               	xorlw	37
 10301  010E0A  A4D8               	btfss	status,2,c
 10302  010E0C  D23E               	goto	l8392
 10303                           
 10304                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10305                           ;stkvar	_fmt @ sp[(-11)+-4]
 10306  010E0E  0EF1               	movlw	-15
 10307  010E10  006F FF8F FFD9     	movff	plusw1,fsr2l
 10308  010E16  0EF2               	movlw	-14
 10309  010E18  006F FF8F FFDA     	movff	plusw1,fsr2h
 10310  010E1E  2ADE               	incf	postinc2,f,c
 10311  010E20  0E00               	movlw	0
 10312  010E22  22DD               	addwfc	postdec2,f,c
 10313                           
 10314                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10315  010E24  6A1D               	clrf	_width,c
 10316  010E26  6A1E               	clrf	_width+1,c
 10317  010E28  6A21               	clrf	_flags,c
 10318  010E2A  6A22               	clrf	_flags+1,c
 10319                           
 10320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10321  010E2C  681F               	setf	_prec,c
 10322  010E2E  6820               	setf	_prec+1,c
 10323                           
 10324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10325                           ;stkvar	_fmt @ sp[(-11)+-4]
 10326  010E30  0EF1               	movlw	-15
 10327  010E32  006F FF8F FFD9     	movff	plusw1,fsr2l
 10328  010E38  0EF2               	movlw	-14
 10329  010E3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10330  010E40  006F FF7B FFF6     	movff	postinc2,tblptrl
 10331  010E46  006F FF77 FFF7     	movff	postdec2,tblptrh
 10332  010E4C                     	if	0	;tblptru may be non-zero
 10333  010E4C                     	endif
 10334  010E4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10335  010E4C  0E00               	movlw	low (__mediumconst shr (0+16))
 10336  010E4E  6EF8               	movwf	tblptru,c
 10337  010E50                     	endif
 10338  010E50  0008               	tblrd		*
 10339  010E52  50F5               	movf	tablat,w,c
 10340  010E54  0A63               	xorlw	99
 10341  010E56  A4D8               	btfss	status,2,c
 10342  010E58  D036               	goto	l8342
 10343                           
 10344                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10345                           ;stkvar	_fmt @ sp[(-11)+-4]
 10346  010E5A  0EF1               	movlw	-15
 10347  010E5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10348  010E62  0EF2               	movlw	-14
 10349  010E64  006F FF8F FFDA     	movff	plusw1,fsr2h
 10350  010E6A  2ADE               	incf	postinc2,f,c
 10351  010E6C  0E00               	movlw	0
 10352  010E6E  22DD               	addwfc	postdec2,f,c
 10353                           
 10354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10355                           ;stkvar	_ap @ sp[(-11)+-6]
 10356  010E70  0EEF               	movlw	-17
 10357  010E72  006F FF8F FFD9     	movff	plusw1,fsr2l
 10358  010E78  0EF0               	movlw	-16
 10359  010E7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10360  010E80  0E02               	movlw	2
 10361  010E82  5EDE               	subwf	postinc2,f,c
 10362  010E84  0E00               	movlw	0
 10363  010E86  5ADD               	subwfb	postdec2,f,c
 10364  010E88  006F FF78  F047    	movff	postinc2,btemp+10
 10365  010E8E  006F FF74  F048    	movff	postdec2,btemp+11
 10366  010E94  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10367  010E9A  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10368  010EA0  50DF               	movf	indf2,w,c
 10369  010EA2  6E48               	movwf	btemp+11,c
 10370                           
 10371                           ;stkvar	_c @ sp[(-11)+10]
 10372  010EA4  0EFF               	movlw	-1
 10373  010EA6  0060  F123  FFE3   	movff	btemp+11,plusw1
 10374                           
 10375                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10376                           ;stkvar	_c @ sp[(-11)+10]
 10377  010EAC  0EFF               	movlw	-1
 10378  010EAE  50E3               	movf	plusw1,w,c
 10379  010EB0  6EE6               	movwf	postinc1,c
 10380                           
 10381                           ;stkvar	_fp @ sp[(-12)+-2]
 10382  010EB2  0EF2               	movlw	-14
 10383  010EB4  006F FF8F FFE6     	movff	plusw1,postinc1
 10384  010EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 10385  010EC0  ECF6  F09E         	call	_ctoa	;wreg free
 10386  010EC4  D20C               	goto	l1950
 10387  010EC6                     l8342:
 10388                           
 10389                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10390                           ;stkvar	_fmt @ sp[(-11)+-4]
 10391  010EC6  0EF1               	movlw	-15
 10392  010EC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10393  010ECE  0EF2               	movlw	-14
 10394  010ED0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10395  010ED6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10396  010EDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10397  010EE2                     	if	0	;tblptru may be non-zero
 10398  010EE2                     	endif
 10399  010EE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10400  010EE2  0E00               	movlw	low (__mediumconst shr (0+16))
 10401  010EE4  6EF8               	movwf	tblptru,c
 10402  010EE6                     	endif
 10403  010EE6  0008               	tblrd		*
 10404  010EE8  50F5               	movf	tablat,w,c
 10405  010EEA  0A64               	xorlw	100
 10406  010EEC  B4D8               	btfsc	status,2,c
 10407  010EEE  D015               	goto	u5180
 10408                           
 10409                           ;stkvar	_fmt @ sp[(-11)+-4]
 10410  010EF0  0EF1               	movlw	-15
 10411  010EF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10412  010EF8  0EF2               	movlw	-14
 10413  010EFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10414  010F00  006F FF7B FFF6     	movff	postinc2,tblptrl
 10415  010F06  006F FF77 FFF7     	movff	postdec2,tblptrh
 10416  010F0C                     	if	0	;tblptru may be non-zero
 10417  010F0C                     	endif
 10418  010F0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10419  010F0C  0E00               	movlw	low (__mediumconst shr (0+16))
 10420  010F0E  6EF8               	movwf	tblptru,c
 10421  010F10                     	endif
 10422  010F10  0008               	tblrd		*
 10423  010F12  50F5               	movf	tablat,w,c
 10424  010F14  0A69               	xorlw	105
 10425  010F16  A4D8               	btfss	status,2,c
 10426  010F18  D075               	goto	l8354
 10427  010F1A                     u5180:
 10428                           
 10429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10430                           ;stkvar	_fmt @ sp[(-11)+-4]
 10431  010F1A  0EF1               	movlw	-15
 10432  010F1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10433  010F22  0EF2               	movlw	-14
 10434  010F24  006F FF8F FFDA     	movff	plusw1,fsr2h
 10435  010F2A  2ADE               	incf	postinc2,f,c
 10436  010F2C  0E00               	movlw	0
 10437  010F2E  22DD               	addwfc	postdec2,f,c
 10438                           
 10439                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10440                           ;stkvar	_ap @ sp[(-11)+-6]
 10441  010F30  0EEF               	movlw	-17
 10442  010F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 10443  010F38  0EF0               	movlw	-16
 10444  010F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10445  010F40  0E02               	movlw	2
 10446  010F42  5EDE               	subwf	postinc2,f,c
 10447  010F44  0E00               	movlw	0
 10448  010F46  5ADD               	subwfb	postdec2,f,c
 10449  010F48  006F FF78  F047    	movff	postinc2,btemp+10
 10450  010F4E  006F FF74  F048    	movff	postdec2,btemp+11
 10451  010F54  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10452  010F5A  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10453  010F60  006F FF78  F047    	movff	postinc2,btemp+10
 10454  010F66  006F FF74  F048    	movff	postdec2,btemp+11
 10455                           
 10456                           ;stkvar	_ll @ sp[(-11)+0]
 10457  010F6C  0EF5               	movlw	-11
 10458  010F6E  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10459  010F74  0EF6               	movlw	-10
 10460  010F76  0060  F123  FFE3   	movff	btemp+11,plusw1
 10461  010F7C  6A3D               	clrf	btemp,c
 10462  010F7E  BEE3               	btfsc	plusw1,7,c
 10463  010F80  683D               	setf	btemp,c
 10464  010F82  0EF7               	movlw	-9
 10465  010F84  0060  F0F7  FFE3   	movff	btemp,plusw1
 10466  010F8A  0EF8               	movlw	-8
 10467  010F8C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10468  010F92  0EF9               	movlw	-7
 10469  010F94  0060  F0F7  FFE3   	movff	btemp,plusw1
 10470  010F9A  0EFA               	movlw	-6
 10471  010F9C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10472  010FA2  0EFB               	movlw	-5
 10473  010FA4  0060  F0F7  FFE3   	movff	btemp,plusw1
 10474  010FAA  0EFC               	movlw	-4
 10475  010FAC  0060  F0F7  FFE3   	movff	btemp,plusw1
 10476  010FB2                     l8350:
 10477                           
 10478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10479                           ;stkvar	_ll @ sp[(-11)+0]
 10480  010FB2  50E1               	movf	fsr1l,w,c
 10481  010FB4  0FF5               	addlw	-11
 10482  010FB6  6ED9               	movwf	fsr2l,c
 10483  010FB8  50E2               	movf	fsr1h,w,c
 10484  010FBA  6EDA               	movwf	fsr2h,c
 10485  010FBC  0EFF               	movlw	255
 10486  010FBE  22DA               	addwfc	fsr2h,f,c
 10487  010FC0  006F FF7B FFE6     	movff	postinc2,postinc1
 10488  010FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 10489  010FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 10490  010FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 10491  010FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 10492  010FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 10493  010FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 10494  010FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 10495                           
 10496                           ;stkvar	_fp @ sp[(-19)+-2]
 10497  010FF0  0EEB               	movlw	-21
 10498  010FF2  006F FF8F FFE6     	movff	plusw1,postinc1
 10499  010FF8  006F FF8F FFE6     	movff	plusw1,postinc1
 10500  010FFE  EC74  F089         	call	_dtoa	;wreg free
 10501  011002  D16D               	goto	l1950
 10502  011004                     l8354:
 10503                           
 10504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10505  011004  0E02               	movlw	2
 10506  011006  6EE6               	movwf	postinc1,c
 10507  011008  0E00               	movlw	0
 10508  01100A  6EE6               	movwf	postinc1,c
 10509  01100C  0EF6               	movlw	low STR_23
 10510  01100E  6EE6               	movwf	postinc1,c
 10511  011010  0EFF               	movlw	high STR_23
 10512  011012  6EE6               	movwf	postinc1,c
 10513                           
 10514                           ;stkvar	_fmt @ sp[(-15)+-4]
 10515  011014  0EED               	movlw	-19
 10516  011016  006F FF8F FFD9     	movff	plusw1,fsr2l
 10517  01101C  0EEE               	movlw	-18
 10518  01101E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10519  011024  006F FF78  F047    	movff	postinc2,btemp+10
 10520  01102A  006F FF74  F048    	movff	postdec2,btemp+11
 10521  011030  0060  F11F  FFE6   	movff	btemp+10,postinc1
 10522  011036  0060  F123  FFE6   	movff	btemp+11,postinc1
 10523  01103C  EC13  F098         	call	_strncmp	;wreg free
 10524  011040  503D               	movf	btemp,w,c
 10525  011042  103E               	iorwf	btemp+1,w,c
 10526  011044  B4D8               	btfsc	status,2,c
 10527  011046  D022               	goto	u5200
 10528  011048  0E02               	movlw	2
 10529  01104A  6EE6               	movwf	postinc1,c
 10530  01104C  0E00               	movlw	0
 10531  01104E  6EE6               	movwf	postinc1,c
 10532  011050  0EF9               	movlw	low STR_27
 10533  011052  6EE6               	movwf	postinc1,c
 10534  011054  0EFF               	movlw	high STR_27
 10535  011056  6EE6               	movwf	postinc1,c
 10536                           
 10537                           ;stkvar	_fmt @ sp[(-15)+-4]
 10538  011058  0EED               	movlw	-19
 10539  01105A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10540  011060  0EEE               	movlw	-18
 10541  011062  006F FF8F FFDA     	movff	plusw1,fsr2h
 10542  011068  006F FF78  F047    	movff	postinc2,btemp+10
 10543  01106E  006F FF74  F048    	movff	postdec2,btemp+11
 10544  011074  0060  F11F  FFE6   	movff	btemp+10,postinc1
 10545  01107A  0060  F123  FFE6   	movff	btemp+11,postinc1
 10546  011080  EC13  F098         	call	_strncmp	;wreg free
 10547  011084  503D               	movf	btemp,w,c
 10548  011086  103E               	iorwf	btemp+1,w,c
 10549  011088  A4D8               	btfss	status,2,c
 10550  01108A  D069               	goto	l8366
 10551  01108C                     u5200:
 10552                           
 10553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10554                           ;stkvar	_fmt @ sp[(-11)+-4]
 10555  01108C  0EF1               	movlw	-15
 10556  01108E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10557  011094  0EF2               	movlw	-14
 10558  011096  006F FF8F FFDA     	movff	plusw1,fsr2h
 10559  01109C  0E02               	movlw	2
 10560  01109E  26DE               	addwf	postinc2,f,c
 10561  0110A0  0E00               	movlw	0
 10562  0110A2  22DD               	addwfc	postdec2,f,c
 10563                           
 10564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10565                           ;stkvar	_ap @ sp[(-11)+-6]
 10566  0110A4  0EEF               	movlw	-17
 10567  0110A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10568  0110AC  0EF0               	movlw	-16
 10569  0110AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10570  0110B4  0E04               	movlw	4
 10571  0110B6  5EDE               	subwf	postinc2,f,c
 10572  0110B8  0E00               	movlw	0
 10573  0110BA  5ADD               	subwfb	postdec2,f,c
 10574  0110BC  006F FF78  F047    	movff	postinc2,btemp+10
 10575  0110C2  006F FF74  F048    	movff	postdec2,btemp+11
 10576  0110C8  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10577  0110CE  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10578  0110D4  006F FF78  F045    	movff	postinc2,btemp+8
 10579  0110DA  006F FF78  F046    	movff	postinc2,btemp+9
 10580  0110E0  006F FF78  F047    	movff	postinc2,btemp+10
 10581  0110E6  006F FF78  F048    	movff	postinc2,btemp+11
 10582  0110EC  0060  F114  F04D   	movff	btemp+8,btemp+16
 10583  0110F2  0060  F118  F04E   	movff	btemp+9,btemp+17
 10584  0110F8  0060  F11C  F04F   	movff	btemp+10,btemp+18
 10585  0110FE  0060  F120  F050   	movff	btemp+11,btemp+19
 10586  011104  6A51               	clrf	btemp+20,c
 10587  011106  BE50               	btfsc	btemp+19,7,c
 10588  011108  6851               	setf	btemp+20,c
 10589  01110A  0060  F144  F052   	movff	btemp+20,btemp+21
 10590  011110  0060  F144  F053   	movff	btemp+20,btemp+22
 10591  011116  0060  F144  F054   	movff	btemp+20,btemp+23
 10592                           
 10593                           ;stkvar	_ll @ sp[(-11)+0]
 10594  01111C  0EF5               	movlw	-11
 10595  01111E  0060  F137  FFE3   	movff	btemp+16,plusw1
 10596  011124  0EF6               	movlw	-10
 10597  011126  0060  F13B  FFE3   	movff	btemp+17,plusw1
 10598  01112C  0EF7               	movlw	-9
 10599  01112E  0060  F13F  FFE3   	movff	btemp+18,plusw1
 10600  011134  0EF8               	movlw	-8
 10601  011136  0060  F143  FFE3   	movff	btemp+19,plusw1
 10602  01113C  0EF9               	movlw	-7
 10603  01113E  0060  F147  FFE3   	movff	btemp+20,plusw1
 10604  011144  0EFA               	movlw	-6
 10605  011146  0060  F14B  FFE3   	movff	btemp+21,plusw1
 10606  01114C  0EFB               	movlw	-5
 10607  01114E  0060  F14F  FFE3   	movff	btemp+22,plusw1
 10608  011154  0EFC               	movlw	-4
 10609  011156  0060  F153  FFE3   	movff	btemp+23,plusw1
 10610  01115C  D72A               	goto	l8350
 10611  01115E                     l8366:
 10612                           
 10613                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10614                           ;stkvar	_fmt @ sp[(-11)+-4]
 10615  01115E  0EF1               	movlw	-15
 10616  011160  006F FF8F FFD9     	movff	plusw1,fsr2l
 10617  011166  0EF2               	movlw	-14
 10618  011168  006F FF8F FFDA     	movff	plusw1,fsr2h
 10619  01116E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10620  011174  006F FF77 FFF7     	movff	postdec2,tblptrh
 10621  01117A                     	if	0	;tblptru may be non-zero
 10622  01117A                     	endif
 10623  01117A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10624  01117A  0E00               	movlw	low (__mediumconst shr (0+16))
 10625  01117C  6EF8               	movwf	tblptru,c
 10626  01117E                     	endif
 10627  01117E  0008               	tblrd		*
 10628  011180  50F5               	movf	tablat,w,c
 10629  011182  0A73               	xorlw	115
 10630  011184  A4D8               	btfss	status,2,c
 10631  011186  D042               	goto	l8376
 10632                           
 10633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10634                           ;stkvar	_fmt @ sp[(-11)+-4]
 10635  011188  0EF1               	movlw	-15
 10636  01118A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10637  011190  0EF2               	movlw	-14
 10638  011192  006F FF8F FFDA     	movff	plusw1,fsr2h
 10639  011198  2ADE               	incf	postinc2,f,c
 10640  01119A  0E00               	movlw	0
 10641  01119C  22DD               	addwfc	postdec2,f,c
 10642                           
 10643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10644                           ;stkvar	_ap @ sp[(-11)+-6]
 10645  01119E  0EEF               	movlw	-17
 10646  0111A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10647  0111A6  0EF0               	movlw	-16
 10648  0111A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10649  0111AE  0E02               	movlw	2
 10650  0111B0  5EDE               	subwf	postinc2,f,c
 10651  0111B2  0E00               	movlw	0
 10652  0111B4  5ADD               	subwfb	postdec2,f,c
 10653  0111B6  006F FF78  F047    	movff	postinc2,btemp+10
 10654  0111BC  006F FF74  F048    	movff	postdec2,btemp+11
 10655  0111C2  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10656  0111C8  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10657  0111CE  006F FF78  F047    	movff	postinc2,btemp+10
 10658  0111D4  006F FF74  F048    	movff	postdec2,btemp+11
 10659                           
 10660                           ;stkvar	_cp @ sp[(-11)+8]
 10661  0111DA  0EFE               	movlw	-2
 10662  0111DC  0060  F123  FFE3   	movff	btemp+11,plusw1
 10663  0111E2  0EFD               	movlw	-3
 10664  0111E4  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10665                           
 10666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10667                           ;stkvar	_cp @ sp[(-11)+8]
 10668  0111EA  0EFD               	movlw	-3
 10669  0111EC  006F FF8F FFE6     	movff	plusw1,postinc1
 10670  0111F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10671                           
 10672                           ;stkvar	_fp @ sp[(-13)+-2]
 10673  0111F8  0EF1               	movlw	-15
 10674  0111FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10675  011200  006F FF8F FFE6     	movff	plusw1,postinc1
 10676  011206  EC13  F092         	call	_stoa	;wreg free
 10677  01120A  D069               	goto	l1950
 10678  01120C                     l8376:
 10679                           
 10680                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10681                           ;stkvar	_fmt @ sp[(-11)+-4]
 10682  01120C  0EF1               	movlw	-15
 10683  01120E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10684  011214  0EF2               	movlw	-14
 10685  011216  006F FF8F FFDA     	movff	plusw1,fsr2h
 10686  01121C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10687  011222  006F FF77 FFF7     	movff	postdec2,tblptrh
 10688  011228                     	if	0	;tblptru may be non-zero
 10689  011228                     	endif
 10690  011228                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10691  011228  0E00               	movlw	low (__mediumconst shr (0+16))
 10692  01122A  6EF8               	movwf	tblptru,c
 10693  01122C                     	endif
 10694  01122C  0008               	tblrd		*
 10695  01122E  50F5               	movf	tablat,w,c
 10696  011230  0A25               	xorlw	37
 10697  011232  A4D8               	btfss	status,2,c
 10698  011234  D01A               	goto	l8386
 10699                           
 10700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10701                           ;stkvar	_fmt @ sp[(-11)+-4]
 10702  011236  0EF1               	movlw	-15
 10703  011238  006F FF8F FFD9     	movff	plusw1,fsr2l
 10704  01123E  0EF2               	movlw	-14
 10705  011240  006F FF8F FFDA     	movff	plusw1,fsr2h
 10706  011246  2ADE               	incf	postinc2,f,c
 10707  011248  0E00               	movlw	0
 10708  01124A  22DD               	addwfc	postdec2,f,c
 10709                           
 10710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10711                           ;stkvar	_fp @ sp[(-11)+-2]
 10712  01124C  0EF3               	movlw	-13
 10713  01124E  006F FF8F FFE6     	movff	plusw1,postinc1
 10714  011254  006F FF8F FFE6     	movff	plusw1,postinc1
 10715  01125A  0E25               	movlw	37
 10716  01125C  6EE6               	movwf	postinc1,c
 10717  01125E  0E00               	movlw	0
 10718  011260  6EE6               	movwf	postinc1,c
 10719  011262  EC11  F099         	call	_fputc	;wreg free
 10720  011266                     l8382:
 10721                           
 10722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10723  011266  0E01               	movlw	1
 10724  011268  D00C               	goto	L30
 10725  01126A                     l8386:
 10726                           
 10727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10728                           ;stkvar	_fmt @ sp[(-11)+-4]
 10729  01126A  0EF1               	movlw	-15
 10730  01126C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10731  011272  0EF2               	movlw	-14
 10732  011274  006F FF8F FFDA     	movff	plusw1,fsr2h
 10733  01127A  2ADE               	incf	postinc2,f,c
 10734  01127C  0E00               	movlw	0
 10735  01127E  22DD               	addwfc	postdec2,f,c
 10736                           
 10737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 10738  011280  0E00               	movlw	0
 10739  011282                     L30:
 10740  011282  6E3D               	movwf	btemp,c
 10741  011284  0E00               	movlw	0
 10742  011286  6E3E               	movwf	btemp+1,c
 10743  011288  D02A               	goto	l1950
 10744  01128A                     l8392:
 10745                           
 10746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10747                           ;stkvar	_fp @ sp[(-11)+-2]
 10748  01128A  0EF3               	movlw	-13
 10749  01128C  006F FF8F FFE6     	movff	plusw1,postinc1
 10750  011292  006F FF8F FFE6     	movff	plusw1,postinc1
 10751                           
 10752                           ;stkvar	_fmt @ sp[(-13)+-4]
 10753  011298  0EEF               	movlw	-17
 10754  01129A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10755  0112A0  0EF0               	movlw	-16
 10756  0112A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10757  0112A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 10758  0112AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 10759  0112B4                     	if	0	;tblptru may be non-zero
 10760  0112B4                     	endif
 10761  0112B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10762  0112B4  0E00               	movlw	low (__mediumconst shr (0+16))
 10763  0112B6  6EF8               	movwf	tblptru,c
 10764  0112B8                     	endif
 10765  0112B8  0008               	tblrd		*
 10766  0112BA  50F5               	movf	tablat,w,c
 10767  0112BC  6EE6               	movwf	postinc1,c
 10768  0112BE  0E00               	movlw	0
 10769  0112C0  6EE6               	movwf	postinc1,c
 10770  0112C2  EC11  F099         	call	_fputc	;wreg free
 10771                           
 10772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10773                           ;stkvar	_fmt @ sp[(-11)+-4]
 10774  0112C6  0EF1               	movlw	-15
 10775  0112C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10776  0112CE  0EF2               	movlw	-14
 10777  0112D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10778  0112D6  2ADE               	incf	postinc2,f,c
 10779  0112D8  0E00               	movlw	0
 10780  0112DA  22DD               	addwfc	postdec2,f,c
 10781  0112DC  D7C4               	goto	l8382
 10782  0112DE                     l1950:
 10783                           
 10784                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10785  0112DE  0EEF               	movlw	239
 10786  0112E0  26E1               	addwf	fsr1l,f,c
 10787  0112E2  0EFF               	movlw	255
 10788  0112E4  22E2               	addwfc	fsr1h,f,c
 10789  0112E6  0012               	return		;funcret
 10790  0112E8                     __end_of_vfpfcnvrt:
 10791                           	opt callstack 0
 10792                           
 10793 ;; *************** function _strncmp *****************
 10794 ;; Defined at:
 10795 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;  _l              2  [STACK] PTR const unsigned char 
 10798 ;;		 -> STR_21(91), STR_20(3), STR_19(3), STR_18(3), 
 10799 ;;		 -> STR_17(26), STR_16(26), STR_15(6), STR_14(19), 
 10800 ;;		 -> STR_13(26), STR_12(17), STR_11(21), STR_10(18), 
 10801 ;;		 -> STR_9(6), STR_8(6), STR_7(14), STR_6(15), 
 10802 ;;		 -> STR_5(21), STR_4(15), STR_2(12), STR_1(17), 
 10803 ;;  _r              2  [STACK] PTR const unsigned char 
 10804 ;;		 -> STR_29(3), STR_25(3), 
 10805 ;;  n               2  [STACK] unsigned int 
 10806 ;; Auto vars:     Size  Location     Type
 10807 ;;  r               2  [STACK] PTR const unsigned char 
 10808 ;;		 -> STR_29(3), STR_25(3), 
 10809 ;;  l               2  [STACK] PTR const unsigned char 
 10810 ;;		 -> STR_21(91), STR_20(3), STR_19(3), STR_18(3), 
 10811 ;;		 -> STR_17(26), STR_16(26), STR_15(6), STR_14(19), 
 10812 ;;		 -> STR_13(26), STR_12(17), STR_11(21), STR_10(18), 
 10813 ;;		 -> STR_9(6), STR_8(6), STR_7(14), STR_6(15), 
 10814 ;;		 -> STR_5(21), STR_4(15), STR_2(12), STR_1(17), 
 10815 ;; Return value:  Size  Location     Type
 10816 ;;                  2  [STACK] int 
 10817 ;; Registers used:
 10818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10828 ;;Total ram usage:        0 bytes
 10829 ;; Hardware stack levels used:    1
 10830 ;; Hardware stack levels required when called:    3
 10831 ;; This function calls:
 10832 ;;		Nothing
 10833 ;; This function is called by:
 10834 ;;		_vfpfcnvrt
 10835 ;; This function uses a reentrant model
 10836 ;;
 10837                           
 10838                           	psect	text43
 10839  013026                     __ptext43:
 10840                           	opt callstack 0
 10841  013026                     _strncmp:
 10842                           	opt callstack 0
 10843                           
 10844                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10845  013026  52E6               	movf	postinc1,f,c
 10846  013028  52E6               	movf	postinc1,f,c
 10847  01302A  52E6               	movf	postinc1,f,c
 10848  01302C  52E6               	movf	postinc1,f,c
 10849                           
 10850                           ;stkvar	__l @ sp[(-4)+-2]
 10851                           
 10852                           ;incstack = 0
 10853  01302E  0EFA               	movlw	-6
 10854  013030  006F FF8C  F047    	movff	plusw1,btemp+10
 10855  013036  0EFB               	movlw	-5
 10856  013038  006F FF8C  F048    	movff	plusw1,btemp+11
 10857                           
 10858                           ;stkvar	_l @ sp[(-4)+2]
 10859  01303E  0EFF               	movlw	-1
 10860  013040  0060  F123  FFE3   	movff	btemp+11,plusw1
 10861  013046  0EFE               	movlw	-2
 10862  013048  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10863                           
 10864                           ;stkvar	__r @ sp[(-4)+-4]
 10865  01304E  0EF8               	movlw	-8
 10866  013050  006F FF8C  F047    	movff	plusw1,btemp+10
 10867  013056  0EF9               	movlw	-7
 10868  013058  006F FF8C  F048    	movff	plusw1,btemp+11
 10869                           
 10870                           ;stkvar	_r @ sp[(-4)+0]
 10871  01305E  0EFD               	movlw	-3
 10872  013060  0060  F123  FFE3   	movff	btemp+11,plusw1
 10873  013066  0EFC               	movlw	-4
 10874  013068  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10875                           
 10876                           ;stkvar	_n @ sp[(-4)+-6]
 10877  01306E  0EF6               	movlw	-10
 10878  013070  006F FF8C  F03D    	movff	plusw1,btemp
 10879  013076  0E01               	movlw	1
 10880  013078  5E3D               	subwf	btemp,f,c
 10881  01307A  0EF6               	movlw	-10
 10882  01307C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10883  013082  0EF7               	movlw	-9
 10884  013084  006F FF8C  F03D    	movff	plusw1,btemp
 10885  01308A  0E00               	movlw	0
 10886  01308C  5A3D               	subwfb	btemp,f,c
 10887  01308E  0EF7               	movlw	-9
 10888  013090  0060  F0F7  FFE3   	movff	btemp,plusw1
 10889  013096  0EF6               	movlw	-10
 10890  013098  28E3               	incf	plusw1,w,c
 10891  01309A  E13F               	bnz	l5732
 10892  01309C  0EF7               	movlw	-9
 10893  01309E  28E3               	incf	plusw1,w,c
 10894  0130A0  A4D8               	btfss	status,2,c
 10895  0130A2  D03B               	goto	l5732
 10896  0130A4  0E00               	movlw	0
 10897  0130A6  6E3D               	movwf	btemp,c
 10898  0130A8  0E00               	movlw	0
 10899  0130AA  6E3E               	movwf	btemp+1,c
 10900  0130AC  D0B5               	goto	l2707
 10901  0130AE                     l5730:
 10902                           
 10903                           ;stkvar	_l @ sp[(-4)+2]
 10904  0130AE  0EFE               	movlw	-2
 10905  0130B0  50E3               	movf	plusw1,w,c
 10906  0130B2  0F01               	addlw	1
 10907  0130B4  6E3D               	movwf	btemp,c
 10908  0130B6  0EFE               	movlw	-2
 10909  0130B8  0060  F0F7  FFE3   	movff	btemp,plusw1
 10910  0130BE  6A3D               	clrf	btemp,c
 10911  0130C0  0EFF               	movlw	-1
 10912  0130C2  50E3               	movf	plusw1,w,c
 10913  0130C4  203D               	addwfc	btemp,w,c
 10914  0130C6  6E3D               	movwf	btemp,c
 10915  0130C8  0EFF               	movlw	-1
 10916  0130CA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10917                           
 10918                           ;stkvar	_r @ sp[(-4)+0]
 10919  0130D0  0EFC               	movlw	-4
 10920  0130D2  50E3               	movf	plusw1,w,c
 10921  0130D4  0F01               	addlw	1
 10922  0130D6  6E3D               	movwf	btemp,c
 10923  0130D8  0EFC               	movlw	-4
 10924  0130DA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10925  0130E0  6A3D               	clrf	btemp,c
 10926  0130E2  0EFD               	movlw	-3
 10927  0130E4  50E3               	movf	plusw1,w,c
 10928  0130E6  203D               	addwfc	btemp,w,c
 10929  0130E8  6E3D               	movwf	btemp,c
 10930  0130EA  0EFD               	movlw	-3
 10931  0130EC  0060  F0F7  FFE3   	movff	btemp,plusw1
 10932                           
 10933                           ;stkvar	_n @ sp[(-4)+-6]
 10934  0130F2  0EF6               	movlw	-10
 10935  0130F4  006F FF8C  F03D    	movff	plusw1,btemp
 10936  0130FA  0E01               	movlw	1
 10937  0130FC  5E3D               	subwf	btemp,f,c
 10938  0130FE  0EF6               	movlw	-10
 10939  013100  0060  F0F7  FFE3   	movff	btemp,plusw1
 10940  013106  0EF7               	movlw	-9
 10941  013108  006F FF8C  F03D    	movff	plusw1,btemp
 10942  01310E  0E00               	movlw	0
 10943  013110  5A3D               	subwfb	btemp,f,c
 10944  013112  0EF7               	movlw	-9
 10945  013114  0060  F0F7  FFE3   	movff	btemp,plusw1
 10946  01311A                     l5732:
 10947                           
 10948                           ;stkvar	_l @ sp[(-4)+2]
 10949  01311A  50E1               	movf	fsr1l,w,c
 10950  01311C  0FFE               	addlw	-2
 10951  01311E  6ED9               	movwf	fsr2l,c
 10952  013120  50E2               	movf	fsr1h,w,c
 10953  013122  6EDA               	movwf	fsr2h,c
 10954  013124  0EFF               	movlw	255
 10955  013126  22DA               	addwfc	fsr2h,f,c
 10956  013128  006F FF7B FFF6     	movff	postinc2,tblptrl
 10957  01312E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10958  013134                     	if	0	;tblptru may be non-zero
 10959  013134                     	endif
 10960  013134                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10961  013134  0E00               	movlw	low (__mediumconst shr (0+16))
 10962  013136  6EF8               	movwf	tblptru,c
 10963  013138                     	endif
 10964  013138  0008               	tblrd		*
 10965  01313A  50F5               	movf	tablat,w,c
 10966  01313C  0900               	iorlw	0
 10967  01313E  B4D8               	btfsc	status,2,c
 10968  013140  D044               	goto	u3100
 10969                           
 10970                           ;stkvar	_r @ sp[(-4)+0]
 10971  013142  50E1               	movf	fsr1l,w,c
 10972  013144  0FFC               	addlw	-4
 10973  013146  6ED9               	movwf	fsr2l,c
 10974  013148  50E2               	movf	fsr1h,w,c
 10975  01314A  6EDA               	movwf	fsr2h,c
 10976  01314C  0EFF               	movlw	255
 10977  01314E  22DA               	addwfc	fsr2h,f,c
 10978  013150  006F FF7B FFF6     	movff	postinc2,tblptrl
 10979  013156  006F FF77 FFF7     	movff	postdec2,tblptrh
 10980  01315C                     	if	0	;tblptru may be non-zero
 10981  01315C                     	endif
 10982  01315C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10983  01315C  0E00               	movlw	low (__mediumconst shr (0+16))
 10984  01315E  6EF8               	movwf	tblptru,c
 10985  013160                     	endif
 10986  013160  0008               	tblrd		*
 10987  013162  50F5               	movf	tablat,w,c
 10988  013164  0900               	iorlw	0
 10989  013166  B4D8               	btfsc	status,2,c
 10990  013168  D030               	goto	u3100
 10991                           
 10992                           ;stkvar	_n @ sp[(-4)+-6]
 10993  01316A  0EF6               	movlw	-10
 10994  01316C  006F FF8C  F03D    	movff	plusw1,btemp
 10995  013172  0EF7               	movlw	-9
 10996  013174  50E3               	movf	plusw1,w,c
 10997  013176  103D               	iorwf	btemp,w,c
 10998  013178  B4D8               	btfsc	status,2,c
 10999  01317A  D027               	goto	u3100
 11000                           
 11001                           ;stkvar	_l @ sp[(-4)+2]
 11002  01317C  50E1               	movf	fsr1l,w,c
 11003  01317E  0FFE               	addlw	-2
 11004  013180  6ED9               	movwf	fsr2l,c
 11005  013182  50E2               	movf	fsr1h,w,c
 11006  013184  6EDA               	movwf	fsr2h,c
 11007  013186  0EFF               	movlw	255
 11008  013188  22DA               	addwfc	fsr2h,f,c
 11009  01318A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11010  013190  006F FF77 FFF7     	movff	postdec2,tblptrh
 11011  013196                     	if	0	;tblptru may be non-zero
 11012  013196                     	endif
 11013  013196                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11014  013196  0E00               	movlw	low (__mediumconst shr (0+16))
 11015  013198  6EF8               	movwf	tblptru,c
 11016  01319A                     	endif
 11017  01319A  0008               	tblrd		*
 11018  01319C  006F FFD4  F048    	movff	tablat,btemp+11
 11019                           
 11020                           ;stkvar	_r @ sp[(-4)+0]
 11021  0131A2  50E1               	movf	fsr1l,w,c
 11022  0131A4  0FFC               	addlw	-4
 11023  0131A6  6ED9               	movwf	fsr2l,c
 11024  0131A8  50E2               	movf	fsr1h,w,c
 11025  0131AA  6EDA               	movwf	fsr2h,c
 11026  0131AC  0EFF               	movlw	255
 11027  0131AE  22DA               	addwfc	fsr2h,f,c
 11028  0131B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11029  0131B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11030  0131BC                     	if	0	;tblptru may be non-zero
 11031  0131BC                     	endif
 11032  0131BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11033  0131BC  0E00               	movlw	low (__mediumconst shr (0+16))
 11034  0131BE  6EF8               	movwf	tblptru,c
 11035  0131C0                     	endif
 11036  0131C0  0008               	tblrd		*
 11037  0131C2  50F5               	movf	tablat,w,c
 11038  0131C4  1848               	xorwf	btemp+11,w,c
 11039  0131C6  B4D8               	btfsc	status,2,c
 11040  0131C8  D772               	goto	l5730
 11041  0131CA                     u3100:
 11042                           
 11043                           ;stkvar	_l @ sp[(-4)+2]
 11044  0131CA  50E1               	movf	fsr1l,w,c
 11045  0131CC  0FFE               	addlw	-2
 11046  0131CE  6ED9               	movwf	fsr2l,c
 11047  0131D0  50E2               	movf	fsr1h,w,c
 11048  0131D2  6EDA               	movwf	fsr2h,c
 11049  0131D4  0EFF               	movlw	255
 11050  0131D6  22DA               	addwfc	fsr2h,f,c
 11051  0131D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11052  0131DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11053  0131E4                     	if	0	;tblptru may be non-zero
 11054  0131E4                     	endif
 11055  0131E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11056  0131E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11057  0131E6  6EF8               	movwf	tblptru,c
 11058  0131E8                     	endif
 11059  0131E8  0008               	tblrd		*
 11060  0131EA  50F5               	movf	tablat,w,c
 11061  0131EC  6E3D               	movwf	btemp,c
 11062  0131EE  6A3E               	clrf	btemp+1,c
 11063                           
 11064                           ;stkvar	_r @ sp[(-4)+0]
 11065  0131F0  50E1               	movf	fsr1l,w,c
 11066  0131F2  0FFC               	addlw	-4
 11067  0131F4  6ED9               	movwf	fsr2l,c
 11068  0131F6  50E2               	movf	fsr1h,w,c
 11069  0131F8  6EDA               	movwf	fsr2h,c
 11070  0131FA  0EFF               	movlw	255
 11071  0131FC  22DA               	addwfc	fsr2h,f,c
 11072  0131FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11073  013204  006F FF77 FFF7     	movff	postdec2,tblptrh
 11074  01320A                     	if	0	;tblptru may be non-zero
 11075  01320A                     	endif
 11076  01320A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11077  01320A  0E00               	movlw	low (__mediumconst shr (0+16))
 11078  01320C  6EF8               	movwf	tblptru,c
 11079  01320E                     	endif
 11080  01320E  0008               	tblrd		*
 11081  013210  50F5               	movf	tablat,w,c
 11082  013212  5E3D               	subwf	btemp,f,c
 11083  013214  0E00               	movlw	0
 11084  013216  5A3E               	subwfb	btemp+1,f,c
 11085  013218                     l2707:
 11086                           
 11087                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 11088  013218  0EF6               	movlw	246
 11089  01321A  26E1               	addwf	fsr1l,f,c
 11090  01321C  0EFF               	movlw	255
 11091  01321E  22E2               	addwfc	fsr1h,f,c
 11092  013220  0012               	return		;funcret
 11093  013222                     __end_of_strncmp:
 11094                           	opt callstack 0
 11095                           
 11096 ;; *************** function _stoa *****************
 11097 ;; Defined at:
 11098 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11101 ;;		 -> f(6), NULL(0), 
 11102 ;;  s               2  [STACK] PTR unsigned char 
 11103 ;;		 -> ?_printf(2), ?_sprintf(2), STR_22(6), STR_3(6), 
 11104 ;;		 -> V(261), 
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;  nuls            7  [STACK] unsigned char [7]
 11107 ;;  l               2  [STACK] int 
 11108 ;;  p               2  [STACK] int 
 11109 ;;  cp              2  [STACK] PTR unsigned char 
 11110 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_22(6), 
 11111 ;;		 -> STR_3(6), V(261), 
 11112 ;;  w               2  [STACK] int 
 11113 ;;  i               2  [STACK] int 
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  2  [STACK] int 
 11116 ;; Registers used:
 11117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11127 ;;Total ram usage:        0 bytes
 11128 ;; Hardware stack levels used:    1
 11129 ;; Hardware stack levels required when called:    6
 11130 ;; This function calls:
 11131 ;;		_fputc
 11132 ;;		_strlen
 11133 ;; This function is called by:
 11134 ;;		_vfpfcnvrt
 11135 ;; This function uses a reentrant model
 11136 ;;
 11137                           
 11138                           	psect	text44
 11139  012426                     __ptext44:
 11140                           	opt callstack 0
 11141  012426                     _stoa:
 11142                           	opt callstack 0
 11143                           
 11144                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11145  012426  0E11               	movlw	17
 11146  012428  26E1               	addwf	fsr1l,f,c
 11147  01242A  0E00               	movlw	0
 11148  01242C  22E2               	addwfc	fsr1h,f,c
 11149                           
 11150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11151                           
 11152                           ;incstack = 0
 11153  01242E  EE20  F060         	lfsr	2,stoa@F1144
 11154                           
 11155                           ;stkvar	_nuls @ sp[(-17)+0]
 11156  012432  0E07               	movlw	7
 11157  012434  6E3D               	movwf	btemp,c
 11158  012436  0EEF               	movlw	-17
 11159  012438                     us505999:
 11160  012438  006F FF7B FFE3     	movff	postinc2,plusw1
 11161  01243E  28E8               	incf	wreg,w,c
 11162  012440  2E3D               	decfsz	btemp,f,c
 11163  012442  D7FA               	bra	us505999
 11164                           
 11165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 11166                           ;stkvar	_s @ sp[(-17)+-4]
 11167  012444  0EEB               	movlw	-21
 11168  012446  006F FF8C  F047    	movff	plusw1,btemp+10
 11169  01244C  0EEC               	movlw	-20
 11170  01244E  006F FF8C  F048    	movff	plusw1,btemp+11
 11171                           
 11172                           ;stkvar	_cp @ sp[(-17)+11]
 11173  012454  0EFB               	movlw	-5
 11174  012456  0060  F123  FFE3   	movff	btemp+11,plusw1
 11175  01245C  0EFA               	movlw	-6
 11176  01245E  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11177                           
 11178                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 11179                           ;stkvar	_cp @ sp[(-17)+11]
 11180  012464  0EFA               	movlw	-6
 11181  012466  006F FF8C  F03D    	movff	plusw1,btemp
 11182  01246C  0EFB               	movlw	-5
 11183  01246E  50E3               	movf	plusw1,w,c
 11184  012470  103D               	iorwf	btemp,w,c
 11185  012472  A4D8               	btfss	status,2,c
 11186  012474  D00E               	goto	l8280
 11187                           
 11188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 11189                           ;stkvar	_nuls @ sp[(-17)+0]
 11190  012476  0EEF               	movlw	239
 11191  012478  24E1               	addwf	fsr1l,w,c
 11192  01247A  6E47               	movwf	btemp+10,c
 11193  01247C  0EFF               	movlw	255
 11194  01247E  20E2               	addwfc	fsr1h,w,c
 11195  012480  6E48               	movwf	btemp+11,c
 11196                           
 11197                           ;stkvar	_cp @ sp[(-17)+11]
 11198  012482  0EFB               	movlw	-5
 11199  012484  0060  F123  FFE3   	movff	btemp+11,plusw1
 11200  01248A  0EFA               	movlw	-6
 11201  01248C  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11202  012492                     l8280:
 11203                           
 11204                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11205                           ;stkvar	_cp @ sp[(-17)+11]
 11206  012492  0EFA               	movlw	-6
 11207  012494  006F FF8F FFE6     	movff	plusw1,postinc1
 11208  01249A  006F FF8F FFE6     	movff	plusw1,postinc1
 11209  0124A0  EC10  F09E         	call	_strlen	;wreg free
 11210                           
 11211                           ;stkvar	_l @ sp[(-17)+7]
 11212  0124A4  0EF6               	movlw	-10
 11213  0124A6  0060  F0F7  FFE3   	movff	btemp,plusw1
 11214  0124AC  0EF7               	movlw	-9
 11215  0124AE  0060  F0FB  FFE3   	movff	btemp+1,plusw1
 11216                           
 11217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11218                           ;stkvar	_p @ sp[(-17)+9]
 11219  0124B4  0EF8               	movlw	-8
 11220  0124B6  0060  F07F  FFE3   	movff	_prec,plusw1
 11221  0124BC  0EF9               	movlw	-7
 11222  0124BE  0060  F083  FFE3   	movff	_prec+1,plusw1
 11223                           
 11224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11225                           ;stkvar	_p @ sp[(-17)+9]
 11226  0124C4  0EF9               	movlw	-7
 11227  0124C6  BEE3               	btfsc	plusw1,7,c
 11228  0124C8  D023               	goto	l1931
 11229                           
 11230                           ;stkvar	_l @ sp[(-17)+7]
 11231                           ;stkvar	_p @ sp[(-17)+9]
 11232  0124CA  50E1               	movf	fsr1l,w,c
 11233  0124CC  0FF8               	addlw	-8
 11234  0124CE  6ED9               	movwf	fsr2l,c
 11235  0124D0  50E2               	movf	fsr1h,w,c
 11236  0124D2  6EDA               	movwf	fsr2h,c
 11237  0124D4  0EFF               	movlw	255
 11238  0124D6  22DA               	addwfc	fsr2h,f,c
 11239  0124D8  0EF6               	movlw	-10
 11240  0124DA  50E3               	movf	plusw1,w,c
 11241  0124DC  5CDE               	subwf	postinc2,w,c
 11242  0124DE  50DE               	movf	postinc2,w,c
 11243  0124E0  0A80               	xorlw	128
 11244  0124E2  6E3D               	movwf	btemp,c
 11245  0124E4  0EF7               	movlw	-9
 11246  0124E6  50E3               	movf	plusw1,w,c
 11247  0124E8  0A80               	xorlw	128
 11248  0124EA  583D               	subwfb	btemp,w,c
 11249  0124EC  B0D8               	btfsc	status,0,c
 11250  0124EE  D010               	goto	l1931
 11251                           
 11252                           ;stkvar	_p @ sp[(-17)+9]
 11253                           ;stkvar	_l @ sp[(-17)+7]
 11254  0124F0  0EF8               	movlw	-8
 11255  0124F2  006F FF8C  F03D    	movff	plusw1,btemp
 11256  0124F8  0EF6               	movlw	-10
 11257  0124FA  0060  F0F7  FFE3   	movff	btemp,plusw1
 11258  012500  0EF9               	movlw	-7
 11259  012502  006F FF8C  F03D    	movff	plusw1,btemp
 11260  012508  0EF7               	movlw	-9
 11261  01250A  0060  F0F7  FFE3   	movff	btemp,plusw1
 11262  012510                     l1931:
 11263                           
 11264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11265                           ;stkvar	_l @ sp[(-17)+7]
 11266                           ;stkvar	_p @ sp[(-17)+9]
 11267  012510  0EF6               	movlw	-10
 11268  012512  006F FF8C  F03D    	movff	plusw1,btemp
 11269  012518  0EF8               	movlw	-8
 11270  01251A  0060  F0F7  FFE3   	movff	btemp,plusw1
 11271  012520  0EF7               	movlw	-9
 11272  012522  006F FF8C  F03D    	movff	plusw1,btemp
 11273  012528  0EF9               	movlw	-7
 11274  01252A  0060  F0F7  FFE3   	movff	btemp,plusw1
 11275                           
 11276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11277                           ;stkvar	_w @ sp[(-17)+13]
 11278  012530  0EFC               	movlw	-4
 11279  012532  0060  F077  FFE3   	movff	_width,plusw1
 11280  012538  0EFD               	movlw	-3
 11281  01253A  0060  F07B  FFE3   	movff	_width+1,plusw1
 11282                           
 11283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11284  012540  A021               	btfss	_flags,0,c
 11285  012542  D01F               	goto	l8300
 11286  012544  D031               	goto	u5100
 11287  012546                     l8296:
 11288                           
 11289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11290                           ;stkvar	_fp @ sp[(-17)+-2]
 11291  012546  0EED               	movlw	-19
 11292  012548  006F FF8F FFE6     	movff	plusw1,postinc1
 11293  01254E  006F FF8F FFE6     	movff	plusw1,postinc1
 11294  012554  0E20               	movlw	32
 11295  012556  6EE6               	movwf	postinc1,c
 11296  012558  0E00               	movlw	0
 11297  01255A  6EE6               	movwf	postinc1,c
 11298  01255C  EC11  F099         	call	_fputc	;wreg free
 11299                           
 11300                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11301                           ;stkvar	_l @ sp[(-17)+7]
 11302  012560  0EF6               	movlw	-10
 11303  012562  50E3               	movf	plusw1,w,c
 11304  012564  0F01               	addlw	1
 11305  012566  6E3D               	movwf	btemp,c
 11306  012568  0EF6               	movlw	-10
 11307  01256A  0060  F0F7  FFE3   	movff	btemp,plusw1
 11308  012570  6A3D               	clrf	btemp,c
 11309  012572  0EF7               	movlw	-9
 11310  012574  50E3               	movf	plusw1,w,c
 11311  012576  203D               	addwfc	btemp,w,c
 11312  012578  6E3D               	movwf	btemp,c
 11313  01257A  0EF7               	movlw	-9
 11314  01257C  0060  F0F7  FFE3   	movff	btemp,plusw1
 11315  012582                     l8300:
 11316                           
 11317                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11318                           ;stkvar	_w @ sp[(-17)+13]
 11319                           ;stkvar	_l @ sp[(-17)+7]
 11320  012582  50E1               	movf	fsr1l,w,c
 11321  012584  0FF6               	addlw	-10
 11322  012586  6ED9               	movwf	fsr2l,c
 11323  012588  50E2               	movf	fsr1h,w,c
 11324  01258A  6EDA               	movwf	fsr2h,c
 11325  01258C  0EFF               	movlw	255
 11326  01258E  22DA               	addwfc	fsr2h,f,c
 11327  012590  0EFC               	movlw	-4
 11328  012592  50E3               	movf	plusw1,w,c
 11329  012594  5CDE               	subwf	postinc2,w,c
 11330  012596  50DE               	movf	postinc2,w,c
 11331  012598  0A80               	xorlw	128
 11332  01259A  6E3D               	movwf	btemp,c
 11333  01259C  0EFD               	movlw	-3
 11334  01259E  50E3               	movf	plusw1,w,c
 11335  0125A0  0A80               	xorlw	128
 11336  0125A2  583D               	subwfb	btemp,w,c
 11337  0125A4  A0D8               	btfss	status,0,c
 11338  0125A6  D7CF               	goto	l8296
 11339  0125A8                     u5100:
 11340                           
 11341                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11342                           ;stkvar	_i @ sp[(-17)+15]
 11343  0125A8  0EFE               	movlw	-2
 11344  0125AA  6AE3               	clrf	plusw1,c
 11345  0125AC  0EFF               	movlw	-1
 11346  0125AE  6AE3               	clrf	plusw1,c
 11347                           
 11348                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11349  0125B0  D045               	goto	l8310
 11350  0125B2                     l8304:
 11351                           
 11352                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11353                           ;stkvar	_fp @ sp[(-17)+-2]
 11354  0125B2  0EED               	movlw	-19
 11355  0125B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11356  0125BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11357                           
 11358                           ;stkvar	_cp @ sp[(-19)+11]
 11359  0125C0  0EF8               	movlw	-8
 11360  0125C2  006F FF8F FFF6     	movff	plusw1,tblptrl
 11361  0125C8  0EF9               	movlw	-7
 11362  0125CA  006F FF8F FFF7     	movff	plusw1,tblptrh
 11363  0125D0  0E00               	movlw	low (__mediumconst shr (0+16))
 11364  0125D2  6EF8               	movwf	tblptru,c
 11365  0125D4  0E1F               	movlw	(high __ramtop+-1)
 11366  0125D6  64F7               	cpfsgt	tblptrh,c
 11367  0125D8  D003               	bra	u5117
 11368  0125DA  0008               	tblrd		*
 11369  0125DC  50F5               	movf	tablat,w,c
 11370  0125DE  D007               	bra	u5110
 11371  0125E0                     u5117:
 11372  0125E0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11373  0125E6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11374  0125EC  50EF               	movf	indf0,w,c
 11375  0125EE                     u5110:
 11376  0125EE  6EE6               	movwf	postinc1,c
 11377  0125F0  0E00               	movlw	0
 11378  0125F2  6EE6               	movwf	postinc1,c
 11379  0125F4  EC11  F099         	call	_fputc	;wreg free
 11380                           
 11381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11382                           ;stkvar	_cp @ sp[(-17)+11]
 11383  0125F8  0EFA               	movlw	-6
 11384  0125FA  50E3               	movf	plusw1,w,c
 11385  0125FC  0F01               	addlw	1
 11386  0125FE  6E3D               	movwf	btemp,c
 11387  012600  0EFA               	movlw	-6
 11388  012602  0060  F0F7  FFE3   	movff	btemp,plusw1
 11389  012608  6A3D               	clrf	btemp,c
 11390  01260A  0EFB               	movlw	-5
 11391  01260C  50E3               	movf	plusw1,w,c
 11392  01260E  203D               	addwfc	btemp,w,c
 11393  012610  6E3D               	movwf	btemp,c
 11394  012612  0EFB               	movlw	-5
 11395  012614  0060  F0F7  FFE3   	movff	btemp,plusw1
 11396                           
 11397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11398                           ;stkvar	_i @ sp[(-17)+15]
 11399  01261A  0EFE               	movlw	-2
 11400  01261C  50E3               	movf	plusw1,w,c
 11401  01261E  0F01               	addlw	1
 11402  012620  6E3D               	movwf	btemp,c
 11403  012622  0EFE               	movlw	-2
 11404  012624  0060  F0F7  FFE3   	movff	btemp,plusw1
 11405  01262A  6A3D               	clrf	btemp,c
 11406  01262C  0EFF               	movlw	-1
 11407  01262E  50E3               	movf	plusw1,w,c
 11408  012630  203D               	addwfc	btemp,w,c
 11409  012632  6E3D               	movwf	btemp,c
 11410  012634  0EFF               	movlw	-1
 11411  012636  0060  F0F7  FFE3   	movff	btemp,plusw1
 11412  01263C                     l8310:
 11413                           
 11414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11415                           ;stkvar	_p @ sp[(-17)+9]
 11416                           ;stkvar	_i @ sp[(-17)+15]
 11417  01263C  50E1               	movf	fsr1l,w,c
 11418  01263E  0FFE               	addlw	-2
 11419  012640  6ED9               	movwf	fsr2l,c
 11420  012642  50E2               	movf	fsr1h,w,c
 11421  012644  6EDA               	movwf	fsr2h,c
 11422  012646  0EFF               	movlw	255
 11423  012648  22DA               	addwfc	fsr2h,f,c
 11424  01264A  0EF8               	movlw	-8
 11425  01264C  50E3               	movf	plusw1,w,c
 11426  01264E  5CDE               	subwf	postinc2,w,c
 11427  012650  50DE               	movf	postinc2,w,c
 11428  012652  0A80               	xorlw	128
 11429  012654  6E3D               	movwf	btemp,c
 11430  012656  0EF9               	movlw	-7
 11431  012658  50E3               	movf	plusw1,w,c
 11432  01265A  0A80               	xorlw	128
 11433  01265C  583D               	subwfb	btemp,w,c
 11434  01265E  A0D8               	btfss	status,0,c
 11435  012660  D7A8               	goto	l8304
 11436                           
 11437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11438  012662  B021               	btfsc	_flags,0,c
 11439  012664  D01F               	goto	l8318
 11440  012666  D031               	goto	u5140
 11441  012668                     l8314:
 11442                           
 11443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11444                           ;stkvar	_fp @ sp[(-17)+-2]
 11445  012668  0EED               	movlw	-19
 11446  01266A  006F FF8F FFE6     	movff	plusw1,postinc1
 11447  012670  006F FF8F FFE6     	movff	plusw1,postinc1
 11448  012676  0E20               	movlw	32
 11449  012678  6EE6               	movwf	postinc1,c
 11450  01267A  0E00               	movlw	0
 11451  01267C  6EE6               	movwf	postinc1,c
 11452  01267E  EC11  F099         	call	_fputc	;wreg free
 11453                           
 11454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11455                           ;stkvar	_l @ sp[(-17)+7]
 11456  012682  0EF6               	movlw	-10
 11457  012684  50E3               	movf	plusw1,w,c
 11458  012686  0F01               	addlw	1
 11459  012688  6E3D               	movwf	btemp,c
 11460  01268A  0EF6               	movlw	-10
 11461  01268C  0060  F0F7  FFE3   	movff	btemp,plusw1
 11462  012692  6A3D               	clrf	btemp,c
 11463  012694  0EF7               	movlw	-9
 11464  012696  50E3               	movf	plusw1,w,c
 11465  012698  203D               	addwfc	btemp,w,c
 11466  01269A  6E3D               	movwf	btemp,c
 11467  01269C  0EF7               	movlw	-9
 11468  01269E  0060  F0F7  FFE3   	movff	btemp,plusw1
 11469  0126A4                     l8318:
 11470                           
 11471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11472                           ;stkvar	_w @ sp[(-17)+13]
 11473                           ;stkvar	_l @ sp[(-17)+7]
 11474  0126A4  50E1               	movf	fsr1l,w,c
 11475  0126A6  0FF6               	addlw	-10
 11476  0126A8  6ED9               	movwf	fsr2l,c
 11477  0126AA  50E2               	movf	fsr1h,w,c
 11478  0126AC  6EDA               	movwf	fsr2h,c
 11479  0126AE  0EFF               	movlw	255
 11480  0126B0  22DA               	addwfc	fsr2h,f,c
 11481  0126B2  0EFC               	movlw	-4
 11482  0126B4  50E3               	movf	plusw1,w,c
 11483  0126B6  5CDE               	subwf	postinc2,w,c
 11484  0126B8  50DE               	movf	postinc2,w,c
 11485  0126BA  0A80               	xorlw	128
 11486  0126BC  6E3D               	movwf	btemp,c
 11487  0126BE  0EFD               	movlw	-3
 11488  0126C0  50E3               	movf	plusw1,w,c
 11489  0126C2  0A80               	xorlw	128
 11490  0126C4  583D               	subwfb	btemp,w,c
 11491  0126C6  A0D8               	btfss	status,0,c
 11492  0126C8  D7CF               	goto	l8314
 11493  0126CA                     u5140:
 11494                           
 11495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 11496                           ;stkvar	_l @ sp[(-17)+7]
 11497  0126CA  0EF6               	movlw	-10
 11498  0126CC  006F FF8C  F03D    	movff	plusw1,btemp
 11499  0126D2  0EF7               	movlw	-9
 11500  0126D4  006F FF8C  F03E    	movff	plusw1,btemp+1
 11501                           
 11502                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11503  0126DA  0EEB               	movlw	235
 11504  0126DC  26E1               	addwf	fsr1l,f,c
 11505  0126DE  0EFF               	movlw	255
 11506  0126E0  22E2               	addwfc	fsr1h,f,c
 11507  0126E2  0012               	return		;funcret
 11508  0126E4                     __end_of_stoa:
 11509                           	opt callstack 0
 11510                           
 11511 ;; *************** function _dtoa *****************
 11512 ;; Defined at:
 11513 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11514 ;; Parameters:    Size  Location     Type
 11515 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11516 ;;		 -> f(6), NULL(0), 
 11517 ;;  d               8  [STACK] long long 
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;  n               8  [STACK] long long 
 11520 ;;  i               2  [STACK] int 
 11521 ;;  s               2  [STACK] int 
 11522 ;;  w               2  [STACK] int 
 11523 ;;  p               2  [STACK] int 
 11524 ;; Return value:  Size  Location     Type
 11525 ;;                  2  [STACK] int 
 11526 ;; Registers used:
 11527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 11528 ;; Tracked objects:
 11529 ;;		On entry : 0/0
 11530 ;;		On exit  : 0/0
 11531 ;;		Unchanged: 0/0
 11532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11537 ;;Total ram usage:        0 bytes
 11538 ;; Hardware stack levels used:    1
 11539 ;; Hardware stack levels required when called:    8
 11540 ;; This function calls:
 11541 ;;		___aodiv
 11542 ;;		___aomod
 11543 ;;		_abs
 11544 ;;		_pad
 11545 ;; This function is called by:
 11546 ;;		_vfpfcnvrt
 11547 ;; This function uses a reentrant model
 11548 ;;
 11549                           
 11550                           	psect	text45
 11551  0112E8                     __ptext45:
 11552                           	opt callstack 0
 11553  0112E8                     _dtoa:
 11554                           	opt callstack 0
 11555                           
 11556                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11557  0112E8  0E12               	movlw	18
 11558  0112EA  26E1               	addwf	fsr1l,f,c
 11559  0112EC  0E00               	movlw	0
 11560  0112EE  22E2               	addwfc	fsr1h,f,c
 11561                           
 11562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 11563                           ;stkvar	_d @ sp[(-18)+-10]
 11564                           
 11565                           ;incstack = 0
 11566  0112F0  0EE4               	movlw	228
 11567  0112F2  24E1               	addwf	fsr1l,w,c
 11568  0112F4  6ED9               	movwf	fsr2l,c
 11569  0112F6  0EFF               	movlw	255
 11570  0112F8  20E2               	addwfc	fsr1h,w,c
 11571  0112FA  6EDA               	movwf	fsr2h,c
 11572                           
 11573                           ;stkvar	_n @ sp[(-18)+2]
 11574  0112FC  0E08               	movlw	8
 11575  0112FE  6E3D               	movwf	btemp,c
 11576  011300  0EF0               	movlw	-16
 11577  011302                     us488999:
 11578  011302  006F FF7B FFE3     	movff	postinc2,plusw1
 11579  011308  28E8               	incf	wreg,w,c
 11580  01130A  2E3D               	decfsz	btemp,f,c
 11581  01130C  D7FA               	bra	us488999
 11582                           
 11583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 11584                           ;stkvar	_n @ sp[(-18)+2]
 11585  01130E  0EF7               	movlw	-9
 11586  011310  AEE3               	btfss	plusw1,7,c
 11587  011312  D002               	goto	u4890
 11588  011314  0E01               	movlw	1
 11589  011316  D001               	goto	u4900
 11590  011318                     u4890:
 11591  011318  0E00               	movlw	0
 11592  01131A                     u4900:
 11593  01131A  6E47               	movwf	btemp+10,c
 11594  01131C  6A48               	clrf	btemp+11,c
 11595                           
 11596                           ;stkvar	_s @ sp[(-18)+12]
 11597  01131E  0EFA               	movlw	-6
 11598  011320  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11599  011326  0EFB               	movlw	-5
 11600  011328  0060  F123  FFE3   	movff	btemp+11,plusw1
 11601                           
 11602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 11603                           ;stkvar	_s @ sp[(-18)+12]
 11604  01132E  0EFA               	movlw	-6
 11605  011330  006F FF8C  F03D    	movff	plusw1,btemp
 11606  011336  0EFB               	movlw	-5
 11607  011338  50E3               	movf	plusw1,w,c
 11608  01133A  103D               	iorwf	btemp,w,c
 11609  01133C  B4D8               	btfsc	status,2,c
 11610  01133E  D025               	goto	u4920
 11611                           
 11612                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 11613                           ;stkvar	_n @ sp[(-18)+2]
 11614                           ;stkvar	_n @ sp[(-18)+2]
 11615  011340  0EF0               	movlw	-16
 11616  011342  6CE3               	negf	plusw1,c
 11617  011344  0EF1               	movlw	-15
 11618  011346  1EE3               	comf	plusw1,f,c
 11619  011348  0EF2               	movlw	-14
 11620  01134A  1EE3               	comf	plusw1,f,c
 11621  01134C  0EF3               	movlw	-13
 11622  01134E  1EE3               	comf	plusw1,f,c
 11623  011350  0EF4               	movlw	-12
 11624  011352  1EE3               	comf	plusw1,f,c
 11625  011354  0EF5               	movlw	-11
 11626  011356  1EE3               	comf	plusw1,f,c
 11627  011358  0EF6               	movlw	-10
 11628  01135A  1EE3               	comf	plusw1,f,c
 11629  01135C  0EF7               	movlw	-9
 11630  01135E  1EE3               	comf	plusw1,f,c
 11631  011360  E314               	bnc	u4920
 11632  011362  0EF1               	movlw	-15
 11633  011364  2AE3               	incf	plusw1,f,c
 11634  011366  E311               	bnc	u4920
 11635  011368  0EF2               	movlw	-14
 11636  01136A  2AE3               	incf	plusw1,f,c
 11637  01136C  E30E               	bnc	u4920
 11638  01136E  0EF3               	movlw	-13
 11639  011370  2AE3               	incf	plusw1,f,c
 11640  011372  E30B               	bnc	u4920
 11641  011374  0EF4               	movlw	-12
 11642  011376  2AE3               	incf	plusw1,f,c
 11643  011378  E308               	bnc	u4920
 11644  01137A  0EF5               	movlw	-11
 11645  01137C  2AE3               	incf	plusw1,f,c
 11646  01137E  E305               	bnc	u4920
 11647  011380  0EF6               	movlw	-10
 11648  011382  2AE3               	incf	plusw1,f,c
 11649  011384  E302               	bnc	u4920
 11650  011386  0EF7               	movlw	-9
 11651  011388  2AE3               	incf	plusw1,f,c
 11652  01138A                     u4920:
 11653                           
 11654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 11655  01138A  AE20               	btfss	_prec+1,7,c
 11656                           
 11657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 11658  01138C  9221               	bcf	_flags,1,c
 11659                           
 11660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 11661  01138E  BE20               	btfsc	_prec+1,7,c
 11662  011390  D005               	goto	u4940
 11663  011392  5020               	movf	_prec+1,w,c
 11664  011394  E110               	bnz	l8222
 11665  011396  041F               	decf	_prec,w,c
 11666  011398  B0D8               	btfsc	status,0,c
 11667  01139A  D00D               	goto	l8222
 11668  01139C                     u4940:
 11669  01139C  0E01               	movlw	1
 11670  01139E  6E47               	movwf	btemp+10,c
 11671  0113A0  0E00               	movlw	0
 11672  0113A2  6E48               	movwf	btemp+11,c
 11673                           
 11674                           ;stkvar	_p @ sp[(-18)+16]
 11675  0113A4  0EFE               	movlw	-2
 11676  0113A6  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11677  0113AC  0EFF               	movlw	-1
 11678  0113AE  0060  F123  FFE3   	movff	btemp+11,plusw1
 11679  0113B4  D008               	goto	l1904
 11680  0113B6                     l8222:
 11681                           
 11682                           ;stkvar	_p @ sp[(-18)+16]
 11683  0113B6  0EFE               	movlw	-2
 11684  0113B8  0060  F07F  FFE3   	movff	_prec,plusw1
 11685  0113BE  0EFF               	movlw	-1
 11686  0113C0  0060  F083  FFE3   	movff	_prec+1,plusw1
 11687  0113C6                     l1904:
 11688                           
 11689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 11690                           ;stkvar	_w @ sp[(-18)+14]
 11691  0113C6  0EFC               	movlw	-4
 11692  0113C8  0060  F077  FFE3   	movff	_width,plusw1
 11693  0113CE  0EFD               	movlw	-3
 11694  0113D0  0060  F07B  FFE3   	movff	_width+1,plusw1
 11695                           
 11696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 11697                           ;stkvar	_s @ sp[(-18)+12]
 11698  0113D6  0EFA               	movlw	-6
 11699  0113D8  006F FF8C  F03D    	movff	plusw1,btemp
 11700  0113DE  0EFB               	movlw	-5
 11701  0113E0  50E3               	movf	plusw1,w,c
 11702  0113E2  103D               	iorwf	btemp,w,c
 11703  0113E4  A4D8               	btfss	status,2,c
 11704  0113E6  D002               	goto	u4960
 11705  0113E8  A421               	btfss	_flags,2,c
 11706  0113EA  D00A               	goto	l8230
 11707  0113EC                     u4960:
 11708                           
 11709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 11710                           ;stkvar	_w @ sp[(-18)+14]
 11711  0113EC  50E1               	movf	fsr1l,w,c
 11712  0113EE  0FFC               	addlw	-4
 11713  0113F0  6ED9               	movwf	fsr2l,c
 11714  0113F2  50E2               	movf	fsr1h,w,c
 11715  0113F4  6EDA               	movwf	fsr2h,c
 11716  0113F6  0EFF               	movlw	255
 11717  0113F8  22DA               	addwfc	fsr2h,f,c
 11718  0113FA  06DE               	decf	postinc2,f,c
 11719  0113FC  0E00               	movlw	0
 11720  0113FE  5ADD               	subwfb	postdec2,f,c
 11721  011400                     l8230:
 11722                           
 11723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 11724  011400  0E1F               	movlw	31
 11725  011402  6E47               	movwf	btemp+10,c
 11726  011404  0E00               	movlw	0
 11727  011406  6E48               	movwf	btemp+11,c
 11728                           
 11729                           ;stkvar	_i @ sp[(-18)+10]
 11730  011408  0EF8               	movlw	-8
 11731  01140A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11732  011410  0EF9               	movlw	-7
 11733  011412  0060  F123  FFE3   	movff	btemp+11,plusw1
 11734                           
 11735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 11736  011418  0101               	movlb	1	; () banked
 11737  01141A  6BC5               	clrf	(_dbuf+31)& (0+255),b
 11738                           
 11739                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11740  01141C  D109               	goto	l8244
 11741  01141E                     l8234:
 11742                           
 11743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 11744                           ;stkvar	_i @ sp[(-18)+10]
 11745  01141E  50E1               	movf	fsr1l,w,c
 11746  011420  0FF8               	addlw	-8
 11747  011422  6ED9               	movwf	fsr2l,c
 11748  011424  50E2               	movf	fsr1h,w,c
 11749  011426  6EDA               	movwf	fsr2h,c
 11750  011428  0EFF               	movlw	255
 11751  01142A  22DA               	addwfc	fsr2h,f,c
 11752  01142C  06DE               	decf	postinc2,f,c
 11753  01142E  0E00               	movlw	0
 11754  011430  5ADD               	subwfb	postdec2,f,c
 11755                           
 11756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 11757  011432  0E0A               	movlw	10
 11758  011434  6EE6               	movwf	postinc1,c
 11759  011436  0E00               	movlw	0
 11760  011438  6EE6               	movwf	postinc1,c
 11761  01143A  0E00               	movlw	0
 11762  01143C  6EE6               	movwf	postinc1,c
 11763  01143E  0E00               	movlw	0
 11764  011440  6EE6               	movwf	postinc1,c
 11765  011442  0E00               	movlw	0
 11766  011444  6EE6               	movwf	postinc1,c
 11767  011446  0E00               	movlw	0
 11768  011448  6EE6               	movwf	postinc1,c
 11769  01144A  0E00               	movlw	0
 11770  01144C  6EE6               	movwf	postinc1,c
 11771  01144E  0E00               	movlw	0
 11772  011450  6EE6               	movwf	postinc1,c
 11773                           
 11774                           ;stkvar	_n @ sp[(-26)+2]
 11775  011452  50E1               	movf	fsr1l,w,c
 11776  011454  0FE8               	addlw	-24
 11777  011456  6ED9               	movwf	fsr2l,c
 11778  011458  50E2               	movf	fsr1h,w,c
 11779  01145A  6EDA               	movwf	fsr2h,c
 11780  01145C  0EFF               	movlw	255
 11781  01145E  22DA               	addwfc	fsr2h,f,c
 11782  011460  006F FF7B FFE6     	movff	postinc2,postinc1
 11783  011466  006F FF7B FFE6     	movff	postinc2,postinc1
 11784  01146C  006F FF7B FFE6     	movff	postinc2,postinc1
 11785  011472  006F FF7B FFE6     	movff	postinc2,postinc1
 11786  011478  006F FF7B FFE6     	movff	postinc2,postinc1
 11787  01147E  006F FF7B FFE6     	movff	postinc2,postinc1
 11788  011484  006F FF7B FFE6     	movff	postinc2,postinc1
 11789  01148A  006F FF7B FFE6     	movff	postinc2,postinc1
 11790  011490  ECF0  F095         	call	___aomod	;wreg free
 11791  011494  52E5               	movf	postdec1,f,c
 11792  011496  006F FF9C  F054    	movff	indf1,btemp+23
 11793  01149C  52E5               	movf	postdec1,f,c
 11794  01149E  006F FF9C  F053    	movff	indf1,btemp+22
 11795  0114A4  52E5               	movf	postdec1,f,c
 11796  0114A6  006F FF9C  F052    	movff	indf1,btemp+21
 11797  0114AC  52E5               	movf	postdec1,f,c
 11798  0114AE  006F FF9C  F051    	movff	indf1,btemp+20
 11799  0114B4  52E5               	movf	postdec1,f,c
 11800  0114B6  006F FF9C  F050    	movff	indf1,btemp+19
 11801  0114BC  52E5               	movf	postdec1,f,c
 11802  0114BE  006F FF9C  F04F    	movff	indf1,btemp+18
 11803  0114C4  52E5               	movf	postdec1,f,c
 11804  0114C6  006F FF9C  F04E    	movff	indf1,btemp+17
 11805  0114CC  52E5               	movf	postdec1,f,c
 11806  0114CE  006F FF9C  F04D    	movff	indf1,btemp+16
 11807  0114D4  0EF8               	movlw	248
 11808  0114D6  26E1               	addwf	fsr1l,f,c
 11809  0114D8  0EFF               	movlw	255
 11810  0114DA  22E2               	addwfc	fsr1h,f,c
 11811  0114DC  0060  F134  F047   	movff	btemp+16,btemp+10
 11812  0114E2  0060  F138  F048   	movff	btemp+17,btemp+11
 11813  0114E8  0060  F11F  FFE6   	movff	btemp+10,postinc1
 11814  0114EE  0060  F123  FFE6   	movff	btemp+11,postinc1
 11815  0114F4  EC85  F0A1         	call	_abs	;wreg free
 11816  0114F8  0E30               	movlw	48
 11817  0114FA  263D               	addwf	btemp,f,c
 11818                           
 11819                           ;stkvar	_i @ sp[(-18)+10]
 11820  0114FC  0EF8               	movlw	-8
 11821  0114FE  006F FF8C  F047    	movff	plusw1,btemp+10
 11822  011504  0EF9               	movlw	-7
 11823  011506  006F FF8C  F048    	movff	plusw1,btemp+11
 11824  01150C  0EA6               	movlw	low _dbuf
 11825  01150E  2447               	addwf	btemp+10,w,c
 11826  011510  6ED9               	movwf	fsr2l,c
 11827  011512  0E01               	movlw	high _dbuf
 11828  011514  2048               	addwfc	btemp+11,w,c
 11829  011516  6EDA               	movwf	fsr2h,c
 11830  011518  0060  F0F7  FFDF   	movff	btemp,indf2
 11831                           
 11832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 11833                           ;stkvar	_p @ sp[(-18)+16]
 11834  01151E  50E1               	movf	fsr1l,w,c
 11835  011520  0FFE               	addlw	-2
 11836  011522  6ED9               	movwf	fsr2l,c
 11837  011524  50E2               	movf	fsr1h,w,c
 11838  011526  6EDA               	movwf	fsr2h,c
 11839  011528  0EFF               	movlw	255
 11840  01152A  22DA               	addwfc	fsr2h,f,c
 11841  01152C  06DE               	decf	postinc2,f,c
 11842  01152E  0E00               	movlw	0
 11843  011530  5ADD               	subwfb	postdec2,f,c
 11844                           
 11845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 11846                           ;stkvar	_w @ sp[(-18)+14]
 11847  011532  50E1               	movf	fsr1l,w,c
 11848  011534  0FFC               	addlw	-4
 11849  011536  6ED9               	movwf	fsr2l,c
 11850  011538  50E2               	movf	fsr1h,w,c
 11851  01153A  6EDA               	movwf	fsr2h,c
 11852  01153C  0EFF               	movlw	255
 11853  01153E  22DA               	addwfc	fsr2h,f,c
 11854  011540  06DE               	decf	postinc2,f,c
 11855  011542  0E00               	movlw	0
 11856  011544  5ADD               	subwfb	postdec2,f,c
 11857                           
 11858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 11859  011546  0E0A               	movlw	10
 11860  011548  6EE6               	movwf	postinc1,c
 11861  01154A  0E00               	movlw	0
 11862  01154C  6EE6               	movwf	postinc1,c
 11863  01154E  0E00               	movlw	0
 11864  011550  6EE6               	movwf	postinc1,c
 11865  011552  0E00               	movlw	0
 11866  011554  6EE6               	movwf	postinc1,c
 11867  011556  0E00               	movlw	0
 11868  011558  6EE6               	movwf	postinc1,c
 11869  01155A  0E00               	movlw	0
 11870  01155C  6EE6               	movwf	postinc1,c
 11871  01155E  0E00               	movlw	0
 11872  011560  6EE6               	movwf	postinc1,c
 11873  011562  0E00               	movlw	0
 11874  011564  6EE6               	movwf	postinc1,c
 11875                           
 11876                           ;stkvar	_n @ sp[(-26)+2]
 11877  011566  50E1               	movf	fsr1l,w,c
 11878  011568  0FE8               	addlw	-24
 11879  01156A  6ED9               	movwf	fsr2l,c
 11880  01156C  50E2               	movf	fsr1h,w,c
 11881  01156E  6EDA               	movwf	fsr2h,c
 11882  011570  0EFF               	movlw	255
 11883  011572  22DA               	addwfc	fsr2h,f,c
 11884  011574  006F FF7B FFE6     	movff	postinc2,postinc1
 11885  01157A  006F FF7B FFE6     	movff	postinc2,postinc1
 11886  011580  006F FF7B FFE6     	movff	postinc2,postinc1
 11887  011586  006F FF7B FFE6     	movff	postinc2,postinc1
 11888  01158C  006F FF7B FFE6     	movff	postinc2,postinc1
 11889  011592  006F FF7B FFE6     	movff	postinc2,postinc1
 11890  011598  006F FF7B FFE6     	movff	postinc2,postinc1
 11891  01159E  006F FF7B FFE6     	movff	postinc2,postinc1
 11892  0115A4  EC72  F093         	call	___aodiv	;wreg free
 11893  0115A8  52E5               	movf	postdec1,f,c
 11894  0115AA  006F FF9C  F054    	movff	indf1,btemp+23
 11895  0115B0  52E5               	movf	postdec1,f,c
 11896  0115B2  006F FF9C  F053    	movff	indf1,btemp+22
 11897  0115B8  52E5               	movf	postdec1,f,c
 11898  0115BA  006F FF9C  F052    	movff	indf1,btemp+21
 11899  0115C0  52E5               	movf	postdec1,f,c
 11900  0115C2  006F FF9C  F051    	movff	indf1,btemp+20
 11901  0115C8  52E5               	movf	postdec1,f,c
 11902  0115CA  006F FF9C  F050    	movff	indf1,btemp+19
 11903  0115D0  52E5               	movf	postdec1,f,c
 11904  0115D2  006F FF9C  F04F    	movff	indf1,btemp+18
 11905  0115D8  52E5               	movf	postdec1,f,c
 11906  0115DA  006F FF9C  F04E    	movff	indf1,btemp+17
 11907  0115E0  52E5               	movf	postdec1,f,c
 11908  0115E2  006F FF9C  F04D    	movff	indf1,btemp+16
 11909  0115E8  0EF8               	movlw	248
 11910  0115EA  26E1               	addwf	fsr1l,f,c
 11911  0115EC  0EFF               	movlw	255
 11912  0115EE  22E2               	addwfc	fsr1h,f,c
 11913                           
 11914                           ;stkvar	_n @ sp[(-18)+2]
 11915  0115F0  0EF0               	movlw	-16
 11916  0115F2  0060  F137  FFE3   	movff	btemp+16,plusw1
 11917  0115F8  0EF1               	movlw	-15
 11918  0115FA  0060  F13B  FFE3   	movff	btemp+17,plusw1
 11919  011600  0EF2               	movlw	-14
 11920  011602  0060  F13F  FFE3   	movff	btemp+18,plusw1
 11921  011608  0EF3               	movlw	-13
 11922  01160A  0060  F143  FFE3   	movff	btemp+19,plusw1
 11923  011610  0EF4               	movlw	-12
 11924  011612  0060  F147  FFE3   	movff	btemp+20,plusw1
 11925  011618  0EF5               	movlw	-11
 11926  01161A  0060  F14B  FFE3   	movff	btemp+21,plusw1
 11927  011620  0EF6               	movlw	-10
 11928  011622  0060  F14F  FFE3   	movff	btemp+22,plusw1
 11929  011628  0EF7               	movlw	-9
 11930  01162A  0060  F153  FFE3   	movff	btemp+23,plusw1
 11931  011630                     l8244:
 11932                           
 11933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11934                           ;stkvar	_i @ sp[(-18)+10]
 11935  011630  0EF9               	movlw	-7
 11936  011632  BEE3               	btfsc	plusw1,7,c
 11937  011634  D036               	goto	u5010
 11938  011636  0EF9               	movlw	-7
 11939  011638  50E3               	movf	plusw1,w,c
 11940  01163A  E104               	bnz	u4970
 11941  01163C  0EF8               	movlw	-8
 11942  01163E  04E3               	decf	plusw1,w,c
 11943  011640  A0D8               	btfss	status,0,c
 11944  011642  D02F               	goto	u5010
 11945  011644                     u4970:
 11946                           
 11947                           ;stkvar	_n @ sp[(-18)+2]
 11948  011644  0EF0               	movlw	-16
 11949  011646  50E3               	movf	plusw1,w,c
 11950  011648  E115               	bnz	u4981
 11951  01164A  0EF1               	movlw	-15
 11952  01164C  50E3               	movf	plusw1,w,c
 11953  01164E  E112               	bnz	u4981
 11954  011650  0EF2               	movlw	-14
 11955  011652  50E3               	movf	plusw1,w,c
 11956  011654  E10F               	bnz	u4981
 11957  011656  0EF3               	movlw	-13
 11958  011658  50E3               	movf	plusw1,w,c
 11959  01165A  E10C               	bnz	u4981
 11960  01165C  0EF4               	movlw	-12
 11961  01165E  50E3               	movf	plusw1,w,c
 11962  011660  E109               	bnz	u4981
 11963  011662  0EF5               	movlw	-11
 11964  011664  50E3               	movf	plusw1,w,c
 11965  011666  E106               	bnz	u4981
 11966  011668  0EF6               	movlw	-10
 11967  01166A  50E3               	movf	plusw1,w,c
 11968  01166C  E103               	bnz	u4981
 11969  01166E  0EF7               	movlw	-9
 11970  011670  50E3               	movf	plusw1,w,c
 11971  011672  A4D8               	btfss	status,2,c
 11972  011674                     u4981:
 11973  011674  D6D4               	goto	l8234
 11974                           
 11975                           ;stkvar	_p @ sp[(-18)+16]
 11976  011676  0EFF               	movlw	-1
 11977  011678  BEE3               	btfsc	plusw1,7,c
 11978  01167A  D007               	goto	u4990
 11979  01167C  0EFF               	movlw	-1
 11980  01167E  50E3               	movf	plusw1,w,c
 11981  011680  E103               	bnz	u4991
 11982  011682  0EFE               	movlw	-2
 11983  011684  04E3               	decf	plusw1,w,c
 11984  011686  B0D8               	btfsc	status,0,c
 11985  011688                     u4991:
 11986  011688  D6CA               	goto	l8234
 11987  01168A                     u4990:
 11988                           
 11989                           ;stkvar	_w @ sp[(-18)+14]
 11990  01168A  0EFD               	movlw	-3
 11991  01168C  BEE3               	btfsc	plusw1,7,c
 11992  01168E  D009               	goto	u5010
 11993  011690  0EFD               	movlw	-3
 11994  011692  50E3               	movf	plusw1,w,c
 11995  011694  E104               	bnz	u5000
 11996  011696  0EFC               	movlw	-4
 11997  011698  04E3               	decf	plusw1,w,c
 11998  01169A  A0D8               	btfss	status,0,c
 11999  01169C  D002               	goto	u5010
 12000  01169E                     u5000:
 12001  01169E  B221               	btfsc	_flags,1,c
 12002  0116A0  D6BE               	goto	l8234
 12003  0116A2                     u5010:
 12004                           
 12005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 12006                           ;stkvar	_s @ sp[(-18)+12]
 12007  0116A2  0EFA               	movlw	-6
 12008  0116A4  006F FF8C  F03D    	movff	plusw1,btemp
 12009  0116AA  0EFB               	movlw	-5
 12010  0116AC  50E3               	movf	plusw1,w,c
 12011  0116AE  103D               	iorwf	btemp,w,c
 12012  0116B0  A4D8               	btfss	status,2,c
 12013  0116B2  D002               	goto	u5030
 12014  0116B4  A421               	btfss	_flags,2,c
 12015  0116B6  D033               	goto	l8268
 12016  0116B8                     u5030:
 12017                           
 12018                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 12019                           ;stkvar	_i @ sp[(-18)+10]
 12020  0116B8  50E1               	movf	fsr1l,w,c
 12021  0116BA  0FF8               	addlw	-8
 12022  0116BC  6ED9               	movwf	fsr2l,c
 12023  0116BE  50E2               	movf	fsr1h,w,c
 12024  0116C0  6EDA               	movwf	fsr2h,c
 12025  0116C2  0EFF               	movlw	255
 12026  0116C4  22DA               	addwfc	fsr2h,f,c
 12027  0116C6  06DE               	decf	postinc2,f,c
 12028  0116C8  0E00               	movlw	0
 12029  0116CA  5ADD               	subwfb	postdec2,f,c
 12030                           
 12031                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 12032                           ;stkvar	_s @ sp[(-18)+12]
 12033  0116CC  0EFA               	movlw	-6
 12034  0116CE  006F FF8C  F03D    	movff	plusw1,btemp
 12035  0116D4  0EFB               	movlw	-5
 12036  0116D6  50E3               	movf	plusw1,w,c
 12037  0116D8  103D               	iorwf	btemp,w,c
 12038  0116DA  A4D8               	btfss	status,2,c
 12039  0116DC  D002               	goto	l8264
 12040  0116DE  0E2B               	movlw	43
 12041  0116E0  D001               	goto	L31
 12042  0116E2                     l8264:
 12043  0116E2  0E2D               	movlw	45
 12044  0116E4                     L31:
 12045  0116E4  6E47               	movwf	btemp+10,c
 12046  0116E6  0E00               	movlw	0
 12047  0116E8  6E48               	movwf	btemp+11,c
 12048                           
 12049                           ;stkvar	_dtoa$4035 @ sp[(-18)+0]
 12050  0116EA  0EEE               	movlw	-18
 12051  0116EC  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12052  0116F2  0EEF               	movlw	-17
 12053  0116F4  0060  F123  FFE3   	movff	btemp+11,plusw1
 12054                           
 12055                           ;stkvar	_dtoa$4035 @ sp[(-18)+0]
 12056                           ;stkvar	_i @ sp[(-18)+10]
 12057  0116FA  0EF8               	movlw	-8
 12058  0116FC  006F FF8C  F047    	movff	plusw1,btemp+10
 12059  011702  0EF9               	movlw	-7
 12060  011704  006F FF8C  F048    	movff	plusw1,btemp+11
 12061  01170A  0EA6               	movlw	low _dbuf
 12062  01170C  2447               	addwf	btemp+10,w,c
 12063  01170E  6ED9               	movwf	fsr2l,c
 12064  011710  0E01               	movlw	high _dbuf
 12065  011712  2048               	addwfc	btemp+11,w,c
 12066  011714  6EDA               	movwf	fsr2h,c
 12067  011716  0EEE               	movlw	-18
 12068  011718  006F FF8F FFDF     	movff	plusw1,indf2
 12069  01171E                     l8268:
 12070                           
 12071                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 12072                           ;stkvar	_w @ sp[(-18)+14]
 12073  01171E  0EFC               	movlw	-4
 12074  011720  006F FF8F FFE6     	movff	plusw1,postinc1
 12075  011726  006F FF8F FFE6     	movff	plusw1,postinc1
 12076                           
 12077                           ;stkvar	_i @ sp[(-20)+10]
 12078  01172C  0EA6               	movlw	low _dbuf
 12079  01172E  6E47               	movwf	btemp+10,c
 12080  011730  0E01               	movlw	high _dbuf
 12081  011732  6E48               	movwf	btemp+11,c
 12082  011734  0EF6               	movlw	-10
 12083  011736  50E3               	movf	plusw1,w,c
 12084  011738  2647               	addwf	btemp+10,f,c
 12085  01173A  0EF7               	movlw	-9
 12086  01173C  50E3               	movf	plusw1,w,c
 12087  01173E  2248               	addwfc	btemp+11,f,c
 12088  011740  0060  F11F  FFE6   	movff	btemp+10,postinc1
 12089  011746  0060  F123  FFE6   	movff	btemp+11,postinc1
 12090                           
 12091                           ;stkvar	_fp @ sp[(-22)+-2]
 12092  01174C  0EE8               	movlw	-24
 12093  01174E  006F FF8F FFE6     	movff	plusw1,postinc1
 12094  011754  006F FF8F FFE6     	movff	plusw1,postinc1
 12095  01175A  ECA3  F099         	call	_pad	;wreg free
 12096                           
 12097                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 12098  01175E  0EE4               	movlw	228
 12099  011760  26E1               	addwf	fsr1l,f,c
 12100  011762  0EFF               	movlw	255
 12101  011764  22E2               	addwfc	fsr1h,f,c
 12102  011766  0012               	return		;funcret
 12103  011768                     __end_of_dtoa:
 12104                           	opt callstack 0
 12105                           
 12106 ;; *************** function _abs *****************
 12107 ;; Defined at:
 12108 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;  a               2  [STACK] int 
 12111 ;; Auto vars:     Size  Location     Type
 12112 ;;		None
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  2  [STACK] int 
 12115 ;; Registers used:
 12116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 12117 ;; Tracked objects:
 12118 ;;		On entry : 0/1
 12119 ;;		On exit  : 0/0
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12126 ;;Total ram usage:        0 bytes
 12127 ;; Hardware stack levels used:    1
 12128 ;; Hardware stack levels required when called:    3
 12129 ;; This function calls:
 12130 ;;		Nothing
 12131 ;; This function is called by:
 12132 ;;		_dtoa
 12133 ;; This function uses a reentrant model
 12134 ;;
 12135                           
 12136                           	psect	text46
 12137  01430A                     __ptext46:
 12138                           	opt callstack 0
 12139  01430A                     _abs:
 12140                           	opt callstack 23
 12141                           
 12142                           ;stkvar	_a @ sp[(0)+-2]
 12143                           
 12144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12145                           ;incstack = 0
 12146  01430A  0EFF               	movlw	-1
 12147  01430C  BEE3               	btfsc	plusw1,7,c
 12148  01430E  D007               	goto	u2540
 12149  014310  0EFF               	movlw	-1
 12150  014312  50E3               	movf	plusw1,w,c
 12151  014314  E112               	bnz	l5506
 12152  014316  0EFE               	movlw	-2
 12153  014318  04E3               	decf	plusw1,w,c
 12154  01431A  B0D8               	btfsc	status,0,c
 12155  01431C  D00E               	goto	l5506
 12156  01431E                     u2540:
 12157                           
 12158                           ;stkvar	_a @ sp[(0)+-2]
 12159  01431E  0EFE               	movlw	-2
 12160  014320  006F FF8C  F03D    	movff	plusw1,btemp
 12161  014326  1E3D               	comf	btemp,f,c
 12162  014328  0EFF               	movlw	-1
 12163  01432A  006F FF8C  F03E    	movff	plusw1,btemp+1
 12164  014330  1E3E               	comf	btemp+1,f,c
 12165  014332  2A3D               	incf	btemp,f,c
 12166  014334  B4D8               	btfsc	status,2,c
 12167  014336  2A3E               	incf	btemp+1,f,c
 12168  014338  D008               	goto	l2645
 12169  01433A                     l5506:
 12170                           
 12171                           ;stkvar	_a @ sp[(0)+-2]
 12172  01433A  0EFE               	movlw	-2
 12173  01433C  006F FF8C  F03D    	movff	plusw1,btemp
 12174  014342  0EFF               	movlw	-1
 12175  014344  006F FF8C  F03E    	movff	plusw1,btemp+1
 12176  01434A                     l2645:
 12177                           
 12178                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 12179  01434A  52E5               	movf	postdec1,f,c
 12180  01434C  52E5               	movf	postdec1,f,c
 12181  01434E  0012               	return		;funcret
 12182  014350                     __end_of_abs:
 12183                           	opt callstack 0
 12184                           
 12185 ;; *************** function ___aomod *****************
 12186 ;; Defined at:
 12187 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 12188 ;; Parameters:    Size  Location     Type
 12189 ;;  dividend        8  [STACK] long long 
 12190 ;;  divisor         8  [STACK] long long 
 12191 ;; Auto vars:     Size  Location     Type
 12192 ;;  sign            1  [STACK] unsigned char 
 12193 ;;  counter         1  [STACK] unsigned char 
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  8  [STACK] long long 
 12196 ;; Registers used:
 12197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/1
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12207 ;;Total ram usage:        0 bytes
 12208 ;; Hardware stack levels used:    1
 12209 ;; Hardware stack levels required when called:    3
 12210 ;; This function calls:
 12211 ;;		Nothing
 12212 ;; This function is called by:
 12213 ;;		_dtoa
 12214 ;; This function uses a reentrant model
 12215 ;;
 12216                           
 12217                           	psect	text47
 12218  012BE0                     __ptext47:
 12219                           	opt callstack 0
 12220  012BE0                     ___aomod:
 12221                           	opt callstack 0
 12222                           
 12223                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12224  012BE0  52E6               	movf	postinc1,f,c
 12225  012BE2  52E6               	movf	postinc1,f,c
 12226                           
 12227                           ;stkvar	_sign @ sp[(-2)+0]
 12228                           
 12229                           ;incstack = 0
 12230  012BE4  0EFE               	movlw	-2
 12231  012BE6  6AE3               	clrf	plusw1,c
 12232                           
 12233                           ;stkvar	_dividend @ sp[(-2)+-8]
 12234  012BE8  0EFD               	movlw	-3
 12235  012BEA  AEE3               	btfss	plusw1,7,c
 12236  012BEC  D028               	goto	l5562
 12237                           
 12238                           ;stkvar	_dividend @ sp[(-2)+-8]
 12239                           ;stkvar	_dividend @ sp[(-2)+-8]
 12240  012BEE  0EF6               	movlw	-10
 12241  012BF0  6CE3               	negf	plusw1,c
 12242  012BF2  0EF7               	movlw	-9
 12243  012BF4  1EE3               	comf	plusw1,f,c
 12244  012BF6  0EF8               	movlw	-8
 12245  012BF8  1EE3               	comf	plusw1,f,c
 12246  012BFA  0EF9               	movlw	-7
 12247  012BFC  1EE3               	comf	plusw1,f,c
 12248  012BFE  0EFA               	movlw	-6
 12249  012C00  1EE3               	comf	plusw1,f,c
 12250  012C02  0EFB               	movlw	-5
 12251  012C04  1EE3               	comf	plusw1,f,c
 12252  012C06  0EFC               	movlw	-4
 12253  012C08  1EE3               	comf	plusw1,f,c
 12254  012C0A  0EFD               	movlw	-3
 12255  012C0C  1EE3               	comf	plusw1,f,c
 12256  012C0E  E314               	bnc	u2680
 12257  012C10  0EF7               	movlw	-9
 12258  012C12  2AE3               	incf	plusw1,f,c
 12259  012C14  E311               	bnc	u2680
 12260  012C16  0EF8               	movlw	-8
 12261  012C18  2AE3               	incf	plusw1,f,c
 12262  012C1A  E30E               	bnc	u2680
 12263  012C1C  0EF9               	movlw	-7
 12264  012C1E  2AE3               	incf	plusw1,f,c
 12265  012C20  E30B               	bnc	u2680
 12266  012C22  0EFA               	movlw	-6
 12267  012C24  2AE3               	incf	plusw1,f,c
 12268  012C26  E308               	bnc	u2680
 12269  012C28  0EFB               	movlw	-5
 12270  012C2A  2AE3               	incf	plusw1,f,c
 12271  012C2C  E305               	bnc	u2680
 12272  012C2E  0EFC               	movlw	-4
 12273  012C30  2AE3               	incf	plusw1,f,c
 12274  012C32  E302               	bnc	u2680
 12275  012C34  0EFD               	movlw	-3
 12276  012C36  2AE3               	incf	plusw1,f,c
 12277  012C38                     u2680:
 12278                           
 12279                           ;stkvar	_sign @ sp[(-2)+0]
 12280  012C38  0EFE               	movlw	-2
 12281  012C3A  6AE3               	clrf	plusw1,c
 12282  012C3C  2AE3               	incf	plusw1,f,c
 12283  012C3E                     l5562:
 12284                           
 12285                           ;stkvar	_divisor @ sp[(-2)+-16]
 12286  012C3E  0EF5               	movlw	-11
 12287  012C40  AEE3               	btfss	plusw1,7,c
 12288  012C42  D025               	goto	u2700
 12289                           
 12290                           ;stkvar	_divisor @ sp[(-2)+-16]
 12291                           ;stkvar	_divisor @ sp[(-2)+-16]
 12292  012C44  0EEE               	movlw	-18
 12293  012C46  6CE3               	negf	plusw1,c
 12294  012C48  0EEF               	movlw	-17
 12295  012C4A  1EE3               	comf	plusw1,f,c
 12296  012C4C  0EF0               	movlw	-16
 12297  012C4E  1EE3               	comf	plusw1,f,c
 12298  012C50  0EF1               	movlw	-15
 12299  012C52  1EE3               	comf	plusw1,f,c
 12300  012C54  0EF2               	movlw	-14
 12301  012C56  1EE3               	comf	plusw1,f,c
 12302  012C58  0EF3               	movlw	-13
 12303  012C5A  1EE3               	comf	plusw1,f,c
 12304  012C5C  0EF4               	movlw	-12
 12305  012C5E  1EE3               	comf	plusw1,f,c
 12306  012C60  0EF5               	movlw	-11
 12307  012C62  1EE3               	comf	plusw1,f,c
 12308  012C64  E314               	bnc	u2700
 12309  012C66  0EEF               	movlw	-17
 12310  012C68  2AE3               	incf	plusw1,f,c
 12311  012C6A  E311               	bnc	u2700
 12312  012C6C  0EF0               	movlw	-16
 12313  012C6E  2AE3               	incf	plusw1,f,c
 12314  012C70  E30E               	bnc	u2700
 12315  012C72  0EF1               	movlw	-15
 12316  012C74  2AE3               	incf	plusw1,f,c
 12317  012C76  E30B               	bnc	u2700
 12318  012C78  0EF2               	movlw	-14
 12319  012C7A  2AE3               	incf	plusw1,f,c
 12320  012C7C  E308               	bnc	u2700
 12321  012C7E  0EF3               	movlw	-13
 12322  012C80  2AE3               	incf	plusw1,f,c
 12323  012C82  E305               	bnc	u2700
 12324  012C84  0EF4               	movlw	-12
 12325  012C86  2AE3               	incf	plusw1,f,c
 12326  012C88  E302               	bnc	u2700
 12327  012C8A  0EF5               	movlw	-11
 12328  012C8C  2AE3               	incf	plusw1,f,c
 12329  012C8E                     u2700:
 12330                           
 12331                           ;stkvar	_divisor @ sp[(-2)+-16]
 12332  012C8E  0EEE               	movlw	-18
 12333  012C90  50E3               	movf	plusw1,w,c
 12334  012C92  E116               	bnz	u2710
 12335  012C94  0EEF               	movlw	-17
 12336  012C96  50E3               	movf	plusw1,w,c
 12337  012C98  E113               	bnz	u2710
 12338  012C9A  0EF0               	movlw	-16
 12339  012C9C  50E3               	movf	plusw1,w,c
 12340  012C9E  E110               	bnz	u2710
 12341  012CA0  0EF1               	movlw	-15
 12342  012CA2  50E3               	movf	plusw1,w,c
 12343  012CA4  E10D               	bnz	u2710
 12344  012CA6  0EF2               	movlw	-14
 12345  012CA8  50E3               	movf	plusw1,w,c
 12346  012CAA  E10A               	bnz	u2710
 12347  012CAC  0EF3               	movlw	-13
 12348  012CAE  50E3               	movf	plusw1,w,c
 12349  012CB0  E107               	bnz	u2710
 12350  012CB2  0EF4               	movlw	-12
 12351  012CB4  50E3               	movf	plusw1,w,c
 12352  012CB6  E104               	bnz	u2710
 12353  012CB8  0EF5               	movlw	-11
 12354  012CBA  50E3               	movf	plusw1,w,c
 12355  012CBC  B4D8               	btfsc	status,2,c
 12356  012CBE  D075               	goto	u2740
 12357  012CC0                     u2710:
 12358                           
 12359                           ;stkvar	_counter @ sp[(-2)+1]
 12360  012CC0  0EFF               	movlw	-1
 12361  012CC2  6AE3               	clrf	plusw1,c
 12362  012CC4  D012               	goto	L32
 12363  012CC6                     l5570:
 12364                           
 12365                           ;stkvar	_divisor @ sp[(-2)+-16]
 12366  012CC6  90D8               	bcf	status,0,c
 12367  012CC8  0EEE               	movlw	-18
 12368  012CCA  36E3               	rlcf	plusw1,f,c
 12369  012CCC  0EEF               	movlw	-17
 12370  012CCE  36E3               	rlcf	plusw1,f,c
 12371  012CD0  0EF0               	movlw	-16
 12372  012CD2  36E3               	rlcf	plusw1,f,c
 12373  012CD4  0EF1               	movlw	-15
 12374  012CD6  36E3               	rlcf	plusw1,f,c
 12375  012CD8  0EF2               	movlw	-14
 12376  012CDA  36E3               	rlcf	plusw1,f,c
 12377  012CDC  0EF3               	movlw	-13
 12378  012CDE  36E3               	rlcf	plusw1,f,c
 12379  012CE0  0EF4               	movlw	-12
 12380  012CE2  36E3               	rlcf	plusw1,f,c
 12381  012CE4  0EF5               	movlw	-11
 12382  012CE6  36E3               	rlcf	plusw1,f,c
 12383                           
 12384                           ;stkvar	_counter @ sp[(-2)+1]
 12385  012CE8  0EFF               	movlw	-1
 12386  012CEA                     L32:
 12387  012CEA  2AE3               	incf	plusw1,f,c
 12388                           
 12389                           ;stkvar	_divisor @ sp[(-2)+-16]
 12390  012CEC  0EF5               	movlw	-11
 12391  012CEE  AEE3               	btfss	plusw1,7,c
 12392  012CF0  D7EA               	goto	l5570
 12393  012CF2                     u2720:
 12394                           
 12395                           ;stkvar	_divisor @ sp[(-2)+-16]
 12396                           ;stkvar	_dividend @ sp[(-2)+-8]
 12397  012CF2  50E1               	movf	fsr1l,w,c
 12398  012CF4  0FF6               	addlw	-10
 12399  012CF6  6ED9               	movwf	fsr2l,c
 12400  012CF8  50E2               	movf	fsr1h,w,c
 12401  012CFA  6EDA               	movwf	fsr2h,c
 12402  012CFC  0EFF               	movlw	255
 12403  012CFE  22DA               	addwfc	fsr2h,f,c
 12404  012D00  0EEE               	movlw	-18
 12405  012D02  50E3               	movf	plusw1,w,c
 12406  012D04  5CDE               	subwf	postinc2,w,c
 12407  012D06  0EEF               	movlw	-17
 12408  012D08  50E3               	movf	plusw1,w,c
 12409  012D0A  58DE               	subwfb	postinc2,w,c
 12410  012D0C  0EF0               	movlw	-16
 12411  012D0E  50E3               	movf	plusw1,w,c
 12412  012D10  58DE               	subwfb	postinc2,w,c
 12413  012D12  0EF1               	movlw	-15
 12414  012D14  50E3               	movf	plusw1,w,c
 12415  012D16  58DE               	subwfb	postinc2,w,c
 12416  012D18  0EF2               	movlw	-14
 12417  012D1A  50E3               	movf	plusw1,w,c
 12418  012D1C  58DE               	subwfb	postinc2,w,c
 12419  012D1E  0EF3               	movlw	-13
 12420  012D20  50E3               	movf	plusw1,w,c
 12421  012D22  58DE               	subwfb	postinc2,w,c
 12422  012D24  0EF4               	movlw	-12
 12423  012D26  50E3               	movf	plusw1,w,c
 12424  012D28  58DE               	subwfb	postinc2,w,c
 12425  012D2A  0EF5               	movlw	-11
 12426  012D2C  50E3               	movf	plusw1,w,c
 12427  012D2E  58DE               	subwfb	postinc2,w,c
 12428  012D30  A0D8               	btfss	status,0,c
 12429  012D32  D01F               	goto	l5578
 12430                           
 12431                           ;stkvar	_divisor @ sp[(-2)+-16]
 12432                           ;stkvar	_dividend @ sp[(-2)+-8]
 12433  012D34  50E1               	movf	fsr1l,w,c
 12434  012D36  0FF6               	addlw	-10
 12435  012D38  6ED9               	movwf	fsr2l,c
 12436  012D3A  50E2               	movf	fsr1h,w,c
 12437  012D3C  6EDA               	movwf	fsr2h,c
 12438  012D3E  0EFF               	movlw	255
 12439  012D40  22DA               	addwfc	fsr2h,f,c
 12440  012D42  0EEE               	movlw	-18
 12441  012D44  50E3               	movf	plusw1,w,c
 12442  012D46  5EDE               	subwf	postinc2,f,c
 12443  012D48  0EEF               	movlw	-17
 12444  012D4A  50E3               	movf	plusw1,w,c
 12445  012D4C  5ADE               	subwfb	postinc2,f,c
 12446  012D4E  0EF0               	movlw	-16
 12447  012D50  50E3               	movf	plusw1,w,c
 12448  012D52  5ADE               	subwfb	postinc2,f,c
 12449  012D54  0EF1               	movlw	-15
 12450  012D56  50E3               	movf	plusw1,w,c
 12451  012D58  5ADE               	subwfb	postinc2,f,c
 12452  012D5A  0EF2               	movlw	-14
 12453  012D5C  50E3               	movf	plusw1,w,c
 12454  012D5E  5ADE               	subwfb	postinc2,f,c
 12455  012D60  0EF3               	movlw	-13
 12456  012D62  50E3               	movf	plusw1,w,c
 12457  012D64  5ADE               	subwfb	postinc2,f,c
 12458  012D66  0EF4               	movlw	-12
 12459  012D68  50E3               	movf	plusw1,w,c
 12460  012D6A  5ADE               	subwfb	postinc2,f,c
 12461  012D6C  0EF5               	movlw	-11
 12462  012D6E  50E3               	movf	plusw1,w,c
 12463  012D70  5ADE               	subwfb	postinc2,f,c
 12464  012D72                     l5578:
 12465                           
 12466                           ;stkvar	_divisor @ sp[(-2)+-16]
 12467  012D72  90D8               	bcf	status,0,c
 12468  012D74  0EF5               	movlw	-11
 12469  012D76  32E3               	rrcf	plusw1,f,c
 12470  012D78  0EF4               	movlw	-12
 12471  012D7A  32E3               	rrcf	plusw1,f,c
 12472  012D7C  0EF3               	movlw	-13
 12473  012D7E  32E3               	rrcf	plusw1,f,c
 12474  012D80  0EF2               	movlw	-14
 12475  012D82  32E3               	rrcf	plusw1,f,c
 12476  012D84  0EF1               	movlw	-15
 12477  012D86  32E3               	rrcf	plusw1,f,c
 12478  012D88  0EF0               	movlw	-16
 12479  012D8A  32E3               	rrcf	plusw1,f,c
 12480  012D8C  0EEF               	movlw	-17
 12481  012D8E  32E3               	rrcf	plusw1,f,c
 12482  012D90  0EEE               	movlw	-18
 12483  012D92  32E3               	rrcf	plusw1,f,c
 12484                           
 12485                           ;stkvar	_counter @ sp[(-2)+1]
 12486  012D94  0EFF               	movlw	-1
 12487  012D96  50E3               	movf	plusw1,w,c
 12488  012D98  6E3D               	movwf	btemp,c
 12489  012D9A  0E01               	movlw	1
 12490  012D9C  5E3D               	subwf	btemp,f,c
 12491  012D9E  0EFF               	movlw	-1
 12492  012DA0  0060  F0F7  FFE3   	movff	btemp,plusw1
 12493  012DA6  A4D8               	btfss	status,2,c
 12494  012DA8  D7A4               	goto	u2720
 12495  012DAA                     u2740:
 12496                           
 12497                           ;stkvar	_sign @ sp[(-2)+0]
 12498  012DAA  0EFE               	movlw	-2
 12499  012DAC  50E3               	movf	plusw1,w,c
 12500  012DAE  B4D8               	btfsc	status,2,c
 12501  012DB0  D025               	goto	u2760
 12502                           
 12503                           ;stkvar	_dividend @ sp[(-2)+-8]
 12504                           ;stkvar	_dividend @ sp[(-2)+-8]
 12505  012DB2  0EF6               	movlw	-10
 12506  012DB4  6CE3               	negf	plusw1,c
 12507  012DB6  0EF7               	movlw	-9
 12508  012DB8  1EE3               	comf	plusw1,f,c
 12509  012DBA  0EF8               	movlw	-8
 12510  012DBC  1EE3               	comf	plusw1,f,c
 12511  012DBE  0EF9               	movlw	-7
 12512  012DC0  1EE3               	comf	plusw1,f,c
 12513  012DC2  0EFA               	movlw	-6
 12514  012DC4  1EE3               	comf	plusw1,f,c
 12515  012DC6  0EFB               	movlw	-5
 12516  012DC8  1EE3               	comf	plusw1,f,c
 12517  012DCA  0EFC               	movlw	-4
 12518  012DCC  1EE3               	comf	plusw1,f,c
 12519  012DCE  0EFD               	movlw	-3
 12520  012DD0  1EE3               	comf	plusw1,f,c
 12521  012DD2  E314               	bnc	u2760
 12522  012DD4  0EF7               	movlw	-9
 12523  012DD6  2AE3               	incf	plusw1,f,c
 12524  012DD8  E311               	bnc	u2760
 12525  012DDA  0EF8               	movlw	-8
 12526  012DDC  2AE3               	incf	plusw1,f,c
 12527  012DDE  E30E               	bnc	u2760
 12528  012DE0  0EF9               	movlw	-7
 12529  012DE2  2AE3               	incf	plusw1,f,c
 12530  012DE4  E30B               	bnc	u2760
 12531  012DE6  0EFA               	movlw	-6
 12532  012DE8  2AE3               	incf	plusw1,f,c
 12533  012DEA  E308               	bnc	u2760
 12534  012DEC  0EFB               	movlw	-5
 12535  012DEE  2AE3               	incf	plusw1,f,c
 12536  012DF0  E305               	bnc	u2760
 12537  012DF2  0EFC               	movlw	-4
 12538  012DF4  2AE3               	incf	plusw1,f,c
 12539  012DF6  E302               	bnc	u2760
 12540  012DF8  0EFD               	movlw	-3
 12541  012DFA  2AE3               	incf	plusw1,f,c
 12542  012DFC                     u2760:
 12543                           
 12544                           ;stkvar	_dividend @ sp[(-2)+-8]
 12545  012DFC  0EF6               	movlw	246
 12546  012DFE  24E1               	addwf	fsr1l,w,c
 12547  012E00  6ED9               	movwf	fsr2l,c
 12548  012E02  0EFF               	movlw	255
 12549  012E04  20E2               	addwfc	fsr1h,w,c
 12550  012E06  6EDA               	movwf	fsr2h,c
 12551                           
 12552                           ;stkvar	?___aomod @ sp[(-2)+-8]
 12553  012E08  0E08               	movlw	8
 12554  012E0A  6E3D               	movwf	btemp,c
 12555  012E0C  0EF6               	movlw	-10
 12556  012E0E                     us277999:
 12557  012E0E  006F FF7B FFE3     	movff	postinc2,plusw1
 12558  012E14  28E8               	incf	wreg,w,c
 12559  012E16  2E3D               	decfsz	btemp,f,c
 12560  012E18  D7FA               	bra	us277999
 12561                           
 12562                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 12563  012E1A  52E5               	movf	postdec1,f,c
 12564  012E1C  52E5               	movf	postdec1,f,c
 12565  012E1E  0012               	return		;funcret
 12566  012E20                     __end_of___aomod:
 12567                           	opt callstack 0
 12568                           
 12569 ;; *************** function ___aodiv *****************
 12570 ;; Defined at:
 12571 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;  dividend        8  [STACK] long long 
 12574 ;;  divisor         8  [STACK] long long 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;  quotient        8  [STACK] long long 
 12577 ;;  sign            1  [STACK] unsigned char 
 12578 ;;  counter         1  [STACK] unsigned char 
 12579 ;; Return value:  Size  Location     Type
 12580 ;;                  8  [STACK] long long 
 12581 ;; Registers used:
 12582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12583 ;; Tracked objects:
 12584 ;;		On entry : 0/1
 12585 ;;		On exit  : 0/0
 12586 ;;		Unchanged: 0/0
 12587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12592 ;;Total ram usage:        0 bytes
 12593 ;; Hardware stack levels used:    1
 12594 ;; Hardware stack levels required when called:    3
 12595 ;; This function calls:
 12596 ;;		Nothing
 12597 ;; This function is called by:
 12598 ;;		_dtoa
 12599 ;; This function uses a reentrant model
 12600 ;;
 12601                           
 12602                           	psect	text48
 12603  0126E4                     __ptext48:
 12604                           	opt callstack 0
 12605  0126E4                     ___aodiv:
 12606                           	opt callstack 0
 12607                           
 12608                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 12609  0126E4  0E0A               	movlw	10
 12610  0126E6  26E1               	addwf	fsr1l,f,c
 12611  0126E8  0E00               	movlw	0
 12612  0126EA  22E2               	addwfc	fsr1h,f,c
 12613                           
 12614                           ;stkvar	_sign @ sp[(-10)+8]
 12615                           
 12616                           ;incstack = 0
 12617  0126EC  0EFE               	movlw	-2
 12618  0126EE  6AE3               	clrf	plusw1,c
 12619                           
 12620                           ;stkvar	_divisor @ sp[(-10)+-16]
 12621  0126F0  0EED               	movlw	-19
 12622  0126F2  AEE3               	btfss	plusw1,7,c
 12623  0126F4  D028               	goto	l5518
 12624                           
 12625                           ;stkvar	_divisor @ sp[(-10)+-16]
 12626                           ;stkvar	_divisor @ sp[(-10)+-16]
 12627  0126F6  0EE6               	movlw	-26
 12628  0126F8  6CE3               	negf	plusw1,c
 12629  0126FA  0EE7               	movlw	-25
 12630  0126FC  1EE3               	comf	plusw1,f,c
 12631  0126FE  0EE8               	movlw	-24
 12632  012700  1EE3               	comf	plusw1,f,c
 12633  012702  0EE9               	movlw	-23
 12634  012704  1EE3               	comf	plusw1,f,c
 12635  012706  0EEA               	movlw	-22
 12636  012708  1EE3               	comf	plusw1,f,c
 12637  01270A  0EEB               	movlw	-21
 12638  01270C  1EE3               	comf	plusw1,f,c
 12639  01270E  0EEC               	movlw	-20
 12640  012710  1EE3               	comf	plusw1,f,c
 12641  012712  0EED               	movlw	-19
 12642  012714  1EE3               	comf	plusw1,f,c
 12643  012716  E314               	bnc	u2560
 12644  012718  0EE7               	movlw	-25
 12645  01271A  2AE3               	incf	plusw1,f,c
 12646  01271C  E311               	bnc	u2560
 12647  01271E  0EE8               	movlw	-24
 12648  012720  2AE3               	incf	plusw1,f,c
 12649  012722  E30E               	bnc	u2560
 12650  012724  0EE9               	movlw	-23
 12651  012726  2AE3               	incf	plusw1,f,c
 12652  012728  E30B               	bnc	u2560
 12653  01272A  0EEA               	movlw	-22
 12654  01272C  2AE3               	incf	plusw1,f,c
 12655  01272E  E308               	bnc	u2560
 12656  012730  0EEB               	movlw	-21
 12657  012732  2AE3               	incf	plusw1,f,c
 12658  012734  E305               	bnc	u2560
 12659  012736  0EEC               	movlw	-20
 12660  012738  2AE3               	incf	plusw1,f,c
 12661  01273A  E302               	bnc	u2560
 12662  01273C  0EED               	movlw	-19
 12663  01273E  2AE3               	incf	plusw1,f,c
 12664  012740                     u2560:
 12665                           
 12666                           ;stkvar	_sign @ sp[(-10)+8]
 12667  012740  0EFE               	movlw	-2
 12668  012742  6AE3               	clrf	plusw1,c
 12669  012744  2AE3               	incf	plusw1,f,c
 12670  012746                     l5518:
 12671                           
 12672                           ;stkvar	_dividend @ sp[(-10)+-8]
 12673  012746  0EF5               	movlw	-11
 12674  012748  AEE3               	btfss	plusw1,7,c
 12675  01274A  D027               	goto	l5524
 12676                           
 12677                           ;stkvar	_dividend @ sp[(-10)+-8]
 12678                           ;stkvar	_dividend @ sp[(-10)+-8]
 12679  01274C  0EEE               	movlw	-18
 12680  01274E  6CE3               	negf	plusw1,c
 12681  012750  0EEF               	movlw	-17
 12682  012752  1EE3               	comf	plusw1,f,c
 12683  012754  0EF0               	movlw	-16
 12684  012756  1EE3               	comf	plusw1,f,c
 12685  012758  0EF1               	movlw	-15
 12686  01275A  1EE3               	comf	plusw1,f,c
 12687  01275C  0EF2               	movlw	-14
 12688  01275E  1EE3               	comf	plusw1,f,c
 12689  012760  0EF3               	movlw	-13
 12690  012762  1EE3               	comf	plusw1,f,c
 12691  012764  0EF4               	movlw	-12
 12692  012766  1EE3               	comf	plusw1,f,c
 12693  012768  0EF5               	movlw	-11
 12694  01276A  1EE3               	comf	plusw1,f,c
 12695  01276C  E314               	bnc	u2580
 12696  01276E  0EEF               	movlw	-17
 12697  012770  2AE3               	incf	plusw1,f,c
 12698  012772  E311               	bnc	u2580
 12699  012774  0EF0               	movlw	-16
 12700  012776  2AE3               	incf	plusw1,f,c
 12701  012778  E30E               	bnc	u2580
 12702  01277A  0EF1               	movlw	-15
 12703  01277C  2AE3               	incf	plusw1,f,c
 12704  01277E  E30B               	bnc	u2580
 12705  012780  0EF2               	movlw	-14
 12706  012782  2AE3               	incf	plusw1,f,c
 12707  012784  E308               	bnc	u2580
 12708  012786  0EF3               	movlw	-13
 12709  012788  2AE3               	incf	plusw1,f,c
 12710  01278A  E305               	bnc	u2580
 12711  01278C  0EF4               	movlw	-12
 12712  01278E  2AE3               	incf	plusw1,f,c
 12713  012790  E302               	bnc	u2580
 12714  012792  0EF5               	movlw	-11
 12715  012794  2AE3               	incf	plusw1,f,c
 12716  012796                     u2580:
 12717                           
 12718                           ;stkvar	_sign @ sp[(-10)+8]
 12719  012796  0EFE               	movlw	-2
 12720  012798  70E3               	btg	plusw1,0,c
 12721  01279A                     l5524:
 12722                           
 12723                           ;stkvar	_quotient @ sp[(-10)+0]
 12724  01279A  0E07               	movlw	7
 12725  01279C  6E3D               	movwf	btemp,c
 12726  01279E  0EF6               	movlw	-10
 12727  0127A0                     u2591:
 12728  0127A0  6AE3               	clrf	plusw1,c
 12729  0127A2  2AE8               	incf	wreg,f,c
 12730  0127A4  063D               	decf	btemp,f,c
 12731  0127A6  E2FC               	bc	u2591
 12732                           
 12733                           ;stkvar	_divisor @ sp[(-10)+-16]
 12734  0127A8  0EE6               	movlw	-26
 12735  0127AA  50E3               	movf	plusw1,w,c
 12736  0127AC  E116               	bnz	u2600
 12737  0127AE  0EE7               	movlw	-25
 12738  0127B0  50E3               	movf	plusw1,w,c
 12739  0127B2  E113               	bnz	u2600
 12740  0127B4  0EE8               	movlw	-24
 12741  0127B6  50E3               	movf	plusw1,w,c
 12742  0127B8  E110               	bnz	u2600
 12743  0127BA  0EE9               	movlw	-23
 12744  0127BC  50E3               	movf	plusw1,w,c
 12745  0127BE  E10D               	bnz	u2600
 12746  0127C0  0EEA               	movlw	-22
 12747  0127C2  50E3               	movf	plusw1,w,c
 12748  0127C4  E10A               	bnz	u2600
 12749  0127C6  0EEB               	movlw	-21
 12750  0127C8  50E3               	movf	plusw1,w,c
 12751  0127CA  E107               	bnz	u2600
 12752  0127CC  0EEC               	movlw	-20
 12753  0127CE  50E3               	movf	plusw1,w,c
 12754  0127D0  E104               	bnz	u2600
 12755  0127D2  0EED               	movlw	-19
 12756  0127D4  50E3               	movf	plusw1,w,c
 12757  0127D6  B4D8               	btfsc	status,2,c
 12758  0127D8  D088               	goto	u2630
 12759  0127DA                     u2600:
 12760                           
 12761                           ;stkvar	_counter @ sp[(-10)+9]
 12762  0127DA  0EFF               	movlw	-1
 12763  0127DC  6AE3               	clrf	plusw1,c
 12764  0127DE  D012               	goto	L33
 12765  0127E0                     l5530:
 12766                           
 12767                           ;stkvar	_divisor @ sp[(-10)+-16]
 12768  0127E0  90D8               	bcf	status,0,c
 12769  0127E2  0EE6               	movlw	-26
 12770  0127E4  36E3               	rlcf	plusw1,f,c
 12771  0127E6  0EE7               	movlw	-25
 12772  0127E8  36E3               	rlcf	plusw1,f,c
 12773  0127EA  0EE8               	movlw	-24
 12774  0127EC  36E3               	rlcf	plusw1,f,c
 12775  0127EE  0EE9               	movlw	-23
 12776  0127F0  36E3               	rlcf	plusw1,f,c
 12777  0127F2  0EEA               	movlw	-22
 12778  0127F4  36E3               	rlcf	plusw1,f,c
 12779  0127F6  0EEB               	movlw	-21
 12780  0127F8  36E3               	rlcf	plusw1,f,c
 12781  0127FA  0EEC               	movlw	-20
 12782  0127FC  36E3               	rlcf	plusw1,f,c
 12783  0127FE  0EED               	movlw	-19
 12784  012800  36E3               	rlcf	plusw1,f,c
 12785                           
 12786                           ;stkvar	_counter @ sp[(-10)+9]
 12787  012802  0EFF               	movlw	-1
 12788  012804                     L33:
 12789  012804  2AE3               	incf	plusw1,f,c
 12790                           
 12791                           ;stkvar	_divisor @ sp[(-10)+-16]
 12792  012806  0EED               	movlw	-19
 12793  012808  AEE3               	btfss	plusw1,7,c
 12794  01280A  D7EA               	goto	l5530
 12795  01280C                     u2610:
 12796                           
 12797                           ;stkvar	_quotient @ sp[(-10)+0]
 12798  01280C  90D8               	bcf	status,0,c
 12799  01280E  0EF6               	movlw	-10
 12800  012810  36E3               	rlcf	plusw1,f,c
 12801  012812  0EF7               	movlw	-9
 12802  012814  36E3               	rlcf	plusw1,f,c
 12803  012816  0EF8               	movlw	-8
 12804  012818  36E3               	rlcf	plusw1,f,c
 12805  01281A  0EF9               	movlw	-7
 12806  01281C  36E3               	rlcf	plusw1,f,c
 12807  01281E  0EFA               	movlw	-6
 12808  012820  36E3               	rlcf	plusw1,f,c
 12809  012822  0EFB               	movlw	-5
 12810  012824  36E3               	rlcf	plusw1,f,c
 12811  012826  0EFC               	movlw	-4
 12812  012828  36E3               	rlcf	plusw1,f,c
 12813  01282A  0EFD               	movlw	-3
 12814  01282C  36E3               	rlcf	plusw1,f,c
 12815                           
 12816                           ;stkvar	_divisor @ sp[(-10)+-16]
 12817                           ;stkvar	_dividend @ sp[(-10)+-8]
 12818  01282E  50E1               	movf	fsr1l,w,c
 12819  012830  0FEE               	addlw	-18
 12820  012832  6ED9               	movwf	fsr2l,c
 12821  012834  50E2               	movf	fsr1h,w,c
 12822  012836  6EDA               	movwf	fsr2h,c
 12823  012838  0EFF               	movlw	255
 12824  01283A  22DA               	addwfc	fsr2h,f,c
 12825  01283C  0EE6               	movlw	-26
 12826  01283E  50E3               	movf	plusw1,w,c
 12827  012840  5CDE               	subwf	postinc2,w,c
 12828  012842  0EE7               	movlw	-25
 12829  012844  50E3               	movf	plusw1,w,c
 12830  012846  58DE               	subwfb	postinc2,w,c
 12831  012848  0EE8               	movlw	-24
 12832  01284A  50E3               	movf	plusw1,w,c
 12833  01284C  58DE               	subwfb	postinc2,w,c
 12834  01284E  0EE9               	movlw	-23
 12835  012850  50E3               	movf	plusw1,w,c
 12836  012852  58DE               	subwfb	postinc2,w,c
 12837  012854  0EEA               	movlw	-22
 12838  012856  50E3               	movf	plusw1,w,c
 12839  012858  58DE               	subwfb	postinc2,w,c
 12840  01285A  0EEB               	movlw	-21
 12841  01285C  50E3               	movf	plusw1,w,c
 12842  01285E  58DE               	subwfb	postinc2,w,c
 12843  012860  0EEC               	movlw	-20
 12844  012862  50E3               	movf	plusw1,w,c
 12845  012864  58DE               	subwfb	postinc2,w,c
 12846  012866  0EED               	movlw	-19
 12847  012868  50E3               	movf	plusw1,w,c
 12848  01286A  58DE               	subwfb	postinc2,w,c
 12849  01286C  A0D8               	btfss	status,0,c
 12850  01286E  D021               	goto	l5542
 12851                           
 12852                           ;stkvar	_divisor @ sp[(-10)+-16]
 12853                           ;stkvar	_dividend @ sp[(-10)+-8]
 12854  012870  50E1               	movf	fsr1l,w,c
 12855  012872  0FEE               	addlw	-18
 12856  012874  6ED9               	movwf	fsr2l,c
 12857  012876  50E2               	movf	fsr1h,w,c
 12858  012878  6EDA               	movwf	fsr2h,c
 12859  01287A  0EFF               	movlw	255
 12860  01287C  22DA               	addwfc	fsr2h,f,c
 12861  01287E  0EE6               	movlw	-26
 12862  012880  50E3               	movf	plusw1,w,c
 12863  012882  5EDE               	subwf	postinc2,f,c
 12864  012884  0EE7               	movlw	-25
 12865  012886  50E3               	movf	plusw1,w,c
 12866  012888  5ADE               	subwfb	postinc2,f,c
 12867  01288A  0EE8               	movlw	-24
 12868  01288C  50E3               	movf	plusw1,w,c
 12869  01288E  5ADE               	subwfb	postinc2,f,c
 12870  012890  0EE9               	movlw	-23
 12871  012892  50E3               	movf	plusw1,w,c
 12872  012894  5ADE               	subwfb	postinc2,f,c
 12873  012896  0EEA               	movlw	-22
 12874  012898  50E3               	movf	plusw1,w,c
 12875  01289A  5ADE               	subwfb	postinc2,f,c
 12876  01289C  0EEB               	movlw	-21
 12877  01289E  50E3               	movf	plusw1,w,c
 12878  0128A0  5ADE               	subwfb	postinc2,f,c
 12879  0128A2  0EEC               	movlw	-20
 12880  0128A4  50E3               	movf	plusw1,w,c
 12881  0128A6  5ADE               	subwfb	postinc2,f,c
 12882  0128A8  0EED               	movlw	-19
 12883  0128AA  50E3               	movf	plusw1,w,c
 12884  0128AC  5ADE               	subwfb	postinc2,f,c
 12885                           
 12886                           ;stkvar	_quotient @ sp[(-10)+0]
 12887  0128AE  0EF6               	movlw	-10
 12888  0128B0  80E3               	bsf	plusw1,0,c
 12889  0128B2                     l5542:
 12890                           
 12891                           ;stkvar	_divisor @ sp[(-10)+-16]
 12892  0128B2  90D8               	bcf	status,0,c
 12893  0128B4  0EED               	movlw	-19
 12894  0128B6  32E3               	rrcf	plusw1,f,c
 12895  0128B8  0EEC               	movlw	-20
 12896  0128BA  32E3               	rrcf	plusw1,f,c
 12897  0128BC  0EEB               	movlw	-21
 12898  0128BE  32E3               	rrcf	plusw1,f,c
 12899  0128C0  0EEA               	movlw	-22
 12900  0128C2  32E3               	rrcf	plusw1,f,c
 12901  0128C4  0EE9               	movlw	-23
 12902  0128C6  32E3               	rrcf	plusw1,f,c
 12903  0128C8  0EE8               	movlw	-24
 12904  0128CA  32E3               	rrcf	plusw1,f,c
 12905  0128CC  0EE7               	movlw	-25
 12906  0128CE  32E3               	rrcf	plusw1,f,c
 12907  0128D0  0EE6               	movlw	-26
 12908  0128D2  32E3               	rrcf	plusw1,f,c
 12909                           
 12910                           ;stkvar	_counter @ sp[(-10)+9]
 12911  0128D4  0EFF               	movlw	-1
 12912  0128D6  50E3               	movf	plusw1,w,c
 12913  0128D8  6E3D               	movwf	btemp,c
 12914  0128DA  0E01               	movlw	1
 12915  0128DC  5E3D               	subwf	btemp,f,c
 12916  0128DE  0EFF               	movlw	-1
 12917  0128E0  0060  F0F7  FFE3   	movff	btemp,plusw1
 12918  0128E6  A4D8               	btfss	status,2,c
 12919  0128E8  D791               	goto	u2610
 12920  0128EA                     u2630:
 12921                           
 12922                           ;stkvar	_sign @ sp[(-10)+8]
 12923  0128EA  0EFE               	movlw	-2
 12924  0128EC  50E3               	movf	plusw1,w,c
 12925  0128EE  B4D8               	btfsc	status,2,c
 12926  0128F0  D025               	goto	u2650
 12927                           
 12928                           ;stkvar	_quotient @ sp[(-10)+0]
 12929                           ;stkvar	_quotient @ sp[(-10)+0]
 12930  0128F2  0EF6               	movlw	-10
 12931  0128F4  6CE3               	negf	plusw1,c
 12932  0128F6  0EF7               	movlw	-9
 12933  0128F8  1EE3               	comf	plusw1,f,c
 12934  0128FA  0EF8               	movlw	-8
 12935  0128FC  1EE3               	comf	plusw1,f,c
 12936  0128FE  0EF9               	movlw	-7
 12937  012900  1EE3               	comf	plusw1,f,c
 12938  012902  0EFA               	movlw	-6
 12939  012904  1EE3               	comf	plusw1,f,c
 12940  012906  0EFB               	movlw	-5
 12941  012908  1EE3               	comf	plusw1,f,c
 12942  01290A  0EFC               	movlw	-4
 12943  01290C  1EE3               	comf	plusw1,f,c
 12944  01290E  0EFD               	movlw	-3
 12945  012910  1EE3               	comf	plusw1,f,c
 12946  012912  E314               	bnc	u2650
 12947  012914  0EF7               	movlw	-9
 12948  012916  2AE3               	incf	plusw1,f,c
 12949  012918  E311               	bnc	u2650
 12950  01291A  0EF8               	movlw	-8
 12951  01291C  2AE3               	incf	plusw1,f,c
 12952  01291E  E30E               	bnc	u2650
 12953  012920  0EF9               	movlw	-7
 12954  012922  2AE3               	incf	plusw1,f,c
 12955  012924  E30B               	bnc	u2650
 12956  012926  0EFA               	movlw	-6
 12957  012928  2AE3               	incf	plusw1,f,c
 12958  01292A  E308               	bnc	u2650
 12959  01292C  0EFB               	movlw	-5
 12960  01292E  2AE3               	incf	plusw1,f,c
 12961  012930  E305               	bnc	u2650
 12962  012932  0EFC               	movlw	-4
 12963  012934  2AE3               	incf	plusw1,f,c
 12964  012936  E302               	bnc	u2650
 12965  012938  0EFD               	movlw	-3
 12966  01293A  2AE3               	incf	plusw1,f,c
 12967  01293C                     u2650:
 12968                           
 12969                           ;stkvar	_quotient @ sp[(-10)+0]
 12970  01293C  0EF6               	movlw	246
 12971  01293E  24E1               	addwf	fsr1l,w,c
 12972  012940  6ED9               	movwf	fsr2l,c
 12973  012942  0EFF               	movlw	255
 12974  012944  20E2               	addwfc	fsr1h,w,c
 12975  012946  6EDA               	movwf	fsr2h,c
 12976                           
 12977                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 12978  012948  0E08               	movlw	8
 12979  01294A  6E3D               	movwf	btemp,c
 12980  01294C  0EEE               	movlw	-18
 12981  01294E                     us266999:
 12982  01294E  006F FF7B FFE3     	movff	postinc2,plusw1
 12983  012954  28E8               	incf	wreg,w,c
 12984  012956  2E3D               	decfsz	btemp,f,c
 12985  012958  D7FA               	bra	us266999
 12986                           
 12987                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 12988  01295A  0EF6               	movlw	246
 12989  01295C  26E1               	addwf	fsr1l,f,c
 12990  01295E  0EFF               	movlw	255
 12991  012960  22E2               	addwfc	fsr1h,f,c
 12992  012962  0012               	return		;funcret
 12993  012964                     __end_of___aodiv:
 12994                           	opt callstack 0
 12995                           
 12996 ;; *************** function _ctoa *****************
 12997 ;; Defined at:
 12998 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12999 ;; Parameters:    Size  Location     Type
 13000 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13001 ;;		 -> f(6), NULL(0), 
 13002 ;;  c               1  [STACK] unsigned char 
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;  w               2  [STACK] int 
 13005 ;;  l               2    0        int 
 13006 ;; Return value:  Size  Location     Type
 13007 ;;                  2  [STACK] int 
 13008 ;; Registers used:
 13009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13010 ;; Tracked objects:
 13011 ;;		On entry : 0/0
 13012 ;;		On exit  : 0/0
 13013 ;;		Unchanged: 0/0
 13014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13019 ;;Total ram usage:        0 bytes
 13020 ;; Hardware stack levels used:    1
 13021 ;; Hardware stack levels required when called:    8
 13022 ;; This function calls:
 13023 ;;		_pad
 13024 ;; This function is called by:
 13025 ;;		_vfpfcnvrt
 13026 ;; This function uses a reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text49
 13030  013DEC                     __ptext49:
 13031                           	opt callstack 0
 13032  013DEC                     _ctoa:
 13033                           	opt callstack 0
 13034                           
 13035                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13036  013DEC  52E6               	movf	postinc1,f,c
 13037  013DEE  52E6               	movf	postinc1,f,c
 13038                           
 13039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 13040                           
 13041                           ;incstack = 0
 13042  013DF0  501D               	movf	_width,w,c
 13043  013DF2  101E               	iorwf	_width+1,w,c
 13044  013DF4  A4D8               	btfss	status,2,c
 13045  013DF6  D009               	goto	l8196
 13046                           
 13047                           ;stkvar	_w @ sp[(-2)+0]
 13048  013DF8  0EFE               	movlw	-2
 13049  013DFA  0060  F077  FFE3   	movff	_width,plusw1
 13050  013E00  0EFF               	movlw	-1
 13051  013E02  0060  F07B  FFE3   	movff	_width+1,plusw1
 13052  013E08  D016               	goto	l8198
 13053  013E0A                     l8196:
 13054  013E0A  0EFF               	movlw	255
 13055  013E0C  6E47               	movwf	btemp+10,c
 13056  013E0E  0EFF               	movlw	255
 13057  013E10  6E48               	movwf	btemp+11,c
 13058  013E12  0060  F074  F045   	movff	_width,btemp+8
 13059  013E18  0060  F078  F046   	movff	_width+1,btemp+9
 13060  013E1E  5047               	movf	btemp+10,w,c
 13061  013E20  2645               	addwf	btemp+8,f,c
 13062  013E22  5048               	movf	btemp+11,w,c
 13063  013E24  2246               	addwfc	btemp+9,f,c
 13064                           
 13065                           ;stkvar	_w @ sp[(-2)+0]
 13066  013E26  0EFE               	movlw	-2
 13067  013E28  0060  F117  FFE3   	movff	btemp+8,plusw1
 13068  013E2E  0EFF               	movlw	-1
 13069  013E30  0060  F11B  FFE3   	movff	btemp+9,plusw1
 13070  013E36                     l8198:
 13071                           
 13072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 13073                           ;stkvar	_c @ sp[(-2)+-3]
 13074  013E36  0EFB               	movlw	-5
 13075  013E38  006F FF8C  F1A6    	movff	plusw1,_dbuf
 13076                           
 13077                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 13078  013E3E  0101               	movlb	1	; () banked
 13079  013E40  6BA7               	clrf	(_dbuf+1)& (0+255),b
 13080                           
 13081                           ; BSR set to: 1
 13082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 13083                           ;stkvar	_w @ sp[(-2)+0]
 13084  013E42  0EFE               	movlw	-2
 13085  013E44  006F FF8F FFE6     	movff	plusw1,postinc1
 13086  013E4A  006F FF8F FFE6     	movff	plusw1,postinc1
 13087  013E50  0EA6               	movlw	low _dbuf
 13088  013E52  6EE6               	movwf	postinc1,c
 13089  013E54  0E01               	movlw	high _dbuf
 13090  013E56  6EE6               	movwf	postinc1,c
 13091                           
 13092                           ;stkvar	_fp @ sp[(-6)+-2]
 13093  013E58  0EF8               	movlw	-8
 13094  013E5A  006F FF8F FFE6     	movff	plusw1,postinc1
 13095  013E60  006F FF8F FFE6     	movff	plusw1,postinc1
 13096  013E66  ECA3  F099         	call	_pad	;wreg free
 13097                           
 13098                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 13099  013E6A  0EFB               	movlw	251
 13100  013E6C  26E1               	addwf	fsr1l,f,c
 13101  013E6E  0EFF               	movlw	255
 13102  013E70  22E2               	addwfc	fsr1h,f,c
 13103  013E72  0012               	return		;funcret
 13104  013E74                     __end_of_ctoa:
 13105                           	opt callstack 0
 13106                           
 13107 ;; *************** function _pad *****************
 13108 ;; Defined at:
 13109 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 13110 ;; Parameters:    Size  Location     Type
 13111 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13112 ;;		 -> f(6), NULL(0), 
 13113 ;;  buf             2  [STACK] PTR unsigned char 
 13114 ;;		 -> dbuf(32), 
 13115 ;;  p               2  [STACK] int 
 13116 ;; Auto vars:     Size  Location     Type
 13117 ;;  w               2  [STACK] int 
 13118 ;;  i               2  [STACK] int 
 13119 ;; Return value:  Size  Location     Type
 13120 ;;                  2  [STACK] int 
 13121 ;; Registers used:
 13122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13123 ;; Tracked objects:
 13124 ;;		On entry : 0/1
 13125 ;;		On exit  : 0/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13132 ;;Total ram usage:        0 bytes
 13133 ;; Hardware stack levels used:    1
 13134 ;; Hardware stack levels required when called:    7
 13135 ;; This function calls:
 13136 ;;		_fputc
 13137 ;;		_fputs
 13138 ;;		_strlen
 13139 ;; This function is called by:
 13140 ;;		_ctoa
 13141 ;;		_dtoa
 13142 ;; This function uses a reentrant model
 13143 ;;
 13144                           
 13145                           	psect	text50
 13146  013346                     __ptext50:
 13147                           	opt callstack 0
 13148  013346                     _pad:
 13149                           	opt callstack 0
 13150                           
 13151                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13152  013346  52E6               	movf	postinc1,f,c
 13153  013348  52E6               	movf	postinc1,f,c
 13154  01334A  52E6               	movf	postinc1,f,c
 13155  01334C  52E6               	movf	postinc1,f,c
 13156                           
 13157                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 13158                           
 13159                           ;incstack = 0
 13160  01334E  A021               	btfss	_flags,0,c
 13161  013350  D010               	goto	l8174
 13162                           
 13163                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 13164                           ;stkvar	_fp @ sp[(-4)+-2]
 13165  013352  0EFA               	movlw	-6
 13166  013354  006F FF8F FFE6     	movff	plusw1,postinc1
 13167  01335A  006F FF8F FFE6     	movff	plusw1,postinc1
 13168                           
 13169                           ;stkvar	_buf @ sp[(-6)+-4]
 13170  013360  0EF6               	movlw	-10
 13171  013362  006F FF8F FFE6     	movff	plusw1,postinc1
 13172  013368  006F FF8F FFE6     	movff	plusw1,postinc1
 13173  01336E  EC61  F09E         	call	_fputs	;wreg free
 13174  013372                     l8174:
 13175                           
 13176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 13177                           ;stkvar	_p @ sp[(-4)+-6]
 13178  013372  0EF7               	movlw	-9
 13179  013374  BEE3               	btfsc	plusw1,7,c
 13180  013376  D011               	goto	l8178
 13181                           
 13182                           ;stkvar	_p @ sp[(-4)+-6]
 13183                           ;stkvar	_w @ sp[(-4)+0]
 13184  013378  0EF6               	movlw	-10
 13185  01337A  006F FF8C  F03D    	movff	plusw1,btemp
 13186  013380  0EFC               	movlw	-4
 13187  013382  0060  F0F7  FFE3   	movff	btemp,plusw1
 13188  013388  0EF7               	movlw	-9
 13189  01338A  006F FF8C  F03D    	movff	plusw1,btemp
 13190  013390  0EFD               	movlw	-3
 13191  013392  0060  F0F7  FFE3   	movff	btemp,plusw1
 13192  013398  D004               	goto	l1884
 13193  01339A                     l8178:
 13194                           
 13195                           ;stkvar	_w @ sp[(-4)+0]
 13196  01339A  0EFC               	movlw	-4
 13197  01339C  6AE3               	clrf	plusw1,c
 13198  01339E  0EFD               	movlw	-3
 13199  0133A0  6AE3               	clrf	plusw1,c
 13200  0133A2                     l1884:
 13201                           
 13202                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 13203                           ;stkvar	_i @ sp[(-4)+2]
 13204  0133A2  0EFE               	movlw	-2
 13205  0133A4  6AE3               	clrf	plusw1,c
 13206  0133A6  0EFF               	movlw	-1
 13207  0133A8  6AE3               	clrf	plusw1,c
 13208                           
 13209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 13210  0133AA  D01E               	goto	l8184
 13211  0133AC                     l8180:
 13212                           
 13213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 13214                           ;stkvar	_fp @ sp[(-4)+-2]
 13215  0133AC  0EFA               	movlw	-6
 13216  0133AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13217  0133B4  006F FF8F FFE6     	movff	plusw1,postinc1
 13218  0133BA  0E20               	movlw	32
 13219  0133BC  6EE6               	movwf	postinc1,c
 13220  0133BE  0E00               	movlw	0
 13221  0133C0  6EE6               	movwf	postinc1,c
 13222  0133C2  EC11  F099         	call	_fputc	;wreg free
 13223                           
 13224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 13225                           ;stkvar	_i @ sp[(-4)+2]
 13226  0133C6  0EFE               	movlw	-2
 13227  0133C8  50E3               	movf	plusw1,w,c
 13228  0133CA  0F01               	addlw	1
 13229  0133CC  6E3D               	movwf	btemp,c
 13230  0133CE  0EFE               	movlw	-2
 13231  0133D0  0060  F0F7  FFE3   	movff	btemp,plusw1
 13232  0133D6  6A3D               	clrf	btemp,c
 13233  0133D8  0EFF               	movlw	-1
 13234  0133DA  50E3               	movf	plusw1,w,c
 13235  0133DC  203D               	addwfc	btemp,w,c
 13236  0133DE  6E3D               	movwf	btemp,c
 13237  0133E0  0EFF               	movlw	-1
 13238  0133E2  0060  F0F7  FFE3   	movff	btemp,plusw1
 13239  0133E8                     l8184:
 13240                           
 13241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 13242                           ;stkvar	_w @ sp[(-4)+0]
 13243                           ;stkvar	_i @ sp[(-4)+2]
 13244  0133E8  50E1               	movf	fsr1l,w,c
 13245  0133EA  0FFE               	addlw	-2
 13246  0133EC  6ED9               	movwf	fsr2l,c
 13247  0133EE  50E2               	movf	fsr1h,w,c
 13248  0133F0  6EDA               	movwf	fsr2h,c
 13249  0133F2  0EFF               	movlw	255
 13250  0133F4  22DA               	addwfc	fsr2h,f,c
 13251  0133F6  0EFC               	movlw	-4
 13252  0133F8  50E3               	movf	plusw1,w,c
 13253  0133FA  5CDE               	subwf	postinc2,w,c
 13254  0133FC  50DE               	movf	postinc2,w,c
 13255  0133FE  0A80               	xorlw	128
 13256  013400  6E3D               	movwf	btemp,c
 13257  013402  0EFD               	movlw	-3
 13258  013404  50E3               	movf	plusw1,w,c
 13259  013406  0A80               	xorlw	128
 13260  013408  583D               	subwfb	btemp,w,c
 13261  01340A  A0D8               	btfss	status,0,c
 13262  01340C  D7CF               	goto	l8180
 13263                           
 13264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 13265  01340E  B021               	btfsc	_flags,0,c
 13266  013410  D010               	goto	l8188
 13267                           
 13268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 13269                           ;stkvar	_fp @ sp[(-4)+-2]
 13270  013412  0EFA               	movlw	-6
 13271  013414  006F FF8F FFE6     	movff	plusw1,postinc1
 13272  01341A  006F FF8F FFE6     	movff	plusw1,postinc1
 13273                           
 13274                           ;stkvar	_buf @ sp[(-6)+-4]
 13275  013420  0EF6               	movlw	-10
 13276  013422  006F FF8F FFE6     	movff	plusw1,postinc1
 13277  013428  006F FF8F FFE6     	movff	plusw1,postinc1
 13278  01342E  EC61  F09E         	call	_fputs	;wreg free
 13279  013432                     l8188:
 13280                           
 13281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 13282                           ;stkvar	_w @ sp[(-4)+0]
 13283                           ;stkvar	_buf @ sp[(-4)+-4]
 13284  013432  0EF8               	movlw	-8
 13285  013434  006F FF8F FFE6     	movff	plusw1,postinc1
 13286  01343A  006F FF8F FFE6     	movff	plusw1,postinc1
 13287  013440  EC10  F09E         	call	_strlen	;wreg free
 13288  013444  0EFC               	movlw	-4
 13289  013446  50E3               	movf	plusw1,w,c
 13290  013448  263D               	addwf	btemp,f,c
 13291  01344A  0EFD               	movlw	-3
 13292  01344C  50E3               	movf	plusw1,w,c
 13293  01344E  223E               	addwfc	btemp+1,f,c
 13294                           
 13295                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 13296  013450  0EF6               	movlw	246
 13297  013452  26E1               	addwf	fsr1l,f,c
 13298  013454  0EFF               	movlw	255
 13299  013456  22E2               	addwfc	fsr1h,f,c
 13300  013458  0012               	return		;funcret
 13301  01345A                     __end_of_pad:
 13302                           	opt callstack 0
 13303                           
 13304 ;; *************** function _strlen *****************
 13305 ;; Defined at:
 13306 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;  s               2  [STACK] PTR const unsigned char 
 13309 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 13310 ;;		 -> STR_22(6), STR_3(6), V.terminal(160), V(261), 
 13311 ;; Auto vars:     Size  Location     Type
 13312 ;;  a               2  [STACK] PTR const unsigned char 
 13313 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 13314 ;;		 -> STR_22(6), STR_3(6), V.terminal(160), V(261), 
 13315 ;; Return value:  Size  Location     Type
 13316 ;;                  2  [STACK] unsigned int 
 13317 ;; Registers used:
 13318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 13319 ;; Tracked objects:
 13320 ;;		On entry : 0/0
 13321 ;;		On exit  : 0/0
 13322 ;;		Unchanged: 0/0
 13323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;Total ram usage:        0 bytes
 13329 ;; Hardware stack levels used:    1
 13330 ;; Hardware stack levels required when called:    3
 13331 ;; This function calls:
 13332 ;;		Nothing
 13333 ;; This function is called by:
 13334 ;;		_eaDogM_WriteString
 13335 ;;		_pad
 13336 ;;		_stoa
 13337 ;; This function uses a reentrant model
 13338 ;;
 13339                           
 13340                           	psect	text51
 13341  013C20                     __ptext51:
 13342                           	opt callstack 0
 13343  013C20                     _strlen:
 13344                           	opt callstack 0
 13345                           
 13346                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13347  013C20  52E6               	movf	postinc1,f,c
 13348  013C22  52E6               	movf	postinc1,f,c
 13349                           
 13350                           ;stkvar	_s @ sp[(-2)+-2]
 13351                           
 13352                           ;incstack = 0
 13353  013C24  0EFC               	movlw	-4
 13354  013C26  006F FF8C  F047    	movff	plusw1,btemp+10
 13355  013C2C  0EFD               	movlw	-3
 13356  013C2E  006F FF8C  F048    	movff	plusw1,btemp+11
 13357                           
 13358                           ;stkvar	_a @ sp[(-2)+0]
 13359  013C34  0EFF               	movlw	-1
 13360  013C36  0060  F123  FFE3   	movff	btemp+11,plusw1
 13361  013C3C  0EFE               	movlw	-2
 13362  013C3E  0060  F11F  FFE3   	movff	btemp+10,plusw1
 13363  013C44  D011               	goto	l5466
 13364  013C46                     l5464:
 13365                           
 13366                           ;stkvar	_s @ sp[(-2)+-2]
 13367  013C46  0EFC               	movlw	-4
 13368  013C48  50E3               	movf	plusw1,w,c
 13369  013C4A  0F01               	addlw	1
 13370  013C4C  6E3D               	movwf	btemp,c
 13371  013C4E  0EFC               	movlw	-4
 13372  013C50  0060  F0F7  FFE3   	movff	btemp,plusw1
 13373  013C56  6A3D               	clrf	btemp,c
 13374  013C58  0EFD               	movlw	-3
 13375  013C5A  50E3               	movf	plusw1,w,c
 13376  013C5C  203D               	addwfc	btemp,w,c
 13377  013C5E  6E3D               	movwf	btemp,c
 13378  013C60  0EFD               	movlw	-3
 13379  013C62  0060  F0F7  FFE3   	movff	btemp,plusw1
 13380  013C68                     l5466:
 13381                           
 13382                           ;stkvar	_s @ sp[(-2)+-2]
 13383  013C68  0EFC               	movlw	-4
 13384  013C6A  006F FF8F FFF6     	movff	plusw1,tblptrl
 13385  013C70  0EFD               	movlw	-3
 13386  013C72  006F FF8F FFF7     	movff	plusw1,tblptrh
 13387  013C78  0E00               	movlw	low (__mediumconst shr (0+16))
 13388  013C7A  6EF8               	movwf	tblptru,c
 13389  013C7C  0E1F               	movlw	(high __ramtop+-1)
 13390  013C7E  64F7               	cpfsgt	tblptrh,c
 13391  013C80  D003               	bra	u2477
 13392  013C82  0008               	tblrd		*
 13393  013C84  50F5               	movf	tablat,w,c
 13394  013C86  D007               	bra	u2470
 13395  013C88                     u2477:
 13396  013C88  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13397  013C8E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13398  013C94  50EF               	movf	indf0,w,c
 13399  013C96                     u2470:
 13400  013C96  0900               	iorlw	0
 13401  013C98  A4D8               	btfss	status,2,c
 13402  013C9A  D7D5               	goto	l5464
 13403                           
 13404                           ;stkvar	_a @ sp[(-2)+0]
 13405                           ;stkvar	_s @ sp[(-2)+-2]
 13406  013C9C  0EFC               	movlw	-4
 13407  013C9E  006F FF8C  F03D    	movff	plusw1,btemp
 13408  013CA4  0EFD               	movlw	-3
 13409  013CA6  006F FF8C  F03E    	movff	plusw1,btemp+1
 13410  013CAC  0EFE               	movlw	-2
 13411  013CAE  50E3               	movf	plusw1,w,c
 13412  013CB0  5E3D               	subwf	btemp,f,c
 13413  013CB2  0EFF               	movlw	-1
 13414  013CB4  50E3               	movf	plusw1,w,c
 13415  013CB6  5A3E               	subwfb	btemp+1,f,c
 13416                           
 13417                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13418  013CB8  52E5               	movf	postdec1,f,c
 13419  013CBA  52E5               	movf	postdec1,f,c
 13420  013CBC  52E5               	movf	postdec1,f,c
 13421  013CBE  52E5               	movf	postdec1,f,c
 13422  013CC0  0012               	return		;funcret
 13423  013CC2                     __end_of_strlen:
 13424                           	opt callstack 0
 13425                           
 13426 ;; *************** function _fputs *****************
 13427 ;; Defined at:
 13428 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 13429 ;; Parameters:    Size  Location     Type
 13430 ;;  s               2  [STACK] PTR const unsigned char 
 13431 ;;		 -> dbuf(32), 
 13432 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13433 ;;		 -> f(6), NULL(0), 
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;  i               2  [STACK] int 
 13436 ;;  c               1  [STACK] unsigned char 
 13437 ;; Return value:  Size  Location     Type
 13438 ;;                  2  [STACK] int 
 13439 ;; Registers used:
 13440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13441 ;; Tracked objects:
 13442 ;;		On entry : 0/1
 13443 ;;		On exit  : 0/0
 13444 ;;		Unchanged: 0/0
 13445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13450 ;;Total ram usage:        0 bytes
 13451 ;; Hardware stack levels used:    1
 13452 ;; Hardware stack levels required when called:    6
 13453 ;; This function calls:
 13454 ;;		_fputc
 13455 ;; This function is called by:
 13456 ;;		_pad
 13457 ;; This function uses a reentrant model
 13458 ;;
 13459                           
 13460                           	psect	text52
 13461  013CC2                     __ptext52:
 13462                           	opt callstack 0
 13463  013CC2                     _fputs:
 13464                           	opt callstack 0
 13465                           
 13466                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13467  013CC2  52E6               	movf	postinc1,f,c
 13468  013CC4  52E6               	movf	postinc1,f,c
 13469  013CC6  52E6               	movf	postinc1,f,c
 13470                           
 13471                           ;stkvar	_i @ sp[(-3)+0]
 13472                           
 13473                           ;incstack = 0
 13474  013CC8  0EFD               	movlw	-3
 13475  013CCA  6AE3               	clrf	plusw1,c
 13476  013CCC  0EFE               	movlw	-2
 13477  013CCE  6AE3               	clrf	plusw1,c
 13478  013CD0  D01F               	goto	l8168
 13479  013CD2                     l8164:
 13480                           
 13481                           ;stkvar	_fp @ sp[(-3)+-4]
 13482  013CD2  0EF9               	movlw	-7
 13483  013CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 13484  013CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 13485                           
 13486                           ;stkvar	_c @ sp[(-5)+2]
 13487  013CE0  0EFD               	movlw	-3
 13488  013CE2  50E3               	movf	plusw1,w,c
 13489  013CE4  6EE6               	movwf	postinc1,c
 13490  013CE6  0E00               	movlw	0
 13491  013CE8  6EE6               	movwf	postinc1,c
 13492  013CEA  EC11  F099         	call	_fputc	;wreg free
 13493                           
 13494                           ;stkvar	_i @ sp[(-3)+0]
 13495  013CEE  0EFD               	movlw	-3
 13496  013CF0  50E3               	movf	plusw1,w,c
 13497  013CF2  0F01               	addlw	1
 13498  013CF4  6E3D               	movwf	btemp,c
 13499  013CF6  0EFD               	movlw	-3
 13500  013CF8  0060  F0F7  FFE3   	movff	btemp,plusw1
 13501  013CFE  6A3D               	clrf	btemp,c
 13502  013D00  0EFE               	movlw	-2
 13503  013D02  50E3               	movf	plusw1,w,c
 13504  013D04  203D               	addwfc	btemp,w,c
 13505  013D06  6E3D               	movwf	btemp,c
 13506  013D08  0EFE               	movlw	-2
 13507  013D0A  0060  F0F7  FFE3   	movff	btemp,plusw1
 13508  013D10                     l8168:
 13509                           
 13510                           ;stkvar	_i @ sp[(-3)+0]
 13511  013D10  0EFD               	movlw	-3
 13512  013D12  006F FF8C  F047    	movff	plusw1,btemp+10
 13513  013D18  0EFE               	movlw	-2
 13514  013D1A  006F FF8C  F048    	movff	plusw1,btemp+11
 13515                           
 13516                           ;stkvar	_s @ sp[(-3)+-2]
 13517  013D20  0EFB               	movlw	-5
 13518  013D22  006F FF8C  F045    	movff	plusw1,btemp+8
 13519  013D28  0EFC               	movlw	-4
 13520  013D2A  006F FF8C  F046    	movff	plusw1,btemp+9
 13521  013D30  5047               	movf	btemp+10,w,c
 13522  013D32  2445               	addwf	btemp+8,w,c
 13523  013D34  6ED9               	movwf	fsr2l,c
 13524  013D36  5048               	movf	btemp+11,w,c
 13525  013D38  2046               	addwfc	btemp+9,w,c
 13526  013D3A  6EDA               	movwf	fsr2h,c
 13527  013D3C  50DF               	movf	indf2,w,c
 13528  013D3E  6E48               	movwf	btemp+11,c
 13529                           
 13530                           ;stkvar	_c @ sp[(-3)+2]
 13531  013D40  0EFF               	movlw	-1
 13532  013D42  0060  F123  FFE3   	movff	btemp+11,plusw1
 13533  013D48  0EFF               	movlw	-1
 13534  013D4A  50E3               	movf	plusw1,w,c
 13535  013D4C  A4D8               	btfss	status,2,c
 13536  013D4E  D7C1               	goto	l8164
 13537                           
 13538                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13539  013D50  0EF9               	movlw	249
 13540  013D52  26E1               	addwf	fsr1l,f,c
 13541  013D54  0EFF               	movlw	255
 13542  013D56  22E2               	addwfc	fsr1h,f,c
 13543  013D58  0012               	return		;funcret
 13544  013D5A                     __end_of_fputs:
 13545                           	opt callstack 0
 13546                           
 13547 ;; *************** function _fputc *****************
 13548 ;; Defined at:
 13549 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 13550 ;; Parameters:    Size  Location     Type
 13551 ;;  c               2  [STACK] int 
 13552 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13553 ;;		 -> f(6), NULL(0), 
 13554 ;; Auto vars:     Size  Location     Type
 13555 ;;		None
 13556 ;; Return value:  Size  Location     Type
 13557 ;;                  2  [STACK] int 
 13558 ;; Registers used:
 13559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13560 ;; Tracked objects:
 13561 ;;		On entry : 0/0
 13562 ;;		On exit  : 0/0
 13563 ;;		Unchanged: 0/0
 13564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13569 ;;Total ram usage:        0 bytes
 13570 ;; Hardware stack levels used:    1
 13571 ;; Hardware stack levels required when called:    5
 13572 ;; This function calls:
 13573 ;;		_putch
 13574 ;; This function is called by:
 13575 ;;		_pad
 13576 ;;		_stoa
 13577 ;;		_vfpfcnvrt
 13578 ;;		_fputs
 13579 ;; This function uses a reentrant model
 13580 ;;
 13581                           
 13582                           	psect	text53
 13583  013222                     __ptext53:
 13584                           	opt callstack 0
 13585  013222                     _fputc:
 13586                           	opt callstack 21
 13587                           
 13588                           ;stkvar	_fp @ sp[(0)+-4]
 13589                           
 13590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13591                           ;incstack = 0
 13592  013222  0EFC               	movlw	-4
 13593  013224  006F FF8C  F03D    	movff	plusw1,btemp
 13594  01322A  0EFD               	movlw	-3
 13595  01322C  50E3               	movf	plusw1,w,c
 13596  01322E  103D               	iorwf	btemp,w,c
 13597  013230  B4D8               	btfsc	status,2,c
 13598  013232  D009               	goto	u4790
 13599                           
 13600                           ;stkvar	_fp @ sp[(0)+-4]
 13601  013234  0EFC               	movlw	-4
 13602  013236  006F FF8C  F03D    	movff	plusw1,btemp
 13603  01323C  0EFD               	movlw	-3
 13604  01323E  50E3               	movf	plusw1,w,c
 13605  013240  103D               	iorwf	btemp,w,c
 13606  013242  A4D8               	btfss	status,2,c
 13607  013244  D006               	goto	l8152
 13608  013246                     u4790:
 13609                           
 13610                           ;stkvar	_c @ sp[(0)+-2]
 13611  013246  0EFE               	movlw	-2
 13612  013248  50E3               	movf	plusw1,w,c
 13613  01324A  6EE6               	movwf	postinc1,c
 13614  01324C  ECD4  F0A5         	call	_putch	;wreg free
 13615  013250  D075               	goto	l2667
 13616  013252                     l8152:
 13617                           
 13618                           ;stkvar	_fp @ sp[(0)+-4]
 13619  013252  0EFC               	movlw	-4
 13620  013254  006F FF8C  F047    	movff	plusw1,btemp+10
 13621  01325A  0EFD               	movlw	-3
 13622  01325C  006F FF8C  F048    	movff	plusw1,btemp+11
 13623  013262  0E04               	movlw	4
 13624  013264  2447               	addwf	btemp+10,w,c
 13625  013266  6ED9               	movwf	fsr2l,c
 13626  013268  0E00               	movlw	0
 13627  01326A  2048               	addwfc	btemp+11,w,c
 13628  01326C  6EDA               	movwf	fsr2h,c
 13629  01326E  50DE               	movf	postinc2,w,c
 13630  013270  10DE               	iorwf	postinc2,w,c
 13631  013272  B4D8               	btfsc	status,2,c
 13632  013274  D026               	goto	u4810
 13633                           
 13634                           ;stkvar	_fp @ sp[(0)+-4]
 13635  013276  0EFC               	movlw	-4
 13636  013278  006F FF8C  F047    	movff	plusw1,btemp+10
 13637  01327E  0EFD               	movlw	-3
 13638  013280  006F FF8C  F048    	movff	plusw1,btemp+11
 13639  013286  0E04               	movlw	4
 13640  013288  2447               	addwf	btemp+10,w,c
 13641  01328A  6ED9               	movwf	fsr2l,c
 13642  01328C  0E00               	movlw	0
 13643  01328E  2048               	addwfc	btemp+11,w,c
 13644  013290  6EDA               	movwf	fsr2h,c
 13645                           
 13646                           ;stkvar	_fp @ sp[(0)+-4]
 13647  013292  0EFC               	movlw	-4
 13648  013294  006F FF8C  F047    	movff	plusw1,btemp+10
 13649  01329A  0EFD               	movlw	-3
 13650  01329C  006F FF8C  F048    	movff	plusw1,btemp+11
 13651  0132A2  0E02               	movlw	2
 13652  0132A4  2447               	addwf	btemp+10,w,c
 13653  0132A6  6EE9               	movwf	fsr0l,c
 13654  0132A8  0E00               	movlw	0
 13655  0132AA  2048               	addwfc	btemp+11,w,c
 13656  0132AC  6EEA               	movwf	fsr0h,c
 13657  0132AE  50DE               	movf	postinc2,w,c
 13658  0132B0  5CEE               	subwf	postinc0,w,c
 13659  0132B2  50EE               	movf	postinc0,w,c
 13660  0132B4  0A80               	xorlw	128
 13661  0132B6  6E3D               	movwf	btemp,c
 13662  0132B8  50DE               	movf	postinc2,w,c
 13663  0132BA  0A80               	xorlw	128
 13664  0132BC  583D               	subwfb	btemp,w,c
 13665  0132BE  B0D8               	btfsc	status,0,c
 13666  0132C0  D03D               	goto	l2667
 13667  0132C2                     u4810:
 13668                           
 13669                           ;stkvar	_c @ sp[(0)+-2]
 13670                           ;stkvar	_fp @ sp[(0)+-4]
 13671  0132C2  0EFC               	movlw	-4
 13672  0132C4  006F FF8C  F047    	movff	plusw1,btemp+10
 13673  0132CA  0EFD               	movlw	-3
 13674  0132CC  006F FF8C  F048    	movff	plusw1,btemp+11
 13675  0132D2  0E02               	movlw	2
 13676  0132D4  2447               	addwf	btemp+10,w,c
 13677  0132D6  6ED9               	movwf	fsr2l,c
 13678  0132D8  0E00               	movlw	0
 13679  0132DA  2048               	addwfc	btemp+11,w,c
 13680  0132DC  6EDA               	movwf	fsr2h,c
 13681  0132DE  006F FF78  F047    	movff	postinc2,btemp+10
 13682  0132E4  006F FF74  F048    	movff	postdec2,btemp+11
 13683                           
 13684                           ;stkvar	_fp @ sp[(0)+-4]
 13685  0132EA  0EFC               	movlw	-4
 13686  0132EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13687  0132F2  0EFD               	movlw	-3
 13688  0132F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13689  0132FA  006F FF78  F045    	movff	postinc2,btemp+8
 13690  013300  006F FF74  F046    	movff	postdec2,btemp+9
 13691  013306  5047               	movf	btemp+10,w,c
 13692  013308  2445               	addwf	btemp+8,w,c
 13693  01330A  6ED9               	movwf	fsr2l,c
 13694  01330C  5048               	movf	btemp+11,w,c
 13695  01330E  2046               	addwfc	btemp+9,w,c
 13696  013310  6EDA               	movwf	fsr2h,c
 13697  013312  0EFE               	movlw	-2
 13698  013314  006F FF8F FFDF     	movff	plusw1,indf2
 13699                           
 13700                           ;stkvar	_fp @ sp[(0)+-4]
 13701  01331A  0EFC               	movlw	-4
 13702  01331C  006F FF8C  F047    	movff	plusw1,btemp+10
 13703  013322  0EFD               	movlw	-3
 13704  013324  006F FF8C  F048    	movff	plusw1,btemp+11
 13705  01332A  0E02               	movlw	2
 13706  01332C  2447               	addwf	btemp+10,w,c
 13707  01332E  6ED9               	movwf	fsr2l,c
 13708  013330  0E00               	movlw	0
 13709  013332  2048               	addwfc	btemp+11,w,c
 13710  013334  6EDA               	movwf	fsr2h,c
 13711  013336  2ADE               	incf	postinc2,f,c
 13712  013338  0E00               	movlw	0
 13713  01333A  22DD               	addwfc	postdec2,f,c
 13714  01333C                     l2667:
 13715                           
 13716                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13717  01333C  52E5               	movf	postdec1,f,c
 13718  01333E  52E5               	movf	postdec1,f,c
 13719  013340  52E5               	movf	postdec1,f,c
 13720  013342  52E5               	movf	postdec1,f,c
 13721  013344  0012               	return		;funcret
 13722  013346                     __end_of_fputc:
 13723                           	opt callstack 0
 13724                           
 13725 ;; *************** function _putch *****************
 13726 ;; Defined at:
 13727 ;;		line 138 in file "eadog.c"
 13728 ;; Parameters:    Size  Location     Type
 13729 ;;  c               1  [STACK] unsigned char 
 13730 ;; Auto vars:     Size  Location     Type
 13731 ;;		None
 13732 ;; Return value:  Size  Location     Type
 13733 ;;                  1  [STACK] void 
 13734 ;; Registers used:
 13735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13736 ;; Tracked objects:
 13737 ;;		On entry : 0/0
 13738 ;;		On exit  : 0/0
 13739 ;;		Unchanged: 0/0
 13740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13745 ;;Total ram usage:        0 bytes
 13746 ;; Hardware stack levels used:    1
 13747 ;; Hardware stack levels required when called:    4
 13748 ;; This function calls:
 13749 ;;		_ringBufS_put_dma
 13750 ;; This function is called by:
 13751 ;;		_fputc
 13752 ;; This function uses a reentrant model
 13753 ;;
 13754                           
 13755                           	psect	text54
 13756  014BA8                     __ptext54:
 13757                           	opt callstack 0
 13758  014BA8                     _putch:
 13759                           	opt callstack 21
 13760                           
 13761                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 13762                           ;stkvar	_c @ sp[(0)+-1]
 13763                           
 13764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13765                           ;incstack = 0
 13766  014BA8  0EFF               	movlw	-1
 13767  014BAA  50E3               	movf	plusw1,w,c
 13768  014BAC  6EE6               	movwf	postinc1,c
 13769  014BAE  0060  F32F  FFE6   	movff	_spi_link+6,postinc1
 13770  014BB4  0060  F333  FFE6   	movff	_spi_link+7,postinc1
 13771  014BBA  ECC2  F09C         	call	_ringBufS_put_dma	;wreg free
 13772                           
 13773                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 13774  014BBE  52E5               	movf	postdec1,f,c
 13775  014BC0  0012               	return		;funcret
 13776  014BC2                     __end_of_putch:
 13777                           	opt callstack 0
 13778                           
 13779 ;; *************** function _ringBufS_put_dma *****************
 13780 ;; Defined at:
 13781 ;;		line 67 in file "ringbufs.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;  _this           2  [STACK] PTR struct ringBufS_t
 13784 ;;		 -> ring_buf1(67), 
 13785 ;;  c               1  [STACK] const unsigned char 
 13786 ;; Auto vars:     Size  Location     Type
 13787 ;;		None
 13788 ;; Return value:  Size  Location     Type
 13789 ;;                  1  [STACK] void 
 13790 ;; Registers used:
 13791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13792 ;; Tracked objects:
 13793 ;;		On entry : 0/0
 13794 ;;		On exit  : 0/0
 13795 ;;		Unchanged: 0/0
 13796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13801 ;;Total ram usage:        0 bytes
 13802 ;; Hardware stack levels used:    1
 13803 ;; Hardware stack levels required when called:    3
 13804 ;; This function calls:
 13805 ;;		Nothing
 13806 ;; This function is called by:
 13807 ;;		_putch
 13808 ;; This function uses a reentrant model
 13809 ;;
 13810                           
 13811                           	psect	text55
 13812  013984                     __ptext55:
 13813                           	opt callstack 0
 13814  013984                     _ringBufS_put_dma:
 13815                           	opt callstack 21
 13816                           
 13817                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 13818                           ;stkvar	__this @ sp[(0)+-2]
 13819                           
 13820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13821                           ;incstack = 0
 13822  013984  0EFE               	movlw	-2
 13823  013986  006F FF8C  F047    	movff	plusw1,btemp+10
 13824  01398C  0EFF               	movlw	-1
 13825  01398E  006F FF8C  F048    	movff	plusw1,btemp+11
 13826  013994  0E42               	movlw	66
 13827  013996  2447               	addwf	btemp+10,w,c
 13828  013998  6ED9               	movwf	fsr2l,c
 13829  01399A  0E00               	movlw	0
 13830  01399C  2048               	addwfc	btemp+11,w,c
 13831  01399E  6EDA               	movwf	fsr2h,c
 13832  0139A0  0E40               	movlw	64
 13833  0139A2  60DF               	cpfslt	indf2,c
 13834  0139A4  D040               	goto	l1506
 13835                           
 13836                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 13837                           ;stkvar	_c @ sp[(0)+-3]
 13838                           ;stkvar	__this @ sp[(0)+-2]
 13839  0139A6  0EFE               	movlw	-2
 13840  0139A8  006F FF8C  F047    	movff	plusw1,btemp+10
 13841  0139AE  0EFF               	movlw	-1
 13842  0139B0  006F FF8C  F048    	movff	plusw1,btemp+11
 13843  0139B6  0E40               	movlw	64
 13844  0139B8  2447               	addwf	btemp+10,w,c
 13845  0139BA  6ED9               	movwf	fsr2l,c
 13846  0139BC  0E00               	movlw	0
 13847  0139BE  2048               	addwfc	btemp+11,w,c
 13848  0139C0  6EDA               	movwf	fsr2h,c
 13849  0139C2  50DF               	movf	indf2,w,c
 13850  0139C4  6E48               	movwf	btemp+11,c
 13851                           
 13852                           ;stkvar	__this @ sp[(0)+-2]
 13853  0139C6  0EFE               	movlw	-2
 13854  0139C8  006F FF8C  F045    	movff	plusw1,btemp+8
 13855  0139CE  0EFF               	movlw	-1
 13856  0139D0  006F FF8C  F046    	movff	plusw1,btemp+9
 13857  0139D6  5048               	movf	btemp+11,w,c
 13858  0139D8  2445               	addwf	btemp+8,w,c
 13859  0139DA  6ED9               	movwf	fsr2l,c
 13860  0139DC  0E00               	movlw	0
 13861  0139DE  2046               	addwfc	btemp+9,w,c
 13862  0139E0  6EDA               	movwf	fsr2h,c
 13863  0139E2  0EFD               	movlw	-3
 13864  0139E4  006F FF8F FFDF     	movff	plusw1,indf2
 13865                           
 13866                           ;ringbufs.c: 71:   ++_this->head;
 13867                           ;stkvar	__this @ sp[(0)+-2]
 13868  0139EA  0EFE               	movlw	-2
 13869  0139EC  006F FF8C  F047    	movff	plusw1,btemp+10
 13870  0139F2  0EFF               	movlw	-1
 13871  0139F4  006F FF8C  F048    	movff	plusw1,btemp+11
 13872  0139FA  0E40               	movlw	64
 13873  0139FC  2447               	addwf	btemp+10,w,c
 13874  0139FE  6ED9               	movwf	fsr2l,c
 13875  013A00  0E00               	movlw	0
 13876  013A02  2048               	addwfc	btemp+11,w,c
 13877  013A04  6EDA               	movwf	fsr2h,c
 13878  013A06  2ADF               	incf	indf2,f,c
 13879                           
 13880                           ;ringbufs.c: 72:   ++_this->count;
 13881                           ;stkvar	__this @ sp[(0)+-2]
 13882  013A08  0EFE               	movlw	-2
 13883  013A0A  006F FF8C  F047    	movff	plusw1,btemp+10
 13884  013A10  0EFF               	movlw	-1
 13885  013A12  006F FF8C  F048    	movff	plusw1,btemp+11
 13886  013A18  0E42               	movlw	66
 13887  013A1A  2447               	addwf	btemp+10,w,c
 13888  013A1C  6ED9               	movwf	fsr2l,c
 13889  013A1E  0E00               	movlw	0
 13890  013A20  2048               	addwfc	btemp+11,w,c
 13891  013A22  6EDA               	movwf	fsr2h,c
 13892  013A24  2ADF               	incf	indf2,f,c
 13893  013A26                     l1506:
 13894                           
 13895                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 13896  013A26  52E5               	movf	postdec1,f,c
 13897  013A28  52E5               	movf	postdec1,f,c
 13898  013A2A  52E5               	movf	postdec1,f,c
 13899  013A2C  0012               	return		;funcret
 13900  013A2E                     __end_of_ringBufS_put_dma:
 13901                           	opt callstack 0
 13902                           
 13903 ;; *************** function _SYSTEM_Initialize *****************
 13904 ;; Defined at:
 13905 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;		None
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;		None
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  1  [STACK] void 
 13912 ;; Registers used:
 13913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 3F/3C
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13923 ;;Total ram usage:        0 bytes
 13924 ;; Hardware stack levels used:    1
 13925 ;; Hardware stack levels required when called:    5
 13926 ;; This function calls:
 13927 ;;		_ADCC_Initialize
 13928 ;;		_CLC1_Initialize
 13929 ;;		_CLKREF_Initialize
 13930 ;;		_DMA1_Initialize
 13931 ;;		_DSM_Initialize
 13932 ;;		_EXT_INT_Initialize
 13933 ;;		_INTERRUPT_Initialize
 13934 ;;		_NCO1_Initialize
 13935 ;;		_OSCILLATOR_Initialize
 13936 ;;		_PIN_MANAGER_Initialize
 13937 ;;		_PMD_Initialize
 13938 ;;		_SPI1_Initialize
 13939 ;;		_TMR5_Initialize
 13940 ;;		_TMR6_Initialize
 13941 ;;		_UART1_Initialize
 13942 ;;		_UART2_Initialize
 13943 ;; This function is called by:
 13944 ;;		_main
 13945 ;; This function uses a reentrant model
 13946 ;;
 13947                           
 13948                           	psect	text56
 13949  0143DC                     __ptext56:
 13950                           	opt callstack 0
 13951  0143DC                     _SYSTEM_Initialize:
 13952                           	opt callstack 25
 13953                           
 13954                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13955                           
 13956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13957                           ;incstack = 0
 13958  0143DC  ECA7  F09F         	call	_INTERRUPT_Initialize	;wreg free
 13959                           
 13960                           ; BSR set to: 57
 13961                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13962  0143E0  EC12  F0A6         	call	_PMD_Initialize	;wreg free
 13963                           
 13964                           ; BSR set to: 57
 13965                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13966  0143E4  ECBE  F09D         	call	_PIN_MANAGER_Initialize	;wreg free
 13967                           
 13968                           ; BSR set to: 58
 13969                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13970  0143E8  EC07  F0A6         	call	_OSCILLATOR_Initialize	;wreg free
 13971                           
 13972                           ; BSR set to: 57
 13973                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 13974  0143EC  EC60  F0A1         	call	_ADCC_Initialize	;wreg free
 13975                           
 13976                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 13977  0143F0  ECB8  F0A5         	call	_NCO1_Initialize	;wreg free
 13978                           
 13979                           ; BSR set to: 63
 13980                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 13981  0143F4  EC15  F0A1         	call	_EXT_INT_Initialize	;wreg free
 13982                           
 13983                           ; BSR set to: 57
 13984                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 13985  0143F8  EC26  F0A4         	call	_TMR6_Initialize	;wreg free
 13986                           
 13987                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 13988  0143FC  EC37  F0A5         	call	_CLC1_Initialize	;wreg free
 13989                           
 13990                           ; BSR set to: 60
 13991                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 13992  014400  ECA8  F0A1         	call	_TMR5_Initialize	;wreg free
 13993                           
 13994                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 13995  014404  ECC6  F0A5         	call	_DSM_Initialize	;wreg free
 13996                           
 13997                           ; BSR set to: 60
 13998                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 13999  014408  ECDA  F09F         	call	_UART1_Initialize	;wreg free
 14000                           
 14001                           ; BSR set to: 57
 14002                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 14003  01440C  EC3D  F0A0         	call	_UART2_Initialize	;wreg free
 14004                           
 14005                           ; BSR set to: 57
 14006                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 14007  014410  ECFC  F0A5         	call	_SPI1_Initialize	;wreg free
 14008                           
 14009                           ; BSR set to: 61
 14010                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 14011  014414  EC72  F09F         	call	_DMA1_Initialize	;wreg free
 14012                           
 14013                           ; BSR set to: 59
 14014                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 14015  014418  EC43  F0A6         	call	_CLKREF_Initialize	;wreg free
 14016                           
 14017                           ; BSR set to: 60
 14018                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14019  01441C  0012               	return		;funcret
 14020  01441E                     __end_of_SYSTEM_Initialize:
 14021                           	opt callstack 0
 14022                           
 14023 ;; *************** function _UART2_Initialize *****************
 14024 ;; Defined at:
 14025 ;;		line 78 in file "mcc_generated_files/uart2.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;		None
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;		None
 14030 ;; Return value:  Size  Location     Type
 14031 ;;                  1  [STACK] void 
 14032 ;; Registers used:
 14033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14034 ;; Tracked objects:
 14035 ;;		On entry : 3F/39
 14036 ;;		On exit  : 3F/39
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14043 ;;Total ram usage:        0 bytes
 14044 ;; Hardware stack levels used:    1
 14045 ;; Hardware stack levels required when called:    4
 14046 ;; This function calls:
 14047 ;;		_UART2_SetRxInterruptHandler
 14048 ;;		_UART2_SetTxInterruptHandler
 14049 ;; This function is called by:
 14050 ;;		_SYSTEM_Initialize
 14051 ;; This function uses a reentrant model
 14052 ;;
 14053                           
 14054                           	psect	text57
 14055  01407A                     __ptext57:
 14056                           	opt callstack 0
 14057  01407A                     _UART2_Initialize:
 14058                           	opt callstack 25
 14059                           
 14060                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 14061                           
 14062                           ; BSR set to: 60
 14063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14064                           ;incstack = 0
 14065  01407A  0139               	movlb	57	; () banked
 14066  01407C  9596               	bcf	150,2,b	;volatile
 14067                           
 14068                           ; BSR set to: 57
 14069                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 14070  01407E  0E16               	movlw	low _UART2_Receive_ISR
 14071  014080  6EE6               	movwf	postinc1,c
 14072  014082  0E4B               	movlw	high _UART2_Receive_ISR
 14073  014084  6EE6               	movwf	postinc1,c
 14074  014086  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 14075  014088  6EE6               	movwf	postinc1,c
 14076  01408A  ECEA  F0A3         	call	_UART2_SetRxInterruptHandler	;wreg free
 14077                           
 14078                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 14079  01408E  0139               	movlb	57	; () banked
 14080  014090  9796               	bcf	150,3,b	;volatile
 14081                           
 14082                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 14083  014092  0E8C               	movlw	low _UART2_Transmit_ISR
 14084  014094  6EE6               	movwf	postinc1,c
 14085  014096  0E46               	movlw	high _UART2_Transmit_ISR
 14086  014098  6EE6               	movwf	postinc1,c
 14087  01409A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 14088  01409C  6EE6               	movwf	postinc1,c
 14089  01409E  ECD6  F0A3         	call	_UART2_SetTxInterruptHandler	;wreg free
 14090                           
 14091                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 14092  0140A2  013D               	movlb	61	; () banked
 14093  0140A4  6BD4               	clrf	212,b	;volatile
 14094                           
 14095                           ; BSR set to: 61
 14096                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 14097  0140A6  6BD6               	clrf	214,b	;volatile
 14098                           
 14099                           ; BSR set to: 61
 14100                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 14101  0140A8  6BD8               	clrf	216,b	;volatile
 14102                           
 14103                           ; BSR set to: 61
 14104                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 14105  0140AA  0EB0               	movlw	176
 14106  0140AC  6FDA               	movwf	218,b	;volatile
 14107                           
 14108                           ; BSR set to: 61
 14109                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 14110  0140AE  0E80               	movlw	128
 14111  0140B0  6FDB               	movwf	219,b	;volatile
 14112                           
 14113                           ; BSR set to: 61
 14114                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 14115  0140B2  6BDC               	clrf	220,b	;volatile
 14116                           
 14117                           ; BSR set to: 61
 14118                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 14119  0140B4  0E82               	movlw	130
 14120  0140B6  6FDD               	movwf	221,b	;volatile
 14121                           
 14122                           ; BSR set to: 61
 14123                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 14124  0140B8  0E06               	movlw	6
 14125  0140BA  6FDE               	movwf	222,b	;volatile
 14126                           
 14127                           ; BSR set to: 61
 14128                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 14129  0140BC  6BDF               	clrf	223,b	;volatile
 14130                           
 14131                           ; BSR set to: 61
 14132                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 14133  0140BE  6BE0               	clrf	224,b	;volatile
 14134                           
 14135                           ; BSR set to: 61
 14136                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 14137  0140C0  6BE1               	clrf	225,b	;volatile
 14138                           
 14139                           ; BSR set to: 61
 14140                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 14141  0140C2  6BE2               	clrf	226,b	;volatile
 14142                           
 14143                           ; BSR set to: 61
 14144                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 14145  0140C4  6A36               	clrf	_uart2TxHead,c	;volatile
 14146                           
 14147                           ; BSR set to: 61
 14148                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 14149  0140C6  6A35               	clrf	_uart2TxTail,c	;volatile
 14150                           
 14151                           ; BSR set to: 61
 14152                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 14153  0140C8  0E40               	movlw	64
 14154  0140CA  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 14155                           
 14156                           ; BSR set to: 61
 14157                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 14158  0140CC  6A33               	clrf	_uart2RxHead,c	;volatile
 14159                           
 14160                           ; BSR set to: 61
 14161                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 14162  0140CE  6A32               	clrf	_uart2RxTail,c	;volatile
 14163                           
 14164                           ; BSR set to: 61
 14165                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 14166  0140D0  6A31               	clrf	_uart2RxCount,c	;volatile
 14167                           
 14168                           ; BSR set to: 61
 14169                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 14170  0140D2  0139               	movlb	57	; () banked
 14171  0140D4  8596               	bsf	150,2,b	;volatile
 14172                           
 14173                           ; BSR set to: 57
 14174                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 14175  0140D6  0012               	return		;funcret
 14176  0140D8                     __end_of_UART2_Initialize:
 14177                           	opt callstack 0
 14178                           
 14179 ;; *************** function _UART2_SetTxInterruptHandler *****************
 14180 ;; Defined at:
 14181 ;;		line 252 in file "mcc_generated_files/uart2.c"
 14182 ;; Parameters:    Size  Location     Type
 14183 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14184 ;;		 -> UART2_Transmit_ISR(1), 
 14185 ;; Auto vars:     Size  Location     Type
 14186 ;;		None
 14187 ;; Return value:  Size  Location     Type
 14188 ;;                  1  [STACK] void 
 14189 ;; Registers used:
 14190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14191 ;; Tracked objects:
 14192 ;;		On entry : 3F/39
 14193 ;;		On exit  : 0/0
 14194 ;;		Unchanged: 0/0
 14195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14200 ;;Total ram usage:        0 bytes
 14201 ;; Hardware stack levels used:    1
 14202 ;; Hardware stack levels required when called:    3
 14203 ;; This function calls:
 14204 ;;		Nothing
 14205 ;; This function is called by:
 14206 ;;		_UART2_Initialize
 14207 ;; This function uses a reentrant model
 14208 ;;
 14209                           
 14210                           	psect	text58
 14211  0147AC                     __ptext58:
 14212                           	opt callstack 0
 14213  0147AC                     _UART2_SetTxInterruptHandler:
 14214                           	opt callstack 25
 14215                           
 14216                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 14217                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14218                           
 14219                           ; BSR set to: 57
 14220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14221                           ;incstack = 0
 14222  0147AC  50E1               	movf	fsr1l,w,c
 14223  0147AE  0FFD               	addlw	-3
 14224  0147B0  6ED9               	movwf	fsr2l,c
 14225  0147B2  50E2               	movf	fsr1h,w,c
 14226  0147B4  6EDA               	movwf	fsr2h,c
 14227  0147B6  0EFF               	movlw	255
 14228  0147B8  22DA               	addwfc	fsr2h,f,c
 14229  0147BA  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 14230  0147C0  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 14231  0147C6  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 14232                           
 14233                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14234  0147CC  52E5               	movf	postdec1,f,c
 14235  0147CE  52E5               	movf	postdec1,f,c
 14236  0147D0  52E5               	movf	postdec1,f,c
 14237  0147D2  0012               	return		;funcret
 14238  0147D4                     __end_of_UART2_SetTxInterruptHandler:
 14239                           	opt callstack 0
 14240                           
 14241 ;; *************** function _UART2_SetRxInterruptHandler *****************
 14242 ;; Defined at:
 14243 ;;		line 248 in file "mcc_generated_files/uart2.c"
 14244 ;; Parameters:    Size  Location     Type
 14245 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14246 ;;		 -> UART2_Receive_ISR(1), 
 14247 ;; Auto vars:     Size  Location     Type
 14248 ;;		None
 14249 ;; Return value:  Size  Location     Type
 14250 ;;                  1  [STACK] void 
 14251 ;; Registers used:
 14252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14253 ;; Tracked objects:
 14254 ;;		On entry : 3F/39
 14255 ;;		On exit  : 0/0
 14256 ;;		Unchanged: 0/0
 14257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14262 ;;Total ram usage:        0 bytes
 14263 ;; Hardware stack levels used:    1
 14264 ;; Hardware stack levels required when called:    3
 14265 ;; This function calls:
 14266 ;;		Nothing
 14267 ;; This function is called by:
 14268 ;;		_UART2_Initialize
 14269 ;; This function uses a reentrant model
 14270 ;;
 14271                           
 14272                           	psect	text59
 14273  0147D4                     __ptext59:
 14274                           	opt callstack 0
 14275  0147D4                     _UART2_SetRxInterruptHandler:
 14276                           	opt callstack 25
 14277                           
 14278                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 14279                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14280                           
 14281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14282                           ;incstack = 0
 14283  0147D4  50E1               	movf	fsr1l,w,c
 14284  0147D6  0FFD               	addlw	-3
 14285  0147D8  6ED9               	movwf	fsr2l,c
 14286  0147DA  50E2               	movf	fsr1h,w,c
 14287  0147DC  6EDA               	movwf	fsr2h,c
 14288  0147DE  0EFF               	movlw	255
 14289  0147E0  22DA               	addwfc	fsr2h,f,c
 14290  0147E2  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 14291  0147E8  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 14292  0147EE  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 14293                           
 14294                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14295  0147F4  52E5               	movf	postdec1,f,c
 14296  0147F6  52E5               	movf	postdec1,f,c
 14297  0147F8  52E5               	movf	postdec1,f,c
 14298  0147FA  0012               	return		;funcret
 14299  0147FC                     __end_of_UART2_SetRxInterruptHandler:
 14300                           	opt callstack 0
 14301                           
 14302 ;; *************** function _UART1_Initialize *****************
 14303 ;; Defined at:
 14304 ;;		line 78 in file "mcc_generated_files/uart1.c"
 14305 ;; Parameters:    Size  Location     Type
 14306 ;;		None
 14307 ;; Auto vars:     Size  Location     Type
 14308 ;;		None
 14309 ;; Return value:  Size  Location     Type
 14310 ;;                  1  [STACK] void 
 14311 ;; Registers used:
 14312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14313 ;; Tracked objects:
 14314 ;;		On entry : 3F/3C
 14315 ;;		On exit  : 3F/39
 14316 ;;		Unchanged: 0/0
 14317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14322 ;;Total ram usage:        0 bytes
 14323 ;; Hardware stack levels used:    1
 14324 ;; Hardware stack levels required when called:    4
 14325 ;; This function calls:
 14326 ;;		_UART1_SetRxInterruptHandler
 14327 ;;		_UART1_SetTxInterruptHandler
 14328 ;; This function is called by:
 14329 ;;		_SYSTEM_Initialize
 14330 ;; This function uses a reentrant model
 14331 ;;
 14332                           
 14333                           	psect	text60
 14334  013FB4                     __ptext60:
 14335                           	opt callstack 0
 14336  013FB4                     _UART1_Initialize:
 14337                           	opt callstack 25
 14338                           
 14339                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 14340                           
 14341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14342                           ;incstack = 0
 14343  013FB4  0139               	movlb	57	; () banked
 14344  013FB6  9793               	bcf	147,3,b	;volatile
 14345                           
 14346                           ; BSR set to: 57
 14347                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 14348  013FB8  0EF6               	movlw	low _UART1_Receive_ISR
 14349  013FBA  6EE6               	movwf	postinc1,c
 14350  013FBC  0E4A               	movlw	high _UART1_Receive_ISR
 14351  013FBE  6EE6               	movwf	postinc1,c
 14352  013FC0  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 14353  013FC2  6EE6               	movwf	postinc1,c
 14354  013FC4  EC12  F0A4         	call	_UART1_SetRxInterruptHandler	;wreg free
 14355                           
 14356                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 14357  013FC8  0139               	movlb	57	; () banked
 14358  013FCA  9993               	bcf	147,4,b	;volatile
 14359                           
 14360                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 14361  013FCC  0E60               	movlw	low _UART1_Transmit_ISR
 14362  013FCE  6EE6               	movwf	postinc1,c
 14363  013FD0  0E46               	movlw	high _UART1_Transmit_ISR
 14364  013FD2  6EE6               	movwf	postinc1,c
 14365  013FD4  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 14366  013FD6  6EE6               	movwf	postinc1,c
 14367  013FD8  ECFE  F0A3         	call	_UART1_SetTxInterruptHandler	;wreg free
 14368                           
 14369                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 14370  013FDC  013D               	movlb	61	; () banked
 14371  013FDE  6BEC               	clrf	236,b	;volatile
 14372                           
 14373                           ; BSR set to: 61
 14374                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 14375  013FE0  6BED               	clrf	237,b	;volatile
 14376                           
 14377                           ; BSR set to: 61
 14378                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 14379  013FE2  6BEE               	clrf	238,b	;volatile
 14380                           
 14381                           ; BSR set to: 61
 14382                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 14383  013FE4  6BEF               	clrf	239,b	;volatile
 14384                           
 14385                           ; BSR set to: 61
 14386                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 14387  013FE6  6BF0               	clrf	240,b	;volatile
 14388                           
 14389                           ; BSR set to: 61
 14390                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 14391  013FE8  6BF1               	clrf	241,b	;volatile
 14392                           
 14393                           ; BSR set to: 61
 14394                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 14395  013FEA  0EB0               	movlw	176
 14396  013FEC  6FF2               	movwf	242,b	;volatile
 14397                           
 14398                           ; BSR set to: 61
 14399                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 14400  013FEE  0E80               	movlw	128
 14401  013FF0  6FF3               	movwf	243,b	;volatile
 14402                           
 14403                           ; BSR set to: 61
 14404                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 14405  013FF2  6BF4               	clrf	244,b	;volatile
 14406                           
 14407                           ; BSR set to: 61
 14408                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 14409  013FF4  0E82               	movlw	130
 14410  013FF6  6FF5               	movwf	245,b	;volatile
 14411                           
 14412                           ; BSR set to: 61
 14413                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 14414  013FF8  0E06               	movlw	6
 14415  013FFA  6FF6               	movwf	246,b	;volatile
 14416                           
 14417                           ; BSR set to: 61
 14418                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 14419  013FFC  6BF7               	clrf	247,b	;volatile
 14420                           
 14421                           ; BSR set to: 61
 14422                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 14423  013FFE  6BF8               	clrf	248,b	;volatile
 14424                           
 14425                           ; BSR set to: 61
 14426                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 14427  014000  6BF9               	clrf	249,b	;volatile
 14428                           
 14429                           ; BSR set to: 61
 14430                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 14431  014002  6BFA               	clrf	250,b	;volatile
 14432                           
 14433                           ; BSR set to: 61
 14434                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 14435  014004  6A3C               	clrf	_uart1TxHead,c	;volatile
 14436                           
 14437                           ; BSR set to: 61
 14438                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 14439  014006  6A3B               	clrf	_uart1TxTail,c	;volatile
 14440                           
 14441                           ; BSR set to: 61
 14442                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14443  014008  0E40               	movlw	64
 14444  01400A  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 14445                           
 14446                           ; BSR set to: 61
 14447                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 14448  01400C  6A39               	clrf	_uart1RxHead,c	;volatile
 14449                           
 14450                           ; BSR set to: 61
 14451                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 14452  01400E  6A38               	clrf	_uart1RxTail,c	;volatile
 14453                           
 14454                           ; BSR set to: 61
 14455                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 14456  014010  6A37               	clrf	_uart1RxCount,c	;volatile
 14457                           
 14458                           ; BSR set to: 61
 14459                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 14460  014012  0139               	movlb	57	; () banked
 14461  014014  8793               	bsf	147,3,b	;volatile
 14462                           
 14463                           ; BSR set to: 57
 14464                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 14465  014016  0012               	return		;funcret
 14466  014018                     __end_of_UART1_Initialize:
 14467                           	opt callstack 0
 14468                           
 14469 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14470 ;; Defined at:
 14471 ;;		line 244 in file "mcc_generated_files/uart1.c"
 14472 ;; Parameters:    Size  Location     Type
 14473 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14474 ;;		 -> UART1_Transmit_ISR(1), 
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;		None
 14477 ;; Return value:  Size  Location     Type
 14478 ;;                  1  [STACK] void 
 14479 ;; Registers used:
 14480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14481 ;; Tracked objects:
 14482 ;;		On entry : 3F/39
 14483 ;;		On exit  : 0/0
 14484 ;;		Unchanged: 0/0
 14485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;Total ram usage:        0 bytes
 14491 ;; Hardware stack levels used:    1
 14492 ;; Hardware stack levels required when called:    3
 14493 ;; This function calls:
 14494 ;;		Nothing
 14495 ;; This function is called by:
 14496 ;;		_UART1_Initialize
 14497 ;; This function uses a reentrant model
 14498 ;;
 14499                           
 14500                           	psect	text61
 14501  0147FC                     __ptext61:
 14502                           	opt callstack 0
 14503  0147FC                     _UART1_SetTxInterruptHandler:
 14504                           	opt callstack 25
 14505                           
 14506                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 14507                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14508                           
 14509                           ; BSR set to: 57
 14510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14511                           ;incstack = 0
 14512  0147FC  50E1               	movf	fsr1l,w,c
 14513  0147FE  0FFD               	addlw	-3
 14514  014800  6ED9               	movwf	fsr2l,c
 14515  014802  50E2               	movf	fsr1h,w,c
 14516  014804  6EDA               	movwf	fsr2h,c
 14517  014806  0EFF               	movlw	255
 14518  014808  22DA               	addwfc	fsr2h,f,c
 14519  01480A  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 14520  014810  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 14521  014816  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 14522                           
 14523                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14524  01481C  52E5               	movf	postdec1,f,c
 14525  01481E  52E5               	movf	postdec1,f,c
 14526  014820  52E5               	movf	postdec1,f,c
 14527  014822  0012               	return		;funcret
 14528  014824                     __end_of_UART1_SetTxInterruptHandler:
 14529                           	opt callstack 0
 14530                           
 14531 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14532 ;; Defined at:
 14533 ;;		line 239 in file "mcc_generated_files/uart1.c"
 14534 ;; Parameters:    Size  Location     Type
 14535 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14536 ;;		 -> UART1_Receive_ISR(1), 
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;		None
 14539 ;; Return value:  Size  Location     Type
 14540 ;;                  1  [STACK] void 
 14541 ;; Registers used:
 14542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14543 ;; Tracked objects:
 14544 ;;		On entry : 3F/39
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14552 ;;Total ram usage:        0 bytes
 14553 ;; Hardware stack levels used:    1
 14554 ;; Hardware stack levels required when called:    3
 14555 ;; This function calls:
 14556 ;;		Nothing
 14557 ;; This function is called by:
 14558 ;;		_UART1_Initialize
 14559 ;; This function uses a reentrant model
 14560 ;;
 14561                           
 14562                           	psect	text62
 14563  014824                     __ptext62:
 14564                           	opt callstack 0
 14565  014824                     _UART1_SetRxInterruptHandler:
 14566                           	opt callstack 25
 14567                           
 14568                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 14569                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14570                           
 14571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14572                           ;incstack = 0
 14573  014824  50E1               	movf	fsr1l,w,c
 14574  014826  0FFD               	addlw	-3
 14575  014828  6ED9               	movwf	fsr2l,c
 14576  01482A  50E2               	movf	fsr1h,w,c
 14577  01482C  6EDA               	movwf	fsr2h,c
 14578  01482E  0EFF               	movlw	255
 14579  014830  22DA               	addwfc	fsr2h,f,c
 14580  014832  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 14581  014838  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 14582  01483E  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 14583                           
 14584                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14585  014844  52E5               	movf	postdec1,f,c
 14586  014846  52E5               	movf	postdec1,f,c
 14587  014848  52E5               	movf	postdec1,f,c
 14588  01484A  0012               	return		;funcret
 14589  01484C                     __end_of_UART1_SetRxInterruptHandler:
 14590                           	opt callstack 0
 14591                           
 14592 ;; *************** function _TMR6_Initialize *****************
 14593 ;; Defined at:
 14594 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;		None
 14597 ;; Auto vars:     Size  Location     Type
 14598 ;;		None
 14599 ;; Return value:  Size  Location     Type
 14600 ;;                  1  [STACK] void 
 14601 ;; Registers used:
 14602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14603 ;; Tracked objects:
 14604 ;;		On entry : 3F/39
 14605 ;;		On exit  : 0/0
 14606 ;;		Unchanged: 0/0
 14607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14612 ;;Total ram usage:        0 bytes
 14613 ;; Hardware stack levels used:    1
 14614 ;; Hardware stack levels required when called:    4
 14615 ;; This function calls:
 14616 ;;		_TMR6_SetInterruptHandler
 14617 ;; This function is called by:
 14618 ;;		_SYSTEM_Initialize
 14619 ;; This function uses a reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text63
 14623  01484C                     __ptext63:
 14624                           	opt callstack 0
 14625  01484C                     _TMR6_Initialize:
 14626                           	opt callstack 25
 14627                           
 14628                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 14629                           
 14630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14631                           ;incstack = 0
 14632  01484C  0E01               	movlw	1
 14633  01484E  6E96               	movwf	16278,c	;volatile
 14634                           
 14635                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 14636  014850  6A95               	clrf	16277,c	;volatile
 14637                           
 14638                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 14639  014852  6A97               	clrf	16279,c	;volatile
 14640                           
 14641                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 14642  014854  0E03               	movlw	3
 14643  014856  6E93               	movwf	16275,c	;volatile
 14644                           
 14645                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 14646  014858  6A92               	clrf	16274,c	;volatile
 14647                           
 14648                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 14649  01485A  0139               	movlb	57	; () banked
 14650  01485C  91A9               	bcf	169,0,b	;volatile
 14651                           
 14652                           ; BSR set to: 57
 14653                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 14654  01485E  8199               	bsf	153,0,b	;volatile
 14655                           
 14656                           ; BSR set to: 57
 14657                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 14658  014860  0E96               	movlw	low _TMR6_DefaultInterruptHandler
 14659  014862  6EE6               	movwf	postinc1,c
 14660  014864  0E43               	movlw	high _TMR6_DefaultInterruptHandler
 14661  014866  6EE6               	movwf	postinc1,c
 14662  014868  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 14663  01486A  6EE6               	movwf	postinc1,c
 14664  01486C  EC3A  F0A4         	call	_TMR6_SetInterruptHandler	;wreg free
 14665                           
 14666                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 14667  014870  6894               	setf	16276,c	;volatile
 14668                           
 14669                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14670  014872  0012               	return		;funcret
 14671  014874                     __end_of_TMR6_Initialize:
 14672                           	opt callstack 0
 14673                           
 14674 ;; *************** function _TMR6_SetInterruptHandler *****************
 14675 ;; Defined at:
 14676 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 14677 ;; Parameters:    Size  Location     Type
 14678 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14679 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 14680 ;; Auto vars:     Size  Location     Type
 14681 ;;		None
 14682 ;; Return value:  Size  Location     Type
 14683 ;;                  1  [STACK] void 
 14684 ;; Registers used:
 14685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14686 ;; Tracked objects:
 14687 ;;		On entry : 3F/39
 14688 ;;		On exit  : 0/0
 14689 ;;		Unchanged: 0/0
 14690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14695 ;;Total ram usage:        0 bytes
 14696 ;; Hardware stack levels used:    1
 14697 ;; Hardware stack levels required when called:    3
 14698 ;; This function calls:
 14699 ;;		Nothing
 14700 ;; This function is called by:
 14701 ;;		_TMR6_Initialize
 14702 ;; This function uses a reentrant model
 14703 ;;
 14704                           
 14705                           	psect	text64
 14706  014874                     __ptext64:
 14707                           	opt callstack 0
 14708  014874                     _TMR6_SetInterruptHandler:
 14709                           	opt callstack 25
 14710                           
 14711                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 14712                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14713                           
 14714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14715                           ;incstack = 0
 14716  014874  50E1               	movf	fsr1l,w,c
 14717  014876  0FFD               	addlw	-3
 14718  014878  6ED9               	movwf	fsr2l,c
 14719  01487A  50E2               	movf	fsr1h,w,c
 14720  01487C  6EDA               	movwf	fsr2h,c
 14721  01487E  0EFF               	movlw	255
 14722  014880  22DA               	addwfc	fsr2h,f,c
 14723  014882  006F FF78  F0DF    	movff	postinc2,_TMR6_InterruptHandler
 14724  014888  006F FF78  F0E0    	movff	postinc2,_TMR6_InterruptHandler+1
 14725  01488E  006F FF74  F0E1    	movff	postdec2,_TMR6_InterruptHandler+2
 14726                           
 14727                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14728  014894  52E5               	movf	postdec1,f,c
 14729  014896  52E5               	movf	postdec1,f,c
 14730  014898  52E5               	movf	postdec1,f,c
 14731  01489A  0012               	return		;funcret
 14732  01489C                     __end_of_TMR6_SetInterruptHandler:
 14733                           	opt callstack 0
 14734                           
 14735 ;; *************** function _TMR5_Initialize *****************
 14736 ;; Defined at:
 14737 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14738 ;; Parameters:    Size  Location     Type
 14739 ;;		None
 14740 ;; Auto vars:     Size  Location     Type
 14741 ;;		None
 14742 ;; Return value:  Size  Location     Type
 14743 ;;                  1  [STACK] void 
 14744 ;; Registers used:
 14745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 14746 ;; Tracked objects:
 14747 ;;		On entry : 3F/3C
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14755 ;;Total ram usage:        0 bytes
 14756 ;; Hardware stack levels used:    1
 14757 ;; Hardware stack levels required when called:    4
 14758 ;; This function calls:
 14759 ;;		_TMR5_SetInterruptHandler
 14760 ;; This function is called by:
 14761 ;;		_SYSTEM_Initialize
 14762 ;; This function uses a reentrant model
 14763 ;;
 14764                           
 14765                           	psect	text65
 14766  014350                     __ptext65:
 14767                           	opt callstack 0
 14768  014350                     _TMR5_Initialize:
 14769                           	opt callstack 25
 14770                           
 14771                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 14772                           
 14773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14774                           ;incstack = 0
 14775  014350  6A9B               	clrf	16283,c	;volatile
 14776                           
 14777                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 14778  014352  6A9C               	clrf	16284,c	;volatile
 14779                           
 14780                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 14781  014354  0E01               	movlw	1
 14782  014356  6E9D               	movwf	16285,c	;volatile
 14783                           
 14784                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 14785  014358  0E63               	movlw	99
 14786  01435A  6E99               	movwf	16281,c	;volatile
 14787                           
 14788                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 14789  01435C  0EC0               	movlw	192
 14790  01435E  6E98               	movwf	16280,c	;volatile
 14791                           
 14792                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 14793  014360  5098               	movf	16280,w,c	;volatile
 14794  014362  006F FE64  F03D    	movff	16281,btemp	;volatile
 14795  014368  6A3E               	clrf	btemp+1,c
 14796  01436A  0060  F0F4  F03E   	movff	btemp,btemp+1
 14797  014370  6A3D               	clrf	btemp,c
 14798  014372  103D               	iorwf	btemp,w,c
 14799  014374  6E29               	movwf	_timer5ReloadVal,c	;volatile
 14800  014376  503E               	movf	btemp+1,w,c
 14801  014378  6E2A               	movwf	_timer5ReloadVal+1,c	;volatile
 14802                           
 14803                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 14804  01437A  0139               	movlb	57	; () banked
 14805  01437C  9DA8               	bcf	168,6,b	;volatile
 14806                           
 14807                           ; BSR set to: 57
 14808                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 14809  01437E  8D98               	bsf	152,6,b	;volatile
 14810                           
 14811                           ; BSR set to: 57
 14812                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 14813  014380  0EDE               	movlw	low _TMR5_DefaultInterruptHandler
 14814  014382  6EE6               	movwf	postinc1,c
 14815  014384  0E4B               	movlw	high _TMR5_DefaultInterruptHandler
 14816  014386  6EE6               	movwf	postinc1,c
 14817  014388  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 14818  01438A  6EE6               	movwf	postinc1,c
 14819  01438C  EC4E  F0A4         	call	_TMR5_SetInterruptHandler	;wreg free
 14820                           
 14821                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 14822  014390  0E31               	movlw	49
 14823  014392  6E9A               	movwf	16282,c	;volatile
 14824                           
 14825                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14826  014394  0012               	return		;funcret
 14827  014396                     __end_of_TMR5_Initialize:
 14828                           	opt callstack 0
 14829                           
 14830 ;; *************** function _TMR5_SetInterruptHandler *****************
 14831 ;; Defined at:
 14832 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 14833 ;; Parameters:    Size  Location     Type
 14834 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14835 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 14836 ;; Auto vars:     Size  Location     Type
 14837 ;;		None
 14838 ;; Return value:  Size  Location     Type
 14839 ;;                  1  [STACK] void 
 14840 ;; Registers used:
 14841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14842 ;; Tracked objects:
 14843 ;;		On entry : 3F/39
 14844 ;;		On exit  : 0/0
 14845 ;;		Unchanged: 0/0
 14846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14851 ;;Total ram usage:        0 bytes
 14852 ;; Hardware stack levels used:    1
 14853 ;; Hardware stack levels required when called:    3
 14854 ;; This function calls:
 14855 ;;		Nothing
 14856 ;; This function is called by:
 14857 ;;		_TMR5_Initialize
 14858 ;; This function uses a reentrant model
 14859 ;;
 14860                           
 14861                           	psect	text66
 14862  01489C                     __ptext66:
 14863                           	opt callstack 0
 14864  01489C                     _TMR5_SetInterruptHandler:
 14865                           	opt callstack 25
 14866                           
 14867                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 14868                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14869                           
 14870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14871                           ;incstack = 0
 14872  01489C  50E1               	movf	fsr1l,w,c
 14873  01489E  0FFD               	addlw	-3
 14874  0148A0  6ED9               	movwf	fsr2l,c
 14875  0148A2  50E2               	movf	fsr1h,w,c
 14876  0148A4  6EDA               	movwf	fsr2h,c
 14877  0148A6  0EFF               	movlw	255
 14878  0148A8  22DA               	addwfc	fsr2h,f,c
 14879  0148AA  006F FF78  F0DC    	movff	postinc2,_TMR5_InterruptHandler
 14880  0148B0  006F FF78  F0DD    	movff	postinc2,_TMR5_InterruptHandler+1
 14881  0148B6  006F FF74  F0DE    	movff	postdec2,_TMR5_InterruptHandler+2
 14882                           
 14883                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14884  0148BC  52E5               	movf	postdec1,f,c
 14885  0148BE  52E5               	movf	postdec1,f,c
 14886  0148C0  52E5               	movf	postdec1,f,c
 14887  0148C2  0012               	return		;funcret
 14888  0148C4                     __end_of_TMR5_SetInterruptHandler:
 14889                           	opt callstack 0
 14890                           
 14891 ;; *************** function _SPI1_Initialize *****************
 14892 ;; Defined at:
 14893 ;;		line 64 in file "mcc_generated_files/spi1.c"
 14894 ;; Parameters:    Size  Location     Type
 14895 ;;		None
 14896 ;; Auto vars:     Size  Location     Type
 14897 ;;		None
 14898 ;; Return value:  Size  Location     Type
 14899 ;;                  1  [STACK] void 
 14900 ;; Registers used:
 14901 ;;		wreg, status,2
 14902 ;; Tracked objects:
 14903 ;;		On entry : 3F/39
 14904 ;;		On exit  : 3F/3D
 14905 ;;		Unchanged: 0/0
 14906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14911 ;;Total ram usage:        0 bytes
 14912 ;; Hardware stack levels used:    1
 14913 ;; Hardware stack levels required when called:    3
 14914 ;; This function calls:
 14915 ;;		Nothing
 14916 ;; This function is called by:
 14917 ;;		_SYSTEM_Initialize
 14918 ;; This function uses a reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text67
 14922  014BF8                     __ptext67:
 14923                           	opt callstack 0
 14924  014BF8                     _SPI1_Initialize:
 14925                           	opt callstack 26
 14926                           
 14927                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 14928                           
 14929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14930                           ;incstack = 0
 14931  014BF8  0E40               	movlw	64
 14932  014BFA  013D               	movlb	61	; () banked
 14933  014BFC  6F15               	movwf	21,b	;volatile
 14934                           
 14935                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 14936  014BFE  0E03               	movlw	3
 14937  014C00  6F16               	movwf	22,b	;volatile
 14938                           
 14939                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 14940  014C02  0E4F               	movlw	79
 14941  014C04  6F19               	movwf	25,b	;volatile
 14942                           
 14943                           ; BSR set to: 61
 14944                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 14945  014C06  6B1C               	clrf	28,b	;volatile
 14946                           
 14947                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 14948  014C08  0E83               	movlw	131
 14949  014C0A  6F14               	movwf	20,b	;volatile
 14950                           
 14951                           ; BSR set to: 61
 14952                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14953  014C0C  0012               	return		;funcret
 14954  014C0E                     __end_of_SPI1_Initialize:
 14955                           	opt callstack 0
 14956                           
 14957 ;; *************** function _PMD_Initialize *****************
 14958 ;; Defined at:
 14959 ;;		line 88 in file "mcc_generated_files/mcc.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;		None
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;		None
 14964 ;; Return value:  Size  Location     Type
 14965 ;;                  1  [STACK] void 
 14966 ;; Registers used:
 14967 ;;		None
 14968 ;; Tracked objects:
 14969 ;;		On entry : 3F/39
 14970 ;;		On exit  : 3F/39
 14971 ;;		Unchanged: 0/0
 14972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14977 ;;Total ram usage:        0 bytes
 14978 ;; Hardware stack levels used:    1
 14979 ;; Hardware stack levels required when called:    3
 14980 ;; This function calls:
 14981 ;;		Nothing
 14982 ;; This function is called by:
 14983 ;;		_SYSTEM_Initialize
 14984 ;; This function uses a reentrant model
 14985 ;;
 14986                           
 14987                           	psect	text68
 14988  014C24                     __ptext68:
 14989                           	opt callstack 0
 14990  014C24                     _PMD_Initialize:
 14991                           	opt callstack 26
 14992                           
 14993                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 14994                           
 14995                           ; BSR set to: 61
 14996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14997                           ;incstack = 0
 14998  014C24  0139               	movlb	57	; () banked
 14999  014C26  6BC0               	clrf	192,b	;volatile
 15000                           
 15001                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 15002  014C28  6BC1               	clrf	193,b	;volatile
 15003                           
 15004                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 15005  014C2A  6BC2               	clrf	194,b	;volatile
 15006                           
 15007                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 15008  014C2C  6BC3               	clrf	195,b	;volatile
 15009                           
 15010                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 15011  014C2E  6BC4               	clrf	196,b	;volatile
 15012                           
 15013                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 15014  014C30  6BC5               	clrf	197,b	;volatile
 15015                           
 15016                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 15017  014C32  6BC6               	clrf	198,b	;volatile
 15018                           
 15019                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 15020  014C34  6BC7               	clrf	199,b	;volatile
 15021                           
 15022                           ; BSR set to: 57
 15023                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15024  014C36  0012               	return		;funcret
 15025  014C38                     __end_of_PMD_Initialize:
 15026                           	opt callstack 0
 15027                           
 15028 ;; *************** function _PIN_MANAGER_Initialize *****************
 15029 ;; Defined at:
 15030 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 15031 ;; Parameters:    Size  Location     Type
 15032 ;;		None
 15033 ;; Auto vars:     Size  Location     Type
 15034 ;;		None
 15035 ;; Return value:  Size  Location     Type
 15036 ;;                  1  [STACK] void 
 15037 ;; Registers used:
 15038 ;;		wreg, status,2
 15039 ;; Tracked objects:
 15040 ;;		On entry : 3F/39
 15041 ;;		On exit  : 3F/3A
 15042 ;;		Unchanged: 0/0
 15043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15048 ;;Total ram usage:        0 bytes
 15049 ;; Hardware stack levels used:    1
 15050 ;; Hardware stack levels required when called:    3
 15051 ;; This function calls:
 15052 ;;		Nothing
 15053 ;; This function is called by:
 15054 ;;		_SYSTEM_Initialize
 15055 ;; This function uses a reentrant model
 15056 ;;
 15057                           
 15058                           	psect	text69
 15059  013B7C                     __ptext69:
 15060                           	opt callstack 0
 15061  013B7C                     _PIN_MANAGER_Initialize:
 15062                           	opt callstack 26
 15063                           
 15064                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 15065                           
 15066                           ; BSR set to: 57
 15067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15068                           ;incstack = 0
 15069  013B7C  0E07               	movlw	7
 15070  013B7E  6EBE               	movwf	16318,c	;volatile
 15071                           
 15072                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 15073  013B80  6ABD               	clrf	16317,c	;volatile
 15074                           
 15075                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 15076  013B82  6ABA               	clrf	16314,c	;volatile
 15077                           
 15078                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 15079  013B84  6ABF               	clrf	16319,c	;volatile
 15080                           
 15081                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 15082  013B86  6ABB               	clrf	16315,c	;volatile
 15083                           
 15084                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 15085  013B88  0E06               	movlw	6
 15086  013B8A  6EBC               	movwf	16316,c	;volatile
 15087                           
 15088                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 15089  013B8C  6AC6               	clrf	16326,c	;volatile
 15090                           
 15091                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 15092  013B8E  0E0F               	movlw	15
 15093  013B90  6EC7               	movwf	16327,c	;volatile
 15094                           
 15095                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 15096  013B92  0E8F               	movlw	143
 15097  013B94  6EC2               	movwf	16322,c	;volatile
 15098                           
 15099                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 15100  013B96  0EBF               	movlw	191
 15101  013B98  6EC3               	movwf	16323,c	;volatile
 15102                           
 15103                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 15104  013B9A  0E91               	movlw	145
 15105  013B9C  6EC4               	movwf	16324,c	;volatile
 15106                           
 15107                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 15108  013B9E  0E0C               	movlw	12
 15109  013BA0  6EC5               	movwf	16325,c	;volatile
 15110                           
 15111                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 15112  013BA2  013A               	movlb	58	; () banked
 15113  013BA4  6B70               	clrf	112,b	;volatile
 15114                           
 15115                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 15116  013BA6  0E01               	movlw	1
 15117  013BA8  6F60               	movwf	96,b	;volatile
 15118                           
 15119                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 15120  013BAA  0E38               	movlw	56
 15121  013BAC  6F50               	movwf	80,b	;volatile
 15122                           
 15123                           ; BSR set to: 58
 15124                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 15125  013BAE  6B80               	clrf	128,b	;volatile
 15126                           
 15127                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x0F;
 15128  013BB0  0E0F               	movlw	15
 15129  013BB2  6F90               	movwf	144,b	;volatile
 15130                           
 15131                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 15132  013BB4  0E8F               	movlw	143
 15133  013BB6  6F40               	movwf	64,b	;volatile
 15134                           
 15135                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 15136  013BB8  0EFC               	movlw	252
 15137  013BBA  6F71               	movwf	113,b	;volatile
 15138                           
 15139                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0xF0;
 15140  013BBC  0EF0               	movlw	240
 15141  013BBE  6F91               	movwf	145,b	;volatile
 15142                           
 15143                           ; BSR set to: 58
 15144                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 15145  013BC0  6B81               	clrf	129,b	;volatile
 15146                           
 15147                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 15148  013BC2  0E87               	movlw	135
 15149  013BC4  6F51               	movwf	81,b	;volatile
 15150                           
 15151                           ; BSR set to: 58
 15152                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 15153  013BC6  6B41               	clrf	65,b	;volatile
 15154                           
 15155                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 15156  013BC8  0E90               	movlw	144
 15157  013BCA  6F61               	movwf	97,b	;volatile
 15158                           
 15159                           ; BSR set to: 58
 15160                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 15161  013BCC  6B82               	clrf	130,b	;volatile
 15162                           
 15163                           ; BSR set to: 58
 15164                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 15165  013BCE  6B92               	clrf	146,b	;volatile
 15166                           
 15167                           ; BSR set to: 58
 15168                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 15169  013BD0  6B42               	clrf	66,b	;volatile
 15170                           
 15171                           ; BSR set to: 58
 15172                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 15173  013BD2  6B52               	clrf	82,b	;volatile
 15174                           
 15175                           ; BSR set to: 58
 15176                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 15177  013BD4  6B62               	clrf	98,b	;volatile
 15178                           
 15179                           ; BSR set to: 58
 15180                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 15181  013BD6  6B72               	clrf	114,b	;volatile
 15182                           
 15183                           ; BSR set to: 58
 15184                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 15185  013BD8  6943               	setf	67,b	;volatile
 15186                           
 15187                           ; BSR set to: 58
 15188                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 15189  013BDA  6953               	setf	83,b	;volatile
 15190                           
 15191                           ; BSR set to: 58
 15192                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 15193  013BDC  6963               	setf	99,b	;volatile
 15194                           
 15195                           ; BSR set to: 58
 15196                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 15197  013BDE  6973               	setf	115,b	;volatile
 15198                           
 15199                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 15200  013BE0  0E07               	movlw	7
 15201  013BE2  6F83               	movwf	131,b	;volatile
 15202                           
 15203                           ; BSR set to: 58
 15204                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 15205  013BE4  6993               	setf	147,b	;volatile
 15206                           
 15207                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 15208  013BE6  0E0F               	movlw	15
 15209  013BE8  6FE8               	movwf	232,b	;volatile
 15210                           
 15211                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 15212  013BEA  0E16               	movlw	22
 15213  013BEC  6F0E               	movwf	14,b	;volatile
 15214                           
 15215                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 15216  013BEE  0E1E               	movlw	30
 15217  013BF0  6F13               	movwf	19,b	;volatile
 15218                           
 15219                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 15220  013BF2  0E08               	movlw	8
 15221  013BF4  6FC0               	movwf	192,b	;volatile
 15222                           
 15223                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 15224  013BF6  0E0A               	movlw	10
 15225  013BF8  6FC2               	movwf	194,b	;volatile
 15226                           
 15227                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 15228  013BFA  0E09               	movlw	9
 15229  013BFC  6FC1               	movwf	193,b	;volatile
 15230                           
 15231                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 15232  013BFE  0E17               	movlw	23
 15233  013C00  6FE5               	movwf	229,b	;volatile
 15234                           
 15235                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 15236  013C02  0E13               	movlw	19
 15237  013C04  6FDE               	movwf	222,b	;volatile
 15238                           
 15239                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 15240  013C06  0E01               	movlw	1
 15241  013C08  6F04               	movwf	4,b	;volatile
 15242                           
 15243                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 15244  013C0A  0E26               	movlw	38
 15245  013C0C  6F05               	movwf	5,b	;volatile
 15246                           
 15247                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 15248  013C0E  0E28               	movlw	40
 15249  013C10  6F06               	movwf	6,b	;volatile
 15250                           
 15251                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 15252  013C12  0E1F               	movlw	31
 15253  013C14  6F15               	movwf	21,b	;volatile
 15254                           
 15255                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 15256  013C16  0E13               	movlw	19
 15257  013C18  6F16               	movwf	22,b	;volatile
 15258                           
 15259                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 15260  013C1A  0E14               	movlw	20
 15261  013C1C  6FDF               	movwf	223,b	;volatile
 15262                           
 15263                           ; BSR set to: 58
 15264                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 15265  013C1E  0012               	return		;funcret
 15266  013C20                     __end_of_PIN_MANAGER_Initialize:
 15267                           	opt callstack 0
 15268                           
 15269 ;; *************** function _OSCILLATOR_Initialize *****************
 15270 ;; Defined at:
 15271 ;;		line 70 in file "mcc_generated_files/mcc.c"
 15272 ;; Parameters:    Size  Location     Type
 15273 ;;		None
 15274 ;; Auto vars:     Size  Location     Type
 15275 ;;		None
 15276 ;; Return value:  Size  Location     Type
 15277 ;;                  1  [STACK] void 
 15278 ;; Registers used:
 15279 ;;		wreg, status,2
 15280 ;; Tracked objects:
 15281 ;;		On entry : 3F/3A
 15282 ;;		On exit  : 3F/39
 15283 ;;		Unchanged: 0/0
 15284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15289 ;;Total ram usage:        0 bytes
 15290 ;; Hardware stack levels used:    1
 15291 ;; Hardware stack levels required when called:    3
 15292 ;; This function calls:
 15293 ;;		Nothing
 15294 ;; This function is called by:
 15295 ;;		_SYSTEM_Initialize
 15296 ;; This function uses a reentrant model
 15297 ;;
 15298                           
 15299                           	psect	text70
 15300  014C0E                     __ptext70:
 15301                           	opt callstack 0
 15302  014C0E                     _OSCILLATOR_Initialize:
 15303                           	opt callstack 26
 15304                           
 15305                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 15306                           
 15307                           ; BSR set to: 58
 15308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15309                           ;incstack = 0
 15310  014C0E  0E20               	movlw	32
 15311  014C10  0139               	movlb	57	; () banked
 15312  014C12  6FD9               	movwf	217,b	;volatile
 15313                           
 15314                           ; BSR set to: 57
 15315                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 15316  014C14  6BDB               	clrf	219,b	;volatile
 15317                           
 15318                           ; BSR set to: 57
 15319                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 15320  014C16  6BDD               	clrf	221,b	;volatile
 15321                           
 15322                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 15323  014C18  0E02               	movlw	2
 15324  014C1A  6FDF               	movwf	223,b	;volatile
 15325                           
 15326                           ; BSR set to: 57
 15327                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 15328  014C1C  6BDE               	clrf	222,b	;volatile
 15329  014C1E                     l194:
 15330                           
 15331                           ; BSR set to: 57
 15332                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 15333  014C1E  B1DC               	btfsc	220,0,b	;volatile
 15334  014C20  0012               	return	
 15335  014C22  D7FD               	goto	l194
 15336  014C24                     __end_of_OSCILLATOR_Initialize:
 15337                           	opt callstack 0
 15338                           
 15339 ;; *************** function _NCO1_Initialize *****************
 15340 ;; Defined at:
 15341 ;;		line 58 in file "mcc_generated_files/nco1.c"
 15342 ;; Parameters:    Size  Location     Type
 15343 ;;		None
 15344 ;; Auto vars:     Size  Location     Type
 15345 ;;		None
 15346 ;; Return value:  Size  Location     Type
 15347 ;;                  1  [STACK] void 
 15348 ;; Registers used:
 15349 ;;		wreg, status,2
 15350 ;; Tracked objects:
 15351 ;;		On entry : 0/39
 15352 ;;		On exit  : 3F/3F
 15353 ;;		Unchanged: 0/0
 15354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15359 ;;Total ram usage:        0 bytes
 15360 ;; Hardware stack levels used:    1
 15361 ;; Hardware stack levels required when called:    3
 15362 ;; This function calls:
 15363 ;;		Nothing
 15364 ;; This function is called by:
 15365 ;;		_SYSTEM_Initialize
 15366 ;; This function uses a reentrant model
 15367 ;;
 15368                           
 15369                           	psect	text71
 15370  014B70                     __ptext71:
 15371                           	opt callstack 0
 15372  014B70                     _NCO1_Initialize:
 15373                           	opt callstack 26
 15374                           
 15375                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 15376                           
 15377                           ; BSR set to: 57
 15378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15379                           ;incstack = 0
 15380  014B70  013F               	movlb	63	; () banked
 15381  014B72  6B3E               	clrf	62,b	;volatile
 15382                           
 15383                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 15384  014B74  6B3F               	clrf	63,b	;volatile
 15385                           
 15386                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 15387  014B76  6B3A               	clrf	58,b	;volatile
 15388                           
 15389                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 15390  014B78  6B39               	clrf	57,b	;volatile
 15391                           
 15392                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 15393  014B7A  6B38               	clrf	56,b	;volatile
 15394                           
 15395                           ; BSR set to: 63
 15396                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 15397  014B7C  0E06               	movlw	6
 15398  014B7E  6F3D               	movwf	61,b	;volatile
 15399                           
 15400                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 15401  014B80  0EC7               	movlw	199
 15402  014B82  6F3C               	movwf	60,b	;volatile
 15403                           
 15404                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 15405  014B84  0EAE               	movlw	174
 15406  014B86  6F3B               	movwf	59,b	;volatile
 15407                           
 15408                           ; BSR set to: 63
 15409                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 15410  014B88  8F3E               	bsf	62,7,b	;volatile
 15411                           
 15412                           ; BSR set to: 63
 15413                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15414  014B8A  0012               	return		;funcret
 15415  014B8C                     __end_of_NCO1_Initialize:
 15416                           	opt callstack 0
 15417                           
 15418 ;; *************** function _INTERRUPT_Initialize *****************
 15419 ;; Defined at:
 15420 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15421 ;; Parameters:    Size  Location     Type
 15422 ;;		None
 15423 ;; Auto vars:     Size  Location     Type
 15424 ;;  state           1  [STACK] _Bool 
 15425 ;; Return value:  Size  Location     Type
 15426 ;;                  1  [STACK] void 
 15427 ;; Registers used:
 15428 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 15429 ;; Tracked objects:
 15430 ;;		On entry : 0/0
 15431 ;;		On exit  : 3F/39
 15432 ;;		Unchanged: 0/0
 15433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15438 ;;Total ram usage:        0 bytes
 15439 ;; Hardware stack levels used:    1
 15440 ;; Hardware stack levels required when called:    3
 15441 ;; This function calls:
 15442 ;;		Nothing
 15443 ;; This function is called by:
 15444 ;;		_SYSTEM_Initialize
 15445 ;; This function uses a reentrant model
 15446 ;;
 15447                           
 15448                           	psect	text72
 15449  013F4E                     __ptext72:
 15450                           	opt callstack 0
 15451  013F4E                     _INTERRUPT_Initialize:
 15452                           	opt callstack 0
 15453                           
 15454                           ; BSR set to: 63
 15455                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15456  013F4E  52E6               	movf	postinc1,f,c
 15457                           
 15458                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15459                           
 15460                           ;incstack = 0
 15461  013F50  8AD2               	bsf	16338,5,c	;volatile
 15462                           
 15463                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15464  013F52  AED2               	btfss	16338,7,c	;volatile
 15465  013F54  D003               	goto	u3390
 15466  013F56  6A48               	clrf	btemp+11,c
 15467  013F58  2A48               	incf	btemp+11,f,c
 15468  013F5A  D001               	goto	u3408
 15469  013F5C                     u3390:
 15470  013F5C  6A48               	clrf	btemp+11,c
 15471  013F5E                     u3408:
 15472                           
 15473                           ;stkvar	_state @ sp[(-1)+0]
 15474  013F5E  0EFF               	movlw	-1
 15475  013F60  0060  F123  FFE3   	movff	btemp+11,plusw1
 15476                           
 15477                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15478  013F66  9ED2               	bcf	16338,7,c	;volatile
 15479                           
 15480                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15481  013F68  0E55               	movlw	85
 15482  013F6A  6ED4               	movwf	16340,c	;volatile
 15483                           
 15484                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15485  013F6C  0EAA               	movlw	170
 15486  013F6E  6ED4               	movwf	16340,c	;volatile
 15487                           
 15488                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15489  013F70  90D4               	bcf	16340,0,c	;volatile
 15490                           
 15491                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 15492  013F72  0138               	movlb	56	; () banked
 15493  013F74  6B9F               	clrf	159,b	;volatile
 15494                           
 15495                           ; BSR set to: 56
 15496                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 15497  013F76  6B9E               	clrf	158,b	;volatile
 15498                           
 15499                           ; BSR set to: 56
 15500                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 15501  013F78  0E08               	movlw	8
 15502  013F7A  6F9D               	movwf	157,b	;volatile
 15503                           
 15504                           ; BSR set to: 56
 15505                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15506  013F7C  0E55               	movlw	85
 15507  013F7E  6ED4               	movwf	16340,c	;volatile
 15508                           
 15509                           ; BSR set to: 56
 15510                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15511  013F80  0EAA               	movlw	170
 15512  013F82  6ED4               	movwf	16340,c	;volatile
 15513                           
 15514                           ; BSR set to: 56
 15515                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15516  013F84  80D4               	bsf	16340,0,c	;volatile
 15517                           
 15518                           ; BSR set to: 56
 15519                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15520                           ;stkvar	_state @ sp[(-1)+0]
 15521  013F86  0EFF               	movlw	-1
 15522  013F88  B0E3               	btfsc	plusw1,0,c
 15523  013F8A  D002               	bra	u3415
 15524  013F8C  9ED2               	bcf	16338,7,c	;volatile
 15525  013F8E  D001               	bra	u3416
 15526  013F90                     u3415:
 15527  013F90  8ED2               	bsf	16338,7,c	;volatile
 15528  013F92                     u3416:
 15529                           
 15530                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 15531  013F92  0139               	movlb	57	; () banked
 15532  013F94  8782               	bsf	130,3,b	;volatile
 15533                           
 15534                           ; BSR set to: 57
 15535                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 15536  013F96  8382               	bsf	130,1,b	;volatile
 15537                           
 15538                           ; BSR set to: 57
 15539                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 15540  013F98  8182               	bsf	130,0,b	;volatile
 15541                           
 15542                           ; BSR set to: 57
 15543                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 15544  013F9A  8582               	bsf	130,2,b	;volatile
 15545                           
 15546                           ; BSR set to: 57
 15547                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 15548  013F9C  8786               	bsf	134,3,b	;volatile
 15549                           
 15550                           ; BSR set to: 57
 15551                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 15552  013F9E  8586               	bsf	134,2,b	;volatile
 15553                           
 15554                           ; BSR set to: 57
 15555                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 15556  013FA0  8983               	bsf	131,4,b	;volatile
 15557                           
 15558                           ; BSR set to: 57
 15559                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 15560  013FA2  8783               	bsf	131,3,b	;volatile
 15561                           
 15562                           ; BSR set to: 57
 15563                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 15564  013FA4  8181               	bsf	129,0,b	;volatile
 15565                           
 15566                           ; BSR set to: 57
 15567                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 15568  013FA6  8185               	bsf	133,0,b	;volatile
 15569                           
 15570                           ; BSR set to: 57
 15571                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 15572  013FA8  8B87               	bsf	135,5,b	;volatile
 15573                           
 15574                           ; BSR set to: 57
 15575                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 15576  013FAA  8189               	bsf	137,0,b	;volatile
 15577                           
 15578                           ; BSR set to: 57
 15579                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 15580  013FAC  8D88               	bsf	136,6,b	;volatile
 15581                           
 15582                           ; BSR set to: 57
 15583                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 15584  013FAE  8581               	bsf	129,2,b	;volatile
 15585                           
 15586                           ; BSR set to: 57
 15587                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 15588  013FB0  52E5               	movf	postdec1,f,c
 15589  013FB2  0012               	return		;funcret
 15590  013FB4                     __end_of_INTERRUPT_Initialize:
 15591                           	opt callstack 0
 15592                           
 15593 ;; *************** function _EXT_INT_Initialize *****************
 15594 ;; Defined at:
 15595 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 15596 ;; Parameters:    Size  Location     Type
 15597 ;;		None
 15598 ;; Auto vars:     Size  Location     Type
 15599 ;;		None
 15600 ;; Return value:  Size  Location     Type
 15601 ;;                  1  [STACK] void 
 15602 ;; Registers used:
 15603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15604 ;; Tracked objects:
 15605 ;;		On entry : 3F/3F
 15606 ;;		On exit  : 3F/39
 15607 ;;		Unchanged: 0/0
 15608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15613 ;;Total ram usage:        0 bytes
 15614 ;; Hardware stack levels used:    1
 15615 ;; Hardware stack levels required when called:    4
 15616 ;; This function calls:
 15617 ;;		_INT0_SetInterruptHandler
 15618 ;;		_INT1_SetInterruptHandler
 15619 ;;		_INT2_SetInterruptHandler
 15620 ;; This function is called by:
 15621 ;;		_SYSTEM_Initialize
 15622 ;; This function uses a reentrant model
 15623 ;;
 15624                           
 15625                           	psect	text73
 15626  01422A                     __ptext73:
 15627                           	opt callstack 0
 15628  01422A                     _EXT_INT_Initialize:
 15629                           	opt callstack 25
 15630                           
 15631                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 15632                           
 15633                           ; BSR set to: 57
 15634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15635                           ;incstack = 0
 15636  01422A  0139               	movlb	57	; () banked
 15637  01422C  91A1               	bcf	161,0,b	;volatile
 15638                           
 15639                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 15640  01422E  90D2               	bcf	16338,0,c	;volatile
 15641                           
 15642                           ; BSR set to: 57
 15643                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 15644  014230  0EE6               	movlw	low _INT0_DefaultInterruptHandler
 15645  014232  6EE6               	movwf	postinc1,c
 15646  014234  0E4C               	movlw	high _INT0_DefaultInterruptHandler
 15647  014236  6EE6               	movwf	postinc1,c
 15648  014238  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 15649  01423A  6EE6               	movwf	postinc1,c
 15650  01423C  EC8A  F0A4         	call	_INT0_SetInterruptHandler	;wreg free
 15651                           
 15652                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 15653  014240  0139               	movlb	57	; () banked
 15654  014242  8191               	bsf	145,0,b	;volatile
 15655                           
 15656                           ; BSR set to: 57
 15657                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 15658  014244  91A5               	bcf	165,0,b	;volatile
 15659                           
 15660                           ; BSR set to: 57
 15661                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 15662  014246  92D2               	bcf	16338,1,c	;volatile
 15663                           
 15664                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 15665  014248  0EE8               	movlw	low _INT1_DefaultInterruptHandler
 15666  01424A  6EE6               	movwf	postinc1,c
 15667  01424C  0E4C               	movlw	high _INT1_DefaultInterruptHandler
 15668  01424E  6EE6               	movwf	postinc1,c
 15669  014250  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 15670  014252  6EE6               	movwf	postinc1,c
 15671  014254  EC76  F0A4         	call	_INT1_SetInterruptHandler	;wreg free
 15672                           
 15673                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 15674  014258  0139               	movlb	57	; () banked
 15675  01425A  8195               	bsf	149,0,b	;volatile
 15676                           
 15677                           ; BSR set to: 57
 15678                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 15679  01425C  9BA7               	bcf	167,5,b	;volatile
 15680                           
 15681                           ; BSR set to: 57
 15682                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 15683  01425E  94D2               	bcf	16338,2,c	;volatile
 15684                           
 15685                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 15686  014260  0EEA               	movlw	low _INT2_DefaultInterruptHandler
 15687  014262  6EE6               	movwf	postinc1,c
 15688  014264  0E4C               	movlw	high _INT2_DefaultInterruptHandler
 15689  014266  6EE6               	movwf	postinc1,c
 15690  014268  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 15691  01426A  6EE6               	movwf	postinc1,c
 15692  01426C  EC62  F0A4         	call	_INT2_SetInterruptHandler	;wreg free
 15693                           
 15694                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 15695  014270  0139               	movlb	57	; () banked
 15696  014272  8B97               	bsf	151,5,b	;volatile
 15697                           
 15698                           ; BSR set to: 57
 15699                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15700  014274  0012               	return		;funcret
 15701  014276                     __end_of_EXT_INT_Initialize:
 15702                           	opt callstack 0
 15703                           
 15704 ;; *************** function _INT2_SetInterruptHandler *****************
 15705 ;; Defined at:
 15706 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 15707 ;; Parameters:    Size  Location     Type
 15708 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15709 ;;		 -> INT2_DefaultInterruptHandler(1), 
 15710 ;; Auto vars:     Size  Location     Type
 15711 ;;		None
 15712 ;; Return value:  Size  Location     Type
 15713 ;;                  1  [STACK] void 
 15714 ;; Registers used:
 15715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15716 ;; Tracked objects:
 15717 ;;		On entry : 3F/39
 15718 ;;		On exit  : 0/0
 15719 ;;		Unchanged: 0/0
 15720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15725 ;;Total ram usage:        0 bytes
 15726 ;; Hardware stack levels used:    1
 15727 ;; Hardware stack levels required when called:    3
 15728 ;; This function calls:
 15729 ;;		Nothing
 15730 ;; This function is called by:
 15731 ;;		_EXT_INT_Initialize
 15732 ;; This function uses a reentrant model
 15733 ;;
 15734                           
 15735                           	psect	text74
 15736  0148C4                     __ptext74:
 15737                           	opt callstack 0
 15738  0148C4                     _INT2_SetInterruptHandler:
 15739                           	opt callstack 25
 15740                           
 15741                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 15742                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15743                           
 15744                           ; BSR set to: 57
 15745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15746                           ;incstack = 0
 15747  0148C4  50E1               	movf	fsr1l,w,c
 15748  0148C6  0FFD               	addlw	-3
 15749  0148C8  6ED9               	movwf	fsr2l,c
 15750  0148CA  50E2               	movf	fsr1h,w,c
 15751  0148CC  6EDA               	movwf	fsr2h,c
 15752  0148CE  0EFF               	movlw	255
 15753  0148D0  22DA               	addwfc	fsr2h,f,c
 15754  0148D2  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 15755  0148D8  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 15756  0148DE  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 15757                           
 15758                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15759  0148E4  52E5               	movf	postdec1,f,c
 15760  0148E6  52E5               	movf	postdec1,f,c
 15761  0148E8  52E5               	movf	postdec1,f,c
 15762  0148EA  0012               	return		;funcret
 15763  0148EC                     __end_of_INT2_SetInterruptHandler:
 15764                           	opt callstack 0
 15765                           
 15766 ;; *************** function _INT1_SetInterruptHandler *****************
 15767 ;; Defined at:
 15768 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 15769 ;; Parameters:    Size  Location     Type
 15770 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15771 ;;		 -> INT1_DefaultInterruptHandler(1), 
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;		None
 15774 ;; Return value:  Size  Location     Type
 15775 ;;                  1  [STACK] void 
 15776 ;; Registers used:
 15777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15778 ;; Tracked objects:
 15779 ;;		On entry : 3F/39
 15780 ;;		On exit  : 0/0
 15781 ;;		Unchanged: 0/0
 15782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15787 ;;Total ram usage:        0 bytes
 15788 ;; Hardware stack levels used:    1
 15789 ;; Hardware stack levels required when called:    3
 15790 ;; This function calls:
 15791 ;;		Nothing
 15792 ;; This function is called by:
 15793 ;;		_EXT_INT_Initialize
 15794 ;; This function uses a reentrant model
 15795 ;;
 15796                           
 15797                           	psect	text75
 15798  0148EC                     __ptext75:
 15799                           	opt callstack 0
 15800  0148EC                     _INT1_SetInterruptHandler:
 15801                           	opt callstack 25
 15802                           
 15803                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 15804                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15805                           
 15806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15807                           ;incstack = 0
 15808  0148EC  50E1               	movf	fsr1l,w,c
 15809  0148EE  0FFD               	addlw	-3
 15810  0148F0  6ED9               	movwf	fsr2l,c
 15811  0148F2  50E2               	movf	fsr1h,w,c
 15812  0148F4  6EDA               	movwf	fsr2h,c
 15813  0148F6  0EFF               	movlw	255
 15814  0148F8  22DA               	addwfc	fsr2h,f,c
 15815  0148FA  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 15816  014900  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 15817  014906  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 15818                           
 15819                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15820  01490C  52E5               	movf	postdec1,f,c
 15821  01490E  52E5               	movf	postdec1,f,c
 15822  014910  52E5               	movf	postdec1,f,c
 15823  014912  0012               	return		;funcret
 15824  014914                     __end_of_INT1_SetInterruptHandler:
 15825                           	opt callstack 0
 15826                           
 15827 ;; *************** function _INT0_SetInterruptHandler *****************
 15828 ;; Defined at:
 15829 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 15830 ;; Parameters:    Size  Location     Type
 15831 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15832 ;;		 -> INT0_DefaultInterruptHandler(1), 
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;		None
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  1  [STACK] void 
 15837 ;; Registers used:
 15838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15839 ;; Tracked objects:
 15840 ;;		On entry : 3F/39
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15848 ;;Total ram usage:        0 bytes
 15849 ;; Hardware stack levels used:    1
 15850 ;; Hardware stack levels required when called:    3
 15851 ;; This function calls:
 15852 ;;		Nothing
 15853 ;; This function is called by:
 15854 ;;		_EXT_INT_Initialize
 15855 ;; This function uses a reentrant model
 15856 ;;
 15857                           
 15858                           	psect	text76
 15859  014914                     __ptext76:
 15860                           	opt callstack 0
 15861  014914                     _INT0_SetInterruptHandler:
 15862                           	opt callstack 25
 15863                           
 15864                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 15865                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15866                           
 15867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15868                           ;incstack = 0
 15869  014914  50E1               	movf	fsr1l,w,c
 15870  014916  0FFD               	addlw	-3
 15871  014918  6ED9               	movwf	fsr2l,c
 15872  01491A  50E2               	movf	fsr1h,w,c
 15873  01491C  6EDA               	movwf	fsr2h,c
 15874  01491E  0EFF               	movlw	255
 15875  014920  22DA               	addwfc	fsr2h,f,c
 15876  014922  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 15877  014928  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 15878  01492E  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 15879                           
 15880                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15881  014934  52E5               	movf	postdec1,f,c
 15882  014936  52E5               	movf	postdec1,f,c
 15883  014938  52E5               	movf	postdec1,f,c
 15884  01493A  0012               	return		;funcret
 15885  01493C                     __end_of_INT0_SetInterruptHandler:
 15886                           	opt callstack 0
 15887                           
 15888 ;; *************** function _DSM_Initialize *****************
 15889 ;; Defined at:
 15890 ;;		line 58 in file "mcc_generated_files/dsm.c"
 15891 ;; Parameters:    Size  Location     Type
 15892 ;;		None
 15893 ;; Auto vars:     Size  Location     Type
 15894 ;;		None
 15895 ;; Return value:  Size  Location     Type
 15896 ;;                  1  [STACK] void 
 15897 ;; Registers used:
 15898 ;;		wreg, status,2
 15899 ;; Tracked objects:
 15900 ;;		On entry : 0/3C
 15901 ;;		On exit  : 3F/3C
 15902 ;;		Unchanged: 0/0
 15903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15908 ;;Total ram usage:        0 bytes
 15909 ;; Hardware stack levels used:    1
 15910 ;; Hardware stack levels required when called:    3
 15911 ;; This function calls:
 15912 ;;		Nothing
 15913 ;; This function is called by:
 15914 ;;		_SYSTEM_Initialize
 15915 ;; This function uses a reentrant model
 15916 ;;
 15917                           
 15918                           	psect	text77
 15919  014B8C                     __ptext77:
 15920                           	opt callstack 0
 15921  014B8C                     _DSM_Initialize:
 15922                           	opt callstack 26
 15923                           
 15924                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 15925                           
 15926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15927                           ;incstack = 0
 15928  014B8C  013C               	movlb	60	; () banked
 15929  014B8E  99FA               	bcf	250,4,b	;volatile
 15930                           
 15931                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 15932  014B90  81FB               	bsf	251,0,b	;volatile
 15933                           
 15934                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 15935  014B92  93FB               	bcf	251,1,b	;volatile
 15936                           
 15937                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 15938  014B94  89FB               	bsf	251,4,b	;volatile
 15939                           
 15940                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 15941  014B96  9BFB               	bcf	251,5,b	;volatile
 15942                           
 15943                           ; BSR set to: 60
 15944                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 15945  014B98  0E13               	movlw	19
 15946  014B9A  6FFC               	movwf	252,b	;volatile
 15947                           
 15948                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 15949  014B9C  0E0E               	movlw	14
 15950  014B9E  6FFE               	movwf	254,b	;volatile
 15951                           
 15952                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 15953  014BA0  0E04               	movlw	4
 15954  014BA2  6FFD               	movwf	253,b	;volatile
 15955                           
 15956                           ; BSR set to: 60
 15957                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 15958  014BA4  8FFA               	bsf	250,7,b	;volatile
 15959                           
 15960                           ; BSR set to: 60
 15961                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15962  014BA6  0012               	return		;funcret
 15963  014BA8                     __end_of_DSM_Initialize:
 15964                           	opt callstack 0
 15965                           
 15966 ;; *************** function _DMA1_Initialize *****************
 15967 ;; Defined at:
 15968 ;;		line 86 in file "mcc_generated_files/dma1.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;		None
 15971 ;; Auto vars:     Size  Location     Type
 15972 ;;		None
 15973 ;; Return value:  Size  Location     Type
 15974 ;;                  1  [STACK] void 
 15975 ;; Registers used:
 15976 ;;		wreg, status,2
 15977 ;; Tracked objects:
 15978 ;;		On entry : 3F/3D
 15979 ;;		On exit  : 3F/3B
 15980 ;;		Unchanged: 0/0
 15981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15986 ;;Total ram usage:        0 bytes
 15987 ;; Hardware stack levels used:    1
 15988 ;; Hardware stack levels required when called:    3
 15989 ;; This function calls:
 15990 ;;		Nothing
 15991 ;; This function is called by:
 15992 ;;		_SYSTEM_Initialize
 15993 ;; This function uses a reentrant model
 15994 ;;
 15995                           
 15996                           	psect	text78
 15997  013EE4                     __ptext78:
 15998                           	opt callstack 0
 15999  013EE4                     _DMA1_Initialize:
 16000                           	opt callstack 26
 16001                           
 16002                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 16003                           
 16004                           ; BSR set to: 60
 16005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16006                           ;incstack = 0
 16007  013EE4  0E00               	movlw	0
 16008  013EE6  013B               	movlb	59	; () banked
 16009  013EE8  6FF9               	movwf	249,b	;volatile
 16010  013EEA  0E10               	movlw	16
 16011  013EEC  6FFA               	movwf	250,b	;volatile
 16012  013EEE  0E00               	movlw	0
 16013  013EF0  6FFB               	movwf	251,b	;volatile
 16014                           
 16015                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 16016  013EF2  0E3D               	movlw	61
 16017  013EF4  6FF1               	movwf	241,b	;volatile
 16018  013EF6  0E11               	movlw	17
 16019  013EF8  6FF0               	movwf	240,b	;volatile
 16020                           
 16021                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 16022  013EFA  0E03               	movlw	3
 16023  013EFC  6FFD               	movwf	253,b	;volatile
 16024                           
 16025                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 16026  013EFE  0E00               	movlw	0
 16027  013F00  6FF8               	movwf	248,b	;volatile
 16028  013F02  0E01               	movlw	1
 16029  013F04  6FF7               	movwf	247,b	;volatile
 16030                           
 16031                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 16032  013F06  0E00               	movlw	0
 16033  013F08  6FEF               	movwf	239,b	;volatile
 16034  013F0A  0E01               	movlw	1
 16035  013F0C  6FEE               	movwf	238,b	;volatile
 16036                           
 16037                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 16038  013F0E  0E15               	movlw	21
 16039  013F10  6FFF               	movwf	255,b	;volatile
 16040                           
 16041                           ; BSR set to: 59
 16042                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 16043  013F12  6BFE               	clrf	254,b	;volatile
 16044                           
 16045                           ; BSR set to: 59
 16046                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 16047  013F14  0139               	movlb	57	; () banked
 16048  013F16  93A2               	bcf	162,1,b	;volatile
 16049                           
 16050                           ; BSR set to: 57
 16051                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 16052  013F18  91A2               	bcf	162,0,b	;volatile
 16053                           
 16054                           ; BSR set to: 57
 16055                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 16056  013F1A  97A2               	bcf	162,3,b	;volatile
 16057                           
 16058                           ; BSR set to: 57
 16059                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 16060  013F1C  95A2               	bcf	162,2,b	;volatile
 16061                           
 16062                           ; BSR set to: 57
 16063                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 16064  013F1E  8392               	bsf	146,1,b	;volatile
 16065                           
 16066                           ; BSR set to: 57
 16067                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 16068  013F20  8192               	bsf	146,0,b	;volatile
 16069                           
 16070                           ; BSR set to: 57
 16071                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 16072  013F22  8792               	bsf	146,3,b	;volatile
 16073                           
 16074                           ; BSR set to: 57
 16075                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 16076  013F24  8592               	bsf	146,2,b	;volatile
 16077                           
 16078                           ; BSR set to: 57
 16079                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 16080  013F26  6BF1               	clrf	241,b	;volatile
 16081                           
 16082                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 16083  013F28  0E01               	movlw	1
 16084  013F2A  6FF2               	movwf	242,b	;volatile
 16085                           
 16086                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 16087  013F2C  0E04               	movlw	4
 16088  013F2E  6FF3               	movwf	243,b	;volatile
 16089                           
 16090                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 16091  013F30  0E02               	movlw	2
 16092  013F32  6FF4               	movwf	244,b	;volatile
 16093                           
 16094                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 16095  013F34  0E03               	movlw	3
 16096  013F36  6FF7               	movwf	247,b	;volatile
 16097  013F38  9ED2               	bcf	16338,7,c	;# 
 16098  013F3A  0139               	banksel	14831	;# 
 16099  013F3C  0E55               	movlw	85	;# 
 16100  013F3E  6FEF               	movwf	14831,b	;# 
 16101  013F40  0EAA               	movlw	170	;# 
 16102  013F42  6FEF               	movwf	14831,b	;# 
 16103  013F44  81EF               	bsf	14831,0,b	;# 
 16104  013F46  8ED2               	bsf	16338,7,c	;# 
 16105                           
 16106                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 16107  013F48  013B               	movlb	59	; () banked
 16108  013F4A  6BFC               	clrf	252,b	;volatile
 16109                           
 16110                           ; BSR set to: 59
 16111                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16112  013F4C  0012               	return		;funcret
 16113  013F4E                     __end_of_DMA1_Initialize:
 16114                           	opt callstack 0
 16115                           
 16116 ;; *************** function _CLKREF_Initialize *****************
 16117 ;; Defined at:
 16118 ;;		line 58 in file "mcc_generated_files/clkref.c"
 16119 ;; Parameters:    Size  Location     Type
 16120 ;;		None
 16121 ;; Auto vars:     Size  Location     Type
 16122 ;;		None
 16123 ;; Return value:  Size  Location     Type
 16124 ;;                  1  [STACK] void 
 16125 ;; Registers used:
 16126 ;;		wreg, status,2
 16127 ;; Tracked objects:
 16128 ;;		On entry : 3F/3B
 16129 ;;		On exit  : 3F/3C
 16130 ;;		Unchanged: 0/0
 16131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16136 ;;Total ram usage:        0 bytes
 16137 ;; Hardware stack levels used:    1
 16138 ;; Hardware stack levels required when called:    3
 16139 ;; This function calls:
 16140 ;;		Nothing
 16141 ;; This function is called by:
 16142 ;;		_SYSTEM_Initialize
 16143 ;; This function uses a reentrant model
 16144 ;;
 16145                           
 16146                           	psect	text79
 16147  014C86                     __ptext79:
 16148                           	opt callstack 0
 16149  014C86                     _CLKREF_Initialize:
 16150                           	opt callstack 26
 16151                           
 16152                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 16153                           
 16154                           ; BSR set to: 59
 16155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16156                           ;incstack = 0
 16157  014C86  013C               	movlb	60	; () banked
 16158  014C88  6BE6               	clrf	230,b	;volatile
 16159                           
 16160                           ; BSR set to: 60
 16161                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 16162  014C8A  0E94               	movlw	148
 16163  014C8C  6FE5               	movwf	229,b	;volatile
 16164                           
 16165                           ; BSR set to: 60
 16166                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16167  014C8E  0012               	return		;funcret
 16168  014C90                     __end_of_CLKREF_Initialize:
 16169                           	opt callstack 0
 16170                           
 16171 ;; *************** function _CLC1_Initialize *****************
 16172 ;; Defined at:
 16173 ;;		line 58 in file "mcc_generated_files/clc1.c"
 16174 ;; Parameters:    Size  Location     Type
 16175 ;;		None
 16176 ;; Auto vars:     Size  Location     Type
 16177 ;;		None
 16178 ;; Return value:  Size  Location     Type
 16179 ;;                  1  [STACK] void 
 16180 ;; Registers used:
 16181 ;;		wreg, status,2
 16182 ;; Tracked objects:
 16183 ;;		On entry : 0/39
 16184 ;;		On exit  : 3F/3C
 16185 ;;		Unchanged: 0/0
 16186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16191 ;;Total ram usage:        0 bytes
 16192 ;; Hardware stack levels used:    1
 16193 ;; Hardware stack levels required when called:    3
 16194 ;; This function calls:
 16195 ;;		Nothing
 16196 ;; This function is called by:
 16197 ;;		_SYSTEM_Initialize
 16198 ;; This function uses a reentrant model
 16199 ;;
 16200                           
 16201                           	psect	text80
 16202  014A6E                     __ptext80:
 16203                           	opt callstack 0
 16204  014A6E                     _CLC1_Initialize:
 16205                           	opt callstack 26
 16206                           
 16207                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 16208                           
 16209                           ; BSR set to: 60
 16210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16211                           ;incstack = 0
 16212  014A6E  013C               	movlb	60	; () banked
 16213  014A70  6B75               	clrf	117,b	;volatile
 16214                           
 16215                           ; BSR set to: 60
 16216                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 16217  014A72  0E04               	movlw	4
 16218  014A74  6F76               	movwf	118,b	;volatile
 16219                           
 16220                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 16221  014A76  0E04               	movlw	4
 16222  014A78  6F77               	movwf	119,b	;volatile
 16223                           
 16224                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 16225  014A7A  0E04               	movlw	4
 16226  014A7C  6F78               	movwf	120,b	;volatile
 16227                           
 16228                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 16229  014A7E  0E04               	movlw	4
 16230  014A80  6F79               	movwf	121,b	;volatile
 16231                           
 16232                           ; BSR set to: 60
 16233                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 16234  014A82  6B7A               	clrf	122,b	;volatile
 16235                           
 16236                           ; BSR set to: 60
 16237                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 16238  014A84  6B7B               	clrf	123,b	;volatile
 16239                           
 16240                           ; BSR set to: 60
 16241                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 16242  014A86  6B7C               	clrf	124,b	;volatile
 16243                           
 16244                           ; BSR set to: 60
 16245                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 16246  014A88  6B7D               	clrf	125,b	;volatile
 16247                           
 16248                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 16249  014A8A  0E81               	movlw	129
 16250  014A8C  6F74               	movwf	116,b	;volatile
 16251                           
 16252                           ; BSR set to: 60
 16253                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16254  014A8E  0012               	return		;funcret
 16255  014A90                     __end_of_CLC1_Initialize:
 16256                           	opt callstack 0
 16257                           
 16258 ;; *************** function _ADCC_Initialize *****************
 16259 ;; Defined at:
 16260 ;;		line 64 in file "mcc_generated_files/adcc.c"
 16261 ;; Parameters:    Size  Location     Type
 16262 ;;		None
 16263 ;; Auto vars:     Size  Location     Type
 16264 ;;		None
 16265 ;; Return value:  Size  Location     Type
 16266 ;;                  1  [STACK] void 
 16267 ;; Registers used:
 16268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 16269 ;; Tracked objects:
 16270 ;;		On entry : 3F/39
 16271 ;;		On exit  : 0/0
 16272 ;;		Unchanged: 0/0
 16273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16278 ;;Total ram usage:        0 bytes
 16279 ;; Hardware stack levels used:    1
 16280 ;; Hardware stack levels required when called:    4
 16281 ;; This function calls:
 16282 ;;		_ADCC_SetADIInterruptHandler
 16283 ;; This function is called by:
 16284 ;;		_SYSTEM_Initialize
 16285 ;; This function uses a reentrant model
 16286 ;;
 16287                           
 16288                           	psect	text81
 16289  0142C0                     __ptext81:
 16290                           	opt callstack 0
 16291  0142C0                     _ADCC_Initialize:
 16292                           	opt callstack 25
 16293                           
 16294                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 16295                           
 16296                           ; BSR set to: 60
 16297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16298                           ;incstack = 0
 16299  0142C0  013E               	movlb	62	; () banked
 16300  0142C2  6BDE               	clrf	222,b	;volatile
 16301                           
 16302                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 16303  0142C4  6BDF               	clrf	223,b	;volatile
 16304                           
 16305                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 16306  0142C6  6BE0               	clrf	224,b	;volatile
 16307                           
 16308                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 16309  0142C8  6BE1               	clrf	225,b	;volatile
 16310                           
 16311                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 16312  0142CA  6BE4               	clrf	228,b	;volatile
 16313                           
 16314                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 16315  0142CC  6BE5               	clrf	229,b	;volatile
 16316                           
 16317                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 16318  0142CE  6BEA               	clrf	234,b	;volatile
 16319                           
 16320                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 16321  0142D0  6BEC               	clrf	236,b	;volatile
 16322                           
 16323                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 16324  0142D2  6BF1               	clrf	241,b	;volatile
 16325                           
 16326                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 16327  0142D4  6BF3               	clrf	243,b	;volatile
 16328                           
 16329                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 16330  0142D6  6BF4               	clrf	244,b	;volatile
 16331                           
 16332                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 16333  0142D8  6BF5               	clrf	245,b	;volatile
 16334                           
 16335                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 16336  0142DA  6BF6               	clrf	246,b	;volatile
 16337                           
 16338                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 16339  0142DC  6BF7               	clrf	247,b	;volatile
 16340                           
 16341                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 16342  0142DE  6BF9               	clrf	249,b	;volatile
 16343                           
 16344                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 16345  0142E0  6BFA               	clrf	250,b	;volatile
 16346                           
 16347                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 16348  0142E2  6BFB               	clrf	251,b	;volatile
 16349                           
 16350                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 16351  0142E4  6BFC               	clrf	252,b	;volatile
 16352                           
 16353                           ; BSR set to: 62
 16354                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 16355  0142E6  0E02               	movlw	2
 16356  0142E8  6FFD               	movwf	253,b	;volatile
 16357                           
 16358                           ; BSR set to: 62
 16359                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 16360  0142EA  6BFE               	clrf	254,b	;volatile
 16361                           
 16362                           ; BSR set to: 62
 16363                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 16364  0142EC  6BFF               	clrf	255,b	;volatile
 16365                           
 16366                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 16367  0142EE  0E94               	movlw	148
 16368  0142F0  6FF8               	movwf	248,b	;volatile
 16369                           
 16370                           ; BSR set to: 62
 16371                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 16372  0142F2  0139               	movlb	57	; () banked
 16373  0142F4  95A1               	bcf	161,2,b	;volatile
 16374                           
 16375                           ; BSR set to: 57
 16376                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 16377  0142F6  8591               	bsf	145,2,b	;volatile
 16378                           
 16379                           ; BSR set to: 57
 16380                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 16381  0142F8  0EEC               	movlw	low _ADCC_DefaultInterruptHandler
 16382  0142FA  6EE6               	movwf	postinc1,c
 16383  0142FC  0E4C               	movlw	high _ADCC_DefaultInterruptHandler
 16384  0142FE  6EE6               	movwf	postinc1,c
 16385  014300  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 16386  014302  6EE6               	movwf	postinc1,c
 16387  014304  EC9E  F0A4         	call	_ADCC_SetADIInterruptHandler	;wreg free
 16388                           
 16389                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16390  014308  0012               	return		;funcret
 16391  01430A                     __end_of_ADCC_Initialize:
 16392                           	opt callstack 0
 16393                           
 16394 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 16395 ;; Defined at:
 16396 ;;		line 316 in file "mcc_generated_files/adcc.c"
 16397 ;; Parameters:    Size  Location     Type
 16398 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16399 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;		None
 16402 ;; Return value:  Size  Location     Type
 16403 ;;                  1  [STACK] void 
 16404 ;; Registers used:
 16405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16406 ;; Tracked objects:
 16407 ;;		On entry : 3F/39
 16408 ;;		On exit  : 0/0
 16409 ;;		Unchanged: 0/0
 16410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16415 ;;Total ram usage:        0 bytes
 16416 ;; Hardware stack levels used:    1
 16417 ;; Hardware stack levels required when called:    3
 16418 ;; This function calls:
 16419 ;;		Nothing
 16420 ;; This function is called by:
 16421 ;;		_ADCC_Initialize
 16422 ;; This function uses a reentrant model
 16423 ;;
 16424                           
 16425                           	psect	text82
 16426  01493C                     __ptext82:
 16427                           	opt callstack 0
 16428  01493C                     _ADCC_SetADIInterruptHandler:
 16429                           	opt callstack 25
 16430                           
 16431                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 16432                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16433                           
 16434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16435                           ;incstack = 0
 16436  01493C  50E1               	movf	fsr1l,w,c
 16437  01493E  0FFD               	addlw	-3
 16438  014940  6ED9               	movwf	fsr2l,c
 16439  014942  50E2               	movf	fsr1h,w,c
 16440  014944  6EDA               	movwf	fsr2h,c
 16441  014946  0EFF               	movlw	255
 16442  014948  22DA               	addwfc	fsr2h,f,c
 16443  01494A  006F FF78  F0E2    	movff	postinc2,_ADCC_ADI_InterruptHandler
 16444  014950  006F FF78  F0E3    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 16445  014956  006F FF74  F0E4    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 16446                           
 16447                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 16448  01495C  52E5               	movf	postdec1,f,c
 16449  01495E  52E5               	movf	postdec1,f,c
 16450  014960  52E5               	movf	postdec1,f,c
 16451  014962  0012               	return		;funcret
 16452  014964                     __end_of_ADCC_SetADIInterruptHandler:
 16453                           	opt callstack 0
 16454                           
 16455 ;; *************** function _INT0_ISR *****************
 16456 ;; Defined at:
 16457 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 16458 ;; Parameters:    Size  Location     Type
 16459 ;;		None
 16460 ;; Auto vars:     Size  Location     Type
 16461 ;;		None
 16462 ;; Return value:  Size  Location     Type
 16463 ;;                  1    wreg      void 
 16464 ;; Registers used:
 16465 ;;		wreg, status,2, status,0, pclath, tosl
 16466 ;; Tracked objects:
 16467 ;;		On entry : 0/0
 16468 ;;		On exit  : 0/0
 16469 ;;		Unchanged: 0/0
 16470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16475 ;;Total ram usage:        0 bytes
 16476 ;; Hardware stack levels used:    1
 16477 ;; Hardware stack levels required when called:    2
 16478 ;; This function calls:
 16479 ;;		_INT0_CallBack
 16480 ;; This function is called by:
 16481 ;;		Interrupt level 2
 16482 ;; This function uses a non-reentrant model
 16483 ;;
 16484                           
 16485                           	psect	text83
 16486  014C58                     __ptext83:
 16487                           	opt callstack 0
 16488  014C58                     _INT0_ISR:
 16489                           	opt callstack 17
 16490                           
 16491                           ;incstack = 0
 16492  014C58  EE13  F2A8         	lfsr	1,___inthi_sp
 16493                           
 16494                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 16495  014C5C  0139               	movlb	57	; () banked
 16496  014C5E  91A1               	bcf	161,0,b	;volatile
 16497                           
 16498                           ; BSR set to: 57
 16499                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 16500  014C60  EC48  F0A5         	call	_INT0_CallBack	;wreg free
 16501  014C64  0011               	retfie		f
 16502  014C66                     __end_of_INT0_ISR:
 16503                           	opt callstack 0
 16504                           
 16505 ;; *************** function _INT0_CallBack *****************
 16506 ;; Defined at:
 16507 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;		None
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;		None
 16512 ;; Return value:  Size  Location     Type
 16513 ;;                  1  [STACK] void 
 16514 ;; Registers used:
 16515 ;;		wreg, status,2, status,0, pclath, tosl
 16516 ;; Tracked objects:
 16517 ;;		On entry : 3F/39
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16525 ;;Total ram usage:        0 bytes
 16526 ;; Hardware stack levels used:    1
 16527 ;; Hardware stack levels required when called:    1
 16528 ;; This function calls:
 16529 ;;		Absolute function
 16530 ;;		_INT0_DefaultInterruptHandler
 16531 ;; This function is called by:
 16532 ;;		_INT0_ISR
 16533 ;; This function uses a reentrant model
 16534 ;;
 16535                           
 16536                           	psect	text84
 16537  014A90                     __ptext84:
 16538                           	opt callstack 0
 16539  014A90                     _INT0_CallBack:
 16540                           	opt callstack 17
 16541                           
 16542                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 16543                           
 16544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16545                           ;incstack = 0
 16546  014A90  501A               	movf	_INT0_InterruptHandler,w,c
 16547  014A92  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 16548  014A94  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 16549  014A96  B4D8               	btfsc	status,2,c
 16550  014A98  0012               	return	
 16551                           
 16552                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 16553  014A9A  D801               	call	u126_48
 16554  014A9C  0012               	return	
 16555  014A9E                     u126_48:
 16556  014A9E  0005               	push	
 16557  014AA0  6EFA               	movwf	pclath,c
 16558  014AA2  501A               	movf	_INT0_InterruptHandler,w,c
 16559  014AA4  6EFD               	movwf	tosl,c
 16560  014AA6  501B               	movf	_INT0_InterruptHandler+1,w,c
 16561  014AA8  6EFE               	movwf	tosh,c
 16562  014AAA  501C               	movf	_INT0_InterruptHandler+2,w,c
 16563  014AAC  6EFF               	movwf	tosu,c
 16564  014AAE  50FA               	movf	pclath,w,c
 16565  014AB0  0012               	return		;indir
 16566  014AB2                     __end_of_INT0_CallBack:
 16567                           	opt callstack 0
 16568                           
 16569 ;; *************** function _INT0_DefaultInterruptHandler *****************
 16570 ;; Defined at:
 16571 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 16572 ;; Parameters:    Size  Location     Type
 16573 ;;		None
 16574 ;; Auto vars:     Size  Location     Type
 16575 ;;		None
 16576 ;; Return value:  Size  Location     Type
 16577 ;;                  1  [STACK] void 
 16578 ;; Registers used:
 16579 ;;		None
 16580 ;; Tracked objects:
 16581 ;;		On entry : 0/39
 16582 ;;		On exit  : 0/0
 16583 ;;		Unchanged: 0/0
 16584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16589 ;;Total ram usage:        0 bytes
 16590 ;; Hardware stack levels used:    1
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		_EXT_INT_Initialize
 16595 ;;		_INT0_CallBack
 16596 ;; This function uses a reentrant model
 16597 ;;
 16598                           
 16599                           	psect	text85
 16600  014CE6                     __ptext85:
 16601                           	opt callstack 0
 16602  014CE6                     _INT0_DefaultInterruptHandler:
 16603                           	opt callstack 17
 16604                           
 16605                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16606                           
 16607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16608                           ;incstack = 0
 16609  014CE6  0012               	return		;funcret
 16610  014CE8                     __end_of_INT0_DefaultInterruptHandler:
 16611                           	opt callstack 0
 16612                           
 16613 ;; *************** function _INT1_ISR *****************
 16614 ;; Defined at:
 16615 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 16616 ;; Parameters:    Size  Location     Type
 16617 ;;		None
 16618 ;; Auto vars:     Size  Location     Type
 16619 ;;		None
 16620 ;; Return value:  Size  Location     Type
 16621 ;;                  1    wreg      void 
 16622 ;; Registers used:
 16623 ;;		wreg, status,2, status,0, pclath, tosl
 16624 ;; Tracked objects:
 16625 ;;		On entry : 0/0
 16626 ;;		On exit  : 0/0
 16627 ;;		Unchanged: 0/0
 16628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16633 ;;Total ram usage:        0 bytes
 16634 ;; Hardware stack levels used:    1
 16635 ;; Hardware stack levels required when called:    2
 16636 ;; This function calls:
 16637 ;;		_INT1_CallBack
 16638 ;; This function is called by:
 16639 ;;		Interrupt level 2
 16640 ;; This function uses a non-reentrant model
 16641 ;;
 16642                           
 16643                           	psect	text86
 16644  014C68                     __ptext86:
 16645                           	opt callstack 0
 16646  014C68                     _INT1_ISR:
 16647                           	opt callstack 17
 16648                           
 16649                           ;incstack = 0
 16650  014C68  EE13  F2A8         	lfsr	1,___inthi_sp
 16651                           
 16652                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 16653  014C6C  0139               	movlb	57	; () banked
 16654  014C6E  91A5               	bcf	165,0,b	;volatile
 16655                           
 16656                           ; BSR set to: 57
 16657                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 16658  014C70  EC59  F0A5         	call	_INT1_CallBack	;wreg free
 16659  014C74  0011               	retfie		f
 16660  014C76                     __end_of_INT1_ISR:
 16661                           	opt callstack 0
 16662                           
 16663 ;; *************** function _INT1_CallBack *****************
 16664 ;; Defined at:
 16665 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;		None
 16668 ;; Auto vars:     Size  Location     Type
 16669 ;;		None
 16670 ;; Return value:  Size  Location     Type
 16671 ;;                  1  [STACK] void 
 16672 ;; Registers used:
 16673 ;;		wreg, status,2, status,0, pclath, tosl
 16674 ;; Tracked objects:
 16675 ;;		On entry : 3F/39
 16676 ;;		On exit  : 0/0
 16677 ;;		Unchanged: 0/0
 16678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16683 ;;Total ram usage:        0 bytes
 16684 ;; Hardware stack levels used:    1
 16685 ;; Hardware stack levels required when called:    1
 16686 ;; This function calls:
 16687 ;;		Absolute function
 16688 ;;		_INT1_DefaultInterruptHandler
 16689 ;; This function is called by:
 16690 ;;		_INT1_ISR
 16691 ;; This function uses a reentrant model
 16692 ;;
 16693                           
 16694                           	psect	text87
 16695  014AB2                     __ptext87:
 16696                           	opt callstack 0
 16697  014AB2                     _INT1_CallBack:
 16698                           	opt callstack 17
 16699                           
 16700                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 16701                           
 16702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16703                           ;incstack = 0
 16704  014AB2  5017               	movf	_INT1_InterruptHandler,w,c
 16705  014AB4  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 16706  014AB6  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 16707  014AB8  B4D8               	btfsc	status,2,c
 16708  014ABA  0012               	return	
 16709                           
 16710                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 16711  014ABC  D801               	call	u128_48
 16712  014ABE  0012               	return	
 16713  014AC0                     u128_48:
 16714  014AC0  0005               	push	
 16715  014AC2  6EFA               	movwf	pclath,c
 16716  014AC4  5017               	movf	_INT1_InterruptHandler,w,c
 16717  014AC6  6EFD               	movwf	tosl,c
 16718  014AC8  5018               	movf	_INT1_InterruptHandler+1,w,c
 16719  014ACA  6EFE               	movwf	tosh,c
 16720  014ACC  5019               	movf	_INT1_InterruptHandler+2,w,c
 16721  014ACE  6EFF               	movwf	tosu,c
 16722  014AD0  50FA               	movf	pclath,w,c
 16723  014AD2  0012               	return		;indir
 16724  014AD4                     __end_of_INT1_CallBack:
 16725                           	opt callstack 0
 16726                           
 16727 ;; *************** function _INT1_DefaultInterruptHandler *****************
 16728 ;; Defined at:
 16729 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 16730 ;; Parameters:    Size  Location     Type
 16731 ;;		None
 16732 ;; Auto vars:     Size  Location     Type
 16733 ;;		None
 16734 ;; Return value:  Size  Location     Type
 16735 ;;                  1  [STACK] void 
 16736 ;; Registers used:
 16737 ;;		None
 16738 ;; Tracked objects:
 16739 ;;		On entry : 0/39
 16740 ;;		On exit  : 0/0
 16741 ;;		Unchanged: 0/0
 16742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16747 ;;Total ram usage:        0 bytes
 16748 ;; Hardware stack levels used:    1
 16749 ;; This function calls:
 16750 ;;		Nothing
 16751 ;; This function is called by:
 16752 ;;		_EXT_INT_Initialize
 16753 ;;		_INT1_CallBack
 16754 ;; This function uses a reentrant model
 16755 ;;
 16756                           
 16757                           	psect	text88
 16758  014CE8                     __ptext88:
 16759                           	opt callstack 0
 16760  014CE8                     _INT1_DefaultInterruptHandler:
 16761                           	opt callstack 17
 16762                           
 16763                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16764                           
 16765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16766                           ;incstack = 0
 16767  014CE8  0012               	return		;funcret
 16768  014CEA                     __end_of_INT1_DefaultInterruptHandler:
 16769                           	opt callstack 0
 16770                           
 16771 ;; *************** function _INT2_ISR *****************
 16772 ;; Defined at:
 16773 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 16774 ;; Parameters:    Size  Location     Type
 16775 ;;		None
 16776 ;; Auto vars:     Size  Location     Type
 16777 ;;		None
 16778 ;; Return value:  Size  Location     Type
 16779 ;;                  1    wreg      void 
 16780 ;; Registers used:
 16781 ;;		wreg, status,2, status,0, pclath, tosl
 16782 ;; Tracked objects:
 16783 ;;		On entry : 0/0
 16784 ;;		On exit  : 0/0
 16785 ;;		Unchanged: 0/0
 16786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16791 ;;Total ram usage:        0 bytes
 16792 ;; Hardware stack levels used:    1
 16793 ;; Hardware stack levels required when called:    2
 16794 ;; This function calls:
 16795 ;;		_INT2_CallBack
 16796 ;; This function is called by:
 16797 ;;		Interrupt level 2
 16798 ;; This function uses a non-reentrant model
 16799 ;;
 16800                           
 16801                           	psect	text89
 16802  014C78                     __ptext89:
 16803                           	opt callstack 0
 16804  014C78                     _INT2_ISR:
 16805                           	opt callstack 17
 16806                           
 16807                           ;incstack = 0
 16808  014C78  EE13  F2A8         	lfsr	1,___inthi_sp
 16809                           
 16810                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 16811  014C7C  0139               	movlb	57	; () banked
 16812  014C7E  9BA7               	bcf	167,5,b	;volatile
 16813                           
 16814                           ; BSR set to: 57
 16815                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 16816  014C80  EC6A  F0A5         	call	_INT2_CallBack	;wreg free
 16817  014C84  0011               	retfie		f
 16818  014C86                     __end_of_INT2_ISR:
 16819                           	opt callstack 0
 16820                           
 16821 ;; *************** function _INT2_CallBack *****************
 16822 ;; Defined at:
 16823 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 16824 ;; Parameters:    Size  Location     Type
 16825 ;;		None
 16826 ;; Auto vars:     Size  Location     Type
 16827 ;;		None
 16828 ;; Return value:  Size  Location     Type
 16829 ;;                  1  [STACK] void 
 16830 ;; Registers used:
 16831 ;;		wreg, status,2, status,0, pclath, tosl
 16832 ;; Tracked objects:
 16833 ;;		On entry : 3F/39
 16834 ;;		On exit  : 0/0
 16835 ;;		Unchanged: 0/0
 16836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16841 ;;Total ram usage:        0 bytes
 16842 ;; Hardware stack levels used:    1
 16843 ;; Hardware stack levels required when called:    1
 16844 ;; This function calls:
 16845 ;;		Absolute function
 16846 ;;		_INT2_DefaultInterruptHandler
 16847 ;; This function is called by:
 16848 ;;		_INT2_ISR
 16849 ;; This function uses a reentrant model
 16850 ;;
 16851                           
 16852                           	psect	text90
 16853  014AD4                     __ptext90:
 16854                           	opt callstack 0
 16855  014AD4                     _INT2_CallBack:
 16856                           	opt callstack 17
 16857                           
 16858                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 16859                           
 16860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16861                           ;incstack = 0
 16862  014AD4  5014               	movf	_INT2_InterruptHandler,w,c
 16863  014AD6  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 16864  014AD8  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 16865  014ADA  B4D8               	btfsc	status,2,c
 16866  014ADC  0012               	return	
 16867                           
 16868                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 16869  014ADE  D801               	call	u130_48
 16870  014AE0  0012               	return	
 16871  014AE2                     u130_48:
 16872  014AE2  0005               	push	
 16873  014AE4  6EFA               	movwf	pclath,c
 16874  014AE6  5014               	movf	_INT2_InterruptHandler,w,c
 16875  014AE8  6EFD               	movwf	tosl,c
 16876  014AEA  5015               	movf	_INT2_InterruptHandler+1,w,c
 16877  014AEC  6EFE               	movwf	tosh,c
 16878  014AEE  5016               	movf	_INT2_InterruptHandler+2,w,c
 16879  014AF0  6EFF               	movwf	tosu,c
 16880  014AF2  50FA               	movf	pclath,w,c
 16881  014AF4  0012               	return		;indir
 16882  014AF6                     __end_of_INT2_CallBack:
 16883                           	opt callstack 0
 16884                           
 16885 ;; *************** function _INT2_DefaultInterruptHandler *****************
 16886 ;; Defined at:
 16887 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 16888 ;; Parameters:    Size  Location     Type
 16889 ;;		None
 16890 ;; Auto vars:     Size  Location     Type
 16891 ;;		None
 16892 ;; Return value:  Size  Location     Type
 16893 ;;                  1  [STACK] void 
 16894 ;; Registers used:
 16895 ;;		None
 16896 ;; Tracked objects:
 16897 ;;		On entry : 0/39
 16898 ;;		On exit  : 0/0
 16899 ;;		Unchanged: 0/0
 16900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16905 ;;Total ram usage:        0 bytes
 16906 ;; Hardware stack levels used:    1
 16907 ;; This function calls:
 16908 ;;		Nothing
 16909 ;; This function is called by:
 16910 ;;		_EXT_INT_Initialize
 16911 ;;		_INT2_CallBack
 16912 ;; This function uses a reentrant model
 16913 ;;
 16914                           
 16915                           	psect	text91
 16916  014CEA                     __ptext91:
 16917                           	opt callstack 0
 16918  014CEA                     _INT2_DefaultInterruptHandler:
 16919                           	opt callstack 17
 16920                           
 16921                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16922                           
 16923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16924                           ;incstack = 0
 16925  014CEA  0012               	return		;funcret
 16926  014CEC                     __end_of_INT2_DefaultInterruptHandler:
 16927                           	opt callstack 0
 16928                           
 16929 ;; *************** function _Default_ISR *****************
 16930 ;; Defined at:
 16931 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;		None
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;		None
 16936 ;; Return value:  Size  Location     Type
 16937 ;;                  1    wreg      void 
 16938 ;; Registers used:
 16939 ;;		None
 16940 ;; Tracked objects:
 16941 ;;		On entry : 0/0
 16942 ;;		On exit  : 0/0
 16943 ;;		Unchanged: 0/0
 16944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16949 ;;Total ram usage:        0 bytes
 16950 ;; Hardware stack levels used:    1
 16951 ;; This function calls:
 16952 ;;		Nothing
 16953 ;; This function is called by:
 16954 ;;		Interrupt level 2
 16955 ;; This function uses a non-reentrant model
 16956 ;;
 16957                           
 16958                           	psect	text92
 16959  014CE0                     __ptext92:
 16960                           	opt callstack 0
 16961  014CE0                     _Default_ISR:
 16962                           	opt callstack 19
 16963                           
 16964                           ;incstack = 0
 16965  014CE0  EE13  F2A8         	lfsr	1,___inthi_sp
 16966  014CE4  0011               	retfie		f
 16967  014CE6                     __end_of_Default_ISR:
 16968                           	opt callstack 0
 16969                           
 16970 ;; *************** function _ADCC_ISR *****************
 16971 ;; Defined at:
 16972 ;;		line 307 in file "mcc_generated_files/adcc.c"
 16973 ;; Parameters:    Size  Location     Type
 16974 ;;		None
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;		None
 16977 ;; Return value:  Size  Location     Type
 16978 ;;                  1    wreg      void 
 16979 ;; Registers used:
 16980 ;;		wreg, status,2, status,0, pclath, tosl
 16981 ;; Tracked objects:
 16982 ;;		On entry : 0/0
 16983 ;;		On exit  : 0/0
 16984 ;;		Unchanged: 0/0
 16985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16990 ;;Total ram usage:        0 bytes
 16991 ;; Hardware stack levels used:    1
 16992 ;; Hardware stack levels required when called:    1
 16993 ;; This function calls:
 16994 ;;		Absolute function
 16995 ;;		_ADCC_DefaultInterruptHandler
 16996 ;; This function is called by:
 16997 ;;		Interrupt level 2
 16998 ;; This function uses a non-reentrant model
 16999 ;;
 17000                           
 17001                           	psect	text93
 17002  014634                     __ptext93:
 17003                           	opt callstack 0
 17004  014634                     _ADCC_ISR:
 17005                           	opt callstack 18
 17006                           
 17007                           ;incstack = 0
 17008  014634  EE13  F2A8         	lfsr	1,___inthi_sp
 17009                           
 17010                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 17011  014638  0139               	movlb	57	; () banked
 17012  01463A  95A1               	bcf	161,2,b	;volatile
 17013                           
 17014                           ; BSR set to: 57
 17015                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 17016  01463C  0100               	movlb	0	; () banked
 17017  01463E  51E2               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 17018  014640  11E3               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 17019  014642  11E4               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 17020  014644  B4D8               	btfsc	status,2,c
 17021  014646  0011               	retfie		f
 17022                           
 17023                           ; BSR set to: 0
 17024                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 17025  014648  D801               	call	i2u442_48
 17026  01464A  0011               	retfie		f
 17027  01464C                     i2u442_48:
 17028  01464C  0005               	push	
 17029  01464E  6EFA               	movwf	pclath,c
 17030  014650  51E2               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 17031  014652  6EFD               	movwf	tosl,c
 17032  014654  51E3               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 17033  014656  6EFE               	movwf	tosh,c
 17034  014658  51E4               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 17035  01465A  6EFF               	movwf	tosu,c
 17036  01465C  50FA               	movf	pclath,w,c
 17037  01465E  0012               	return		;indir
 17038  014660                     __end_of_ADCC_ISR:
 17039                           	opt callstack 0
 17040                           
 17041 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 17042 ;; Defined at:
 17043 ;;		line 320 in file "mcc_generated_files/adcc.c"
 17044 ;; Parameters:    Size  Location     Type
 17045 ;;		None
 17046 ;; Auto vars:     Size  Location     Type
 17047 ;;		None
 17048 ;; Return value:  Size  Location     Type
 17049 ;;                  1  [STACK] void 
 17050 ;; Registers used:
 17051 ;;		None
 17052 ;; Tracked objects:
 17053 ;;		On entry : 3F/0
 17054 ;;		On exit  : 0/0
 17055 ;;		Unchanged: 0/0
 17056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17061 ;;Total ram usage:        0 bytes
 17062 ;; Hardware stack levels used:    1
 17063 ;; This function calls:
 17064 ;;		Nothing
 17065 ;; This function is called by:
 17066 ;;		_ADCC_Initialize
 17067 ;;		_ADCC_ISR
 17068 ;; This function uses a reentrant model
 17069 ;;
 17070                           
 17071                           	psect	text94
 17072  014CEC                     __ptext94:
 17073                           	opt callstack 0
 17074  014CEC                     _ADCC_DefaultInterruptHandler:
 17075                           	opt callstack 18
 17076                           
 17077                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17078                           
 17079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17080                           ;incstack = 0
 17081  014CEC  0012               	return		;funcret
 17082  014CEE                     __end_of_ADCC_DefaultInterruptHandler:
 17083                           	opt callstack 0
 17084                           
 17085 ;; *************** function _UART1_tx_vect_isr *****************
 17086 ;; Defined at:
 17087 ;;		line 197 in file "mcc_generated_files/uart1.c"
 17088 ;; Parameters:    Size  Location     Type
 17089 ;;		None
 17090 ;; Auto vars:     Size  Location     Type
 17091 ;;		None
 17092 ;; Return value:  Size  Location     Type
 17093 ;;                  1    wreg      void 
 17094 ;; Registers used:
 17095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17096 ;; Tracked objects:
 17097 ;;		On entry : 0/0
 17098 ;;		On exit  : 0/0
 17099 ;;		Unchanged: 0/0
 17100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17105 ;;Total ram usage:        0 bytes
 17106 ;; Hardware stack levels used:    1
 17107 ;; Hardware stack levels required when called:    1
 17108 ;; This function calls:
 17109 ;;		Absolute function
 17110 ;;		_UART1_Transmit_ISR
 17111 ;; This function is called by:
 17112 ;;		Interrupt level 2
 17113 ;; This function uses a non-reentrant model
 17114 ;;
 17115                           
 17116                           	psect	text95
 17117  014964                     __ptext95:
 17118                           	opt callstack 0
 17119  014964                     _UART1_tx_vect_isr:
 17120                           	opt callstack 18
 17121                           
 17122                           ;incstack = 0
 17123  014964  EE13  F2A8         	lfsr	1,___inthi_sp
 17124                           
 17125                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 17126  014968  5008               	movf	_UART1_TxInterruptHandler,w,c
 17127  01496A  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 17128  01496C  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 17129  01496E  B4D8               	btfsc	status,2,c
 17130  014970  0011               	retfie		f
 17131                           
 17132                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 17133  014972  D801               	call	i2u444_48
 17134  014974  0011               	retfie		f
 17135  014976                     i2u444_48:
 17136  014976  0005               	push	
 17137  014978  6EFA               	movwf	pclath,c
 17138  01497A  5008               	movf	_UART1_TxInterruptHandler,w,c
 17139  01497C  6EFD               	movwf	tosl,c
 17140  01497E  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 17141  014980  6EFE               	movwf	tosh,c
 17142  014982  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 17143  014984  6EFF               	movwf	tosu,c
 17144  014986  50FA               	movf	pclath,w,c
 17145  014988  0012               	return		;indir
 17146  01498A                     __end_of_UART1_tx_vect_isr:
 17147                           	opt callstack 0
 17148                           
 17149 ;; *************** function _UART1_Transmit_ISR *****************
 17150 ;; Defined at:
 17151 ;;		line 211 in file "mcc_generated_files/uart1.c"
 17152 ;; Parameters:    Size  Location     Type
 17153 ;;		None
 17154 ;; Auto vars:     Size  Location     Type
 17155 ;;		None
 17156 ;; Return value:  Size  Location     Type
 17157 ;;                  1  [STACK] void 
 17158 ;; Registers used:
 17159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17160 ;; Tracked objects:
 17161 ;;		On entry : 0/0
 17162 ;;		On exit  : 3B/39
 17163 ;;		Unchanged: 0/0
 17164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17169 ;;Total ram usage:        0 bytes
 17170 ;; Hardware stack levels used:    1
 17171 ;; This function calls:
 17172 ;;		Nothing
 17173 ;; This function is called by:
 17174 ;;		_UART1_Initialize
 17175 ;;		_UART1_tx_vect_isr
 17176 ;; This function uses a reentrant model
 17177 ;;
 17178                           
 17179                           	psect	text96
 17180  014660                     __ptext96:
 17181                           	opt callstack 0
 17182  014660                     _UART1_Transmit_ISR:
 17183                           	opt callstack 18
 17184                           
 17185                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 17186                           
 17187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17188                           ;incstack = 0
 17189  014660  0E40               	movlw	64
 17190  014662  603A               	cpfslt	_uart1TxBufferRemaining,c
 17191  014664  D010               	goto	l597
 17192                           
 17193                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 17194  014666  0EC0               	movlw	low _uart1TxBuffer
 17195  014668  243B               	addwf	_uart1TxTail,w,c	;volatile
 17196  01466A  6ED9               	movwf	fsr2l,c
 17197  01466C  6ADA               	clrf	fsr2h,c
 17198  01466E  0E02               	movlw	high _uart1TxBuffer
 17199  014670  22DA               	addwfc	fsr2h,f,c
 17200  014672  50DF               	movf	indf2,w,c
 17201  014674  013D               	movlb	61	; () banked
 17202  014676  6FEA               	movwf	234,b	;volatile
 17203                           
 17204                           ; BSR set to: 61
 17205  014678  2A3B               	incf	_uart1TxTail,f,c	;volatile
 17206                           
 17207                           ; BSR set to: 61
 17208                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 17209  01467A  0E3F               	movlw	63
 17210  01467C  643B               	cpfsgt	_uart1TxTail,c
 17211  01467E  D001               	goto	l6846
 17212                           
 17213                           ; BSR set to: 61
 17214                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 17215  014680  6A3B               	clrf	_uart1TxTail,c	;volatile
 17216  014682                     l6846:
 17217                           
 17218                           ; BSR set to: 61
 17219                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 17220  014682  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 17221                           
 17222                           ;mcc_generated_files/uart1.c: 220:  } else {
 17223  014684  0012               	return	
 17224  014686                     l597:
 17225                           
 17226                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 17227  014686  0139               	movlb	57	; () banked
 17228  014688  9993               	bcf	147,4,b	;volatile
 17229                           
 17230                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 17231  01468A  0012               	return		;funcret
 17232  01468C                     __end_of_UART1_Transmit_ISR:
 17233                           	opt callstack 0
 17234                           
 17235 ;; *************** function _UART1_rx_vect_isr *****************
 17236 ;; Defined at:
 17237 ;;		line 204 in file "mcc_generated_files/uart1.c"
 17238 ;; Parameters:    Size  Location     Type
 17239 ;;		None
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;		None
 17242 ;; Return value:  Size  Location     Type
 17243 ;;                  1    wreg      void 
 17244 ;; Registers used:
 17245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17246 ;; Tracked objects:
 17247 ;;		On entry : 0/0
 17248 ;;		On exit  : 0/0
 17249 ;;		Unchanged: 0/0
 17250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17255 ;;Total ram usage:        0 bytes
 17256 ;; Hardware stack levels used:    1
 17257 ;; Hardware stack levels required when called:    1
 17258 ;; This function calls:
 17259 ;;		Absolute function
 17260 ;;		_UART1_Receive_ISR
 17261 ;; This function is called by:
 17262 ;;		Interrupt level 2
 17263 ;; This function uses a non-reentrant model
 17264 ;;
 17265                           
 17266                           	psect	text97
 17267  01498C                     __ptext97:
 17268                           	opt callstack 0
 17269  01498C                     _UART1_rx_vect_isr:
 17270                           	opt callstack 18
 17271                           
 17272                           ;incstack = 0
 17273  01498C  EE13  F2A8         	lfsr	1,___inthi_sp
 17274                           
 17275                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 17276  014990  500B               	movf	_UART1_RxInterruptHandler,w,c
 17277  014992  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 17278  014994  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 17279  014996  B4D8               	btfsc	status,2,c
 17280  014998  0011               	retfie		f
 17281                           
 17282                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 17283  01499A  D801               	call	i2u446_48
 17284  01499C  0011               	retfie		f
 17285  01499E                     i2u446_48:
 17286  01499E  0005               	push	
 17287  0149A0  6EFA               	movwf	pclath,c
 17288  0149A2  500B               	movf	_UART1_RxInterruptHandler,w,c
 17289  0149A4  6EFD               	movwf	tosl,c
 17290  0149A6  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 17291  0149A8  6EFE               	movwf	tosh,c
 17292  0149AA  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 17293  0149AC  6EFF               	movwf	tosu,c
 17294  0149AE  50FA               	movf	pclath,w,c
 17295  0149B0  0012               	return		;indir
 17296  0149B2                     __end_of_UART1_rx_vect_isr:
 17297                           	opt callstack 0
 17298                           
 17299 ;; *************** function _UART1_Receive_ISR *****************
 17300 ;; Defined at:
 17301 ;;		line 227 in file "mcc_generated_files/uart1.c"
 17302 ;; Parameters:    Size  Location     Type
 17303 ;;		None
 17304 ;; Auto vars:     Size  Location     Type
 17305 ;;		None
 17306 ;; Return value:  Size  Location     Type
 17307 ;;                  1  [STACK] void 
 17308 ;; Registers used:
 17309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17310 ;; Tracked objects:
 17311 ;;		On entry : 0/0
 17312 ;;		On exit  : 0/0
 17313 ;;		Unchanged: 0/0
 17314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17319 ;;Total ram usage:        0 bytes
 17320 ;; Hardware stack levels used:    1
 17321 ;; This function calls:
 17322 ;;		Nothing
 17323 ;; This function is called by:
 17324 ;;		_UART1_Initialize
 17325 ;;		_UART1_rx_vect_isr
 17326 ;; This function uses a reentrant model
 17327 ;;
 17328                           
 17329                           	psect	text98
 17330  014AF6                     __ptext98:
 17331                           	opt callstack 0
 17332  014AF6                     _UART1_Receive_ISR:
 17333                           	opt callstack 18
 17334                           
 17335                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 17336                           
 17337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17338                           ;incstack = 0
 17339  014AF6  0E80               	movlw	low _uart1RxBuffer
 17340  014AF8  2439               	addwf	_uart1RxHead,w,c	;volatile
 17341  014AFA  6ED9               	movwf	fsr2l,c
 17342  014AFC  6ADA               	clrf	fsr2h,c
 17343  014AFE  0E02               	movlw	high _uart1RxBuffer
 17344  014B00  22DA               	addwfc	fsr2h,f,c
 17345  014B02  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 17346  014B08  2A39               	incf	_uart1RxHead,f,c	;volatile
 17347                           
 17348                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 17349  014B0A  0E3F               	movlw	63
 17350  014B0C  6439               	cpfsgt	_uart1RxHead,c
 17351  014B0E  D001               	goto	l6856
 17352                           
 17353                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 17354  014B10  6A39               	clrf	_uart1RxHead,c	;volatile
 17355  014B12                     l6856:
 17356                           
 17357                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 17358  014B12  2A37               	incf	_uart1RxCount,f,c	;volatile
 17359                           
 17360                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 17361  014B14  0012               	return		;funcret
 17362  014B16                     __end_of_UART1_Receive_ISR:
 17363                           	opt callstack 0
 17364                           
 17365 ;; *************** function _UART2_tx_vect_isr *****************
 17366 ;; Defined at:
 17367 ;;		line 195 in file "mcc_generated_files/uart2.c"
 17368 ;; Parameters:    Size  Location     Type
 17369 ;;		None
 17370 ;; Auto vars:     Size  Location     Type
 17371 ;;		None
 17372 ;; Return value:  Size  Location     Type
 17373 ;;                  1    wreg      void 
 17374 ;; Registers used:
 17375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17376 ;; Tracked objects:
 17377 ;;		On entry : 0/0
 17378 ;;		On exit  : 0/0
 17379 ;;		Unchanged: 0/0
 17380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17385 ;;Total ram usage:        0 bytes
 17386 ;; Hardware stack levels used:    1
 17387 ;; Hardware stack levels required when called:    1
 17388 ;; This function calls:
 17389 ;;		Absolute function
 17390 ;;		_UART2_Transmit_ISR
 17391 ;; This function is called by:
 17392 ;;		Interrupt level 2
 17393 ;; This function uses a non-reentrant model
 17394 ;;
 17395                           
 17396                           	psect	text99
 17397  0149B4                     __ptext99:
 17398                           	opt callstack 0
 17399  0149B4                     _UART2_tx_vect_isr:
 17400                           	opt callstack 18
 17401                           
 17402                           ;incstack = 0
 17403  0149B4  EE13  F2A8         	lfsr	1,___inthi_sp
 17404                           
 17405                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 17406  0149B8  500E               	movf	_UART2_TxInterruptHandler,w,c
 17407  0149BA  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 17408  0149BC  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 17409  0149BE  B4D8               	btfsc	status,2,c
 17410  0149C0  0011               	retfie		f
 17411                           
 17412                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 17413  0149C2  D801               	call	i2u448_48
 17414  0149C4  0011               	retfie		f
 17415  0149C6                     i2u448_48:
 17416  0149C6  0005               	push	
 17417  0149C8  6EFA               	movwf	pclath,c
 17418  0149CA  500E               	movf	_UART2_TxInterruptHandler,w,c
 17419  0149CC  6EFD               	movwf	tosl,c
 17420  0149CE  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 17421  0149D0  6EFE               	movwf	tosh,c
 17422  0149D2  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 17423  0149D4  6EFF               	movwf	tosu,c
 17424  0149D6  50FA               	movf	pclath,w,c
 17425  0149D8  0012               	return		;indir
 17426  0149DA                     __end_of_UART2_tx_vect_isr:
 17427                           	opt callstack 0
 17428                           
 17429 ;; *************** function _UART2_Transmit_ISR *****************
 17430 ;; Defined at:
 17431 ;;		line 213 in file "mcc_generated_files/uart2.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;		None
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;		None
 17436 ;; Return value:  Size  Location     Type
 17437 ;;                  1  [STACK] void 
 17438 ;; Registers used:
 17439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17440 ;; Tracked objects:
 17441 ;;		On entry : 0/0
 17442 ;;		On exit  : 3B/39
 17443 ;;		Unchanged: 0/0
 17444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17449 ;;Total ram usage:        0 bytes
 17450 ;; Hardware stack levels used:    1
 17451 ;; This function calls:
 17452 ;;		Nothing
 17453 ;; This function is called by:
 17454 ;;		_UART2_Initialize
 17455 ;;		_UART2_tx_vect_isr
 17456 ;; This function uses a reentrant model
 17457 ;;
 17458                           
 17459                           	psect	text100
 17460  01468C                     __ptext100:
 17461                           	opt callstack 0
 17462  01468C                     _UART2_Transmit_ISR:
 17463                           	opt callstack 18
 17464                           
 17465                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 17466                           
 17467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17468                           ;incstack = 0
 17469  01468C  0E40               	movlw	64
 17470  01468E  6034               	cpfslt	_uart2TxBufferRemaining,c
 17471  014690  D010               	goto	l717
 17472                           
 17473                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 17474  014692  0E40               	movlw	low _uart2TxBuffer
 17475  014694  2435               	addwf	_uart2TxTail,w,c	;volatile
 17476  014696  6ED9               	movwf	fsr2l,c
 17477  014698  6ADA               	clrf	fsr2h,c
 17478  01469A  0E02               	movlw	high _uart2TxBuffer
 17479  01469C  22DA               	addwfc	fsr2h,f,c
 17480  01469E  50DF               	movf	indf2,w,c
 17481  0146A0  013D               	movlb	61	; () banked
 17482  0146A2  6FD2               	movwf	210,b	;volatile
 17483                           
 17484                           ; BSR set to: 61
 17485  0146A4  2A35               	incf	_uart2TxTail,f,c	;volatile
 17486                           
 17487                           ; BSR set to: 61
 17488                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 17489  0146A6  0E3F               	movlw	63
 17490  0146A8  6435               	cpfsgt	_uart2TxTail,c
 17491  0146AA  D001               	goto	l6868
 17492                           
 17493                           ; BSR set to: 61
 17494                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 17495  0146AC  6A35               	clrf	_uart2TxTail,c	;volatile
 17496  0146AE                     l6868:
 17497                           
 17498                           ; BSR set to: 61
 17499                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 17500  0146AE  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 17501                           
 17502                           ;mcc_generated_files/uart2.c: 224:     }
 17503  0146B0  0012               	return	
 17504  0146B2                     l717:
 17505                           
 17506                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 17507  0146B2  0139               	movlb	57	; () banked
 17508  0146B4  9796               	bcf	150,3,b	;volatile
 17509                           
 17510                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 17511  0146B6  0012               	return		;funcret
 17512  0146B8                     __end_of_UART2_Transmit_ISR:
 17513                           	opt callstack 0
 17514                           
 17515 ;; *************** function _UART2_rx_vect_isr *****************
 17516 ;; Defined at:
 17517 ;;		line 203 in file "mcc_generated_files/uart2.c"
 17518 ;; Parameters:    Size  Location     Type
 17519 ;;		None
 17520 ;; Auto vars:     Size  Location     Type
 17521 ;;		None
 17522 ;; Return value:  Size  Location     Type
 17523 ;;                  1    wreg      void 
 17524 ;; Registers used:
 17525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17526 ;; Tracked objects:
 17527 ;;		On entry : 0/0
 17528 ;;		On exit  : 0/0
 17529 ;;		Unchanged: 0/0
 17530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17535 ;;Total ram usage:        0 bytes
 17536 ;; Hardware stack levels used:    1
 17537 ;; Hardware stack levels required when called:    1
 17538 ;; This function calls:
 17539 ;;		Absolute function
 17540 ;;		_UART2_Receive_ISR
 17541 ;; This function is called by:
 17542 ;;		Interrupt level 2
 17543 ;; This function uses a non-reentrant model
 17544 ;;
 17545                           
 17546                           	psect	text101
 17547  0149DC                     __ptext101:
 17548                           	opt callstack 0
 17549  0149DC                     _UART2_rx_vect_isr:
 17550                           	opt callstack 18
 17551                           
 17552                           ;incstack = 0
 17553  0149DC  EE13  F2A8         	lfsr	1,___inthi_sp
 17554                           
 17555                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 17556  0149E0  5011               	movf	_UART2_RxInterruptHandler,w,c
 17557  0149E2  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 17558  0149E4  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 17559  0149E6  B4D8               	btfsc	status,2,c
 17560  0149E8  0011               	retfie		f
 17561                           
 17562                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 17563  0149EA  D801               	call	i2u450_48
 17564  0149EC  0011               	retfie		f
 17565  0149EE                     i2u450_48:
 17566  0149EE  0005               	push	
 17567  0149F0  6EFA               	movwf	pclath,c
 17568  0149F2  5011               	movf	_UART2_RxInterruptHandler,w,c
 17569  0149F4  6EFD               	movwf	tosl,c
 17570  0149F6  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 17571  0149F8  6EFE               	movwf	tosh,c
 17572  0149FA  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 17573  0149FC  6EFF               	movwf	tosu,c
 17574  0149FE  50FA               	movf	pclath,w,c
 17575  014A00  0012               	return		;indir
 17576  014A02                     __end_of_UART2_rx_vect_isr:
 17577                           	opt callstack 0
 17578                           
 17579 ;; *************** function _UART2_Receive_ISR *****************
 17580 ;; Defined at:
 17581 ;;		line 233 in file "mcc_generated_files/uart2.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;		None
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;		None
 17586 ;; Return value:  Size  Location     Type
 17587 ;;                  1  [STACK] void 
 17588 ;; Registers used:
 17589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17590 ;; Tracked objects:
 17591 ;;		On entry : 0/0
 17592 ;;		On exit  : 0/0
 17593 ;;		Unchanged: 0/0
 17594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17599 ;;Total ram usage:        0 bytes
 17600 ;; Hardware stack levels used:    1
 17601 ;; This function calls:
 17602 ;;		Nothing
 17603 ;; This function is called by:
 17604 ;;		_UART2_Initialize
 17605 ;;		_UART2_rx_vect_isr
 17606 ;; This function uses a reentrant model
 17607 ;;
 17608                           
 17609                           	psect	text102
 17610  014B16                     __ptext102:
 17611                           	opt callstack 0
 17612  014B16                     _UART2_Receive_ISR:
 17613                           	opt callstack 18
 17614                           
 17615                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 17616                           
 17617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17618                           ;incstack = 0
 17619  014B16  0E00               	movlw	low _uart2RxBuffer
 17620  014B18  2433               	addwf	_uart2RxHead,w,c	;volatile
 17621  014B1A  6ED9               	movwf	fsr2l,c
 17622  014B1C  6ADA               	clrf	fsr2h,c
 17623  014B1E  0E02               	movlw	high _uart2RxBuffer
 17624  014B20  22DA               	addwfc	fsr2h,f,c
 17625  014B22  006F F743 FFDF     	movff	15824,indf2	;volatile
 17626  014B28  2A33               	incf	_uart2RxHead,f,c	;volatile
 17627                           
 17628                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 17629  014B2A  0E3F               	movlw	63
 17630  014B2C  6433               	cpfsgt	_uart2RxHead,c
 17631  014B2E  D001               	goto	l6878
 17632                           
 17633                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 17634  014B30  6A33               	clrf	_uart2RxHead,c	;volatile
 17635  014B32                     l6878:
 17636                           
 17637                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 17638  014B32  2A31               	incf	_uart2RxCount,f,c	;volatile
 17639                           
 17640                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 17641  014B34  0012               	return		;funcret
 17642  014B36                     __end_of_UART2_Receive_ISR:
 17643                           	opt callstack 0
 17644                           
 17645 ;; *************** function _TMR6_ISR *****************
 17646 ;; Defined at:
 17647 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 17648 ;; Parameters:    Size  Location     Type
 17649 ;;		None
 17650 ;; Auto vars:     Size  Location     Type
 17651 ;;		None
 17652 ;; Return value:  Size  Location     Type
 17653 ;;                  1    wreg      void 
 17654 ;; Registers used:
 17655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 17656 ;; Tracked objects:
 17657 ;;		On entry : 0/0
 17658 ;;		On exit  : 0/0
 17659 ;;		Unchanged: 0/0
 17660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17665 ;;Total ram usage:        1 bytes
 17666 ;; Hardware stack levels used:    1
 17667 ;; Hardware stack levels required when called:    2
 17668 ;; This function calls:
 17669 ;;		_TMR6_CallBack
 17670 ;; This function is called by:
 17671 ;;		Interrupt level 2
 17672 ;; This function uses a non-reentrant model
 17673 ;;
 17674                           
 17675                           	psect	text103
 17676  014BC4                     __ptext103:
 17677                           	opt callstack 0
 17678  014BC4                     _TMR6_ISR:
 17679                           	opt callstack 17
 17680                           
 17681                           ;incstack = 0
 17682  014BC4  0060  F0F4  F05E   	movff	btemp,??_TMR6_ISR
 17683  014BCA  EE13  F2A8         	lfsr	1,___inthi_sp
 17684                           
 17685                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 17686  014BCE  0139               	movlb	57	; () banked
 17687  014BD0  91A9               	bcf	169,0,b	;volatile
 17688                           
 17689                           ; BSR set to: 57
 17690                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 17691  014BD2  EC13  F0A5         	call	_TMR6_CallBack	;wreg free
 17692  014BD6  0060  F178  F03D   	movff	??_TMR6_ISR,btemp
 17693  014BDC  0011               	retfie		f
 17694  014BDE                     __end_of_TMR6_ISR:
 17695                           	opt callstack 0
 17696                           
 17697 ;; *************** function _TMR6_CallBack *****************
 17698 ;; Defined at:
 17699 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 17700 ;; Parameters:    Size  Location     Type
 17701 ;;		None
 17702 ;; Auto vars:     Size  Location     Type
 17703 ;;		None
 17704 ;; Return value:  Size  Location     Type
 17705 ;;                  1  [STACK] void 
 17706 ;; Registers used:
 17707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 17708 ;; Tracked objects:
 17709 ;;		On entry : 3F/39
 17710 ;;		On exit  : 0/0
 17711 ;;		Unchanged: 0/0
 17712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17717 ;;Total ram usage:        0 bytes
 17718 ;; Hardware stack levels used:    1
 17719 ;; Hardware stack levels required when called:    1
 17720 ;; This function calls:
 17721 ;;		Absolute function
 17722 ;;		_TMR6_DefaultInterruptHandler
 17723 ;; This function is called by:
 17724 ;;		_TMR6_ISR
 17725 ;; This function uses a reentrant model
 17726 ;;
 17727                           
 17728                           	psect	text104
 17729  014A26                     __ptext104:
 17730                           	opt callstack 0
 17731  014A26                     _TMR6_CallBack:
 17732                           	opt callstack 17
 17733                           
 17734                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 17735                           
 17736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17737                           ;incstack = 0
 17738  014A26  0100               	movlb	0	; () banked
 17739  014A28  51DF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17740  014A2A  11E0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17741  014A2C  11E1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17742  014A2E  B4D8               	btfsc	status,2,c
 17743  014A30  0012               	return	
 17744                           
 17745                           ; BSR set to: 0
 17746                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 17747  014A32  D801               	call	u373_48
 17748  014A34  0012               	return	
 17749  014A36                     u373_48:
 17750  014A36  0005               	push	
 17751  014A38  6EFA               	movwf	pclath,c
 17752  014A3A  51DF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17753  014A3C  6EFD               	movwf	tosl,c
 17754  014A3E  51E0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17755  014A40  6EFE               	movwf	tosh,c
 17756  014A42  51E1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17757  014A44  6EFF               	movwf	tosu,c
 17758  014A46  50FA               	movf	pclath,w,c
 17759  014A48  0012               	return		;indir
 17760  014A4A                     __end_of_TMR6_CallBack:
 17761                           	opt callstack 0
 17762                           
 17763 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 17764 ;; Defined at:
 17765 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 17766 ;; Parameters:    Size  Location     Type
 17767 ;;		None
 17768 ;; Auto vars:     Size  Location     Type
 17769 ;;  i               1  [STACK] unsigned char 
 17770 ;; Return value:  Size  Location     Type
 17771 ;;                  1  [STACK] void 
 17772 ;; Registers used:
 17773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 17774 ;; Tracked objects:
 17775 ;;		On entry : 3F/0
 17776 ;;		On exit  : 0/0
 17777 ;;		Unchanged: 0/0
 17778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17783 ;;Total ram usage:        0 bytes
 17784 ;; Hardware stack levels used:    1
 17785 ;; This function calls:
 17786 ;;		Nothing
 17787 ;; This function is called by:
 17788 ;;		_TMR6_Initialize
 17789 ;;		_TMR6_CallBack
 17790 ;; This function uses a reentrant model
 17791 ;;
 17792                           
 17793                           	psect	text105
 17794  014396                     __ptext105:
 17795                           	opt callstack 0
 17796  014396                     _TMR6_DefaultInterruptHandler:
 17797                           	opt callstack 0
 17798                           
 17799                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17800  014396  52E6               	movf	postinc1,f,c
 17801                           
 17802                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 17803                           ;stkvar	_i @ sp[(-1)+0]
 17804                           
 17805                           ;incstack = 0
 17806  014398  0EFF               	movlw	-1
 17807  01439A  6AE3               	clrf	plusw1,c
 17808  01439C                     l6398:
 17809                           
 17810                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 17811                           ;stkvar	_i @ sp[(-1)+0]
 17812  01439C  0EFF               	movlw	-1
 17813  01439E  50E3               	movf	plusw1,w,c
 17814  0143A0  0D02               	mullw	2
 17815  0143A2  50F3               	movf	prodl,w,c
 17816  0143A4  0FAA               	addlw	low _tickCount
 17817  0143A6  6ED9               	movwf	fsr2l,c
 17818  0143A8  6ADA               	clrf	fsr2h,c
 17819  0143AA  50DE               	movf	postinc2,w,c
 17820  0143AC  10DE               	iorwf	postinc2,w,c
 17821  0143AE  B4D8               	btfsc	status,2,c
 17822  0143B0  D00A               	goto	l6402
 17823                           
 17824                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 17825                           ;stkvar	_i @ sp[(-1)+0]
 17826  0143B2  0EFF               	movlw	-1
 17827  0143B4  50E3               	movf	plusw1,w,c
 17828  0143B6  0D02               	mullw	2
 17829  0143B8  50F3               	movf	prodl,w,c
 17830  0143BA  0FAA               	addlw	low _tickCount
 17831  0143BC  6ED9               	movwf	fsr2l,c
 17832  0143BE  6ADA               	clrf	fsr2h,c
 17833  0143C0  06DE               	decf	postinc2,f,c
 17834  0143C2  0E00               	movlw	0
 17835  0143C4  5ADD               	subwfb	postdec2,f,c
 17836  0143C6                     l6402:
 17837                           
 17838                           ;mcc_generated_files/tmr6.c: 207:  }
 17839                           ;stkvar	_i @ sp[(-1)+0]
 17840  0143C6  0EFF               	movlw	-1
 17841  0143C8  2AE3               	incf	plusw1,f,c
 17842                           
 17843                           ;stkvar	_i @ sp[(-1)+0]
 17844  0143CA  0EFF               	movlw	-1
 17845  0143CC  006F FF8C  F03D    	movff	plusw1,btemp
 17846  0143D2  0E06               	movlw	6
 17847  0143D4  643D               	cpfsgt	btemp,c
 17848  0143D6  D7E2               	goto	l6398
 17849                           
 17850                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17851  0143D8  52E5               	movf	postdec1,f,c
 17852  0143DA  0012               	return		;funcret
 17853  0143DC                     __end_of_TMR6_DefaultInterruptHandler:
 17854                           	opt callstack 0
 17855                           
 17856 ;; *************** function _DMA1_DMASCNT_ISR *****************
 17857 ;; Defined at:
 17858 ;;		line 126 in file "mcc_generated_files/dma1.c"
 17859 ;; Parameters:    Size  Location     Type
 17860 ;;		None
 17861 ;; Auto vars:     Size  Location     Type
 17862 ;;		None
 17863 ;; Return value:  Size  Location     Type
 17864 ;;                  1    wreg      void 
 17865 ;; Registers used:
 17866 ;;		None
 17867 ;; Tracked objects:
 17868 ;;		On entry : 0/0
 17869 ;;		On exit  : 3F/0
 17870 ;;		Unchanged: 0/0
 17871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17876 ;;Total ram usage:        0 bytes
 17877 ;; Hardware stack levels used:    1
 17878 ;; This function calls:
 17879 ;;		Nothing
 17880 ;; This function is called by:
 17881 ;;		Interrupt level 2
 17882 ;; This function uses a non-reentrant model
 17883 ;;
 17884                           
 17885                           	psect	text106
 17886  014C38                     __ptext106:
 17887                           	opt callstack 0
 17888  014C38                     _DMA1_DMASCNT_ISR:
 17889                           	opt callstack 19
 17890                           
 17891                           ;incstack = 0
 17892  014C38  EE13  F2A8         	lfsr	1,___inthi_sp
 17893                           
 17894                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 17895  014C3C  0139               	movlb	57	; () banked
 17896  014C3E  91A2               	bcf	162,0,b	;volatile
 17897                           
 17898                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 17899  014C40  0100               	movlb	0	; () banked
 17900  014C42  97C5               	bcf	_spi_link& (0+255),3,b	;volatile
 17901                           
 17902                           ; BSR set to: 0
 17903                           
 17904                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE1 = 0; } while(0);
 17905  014C44  92BE               	bcf	16318,1,c	;volatile
 17906                           
 17907                           ; BSR set to: 0
 17908  014C46  0011               	retfie		f
 17909  014C48                     __end_of_DMA1_DMASCNT_ISR:
 17910                           	opt callstack 0
 17911                           
 17912 ;; *************** function _DMA1_DMADCNT_ISR *****************
 17913 ;; Defined at:
 17914 ;;		line 134 in file "mcc_generated_files/dma1.c"
 17915 ;; Parameters:    Size  Location     Type
 17916 ;;		None
 17917 ;; Auto vars:     Size  Location     Type
 17918 ;;		None
 17919 ;; Return value:  Size  Location     Type
 17920 ;;                  1    wreg      void 
 17921 ;; Registers used:
 17922 ;;		None
 17923 ;; Tracked objects:
 17924 ;;		On entry : 0/0
 17925 ;;		On exit  : 3F/39
 17926 ;;		Unchanged: 0/0
 17927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17932 ;;Total ram usage:        0 bytes
 17933 ;; Hardware stack levels used:    1
 17934 ;; This function calls:
 17935 ;;		Nothing
 17936 ;; This function is called by:
 17937 ;;		Interrupt level 2
 17938 ;; This function uses a non-reentrant model
 17939 ;;
 17940                           
 17941                           	psect	text107
 17942  014C90                     __ptext107:
 17943                           	opt callstack 0
 17944  014C90                     _DMA1_DMADCNT_ISR:
 17945                           	opt callstack 19
 17946                           
 17947                           ; BSR set to: 0
 17948                           ;incstack = 0
 17949  014C90  EE13  F2A8         	lfsr	1,___inthi_sp
 17950                           
 17951                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 17952  014C94  0139               	movlb	57	; () banked
 17953  014C96  93A2               	bcf	162,1,b	;volatile
 17954                           
 17955                           ; BSR set to: 57
 17956  014C98  0011               	retfie		f
 17957  014C9A                     __end_of_DMA1_DMADCNT_ISR:
 17958                           	opt callstack 0
 17959                           
 17960 ;; *************** function _DMA1_DMAA_ISR *****************
 17961 ;; Defined at:
 17962 ;;		line 144 in file "mcc_generated_files/dma1.c"
 17963 ;; Parameters:    Size  Location     Type
 17964 ;;		None
 17965 ;; Auto vars:     Size  Location     Type
 17966 ;;		None
 17967 ;; Return value:  Size  Location     Type
 17968 ;;                  1    wreg      void 
 17969 ;; Registers used:
 17970 ;;		None
 17971 ;; Tracked objects:
 17972 ;;		On entry : 0/0
 17973 ;;		On exit  : 3F/39
 17974 ;;		Unchanged: 0/0
 17975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17980 ;;Total ram usage:        0 bytes
 17981 ;; Hardware stack levels used:    1
 17982 ;; This function calls:
 17983 ;;		Nothing
 17984 ;; This function is called by:
 17985 ;;		Interrupt level 2
 17986 ;; This function uses a non-reentrant model
 17987 ;;
 17988                           
 17989                           	psect	text108
 17990  014C9C                     __ptext108:
 17991                           	opt callstack 0
 17992  014C9C                     _DMA1_DMAA_ISR:
 17993                           	opt callstack 19
 17994                           
 17995                           ; BSR set to: 57
 17996                           ;incstack = 0
 17997  014C9C  EE13  F2A8         	lfsr	1,___inthi_sp
 17998                           
 17999                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 18000  014CA0  0139               	movlb	57	; () banked
 18001  014CA2  97A2               	bcf	162,3,b	;volatile
 18002                           
 18003                           ; BSR set to: 57
 18004  014CA4  0011               	retfie		f
 18005  014CA6                     __end_of_DMA1_DMAA_ISR:
 18006                           	opt callstack 0
 18007                           
 18008 ;; *************** function _DMA1_DMAOR_ISR *****************
 18009 ;; Defined at:
 18010 ;;		line 155 in file "mcc_generated_files/dma1.c"
 18011 ;; Parameters:    Size  Location     Type
 18012 ;;		None
 18013 ;; Auto vars:     Size  Location     Type
 18014 ;;		None
 18015 ;; Return value:  Size  Location     Type
 18016 ;;                  1    wreg      void 
 18017 ;; Registers used:
 18018 ;;		None
 18019 ;; Tracked objects:
 18020 ;;		On entry : 0/0
 18021 ;;		On exit  : 3F/39
 18022 ;;		Unchanged: 0/0
 18023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18028 ;;Total ram usage:        0 bytes
 18029 ;; Hardware stack levels used:    1
 18030 ;; This function calls:
 18031 ;;		Nothing
 18032 ;; This function is called by:
 18033 ;;		Interrupt level 2
 18034 ;; This function uses a non-reentrant model
 18035 ;;
 18036                           
 18037                           	psect	text109
 18038  014CA8                     __ptext109:
 18039                           	opt callstack 0
 18040  014CA8                     _DMA1_DMAOR_ISR:
 18041                           	opt callstack 19
 18042                           
 18043                           ; BSR set to: 57
 18044                           ;incstack = 0
 18045  014CA8  EE13  F2A8         	lfsr	1,___inthi_sp
 18046                           
 18047                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 18048  014CAC  0139               	movlb	57	; () banked
 18049  014CAE  95A2               	bcf	162,2,b	;volatile
 18050                           
 18051                           ; BSR set to: 57
 18052  014CB0  0011               	retfie		f
 18053  014CB2                     __end_of_DMA1_DMAOR_ISR:
 18054                           	opt callstack 0
 18055                           
 18056 ;; *************** function _TMR5_ISR *****************
 18057 ;; Defined at:
 18058 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 18059 ;; Parameters:    Size  Location     Type
 18060 ;;		None
 18061 ;; Auto vars:     Size  Location     Type
 18062 ;;		None
 18063 ;; Return value:  Size  Location     Type
 18064 ;;                  1    wreg      void 
 18065 ;; Registers used:
 18066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 18067 ;; Tracked objects:
 18068 ;;		On entry : 0/0
 18069 ;;		On exit  : 0/0
 18070 ;;		Unchanged: 0/0
 18071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18074 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18075 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18076 ;;Total ram usage:        3 bytes
 18077 ;; Hardware stack levels used:    1
 18078 ;; Hardware stack levels required when called:    2
 18079 ;; This function calls:
 18080 ;;		_TMR5_CallBack
 18081 ;;		_TMR5_WriteTimer
 18082 ;; This function is called by:
 18083 ;;		Interrupt level 2
 18084 ;; This function uses a non-reentrant model
 18085 ;;
 18086                           
 18087                           	psect	text110
 18088  014188                     __ptext110:
 18089                           	opt callstack 0
 18090  014188                     _TMR5_ISR:
 18091                           	opt callstack 17
 18092                           
 18093                           ; BSR set to: 57
 18094                           ;incstack = 0
 18095  014188  0060  F120  F0F1   	movff	btemp+11,??_TMR5_ISR+2
 18096  01418E  EE13  F2A8         	lfsr	1,___inthi_sp
 18097                           
 18098                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 18099  014192  0139               	movlb	57	; () banked
 18100  014194  9DA8               	bcf	168,6,b	;volatile
 18101                           
 18102                           ; BSR set to: 57
 18103                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 18104  014196  0060  F0A7  FFE6   	movff	_timer5ReloadVal,postinc1
 18105  01419C  0060  F0AB  FFE6   	movff	_timer5ReloadVal+1,postinc1
 18106  0141A2  EC0F  F0A2         	call	_TMR5_WriteTimer	;wreg free
 18107                           
 18108                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 18109  0141A6  EE21  F0FA         	lfsr	2,_V+260	;volatile
 18110  0141AA  50DF               	movf	indf2,w,c
 18111  0141AC  0100               	movlb	0	; () banked
 18112  0141AE  6FEF               	movwf	??_TMR5_ISR& (0+255),b
 18113  0141B0  6BF0               	clrf	(??_TMR5_ISR+1)& (0+255),b
 18114  0141B2  0E05               	movlw	5
 18115  0141B4  27EF               	addwf	??_TMR5_ISR& (0+255),f,b
 18116  0141B6  0E00               	movlw	0
 18117  0141B8  23F0               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 18118  0141BA  4A27               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 18119  0141BC  2A28               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 18120  0141BE  51EF               	movf	??_TMR5_ISR& (0+255),w,b
 18121  0141C0  5C27               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 18122  0141C2  51F0               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 18123  0141C4  5828               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 18124  0141C6  A0D8               	btfss	status,0,c
 18125  0141C8  D004               	goto	i2l1145
 18126                           
 18127                           ; BSR set to: 0
 18128                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 18129  0141CA  EC25  F0A5         	call	_TMR5_CallBack	;wreg free
 18130                           
 18131                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 18132  0141CE  6A27               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 18133  0141D0  6A28               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 18134  0141D2                     i2l1145:
 18135  0141D2  0060  F3C4  F048   	movff	??_TMR5_ISR+2,btemp+11
 18136  0141D8  0011               	retfie		f
 18137  0141DA                     __end_of_TMR5_ISR:
 18138                           	opt callstack 0
 18139                           
 18140 ;; *************** function _TMR5_WriteTimer *****************
 18141 ;; Defined at:
 18142 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 18143 ;; Parameters:    Size  Location     Type
 18144 ;;  timerVal        2  [STACK] unsigned short 
 18145 ;; Auto vars:     Size  Location     Type
 18146 ;;		None
 18147 ;; Return value:  Size  Location     Type
 18148 ;;                  1  [STACK] void 
 18149 ;; Registers used:
 18150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18151 ;; Tracked objects:
 18152 ;;		On entry : 3F/39
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18160 ;;Total ram usage:        0 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; This function calls:
 18163 ;;		Nothing
 18164 ;; This function is called by:
 18165 ;;		_TMR5_ISR
 18166 ;; This function uses a reentrant model
 18167 ;;
 18168                           
 18169                           	psect	text111
 18170  01441E                     __ptext111:
 18171                           	opt callstack 0
 18172  01441E                     _TMR5_WriteTimer:
 18173                           	opt callstack 18
 18174                           
 18175                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 18176                           
 18177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18178                           ;incstack = 0
 18179  01441E  A49A               	btfss	16282,2,c	;volatile
 18180  014420  D00F               	goto	l6894
 18181                           
 18182                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 18183  014422  909A               	bcf	16282,0,c	;volatile
 18184                           
 18185                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 18186                           ;stkvar	_timerVal @ sp[(0)+-2]
 18187  014424  0EFF               	movlw	255
 18188  014426  24E1               	addwf	fsr1l,w,c
 18189  014428  6ED9               	movwf	fsr2l,c
 18190  01442A  0EFF               	movlw	255
 18191  01442C  20E2               	addwfc	fsr1h,w,c
 18192  01442E  6EDA               	movwf	fsr2h,c
 18193  014430  50DF               	movf	indf2,w,c
 18194  014432  6E99               	movwf	16281,c	;volatile
 18195                           
 18196                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 18197                           ;stkvar	_timerVal @ sp[(0)+-2]
 18198  014434  0EFE               	movlw	-2
 18199  014436  006F FF8F FF98     	movff	plusw1,16280	;volatile
 18200                           
 18201                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 18202  01443C  809A               	bsf	16282,0,c	;volatile
 18203                           
 18204                           ;mcc_generated_files/tmr5.c: 142:  } else {
 18205  01443E  D00C               	goto	l1128
 18206  014440                     l6894:
 18207                           
 18208                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 18209                           ;stkvar	_timerVal @ sp[(0)+-2]
 18210  014440  0EFF               	movlw	255
 18211  014442  24E1               	addwf	fsr1l,w,c
 18212  014444  6ED9               	movwf	fsr2l,c
 18213  014446  0EFF               	movlw	255
 18214  014448  20E2               	addwfc	fsr1h,w,c
 18215  01444A  6EDA               	movwf	fsr2h,c
 18216  01444C  50DF               	movf	indf2,w,c
 18217  01444E  6E99               	movwf	16281,c	;volatile
 18218                           
 18219                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 18220                           ;stkvar	_timerVal @ sp[(0)+-2]
 18221  014450  0EFE               	movlw	-2
 18222  014452  006F FF8F FF98     	movff	plusw1,16280	;volatile
 18223  014458                     l1128:
 18224                           
 18225                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 18226  014458  52E5               	movf	postdec1,f,c
 18227  01445A  52E5               	movf	postdec1,f,c
 18228  01445C  0012               	return		;funcret
 18229  01445E                     __end_of_TMR5_WriteTimer:
 18230                           	opt callstack 0
 18231                           
 18232 ;; *************** function _TMR5_CallBack *****************
 18233 ;; Defined at:
 18234 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 18235 ;; Parameters:    Size  Location     Type
 18236 ;;		None
 18237 ;; Auto vars:     Size  Location     Type
 18238 ;;		None
 18239 ;; Return value:  Size  Location     Type
 18240 ;;                  1  [STACK] void 
 18241 ;; Registers used:
 18242 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 18243 ;; Tracked objects:
 18244 ;;		On entry : 3F/0
 18245 ;;		On exit  : 0/0
 18246 ;;		Unchanged: 0/0
 18247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18252 ;;Total ram usage:        0 bytes
 18253 ;; Hardware stack levels used:    1
 18254 ;; Hardware stack levels required when called:    1
 18255 ;; This function calls:
 18256 ;;		Absolute function
 18257 ;;		_TMR5_DefaultInterruptHandler
 18258 ;; This function is called by:
 18259 ;;		_TMR5_ISR
 18260 ;; This function uses a reentrant model
 18261 ;;
 18262                           
 18263                           	psect	text112
 18264  014A4A                     __ptext112:
 18265                           	opt callstack 0
 18266  014A4A                     _TMR5_CallBack:
 18267                           	opt callstack 17
 18268                           
 18269                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 18270                           
 18271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18272                           ;incstack = 0
 18273  014A4A  0100               	movlb	0	; () banked
 18274  014A4C  51DC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18275  014A4E  11DD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18276  014A50  11DE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18277  014A52  B4D8               	btfsc	status,2,c
 18278  014A54  0012               	return	
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 18282  014A56  D801               	call	u376_48
 18283  014A58  0012               	return	
 18284  014A5A                     u376_48:
 18285  014A5A  0005               	push	
 18286  014A5C  6EFA               	movwf	pclath,c
 18287  014A5E  51DC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18288  014A60  6EFD               	movwf	tosl,c
 18289  014A62  51DD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18290  014A64  6EFE               	movwf	tosh,c
 18291  014A66  51DE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18292  014A68  6EFF               	movwf	tosu,c
 18293  014A6A  50FA               	movf	pclath,w,c
 18294  014A6C  0012               	return		;indir
 18295  014A6E                     __end_of_TMR5_CallBack:
 18296                           	opt callstack 0
 18297                           
 18298 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 18299 ;; Defined at:
 18300 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 18301 ;; Parameters:    Size  Location     Type
 18302 ;;		None
 18303 ;; Auto vars:     Size  Location     Type
 18304 ;;		None
 18305 ;; Return value:  Size  Location     Type
 18306 ;;                  1  [STACK] void 
 18307 ;; Registers used:
 18308 ;;		wreg, status,2, status,0, btemp+11
 18309 ;; Tracked objects:
 18310 ;;		On entry : 3F/0
 18311 ;;		On exit  : 0/0
 18312 ;;		Unchanged: 0/0
 18313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18318 ;;Total ram usage:        0 bytes
 18319 ;; Hardware stack levels used:    1
 18320 ;; This function calls:
 18321 ;;		Nothing
 18322 ;; This function is called by:
 18323 ;;		_TMR5_Initialize
 18324 ;;		_TMR5_CallBack
 18325 ;; This function uses a reentrant model
 18326 ;;
 18327                           
 18328                           	psect	text113
 18329  014BDE                     __ptext113:
 18330                           	opt callstack 0
 18331  014BDE                     _TMR5_DefaultInterruptHandler:
 18332                           	opt callstack 17
 18333                           
 18334                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 18335                           
 18336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18337                           ;incstack = 0
 18338  014BDE  A0BE               	btfss	16318,0,c	;volatile
 18339  014BE0  D002               	goto	u349_40
 18340  014BE2  0E01               	movlw	1
 18341  014BE4  D001               	goto	u349_46
 18342  014BE6                     u349_40:
 18343  014BE6  0E00               	movlw	0
 18344  014BE8                     u349_46:
 18345  014BE8  0AFF               	xorlw	255
 18346  014BEA  6E48               	movwf	btemp+11,c
 18347  014BEC  50BE               	movf	16318,w,c	;volatile
 18348  014BEE  1848               	xorwf	btemp+11,w,c
 18349  014BF0  0BFE               	andlw	-2
 18350  014BF2  1848               	xorwf	btemp+11,w,c
 18351  014BF4  6EBE               	movwf	16318,c	;volatile
 18352                           
 18353                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 18354  014BF6  0012               	return		;funcret
 18355  014BF8                     __end_of_TMR5_DefaultInterruptHandler:
 18356                           	opt callstack 0
 18357                           
 18358                           ;
 18359                           ; Interrupt Vector Table @ 0x8
 18360                           ;
 18361                           
 18362                           	psect	ivt0x8
 18363  000008                     __pivt0x8:
 18364                           	opt callstack 0
 18365  000008                     ivt0x8_base:
 18366                           	opt callstack 0
 18367                           
 18368                           ; Vector 0 : SWINT
 18369  000008  5338               	dw	_Default_ISR shr (0+2)
 18370                           
 18371                           ; Vector 1 : HLVD
 18372  00000A  5338               	dw	_Default_ISR shr (0+2)
 18373                           
 18374                           ; Vector 2 : OSF
 18375  00000C  5338               	dw	_Default_ISR shr (0+2)
 18376                           
 18377                           ; Vector 3 : CSW
 18378  00000E  5338               	dw	_Default_ISR shr (0+2)
 18379                           
 18380                           ; Vector 4 : NVM
 18381  000010  5338               	dw	_Default_ISR shr (0+2)
 18382                           
 18383                           ; Vector 5 : SCAN
 18384  000012  5338               	dw	_Default_ISR shr (0+2)
 18385                           
 18386                           ; Vector 6 : CRC
 18387  000014  5338               	dw	_Default_ISR shr (0+2)
 18388                           
 18389                           ; Vector 7 : IOC
 18390  000016  5338               	dw	_Default_ISR shr (0+2)
 18391                           
 18392                           ; Vector 8 : INT0
 18393  000018  5316               	dw	_INT0_ISR shr (0+2)
 18394                           
 18395                           ; Vector 9 : ZCD
 18396  00001A  5338               	dw	_Default_ISR shr (0+2)
 18397                           
 18398                           ; Vector 10 : AD
 18399  00001C  518D               	dw	_ADCC_ISR shr (0+2)
 18400                           
 18401                           ; Vector 11 : ADT
 18402  00001E  5338               	dw	_Default_ISR shr (0+2)
 18403                           
 18404                           ; Vector 12 : CMP1
 18405  000020  5338               	dw	_Default_ISR shr (0+2)
 18406                           
 18407                           ; Vector 13 : SMT1
 18408  000022  5338               	dw	_Default_ISR shr (0+2)
 18409                           
 18410                           ; Vector 14 : SMT1PRA
 18411  000024  5338               	dw	_Default_ISR shr (0+2)
 18412                           
 18413                           ; Vector 15 : SMT1PRW
 18414  000026  5338               	dw	_Default_ISR shr (0+2)
 18415                           
 18416                           ; Vector 16 : DMA1SCNT
 18417  000028  530E               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 18418                           
 18419                           ; Vector 17 : DMA1DCNT
 18420  00002A  5324               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 18421                           
 18422                           ; Vector 18 : DMA1OR
 18423  00002C  532A               	dw	_DMA1_DMAOR_ISR shr (0+2)
 18424                           
 18425                           ; Vector 19 : DMA1A
 18426  00002E  5327               	dw	_DMA1_DMAA_ISR shr (0+2)
 18427                           
 18428                           ; Vector 20 : SPI1RX
 18429  000030  5338               	dw	_Default_ISR shr (0+2)
 18430                           
 18431                           ; Vector 21 : SPI1TX
 18432  000032  5338               	dw	_Default_ISR shr (0+2)
 18433                           
 18434                           ; Vector 22 : SPI1
 18435  000034  5338               	dw	_Default_ISR shr (0+2)
 18436                           
 18437                           ; Vector 23 : I2C1RX
 18438  000036  5338               	dw	_Default_ISR shr (0+2)
 18439                           
 18440                           ; Vector 24 : I2C1TX
 18441  000038  5338               	dw	_Default_ISR shr (0+2)
 18442                           
 18443                           ; Vector 25 : I2C1
 18444  00003A  5338               	dw	_Default_ISR shr (0+2)
 18445                           
 18446                           ; Vector 26 : I2C1E
 18447  00003C  5338               	dw	_Default_ISR shr (0+2)
 18448                           
 18449                           ; Vector 27 : U1RX
 18450  00003E  5263               	dw	_UART1_rx_vect_isr shr (0+2)
 18451                           
 18452                           ; Vector 28 : U1TX
 18453  000040  5259               	dw	_UART1_tx_vect_isr shr (0+2)
 18454                           
 18455                           ; Vector 29 : U1E
 18456  000042  5338               	dw	_Default_ISR shr (0+2)
 18457                           
 18458                           ; Vector 30 : U1
 18459  000044  5338               	dw	_Default_ISR shr (0+2)
 18460                           
 18461                           ; Vector 31 : TMR0
 18462  000046  5338               	dw	_Default_ISR shr (0+2)
 18463                           
 18464                           ; Vector 32 : TMR1
 18465  000048  5338               	dw	_Default_ISR shr (0+2)
 18466                           
 18467                           ; Vector 33 : TMR1G
 18468  00004A  5338               	dw	_Default_ISR shr (0+2)
 18469                           
 18470                           ; Vector 34 : TMR2
 18471  00004C  5338               	dw	_Default_ISR shr (0+2)
 18472                           
 18473                           ; Vector 35 : CCP1
 18474  00004E  5338               	dw	_Default_ISR shr (0+2)
 18475                           
 18476                           ; Vector 36 : Undefined
 18477  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 18478                           
 18479                           ; Vector 37 : NCO1
 18480  000052  5338               	dw	_Default_ISR shr (0+2)
 18481                           
 18482                           ; Vector 38 : CWG1
 18483  000054  5338               	dw	_Default_ISR shr (0+2)
 18484                           
 18485                           ; Vector 39 : CLC1
 18486  000056  5338               	dw	_Default_ISR shr (0+2)
 18487                           
 18488                           ; Vector 40 : INT1
 18489  000058  531A               	dw	_INT1_ISR shr (0+2)
 18490                           
 18491                           ; Vector 41 : CMP2
 18492  00005A  5338               	dw	_Default_ISR shr (0+2)
 18493                           
 18494                           ; Vector 42 : DMA2SCNT
 18495  00005C  5338               	dw	_Default_ISR shr (0+2)
 18496                           
 18497                           ; Vector 43 : DMA2DCNT
 18498  00005E  5338               	dw	_Default_ISR shr (0+2)
 18499                           
 18500                           ; Vector 44 : DMA2OR
 18501  000060  5338               	dw	_Default_ISR shr (0+2)
 18502                           
 18503                           ; Vector 45 : DMA2A
 18504  000062  5338               	dw	_Default_ISR shr (0+2)
 18505                           
 18506                           ; Vector 46 : I2C2RX
 18507  000064  5338               	dw	_Default_ISR shr (0+2)
 18508                           
 18509                           ; Vector 47 : I2C2TX
 18510  000066  5338               	dw	_Default_ISR shr (0+2)
 18511                           
 18512                           ; Vector 48 : I2C2
 18513  000068  5338               	dw	_Default_ISR shr (0+2)
 18514                           
 18515                           ; Vector 49 : I2C2E
 18516  00006A  5338               	dw	_Default_ISR shr (0+2)
 18517                           
 18518                           ; Vector 50 : U2RX
 18519  00006C  5277               	dw	_UART2_rx_vect_isr shr (0+2)
 18520                           
 18521                           ; Vector 51 : U2TX
 18522  00006E  526D               	dw	_UART2_tx_vect_isr shr (0+2)
 18523                           
 18524                           ; Vector 52 : U2E
 18525  000070  5338               	dw	_Default_ISR shr (0+2)
 18526                           
 18527                           ; Vector 53 : U2
 18528  000072  5338               	dw	_Default_ISR shr (0+2)
 18529                           
 18530                           ; Vector 54 : TMR3
 18531  000074  5338               	dw	_Default_ISR shr (0+2)
 18532                           
 18533                           ; Vector 55 : TMR3G
 18534  000076  5338               	dw	_Default_ISR shr (0+2)
 18535                           
 18536                           ; Vector 56 : TMR4
 18537  000078  5338               	dw	_Default_ISR shr (0+2)
 18538                           
 18539                           ; Vector 57 : CCP2
 18540  00007A  5338               	dw	_Default_ISR shr (0+2)
 18541                           
 18542                           ; Vector 58 : Undefined
 18543  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18544                           
 18545                           ; Vector 59 : CWG2
 18546  00007E  5338               	dw	_Default_ISR shr (0+2)
 18547                           
 18548                           ; Vector 60 : CLC2
 18549  000080  5338               	dw	_Default_ISR shr (0+2)
 18550                           
 18551                           ; Vector 61 : INT2
 18552  000082  531E               	dw	_INT2_ISR shr (0+2)
 18553                           
 18554                           ; Vector 62 : Undefined
 18555  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18556                           
 18557                           ; Vector 63 : Undefined
 18558  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18559                           
 18560                           ; Vector 64 : Undefined
 18561  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18562                           
 18563                           ; Vector 65 : Undefined
 18564  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18565                           
 18566                           ; Vector 66 : Undefined
 18567  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18568                           
 18569                           ; Vector 67 : Undefined
 18570  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18571                           
 18572                           ; Vector 68 : Undefined
 18573  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18574                           
 18575                           ; Vector 69 : Undefined
 18576  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18577                           
 18578                           ; Vector 70 : TMR5
 18579  000094  5062               	dw	_TMR5_ISR shr (0+2)
 18580                           
 18581                           ; Vector 71 : TMR5G
 18582  000096  5338               	dw	_Default_ISR shr (0+2)
 18583                           
 18584                           ; Vector 72 : TMR6
 18585  000098  52F1               	dw	_TMR6_ISR shr (0+2)
 18586                           
 18587                           ; Vector 73 : CCP3
 18588  00009A  5338               	dw	_Default_ISR shr (0+2)
 18589                           
 18590                           ; Vector 74 : CWG3
 18591  00009C  5338               	dw	_Default_ISR shr (0+2)
 18592                           
 18593                           ; Vector 75 : CLC3
 18594  00009E  5338               	dw	_Default_ISR shr (0+2)
 18595                           
 18596                           ; Vector 76 : Undefined
 18597  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18598                           
 18599                           ; Vector 77 : Undefined
 18600  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18601                           
 18602                           ; Vector 78 : Undefined
 18603  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18604                           
 18605                           ; Vector 79 : Undefined
 18606  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18607                           
 18608                           ; Vector 80 : CCP4
 18609  0000A8  5338               	dw	_Default_ISR shr (0+2)
 18610                           
 18611                           ; Vector 81 : CLC4
 18612  0000AA  5338               	dw	_Default_ISR shr (0+2)
 18613  0000AC                     ivt0x8_undefint:
 18614                           	opt callstack 0
 18615  0000AC  00FF               	reset	
 18616                           
 18617                           	psect	text114
 18618  000000                     __ptext114:
 18619                           	opt callstack 0
 18620                           
 18621                           	psect	rparam
 18622  0000                     
 18623                           	psect	temp
 18624  00003D                     btemp:
 18625                           	opt callstack 0
 18626  00003D                     	ds	32
 18627  0000                     wtemp0	set	btemp
 18628  0000                     wtemp1	set	btemp+2
 18629  0000                     wtemp2	set	btemp+4
 18630  0000                     wtemp3	set	btemp+6
 18631  0000                     wtemp4	set	btemp+8
 18632  0000                     wtemp5	set	btemp+10
 18633  0000                     wtemp8	set	btemp+1
 18634  0000                     ttemp0	set	btemp
 18635  0000                     ttemp1	set	btemp+3
 18636  0000                     ttemp2	set	btemp+6
 18637  0000                     ttemp3	set	btemp+9
 18638  0000                     ttemp5	set	btemp+1
 18639  0000                     ttemp6	set	btemp+4
 18640  0000                     ttemp7	set	btemp+8
 18641  0000                     ltemp0	set	btemp
 18642  0000                     ltemp1	set	btemp+4
 18643  0000                     ltemp2	set	btemp+8
 18644  0000                     lltemp0	set	btemp
 18645  0000                     lltemp1	set	btemp+8
 18646  0000                     lltemp2	set	btemp+16
 18647  0000                     lltemp3	set	btemp+24
 18648                           tosu	equ	0x3FFF
 18649                           tosh	equ	0x3FFE
 18650                           tosl	equ	0x3FFD
 18651                           stkptr	equ	0x3FFC
 18652                           pclatu	equ	0x3FFB
 18653                           pclath	equ	0x3FFA
 18654                           pcl	equ	0x3FF9
 18655                           tblptru	equ	0x3FF8
 18656                           tblptrh	equ	0x3FF7
 18657                           tblptrl	equ	0x3FF6
 18658                           tablat	equ	0x3FF5
 18659                           prodh	equ	0x3FF4
 18660                           prodl	equ	0x3FF3
 18661                           indf0	equ	0x3FEF
 18662                           postinc0	equ	0x3FEE
 18663                           postdec0	equ	0x3FED
 18664                           preinc0	equ	0x3FEC
 18665                           plusw0	equ	0x3FEB
 18666                           fsr0h	equ	0x3FEA
 18667                           fsr0l	equ	0x3FE9
 18668                           wreg	equ	0x3FE8
 18669                           indf1	equ	0x3FE7
 18670                           postinc1	equ	0x3FE6
 18671                           postdec1	equ	0x3FE5
 18672                           preinc1	equ	0x3FE4
 18673                           plusw1	equ	0x3FE3
 18674                           fsr1h	equ	0x3FE2
 18675                           fsr1l	equ	0x3FE1
 18676                           bsr	equ	0x3FE0
 18677                           indf2	equ	0x3FDF
 18678                           postinc2	equ	0x3FDE
 18679                           postdec2	equ	0x3FDD
 18680                           preinc2	equ	0x3FDC
 18681                           plusw2	equ	0x3FDB
 18682                           fsr2h	equ	0x3FDA
 18683                           fsr2l	equ	0x3FD9
 18684                           status	equ	0x3FD8


Data Sizes:
    Strings     318
    Constant    0
    Data        871
    BSS         551
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      62
    BANK0           160      3     146
    BANK1           256      0     198
    BANK2           256      0     256
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H12(BANK0[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), H13(BANK1[48]), 
		 -> H12(BANK0[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_25(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_25(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[6]), STR_14(CODE[19]), 
		 -> STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), STR_10(CODE[18]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), STR_6(CODE[15]), 
		 -> STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[6]), STR_14(CODE[19]), 
		 -> STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), STR_10(CODE[18]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), STR_6(CODE[15]), 
		 -> STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 261
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_22(CODE[6]), STR_3(CODE[6]), V.terminal(BIGRAM[160]), V(BIGRAM[261]), 

    a	PTR const unsigned char  size(2) Largest target is 261
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_22(CODE[6]), STR_3(CODE[6]), V.terminal(BIGRAM[160]), V(BIGRAM[261]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[6]), 
		 -> STR_14(CODE[19]), STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[18]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), 
		 -> STR_6(CODE[15]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 261
		 -> V(BIGRAM[261]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 261
		 -> V(BIGRAM[261]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4523_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 261
		 -> V(BIGRAM[261]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 261
		 -> V(BIGRAM[261]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[6]), STR_14(CODE[19]), 
		 -> STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), STR_10(CODE[18]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), STR_6(CODE[15]), 
		 -> STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[6]), STR_14(CODE[19]), 
		 -> STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), STR_10(CODE[18]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), STR_6(CODE[15]), 
		 -> STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_22(CODE[6]), STR_3(CODE[6]), 
		 -> V(BIGRAM[261]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_22(CODE[6]), STR_3(CODE[6]), 
		 -> V(BIGRAM[261]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_22(CODE[6]), 
		 -> STR_3(CODE[6]), V(BIGRAM[261]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F17156.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H12(BANK0[30]), H10(BANK1[91]), 

    F17156.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), H13(BANK1[48]), 
		 -> H12(BANK0[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), 
		 -> H13(BANK1[48]), H12(BANK0[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), 
		 -> H13(BANK1[48]), H12(BANK0[30]), H10(BANK1[91]), 

    t_link	PTR enum E16658 size(2) Largest target is 261
		 -> V(BIGRAM[261]), 

    S3813response_type$reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H12(BANK0[30]), H10(BANK1[91]), 

    F17139.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H12(BANK0[30]), H10(BANK1[91]), 

    S3813response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), H13(BANK1[48]), 
		 -> H12(BANK0[30]), H10(BANK1[91]), 

    F17139.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), H13(BANK1[48]), 
		 -> H12(BANK0[30]), H10(BANK1[91]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    r_link	PTR enum E16658 size(2) Largest target is 261
		 -> V(BIGRAM[261]), 

    m_link	PTR enum E16658 size(2) Largest target is 261
		 -> V(BIGRAM[261]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), 
		 -> H13(BANK1[48]), H12(BANK0[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 261
		 -> V(BIGRAM[261]), 

    strPtr	PTR unsigned char  size(2) Largest target is 261
		 -> V(BIGRAM[261]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1987spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1987spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   42006
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                         _hb_message
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                              _srand
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           3     1      2    2000
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     154
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           3     1      2     841
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           3     1      2     890
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      88
                         _StartTimer
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hb_message                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              4     0      4   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   2     0      2    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               8     4      4    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              0 BANK0      3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _hb_message
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
       _StartTimer
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
       _StartTimer
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     206      69        6.3%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C6       7       77.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      92       5       91.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     38C      58        0.0%
DATA                 0      0     592       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr  9 03:26:17 2019

                    _SPI1_Exchange8bit 4B36                                      _V 03F6  
     __end_of_TMR5_SetInterruptHandler 48C4              __end_of_UART2_is_rx_ready 4CCA  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 4CBA                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0067  
                                  _H13 015B                                    _H14 0099  
                                  _H24 018B                                    _H17 0085  
                                  _H53 0386                                    l194 4C1E  
                                  l572 4542                                    l717 46B2  
                                  l851 4B44                                    l579 44B2  
                                  l692 4504                                    l597 4686  
                                  l699 4474                                    _GIE 01FE97  
                                  _abs 430A                                    _pad 3346  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 4A90  
                         _run_checksum 470C                     _UART1_Transmit_ISR 4660  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 4AB2  
                         __CFG_ZCD$OFF 000000                                   _H254 04FB  
                                 l1128 4458                                   l1307 07F2  
                                 l1251 0202                                   l1260 02F2  
                                 l1236 0040                                   l1253 027C  
                                 l1510 3DE4                                   l1262 032C  
                                 l1246 011A                                   l1264 0336  
                                 l1506 3A26                                   l1370 40E4  
                                 l1602 094E                                   l1282 0678  
                                 l1283 06B8                                   l1277 0540  
                                 l1711 1D16                                   l1287 077C  
                                 l1288 07B0                                   l1297 07D6  
                                 l1732 2BD6                                   l1904 13C6  
                                 l1657 17AE                                   l1754 4218  
                                 l1931 2510                                   l2707 3218  
                                 l2645 434A                                   l1853 45AA  
                                 l1950 12DE                                   l1697 1B66  
                                 l2667 333C                                   l1884 33A2  
                                 l7004 17E4                                   l7110 1AE6  
                                 l7104 1AC4                                   l7040 18C8  
                                 l7032 1894                                   l7016 182C  
                                 l7120 1AFC                                   l6402 43C6  
                                 l5530 27E0                                   l5506 433A  
                                 l6410 45B4                                   l7114 1AF2  
                                 l7018 1840                                   l7122 1B46  
                                 l5524 279A                                   l7108 1AE2  
                                 l7060 1976                                   l7052 1918  
                                 l7044 18DE                                   l7036 18B2  
                                 l5542 28B2                                   l5518 2746  
                                 l7302 09BE                                   l7070 19EA  
                                 l5464 3C46                                   l6512 388E  
                                 l6504 3850                                   l7072 19EE  
                                 l7056 1946                                   l7048 18F4  
                                 l5466 3C68                                   l5570 2CC6  
                                 l5562 2C3E                                   l5730 30AE  
                                 l6506 387C                                   l7402 0C92  
                                 l7330 0A92                                   l7322 0A34  
                                 l7314 09F2                                   l6602 2264  
                                 l9002 07DA                                   l8300 2582  
                                 l5732 311A                                   l6348 451A  
                                 l6372 44DC                                   l7420 0D2A  
                                 l7340 0AEA                                   l7260 089A  
                                 l7084 1A22                                   l6604 2296  
                                 l9004 07F6                                   l8230 1400  
                                 l8222 13B6                                   l8310 263C  
                                 l6518 3892                                   l6526 38A6  
                                 l7430 0D58                                   l7422 0D40  
                                 l7326 0A62                                   l7318 0A10  
                                 l5910 44D2                                   l6622 22BA  
                                 l6710 240E                                   l9014 0892  
                                 l8152 3252                                   l8304 25B2  
                                 l5824 40F6                                   l6528 38CC  
                                 l6480 3830                                   l7432 0D60  
                                 l7424 0D44                                   l7352 0B32  
                                 l5912 44D4                                   l6640 22F2  
                                 l6624 22D4                                   l6560 21B2  
                                 l5578 2D72                                   l8234 141E  
                                 l8314 2668                                   l7426 0D4C  
                                 l7338 0AE6                                   l7274 08F4  
                                 l6642 230C                                   l6546 2172  
                                 l8164 3CD2                                   l8180 33AC  
                                 l8244 1630                                   l8420 1FC2  
                                 l6468 4718                                   l6492 3844  
                                 l6484 3838                                   l6476 3818  
                                 l7428 0D50                                   l7380 0C06  
                                 l7372 0BA8                                   l7364 0B66  
                                 l7292 097E                                   l7436 0D76  
                                 l6572 21EC                                   l6708 23D6  
                                 l5924 4704                                   l6398 439C  
                                 l8174 3372                                   l8318 26A4  
                                 l8350 0FB2                                   l8342 0EC6  
                                 l8414 1F04                                   l6486 383C  
                                 l7390 0C5E                                   l7438 0DC0  
                                 l6670 2344                                   l6566 21D0  
                                 l5950 4494                                   l8168 3D10  
                                 l8184 33E8                                   l8264 16E2  
                                 l8280 2492                                   l6496 3848  
                                 l6488 3840                                   l7376 0BD6  
                                 l7368 0B84                                   l6672 2382  
                                 l6592 223E                                   l5952 4496  
                                 l8178 339A                                   l8354 1004  
                                 l8434 20DA                                   l8426 202C  
                                 l6658 232A                                   l6586 2222  
                                 l8188 3432                                   l8196 3E0A  
                                 l8268 171E                                   l8508 3A88  
                                 l7388 0C5A                                   l5964 46DA  
                                 l8540 2ACC                                   l8700 1C5A  
                                 l6846 4682                                   l8198 3E36  
                                 l8382 1266                                   l8366 115E  
                                 l8446 3904                                   l8550 2B2E  
                                 l8702 1C6E                                   l6856 4B12  
                                 l8296 2546                                   l8376 120C  
                                 l8392 128A                                   l8448 3946  
                                 l5992 4A1E                                   l6696 23BC  
                                 l8472 37D0                                   l8536 2AB2  
                                 l8528 29F8                                   l8386 126A  
                                 l8554 2B34                                   l8730 1D5C  
                                 l8714 1CE4                                   l8706 1C9A  
                                 l8802 002A                                   l6868 46AE  
                                 l8468 375E                                   l8548 2B06  
                                 l8804 0032                                   l6894 4440  
                                 l6878 4B32                                   l8566 2B88  
                                 l8558 2B4E                                   l8574 2BB6  
                                 l8734 1D68                                   l8726 1D3C  
                                 l8910 03FA                                   l8806 0046  
                                 l8568 2BB0                                   l8760 1DE6  
                                 l8744 1D94                                   l8672 1B9E  
                                 l6986 176C                                   l8762 1DF0  
                                 l8754 1DC4                                   l8756 1DDA  
                                 l8684 1BE6                                   l8908 03C4  
                                 l8758 1DDE                                   l8686 1BF8  
                                 l8766 1E06                                   l8696 1C42  
                                 l8768 1E50                                   l8960 05DA  
                                 l8880 02A8                                   l8872 0284  
                                 l8848 01AC                                   l8858 023A  
                                 l8972 0668                                   l8948 0530  
                                 l8892 0312                                   l8884 02B8  
                                 l8876 028C                                   STR_1 FF9B  
                                 l8984 06C2                                   STR_2 FFD8  
                                 STR_3 FFF0                                   l8986 06F2  
                                 STR_4 FFBB                                   STR_5 FF50  
                                 l8996 0786                                   STR_6 FFAC  
                                 STR_7 FFCA                                   STR_8 FFEA  
                                 STR_9 FFE4                                   u3100 31CA  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 u2600 27DA                                   u5000 169E  
                                 u2610 280C                                   u5010 16A2  
                                 u2700 2C8E                                   u2540 431E  
                                 u5100 25A8                                   u2470 3C96  
                                 u2630 28EA                                   u2710 2CC0  
                                 u5030 16B8                                   u5110 25EE  
                                 u3415 3F90                                   u3416 3F92  
                                 u3408 3F5E                                   u2560 2740  
                                 u2720 2CF2                                   u5200 108C  
                                 u2650 293C                                   u2580 2796  
                                 u2740 2DAA                                   u5140 26CA  
                                 u2477 3C88                                   u5117 25E0  
                                 u3390 3F5C                                   u5310 3A68  
                                 u2591 27A0                                   u2760 2DFC  
                                 u2680 2C38                                   u5320 29EE  
                                 _T6PR 003F93                                   u5180 0F1A  
                                 _PMD0 0039C0                                   u4365 0CD2  
                                 _PMD1 0039C1                                   u5270 214E  
                                 u4366 0CD4                                   _PMD2 0039C2  
                                 u4375 0CE2                                   _PMD3 0039C3  
                                 u4376 0CE4                                   _PMD4 0039C4  
                                 u4385 0CF2                                   _PMD5 0039C5  
                                 u4810 32C2                                   u4386 0CF4  
                                 _PMD6 0039C6                                   u5451 1C8E  
                                 _PMD7 0039C7                                   u4900 131A  
                                 u5700 0492                                   u3935 1A62  
                                 u4920 138A                                   u3936 1A64  
                                 u5720 04A8                                   u3945 1A72  
                                 u3946 1A74                                   u3955 1A82  
                                 u4940 139C                                   u3956 1A84  
                                 u4790 3246                                   u4960 13EC  
                                 u4970 1644                                   u4890 1318  
                                 u5690 048A                                   u4981 1674  
                                 u4990 168A                                   u4991 1688  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 4AD4  
                     __end_of_ADCC_ISR 4660                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01A6                                   _ctoa 3DEC  
                                 _main 0000                                   _dtoa 12E8  
                                 _seed 00E7                                   _prec 001F  
                                 _nout 00E5                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 2426                                   btemp 003D  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0029  
            __end_of_SPI1_Exchange8bit 4B54                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 498C                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005E  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 4C66  
                     __end_of_INT1_ISR 4C76                       __end_of_INT2_ISR 4C86  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 3A2E  
        __end_of_OSCILLATOR_Initialize 4C24                                  PRLOCK 0039EF  
                      __end_of___aodiv 2964                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 2E20                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 FF78  
                                STR_11 FF50                                  STR_12 FF8A  
                                STR_13 FF1C                                  STR_21 FEC1  
                                STR_14 FF65                                  STR_15 FFE4  
                                STR_23 FFF6                                  STR_16 FF1C  
                                STR_25 FFF6                                  STR_17 FF36  
                        __CFG_WDTE$OFF 000000                                  STR_18 FFE1  
                                STR_19 FFFC                                  STR_27 FFF9  
                                STR_29 FFF9                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005E                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 4CE0  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 4964  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 41DA  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 4BDE  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002E  
                                _flags 0021                                  _fputc 3222  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 3CC2  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005E  
                                _srand 45FE                                  _width 001D  
                                _putch 4BA8               _INT1_SetInterruptHandler 48EC  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 003D  
                                ltemp1 0041                                  ltemp2 0045  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 003D  
                                ttemp1 0040                                  ttemp2 0043  
                                ttemp3 0046                                  ttemp5 003E  
                                ttemp6 0041                                  ttemp7 0045  
                       _secs_gem_state 3816                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 484C            _UART1_SetRxInterruptHandler 4824  
                                wtemp0 003D                                  wtemp1 003F  
                                wtemp2 0041                                  wtemp3 0043  
                                wtemp4 0045                                  wtemp5 0047  
                                wtemp8 003E                        __end_of_sprintf 3564  
                      __end_of_strncmp 3222                    ??_UART1_tx_vect_isr 005E  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 49B2  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 4350  
                __end_of_ringBufS_init 47AC                        __initialization 3564  
                    _UART2_rx_vect_isr 49DC                           __end_of_ctoa 3E74  
                         __end_of_main 0896                           __end_of_dtoa 1768  
                         __end_of_stoa 26E4             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005E  
           __size_of_UART2_is_tx_ready 0008               _TMR5_SetInterruptHandler 489C  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 0010  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005E  
            __end_of_UART1_tx_vect_isr 498A                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 484C                       _UART1_Initialize 3FB4  
                    _UART2_tx_vect_isr 49B4                     _UART2_Transmit_ISR 468C  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005E                                 _MD1SRC 003CFC  
               __end_of_secs_gem_state 38D8                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1145 41D2  
                               u130_48 4AE2                         __CFG_WDTCCS$SC 000000  
                               u126_48 4A9E                                 u128_48 4AC0  
                               _SCANPR 0039F7                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 u349_40 4BE6  
                               _IVTADU 00389F                                 u349_46 4BE8  
                               u373_48 4A36           __size_of_eaDogM_WriteCommand 000E  
                               u376_48 4A5A                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 4188                    ??_UART2_tx_vect_isr 005E  
            __end_of_UART2_rx_vect_isr 4A02             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 4C86                       _UART2_Initialize 407A  
                               _WaitMs 4592   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 3D5A  
                               _memset 1E6C                                 clear_0 360A  
                               clear_1 3618                                 clear_2 362A  
                               clear_3 3636                                 clear_4 3642  
                               _printf 4018                     _eaDogM_WriteString 3A2E  
                            ?_ADCC_ISR 005E                                 _strlen 3C20  
                   __size_of_TimerDone 0024                           __pdataBIGRAM 03F6  
                      _ADCC_Initialize 42C0                         _PMD_Initialize 4C24  
 __end_of_INT2_DefaultInterruptHandler 4CEC  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 4CEA                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 49DA                                 lltemp0 003D  
                               lltemp1 0045                                 lltemp2 004D  
                               lltemp3 0055                           __mediumconst FEC0  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 4134  
                     __end_of_vfprintf 3984                             _StartTimer 4556  
                      _CLC1_Initialize 4A6E          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 4396                      _SYSTEM_Initialize 43DC  
                           __accesstop 0060                __end_of__initialization 3654  
                            ?_INT0_ISR 005E                              ?_INT1_ISR 005E  
                            ?_INT2_ISR 005E              __end_of_CLKREF_Initialize 4C90  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 441E                 __end_of_ringBufS_flush 3DEC  
                       __pcstackCOMRAM 005E                             ___inthi_sp 0EA8  
                         __pidataBANK0 4276                           __pidataBANK1 3AD6  
                         __pidataBANK3 3E74                              ?_TMR5_ISR 005E  
                            ?_TMR6_ISR 005E                         ivt0x8_undefint 00AC  
                        __end_of_fputc 3346                          __end_of_fputs 3D5A  
                        __end_of_srand 4632                  __end_of_TMR5_CallBack 4A6E  
                        __end_of_putch 4BC2                __end_of_TMR6_Initialize 4874  
               __end_of_PMD_Initialize 4C38                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005E                  __end_of_TMR6_CallBack 4A4A  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 4C9C       __end_of_INT2_SetInterruptHandler 48EC  
             _UART2_RxInterruptHandler 0011              __end_of_SYSTEM_Initialize 441E  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 4B8C                             __pbssBANK0 00AA  
                           __pbssBANK1 01A6                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001A  
                           ??_INT0_ISR 005E                             ??_INT1_ISR 005E  
                           ??_INT2_ISR 005E                      __end_of_TimerDone 4A26  
                     _DMA1_DMADCNT_ISR 4C90              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                           _hb_message 41DA                  __end_of_wait_lcd_done 4B70  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 489C  
              __end_of_ADCC_Initialize 430A                             ??_TMR5_ISR 00EF  
                           ??_TMR6_ISR 005E                     __size_of_secs_send 027C  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 4AF6                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005E                       _DMA1_DMASCNT_ISR 4C38  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 4A90  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005E                   __size_of_UART1_Write 003E  
            __size_of_UART2_put_buffer 002A             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 050C                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 4BA8  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 445E  
                   __end_of_UART1_Read 4556                     __end_of_UART2_Read 4518  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 4018  
                      __size_of_WaitMs 0036                                ___aodiv 26E4  
                              ___aomod 2BE0                             _m_protocol 0896  
            __end_of_UART1_Receive_ISR 4B16                   __end_of_init_display 3744  
                              __pcinit 3564                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 4C48                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 0000                                __ptext1 1B62  
                              __ptext2 2964                                __ptext3 3744  
                              __ptext4 46B8                                __ptext5 4CB2  
                              __ptext6 445E                                __ptext7 46E2  
                              __ptext8 4CBA                                __ptext9 2158  
                    _UART2_Receive_ISR 4B16                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us505999 2438                                us266999 294E  
                _OSCILLATOR_Initialize 4C0E                                us277999 2E0E  
                              us358999 2418                           __size_of_abs 0046  
                              _r_block 00B8                           __size_of_pad 0114  
                              us488999 1302                                _mode_sw 0030  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 40D8                     m_protocol@rxData_l 002F  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 345A  
                              _strncmp 3026                   end_of_initialization 3654  
                    __end_of_secs_send 2BE0               _INT2_SetInterruptHandler 48C4  
             __size_of_secs_II_message 02CE                             _r_protocol 1768  
  __end_of_UART1_SetTxInterruptHandler 4824            _UART1_SetTxInterruptHandler 47FC  
  __end_of_UART2_SetRxInterruptHandler 47FC            _UART2_SetRxInterruptHandler 47D4  
                           _t_protocol 1B62                      __end_of_vfpfcnvrt 12E8  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 4CDE  
            __end_of_UART2_Receive_ISR 4B36                         wdtdelay@dcount 00D8  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005F  
                       _block_checksum 3744                  _INT1_InterruptHandler 0017  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 4874  
                _TMR5_InterruptHandler 00DC   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002C    __end_of_ADCC_SetADIInterruptHandler 4964  
          _ADCC_SetADIInterruptHandler 493C                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 3EE4  
                      _SPI1_Initialize 4BF8                       _UART1_put_buffer 46E2  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                      r_protocol@b_block 0023  
                       __end_of_WaitMs 45C8           __end_of_INTERRUPT_Initialize 3FB4  
               __end_of_block_checksum 3816   __end_of_INT0_DefaultInterruptHandler 4CE8  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 4CE6  
           __size_of_UART1_Receive_ISR 0020                          __pidataBIGRAM 2E20  
                        __pidataCOMRAM 4CEE                      __size_of_TMR5_ISR 0052  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 2158                         __end_of_printf 407A  
             __end_of_DMA1_DMADCNT_ISR 4C9A                       _UART2_put_buffer 46B8  
                __end_of_INT0_CallBack 4AB2                         __end_of_strlen 3CC2  
                  start_initialization 3564   __end_of_TMR5_DefaultInterruptHandler 4BF8  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 4BDE  
      __size_of_PIN_MANAGER_Initialize 00A4                            __end_of_abs 4350  
                __end_of_INT1_CallBack 4AD4                            __end_of_pad 345A  
                 __size_of_Default_ISR 0006                    __size_of_hb_message 0050  
                 __end_of_send_lcd_cmd 4784                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 4AF6                   secs_II_message@block 0001  
                        _uart1RxBuffer 0280                          _uart1TxBuffer 02C0  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 4C48  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 4CA8  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A8                              _TimerDone 4A02  
                        _ringBufS_init 4784                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 4276  
                      run_checksum@sum 0025        __end_of_eaDogM_WriteStringAtPos 45FE  
              __end_of_DMA1_Initialize 3F4E                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 493C                          __pcstackBANK0 00EF  
              __end_of_SPI1_Initialize 4C0E               _UART1_RxInterruptHandler 000B  
             _UART2_TxInterruptHandler 000E                    __size_of_m_protocol 0546  
            __size_of_ringBufS_put_dma 00AA                           _init_display 365A  
               __end_of_DMA1_DMAOR_ISR 4CB2                 __size_of_TMR5_CallBack 0024  
                _INT2_InterruptHandler 0014                  _TMR6_InterruptHandler 00DF  
               __size_of_TMR6_CallBack 0024                 _PIN_MANAGER_Initialize 3B7C  
                 __end_of_wait_lcd_set 4CD8                          __pmediumconst FEC0  
                            __ptext100 468C                              __ptext101 49DC  
                            __ptext110 4188                              __ptext102 4B16  
                            __ptext111 441E                              __ptext103 4BC4  
                            __ptext112 4A4A                              __ptext104 4A26  
                            __ptext113 4BDE                              __ptext105 4396  
                            __ptext114 0000                              __ptext106 4C38  
                            __ptext107 4C90                              __ptext108 4C9C  
                            __ptext109 4CA8                     __end_of_StartTimer 4592  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 00AC  
                             _ADCC_ISR 4634                    __size_of_r_protocol 03FA  
               __CFG_BBSIZE$BBSIZE_512 000000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 030A                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 0124                         __size_of_fputs 0098  
                       __size_of_srand 0034                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 3F4E  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005E                               _INT0_ISR 4C58  
                             _INT1_ISR 4C68                               _INT2_ISR 4C78  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 2964                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 00AA                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0343  
                            _ring_buf2 0300                               _PIR1bits 0039A1  
                             i2u450_48 49EE                               i2u442_48 464C  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u444_48 4976                               i2u446_48 499E  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u448_48 49C6  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 468C  
                             _TMR5_ISR 4188                               _TMR6_ISR 4BC4  
                            _vfpfcnvrt 0DDC                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 4A4A                              _start_lcd 4CD8  
            __size_of_send_lcd_cmd_dma 0054                          _TMR6_CallBack 4A26  
             __end_of_UART1_put_buffer 470C                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 44DA  
                  __end_of_UART2_Write 449C               __size_of_TMR6_Initialize 0028  
                   __end_of_hb_message 422A                            _INTCON0bits 003FD2  
                            copy_data0 3578                              copy_data1 359E  
                            copy_data2 35C0                              copy_data3 35E2  
             _INT0_SetInterruptHandler 4914                 _uart1TxBufferRemaining 003A  
  __end_of_UART2_SetTxInterruptHandler 47D4            _UART2_SetTxInterruptHandler 47AC  
                         _uart1RxCount 0037               __end_of_UART2_put_buffer 46E2  
                         _uart2RxCount 0031                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 0036                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 4734                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 4B54  
                         _send_lcd_cmd 475C                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 4B70  
                __end_of_DMA1_DMAA_ISR 4CA6   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005E               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 4C56                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005F                               __ptext10 45FE  
                             __ptext11 345A                               __ptext20 4CC2  
                             __ptext12 1768                               __ptext21 44DA  
                             __ptext13 449C                               __ptext30 45C8  
                             __ptext22 4CCA                               __ptext14 0896  
                             __ptext31 3A2E                               __ptext23 4518  
                             __ptext15 3816                               __ptext40 4018  
                             __ptext32 4C48                               __ptext24 365A  
                             __ptext16 470C                               __ptext41 38D8  
                             __ptext33 4134                               __ptext25 4734  
                             __ptext17 4592                               __ptext50 3346  
                             __ptext42 0DDC                               __ptext34 4CD2  
                             __ptext26 475C                               __ptext18 4A02  
                             __ptext51 3C20                               __ptext43 3026  
                             __ptext35 4B54                               __ptext27 4B36  
                             __ptext19 4556                               __ptext60 3FB4  
                             __ptext52 3CC2                               __ptext44 2426  
                             __ptext36 40D8                               __ptext28 4784  
                             __ptext61 47FC                               __ptext53 3222  
                             __ptext45 12E8                               __ptext37 4CD8  
                             __ptext29 41DA                               __ptext70 4C0E  
                             __ptext62 4824                               __ptext54 4BA8  
                             __ptext46 430A                               __ptext38 3D5A  
                             __ptext71 4B70                               __ptext63 484C  
                             __ptext55 3984                               __ptext47 2BE0  
                             __ptext39 1E6C                               __ptext80 4A6E  
                             __ptext72 3F4E                               __ptext64 4874  
                             __ptext56 43DC                               __ptext48 26E4  
                             __ptext81 42C0                               __ptext73 422A  
                             __ptext65 4350                               __ptext57 407A  
                             __ptext49 3DEC                               __ptext90 4AD4  
                             __ptext82 493C                               __ptext74 48C4  
                             __ptext66 489C                               __ptext58 47AC  
                             __ptext91 4CEA                               __ptext83 4C58  
                             __ptext75 48EC                               __ptext67 4BF8  
                             __ptext59 47D4                               __ptext92 4CE0  
                             __ptext84 4A90                               __ptext76 4914  
                             __ptext68 4C24                               __ptext93 4634  
                             __ptext85 4CE6                               __ptext77 4B8C  
                             __ptext69 3B7C                               __ptext94 4CEC  
                             __ptext86 4C68                               __ptext78 3EE4  
                             __ptext95 4964                               __ptext87 4AB2  
                             __ptext79 4C86                               __ptext96 4660  
                             __ptext88 4CE8                               __ptext97 498C  
                             __ptext89 4C78                               __ptext98 4AF6  
                             __ptext99 49B4                        _secs_II_message 2158  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 010A  
                     __size_of_strncmp 01FC                       _ringBufS_put_dma 3984  
                   __end_of_m_protocol 0DDC                          __size_of_ctoa 0088  
                        __size_of_main 0896                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005E  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 00E2                              stoa@F1144 0060  
                   ??_DMA1_DMASCNT_ISR 005F                               _spi_link 00C5  
                             _wdtdelay 40D8             __end_of_UART2_Transmit_ISR 46B8  
                             _vfprintf 38D8                    secs_gem_state@block 002B  
                    _UART1_is_rx_ready 4CCA                            _UART1_Write 449C  
 __end_of_INT1_DefaultInterruptHandler 4CEA  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 4CE8                            _UART2_Write 445E  
                    _UART1_is_tx_ready 4CBA                        r_protocol@retry 005D  
                    t_protocol@requeue 002C                          ??_Default_ISR 005E  
                   __end_of_r_protocol 1B62                            _uart1RxHead 0039  
                          _uart1TxHead 003C                            _uart2RxHead 0033  
                          _uart1RxTail 0038                            _uart2TxHead 0036  
                          _uart1TxTail 003B                            _uart2RxTail 0032  
                          _uart2TxTail 0035                           _wait_lcd_set 4CD2  
                   _EXT_INT_Initialize 422A   __end_of_TMR6_DefaultInterruptHandler 43DC  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 4396  
                   __end_of_t_protocol 1E6C   __end_of_ADCC_DefaultInterruptHandler 4CEE  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 4CEC  
                             intlevel2 0000                      _send_lcd_cmd_long 4734  
              __size_of_secs_gem_state 00C2                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 3AD6                __end_of_NCO1_Initialize 4B8C  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 4CD2  
                           _UART1_Read 4518                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 44DA              __end_of_UART1_is_tx_ready 4CC2  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 4CC2  
               _uart2TxBufferRemaining 0034                      _UART2_is_tx_ready 4CB2  
                     _send_lcd_cmd_dma 4134                  TMR5_ISR@CountCallBack 0027  
              __end_of_secs_II_message 2426       __end_of_INT1_SetInterruptHandler 4914  
            __size_of_UART1_Initialize 0064                        t_protocol@block 00D1  
                     ??_DMA1_DMAOR_ISR 005F               _UART1_TxInterruptHandler 0008  
                      t_protocol@retry 002D              __end_of_send_lcd_cmd_long 475C  
                  __end_of_Default_ISR 4CE6         __end_of_PIN_MANAGER_Initialize 3C20  
                __size_of_run_checksum 0028                _eaDogM_WriteStringAtPos 45C8  
            __size_of_UART2_Initialize 005E  
