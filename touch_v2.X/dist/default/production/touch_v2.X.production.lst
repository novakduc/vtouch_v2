

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec  9 03:39:29 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=4,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=4,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=4,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=4,class=CODE,delta=1
   178                           	psect	text153,global,reloc=4,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=4,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=4,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	text163,global,reloc=4,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=4,class=CODE,delta=1
   191                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   192                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   193                           	psect	text166,global,reloc=4,class=CODE,delta=1
   194                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   195                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   196  0000                     
   197                           ; Version 2.10
   198                           ; Generated 31/07/2019 GMT
   199                           ; 
   200                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   201                           ; All rights reserved.
   202                           ; 
   203                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   204                           ; 
   205                           ; Redistribution and use in source and binary forms, with or without modification, are
   206                           ; permitted provided that the following conditions are met:
   207                           ; 
   208                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   209                           ;        conditions and the following disclaimer.
   210                           ; 
   211                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   212                           ;        of conditions and the following disclaimer in the documentation and/or other
   213                           ;        materials provided with the distribution.
   214                           ; 
   215                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   216                           ;        software without specific prior written permission.
   217                           ; 
   218                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   219                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   220                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   221                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   222                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   223                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   224                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   225                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   226                           ; 
   227                           ; 
   228                           ; Code-generator required, PIC18F57K42 Definitions
   229                           ; 
   230                           ; SFR Addresses
   231  0000                     
   232 ;;_k	offset	0
   233 ;;_j	offset	1
   234 ;;_i	offset	2
   235 ;;_inp_index	offset	3
   236 ;;_mode	offset	4
   237 ;;_channel	offset=-1 (param)
   238 ;;_s	offset=-2 (param)
   239 ;;_cmd	offset=-1 (param)
   240 ;;_cmd	offset=-1 (param)
   241 ;;_data	offset=-1 (param)
   242 ;;__this	offset=-2 (param)
   243 ;;_cvoltage	offset=-4 (param)
   244 ;;_h	offset=-1 (param)
   245 ;;_h	offset=-1 (param)
   246 ;;_i	offset=-1 (param)
   247 ;;_cmd	offset=-1 (param)
   248 ;;_i	offset	0
   249 ;;_chan	offset=-1 (param)
   250 ;;_to_what	offset=-2 (param)
   251 ;;_u	offset	0
   252 ;;_s	offset=-2 (param)
   253 ;;_index	offset=-1 (param)
   254 ;;_arg	offset	0
   255 ;;_exp	offset	4
   256 ;;_sign	offset=-1 (param)
   257 ;;_val	offset=-5 (param)
   258 ;;_h	offset=-1 (param)
   259 ;;_flipper	offset=-1 (param)
   260 ;;_f	offset	0
   261 ;;_ap	offset	6
   262 ;;_s	offset=-3 (param)
   263 ;;_fmt	offset=-5 (param)
   264 ;;_line	offset=-1 (param)
   265 ;;_vterm	offset=-2 (param)
   266 ;;_numMilliseconds	offset=-2 (param)
   267 ;;_vterm	offset=-1 (param)
   268 ;;_r	offset=-1 (param)
   269 ;;_c	offset=-2 (param)
   270 ;;_strPtr	offset=-4 (param)
   271 ;;_strPtr	offset=-1 (param)
   272 ;;_delay	offset=-4 (param)
   273 ;;_strPtr	offset=-2 (param)
   274 ;;__this	offset=-2 (param)
   275 ;;_clearBuffer	offset=-3 (param)
   276 ;;_s	offset	0
   277 ;;_k	offset	2
   278 ;;_dest	offset=-2 (param)
   279 ;;_c	offset=-4 (param)
   280 ;;_n	offset=-6 (param)
   281 ;;_ap	offset	0
   282 ;;_fmt	offset=-3 (param)
   283 ;;_cfmt	offset	0
   284 ;;_fp	offset=-2 (param)
   285 ;;_fmt	offset=-4 (param)
   286 ;;_ap	offset=-6 (param)
   287 ;;_vfpfcnvrt$5212	offset	0
   288 ;;_vfpfcnvrt$5223	offset	2
   289 ;;_vfpfcnvrt$5211	offset	4
   290 ;;_llu	offset	6
   291 ;;_ll	offset	14
   292 ;;_f	offset	22
   293 ;;_ct	offset	26
   294 ;;_cp	offset	29
   295 ;;_c	offset	31
   296 ;;_fp	offset=-2 (param)
   297 ;;_fmt	offset=-4 (param)
   298 ;;_ap	offset=-6 (param)
   299 ;;_xtoa$5197	offset	0
   300 ;;_xtoa$5196	offset	2
   301 ;;_n	offset	4
   302 ;;_c	offset	12
   303 ;;_i	offset	14
   304 ;;_w	offset	16
   305 ;;_p	offset	18
   306 ;;_fp	offset=-2 (param)
   307 ;;_d	offset=-10 (param)
   308 ;;_x	offset=-11 (param)
   309 ;;_toupper$5996	offset	0
   310 ;;_c	offset=-2 (param)
   311 ;;_c	offset=-2 (param)
   312 ;;_c	offset=-2 (param)
   313 ;;_n	offset	0
   314 ;;_i	offset	8
   315 ;;_w	offset	10
   316 ;;_p	offset	12
   317 ;;_fp	offset=-2 (param)
   318 ;;_d	offset=-10 (param)
   319 ;;_counter	offset	0
   320 ;;_dividend	offset=-8 (param)
   321 ;;_divisor	offset=-16 (param)
   322 ;;_quotient	offset	0
   323 ;;_counter	offset	8
   324 ;;_dividend	offset=-8 (param)
   325 ;;_divisor	offset=-16 (param)
   326 ;;_r	offset	0
   327 ;;_l	offset	2
   328 ;;__l	offset=-2 (param)
   329 ;;__r	offset=-4 (param)
   330 ;;_n	offset=-6 (param)
   331 ;;_nuls	offset	0
   332 ;;_l	offset	7
   333 ;;_p	offset	9
   334 ;;_cp	offset	11
   335 ;;_w	offset	13
   336 ;;_i	offset	15
   337 ;;_fp	offset=-2 (param)
   338 ;;_s	offset=-4 (param)
   339 ;;_efgtoa$5169	offset	0
   340 ;;_efgtoa$5168	offset	2
   341 ;;_efgtoa$5167	offset	4
   342 ;;_efgtoa$5163	offset	6
   343 ;;_efgtoa$5159	offset	8
   344 ;;_efgtoa$5158	offset	10
   345 ;;_u	offset	12
   346 ;;_g	offset	16
   347 ;;_l	offset	20
   348 ;;_h	offset	24
   349 ;;_ou	offset	28
   350 ;;_n	offset	32
   351 ;;_e	offset	34
   352 ;;_i	offset	36
   353 ;;_w	offset	38
   354 ;;_p	offset	40
   355 ;;_sign	offset	42
   356 ;;_d	offset	44
   357 ;;_ne	offset	46
   358 ;;_m	offset	48
   359 ;;_pp	offset	50
   360 ;;_t	offset	52
   361 ;;_mode	offset	54
   362 ;;_nmode	offset	55
   363 ;;_fp	offset=-2 (param)
   364 ;;_f	offset=-6 (param)
   365 ;;_c	offset=-7 (param)
   366 ;;_tolower$5981	offset	0
   367 ;;_c	offset=-2 (param)
   368 ;;_c	offset=-2 (param)
   369 ;;_d	offset	0
   370 ;;_s	offset	2
   371 ;;_dest	offset=-2 (param)
   372 ;;_src	offset=-4 (param)
   373 ;;_u	offset	0
   374 ;;_m	offset	4
   375 ;;_e	offset	8
   376 ;;_x	offset=-4 (param)
   377 ;;_u	offset	0
   378 ;;_e	offset	4
   379 ;;_x	offset=-4 (param)
   380 ;;_exp1	offset	0
   381 ;;_sign1	offset	1
   382 ;;_f1	offset=-4 (param)
   383 ;;_f1	offset=-4 (param)
   384 ;;_ff1	offset=-4 (param)
   385 ;;_ff2	offset=-8 (param)
   386 ;;_ff1	offset=-4 (param)
   387 ;;_ff2	offset=-8 (param)
   388 ;;_grs	offset	0
   389 ;;_rem	offset	4
   390 ;;_new_exp	offset	8
   391 ;;_aexp	offset	10
   392 ;;_bexp	offset	11
   393 ;;_sign	offset	12
   394 ;;_b	offset=-4 (param)
   395 ;;_a	offset=-8 (param)
   396 ;;_sign	offset	0
   397 ;;_counter	offset	1
   398 ;;_dividend	offset=-2 (param)
   399 ;;_divisor	offset=-4 (param)
   400 ;;_quotient	offset	0
   401 ;;_sign	offset	2
   402 ;;_counter	offset	3
   403 ;;_dividend	offset=-2 (param)
   404 ;;_divisor	offset=-4 (param)
   405 ;;_dtoa$5135	offset	0
   406 ;;_n	offset	2
   407 ;;_i	offset	10
   408 ;;_s	offset	12
   409 ;;_w	offset	14
   410 ;;_p	offset	16
   411 ;;_fp	offset=-2 (param)
   412 ;;_d	offset=-10 (param)
   413 ;;_a	offset=-2 (param)
   414 ;;_sign	offset	0
   415 ;;_counter	offset	1
   416 ;;_dividend	offset=-8 (param)
   417 ;;_divisor	offset=-16 (param)
   418 ;;_quotient	offset	0
   419 ;;_sign	offset	8
   420 ;;_counter	offset	9
   421 ;;_dividend	offset=-8 (param)
   422 ;;_divisor	offset=-16 (param)
   423 ;;_w	offset	0
   424 ;;_fp	offset=-2 (param)
   425 ;;_c	offset=-3 (param)
   426 ;;_w	offset	0
   427 ;;_i	offset	2
   428 ;;_fp	offset=-2 (param)
   429 ;;_buf	offset=-4 (param)
   430 ;;_p	offset=-6 (param)
   431 ;;_a	offset	0
   432 ;;_s	offset=-2 (param)
   433 ;;_i	offset	0
   434 ;;_c	offset	2
   435 ;;_s	offset=-2 (param)
   436 ;;_fp	offset=-4 (param)
   437 ;;_c	offset=-2 (param)
   438 ;;_fp	offset=-4 (param)
   439 ;;_c	offset=-1 (param)
   440 ;;__this	offset=-2 (param)
   441 ;;_c	offset=-3 (param)
   442 ;;_atoi$5719	offset	0
   443 ;;_atoi$5717	offset	2
   444 ;;_atoi$5718	offset	4
   445 ;;_n	offset	5
   446 ;;_neg	offset	7
   447 ;;_s	offset=-2 (param)
   448 ;;_isspace$5757	offset	0
   449 ;;_c	offset=-2 (param)
   450 ;;_c	offset=-2 (param)
   451 ;;_vterm	offset=-1 (param)
   452 ;;_new_response_info	offset=-1 (param)
   453 ;;_new_response_info	offset=-1 (param)
   454 ;;_level	offset=-2 (param)
   455 ;;_dutyValue	offset=-2 (param)
   456 ;;_timer	offset=-1 (param)
   457 ;;_timer	offset=-1 (param)
   458 ;;_count	offset=-3 (param)
   459 ;;_h	offset=-1 (param)
   460 ;;_lp_speed	offset	0
   461 ;;_new	offset=-4 (param)
   462 ;;_bn	offset=-5 (param)
   463 ;;_slow	offset=-6 (param)
   464 ;;_b	offset=-4 (param)
   465 ;;_a	offset=-8 (param)
   466 ;;_grs	offset	0
   467 ;;_bexp	offset	1
   468 ;;_aexp	offset	2
   469 ;;_signs	offset	3
   470 ;;_b	offset=-4 (param)
   471 ;;_a	offset=-8 (param)
   472 ;;_prod	offset	0
   473 ;;_grs	offset	4
   474 ;;_temp	offset	8
   475 ;;_bexp	offset	10
   476 ;;_aexp	offset	11
   477 ;;_sign	offset	12
   478 ;;_b	offset=-4 (param)
   479 ;;_a	offset=-8 (param)
   480 ;;_InterruptHandler	offset=-3 (param)
   481 ;;_InterruptHandler	offset=-3 (param)
   482 ;;_InterruptHandler	offset=-3 (param)
   483 ;;_InterruptHandler	offset=-3 (param)
   484 ;;_InterruptHandler	offset=-3 (param)
   485 ;;_InterruptHandler	offset=-3 (param)
   486 ;;_state	offset	0
   487 ;;_InterruptHandler	offset=-3 (param)
   488 ;;_InterruptHandler	offset=-3 (param)
   489 ;;_InterruptHandler	offset=-3 (param)
   490 ;;_InterruptHandler	offset=-3 (param)
   491 ;;_i	offset	0
   492 ;;_sw_value	offset	1
   493 ;;_timerVal	offset=-2 (param)
   494 ;;_timerVal	offset=-2 (param)
   495 ;;_log_ptr	offset	0
   496 ;;_temp	offset	2
   497 ;;_f	offset	0
   498 ;;_ap	offset	6
   499 ;;_s	offset=-3 (param)
   500 ;;_fmt	offset=-5 (param)
   501 ;;_cfmt	offset	0
   502 ;;_fp	offset=-2 (param)
   503 ;;_fmt	offset=-4 (param)
   504 ;;_ap	offset=-6 (param)
   505 ;;_vfpfcnvrt$5212	offset	0
   506 ;;_vfpfcnvrt$5223	offset	2
   507 ;;_vfpfcnvrt$5211	offset	4
   508 ;;_llu	offset	6
   509 ;;_ll	offset	14
   510 ;;_f	offset	22
   511 ;;_ct	offset	26
   512 ;;_cp	offset	29
   513 ;;_c	offset	31
   514 ;;_fp	offset=-2 (param)
   515 ;;_fmt	offset=-4 (param)
   516 ;;_ap	offset=-6 (param)
   517 ;;_xtoa$5197	offset	0
   518 ;;_xtoa$5196	offset	2
   519 ;;_n	offset	4
   520 ;;_c	offset	12
   521 ;;_i	offset	14
   522 ;;_w	offset	16
   523 ;;_p	offset	18
   524 ;;_fp	offset=-2 (param)
   525 ;;_d	offset=-10 (param)
   526 ;;_x	offset=-11 (param)
   527 ;;_toupper$5996	offset	0
   528 ;;_c	offset=-2 (param)
   529 ;;_c	offset=-2 (param)
   530 ;;_c	offset=-2 (param)
   531 ;;_n	offset	0
   532 ;;_i	offset	8
   533 ;;_w	offset	10
   534 ;;_p	offset	12
   535 ;;_fp	offset=-2 (param)
   536 ;;_d	offset=-10 (param)
   537 ;;_counter	offset	0
   538 ;;_dividend	offset=-8 (param)
   539 ;;_divisor	offset=-16 (param)
   540 ;;_quotient	offset	0
   541 ;;_counter	offset	8
   542 ;;_dividend	offset=-8 (param)
   543 ;;_divisor	offset=-16 (param)
   544 ;;_r	offset	0
   545 ;;_l	offset	2
   546 ;;__l	offset=-2 (param)
   547 ;;__r	offset=-4 (param)
   548 ;;_n	offset=-6 (param)
   549 ;;_nuls	offset	0
   550 ;;_l	offset	7
   551 ;;_p	offset	9
   552 ;;_cp	offset	11
   553 ;;_w	offset	13
   554 ;;_i	offset	15
   555 ;;_fp	offset=-2 (param)
   556 ;;_s	offset=-4 (param)
   557 ;;_efgtoa$5169	offset	0
   558 ;;_efgtoa$5168	offset	2
   559 ;;_efgtoa$5167	offset	4
   560 ;;_efgtoa$5163	offset	6
   561 ;;_efgtoa$5159	offset	8
   562 ;;_efgtoa$5158	offset	10
   563 ;;_u	offset	12
   564 ;;_g	offset	16
   565 ;;_l	offset	20
   566 ;;_h	offset	24
   567 ;;_ou	offset	28
   568 ;;_n	offset	32
   569 ;;_e	offset	34
   570 ;;_i	offset	36
   571 ;;_w	offset	38
   572 ;;_p	offset	40
   573 ;;_sign	offset	42
   574 ;;_d	offset	44
   575 ;;_ne	offset	46
   576 ;;_m	offset	48
   577 ;;_pp	offset	50
   578 ;;_t	offset	52
   579 ;;_mode	offset	54
   580 ;;_nmode	offset	55
   581 ;;_fp	offset=-2 (param)
   582 ;;_f	offset=-6 (param)
   583 ;;_c	offset=-7 (param)
   584 ;;_tolower$5981	offset	0
   585 ;;_c	offset=-2 (param)
   586 ;;_c	offset=-2 (param)
   587 ;;_d	offset	0
   588 ;;_s	offset	2
   589 ;;_dest	offset=-2 (param)
   590 ;;_src	offset=-4 (param)
   591 ;;_u	offset	0
   592 ;;_m	offset	4
   593 ;;_e	offset	8
   594 ;;_x	offset=-4 (param)
   595 ;;_u	offset	0
   596 ;;_e	offset	4
   597 ;;_x	offset=-4 (param)
   598 ;;_exp1	offset	0
   599 ;;_sign1	offset	1
   600 ;;_f1	offset=-4 (param)
   601 ;;_b	offset=-4 (param)
   602 ;;_a	offset=-8 (param)
   603 ;;_grs	offset	0
   604 ;;_bexp	offset	1
   605 ;;_aexp	offset	2
   606 ;;_signs	offset	3
   607 ;;_b	offset=-4 (param)
   608 ;;_a	offset=-8 (param)
   609 ;;_f1	offset=-4 (param)
   610 ;;_prod	offset	0
   611 ;;_grs	offset	4
   612 ;;_temp	offset	8
   613 ;;_bexp	offset	10
   614 ;;_aexp	offset	11
   615 ;;_sign	offset	12
   616 ;;_b	offset=-4 (param)
   617 ;;_a	offset=-8 (param)
   618 ;;_ff1	offset=-4 (param)
   619 ;;_ff2	offset=-8 (param)
   620 ;;_ff1	offset=-4 (param)
   621 ;;_ff2	offset=-8 (param)
   622 ;;_grs	offset	0
   623 ;;_rem	offset	4
   624 ;;_new_exp	offset	8
   625 ;;_aexp	offset	10
   626 ;;_bexp	offset	11
   627 ;;_sign	offset	12
   628 ;;_b	offset=-4 (param)
   629 ;;_a	offset=-8 (param)
   630 ;;_sign	offset	0
   631 ;;_counter	offset	1
   632 ;;_dividend	offset=-2 (param)
   633 ;;_divisor	offset=-4 (param)
   634 ;;_quotient	offset	0
   635 ;;_sign	offset	2
   636 ;;_counter	offset	3
   637 ;;_dividend	offset=-2 (param)
   638 ;;_divisor	offset=-4 (param)
   639 ;;_dtoa$5135	offset	0
   640 ;;_n	offset	2
   641 ;;_i	offset	10
   642 ;;_s	offset	12
   643 ;;_w	offset	14
   644 ;;_p	offset	16
   645 ;;_fp	offset=-2 (param)
   646 ;;_d	offset=-10 (param)
   647 ;;_a	offset=-2 (param)
   648 ;;_sign	offset	0
   649 ;;_counter	offset	1
   650 ;;_dividend	offset=-8 (param)
   651 ;;_divisor	offset=-16 (param)
   652 ;;_quotient	offset	0
   653 ;;_sign	offset	8
   654 ;;_counter	offset	9
   655 ;;_dividend	offset=-8 (param)
   656 ;;_divisor	offset=-16 (param)
   657 ;;_w	offset	0
   658 ;;_fp	offset=-2 (param)
   659 ;;_c	offset=-3 (param)
   660 ;;_w	offset	0
   661 ;;_i	offset	2
   662 ;;_fp	offset=-2 (param)
   663 ;;_buf	offset=-4 (param)
   664 ;;_p	offset=-6 (param)
   665 ;;_a	offset	0
   666 ;;_s	offset=-2 (param)
   667 ;;_i	offset	0
   668 ;;_c	offset	2
   669 ;;_s	offset=-2 (param)
   670 ;;_fp	offset=-4 (param)
   671 ;;_c	offset=-2 (param)
   672 ;;_fp	offset=-4 (param)
   673 ;;_c	offset=-1 (param)
   674 ;;__this	offset=-2 (param)
   675 ;;_c	offset=-3 (param)
   676 ;;_atoi$5719	offset	0
   677 ;;_atoi$5717	offset	2
   678 ;;_atoi$5718	offset	4
   679 ;;_n	offset	5
   680 ;;_neg	offset	7
   681 ;;_s	offset=-2 (param)
   682 ;;_isspace$5757	offset	0
   683 ;;_c	offset=-2 (param)
   684 ;;_c	offset=-2 (param)
   685 ;;_dsize	offset=-2 (param)
   686 ;;_arg	offset	0
   687 ;;_exp	offset	4
   688 ;;_sign	offset=-1 (param)
   689 ;;_val	offset=-5 (param)
   690 ;;_cvoltage	offset=-4 (param)
   691 ;;_timer	offset=-1 (param)
   692 ;;_count	offset=-3 (param)
   693 ;;_channel	offset=-1 (param)
   694 ;;_i	offset	0
   695                           
   696                           	psect	idataBIGRAM
   697  0170E2                     __pidataBIGRAM:
   698                           	opt callstack 0
   699                           
   700                           ;initializer for _port_data
   701  0170E2  FF                 	db	255
   702  0170E3  00                 	db	0
   703  0170E4  FF                 	db	255
   704  0170E5  00                 	db	0
   705  0170E6  FF                 	db	255
   706  0170E7  00                 	db	0
   707  0170E8  FF                 	db	255
   708  0170E9  00                 	db	0
   709  0170EA  FF                 	db	255
   710  0170EB  00                 	db	0
   711  0170EC  FF                 	db	255
   712  0170ED  00                 	db	0
   713  0170EE  FF                 	db	255
   714  0170EF  00                 	db	0
   715  0170F0  FF                 	db	255
   716  0170F1  00                 	db	0
   717  0170F2  00                 	db	0
   718  0170F3  00                 	db	0
   719  0170F4  00                 	db	0
   720  0170F5  00                 	db	0
   721  0170F6  00                 	db	0
   722  0170F7  00                 	db	0
   723  0170F8  00                 	db	0
   724  0170F9  00                 	db	0
   725  0170FA  00                 	db	0
   726  0170FB  00                 	db	0
   727  0170FC  00                 	db	0
   728  0170FD  00                 	db	0
   729  0170FE  00                 	db	0
   730  0170FF  00                 	db	0
   731  017100  00                 	db	0
   732  017101  00                 	db	0
   733  017102  00                 	db	0
   734  017103  00                 	db	0
   735  017104  00                 	db	0
   736  017105  00                 	db	0
   737  017106  00                 	db	0
   738  017107  00                 	db	0
   739  017108  00                 	db	0
   740  017109  00                 	db	0
   741  01710A  00                 	db	0
   742  01710B  00                 	db	0
   743  01710C  00                 	db	0
   744  01710D  00                 	db	0
   745  01710E  00                 	db	0
   746  01710F  00                 	db	0
   747  017110  00                 	db	0
   748  017111  00                 	db	0
   749  017112  00                 	db	0
   750  017113  00                 	db	0
   751  017114  00                 	db	0
   752  017115  00                 	db	0
   753  017116  00                 	db	0
   754  017117  00                 	db	0
   755  017118  00                 	db	0
   756  017119  00                 	db	0
   757  01711A  00                 	db	0
   758  01711B  00                 	db	0
   759  01711C  00                 	db	0
   760  01711D  00                 	db	0
   761  01711E  00                 	db	0
   762  01711F  00                 	db	0
   763  017120  00                 	db	0
   764  017121  00                 	db	0
   765  017122  00                 	db	0
   766  017123  00                 	db	0
   767  017124  00                 	db	0
   768  017125  00                 	db	0
   769  017126  00                 	db	0
   770  017127  00                 	db	0
   771  017128  00                 	db	0
   772  017129  00                 	db	0
   773  01712A  00                 	db	0
   774  01712B  00                 	db	0
   775  01712C  00                 	db	0
   776  01712D  00                 	db	0
   777  01712E  00                 	db	0
   778  01712F  00                 	db	0
   779  017130  00                 	db	0
   780  017131  00                 	db	0
   781  017132  00                 	db	0
   782  017133  00                 	db	0
   783  017134  00                 	db	0
   784  017135  00                 	db	0
   785  017136  00                 	db	0
   786  017137  00                 	db	0
   787  017138  00                 	db	0
   788  017139  00                 	db	0
   789  01713A  00                 	db	0
   790  01713B  00                 	db	0
   791  01713C  00                 	db	0
   792  01713D  00                 	db	0
   793  01713E  00                 	db	0
   794  01713F  00                 	db	0
   795  017140  00                 	db	0
   796  017141  00                 	db	0
   797  017142  00                 	db	0
   798  017143  00                 	db	0
   799  017144  00                 	db	0
   800  017145  00                 	db	0
   801  017146  00                 	db	0
   802  017147  00                 	db	0
   803  017148  00                 	db	0
   804  017149  00                 	db	0
   805  01714A  00                 	db	0
   806  01714B  00                 	db	0
   807  01714C  00                 	db	0
   808  01714D  00                 	db	0
   809  01714E  00                 	db	0
   810  01714F  00                 	db	0
   811  017150  00                 	db	0
   812  017151  00                 	db	0
   813  017152  00                 	db	0
   814  017153  00                 	db	0
   815  017154  00                 	db	0
   816  017155  00                 	db	0
   817  017156  00                 	db	0
   818  017157  00                 	db	0
   819  017158  00                 	db	0
   820  017159  00                 	db	0
   821  01715A  00                 	db	0
   822  01715B  00                 	db	0
   823  01715C  00                 	db	0
   824  01715D  00                 	db	0
   825  01715E  00                 	db	0
   826  01715F  00                 	db	0
   827  017160  00                 	db	0
   828  017161  00                 	db	0
   829  017162  00                 	db	0
   830  017163  00                 	db	0
   831  017164  00                 	db	0
   832  017165  00                 	db	0
   833  017166  00                 	db	0
   834  017167  00                 	db	0
   835  017168  00                 	db	0
   836  017169  00                 	db	0
   837  01716A  00                 	db	0
   838  01716B  00                 	db	0
   839  01716C  00                 	db	0
   840  01716D  00                 	db	0
   841  01716E  00                 	db	0
   842  01716F  00                 	db	0
   843  017170  00                 	db	0
   844  017171  00                 	db	0
   845  017172  00                 	db	0
   846  017173  00                 	db	0
   847  017174  00                 	db	0
   848  017175  00                 	db	0
   849  017176  00                 	db	0
   850  017177  00                 	db	0
   851  017178  00                 	db	0
   852  017179  00                 	db	0
   853  01717A  00                 	db	0
   854  01717B  00                 	db	0
   855  01717C  00                 	db	0
   856  01717D  00                 	db	0
   857  01717E  00                 	db	0
   858  01717F  00                 	db	0
   859  017180  00                 	db	0
   860  017181  00                 	db	0
   861  017182  00                 	db	0
   862  017183  00                 	db	0
   863  017184  00                 	db	0
   864  017185  00                 	db	0
   865  017186  00                 	db	0
   866  017187  00                 	db	0
   867  017188  00                 	db	0
   868  017189  00                 	db	0
   869  01718A  00                 	db	0
   870  01718B  00                 	db	0
   871  01718C  00                 	db	0
   872  01718D  00                 	db	0
   873  01718E  00                 	db	0
   874  01718F  00                 	db	0
   875  017190  00                 	db	0
   876  017191  00                 	db	0
   877  017192  00                 	db	0
   878  017193  00                 	db	0
   879  017194  00                 	db	0
   880  017195  00                 	db	0
   881  017196  00                 	db	0
   882  017197  00                 	db	0
   883  017198  00                 	db	0
   884  017199  00                 	db	0
   885  01719A  00                 	db	0
   886  01719B  00                 	db	0
   887  01719C  00                 	db	0
   888  01719D  00                 	db	0
   889  01719E  00                 	db	0
   890  01719F  00                 	db	0
   891  0171A0  00                 	db	0
   892  0171A1  00                 	db	0
   893  0171A2  00                 	db	0
   894  0171A3  00                 	db	0
   895  0171A4  00                 	db	0
   896  0171A5  00                 	db	0
   897  0171A6  00                 	db	0
   898  0171A7  00                 	db	0
   899  0171A8  00                 	db	0
   900  0171A9  00                 	db	0
   901  0171AA  00                 	db	0
   902  0171AB  00                 	db	0
   903  0171AC  00                 	db	0
   904  0171AD  00                 	db	0
   905  0171AE  00                 	db	0
   906  0171AF  00                 	db	0
   907  0171B0  00                 	db	0
   908  0171B1  00                 	db	0
   909  0171B2  00                 	db	0
   910  0171B3  00                 	db	0
   911  0171B4  00                 	db	0
   912  0171B5  00                 	db	0
   913  0171B6  00                 	db	0
   914  0171B7  00                 	db	0
   915  0171B8  00                 	db	0
   916  0171B9  00                 	db	0
   917  0171BA  00                 	db	0
   918  0171BB  00                 	db	0
   919  0171BC  00                 	db	0
   920  0171BD  00                 	db	0
   921  0171BE  00                 	db	0
   922  0171BF  00                 	db	0
   923  0171C0  00                 	db	0
   924  0171C1  00                 	db	0
   925  0171C2  00                 	db	0
   926  0171C3  00                 	db	0
   927  0171C4  00                 	db	0
   928  0171C5  00                 	db	0
   929  0171C6  00                 	db	0
   930  0171C7  00                 	db	0
   931  0171C8  00                 	db	0
   932  0171C9  00                 	db	0
   933  0171CA  00                 	db	0
   934  0171CB  00                 	db	0
   935  0171CC  00                 	db	0
   936  0171CD  00                 	db	0
   937  0171CE  00                 	db	0
   938  0171CF  00                 	db	0
   939  0171D0  00                 	db	0
   940  0171D1  00                 	db	0
   941  0171D2  00                 	db	0
   942  0171D3  00                 	db	0
   943  0171D4  00                 	db	0
   944  0171D5  00                 	db	0
   945  0171D6  00                 	db	0
   946  0171D7  00                 	db	0
   947  0171D8  00                 	db	0
   948  0171D9  00                 	db	0
   949  0171DA  00                 	db	0
   950  0171DB  00                 	db	0
   951  0171DC  00                 	db	0
   952  0171DD  00                 	db	0
   953  0171DE  00                 	db	0
   954  0171DF  00                 	db	0
   955  0171E0  00                 	db	0
   956  0171E1  00                 	db	0
   957  0171E2  00                 	db	0
   958  0171E3  00                 	db	0
   959  0171E4  00                 	db	0
   960  0171E5  00                 	db	0
   961  0171E6  00                 	db	0
   962  0171E7  00                 	db	0
   963  0171E8  00                 	db	0
   964  0171E9  00                 	db	0
   965  0171EA  00                 	db	0
   966  0171EB  00                 	db	0
   967  0171EC  00                 	db	0
   968  0171ED  00                 	db	0
   969  0171EE  00                 	db	0
   970  0171EF  00                 	db	0
   971  0171F0  00                 	db	0
   972  0171F1  00                 	db	0
   973  0171F2  00                 	db	0
   974  0171F3  00                 	db	0
   975  0171F4  00                 	db	0
   976  0171F5  00                 	db	0
   977  0171F6  00                 	db	0
   978  0171F7  00                 	db	0
   979  0171F8  00                 	db	0
   980  0171F9  00                 	db	0
   981  0171FA  00                 	db	0
   982  0171FB  00                 	db	0
   983  0171FC  00                 	db	0
   984  0171FD  00                 	db	0
   985  0171FE  00                 	db	0
   986  0171FF  00                 	db	0
   987  017200  00                 	db	0
   988  017201  00                 	db	0
   989  017202  00                 	db	0
   990  017203  00                 	db	0
   991  017204  00                 	db	0
   992  017205  00                 	db	0
   993  017206  00                 	db	0
   994  017207  00                 	db	0
   995  017208  00                 	db	0
   996  017209  00                 	db	0
   997  01720A  00                 	db	0
   998  01720B  00                 	db	0
   999  01720C  00                 	db	0
  1000  01720D  00                 	db	0
  1001  01720E  00                 	db	0
  1002  01720F  00                 	db	0
  1003  017210  00                 	db	0
  1004  017211  00                 	db	0
  1005  017212  00                 	db	0
  1006  017213  00                 	db	0
  1007  017214  00                 	db	0
  1008  017215  00                 	db	0
  1009  017216  00                 	db	0
  1010  017217  00                 	db	0
  1011  017218  00                 	db	0
  1012  017219  00                 	db	0
  1013  01721A  00                 	db	0
  1014  01721B  00                 	db	0
  1015  01721C  00                 	db	0
  1016  01721D  00                 	db	0
  1017  01721E  00                 	db	0
  1018  01721F  00                 	db	0
  1019  017220  00                 	db	0
  1020  017221  00                 	db	0
  1021  017222  00                 	db	0
  1022  017223  00                 	db	0
  1023  017224  00                 	db	0
  1024  017225  00                 	db	0
  1025  017226  00                 	db	0
  1026  017227  00                 	db	0
  1027  017228  00                 	db	0
  1028  017229  00                 	db	0
  1029  01722A  00                 	db	0
  1030  01722B  00                 	db	0
  1031  01722C  00                 	db	0
  1032  01722D  00                 	db	0
  1033  01722E  00                 	db	0
  1034  01722F  00                 	db	0
  1035  017230  00                 	db	0
  1036  017231  00                 	db	0
  1037  017232  00                 	db	0
  1038  017233  00                 	db	0
  1039  017234  00                 	db	0
  1040  017235  00                 	db	0
  1041  017236  00                 	db	0
  1042  017237  00                 	db	0
  1043  017238  00                 	db	0
  1044  017239  00                 	db	0
  1045  01723A  00                 	db	0
  1046  01723B  00                 	db	0
  1047  01723C  00                 	db	0
  1048  01723D  00                 	db	0
  1049  01723E  00                 	db	0
  1050  01723F  00                 	db	0
  1051  017240  00                 	db	0
  1052  017241  00                 	db	0
  1053  017242  00                 	db	0
  1054  017243  00                 	db	0
  1055  017244  00                 	db	0
  1056  017245  00                 	db	0
  1057  017246  00                 	db	0
  1058  017247  00                 	db	0
  1059  017248  00                 	db	0
  1060  017249  00                 	db	0
  1061  01724A  00                 	db	0
  1062  01724B  00                 	db	0
  1063  01724C  00                 	db	0
  1064  01724D  00                 	db	0
  1065  01724E  00                 	db	0
  1066  01724F  00                 	db	0
  1067  017250  00                 	db	0
  1068  017251  00                 	db	0
  1069  017252  00                 	db	0
  1070  017253  00                 	db	0
  1071  017254  00                 	db	0
  1072  017255  00                 	db	0
  1073  017256  00                 	db	0
  1074  017257  00                 	db	0
  1075  017258  00                 	db	0
  1076  017259  00                 	db	0
  1077  01725A  00                 	db	0
  1078  01725B  00                 	db	0
  1079  01725C  00                 	db	0
  1080  01725D  00                 	db	0
  1081  01725E  00                 	db	0
  1082  01725F  00                 	db	0
  1083  017260  00                 	db	0
  1084  017261  00                 	db	0
  1085  017262  00                 	db	0
  1086  017263  00                 	db	0
  1087  017264  00                 	db	0
  1088  017265  00                 	db	0
  1089  017266  00                 	db	0
  1090  017267  00                 	db	0
  1091  017268  00                 	db	0
  1092  017269  00                 	db	0
  1093  01726A  00                 	db	0
  1094  01726B  00                 	db	0
  1095  01726C  00                 	db	0
  1096  01726D  00                 	db	0
  1097  01726E  00                 	db	0
  1098  01726F  00                 	db	0
  1099  017270  00                 	db	0
  1100  017271  00                 	db	0
  1101  017272  00                 	db	0
  1102  017273  00                 	db	0
  1103  017274  00                 	db	0
  1104  017275  00                 	db	0
  1105  017276  00                 	db	0
  1106  017277  00                 	db	0
  1107  017278  00                 	db	0
  1108  017279  00                 	db	0
  1109  01727A  00                 	db	0
  1110  01727B  00                 	db	0
  1111  01727C  00                 	db	0
  1112  01727D  00                 	db	0
  1113  01727E  00                 	db	0
  1114  01727F  00                 	db	0
  1115  017280  00                 	db	0
  1116  017281  00                 	db	0
  1117  017282  00                 	db	0
  1118  017283  00                 	db	0
  1119  017284  00                 	db	0
  1120  017285  00                 	db	0
  1121  017286  00                 	db	0
  1122  017287  00                 	db	0
  1123  017288  00                 	db	0
  1124  017289  00                 	db	0
  1125  01728A  00                 	db	0
  1126  01728B  00                 	db	0
  1127  01728C  00                 	db	0
  1128  01728D  00                 	db	0
  1129  01728E  00                 	db	0
  1130  01728F  00                 	db	0
  1131  017290  00                 	db	0
  1132  017291  00                 	db	0
  1133  017292  00                 	db	0
  1134  017293  00                 	db	0
  1135  017294  00                 	db	0
  1136  017295  00                 	db	0
  1137  017296  00                 	db	0
  1138  017297  00                 	db	0
  1139  017298  00                 	db	0
  1140  017299  00                 	db	0
  1141  01729A  00                 	db	0
  1142  01729B  00                 	db	0
  1143  01729C  00                 	db	0
  1144  01729D  00                 	db	0
  1145  01729E  00                 	db	0
  1146  01729F  00                 	db	0
  1147  0172A0  00                 	db	0
  1148  0172A1  00                 	db	0
  1149  0172A2  00                 	db	0
  1150  0172A3  00                 	db	0
  1151  0172A4  00                 	db	0
  1152  0172A5  00                 	db	0
  1153  0172A6  00                 	db	0
  1154  0172A7  00                 	db	0
  1155  0172A8  00                 	db	0
  1156  0172A9  00                 	db	0
  1157  0172AA  00                 	db	0
  1158  0172AB  00                 	db	0
  1159  0172AC  00                 	db	0
  1160  0172AD  00                 	db	0
  1161  0172AE  00                 	db	0
  1162  0172AF  00                 	db	0
  1163  0172B0  00                 	db	0
  1164  0172B1  00                 	db	0
  1165  0172B2  00                 	db	0
  1166  0172B3  00                 	db	0
  1167  0172B4  00                 	db	0
  1168  0172B5  00                 	db	0
  1169  0172B6  00                 	db	0
  1170  0172B7  00                 	db	0
  1171  0172B8  00                 	db	0
  1172  0172B9  00                 	db	0
  1173  0172BA  00                 	db	0
  1174  0172BB  00                 	db	0
  1175  0172BC  00                 	db	0
  1176  0172BD  00                 	db	0
  1177  0172BE  00                 	db	0
  1178  0172BF  00                 	db	0
  1179  0172C0  00                 	db	0
  1180  0172C1  00                 	db	0
  1181  0172C2  00                 	db	0
  1182  0172C3  00                 	db	0
  1183  0172C4  00                 	db	0
  1184  0172C5  00                 	db	0
  1185  0172C6  00                 	db	0
  1186  0172C7  00                 	db	0
  1187  0172C8  00                 	db	0
  1188  0172C9  00                 	db	0
  1189  0172CA  00                 	db	0
  1190  0172CB  00                 	db	0
  1191  0172CC  00                 	db	0
  1192  0172CD  00                 	db	0
  1193  0172CE  00                 	db	0
  1194  0172CF  00                 	db	0
  1195  0172D0  00                 	db	0
  1196  0172D1  00                 	db	0
  1197  0172D2  00                 	db	0
  1198  0172D3  00                 	db	0
  1199  0172D4  00                 	db	0
  1200  0172D5  00                 	db	0
  1201  0172D6  00                 	db	0
  1202  0172D7  00                 	db	0
  1203  0172D8  00                 	db	0
  1204  0172D9  00                 	db	0
  1205  0172DA  00                 	db	0
  1206  0172DB  00                 	db	0
  1207  0172DC  00                 	db	0
  1208  0172DD  00                 	db	0
  1209  0172DE  00                 	db	0
  1210  0172DF  00                 	db	0
  1211  0172E0  00                 	db	0
  1212  0172E1  00                 	db	0
  1213                           
  1214                           	psect	idataBANK0
  1215  01A14A                     __pidataBANK0:
  1216                           	opt callstack 0
  1217                           
  1218                           ;initializer for _R
  1219  01A14A  0000               	dw	0
  1220  01A14C  0000               	dw	0
  1221  01A14E  0000               	dw	0
  1222  01A150  0000               	dw	0
  1223  01A152  0000               	dw	0
  1224  01A154  0000               	dw	0
  1225  01A156  0000               	dw	0
  1226  01A158  0000               	dw	0
  1227  01A15A  0000               	dw	0
  1228  01A15C  0000               	dw	0
  1229  01A15E  0000               	dw	0
  1230  01A160  0000               	dw	0
  1231  01A162  0000               	dw	0
  1232  01A164  0000               	dw	0
  1233  01A166  0000               	dw	0
  1234  01A168  0000               	dw	0
  1235  01A16A  0F67               	dw	3943
  1236  01A16C  0F8F               	dw	3983
  1237  01A16E  00                 	db	0
  1238  01A16F  0000               	dw	0
  1239  01A171  00                 	db	0
  1240                           
  1241                           ;initializer for _H
  1242  01A172  00                 	db	0
  1243  01A173  00                 	db	0
  1244  01A174  01                 	db	1
  1245  01A175  00                 	db	0
  1246  01A176  01                 	db	1
  1247  01A177  00                 	db	0
  1248  01A178  00                 	db	0
  1249                           
  1250                           	psect	idataBANK1
  1251  018AA2                     __pidataBANK1:
  1252                           	opt callstack 0
  1253                           
  1254                           ;initializer for _C
  1255  018AA2  0000               	dw	0
  1256  018AA4  0000               	dw	0
  1257  018AA6  0000               	dw	0
  1258  018AA8  0000               	dw	0
  1259  018AAA  0000               	dw	0
  1260  018AAC  0000               	dw	0
  1261  018AAE  0000               	dw	0
  1262  018AB0  0000               	dw	0
  1263  018AB2  0000               	dw	0
  1264  018AB4  0000               	dw	0
  1265  018AB6  0000               	dw	0
  1266  018AB8  0000               	dw	0
  1267  018ABA  0000               	dw	0
  1268  018ABC  0000               	dw	0
  1269  018ABE  0000               	dw	0
  1270  018AC0  0000               	dw	0
  1271  018AC2  0000               	dw	0
  1272  018AC4  0000               	dw	0
  1273  018AC6  0000               	dw	0
  1274  018AC8  0000               	dw	0
  1275  018ACA  0000               	dw	0
  1276  018ACC  0000               	dw	0
  1277  018ACE  0000               	dw	0
  1278  018AD0  0000               	dw	0
  1279  018AD2  0000               	dw	0
  1280  018AD4  0000               	dw	0
  1281  018AD6  0000               	dw	0
  1282  018AD8  0000               	dw	0
  1283  018ADA  0000               	dw	0
  1284  018ADC  0000               	dw	0
  1285  018ADE  0000               	dw	0
  1286  018AE0  0000               	dw	0
  1287  018AE2  0000               	dw	0
  1288  018AE4  0000               	dw	0
  1289  018AE6  0000               	dw	0
  1290  018AE8  0000               	dw	0
  1291  018AEA  0000               	dw	0
  1292  018AEC  0000               	dw	0
  1293  018AEE  0000               	dw	0
  1294  018AF0  0000               	dw	0
  1295  018AF2  0000               	dw	0
  1296  018AF4  0000               	dw	0
  1297  018AF6  0000               	dw	0
  1298  018AF8  0000               	dw	0
  1299  018AFA  0000               	dw	0
  1300  018AFC  0000               	dw	0
  1301  018AFE  0000               	dw	0
  1302  018B00  0000               	dw	0
  1303  018B02  0000               	dw	0
  1304  018B04  0000               	dw	0
  1305  018B06  0000               	dw	0
  1306  018B08  0000               	dw	0
  1307  018B0A  0000               	dw	0
  1308  018B0C  0000               	dw	0
  1309  018B0E  0000               	dw	0
  1310  018B10  0000               	dw	0
  1311  018B12  0000               	dw	0
  1312  018B14  0000               	dw	0
  1313  018B16  0000               	dw	0
  1314  018B18  0000               	dw	0
  1315  018B1A  0000               	dw	0
  1316  018B1C  0000               	dw	0
  1317  018B1E  0000               	dw	0
  1318  018B20  42FA               	dw	17146
  1319  018B22  00                 	db	0
  1320  018B23  00                 	db	0
  1321  018B24  00                 	db	0
  1322  018B25  00                 	db	0
  1323  018B26  00                 	db	0
  1324  018B27  00                 	db	0
  1325  018B28  00                 	db	0
  1326  018B29  00                 	db	0
  1327  018B2A  00                 	db	0
  1328  018B2B  00                 	db	0
  1329  018B2C  00                 	db	0
  1330  018B2D  00                 	db	0
  1331  018B2E  00                 	db	0
  1332  018B2F  00                 	db	0
  1333  018B30  00                 	db	0
  1334  018B31  00                 	db	0
  1335  018B32  00                 	db	0
  1336  018B33  00                 	db	0
  1337  018B34  00                 	db	0
  1338  018B35  00                 	db	0
  1339  018B36  00                 	db	0
  1340  018B37  00                 	db	0
  1341  018B38  00                 	db	0
  1342  018B39  00                 	db	0
  1343  018B3A  00                 	db	0
  1344  018B3B  00                 	db	0
  1345  018B3C  00                 	db	0
  1346  018B3D  00                 	db	0
  1347  018B3E  00                 	db	0
  1348  018B3F  00                 	db	0
  1349  018B40  00                 	db	0
  1350  018B41  00                 	db	0
  1351  018B42  00                 	db	0
  1352  018B43  00                 	db	0
  1353  018B44  00                 	db	0
  1354  018B45  00                 	db	0
  1355  018B46  00                 	db	0
  1356  018B47  00                 	db	0
  1357  018B48  00                 	db	0
  1358  018B49  00                 	db	0
  1359  018B4A  00                 	db	0
  1360  018B4B  00                 	db	0
  1361  018B4C  00                 	db	0
  1362  018B4D  00                 	db	0
  1363  018B4E  00                 	db	0
  1364  018B4F  00                 	db	0
  1365  018B50  00                 	db	0
  1366  018B51  00                 	db	0
  1367  018B52  00                 	db	0
  1368  018B53  00                 	db	0
  1369  018B54  00                 	db	0
  1370  018B55  00                 	db	0
  1371  018B56  00                 	db	0
  1372  018B57  00                 	db	0
  1373  018B58  00                 	db	0
  1374  018B59  00                 	db	0
  1375  018B5A  00                 	db	0
  1376  018B5B  00                 	db	0
  1377  018B5C  00                 	db	0
  1378  018B5D  00                 	db	0
  1379  018B5E  00                 	db	0
  1380  018B5F  00                 	db	0
  1381  018B60  00                 	db	0
  1382  018B61  00                 	db	0
  1383  018B62  00                 	db	0
  1384  018B63  00                 	db	0
  1385  018B64  00                 	db	0
  1386  018B65  00                 	db	0
  1387  018B66  00                 	db	0
  1388  018B67  00                 	db	0
  1389  018B68  00                 	db	0
  1390  018B69  00                 	db	0
  1391  018B6A  00                 	db	0
  1392  018B6B  00                 	db	0
  1393  018B6C  00                 	db	0
  1394  018B6D  00                 	db	0
  1395  018B6E  00                 	db	0
  1396  018B6F  00                 	db	0
  1397  018B70  00                 	db	0
  1398  018B71  00                 	db	0
  1399  018B72  00                 	db	0
  1400  018B73  00                 	db	0
  1401  018B74  00                 	db	0
  1402                           
  1403                           ;initializer for stoa@F1166
  1404  018B75  28                 	db	40
  1405  018B76  6E                 	db	110
  1406  018B77  75                 	db	117
  1407  018B78  6C                 	db	108
  1408  018B79  6C                 	db	108
  1409  018B7A  29                 	db	41
  1410  018B7B  00                 	db	0
  1411                           
  1412                           	psect	idataBANK2
  1413  018D14                     __pidataBANK2:
  1414                           	opt callstack 0
  1415                           
  1416                           ;initializer for _V
  1417  018D14  00                 	db	0
  1418  018D15  00                 	db	0
  1419  018D16  00                 	db	0
  1420  018D17  00                 	db	0
  1421  018D18  00                 	db	0
  1422  018D19  00                 	db	0
  1423  018D1A  00                 	db	0
  1424  018D1B  00                 	db	0
  1425  018D1C  00                 	db	0
  1426  018D1D  00                 	db	0
  1427  018D1E  00                 	db	0
  1428  018D1F  00                 	db	0
  1429  018D20  00                 	db	0
  1430  018D21  00                 	db	0
  1431  018D22  00                 	db	0
  1432  018D23  00                 	db	0
  1433  018D24  00                 	db	0
  1434  018D25  00                 	db	0
  1435  018D26  00                 	db	0
  1436  018D27  00                 	db	0
  1437  018D28  00                 	db	0
  1438  018D29  00                 	db	0
  1439  018D2A  00                 	db	0
  1440  018D2B  00                 	db	0
  1441  018D2C  00                 	db	0
  1442  018D2D  00                 	db	0
  1443  018D2E  00                 	db	0
  1444  018D2F  00                 	db	0
  1445  018D30  00                 	db	0
  1446  018D31  00                 	db	0
  1447  018D32  00                 	db	0
  1448  018D33  00                 	db	0
  1449  018D34  00                 	db	0
  1450  018D35  00                 	db	0
  1451  018D36  00                 	db	0
  1452  018D37  00                 	db	0
  1453  018D38  00                 	db	0
  1454  018D39  00                 	db	0
  1455  018D3A  00                 	db	0
  1456  018D3B  00                 	db	0
  1457  018D3C  00                 	db	0
  1458  018D3D  00                 	db	0
  1459  018D3E  00                 	db	0
  1460  018D3F  00                 	db	0
  1461  018D40  00                 	db	0
  1462  018D41  00                 	db	0
  1463  018D42  00                 	db	0
  1464  018D43  00                 	db	0
  1465  018D44  00                 	db	0
  1466  018D45  00                 	db	0
  1467  018D46  00                 	db	0
  1468  018D47  00                 	db	0
  1469  018D48  00                 	db	0
  1470  018D49  00                 	db	0
  1471  018D4A  00                 	db	0
  1472  018D4B  00                 	db	0
  1473  018D4C  00                 	db	0
  1474  018D4D  00                 	db	0
  1475  018D4E  00                 	db	0
  1476  018D4F  00                 	db	0
  1477  018D50  00                 	db	0
  1478  018D51  00                 	db	0
  1479  018D52  00                 	db	0
  1480  018D53  00                 	db	0
  1481  018D54  00                 	db	0
  1482  018D55  00                 	db	0
  1483  018D56  00                 	db	0
  1484  018D57  00                 	db	0
  1485  018D58  00                 	db	0
  1486  018D59  00                 	db	0
  1487  018D5A  00                 	db	0
  1488  018D5B  00                 	db	0
  1489  018D5C  00                 	db	0
  1490  018D5D  00                 	db	0
  1491  018D5E  00                 	db	0
  1492  018D5F  00                 	db	0
  1493  018D60  00                 	db	0
  1494  018D61  00                 	db	0
  1495  018D62  00                 	db	0
  1496  018D63  00                 	db	0
  1497  018D64  00                 	db	0
  1498  018D65  00                 	db	0
  1499  018D66  00                 	db	0
  1500  018D67  00                 	db	0
  1501  018D68  00                 	db	0
  1502  018D69  00                 	db	0
  1503  018D6A  00                 	db	0
  1504  018D6B  00                 	db	0
  1505  018D6C  00                 	db	0
  1506  018D6D  00                 	db	0
  1507  018D6E  00                 	db	0
  1508  018D6F  00                 	db	0
  1509  018D70  00                 	db	0
  1510  018D71  00                 	db	0
  1511  018D72  00                 	db	0
  1512  018D73  00                 	db	0
  1513  018D74  00                 	db	0
  1514  018D75  00                 	db	0
  1515  018D76  00                 	db	0
  1516  018D77  00                 	db	0
  1517  018D78  00                 	db	0
  1518  018D79  00                 	db	0
  1519  018D7A  00                 	db	0
  1520  018D7B  00                 	db	0
  1521  018D7C  00                 	db	0
  1522  018D7D  00                 	db	0
  1523  018D7E  00                 	db	0
  1524  018D7F  00                 	db	0
  1525  018D80  00                 	db	0
  1526  018D81  00                 	db	0
  1527  018D82  00                 	db	0
  1528  018D83  00                 	db	0
  1529  018D84  00                 	db	0
  1530  018D85  00                 	db	0
  1531  018D86  00                 	db	0
  1532  018D87  00                 	db	0
  1533  018D88  00                 	db	0
  1534  018D89  00                 	db	0
  1535  018D8A  00                 	db	0
  1536  018D8B  00                 	db	0
  1537  018D8C  00                 	db	0
  1538  018D8D  00                 	db	0
  1539  018D8E  00                 	db	0
  1540  018D8F  00                 	db	0
  1541  018D90  00                 	db	0
  1542  018D91  00                 	db	0
  1543  018D92  00                 	db	0
  1544  018D93  00                 	db	0
  1545  018D94  00                 	db	0
  1546  018D95  0000               	dw	0
  1547  018D97  0000               	dw	0
  1548  018D99  0000               	dw	0
  1549  018D9B  0000               	dw	0
  1550  018D9D  00                 	db	0
  1551  018D9E  00                 	db	0
  1552  018D9F  00                 	db	0
  1553  018DA0  00                 	db	0
  1554  018DA1  00                 	db	0
  1555  018DA2  00                 	db	0
  1556  018DA3  0000               	dw	0
  1557  018DA5  0000               	dw	0
  1558  018DA7  0000               	dw	0
  1559  018DA9  0000               	dw	0
  1560  018DAB  0000               	dw	0
  1561  018DAD  0000               	dw	0
  1562  018DAF  00                 	db	0
  1563  018DB0  00                 	db	0
  1564  018DB1  00                 	db	0
  1565  018DB2  00                 	db	0
  1566  018DB3  00                 	db	0
  1567  018DB4  00                 	db	0
  1568  018DB5  00                 	db	0
  1569  018DB6  00                 	db	0
  1570  018DB7  00                 	db	0
  1571  018DB8  00                 	db	0
  1572  018DB9  0000               	dw	0
  1573  018DBB  0000               	dw	0
  1574  018DBD  2D                 	db	45
  1575  018DBE  00                 	db	0
  1576  018DBF  00                 	db	0
  1577  018DC0  0000               	dw	0
  1578  018DC2  0000               	dw	0
  1579  018DC4  0000               	dw	0
  1580  018DC6  0000               	dw	0
  1581  018DC8  0000               	dw	0
  1582  018DCA  0000               	dw	0
  1583  018DCC  0000               	dw	0
  1584  018DCE  0000               	dw	0
  1585                           
  1586                           	psect	mediumconst
  1587  00FC70                     __pmediumconst:
  1588                           	opt callstack 0
  1589  00FC70  00                 	db	0
  1590  00FC71                     _BVSOC_TABLE:
  1591                           	opt callstack 0
  1592  00FC71  59D8               	dw	23000
  1593  00FC73  0000               	dw	0
  1594  00FC75  0005               	dw	5
  1595  00FC77  0000               	dw	0
  1596  00FC79  5B68               	dw	23400
  1597  00FC7B  0000               	dw	0
  1598  00FC7D  000A               	dw	10
  1599  00FC7F  0000               	dw	0
  1600  00FC81  5C30               	dw	23600
  1601  00FC83  0000               	dw	0
  1602  00FC85  0014               	dw	20
  1603  00FC87  0000               	dw	0
  1604  00FC89  5E38               	dw	24120
  1605  00FC8B  0000               	dw	0
  1606  00FC8D  0019               	dw	25
  1607  00FC8F  0000               	dw	0
  1608  00FC91  5E88               	dw	24200
  1609  00FC93  0000               	dw	0
  1610  00FC95  001E               	dw	30
  1611  00FC97  0000               	dw	0
  1612  00FC99  5F78               	dw	24440
  1613  00FC9B  0000               	dw	0
  1614  00FC9D  0028               	dw	40
  1615  00FC9F  0000               	dw	0
  1616  00FCA1  5FDC               	dw	24540
  1617  00FCA3  0000               	dw	0
  1618  00FCA5  002D               	dw	45
  1619  00FCA7  0000               	dw	0
  1620  00FCA9  6018               	dw	24600
  1621  00FCAB  0000               	dw	0
  1622  00FCAD  0032               	dw	50
  1623  00FCAF  0000               	dw	0
  1624  00FCB1  6046               	dw	24646
  1625  00FCB3  0000               	dw	0
  1626  00FCB5  0035               	dw	53
  1627  00FCB7  0000               	dw	0
  1628  00FCB9  607C               	dw	24700
  1629  00FCBB  0000               	dw	0
  1630  00FCBD  0037               	dw	55
  1631  00FCBF  0000               	dw	0
  1632  00FCC1  60AE               	dw	24750
  1633  00FCC3  0000               	dw	0
  1634  00FCC5  0039               	dw	57
  1635  00FCC7  0000               	dw	0
  1636  00FCC9  60E0               	dw	24800
  1637  00FCCB  0000               	dw	0
  1638  00FCCD  003C               	dw	60
  1639  00FCCF  0000               	dw	0
  1640  00FCD1  6112               	dw	24850
  1641  00FCD3  0000               	dw	0
  1642  00FCD5  003F               	dw	63
  1643  00FCD7  0000               	dw	0
  1644  00FCD9  6176               	dw	24950
  1645  00FCDB  0000               	dw	0
  1646  00FCDD  0043               	dw	67
  1647  00FCDF  0000               	dw	0
  1648  00FCE1  61A8               	dw	25000
  1649  00FCE3  0000               	dw	0
  1650  00FCE5  0046               	dw	70
  1651  00FCE7  0000               	dw	0
  1652  00FCE9  61BC               	dw	25020
  1653  00FCEB  0000               	dw	0
  1654  00FCED  0048               	dw	72
  1655  00FCEF  0000               	dw	0
  1656  00FCF1  61D0               	dw	25040
  1657  00FCF3  0000               	dw	0
  1658  00FCF5  004B               	dw	75
  1659  00FCF7  0000               	dw	0
  1660  00FCF9  61DA               	dw	25050
  1661  00FCFB  0000               	dw	0
  1662  00FCFD  0050               	dw	80
  1663  00FCFF  0000               	dw	0
  1664  00FD01  61E4               	dw	25060
  1665  00FD03  0000               	dw	0
  1666  00FD05  0055               	dw	85
  1667  00FD07  0000               	dw	0
  1668  00FD09  61F8               	dw	25080
  1669  00FD0B  0000               	dw	0
  1670  00FD0D  005A               	dw	90
  1671  00FD0F  0000               	dw	0
  1672  00FD11  6208               	dw	25096
  1673  00FD13  0000               	dw	0
  1674  00FD15  005C               	dw	92
  1675  00FD17  0000               	dw	0
  1676  00FD19  6222               	dw	25122
  1677  00FD1B  0000               	dw	0
  1678  00FD1D  005D               	dw	93
  1679  00FD1F  0000               	dw	0
  1680  00FD21  6234               	dw	25140
  1681  00FD23  0000               	dw	0
  1682  00FD25  005F               	dw	95
  1683  00FD27  0000               	dw	0
  1684  00FD29  6248               	dw	25160
  1685  00FD2B  0000               	dw	0
  1686  00FD2D  0061               	dw	97
  1687  00FD2F  0000               	dw	0
  1688  00FD31  625C               	dw	25180
  1689  00FD33  0000               	dw	0
  1690  00FD35  0064               	dw	100
  1691  00FD37  0000               	dw	0
  1692  00FD39  6658               	dw	26200
  1693  00FD3B  0000               	dw	0
  1694  00FD3D  005A               	dw	90
  1695  00FD3F  0000               	dw	0
  1696  00FD41                     __end_of_BVSOC_TABLE:
  1697                           	opt callstack 0
  1698  00FD41                     _T:
  1699                           	opt callstack 0
  1700  00FD41  63                 	db	99
  1701  00FD42  6F                 	db	111
  1702  00FD43  6D                 	db	109
  1703  00FD44  6D                 	db	109
  1704  00FD45  61                 	db	97
  1705  00FD46  6E                 	db	110
  1706  00FD47  64                 	db	100
  1707  00FD48  73                 	db	115
  1708  00FD49  20                 	db	32
  1709  00FD4A  31                 	db	49
  1710  00FD4B  00                 	db	0
  1711  00FD4C  00                 	db	0
  1712  00FD4D  00                 	db	0
  1713  00FD4E  00                 	db	0
  1714  00FD4F  00                 	db	0
  1715  00FD50  00                 	db	0
  1716  00FD51  00                 	db	0
  1717  00FD52  00                 	db	0
  1718  00FD53  64                 	db	100
  1719  00FD54  69                 	db	105
  1720  00FD55  73                 	db	115
  1721  00FD56  70                 	db	112
  1722  00FD57  6C                 	db	108
  1723  00FD58  61                 	db	97
  1724  00FD59  79                 	db	121
  1725  00FD5A  73                 	db	115
  1726  00FD5B  20                 	db	32
  1727  00FD5C  31                 	db	49
  1728  00FD5D  00                 	db	0
  1729  00FD5E  00                 	db	0
  1730  00FD5F  00                 	db	0
  1731  00FD60  00                 	db	0
  1732  00FD61  00                 	db	0
  1733  00FD62  00                 	db	0
  1734  00FD63  00                 	db	0
  1735  00FD64  00                 	db	0
  1736  00FD65  63                 	db	99
  1737  00FD66  6F                 	db	111
  1738  00FD67  6D                 	db	109
  1739  00FD68  6D                 	db	109
  1740  00FD69  61                 	db	97
  1741  00FD6A  6E                 	db	110
  1742  00FD6B  64                 	db	100
  1743  00FD6C  73                 	db	115
  1744  00FD6D  20                 	db	32
  1745  00FD6E  32                 	db	50
  1746  00FD6F  00                 	db	0
  1747  00FD70  00                 	db	0
  1748  00FD71  00                 	db	0
  1749  00FD72  00                 	db	0
  1750  00FD73  00                 	db	0
  1751  00FD74  00                 	db	0
  1752  00FD75  00                 	db	0
  1753  00FD76  00                 	db	0
  1754  00FD77  64                 	db	100
  1755  00FD78  69                 	db	105
  1756  00FD79  73                 	db	115
  1757  00FD7A  70                 	db	112
  1758  00FD7B  6C                 	db	108
  1759  00FD7C  61                 	db	97
  1760  00FD7D  79                 	db	121
  1761  00FD7E  73                 	db	115
  1762  00FD7F  20                 	db	32
  1763  00FD80  32                 	db	50
  1764  00FD81  00                 	db	0
  1765  00FD82  00                 	db	0
  1766  00FD83  00                 	db	0
  1767  00FD84  00                 	db	0
  1768  00FD85  00                 	db	0
  1769  00FD86  00                 	db	0
  1770  00FD87  00                 	db	0
  1771  00FD88  00                 	db	0
  1772  00FD89  63                 	db	99
  1773  00FD8A  6F                 	db	111
  1774  00FD8B  6D                 	db	109
  1775  00FD8C  6D                 	db	109
  1776  00FD8D  61                 	db	97
  1777  00FD8E  6E                 	db	110
  1778  00FD8F  64                 	db	100
  1779  00FD90  73                 	db	115
  1780  00FD91  20                 	db	32
  1781  00FD92  33                 	db	51
  1782  00FD93  00                 	db	0
  1783  00FD94  00                 	db	0
  1784  00FD95  00                 	db	0
  1785  00FD96  00                 	db	0
  1786  00FD97  00                 	db	0
  1787  00FD98  00                 	db	0
  1788  00FD99  00                 	db	0
  1789  00FD9A  00                 	db	0
  1790  00FD9B  64                 	db	100
  1791  00FD9C  69                 	db	105
  1792  00FD9D  73                 	db	115
  1793  00FD9E  70                 	db	112
  1794  00FD9F  6C                 	db	108
  1795  00FDA0  61                 	db	97
  1796  00FDA1  79                 	db	121
  1797  00FDA2  73                 	db	115
  1798  00FDA3  20                 	db	32
  1799  00FDA4  33                 	db	51
  1800  00FDA5  00                 	db	0
  1801  00FDA6  00                 	db	0
  1802  00FDA7  00                 	db	0
  1803  00FDA8  00                 	db	0
  1804  00FDA9  00                 	db	0
  1805  00FDAA  00                 	db	0
  1806  00FDAB  00                 	db	0
  1807  00FDAC  00                 	db	0
  1808  00FDAD  63                 	db	99
  1809  00FDAE  6F                 	db	111
  1810  00FDAF  6D                 	db	109
  1811  00FDB0  6D                 	db	109
  1812  00FDB1  61                 	db	97
  1813  00FDB2  6E                 	db	110
  1814  00FDB3  64                 	db	100
  1815  00FDB4  73                 	db	115
  1816  00FDB5  20                 	db	32
  1817  00FDB6  34                 	db	52
  1818  00FDB7  00                 	db	0
  1819  00FDB8  00                 	db	0
  1820  00FDB9  00                 	db	0
  1821  00FDBA  00                 	db	0
  1822  00FDBB  00                 	db	0
  1823  00FDBC  00                 	db	0
  1824  00FDBD  00                 	db	0
  1825  00FDBE  00                 	db	0
  1826  00FDBF  64                 	db	100
  1827  00FDC0  69                 	db	105
  1828  00FDC1  73                 	db	115
  1829  00FDC2  70                 	db	112
  1830  00FDC3  6C                 	db	108
  1831  00FDC4  61                 	db	97
  1832  00FDC5  79                 	db	121
  1833  00FDC6  73                 	db	115
  1834  00FDC7  20                 	db	32
  1835  00FDC8  34                 	db	52
  1836  00FDC9  00                 	db	0
  1837  00FDCA  00                 	db	0
  1838  00FDCB  00                 	db	0
  1839  00FDCC  00                 	db	0
  1840  00FDCD  00                 	db	0
  1841  00FDCE  00                 	db	0
  1842  00FDCF  00                 	db	0
  1843  00FDD0  00                 	db	0
  1844  00FDD1                     __end_of_T:
  1845                           	opt callstack 0
  1846  00FDD1  0000               	dw	0
  1847  00FDD3  3F80               	dw	16256
  1848  00FDD5  0000               	dw	0
  1849  00FDD7  3FC0               	dw	16320
  1850  00FDD9                     __end_of_bp:
  1851                           	opt callstack 0
  1852  00FDD9  AA00               	dw	43520
  1853  00FDDB  3FB8               	dw	16312
  1854  00FDDD                     __end_of_ivln2_h:
  1855                           	opt callstack 0
  1856  00FDDD  23C6               	dw	9158
  1857  00FDDF  B8F6               	dw	47350
  1858  00FDE1                     __end_of_cp_l:
  1859                           	opt callstack 0
  1860  00FDE1  4000               	dw	16384
  1861  00FDE3  3F76               	dw	16246
  1862  00FDE5                     __end_of_cp_h:
  1863                           	opt callstack 0
  1864  0000                     _IVTADL	set	14493
  1865  0000                     _IVTADH	set	14494
  1866  0000                     _IVTADU	set	14495
  1867  0000                     _PIR6bits	set	14758
  1868  0000                     _PIR4bits	set	14756
  1869  0000                     _PIE8bits	set	14744
  1870  0000                     _PIR8bits	set	14760
  1871  0000                     _SCANPR	set	14839
  1872  0000                     _DMA2PR	set	14836
  1873  0000                     _DMA1PR	set	14835
  1874  0000                     _MAINPR	set	14834
  1875  0000                     _ISRPR	set	14833
  1876  0000                     _PIE2bits	set	14738
  1877  0000                     _PIR2bits	set	14754
  1878  0000                     _PIE9bits	set	14745
  1879  0000                     _PIR9bits	set	14761
  1880  0000                     _PIE6bits	set	14742
  1881  0000                     _PIE3bits	set	14739
  1882  0000                     _PMD7	set	14791
  1883  0000                     _PMD6	set	14790
  1884  0000                     _PMD5	set	14789
  1885  0000                     _PMD4	set	14788
  1886  0000                     _PMD3	set	14787
  1887  0000                     _PMD2	set	14786
  1888  0000                     _PMD1	set	14785
  1889  0000                     _PMD0	set	14784
  1890  0000                     _OSCTUNE	set	14814
  1891  0000                     _OSCFRQ	set	14815
  1892  0000                     _OSCEN	set	14813
  1893  0000                     _OSCCON3	set	14811
  1894  0000                     _OSCCON1	set	14809
  1895  0000                     _IPR8bits	set	14728
  1896  0000                     _IPR9bits	set	14729
  1897  0000                     _IPR5bits	set	14725
  1898  0000                     _IPR1bits	set	14721
  1899  0000                     _IPR3bits	set	14723
  1900  0000                     _IPR6bits	set	14726
  1901  0000                     _IPR2bits	set	14722
  1902  0000                     _PIE5bits	set	14741
  1903  0000                     _PIE1bits	set	14737
  1904  0000                     _PIR5bits	set	14757
  1905  0000                     _PIR1bits	set	14753
  1906  0000                     _PLLR	set	118496
  1907  0000                     _SPI1SDIPPS	set	15071
  1908  0000                     _U1RXPPS	set	15077
  1909  0000                     _RC6PPS	set	14870
  1910  0000                     _RC5PPS	set	14869
  1911  0000                     _INT1PPS	set	15041
  1912  0000                     _RD1PPS	set	14873
  1913  0000                     _INT0PPS	set	15040
  1914  0000                     _RC3PPS	set	14867
  1915  0000                     _RB6PPS	set	14862
  1916  0000                     _SPI1SCKPPS	set	15070
  1917  0000                     _U2RXPPS	set	15080
  1918  0000                     _SLRCONF	set	14995
  1919  0000                     _SLRCONE	set	14979
  1920  0000                     _SLRCOND	set	14963
  1921  0000                     _SLRCONC	set	14947
  1922  0000                     _SLRCONB	set	14931
  1923  0000                     _SLRCONA	set	14915
  1924  0000                     _ODCOND	set	14962
  1925  0000                     _ODCONC	set	14946
  1926  0000                     _ODCONB	set	14930
  1927  0000                     _ODCONA	set	14914
  1928  0000                     _ODCONF	set	14994
  1929  0000                     _ODCONE	set	14978
  1930  0000                     _WPUC	set	14945
  1931  0000                     _WPUA	set	14913
  1932  0000                     _WPUB	set	14929
  1933  0000                     _WPUE	set	14977
  1934  0000                     _WPUF	set	14993
  1935  0000                     _WPUD	set	14961
  1936  0000                     _ANSELA	set	14912
  1937  0000                     _ANSELF	set	14992
  1938  0000                     _ANSELE	set	14976
  1939  0000                     _ANSELB	set	14928
  1940  0000                     _ANSELC	set	14944
  1941  0000                     _ANSELD	set	14960
  1942  0000                     _DMA2SSA	set	15321
  1943  0000                     _DMA1SSA	set	15353
  1944  0000                     _DMA2DSZ	set	15310
  1945  0000                     _DMA2SSZ	set	15319
  1946  0000                     _DMA2DSA	set	15312
  1947  0000                     _DMA1DSZ	set	15342
  1948  0000                     _DMA1SSZ	set	15351
  1949  0000                     _DMA1DSA	set	15344
  1950  0000                     _DMA2CON0bits	set	15324
  1951  0000                     _DMA2CON1bits	set	15325
  1952  0000                     _DMA1CON0bits	set	15356
  1953  0000                     _DMA1CON1bits	set	15357
  1954  0000                     _DMA2CON0	set	15324
  1955  0000                     _DMA2AIRQ	set	15326
  1956  0000                     _DMA2SIRQ	set	15327
  1957  0000                     _DMA2CON1	set	15325
  1958  0000                     _DMA1CON0	set	15356
  1959  0000                     _DMA1AIRQ	set	15358
  1960  0000                     _DMA1SIRQ	set	15359
  1961  0000                     _DMA1CON1	set	15357
  1962  0000                     _CLKRCON	set	15589
  1963  0000                     _CLKRCLK	set	15590
  1964  0000                     _SPI1INTFbits	set	15642
  1965  0000                     _SPI1RXB	set	15632
  1966  0000                     _SPI1TXB	set	15633
  1967  0000                     _SPI1TCNTL	set	15634
  1968  0000                     _SPI1CON0	set	15636
  1969  0000                     _SPI1CLK	set	15644
  1970  0000                     _SPI1BAUD	set	15641
  1971  0000                     _SPI1CON2	set	15638
  1972  0000                     _SPI1CON1	set	15637
  1973  0000                     _U2RXB	set	15824
  1974  0000                     _U2TXB	set	15826
  1975  0000                     _U2ERRIE	set	15842
  1976  0000                     _U2ERRIR	set	15841
  1977  0000                     _U2UIR	set	15840
  1978  0000                     _U2FIFO	set	15839
  1979  0000                     _U2BRGH	set	15838
  1980  0000                     _U2BRGL	set	15837
  1981  0000                     _U2CON2	set	15836
  1982  0000                     _U2CON1	set	15835
  1983  0000                     _U2CON0	set	15834
  1984  0000                     _U2P3L	set	15832
  1985  0000                     _U2P2L	set	15830
  1986  0000                     _U2P1L	set	15828
  1987  0000                     _U1RXB	set	15848
  1988  0000                     _U1ERRIE	set	15866
  1989  0000                     _U1ERRIR	set	15865
  1990  0000                     _U1UIR	set	15864
  1991  0000                     _U1FIFO	set	15863
  1992  0000                     _U1BRGH	set	15862
  1993  0000                     _U1BRGL	set	15861
  1994  0000                     _U1CON2	set	15860
  1995  0000                     _U1CON1	set	15859
  1996  0000                     _U1CON0	set	15858
  1997  0000                     _U1P3H	set	15857
  1998  0000                     _U1P3L	set	15856
  1999  0000                     _U1P2H	set	15855
  2000  0000                     _U1P2L	set	15854
  2001  0000                     _U1P1H	set	15853
  2002  0000                     _U1P1L	set	15852
  2003  0000                     _FVRCON	set	16065
  2004  0000                     _ADFLTRL	set	16102
  2005  0000                     _ADFLTRH	set	16103
  2006  0000                     _ADCON0bits	set	16120
  2007  0000                     _ADCON0	set	16120
  2008  0000                     _ADCLK	set	16127
  2009  0000                     _ADACT	set	16126
  2010  0000                     _ADREF	set	16125
  2011  0000                     _ADSTAT	set	16124
  2012  0000                     _ADCON3	set	16123
  2013  0000                     _ADCON2	set	16122
  2014  0000                     _ADCON1	set	16121
  2015  0000                     _ADPREH	set	16119
  2016  0000                     _ADPREL	set	16118
  2017  0000                     _ADCAP	set	16117
  2018  0000                     _ADACQH	set	16116
  2019  0000                     _ADACQL	set	16115
  2020  0000                     _ADPCH	set	16113
  2021  0000                     _ADRPT	set	16108
  2022  0000                     _ADACCU	set	16106
  2023  0000                     _ADSTPTH	set	16101
  2024  0000                     _ADSTPTL	set	16100
  2025  0000                     _ADUTHH	set	16097
  2026  0000                     _ADUTHL	set	16096
  2027  0000                     _ADLTHH	set	16095
  2028  0000                     _ADLTHL	set	16094
  2029  0000                     _CCPTMRS1bits	set	16223
  2030  0000                     _PORTFbits	set	16335
  2031  0000                     _LATCbits	set	16316
  2032  0000                     _LATDbits	set	16317
  2033  0000                     _PORTBbits	set	16331
  2034  0000                     _T3CONbits	set	16294
  2035  0000                     _T3CON	set	16294
  2036  0000                     _TMR3L	set	16292
  2037  0000                     _TMR3H	set	16293
  2038  0000                     _T3CLK	set	16297
  2039  0000                     _T3GATE	set	16296
  2040  0000                     _T3GCON	set	16295
  2041  0000                     _T2CON	set	16300
  2042  0000                     _T2TMR	set	16298
  2043  0000                     _T2PR	set	16299
  2044  0000                     _T2RST	set	16303
  2045  0000                     _T2HLT	set	16301
  2046  0000                     _T2CLKCON	set	16302
  2047  0000                     _PWM8DCL	set	16224
  2048  0000                     _PWM8DCH	set	16225
  2049  0000                     _PWM8CON	set	16226
  2050  0000                     _LATEbits	set	16318
  2051  0000                     _T5CONbits	set	16282
  2052  0000                     _T5CON	set	16282
  2053  0000                     _TMR5L	set	16280
  2054  0000                     _TMR5H	set	16281
  2055  0000                     _T5CLK	set	16285
  2056  0000                     _T5GATE	set	16284
  2057  0000                     _T5GCON	set	16283
  2058  0000                     _T6CON	set	16276
  2059  0000                     _T6TMR	set	16274
  2060  0000                     _T6PR	set	16275
  2061  0000                     _T6RST	set	16279
  2062  0000                     _T6HLT	set	16277
  2063  0000                     _T6CLKCON	set	16278
  2064  0000                     _TRISD	set	16325
  2065  0000                     _TRISC	set	16324
  2066  0000                     _TRISB	set	16323
  2067  0000                     _TRISA	set	16322
  2068  0000                     _TRISF	set	16327
  2069  0000                     _TRISE	set	16326
  2070  0000                     _LATC	set	16316
  2071  0000                     _LATB	set	16315
  2072  0000                     _LATF	set	16319
  2073  0000                     _LATA	set	16314
  2074  0000                     _LATD	set	16317
  2075  0000                     _LATE	set	16318
  2076  0000                     _IVTLOCKbits	set	16340
  2077  0000                     _IVTLOCK	set	16340
  2078  0000                     _INTCON0bits	set	16338
  2079  0000                     _GIE	set	130711
  2080  00FDE5                     STR_46:
  2081                           
  2082                           ; BSR set to: 57
  2083  00FDE5  20                 	db	32
  2084  00FDE6  25                 	db	37
  2085  00FDE7  6C                 	db	108	;'l'
  2086  00FDE8  75                 	db	117	;'u'
  2087  00FDE9  2C                 	db	44
  2088  00FDEA  25                 	db	37
  2089  00FDEB  34                 	db	52	;'4'
  2090  00FDEC  2E                 	db	46
  2091  00FDED  33                 	db	51	;'3'
  2092  00FDEE  66                 	db	102	;'f'
  2093  00FDEF  2C                 	db	44
  2094  00FDF0  25                 	db	37
  2095  00FDF1  34                 	db	52	;'4'
  2096  00FDF2  2E                 	db	46
  2097  00FDF3  33                 	db	51	;'3'
  2098  00FDF4  66                 	db	102	;'f'
  2099  00FDF5  2C                 	db	44
  2100  00FDF6  25                 	db	37
  2101  00FDF7  34                 	db	52	;'4'
  2102  00FDF8  2E                 	db	46
  2103  00FDF9  33                 	db	51	;'3'
  2104  00FDFA  66                 	db	102	;'f'
  2105  00FDFB  2C                 	db	44
  2106  00FDFC  25                 	db	37
  2107  00FDFD  34                 	db	52	;'4'
  2108  00FDFE  2E                 	db	46
  2109  00FDFF  33                 	db	51	;'3'
  2110  00FE00  66                 	db	102	;'f'
  2111  00FE01  2C                 	db	44
  2112  00FE02  25                 	db	37
  2113  00FE03  34                 	db	52	;'4'
  2114  00FE04  2E                 	db	46
  2115  00FE05  33                 	db	51	;'3'
  2116  00FE06  66                 	db	102	;'f'
  2117  00FE07  2C                 	db	44
  2118  00FE08  25                 	db	37
  2119  00FE09  34                 	db	52	;'4'
  2120  00FE0A  2E                 	db	46
  2121  00FE0B  33                 	db	51	;'3'
  2122  00FE0C  66                 	db	102	;'f'
  2123  00FE0D  2C                 	db	44
  2124  00FE0E  25                 	db	37
  2125  00FE0F  34                 	db	52	;'4'
  2126  00FE10  2E                 	db	46
  2127  00FE11  33                 	db	51	;'3'
  2128  00FE12  66                 	db	102	;'f'
  2129  00FE13  2C                 	db	44
  2130  00FE14  25                 	db	37
  2131  00FE15  34                 	db	52	;'4'
  2132  00FE16  2E                 	db	46
  2133  00FE17  33                 	db	51	;'3'
  2134  00FE18  66                 	db	102	;'f'
  2135  00FE19  2C                 	db	44
  2136  00FE1A  25                 	db	37
  2137  00FE1B  34                 	db	52	;'4'
  2138  00FE1C  2E                 	db	46
  2139  00FE1D  33                 	db	51	;'3'
  2140  00FE1E  66                 	db	102	;'f'
  2141  00FE1F  2C                 	db	44
  2142  00FE20  25                 	db	37
  2143  00FE21  34                 	db	52	;'4'
  2144  00FE22  2E                 	db	46
  2145  00FE23  33                 	db	51	;'3'
  2146  00FE24  66                 	db	102	;'f'
  2147  00FE25  2C                 	db	44
  2148  00FE26  25                 	db	37
  2149  00FE27  34                 	db	52	;'4'
  2150  00FE28  2E                 	db	46
  2151  00FE29  33                 	db	51	;'3'
  2152  00FE2A  64                 	db	100	;'d'
  2153  00FE2B  2C                 	db	44
  2154  00FE2C  25                 	db	37
  2155  00FE2D  34                 	db	52	;'4'
  2156  00FE2E  2E                 	db	46
  2157  00FE2F  33                 	db	51	;'3'
  2158  00FE30  64                 	db	100	;'d'
  2159  00FE31  0D                 	db	13
  2160  00FE32  0A                 	db	10
  2161  00FE33  00                 	db	0
  2162  00FE34                     
  2163                           ; BSR set to: 57
  2164  00FE34  20                 	db	32
  2165  00FE35  4D                 	db	77	;'M'
  2166  00FE36  65                 	db	101	;'e'
  2167  00FE37  73                 	db	115	;'s'
  2168  00FE38  67                 	db	103	;'g'
  2169  00FE39  20                 	db	32
  2170  00FE3A  25                 	db	37
  2171  00FE3B  64                 	db	100	;'d'
  2172  00FE3C  20                 	db	32
  2173  00FE3D  53                 	db	83	;'S'
  2174  00FE3E  74                 	db	116	;'t'
  2175  00FE3F  61                 	db	97	;'a'
  2176  00FE40  63                 	db	99	;'c'
  2177  00FE41  6B                 	db	107	;'k'
  2178  00FE42  20                 	db	32
  2179  00FE43  25                 	db	37
  2180  00FE44  64                 	db	100	;'d'
  2181  00FE45  20                 	db	32
  2182  00FE46  20                 	db	32
  2183  00FE47  20                 	db	32
  2184  00FE48  20                 	db	32
  2185  00FE49  20                 	db	32
  2186  00FE4A  20                 	db	32
  2187  00FE4B  00                 	db	0
  2188  00FE4C                     STR_19:
  2189                           
  2190                           ; BSR set to: 57
  2191  00FE4C  42                 	db	66	;'B'
  2192  00FE4D  41                 	db	65	;'A'
  2193  00FE4E  48                 	db	72	;'H'
  2194  00FE4F  20                 	db	32
  2195  00FE50  25                 	db	37
  2196  00FE51  33                 	db	51	;'3'
  2197  00FE52  2E                 	db	46
  2198  00FE53  32                 	db	50	;'2'
  2199  00FE54  66                 	db	102	;'f'
  2200  00FE55  20                 	db	32
  2201  00FE56  50                 	db	80	;'P'
  2202  00FE57  25                 	db	37
  2203  00FE58  33                 	db	51	;'3'
  2204  00FE59  2E                 	db	46
  2205  00FE5A  32                 	db	50	;'2'
  2206  00FE5B  66                 	db	102	;'f'
  2207  00FE5C  20                 	db	32
  2208  00FE5D  20                 	db	32
  2209  00FE5E  20                 	db	32
  2210  00FE5F  00                 	db	0
  2211  00FE60                     STR_39:
  2212                           
  2213                           ; BSR set to: 57
  2214  00FE60  20                 	db	32
  2215  00FE61  20                 	db	32
  2216  00FE62  20                 	db	32
  2217  00FE63  20                 	db	32
  2218  00FE64  20                 	db	32
  2219  00FE65  20                 	db	32
  2220  00FE66  20                 	db	32
  2221  00FE67  20                 	db	32
  2222  00FE68  20                 	db	32
  2223  00FE69  20                 	db	32
  2224  00FE6A  20                 	db	32
  2225  00FE6B  20                 	db	32
  2226  00FE6C  20                 	db	32
  2227  00FE6D  20                 	db	32
  2228  00FE6E  20                 	db	32
  2229  00FE6F  20                 	db	32
  2230  00FE70  20                 	db	32
  2231  00FE71  20                 	db	32
  2232  00FE72  00                 	db	0
  2233  00FE73                     STR_29:
  2234                           
  2235                           ; BSR set to: 57
  2236  00FE73  48                 	db	72	;'H'
  2237  00FE74  45                 	db	69	;'E'
  2238  00FE75  4C                 	db	76	;'L'
  2239  00FE76  50                 	db	80	;'P'
  2240  00FE77  20                 	db	32
  2241  00FE78  25                 	db	37
  2242  00FE79  73                 	db	115	;'s'
  2243  00FE7A  20                 	db	32
  2244  00FE7B  20                 	db	32
  2245  00FE7C  20                 	db	32
  2246  00FE7D  20                 	db	32
  2247  00FE7E  20                 	db	32
  2248  00FE7F  20                 	db	32
  2249  00FE80  20                 	db	32
  2250  00FE81  20                 	db	32
  2251  00FE82  20                 	db	32
  2252  00FE83  20                 	db	32
  2253  00FE84  20                 	db	32
  2254  00FE85  00                 	db	0
  2255  00FE86                     
  2256                           ; BSR set to: 57
  2257  00FE86  44                 	db	68	;'D'
  2258  00FE87  49                 	db	73	;'I'
  2259  00FE88  53                 	db	83	;'S'
  2260  00FE89  50                 	db	80	;'P'
  2261  00FE8A  4C                 	db	76	;'L'
  2262  00FE8B  41                 	db	65	;'A'
  2263  00FE8C  59                 	db	89	;'Y'
  2264  00FE8D  20                 	db	32
  2265  00FE8E  25                 	db	37
  2266  00FE8F  73                 	db	115	;'s'
  2267  00FE90  20                 	db	32
  2268  00FE91  20                 	db	32
  2269  00FE92  20                 	db	32
  2270  00FE93  20                 	db	32
  2271  00FE94  20                 	db	32
  2272  00FE95  20                 	db	32
  2273  00FE96  20                 	db	32
  2274  00FE97  20                 	db	32
  2275  00FE98  00                 	db	0
  2276  00FE99                     STR_20:
  2277                           
  2278                           ; BSR set to: 57
  2279  00FE99  53                 	db	83	;'S'
  2280  00FE9A  4F                 	db	79	;'O'
  2281  00FE9B  43                 	db	67	;'C'
  2282  00FE9C  20                 	db	32
  2283  00FE9D  25                 	db	37
  2284  00FE9E  64                 	db	100	;'d'
  2285  00FE9F  20                 	db	32
  2286  00FEA0  52                 	db	82	;'R'
  2287  00FEA1  55                 	db	85	;'U'
  2288  00FEA2  4E                 	db	78	;'N'
  2289  00FEA3  20                 	db	32
  2290  00FEA4  25                 	db	37
  2291  00FEA5  64                 	db	100	;'d'
  2292  00FEA6  20                 	db	32
  2293  00FEA7  20                 	db	32
  2294  00FEA8  20                 	db	32
  2295  00FEA9  20                 	db	32
  2296  00FEAA  20                 	db	32
  2297  00FEAB  00                 	db	0
  2298  00FEAC                     STR_12:
  2299                           
  2300                           ; BSR set to: 57
  2301  00FEAC  50                 	db	80	;'P'
  2302  00FEAD  56                 	db	86	;'V'
  2303  00FEAE  20                 	db	32
  2304  00FEAF  20                 	db	32
  2305  00FEB0  20                 	db	32
  2306  00FEB1  50                 	db	80	;'P'
  2307  00FEB2  57                 	db	87	;'W'
  2308  00FEB3  52                 	db	82	;'R'
  2309  00FEB4  20                 	db	32
  2310  00FEB5  25                 	db	37
  2311  00FEB6  33                 	db	51	;'3'
  2312  00FEB7  2E                 	db	46
  2313  00FEB8  32                 	db	50	;'2'
  2314  00FEB9  66                 	db	102	;'f'
  2315  00FEBA  20                 	db	32
  2316  00FEBB  20                 	db	32
  2317  00FEBC  20                 	db	32
  2318  00FEBD  20                 	db	32
  2319  00FEBE  00                 	db	0
  2320  00FEBF                     STR_14:
  2321                           
  2322                           ; BSR set to: 57
  2323  00FEBF  49                 	db	73	;'I'
  2324  00FEC0  4E                 	db	78	;'N'
  2325  00FEC1  56                 	db	86	;'V'
  2326  00FEC2  20                 	db	32
  2327  00FEC3  20                 	db	32
  2328  00FEC4  50                 	db	80	;'P'
  2329  00FEC5  57                 	db	87	;'W'
  2330  00FEC6  52                 	db	82	;'R'
  2331  00FEC7  20                 	db	32
  2332  00FEC8  25                 	db	37
  2333  00FEC9  33                 	db	51	;'3'
  2334  00FECA  2E                 	db	46
  2335  00FECB  32                 	db	50	;'2'
  2336  00FECC  66                 	db	102	;'f'
  2337  00FECD  20                 	db	32
  2338  00FECE  20                 	db	32
  2339  00FECF  20                 	db	32
  2340  00FED0  20                 	db	32
  2341  00FED1  00                 	db	0
  2342  00FED2                     STR_13:
  2343                           
  2344                           ; BSR set to: 57
  2345  00FED2  4C                 	db	76	;'L'
  2346  00FED3  4F                 	db	79	;'O'
  2347  00FED4  41                 	db	65	;'A'
  2348  00FED5  44                 	db	68	;'D'
  2349  00FED6  20                 	db	32
  2350  00FED7  50                 	db	80	;'P'
  2351  00FED8  57                 	db	87	;'W'
  2352  00FED9  52                 	db	82	;'R'
  2353  00FEDA  20                 	db	32
  2354  00FEDB  25                 	db	37
  2355  00FEDC  33                 	db	51	;'3'
  2356  00FEDD  2E                 	db	46
  2357  00FEDE  32                 	db	50	;'2'
  2358  00FEDF  66                 	db	102	;'f'
  2359  00FEE0  20                 	db	32
  2360  00FEE1  20                 	db	32
  2361  00FEE2  20                 	db	32
  2362  00FEE3  20                 	db	32
  2363  00FEE4  00                 	db	0
  2364  00FEE5                     STR_18:
  2365                           
  2366                           ; BSR set to: 57
  2367  00FEE5  42                 	db	66	;'B'
  2368  00FEE6  41                 	db	65	;'A'
  2369  00FEE7  54                 	db	84	;'T'
  2370  00FEE8  54                 	db	84	;'T'
  2371  00FEE9  20                 	db	32
  2372  00FEEA  50                 	db	80	;'P'
  2373  00FEEB  57                 	db	87	;'W'
  2374  00FEEC  52                 	db	82	;'R'
  2375  00FEED  20                 	db	32
  2376  00FEEE  25                 	db	37
  2377  00FEEF  33                 	db	51	;'3'
  2378  00FEF0  2E                 	db	46
  2379  00FEF1  32                 	db	50	;'2'
  2380  00FEF2  66                 	db	102	;'f'
  2381  00FEF3  20                 	db	32
  2382  00FEF4  20                 	db	32
  2383  00FEF5  20                 	db	32
  2384  00FEF6  20                 	db	32
  2385  00FEF7  00                 	db	0
  2386  00FEF8                     STR_16:
  2387                           
  2388                           ; BSR set to: 57
  2389  00FEF8  42                 	db	66	;'B'
  2390  00FEF9  56                 	db	86	;'V'
  2391  00FEFA  20                 	db	32
  2392  00FEFB  25                 	db	37
  2393  00FEFC  32                 	db	50	;'2'
  2394  00FEFD  2E                 	db	46
  2395  00FEFE  32                 	db	50	;'2'
  2396  00FEFF  66                 	db	102	;'f'
  2397  00FF00  20                 	db	32
  2398  00FF01  42                 	db	66	;'B'
  2399  00FF02  41                 	db	65	;'A'
  2400  00FF03  20                 	db	32
  2401  00FF04  25                 	db	37
  2402  00FF05  32                 	db	50	;'2'
  2403  00FF06  2E                 	db	46
  2404  00FF07  32                 	db	50	;'2'
  2405  00FF08  66                 	db	102	;'f'
  2406  00FF09  20                 	db	32
  2407  00FF0A  00                 	db	0
  2408  00FF0B                     STR_17:
  2409                           
  2410                           ; BSR set to: 57
  2411  00FF0B  43                 	db	67	;'C'
  2412  00FF0C  56                 	db	86	;'V'
  2413  00FF0D  20                 	db	32
  2414  00FF0E  25                 	db	37
  2415  00FF0F  32                 	db	50	;'2'
  2416  00FF10  2E                 	db	46
  2417  00FF11  32                 	db	50	;'2'
  2418  00FF12  66                 	db	102	;'f'
  2419  00FF13  20                 	db	32
  2420  00FF14  4C                 	db	76	;'L'
  2421  00FF15  41                 	db	65	;'A'
  2422  00FF16  20                 	db	32
  2423  00FF17  25                 	db	37
  2424  00FF18  32                 	db	50	;'2'
  2425  00FF19  2E                 	db	46
  2426  00FF1A  32                 	db	50	;'2'
  2427  00FF1B  66                 	db	102	;'f'
  2428  00FF1C  20                 	db	32
  2429  00FF1D  00                 	db	0
  2430  00FF1E                     STR_15:
  2431                           
  2432                           ; BSR set to: 57
  2433  00FF1E  50                 	db	80	;'P'
  2434  00FF1F  56                 	db	86	;'V'
  2435  00FF20  20                 	db	32
  2436  00FF21  25                 	db	37
  2437  00FF22  32                 	db	50	;'2'
  2438  00FF23  2E                 	db	46
  2439  00FF24  32                 	db	50	;'2'
  2440  00FF25  66                 	db	102	;'f'
  2441  00FF26  20                 	db	32
  2442  00FF27  50                 	db	80	;'P'
  2443  00FF28  41                 	db	65	;'A'
  2444  00FF29  20                 	db	32
  2445  00FF2A  25                 	db	37
  2446  00FF2B  32                 	db	50	;'2'
  2447  00FF2C  2E                 	db	46
  2448  00FF2D  32                 	db	50	;'2'
  2449  00FF2E  66                 	db	102	;'f'
  2450  00FF2F  20                 	db	32
  2451  00FF30  00                 	db	0
  2452  00FF31                     STR_8:
  2453                           
  2454                           ; BSR set to: 57
  2455  00FF31  20                 	db	32
  2456  00FF32  56                 	db	86	;'V'
  2457  00FF33  54                 	db	84	;'T'
  2458  00FF34  45                 	db	69	;'E'
  2459  00FF35  52                 	db	82	;'R'
  2460  00FF36  4D                 	db	77	;'M'
  2461  00FF37  20                 	db	32
  2462  00FF38  23                 	db	35
  2463  00FF39  32                 	db	50	;'2'
  2464  00FF3A  20                 	db	32
  2465  00FF3B  20                 	db	32
  2466  00FF3C  20                 	db	32
  2467  00FF3D  20                 	db	32
  2468  00FF3E  20                 	db	32
  2469  00FF3F  20                 	db	32
  2470  00FF40  20                 	db	32
  2471  00FF41  00                 	db	0
  2472  00FF42                     STR_4:
  2473                           
  2474                           ; BSR set to: 57
  2475  00FF42  20                 	db	32
  2476  00FF43  4E                 	db	78	;'N'
  2477  00FF44  53                 	db	83	;'S'
  2478  00FF45  41                 	db	65	;'A'
  2479  00FF46  53                 	db	83	;'S'
  2480  00FF47  50                 	db	80	;'P'
  2481  00FF48  4F                 	db	79	;'O'
  2482  00FF49  4F                 	db	79	;'O'
  2483  00FF4A  4B                 	db	75	;'K'
  2484  00FF4B  20                 	db	32
  2485  00FF4C  20                 	db	32
  2486  00FF4D  20                 	db	32
  2487  00FF4E  20                 	db	32
  2488  00FF4F  20                 	db	32
  2489  00FF50  20                 	db	32
  2490  00FF51  20                 	db	32
  2491  00FF52  00                 	db	0
  2492  00FF53                     STR_1:
  2493                           
  2494                           ; BSR set to: 57
  2495  00FF53  20                 	db	32
  2496  00FF54  4D                 	db	77	;'M'
  2497  00FF55  42                 	db	66	;'B'
  2498  00FF56  4D                 	db	77	;'M'
  2499  00FF57  43                 	db	67	;'C'
  2500  00FF58  20                 	db	32
  2501  00FF59  53                 	db	83	;'S'
  2502  00FF5A  4F                 	db	79	;'O'
  2503  00FF5B  4C                 	db	76	;'L'
  2504  00FF5C  41                 	db	65	;'A'
  2505  00FF5D  52                 	db	82	;'R'
  2506  00FF5E  4D                 	db	77	;'M'
  2507  00FF5F  4F                 	db	79	;'O'
  2508  00FF60  4E                 	db	78	;'N'
  2509  00FF61  20                 	db	32
  2510  00FF62  20                 	db	32
  2511  00FF63  00                 	db	0
  2512  00FF64                     STR_5:
  2513                           
  2514                           ; BSR set to: 57
  2515  00FF64  20                 	db	32
  2516  00FF65  53                 	db	83	;'S'
  2517  00FF66  45                 	db	69	;'E'
  2518  00FF67  51                 	db	81	;'Q'
  2519  00FF68  55                 	db	85	;'U'
  2520  00FF69  45                 	db	69	;'E'
  2521  00FF6A  4E                 	db	78	;'N'
  2522  00FF6B  43                 	db	67	;'C'
  2523  00FF6C  45                 	db	69	;'E'
  2524  00FF6D  20                 	db	32
  2525  00FF6E  54                 	db	84	;'T'
  2526  00FF6F  45                 	db	69	;'E'
  2527  00FF70  53                 	db	83	;'S'
  2528  00FF71  54                 	db	84	;'T'
  2529  00FF72  20                 	db	32
  2530  00FF73  20                 	db	32
  2531  00FF74  00                 	db	0
  2532  00FF75                     STR_11:
  2533                           
  2534                           ; BSR set to: 57
  2535  00FF75  25                 	db	37
  2536  00FF76  64                 	db	100	;'d'
  2537  00FF77  20                 	db	32
  2538  00FF78  25                 	db	37
  2539  00FF79  32                 	db	50	;'2'
  2540  00FF7A  2E                 	db	46
  2541  00FF7B  34                 	db	52	;'4'
  2542  00FF7C  66                 	db	102	;'f'
  2543  00FF7D  2C                 	db	44
  2544  00FF7E  20                 	db	32
  2545  00FF7F  25                 	db	37
  2546  00FF80  64                 	db	100	;'d'
  2547  00FF81  20                 	db	32
  2548  00FF82  20                 	db	32
  2549  00FF83  20                 	db	32
  2550  00FF84  23                 	db	35
  2551  00FF85  00                 	db	0
  2552  00FF86                     STR_9:
  2553                           
  2554                           ; BSR set to: 57
  2555  00FF86  25                 	db	37
  2556  00FF87  64                 	db	100	;'d'
  2557  00FF88  20                 	db	32
  2558  00FF89  25                 	db	37
  2559  00FF8A  32                 	db	50	;'2'
  2560  00FF8B  2E                 	db	46
  2561  00FF8C  34                 	db	52	;'4'
  2562  00FF8D  66                 	db	102	;'f'
  2563  00FF8E  20                 	db	32
  2564  00FF8F  20                 	db	32
  2565  00FF90  20                 	db	32
  2566  00FF91  25                 	db	37
  2567  00FF92  64                 	db	100	;'d'
  2568  00FF93  20                 	db	32
  2569  00FF94  20                 	db	32
  2570  00FF95  00                 	db	0
  2571  00FF96                     STR_33:
  2572                           
  2573                           ; BSR set to: 57
  2574  00FF96  76                 	db	118	;'v'
  2575  00FF97  74                 	db	116	;'t'
  2576  00FF98  65                 	db	101	;'e'
  2577  00FF99  72                 	db	114	;'r'
  2578  00FF9A  6D                 	db	109	;'m'
  2579  00FF9B  20                 	db	32
  2580  00FF9C  25                 	db	37
  2581  00FF9D  78                 	db	120	;'x'
  2582  00FF9E  3A                 	db	58	;':'
  2583  00FF9F  25                 	db	37
  2584  00FFA0  78                 	db	120	;'x'
  2585  00FFA1  20                 	db	32
  2586  00FFA2  20                 	db	32
  2587  00FFA3  20                 	db	32
  2588  00FFA4  00                 	db	0
  2589  00FFA5                     STR_2:
  2590                           
  2591                           ; BSR set to: 57
  2592  00FFA5  20                 	db	32
  2593  00FFA6  56                 	db	86	;'V'
  2594  00FFA7  65                 	db	101	;'e'
  2595  00FFA8  72                 	db	114	;'r'
  2596  00FFA9  73                 	db	115	;'s'
  2597  00FFAA  69                 	db	105	;'i'
  2598  00FFAB  6F                 	db	111	;'o'
  2599  00FFAC  6E                 	db	110	;'n'
  2600  00FFAD  20                 	db	32
  2601  00FFAE  25                 	db	37
  2602  00FFAF  73                 	db	115	;'s'
  2603  00FFB0  20                 	db	32
  2604  00FFB1  20                 	db	32
  2605  00FFB2  20                 	db	32
  2606  00FFB3  00                 	db	0
  2607  00FFB4                     STR_27:
  2608                           
  2609                           ; BSR set to: 57
  2610  00FFB4  44                 	db	68	;'D'
  2611  00FFB5  65                 	db	101	;'e'
  2612  00FFB6  63                 	db	99	;'c'
  2613  00FFB7  20                 	db	32
  2614  00FFB8  20                 	db	32
  2615  00FFB9  38                 	db	56	;'8'
  2616  00FFBA  20                 	db	32
  2617  00FFBB  32                 	db	50	;'2'
  2618  00FFBC  30                 	db	48	;'0'
  2619  00FFBD  31                 	db	49	;'1'
  2620  00FFBE  39                 	db	57	;'9'
  2621  00FFBF  00                 	db	0
  2622  00FFC0                     STR_31:
  2623                           
  2624                           ; BSR set to: 57
  2625  00FFC0  25                 	db	37
  2626  00FFC1  73                 	db	115	;'s'
  2627  00FFC2  20                 	db	32
  2628  00FFC3  20                 	db	32
  2629  00FFC4  20                 	db	32
  2630  00FFC5  20                 	db	32
  2631  00FFC6  20                 	db	32
  2632  00FFC7  20                 	db	32
  2633  00FFC8  20                 	db	32
  2634  00FFC9  00                 	db	0
  2635  00FFCA                     STR_28:
  2636                           
  2637                           ; BSR set to: 57
  2638  00FFCA  31                 	db	49	;'1'
  2639  00FFCB  39                 	db	57	;'9'
  2640  00FFCC  3A                 	db	58	;':'
  2641  00FFCD  31                 	db	49	;'1'
  2642  00FFCE  36                 	db	54	;'6'
  2643  00FFCF  3A                 	db	58	;':'
  2644  00FFD0  34                 	db	52	;'4'
  2645  00FFD1  33                 	db	51	;'3'
  2646  00FFD2  00                 	db	0
  2647  00FFD3                     STR_47:
  2648                           
  2649                           ; BSR set to: 57
  2650  00FFD3  49                 	db	73	;'I'
  2651  00FFD4  4E                 	db	78	;'N'
  2652  00FFD5  46                 	db	70	;'F'
  2653  00FFD6  00                 	db	0
  2654  00FFD7                     STR_51:
  2655                           
  2656                           ; BSR set to: 57
  2657  00FFD7  4E                 	db	78	;'N'
  2658  00FFD8  41                 	db	65	;'A'
  2659  00FFD9  4E                 	db	78	;'N'
  2660  00FFDA  00                 	db	0
  2661  00FFDB                     STR_48:
  2662                           
  2663                           ; BSR set to: 57
  2664  00FFDB  69                 	db	105	;'i'
  2665  00FFDC  6E                 	db	110	;'n'
  2666  00FFDD  66                 	db	102	;'f'
  2667  00FFDE  00                 	db	0
  2668  00FFDF                     STR_52:
  2669                           
  2670                           ; BSR set to: 57
  2671  00FFDF  6E                 	db	110	;'n'
  2672  00FFE0  61                 	db	97	;'a'
  2673  00FFE1  6E                 	db	110	;'n'
  2674  00FFE2  00                 	db	0
  2675  00FFE3                     STR_3:
  2676                           
  2677                           ; BSR set to: 57
  2678  00FFE3  31                 	db	49	;'1'
  2679  00FFE4  2E                 	db	46
  2680  00FFE5  30                 	db	48	;'0'
  2681  00FFE6  00                 	db	0
  2682  00FFE7                     STR_78:
  2683                           
  2684                           ; BSR set to: 57
  2685  00FFE7  6C                 	db	108	;'l'
  2686  00FFE8  58                 	db	88	;'X'
  2687  00FFE9  00                 	db	0
  2688  00FFEA                     STR_55:
  2689                           
  2690                           ; BSR set to: 57
  2691  00FFEA  6C                 	db	108	;'l'
  2692  00FFEB  64                 	db	100	;'d'
  2693  00FFEC  00                 	db	0
  2694  00FFED                     STR_64:
  2695                           
  2696                           ; BSR set to: 57
  2697  00FFED  6C                 	db	108	;'l'
  2698  00FFEE  66                 	db	102	;'f'
  2699  00FFEF  00                 	db	0
  2700  00FFF0                     STR_59:
  2701                           
  2702                           ; BSR set to: 57
  2703  00FFF0  6C                 	db	108	;'l'
  2704  00FFF1  69                 	db	105	;'i'
  2705  00FFF2  00                 	db	0
  2706  00FFF3                     STR_69:
  2707                           
  2708                           ; BSR set to: 57
  2709  00FFF3  6C                 	db	108	;'l'
  2710  00FFF4  75                 	db	117	;'u'
  2711  00FFF5  00                 	db	0
  2712  00FFF6                     STR_74:
  2713                           
  2714                           ; BSR set to: 57
  2715  00FFF6  6C                 	db	108	;'l'
  2716  00FFF7  78                 	db	120	;'x'
  2717  00FFF8  00                 	db	0
  2718  00FFF9                     STR_25:
  2719                           
  2720                           ; BSR set to: 57
  2721  00FFF9  25                 	db	37
  2722  00FFFA  63                 	db	99	;'c'
  2723  00FFFB  00                 	db	0
  2724  00FFFC                     STR_24:
  2725                           
  2726                           ; BSR set to: 57
  2727  00FFFC  25                 	db	37
  2728  00FFFD  73                 	db	115	;'s'
  2729  00FFFE  00                 	db	0
  2730  0000                     
  2731                           ; #config settings
  2732  00FFFF  00                 	db	0	; dummy byte at the end
  2733  0000                     
  2734                           	psect	cinit
  2735  01869E                     __pcinit:
  2736                           	opt callstack 0
  2737  01869E                     start_initialization:
  2738                           	opt callstack 0
  2739  01869E                     __initialization:
  2740                           	opt callstack 0
  2741                           
  2742                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2743                           ; load TBLPTR registers with __pidataBIGRAM
  2744  01869E  0EE2               	movlw	low __pidataBIGRAM
  2745  0186A0  6EF6               	movwf	tblptrl,c
  2746  0186A2  0E70               	movlw	high __pidataBIGRAM
  2747  0186A4  6EF7               	movwf	tblptrh,c
  2748  0186A6  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2749  0186A8  6EF8               	movwf	tblptru,c
  2750  0186AA  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2751  0186AE  EE20 F200          	lfsr	2,512
  2752  0186B2                     copy_data0:
  2753  0186B2  0009               	tblrd		*+
  2754  0186B4  006F FFD7 FFEE     	movff	tablat,postinc0
  2755  0186BA  50DD               	movf	postdec2,w,c
  2756  0186BC  50D9               	movf	fsr2l,w,c
  2757  0186BE  E1F9               	bnz	copy_data0
  2758  0186C0  50DA               	movf	fsr2h,w,c
  2759  0186C2  E1F7               	bnz	copy_data0
  2760                           
  2761                           ; Initialize objects allocated to BANK2 (188 bytes)
  2762                           ; load TBLPTR registers with __pidataBANK2
  2763  0186C4  0E14               	movlw	low __pidataBANK2
  2764  0186C6  6EF6               	movwf	tblptrl,c
  2765  0186C8  0E8D               	movlw	high __pidataBANK2
  2766  0186CA  6EF7               	movwf	tblptrh,c
  2767  0186CC  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2768  0186CE  6EF8               	movwf	tblptru,c
  2769  0186D0  EE00  F200         	lfsr	0,__pdataBANK2
  2770  0186D4  EE20 F0BC          	lfsr	2,188
  2771  0186D8                     copy_data1:
  2772  0186D8  0009               	tblrd		*+
  2773  0186DA  006F FFD7 FFEE     	movff	tablat,postinc0
  2774  0186E0  50DD               	movf	postdec2,w,c
  2775  0186E2  50D9               	movf	fsr2l,w,c
  2776  0186E4  E1F9               	bnz	copy_data1
  2777                           
  2778                           ; Initialize objects allocated to BANK1 (218 bytes)
  2779                           ; load TBLPTR registers with __pidataBANK1
  2780  0186E6  0EA2               	movlw	low __pidataBANK1
  2781  0186E8  6EF6               	movwf	tblptrl,c
  2782  0186EA  0E8A               	movlw	high __pidataBANK1
  2783  0186EC  6EF7               	movwf	tblptrh,c
  2784  0186EE  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2785  0186F0  6EF8               	movwf	tblptru,c
  2786  0186F2  EE00  F100         	lfsr	0,__pdataBANK1
  2787  0186F6  EE20 F0DA          	lfsr	2,218
  2788  0186FA                     copy_data2:
  2789  0186FA  0009               	tblrd		*+
  2790  0186FC  006F FFD7 FFEE     	movff	tablat,postinc0
  2791  018702  50DD               	movf	postdec2,w,c
  2792  018704  50D9               	movf	fsr2l,w,c
  2793  018706  E1F9               	bnz	copy_data2
  2794                           
  2795                           ; Initialize objects allocated to BANK0 (47 bytes)
  2796                           ; load TBLPTR registers with __pidataBANK0
  2797  018708  0E4A               	movlw	low __pidataBANK0
  2798  01870A  6EF6               	movwf	tblptrl,c
  2799  01870C  0EA1               	movlw	high __pidataBANK0
  2800  01870E  6EF7               	movwf	tblptrh,c
  2801  018710  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2802  018712  6EF8               	movwf	tblptru,c
  2803  018714  EE00  F0CB         	lfsr	0,__pdataBANK0
  2804  018718  EE20 F02F          	lfsr	2,47
  2805  01871C                     copy_data3:
  2806  01871C  0009               	tblrd		*+
  2807  01871E  006F FFD7 FFEE     	movff	tablat,postinc0
  2808  018724  50DD               	movf	postdec2,w,c
  2809  018726  50D9               	movf	fsr2l,w,c
  2810  018728  E1F9               	bnz	copy_data3
  2811                           
  2812                           ; Clear objects allocated to BIGRAM (290 bytes)
  2813  01872A  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  2814  01872E  EE20 F122          	lfsr	2,290
  2815  018732                     clear_0:
  2816  018732  6AEE               	clrf	postinc0,c
  2817  018734  50DD               	movf	postdec2,w,c
  2818  018736  50D9               	movf	fsr2l,w,c
  2819  018738  E1FC               	bnz	clear_0
  2820  01873A  50DA               	movf	fsr2h,w,c
  2821  01873C  E1FA               	bnz	clear_0
  2822                           
  2823                           ; Clear objects allocated to BANK5 (255 bytes)
  2824  01873E  EE01  F100         	lfsr	0,__pbssBANK5
  2825  018742  EE20 F0FF          	lfsr	2,255
  2826  018746                     clear_1:
  2827  018746  6AEE               	clrf	postinc0,c
  2828  018748  50DD               	movf	postdec2,w,c
  2829  01874A  50D9               	movf	fsr2l,w,c
  2830  01874C  E1FC               	bnz	clear_1
  2831  01874E  50DA               	movf	fsr2h,w,c
  2832  018750  E1FA               	bnz	clear_1
  2833                           
  2834                           ; Clear objects allocated to BANK4 (134 bytes)
  2835  018752  EE01  F000         	lfsr	0,__pbssBANK4
  2836  018756  0E86               	movlw	134
  2837  018758                     clear_2:
  2838  018758  6AEE               	clrf	postinc0,c
  2839  01875A  06E8               	decf	wreg,f,c
  2840  01875C  E1FD               	bnz	clear_2
  2841                           
  2842                           ; Clear objects allocated to BANK3 (228 bytes)
  2843  01875E  EE00  F300         	lfsr	0,__pbssBANK3
  2844  018762  0EE4               	movlw	228
  2845  018764                     clear_3:
  2846  018764  6AEE               	clrf	postinc0,c
  2847  018766  06E8               	decf	wreg,f,c
  2848  018768  E1FD               	bnz	clear_3
  2849                           
  2850                           ; Clear objects allocated to BANK2 (8 bytes)
  2851  01876A  EE00  F2D5         	lfsr	0,__pbssBANK2
  2852  01876E  0E08               	movlw	8
  2853  018770                     clear_4:
  2854  018770  6AEE               	clrf	postinc0,c
  2855  018772  06E8               	decf	wreg,f,c
  2856  018774  E1FD               	bnz	clear_4
  2857                           
  2858                           ; Clear objects allocated to BANK1 (32 bytes)
  2859  018776  EE00  F1DA         	lfsr	0,__pbssBANK1
  2860  01877A  0E20               	movlw	32
  2861  01877C                     clear_5:
  2862  01877C  6AEE               	clrf	postinc0,c
  2863  01877E  06E8               	decf	wreg,f,c
  2864  018780  E1FD               	bnz	clear_5
  2865                           
  2866                           ; Clear objects allocated to BANK0 (107 bytes)
  2867  018782  EE00  F060         	lfsr	0,__pbssBANK0
  2868  018786  0E6B               	movlw	107
  2869  018788                     clear_6:
  2870  018788  6AEE               	clrf	postinc0,c
  2871  01878A  06E8               	decf	wreg,f,c
  2872  01878C  E1FD               	bnz	clear_6
  2873                           
  2874                           ; Clear objects allocated to COMRAM (23 bytes)
  2875  01878E  EE00  F021         	lfsr	0,__pbssCOMRAM
  2876  018792  0E17               	movlw	23
  2877  018794                     clear_7:
  2878  018794  6AEE               	clrf	postinc0,c
  2879  018796  06E8               	decf	wreg,f,c
  2880  018798  E1FD               	bnz	clear_7
  2881                           
  2882                           ;
  2883                           ; Setup IVTBASE
  2884                           ;
  2885  01879A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2886  01879C  6ED5               	movwf	213,c
  2887  01879E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2888  0187A0  6ED6               	movwf	214,c
  2889  0187A2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2890  0187A4  6ED7               	movwf	215,c
  2891  0187A6                     end_of_initialization:
  2892                           	opt callstack 0
  2893  0187A6                     __end_of__initialization:
  2894                           	opt callstack 0
  2895  0187A6  0100               	movlb	0
  2896  0187A8  EFF8  F090         	goto	_main	;jump to C main() function
  2897                           
  2898                           	psect	bssCOMRAM
  2899  000021                     __pbssCOMRAM:
  2900                           	opt callstack 0
  2901  000021                     _width:
  2902                           	opt callstack 0
  2903  000021                     	ds	2
  2904  000023                     _prec:
  2905                           	opt callstack 0
  2906  000023                     	ds	2
  2907  000025                     _flags:
  2908                           	opt callstack 0
  2909  000025                     	ds	2
  2910  000027                     _timer3ReloadVal:
  2911                           	opt callstack 0
  2912  000027                     	ds	2
  2913  000029                     TMR5_ISR@CountCallBack:
  2914                           	opt callstack 0
  2915  000029                     	ds	2
  2916  00002B                     _timer5ReloadVal:
  2917                           	opt callstack 0
  2918  00002B                     	ds	2
  2919  00002D                     Volts_to_SOC@slot:
  2920                           	opt callstack 0
  2921  00002D                     	ds	1
  2922  00002E                     _mode_sw:
  2923                           	opt callstack 0
  2924  00002E                     	ds	1
  2925  00002F                     _uart2RxCount:
  2926                           	opt callstack 0
  2927  00002F                     	ds	1
  2928  000030                     _uart2RxTail:
  2929                           	opt callstack 0
  2930  000030                     	ds	1
  2931  000031                     _uart2RxHead:
  2932                           	opt callstack 0
  2933  000031                     	ds	1
  2934  000032                     _uart2TxBufferRemaining:
  2935                           	opt callstack 0
  2936  000032                     	ds	1
  2937  000033                     _uart2TxTail:
  2938                           	opt callstack 0
  2939  000033                     	ds	1
  2940  000034                     _uart2TxHead:
  2941                           	opt callstack 0
  2942  000034                     	ds	1
  2943  000035                     _uart1RxCount:
  2944                           	opt callstack 0
  2945  000035                     	ds	1
  2946  000036                     _uart1RxTail:
  2947                           	opt callstack 0
  2948  000036                     	ds	1
  2949  000037                     _uart1RxHead:
  2950                           	opt callstack 0
  2951  000037                     	ds	1
  2952                           
  2953                           	psect	bssBANK0
  2954  000060                     __pbssBANK0:
  2955                           	opt callstack 0
  2956  000060                     _S:
  2957                           	opt callstack 0
  2958  000060                     	ds	41
  2959  000089                     _spi_link:
  2960                           	opt callstack 0
  2961  000089                     	ds	12
  2962  000095                     floorf@F524:
  2963                           	opt callstack 0
  2964  000095                     	ds	4
  2965  000099                     ___fpclassifyf@F463:
  2966                           	opt callstack 0
  2967  000099                     	ds	4
  2968  00009D                     _utctime:
  2969                           	opt callstack 0
  2970  00009D                     	ds	4
  2971  0000A1                     wdtdelay@dcount:
  2972                           	opt callstack 0
  2973  0000A1                     	ds	4
  2974  0000A5                     _P:
  2975                           	opt callstack 0
  2976  0000A5                     	ds	4
  2977  0000A9                     _TMR3_InterruptHandler:
  2978                           	opt callstack 0
  2979  0000A9                     	ds	3
  2980  0000AC                     _TMR5_InterruptHandler:
  2981                           	opt callstack 0
  2982  0000AC                     	ds	3
  2983  0000AF                     _TMR6_InterruptHandler:
  2984                           	opt callstack 0
  2985  0000AF                     	ds	3
  2986  0000B2                     _ADCC_ADTI_InterruptHandler:
  2987                           	opt callstack 0
  2988  0000B2                     	ds	3
  2989  0000B5                     _ADCC_ADI_InterruptHandler:
  2990                           	opt callstack 0
  2991  0000B5                     	ds	3
  2992  0000B8                     _UART1_RxInterruptHandler:
  2993                           	opt callstack 0
  2994  0000B8                     	ds	3
  2995  0000BB                     _UART2_TxInterruptHandler:
  2996                           	opt callstack 0
  2997  0000BB                     	ds	3
  2998  0000BE                     _UART2_RxInterruptHandler:
  2999                           	opt callstack 0
  3000  0000BE                     	ds	3
  3001  0000C1                     _INT1_InterruptHandler:
  3002                           	opt callstack 0
  3003  0000C1                     	ds	3
  3004  0000C4                     _INT0_InterruptHandler:
  3005                           	opt callstack 0
  3006  0000C4                     	ds	3
  3007  0000C7                     _nout:
  3008                           	opt callstack 0
  3009  0000C7                     	ds	2
  3010  0000C9                     TMR3_ISR@CountCallBack:
  3011                           	opt callstack 0
  3012  0000C9                     	ds	2
  3013                           
  3014                           	psect	dataBANK0
  3015  0000CB                     __pdataBANK0:
  3016                           	opt callstack 0
  3017  0000CB                     _R:
  3018                           	opt callstack 0
  3019  0000CB                     	ds	40
  3020  0000F3                     _H:
  3021                           	opt callstack 0
  3022  0000F3                     	ds	7
  3023                           
  3024                           	psect	bssBANK1
  3025  0001DA                     __pbssBANK1:
  3026                           	opt callstack 0
  3027  0001DA                     _tickCount:
  3028                           	opt callstack 0
  3029  0001DA                     	ds	24
  3030  0001F2                     _uart1RxBuffer:
  3031                           	opt callstack 0
  3032  0001F2                     	ds	8
  3033                           
  3034                           	psect	dataBANK1
  3035  000100                     __pdataBANK1:
  3036                           	opt callstack 0
  3037  000100                     _C:
  3038                           	opt callstack 0
  3039  000100                     	ds	211
  3040  0001D3                     stoa@F1166:
  3041                           	opt callstack 0
  3042  0001D3                     	ds	7
  3043                           
  3044                           	psect	bssBANK2
  3045  0002D5                     __pbssBANK2:
  3046                           	opt callstack 0
  3047  0002D5                     _seed:
  3048                           	opt callstack 0
  3049  0002D5                     	ds	8
  3050                           
  3051                           	psect	dataBANK2
  3052  000200                     __pdataBANK2:
  3053                           	opt callstack 0
  3054  000200                     _V:
  3055                           	opt callstack 0
  3056  000200                     	ds	188
  3057                           
  3058                           	psect	bssBANK3
  3059  000300                     __pbssBANK3:
  3060                           	opt callstack 0
  3061  000300                     lp_filter@smooth:
  3062                           	opt callstack 0
  3063  000300                     	ds	84
  3064  000354                     _uart2TxBuffer:
  3065                           	opt callstack 0
  3066  000354                     	ds	64
  3067  000394                     _dbuf:
  3068                           	opt callstack 0
  3069  000394                     	ds	80
  3070                           
  3071                           	psect	bssBANK4
  3072  000400                     __pbssBANK4:
  3073                           	opt callstack 0
  3074  000400                     _ring_buf2:
  3075                           	opt callstack 0
  3076  000400                     	ds	67
  3077  000443                     _ring_buf1:
  3078                           	opt callstack 0
  3079  000443                     	ds	67
  3080                           
  3081                           	psect	bssBANK5
  3082  000500                     __pbssBANK5:
  3083                           	opt callstack 0
  3084  000500                     _uart2RxBuffer:
  3085                           	opt callstack 0
  3086  000500                     	ds	255
  3087                           
  3088                           	psect	bssBIGRAM
  3089  0007FF                     __pbssBIGRAM:
  3090                           	opt callstack 0
  3091  0007FF                     _D:
  3092                           	opt callstack 0
  3093  0007FF                     	ds	290
  3094                           
  3095                           	psect	dataBIGRAM
  3096  0005FF                     __pdataBIGRAM:
  3097                           	opt callstack 0
  3098  0005FF                     _port_data:
  3099                           	opt callstack 0
  3100  0005FF                     	ds	512
  3101                           
  3102                           	psect	cstackBANK2
  3103  0002BC                     __pcstackBANK2:
  3104                           	opt callstack 0
  3105  0002BC                     ??_TMR3_ISR:
  3106                           
  3107                           ; 1 bytes @ 0x0
  3108  0002BC                     	ds	25
  3109                           
  3110                           	psect	cstackCOMRAM
  3111  000038                     __pcstackCOMRAM:
  3112                           	opt callstack 0
  3113  000038                     ??_ADCC_ThresholdISR:
  3114  000038                     
  3115                           ; 1 bytes @ 0x0
  3116  000038                     	ds	5
  3117  00003D                     ??_TMR6_ISR:
  3118                           
  3119                           ; 1 bytes @ 0x5
  3120  00003D                     	ds	1
  3121  00003E                     ??_INT1_ISR:
  3122  00003E                     
  3123                           ; 1 bytes @ 0x6
  3124  00003E                     	ds	4
  3125  000042                     ??_TMR5_ISR:
  3126                           
  3127                           ; 1 bytes @ 0xA
  3128  000042                     	ds	4
  3129                           
  3130 ;;
  3131 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  3132 ;;
  3133 ;; *************** function _main *****************
  3134 ;; Defined at:
  3135 ;;		line 174 in file "main.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  k               1  [STACK] unsigned char 
  3140 ;;  j               1  [STACK] unsigned char 
  3141 ;;  i               1  [STACK] unsigned char 
  3142 ;;  inp_index       1  [STACK] unsigned char 
  3143 ;;  mode            1  [STACK] enum E17013
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1  [STACK] void 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3157 ;;Total ram usage:        0 bytes
  3158 ;; Hardware stack levels required when called:   28
  3159 ;; This function calls:
  3160 ;;		_SYSTEM_Initialize
  3161 ;;		_StartTimer
  3162 ;;		_TimerDone
  3163 ;;		_WaitMs
  3164 ;;		_calc_model_data
  3165 ;;		_check_adc_scan
  3166 ;;		_check_enter_button
  3167 ;;		_check_help
  3168 ;;		_clear_adc_scan
  3169 ;;		_clear_hid_pflags
  3170 ;;		_convert_adc_data
  3171 ;;		_eaDogM_WriteCommand
  3172 ;;		_get_raw_result
  3173 ;;		_get_switch
  3174 ;;		_get_vterm_ptr
  3175 ;;		_hid_display
  3176 ;;		_init_bsoc
  3177 ;;		_init_display
  3178 ;;		_init_port_dma
  3179 ;;		_lp_filter
  3180 ;;		_mode_lamp_dim
  3181 ;;		_set_display_info
  3182 ;;		_set_vterm
  3183 ;;		_sprintf
  3184 ;;		_srand
  3185 ;;		_start_adc_scan
  3186 ;;		_start_switch_handler
  3187 ;;		_static_soc
  3188 ;;		_update_lcd
  3189 ;; This function is called by:
  3190 ;;		Startup code after reset
  3191 ;; This function uses a reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text0
  3195  0121F0                     __ptext0:
  3196                           	opt callstack 0
  3197  0121F0                     _main:
  3198                           	opt callstack 0
  3199                           
  3200                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3201  0121F0  0E05               	movlw	5
  3202  0121F2  26E1               	addwf	fsr1l,f,c
  3203  0121F4  0E00               	movlw	0
  3204  0121F6  22E2               	addwfc	fsr1h,f,c
  3205                           
  3206                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  3207                           ;stkvar	_inp_index @ sp[(-5)+3]
  3208                           
  3209                           ;incstack = 0
  3210  0121F8  0EFE               	movlw	-2
  3211  0121FA  6AE3               	clrf	plusw1,c
  3212                           
  3213                           ;stkvar	_i @ sp[(-5)+2]
  3214  0121FC  0EFD               	movlw	-3
  3215  0121FE  6AE3               	clrf	plusw1,c
  3216                           
  3217                           ;stkvar	_j @ sp[(-5)+1]
  3218  012200  0EFC               	movlw	-4
  3219  012202  6AE3               	clrf	plusw1,c
  3220  012204  2AE3               	incf	plusw1,f,c
  3221                           
  3222                           ;stkvar	_k @ sp[(-5)+0]
  3223  012206  0EFB               	movlw	-5
  3224  012208  6AE3               	clrf	plusw1,c
  3225  01220A  82E3               	bsf	plusw1,1,c
  3226                           
  3227                           ;main.c: 180:  SYSTEM_Initialize();
  3228  01220C  ECCB  F0CD         	call	_SYSTEM_Initialize	;wreg free
  3229                           
  3230                           ; BSR set to: 60
  3231                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3232  012210  8ED2               	bsf	210,7,c	;volatile
  3233                           
  3234                           ; BSR set to: 60
  3235                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3236  012212  8CD2               	bsf	210,6,c	;volatile
  3237                           
  3238                           ; BSR set to: 60
  3239                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3240  012214  0102               	movlb	2	; () banked
  3241  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3242                           
  3243                           ; BSR set to: 2
  3244                           ;main.c: 193:  WaitMs(300);
  3245  012218  0E2C               	movlw	44
  3246  01221A  6EE6               	movwf	postinc1,c
  3247  01221C  0E01               	movlw	1
  3248  01221E  6EE6               	movwf	postinc1,c
  3249  012220  ECC1  F0CF         	call	_WaitMs	;wreg free
  3250                           
  3251                           ;main.c: 194:  if (PORTBbits.RB0) {
  3252  012224  A0CB               	btfss	203,0,c	;volatile
  3253  012226  D004               	goto	l12101
  3254                           
  3255                           ;main.c: 195:   mode = UI_STATE_HOST;
  3256                           ;stkvar	_mode @ sp[(-5)+4]
  3257  012228  0EFF               	movlw	-1
  3258  01222A  6AE3               	clrf	plusw1,c
  3259  01222C  2AE3               	incf	plusw1,f,c
  3260                           
  3261                           ;main.c: 196:  } else {
  3262  01222E  D004               	goto	l12103
  3263  012230                     l12101:
  3264                           
  3265                           ;main.c: 197:   mode = UI_STATE_LOG;
  3266                           ;stkvar	_mode @ sp[(-5)+4]
  3267  012230  0EFF               	movlw	-1
  3268  012232  6AE3               	clrf	plusw1,c
  3269  012234  80E3               	bsf	plusw1,0,c
  3270  012236  82E3               	bsf	plusw1,1,c	;indir
  3271  012238                     l12103:
  3272                           
  3273                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3274                           ;stkvar	_mode @ sp[(-5)+4]
  3275  012238  0EFF               	movlw	-1
  3276  01223A  04E3               	decf	plusw1,w,c
  3277  01223C  A4D8               	btfss	status,2,c
  3278  01223E  D007               	goto	l1308
  3279                           
  3280                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3281  012240  80BD               	bsf	189,0,c	;volatile
  3282                           
  3283                           ;main.c: 202:   V.mode_pwm = 70;
  3284  012242  0E00               	movlw	0
  3285  012244  0102               	movlb	2	; () banked
  3286  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3287  012248  0E46               	movlw	70
  3288  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3289                           
  3290                           ;main.c: 203:  } else {
  3291  01224C  D004               	goto	l12107
  3292  01224E                     l1308:
  3293  01224E  90BD               	bcf	189,0,c	;volatile
  3294                           
  3295                           ;main.c: 205:   V.mode_pwm = 0;
  3296  012250  0102               	movlb	2	; () banked
  3297  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3298  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3299  012256                     l12107:
  3300                           
  3301                           ; BSR set to: 2
  3302                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3303  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3304  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3305  012262  ECA1  F0D3         	call	_mode_lamp_dim	;wreg free
  3306  012266  D0DC               	goto	l12159
  3307  012268                     l12109:
  3308                           
  3309                           ; BSR set to: 2
  3310                           ;main.c: 215:    init_port_dma();
  3311  012268  EC45  F0D0         	call	_init_port_dma	;wreg free
  3312                           
  3313                           ; BSR set to: 59
  3314                           ;main.c: 217:    init_display();
  3315  01226C  ECDC  F0C4         	call	_init_display	;wreg free
  3316                           
  3317                           ; BSR set to: 61
  3318                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3319  012270  0E0C               	movlw	12
  3320  012272  6EE6               	movwf	postinc1,c
  3321  012274  ECF5  F0D3         	call	_eaDogM_WriteCommand	;wreg free
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;main.c: 220:    V.ui_state = mode;
  3325                           ;stkvar	_mode @ sp[(-5)+4]
  3326  012278  0EFF               	movlw	-1
  3327  01227A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;main.c: 221:    srand(1957);
  3331  012280  0EA5               	movlw	165
  3332  012282  6EE6               	movwf	postinc1,c
  3333  012284  0E07               	movlw	7
  3334  012286  6EE6               	movwf	postinc1,c
  3335  012288  ECF7  F0CF         	call	_srand	;wreg free
  3336                           
  3337                           ; BSR set to: 2
  3338                           ;main.c: 222:    set_vterm(0);
  3339  01228C  0E00               	movlw	0
  3340  01228E  6EE6               	movwf	postinc1,c
  3341  012290  EC4B  F0D3         	call	_set_vterm	;wreg free
  3342                           
  3343                           ;main.c: 223:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3344  012294  0E53               	movlw	low STR_1
  3345  012296  6EE6               	movwf	postinc1,c
  3346  012298  0EFF               	movlw	high STR_1
  3347  01229A  6EE6               	movwf	postinc1,c
  3348  01229C  0E00               	movlw	0
  3349  01229E  6EE6               	movwf	postinc1,c
  3350  0122A0  0E00               	movlw	0
  3351  0122A2  6EE6               	movwf	postinc1,c
  3352  0122A4  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3353  0122A8  0060  F007  FFE6   	movff	btemp,postinc1
  3354  0122AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3355  0122B4  0E04               	movlw	4
  3356  0122B6  6EE6               	movwf	postinc1,c
  3357  0122B8  ECD6  F0C3         	call	_sprintf	;wreg free
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;main.c: 224:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.0");
  3361  0122BC  0EE3               	movlw	low STR_3
  3362  0122BE  6EE6               	movwf	postinc1,c
  3363  0122C0  0EFF               	movlw	high STR_3
  3364  0122C2  6EE6               	movwf	postinc1,c
  3365  0122C4  0EA5               	movlw	low STR_2
  3366  0122C6  6EE6               	movwf	postinc1,c
  3367  0122C8  0EFF               	movlw	high STR_2
  3368  0122CA  6EE6               	movwf	postinc1,c
  3369  0122CC  0E00               	movlw	0
  3370  0122CE  6EE6               	movwf	postinc1,c
  3371  0122D0  0E01               	movlw	1
  3372  0122D2  6EE6               	movwf	postinc1,c
  3373  0122D4  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3374  0122D8  0060  F007  FFE6   	movff	btemp,postinc1
  3375  0122DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3376  0122E4  0E06               	movlw	6
  3377  0122E6  6EE6               	movwf	postinc1,c
  3378  0122E8  ECD6  F0C3         	call	_sprintf	;wreg free
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;main.c: 225:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3382  0122EC  0E42               	movlw	low STR_4
  3383  0122EE  6EE6               	movwf	postinc1,c
  3384  0122F0  0EFF               	movlw	high STR_4
  3385  0122F2  6EE6               	movwf	postinc1,c
  3386  0122F4  0E00               	movlw	0
  3387  0122F6  6EE6               	movwf	postinc1,c
  3388  0122F8  0E02               	movlw	2
  3389  0122FA  6EE6               	movwf	postinc1,c
  3390  0122FC  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3391  012300  0060  F007  FFE6   	movff	btemp,postinc1
  3392  012306  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3393  01230C  0E04               	movlw	4
  3394  01230E  6EE6               	movwf	postinc1,c
  3395  012310  ECD6  F0C3         	call	_sprintf	;wreg free
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;main.c: 226:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  3399  012314  0E64               	movlw	low STR_5
  3400  012316  6EE6               	movwf	postinc1,c
  3401  012318  0EFF               	movlw	high STR_5
  3402  01231A  6EE6               	movwf	postinc1,c
  3403  01231C  0E02               	movlw	2
  3404  01231E  6EE6               	movwf	postinc1,c
  3405  012320  0E00               	movlw	0
  3406  012322  6EE6               	movwf	postinc1,c
  3407  012324  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3408  012328  0060  F007  FFE6   	movff	btemp,postinc1
  3409  01232E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3410  012334  0E04               	movlw	4
  3411  012336  6EE6               	movwf	postinc1,c
  3412  012338  ECD6  F0C3         	call	_sprintf	;wreg free
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;main.c: 227:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "1.0");
  3416  01233C  0EE3               	movlw	low STR_3
  3417  01233E  6EE6               	movwf	postinc1,c
  3418  012340  0EFF               	movlw	high STR_3
  3419  012342  6EE6               	movwf	postinc1,c
  3420  012344  0EA5               	movlw	low STR_2
  3421  012346  6EE6               	movwf	postinc1,c
  3422  012348  0EFF               	movlw	high STR_2
  3423  01234A  6EE6               	movwf	postinc1,c
  3424  01234C  0E02               	movlw	2
  3425  01234E  6EE6               	movwf	postinc1,c
  3426  012350  0E01               	movlw	1
  3427  012352  6EE6               	movwf	postinc1,c
  3428  012354  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3429  012358  0060  F007  FFE6   	movff	btemp,postinc1
  3430  01235E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3431  012364  0E06               	movlw	6
  3432  012366  6EE6               	movwf	postinc1,c
  3433  012368  ECD6  F0C3         	call	_sprintf	;wreg free
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;main.c: 228:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  3437  01236C  0E31               	movlw	low STR_8
  3438  01236E  6EE6               	movwf	postinc1,c
  3439  012370  0EFF               	movlw	high STR_8
  3440  012372  6EE6               	movwf	postinc1,c
  3441  012374  0E02               	movlw	2
  3442  012376  6EE6               	movwf	postinc1,c
  3443  012378  0E02               	movlw	2
  3444  01237A  6EE6               	movwf	postinc1,c
  3445  01237C  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3446  012380  0060  F007  FFE6   	movff	btemp,postinc1
  3447  012386  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3448  01238C  0E04               	movlw	4
  3449  01238E  6EE6               	movwf	postinc1,c
  3450  012390  ECD6  F0C3         	call	_sprintf	;wreg free
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;main.c: 229:    update_lcd(0);
  3454  012394  0E00               	movlw	0
  3455  012396  6EE6               	movwf	postinc1,c
  3456  012398  ECC7  F0C2         	call	_update_lcd	;wreg free
  3457                           
  3458                           ;main.c: 230:    WaitMs(3000);
  3459  01239C  0EB8               	movlw	184
  3460  01239E  6EE6               	movwf	postinc1,c
  3461  0123A0  0E0B               	movlw	11
  3462  0123A2  6EE6               	movwf	postinc1,c
  3463  0123A4  ECC1  F0CF         	call	_WaitMs	;wreg free
  3464                           
  3465                           ;main.c: 231:    StartTimer(TMR_DISPLAY, 250);
  3466  0123A8  0EFA               	movlw	250
  3467  0123AA  6EE6               	movwf	postinc1,c
  3468  0123AC  0E00               	movlw	0
  3469  0123AE  6EE6               	movwf	postinc1,c
  3470  0123B0  0E0A               	movlw	10
  3471  0123B2  6EE6               	movwf	postinc1,c
  3472  0123B4  EC06  F0CF         	call	_StartTimer	;wreg free
  3473                           
  3474                           ;main.c: 232:    StartTimer(TMR_ADC, 200);
  3475  0123B8  0EC8               	movlw	200
  3476  0123BA  6EE6               	movwf	postinc1,c
  3477  0123BC  0E00               	movlw	0
  3478  0123BE  6EE6               	movwf	postinc1,c
  3479  0123C0  0E01               	movlw	1
  3480  0123C2  6EE6               	movwf	postinc1,c
  3481  0123C4  EC06  F0CF         	call	_StartTimer	;wreg free
  3482                           
  3483                           ;main.c: 233:    StartTimer(TMR_INFO, 3000);
  3484  0123C8  0EB8               	movlw	184
  3485  0123CA  6EE6               	movwf	postinc1,c
  3486  0123CC  0E0B               	movlw	11
  3487  0123CE  6EE6               	movwf	postinc1,c
  3488  0123D0  0E07               	movlw	7
  3489  0123D2  6EE6               	movwf	postinc1,c
  3490  0123D4  EC06  F0CF         	call	_StartTimer	;wreg free
  3491                           
  3492                           ;main.c: 234:    StartTimer(TMR_FLIPPER, 1500);
  3493  0123D8  0EDC               	movlw	220
  3494  0123DA  6EE6               	movwf	postinc1,c
  3495  0123DC  0E05               	movlw	5
  3496  0123DE  6EE6               	movwf	postinc1,c
  3497  0123E0  0E0B               	movlw	11
  3498  0123E2  6EE6               	movwf	postinc1,c
  3499  0123E4  EC06  F0CF         	call	_StartTimer	;wreg free
  3500                           
  3501                           ;main.c: 235:    StartTimer(TMR_HELPDIS, 3000);
  3502  0123E8  0EB8               	movlw	184
  3503  0123EA  6EE6               	movwf	postinc1,c
  3504  0123EC  0E0B               	movlw	11
  3505  0123EE  6EE6               	movwf	postinc1,c
  3506  0123F0  0E09               	movlw	9
  3507  0123F2  6EE6               	movwf	postinc1,c
  3508  0123F4  EC06  F0CF         	call	_StartTimer	;wreg free
  3509                           
  3510                           ;main.c: 237:    start_adc_scan();
  3511  0123F8  ECDE  F0CB         	call	_start_adc_scan	;wreg free
  3512                           
  3513                           ;main.c: 238:    start_switch_handler();
  3514  0123FC  EC0D  F0D3         	call	_start_switch_handler	;wreg free
  3515                           
  3516                           ; BSR set to: 57
  3517                           ;main.c: 239:    WaitMs(1000);
  3518  012400  0EE8               	movlw	232
  3519  012402  6EE6               	movwf	postinc1,c
  3520  012404  0E03               	movlw	3
  3521  012406  6EE6               	movwf	postinc1,c
  3522  012408  ECC1  F0CF         	call	_WaitMs	;wreg free
  3523                           
  3524                           ;main.c: 240:    static_soc();
  3525  01240C  EC7E  F0D2         	call	_static_soc	;wreg free
  3526                           
  3527                           ; BSR set to: 1
  3528                           ;main.c: 241:    init_bsoc();
  3529  012410  EC93  F0BC         	call	_init_bsoc	;wreg free
  3530                           
  3531                           ;main.c: 243:    break;
  3532  012414  D01C               	goto	l12161
  3533  012416                     l1316:
  3534                           
  3535                           ; BSR set to: 2
  3536                           ;main.c: 249:    P.SYSTEM_STABLE = 1;
  3537  012416  0100               	movlb	0	; () banked
  3538  012418  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  3539                           
  3540                           ;main.c: 250:    break;
  3541  01241A  D019               	goto	l12161
  3542  01241C                     l1318:
  3543                           
  3544                           ; BSR set to: 2
  3545                           ;main.c: 253:    V.ui_state = UI_STATE_INIT;
  3546  01241C  6B00               	clrf	_V& (0+255),b	;volatile
  3547                           
  3548                           ;main.c: 254:    break;
  3549  01241E  D017               	goto	l12161
  3550  012420                     l12159:
  3551  012420  0102               	movlb	2	; () banked
  3552  012422  5100               	movf	_V& (0+255),w,b	;volatile
  3553  012424  6E0B               	movwf	(btemp+10)^0,c
  3554  012426  6A0C               	clrf	(btemp+11)^0,c
  3555                           
  3556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3557                           ; Switch size 1, requested type "simple"
  3558                           ; Number of cases is 1, Range of values is 0 to 0
  3559                           ; switch strategies available:
  3560                           ; Name         Instructions Cycles
  3561                           ; simple_byte            4     3 (average)
  3562                           ;	Chosen strategy is simple_byte
  3563  012428  500C               	movf	(btemp+11)^0,w,c
  3564  01242A  0A00               	xorlw	0	; case 0
  3565  01242C  A4D8               	btfss	status,2,c
  3566  01242E  D7F6               	goto	l1318
  3567                           
  3568                           ; BSR set to: 2
  3569                           ; Switch size 1, requested type "simple"
  3570                           ; Number of cases is 5, Range of values is 0 to 5
  3571                           ; switch strategies available:
  3572                           ; Name         Instructions Cycles
  3573                           ; simple_byte           16     9 (average)
  3574                           ;	Chosen strategy is simple_byte
  3575  012430  500B               	movf	(btemp+10)^0,w,c
  3576  012432  0A00               	xorlw	0	; case 0
  3577  012434  B4D8               	btfsc	status,2,c
  3578  012436  D718               	goto	l12109
  3579  012438  0A01               	xorlw	1	; case 1
  3580  01243A  B4D8               	btfsc	status,2,c
  3581  01243C  D008               	goto	l12161
  3582  01243E  0A02               	xorlw	2	; case 3
  3583  012440  B4D8               	btfsc	status,2,c
  3584  012442  D005               	goto	l12161
  3585  012444  0A07               	xorlw	7	; case 4
  3586  012446  B4D8               	btfsc	status,2,c
  3587  012448  D7E6               	goto	l1316
  3588  01244A  0A01               	xorlw	1	; case 5
  3589  01244C  D7E7               	goto	l1318
  3590  01244E                     l12161:
  3591                           
  3592                           ;main.c: 257:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  3593  01244E  0E01               	movlw	1
  3594  012450  6EE6               	movwf	postinc1,c
  3595  012452  EC65  F0D1         	call	_TimerDone	;wreg free
  3596  012456  5001               	movf	btemp^0,w,c
  3597  012458  B4D8               	btfsc	status,2,c
  3598  01245A  D013               	goto	l12173
  3599  01245C  EC3B  F0D4         	call	_check_adc_scan	;wreg free
  3600  012460  5001               	movf	btemp^0,w,c
  3601  012462  B4D8               	btfsc	status,2,c
  3602  012464  D00E               	goto	l12173
  3603                           
  3604                           ;main.c: 261:    convert_adc_data();
  3605  012466  ECE8  F0C6         	call	_convert_adc_data	;wreg free
  3606                           
  3607                           ;main.c: 265:    clear_adc_scan();
  3608  01246A  EC43  F0D4         	call	_clear_adc_scan	;wreg free
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;main.c: 266:    start_adc_scan();
  3612  01246E  ECDE  F0CB         	call	_start_adc_scan	;wreg free
  3613                           
  3614                           ;main.c: 267:    StartTimer(TMR_ADC, 200);
  3615  012472  0EC8               	movlw	200
  3616  012474  6EE6               	movwf	postinc1,c
  3617  012476  0E00               	movlw	0
  3618  012478  6EE6               	movwf	postinc1,c
  3619  01247A  0E01               	movlw	1
  3620  01247C  6EE6               	movwf	postinc1,c
  3621  01247E  EC06  F0CF         	call	_StartTimer	;wreg free
  3622  012482                     l12173:
  3623                           
  3624                           ;main.c: 274:   if (TimerDone(TMR_DISPLAY)) {
  3625                           
  3626                           ;main.c: 270:   if (V.ticks) {
  3627  012482  0E0A               	movlw	10
  3628  012484  6EE6               	movwf	postinc1,c
  3629  012486  EC65  F0D1         	call	_TimerDone	;wreg free
  3630  01248A  5001               	movf	btemp^0,w,c
  3631  01248C  B4D8               	btfsc	status,2,c
  3632  01248E  D27F               	goto	l12215
  3633                           
  3634                           ;main.c: 275:    if (TimerDone(TMR_HELPDIS)) {
  3635  012490  0E09               	movlw	9
  3636  012492  6EE6               	movwf	postinc1,c
  3637  012494  EC65  F0D1         	call	_TimerDone	;wreg free
  3638  012498  5001               	movf	btemp^0,w,c
  3639  01249A  B4D8               	btfsc	status,2,c
  3640  01249C  D004               	goto	l12181
  3641                           
  3642                           ;main.c: 276:     set_display_info(DIS_STR);
  3643  01249E  0E00               	movlw	0
  3644  0124A0  6EE6               	movwf	postinc1,c
  3645  0124A2  EC5A  F0D3         	call	_set_display_info	;wreg free
  3646  0124A6                     l12181:
  3647                           
  3648                           ;main.c: 278:    calc_model_data();
  3649  0124A6  ECF0  F0AE         	call	_calc_model_data	;wreg free
  3650                           
  3651                           ; BSR set to: 1
  3652                           ;main.c: 285:     hid_display(&H);
  3653                           
  3654                           ;main.c: 280:    if (0) {
  3655  0124AA  0EF3               	movlw	_H& (0+255)
  3656  0124AC  6EE6               	movwf	postinc1,c
  3657  0124AE  EC5B  F0C4         	call	_hid_display	;wreg free
  3658                           
  3659                           ;main.c: 286:     switch (H.hid_display) {
  3660  0124B2  D248               	goto	l12207
  3661  0124B4                     l1326:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;main.c: 288:      V.calib = 0;
  3665  0124B4  0102               	movlb	2	; () banked
  3666  0124B6  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3667                           
  3668                           ; BSR set to: 2
  3669                           ;main.c: 289:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  3670  0124B8  0060  F5C3  FFE6   	movff	_C+112,postinc1
  3671  0124BE  0060  F5C7  FFE6   	movff	_C+113,postinc1
  3672  0124C4  0060  F5CB  FFE6   	movff	_C+114,postinc1
  3673  0124CA  0060  F5CF  FFE6   	movff	_C+115,postinc1
  3674  0124D0  0EAC               	movlw	low STR_12
  3675  0124D2  6EE6               	movwf	postinc1,c
  3676  0124D4  0EFE               	movlw	high STR_12
  3677  0124D6  6EE6               	movwf	postinc1,c
  3678  0124D8  0E00               	movlw	0
  3679  0124DA  6EE6               	movwf	postinc1,c
  3680  0124DC  0E00               	movlw	0
  3681  0124DE  6EE6               	movwf	postinc1,c
  3682  0124E0  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3683  0124E4  0060  F007  FFE6   	movff	btemp,postinc1
  3684  0124EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3685  0124F0  0E08               	movlw	8
  3686  0124F2  6EE6               	movwf	postinc1,c
  3687  0124F4  ECD6  F0C3         	call	_sprintf	;wreg free
  3688                           
  3689                           ;main.c: 290:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  3690  0124F8  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3691  0124FE  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3692  012504  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3693  01250A  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3694  012510  0ED2               	movlw	low STR_13
  3695  012512  6EE6               	movwf	postinc1,c
  3696  012514  0EFE               	movlw	high STR_13
  3697  012516  6EE6               	movwf	postinc1,c
  3698  012518  0E00               	movlw	0
  3699  01251A  6EE6               	movwf	postinc1,c
  3700  01251C  0E01               	movlw	1
  3701  01251E  6EE6               	movwf	postinc1,c
  3702  012520  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3703  012524  0060  F007  FFE6   	movff	btemp,postinc1
  3704  01252A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3705  012530  0E08               	movlw	8
  3706  012532  6EE6               	movwf	postinc1,c
  3707  012534  ECD6  F0C3         	call	_sprintf	;wreg free
  3708                           
  3709                           ;main.c: 291:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  3710  012538  0060  F5B3  FFE6   	movff	_C+108,postinc1
  3711  01253E  0060  F5B7  FFE6   	movff	_C+109,postinc1
  3712  012544  0060  F5BB  FFE6   	movff	_C+110,postinc1
  3713  01254A  0060  F5BF  FFE6   	movff	_C+111,postinc1
  3714  012550  0EBF               	movlw	low STR_14
  3715  012552  6EE6               	movwf	postinc1,c
  3716  012554  0EFE               	movlw	high STR_14
  3717  012556  6EE6               	movwf	postinc1,c
  3718  012558  0E00               	movlw	0
  3719  01255A  6EE6               	movwf	postinc1,c
  3720  01255C  0E02               	movlw	2
  3721  01255E  6EE6               	movwf	postinc1,c
  3722  012560  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3723  012564  0060  F007  FFE6   	movff	btemp,postinc1
  3724  01256A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3725  012570  0E08               	movlw	8
  3726  012572  6EE6               	movwf	postinc1,c
  3727  012574  ECD6  F0C3         	call	_sprintf	;wreg free
  3728                           
  3729                           ;main.c: 292:      break;
  3730  012578  D1FA               	goto	l12209
  3731  01257A                     l1328:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;main.c: 294:      V.calib = 0;
  3735  01257A  0102               	movlb	2	; () banked
  3736  01257C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3737                           
  3738                           ; BSR set to: 2
  3739                           ;main.c: 295:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  3740  01257E  0060  F413  FFE6   	movff	_C+4,postinc1
  3741  012584  0060  F417  FFE6   	movff	_C+5,postinc1
  3742  01258A  0060  F41B  FFE6   	movff	_C+6,postinc1
  3743  012590  0060  F41F  FFE6   	movff	_C+7,postinc1
  3744  012596  0060  F453  FFE6   	movff	_C+20,postinc1
  3745  01259C  0060  F457  FFE6   	movff	_C+21,postinc1
  3746  0125A2  0060  F45B  FFE6   	movff	_C+22,postinc1
  3747  0125A8  0060  F45F  FFE6   	movff	_C+23,postinc1
  3748  0125AE  0E1E               	movlw	low STR_15
  3749  0125B0  6EE6               	movwf	postinc1,c
  3750  0125B2  0EFF               	movlw	high STR_15
  3751  0125B4  6EE6               	movwf	postinc1,c
  3752  0125B6  0E00               	movlw	0
  3753  0125B8  6EE6               	movwf	postinc1,c
  3754  0125BA  0E00               	movlw	0
  3755  0125BC  6EE6               	movwf	postinc1,c
  3756  0125BE  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3757  0125C2  0060  F007  FFE6   	movff	btemp,postinc1
  3758  0125C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3759  0125CE  0E0C               	movlw	12
  3760  0125D0  6EE6               	movwf	postinc1,c
  3761  0125D2  ECD6  F0C3         	call	_sprintf	;wreg free
  3762                           
  3763                           ;main.c: 296:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  3764  0125D6  0060  F403  FFE6   	movff	_C,postinc1
  3765  0125DC  0060  F407  FFE6   	movff	_C+1,postinc1
  3766  0125E2  0060  F40B  FFE6   	movff	_C+2,postinc1
  3767  0125E8  0060  F40F  FFE6   	movff	_C+3,postinc1
  3768  0125EE  0060  F443  FFE6   	movff	_C+16,postinc1
  3769  0125F4  0060  F447  FFE6   	movff	_C+17,postinc1
  3770  0125FA  0060  F44B  FFE6   	movff	_C+18,postinc1
  3771  012600  0060  F44F  FFE6   	movff	_C+19,postinc1
  3772  012606  0EF8               	movlw	low STR_16
  3773  012608  6EE6               	movwf	postinc1,c
  3774  01260A  0EFE               	movlw	high STR_16
  3775  01260C  6EE6               	movwf	postinc1,c
  3776  01260E  0E00               	movlw	0
  3777  012610  6EE6               	movwf	postinc1,c
  3778  012612  0E01               	movlw	1
  3779  012614  6EE6               	movwf	postinc1,c
  3780  012616  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3781  01261A  0060  F007  FFE6   	movff	btemp,postinc1
  3782  012620  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3783  012626  0E0C               	movlw	12
  3784  012628  6EE6               	movwf	postinc1,c
  3785  01262A  ECD6  F0C3         	call	_sprintf	;wreg free
  3786                           
  3787                           ;main.c: 297:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  3788  01262E  0060  F503  FFE6   	movff	_C+64,postinc1
  3789  012634  0060  F507  FFE6   	movff	_C+65,postinc1
  3790  01263A  0060  F50B  FFE6   	movff	_C+66,postinc1
  3791  012640  0060  F50F  FFE6   	movff	_C+67,postinc1
  3792  012646  0060  F423  FFE6   	movff	_C+8,postinc1
  3793  01264C  0060  F427  FFE6   	movff	_C+9,postinc1
  3794  012652  0060  F42B  FFE6   	movff	_C+10,postinc1
  3795  012658  0060  F42F  FFE6   	movff	_C+11,postinc1
  3796  01265E  0E0B               	movlw	low STR_17
  3797  012660  6EE6               	movwf	postinc1,c
  3798  012662  0EFF               	movlw	high STR_17
  3799  012664  6EE6               	movwf	postinc1,c
  3800  012666  0E00               	movlw	0
  3801  012668  6EE6               	movwf	postinc1,c
  3802  01266A  0E02               	movlw	2
  3803  01266C  6EE6               	movwf	postinc1,c
  3804  01266E  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3805  012672  0060  F007  FFE6   	movff	btemp,postinc1
  3806  012678  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3807  01267E  0E0C               	movlw	12
  3808  012680  6EE6               	movwf	postinc1,c
  3809  012682  ECD6  F0C3         	call	_sprintf	;wreg free
  3810                           
  3811                           ;main.c: 298:      break;
  3812  012686  D173               	goto	l12209
  3813  012688                     l1329:
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;main.c: 300:      V.calib = 0;
  3817  012688  0102               	movlb	2	; () banked
  3818  01268A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3819                           
  3820                           ; BSR set to: 2
  3821                           ;main.c: 301:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  3822  01268C  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3823  012692  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3824  012698  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3825  01269E  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3826  0126A4  0EE5               	movlw	low STR_18
  3827  0126A6  6EE6               	movwf	postinc1,c
  3828  0126A8  0EFE               	movlw	high STR_18
  3829  0126AA  6EE6               	movwf	postinc1,c
  3830  0126AC  0E00               	movlw	0
  3831  0126AE  6EE6               	movwf	postinc1,c
  3832  0126B0  0E00               	movlw	0
  3833  0126B2  6EE6               	movwf	postinc1,c
  3834  0126B4  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3835  0126B8  0060  F007  FFE6   	movff	btemp,postinc1
  3836  0126BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3837  0126C4  0E08               	movlw	8
  3838  0126C6  6EE6               	movwf	postinc1,c
  3839  0126C8  ECD6  F0C3         	call	_sprintf	;wreg free
  3840                           
  3841                           ;main.c: 302:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  3842  0126CC  0060  F613  FFE6   	movff	_C+132,postinc1
  3843  0126D2  0060  F617  FFE6   	movff	_C+133,postinc1
  3844  0126D8  0060  F61B  FFE6   	movff	_C+134,postinc1
  3845  0126DE  0060  F61F  FFE6   	movff	_C+135,postinc1
  3846  0126E4  0060  F603  FFE6   	movff	_C+128,postinc1
  3847  0126EA  0060  F607  FFE6   	movff	_C+129,postinc1
  3848  0126F0  0060  F60B  FFE6   	movff	_C+130,postinc1
  3849  0126F6  0060  F60F  FFE6   	movff	_C+131,postinc1
  3850  0126FC  0E4C               	movlw	low STR_19
  3851  0126FE  6EE6               	movwf	postinc1,c
  3852  012700  0EFE               	movlw	high STR_19
  3853  012702  6EE6               	movwf	postinc1,c
  3854  012704  0E00               	movlw	0
  3855  012706  6EE6               	movwf	postinc1,c
  3856  012708  0E01               	movlw	1
  3857  01270A  6EE6               	movwf	postinc1,c
  3858  01270C  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3859  012710  0060  F007  FFE6   	movff	btemp,postinc1
  3860  012716  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3861  01271C  0E0C               	movlw	12
  3862  01271E  6EE6               	movwf	postinc1,c
  3863  012720  ECD6  F0C3         	call	_sprintf	;wreg free
  3864                           
  3865                           ;main.c: 303:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  3866  012724  0060  F673  FFE6   	movff	_C+156,postinc1
  3867  01272A  0060  F677  FFE6   	movff	_C+157,postinc1
  3868  012730  0060  F67B  FFE6   	movff	_C+158,postinc1
  3869  012736  0060  F67F  FFE6   	movff	_C+159,postinc1
  3870  01273C  0E99               	movlw	low STR_20
  3871  01273E  6EE6               	movwf	postinc1,c
  3872  012740  0EFE               	movlw	high STR_20
  3873  012742  6EE6               	movwf	postinc1,c
  3874  012744  0E00               	movlw	0
  3875  012746  6EE6               	movwf	postinc1,c
  3876  012748  0E02               	movlw	2
  3877  01274A  6EE6               	movwf	postinc1,c
  3878  01274C  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3879  012750  0060  F007  FFE6   	movff	btemp,postinc1
  3880  012756  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3881  01275C  0E08               	movlw	8
  3882  01275E  6EE6               	movwf	postinc1,c
  3883  012760  ECD6  F0C3         	call	_sprintf	;wreg free
  3884                           
  3885                           ;main.c: 304:      break;
  3886  012764  D104               	goto	l12209
  3887  012766                     l12193:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;main.c: 306:      if (!V.calib) {
  3891  012766  0102               	movlb	2	; () banked
  3892  012768  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  3893  01276A  A4D8               	btfss	status,2,c
  3894  01276C  D02D               	goto	l12197
  3895                           
  3896                           ; BSR set to: 2
  3897                           ;main.c: 307:       lp_filter(0.0, i, -1);
  3898  01276E  0EFF               	movlw	255
  3899  012770  6EE6               	movwf	postinc1,c
  3900                           
  3901                           ;stkvar	_i @ sp[(-6)+2]
  3902  012772  0EFC               	movlw	-4
  3903  012774  50E3               	movf	plusw1,w,c
  3904  012776  6EE6               	movwf	postinc1,c
  3905  012778  0E00               	movlw	0
  3906  01277A  6EE6               	movwf	postinc1,c
  3907  01277C  0E00               	movlw	0
  3908  01277E  6EE6               	movwf	postinc1,c
  3909  012780  0E00               	movlw	0
  3910  012782  6EE6               	movwf	postinc1,c
  3911  012784  0E00               	movlw	0
  3912  012786  6EE6               	movwf	postinc1,c
  3913  012788  EC71  F0B9         	call	_lp_filter	;wreg free
  3914                           
  3915                           ;main.c: 308:       lp_filter(0.0, j, -1);
  3916  01278C  0EFF               	movlw	255
  3917  01278E  6EE6               	movwf	postinc1,c
  3918                           
  3919                           ;stkvar	_j @ sp[(-6)+1]
  3920  012790  0EFB               	movlw	-5
  3921  012792  50E3               	movf	plusw1,w,c
  3922  012794  6EE6               	movwf	postinc1,c
  3923  012796  0E00               	movlw	0
  3924  012798  6EE6               	movwf	postinc1,c
  3925  01279A  0E00               	movlw	0
  3926  01279C  6EE6               	movwf	postinc1,c
  3927  01279E  0E00               	movlw	0
  3928  0127A0  6EE6               	movwf	postinc1,c
  3929  0127A2  0E00               	movlw	0
  3930  0127A4  6EE6               	movwf	postinc1,c
  3931  0127A6  EC71  F0B9         	call	_lp_filter	;wreg free
  3932                           
  3933                           ;main.c: 309:       lp_filter(0.0, k, -1);
  3934  0127AA  0EFF               	movlw	255
  3935  0127AC  6EE6               	movwf	postinc1,c
  3936                           
  3937                           ;stkvar	_k @ sp[(-6)+0]
  3938  0127AE  0EFA               	movlw	-6
  3939  0127B0  50E3               	movf	plusw1,w,c
  3940  0127B2  6EE6               	movwf	postinc1,c
  3941  0127B4  0E00               	movlw	0
  3942  0127B6  6EE6               	movwf	postinc1,c
  3943  0127B8  0E00               	movlw	0
  3944  0127BA  6EE6               	movwf	postinc1,c
  3945  0127BC  0E00               	movlw	0
  3946  0127BE  6EE6               	movwf	postinc1,c
  3947  0127C0  0E00               	movlw	0
  3948  0127C2  6EE6               	movwf	postinc1,c
  3949  0127C4  EC71  F0B9         	call	_lp_filter	;wreg free
  3950  0127C8                     l12197:
  3951                           
  3952                           ;main.c: 311:      V.calib = 1;
  3953  0127C8  0E01               	movlw	1
  3954  0127CA  0102               	movlb	2	; () banked
  3955  0127CC  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  3956                           
  3957                           ; BSR set to: 2
  3958                           ;main.c: 312:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  3959  0127CE  0E02               	movlw	2
  3960  0127D0  6EE6               	movwf	postinc1,c
  3961  0127D2  EC51  F0D1         	call	_get_switch	;wreg free
  3962  0127D6  5001               	movf	btemp^0,w,c
  3963  0127D8  6EE6               	movwf	postinc1,c
  3964  0127DA  0E00               	movlw	0
  3965  0127DC  6EE6               	movwf	postinc1,c
  3966                           
  3967                           ;stkvar	_i @ sp[(-7)+2]
  3968  0127DE  0EFB               	movlw	-5
  3969  0127E0  50E3               	movf	plusw1,w,c
  3970  0127E2  0D04               	mullw	4
  3971  0127E4  0E00               	movlw	low _C
  3972  0127E6  24F3               	addwf	243,w,c
  3973  0127E8  6ED9               	movwf	fsr2l,c
  3974  0127EA  0E01               	movlw	high _C
  3975  0127EC  20F4               	addwfc	prodh,w,c
  3976  0127EE  6EDA               	movwf	fsr2h,c
  3977  0127F0  006F FF7B FFE6     	movff	postinc2,postinc1
  3978  0127F6  006F FF7B FFE6     	movff	postinc2,postinc1
  3979  0127FC  006F FF7B FFE6     	movff	postinc2,postinc1
  3980  012802  006F FF7B FFE6     	movff	postinc2,postinc1
  3981                           
  3982                           ;stkvar	_i @ sp[(-11)+2]
  3983  012808  0EF7               	movlw	-9
  3984  01280A  50E3               	movf	plusw1,w,c
  3985  01280C  6EE6               	movwf	postinc1,c
  3986  01280E  EC3C  F0D3         	call	_get_raw_result	;wreg free
  3987  012812  0060  F007  FFE6   	movff	btemp,postinc1
  3988  012818  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3989  01281E  0E86               	movlw	low STR_9
  3990  012820  6EE6               	movwf	postinc1,c
  3991  012822  0EFF               	movlw	high STR_9
  3992  012824  6EE6               	movwf	postinc1,c
  3993  012826  0E00               	movlw	0
  3994  012828  6EE6               	movwf	postinc1,c
  3995  01282A  0E00               	movlw	0
  3996  01282C  6EE6               	movwf	postinc1,c
  3997  01282E  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  3998  012832  0060  F007  FFE6   	movff	btemp,postinc1
  3999  012838  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4000  01283E  0E0C               	movlw	12
  4001  012840  6EE6               	movwf	postinc1,c
  4002  012842  ECD6  F0C3         	call	_sprintf	;wreg free
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;main.c: 313:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4006  012846  0E03               	movlw	3
  4007  012848  6EE6               	movwf	postinc1,c
  4008  01284A  EC51  F0D1         	call	_get_switch	;wreg free
  4009  01284E  5001               	movf	btemp^0,w,c
  4010  012850  6EE6               	movwf	postinc1,c
  4011  012852  0E00               	movlw	0
  4012  012854  6EE6               	movwf	postinc1,c
  4013                           
  4014                           ;stkvar	_j @ sp[(-7)+1]
  4015  012856  0EFA               	movlw	-6
  4016  012858  50E3               	movf	plusw1,w,c
  4017  01285A  0D04               	mullw	4
  4018  01285C  0E00               	movlw	low _C
  4019  01285E  24F3               	addwf	243,w,c
  4020  012860  6ED9               	movwf	fsr2l,c
  4021  012862  0E01               	movlw	high _C
  4022  012864  20F4               	addwfc	prodh,w,c
  4023  012866  6EDA               	movwf	fsr2h,c
  4024  012868  006F FF7B FFE6     	movff	postinc2,postinc1
  4025  01286E  006F FF7B FFE6     	movff	postinc2,postinc1
  4026  012874  006F FF7B FFE6     	movff	postinc2,postinc1
  4027  01287A  006F FF7B FFE6     	movff	postinc2,postinc1
  4028                           
  4029                           ;stkvar	_j @ sp[(-11)+1]
  4030  012880  0EF6               	movlw	-10
  4031  012882  50E3               	movf	plusw1,w,c
  4032  012884  6EE6               	movwf	postinc1,c
  4033  012886  EC3C  F0D3         	call	_get_raw_result	;wreg free
  4034  01288A  0060  F007  FFE6   	movff	btemp,postinc1
  4035  012890  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4036  012896  0E86               	movlw	low STR_9
  4037  012898  6EE6               	movwf	postinc1,c
  4038  01289A  0EFF               	movlw	high STR_9
  4039  01289C  6EE6               	movwf	postinc1,c
  4040  01289E  0E00               	movlw	0
  4041  0128A0  6EE6               	movwf	postinc1,c
  4042  0128A2  0E01               	movlw	1
  4043  0128A4  6EE6               	movwf	postinc1,c
  4044  0128A6  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  4045  0128AA  0060  F007  FFE6   	movff	btemp,postinc1
  4046  0128B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4047  0128B6  0E0C               	movlw	12
  4048  0128B8  6EE6               	movwf	postinc1,c
  4049  0128BA  ECD6  F0C3         	call	_sprintf	;wreg free
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;main.c: 314:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4053                           ;stkvar	_inp_index @ sp[(-5)+3]
  4054  0128BE  0EFE               	movlw	-2
  4055  0128C0  50E3               	movf	plusw1,w,c
  4056  0128C2  6E0B               	movwf	(btemp+10)^0,c
  4057  0128C4  6A0C               	clrf	(btemp+11)^0,c
  4058  0128C6  0E01               	movlw	1
  4059  0128C8  260B               	addwf	(btemp+10)^0,f,c
  4060  0128CA  0E00               	movlw	0
  4061  0128CC  220C               	addwfc	(btemp+11)^0,f,c
  4062  0128CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4063  0128D4  0060  F033  FFE6   	movff	btemp+11,postinc1
  4064                           
  4065                           ;stkvar	_k @ sp[(-7)+0]
  4066  0128DA  0EF9               	movlw	-7
  4067  0128DC  50E3               	movf	plusw1,w,c
  4068  0128DE  0D04               	mullw	4
  4069  0128E0  0E00               	movlw	low _C
  4070  0128E2  24F3               	addwf	243,w,c
  4071  0128E4  6ED9               	movwf	fsr2l,c
  4072  0128E6  0E01               	movlw	high _C
  4073  0128E8  20F4               	addwfc	prodh,w,c
  4074  0128EA  6EDA               	movwf	fsr2h,c
  4075  0128EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4076  0128F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4077  0128F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4078  0128FE  006F FF7B FFE6     	movff	postinc2,postinc1
  4079                           
  4080                           ;stkvar	_k @ sp[(-11)+0]
  4081  012904  0EF5               	movlw	-11
  4082  012906  50E3               	movf	plusw1,w,c
  4083  012908  6EE6               	movwf	postinc1,c
  4084  01290A  EC3C  F0D3         	call	_get_raw_result	;wreg free
  4085  01290E  0060  F007  FFE6   	movff	btemp,postinc1
  4086  012914  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4087  01291A  0E75               	movlw	low STR_11
  4088  01291C  6EE6               	movwf	postinc1,c
  4089  01291E  0EFF               	movlw	high STR_11
  4090  012920  6EE6               	movwf	postinc1,c
  4091  012922  0E00               	movlw	0
  4092  012924  6EE6               	movwf	postinc1,c
  4093  012926  0E02               	movlw	2
  4094  012928  6EE6               	movwf	postinc1,c
  4095  01292A  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  4096  01292E  0060  F007  FFE6   	movff	btemp,postinc1
  4097  012934  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4098  01293A  0E0C               	movlw	12
  4099  01293C  6EE6               	movwf	postinc1,c
  4100  01293E  ECD6  F0C3         	call	_sprintf	;wreg free
  4101                           
  4102                           ;main.c: 315:      break;
  4103  012942  D015               	goto	l12209
  4104  012944                     l12207:
  4105  012944  0100               	movlb	0	; () banked
  4106  012946  51F3               	movf	_H& (0+255),w,b
  4107  012948  6E0B               	movwf	(btemp+10)^0,c
  4108  01294A  6A0C               	clrf	(btemp+11)^0,c
  4109                           
  4110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4111                           ; Switch size 1, requested type "simple"
  4112                           ; Number of cases is 1, Range of values is 0 to 0
  4113                           ; switch strategies available:
  4114                           ; Name         Instructions Cycles
  4115                           ; simple_byte            4     3 (average)
  4116                           ;	Chosen strategy is simple_byte
  4117  01294C  500C               	movf	(btemp+11)^0,w,c
  4118  01294E  0A00               	xorlw	0	; case 0
  4119  012950  A4D8               	btfss	status,2,c
  4120  012952  D00D               	goto	l12209
  4121                           
  4122                           ; BSR set to: 0
  4123                           ; Switch size 1, requested type "simple"
  4124                           ; Number of cases is 4, Range of values is 0 to 3
  4125                           ; switch strategies available:
  4126                           ; Name         Instructions Cycles
  4127                           ; simple_byte           13     7 (average)
  4128                           ;	Chosen strategy is simple_byte
  4129  012954  500B               	movf	(btemp+10)^0,w,c
  4130  012956  0A00               	xorlw	0	; case 0
  4131  012958  B4D8               	btfsc	status,2,c
  4132  01295A  D60F               	goto	l1328
  4133  01295C  0A01               	xorlw	1	; case 1
  4134  01295E  B4D8               	btfsc	status,2,c
  4135  012960  D5A9               	goto	l1326
  4136  012962  0A03               	xorlw	3	; case 2
  4137  012964  B4D8               	btfsc	status,2,c
  4138  012966  D690               	goto	l1329
  4139  012968  0A01               	xorlw	1	; case 3
  4140  01296A  B4D8               	btfsc	status,2,c
  4141  01296C  D6FC               	goto	l12193
  4142  01296E                     l12209:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;main.c: 319:     clear_hid_pflags(&H);
  4146  01296E  0EF3               	movlw	_H& (0+255)
  4147  012970  6EE6               	movwf	postinc1,c
  4148  012972  EC90  F0D2         	call	_clear_hid_pflags	;wreg free
  4149                           
  4150                           ;main.c: 321:    StartTimer(TMR_DISPLAY, 250);
  4151  012976  0EFA               	movlw	250
  4152  012978  6EE6               	movwf	postinc1,c
  4153  01297A  0E00               	movlw	0
  4154  01297C  6EE6               	movwf	postinc1,c
  4155  01297E  0E0A               	movlw	10
  4156  012980  6EE6               	movwf	postinc1,c
  4157  012982  EC06  F0CF         	call	_StartTimer	;wreg free
  4158                           
  4159                           ;main.c: 322:    update_lcd(0);
  4160  012986  0E00               	movlw	0
  4161  012988  6EE6               	movwf	postinc1,c
  4162  01298A  ECC7  F0C2         	call	_update_lcd	;wreg free
  4163  01298E                     l12215:
  4164                           
  4165                           ;main.c: 328:   check_help(V.flipper);
  4166  01298E  0102               	movlb	2	; () banked
  4167  012990  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4168  012992  6EE6               	movwf	postinc1,c
  4169  012994  EC66  F0B6         	call	_check_help	;wreg free
  4170                           
  4171                           ;main.c: 330:   if (check_enter_button(&H)) {
  4172  012998  0EF3               	movlw	_H& (0+255)
  4173  01299A  6EE6               	movwf	postinc1,c
  4174  01299C  EC26  F0CF         	call	_check_enter_button	;wreg free
  4175  0129A0  5001               	movf	btemp^0,w,c
  4176  0129A2  B4D8               	btfsc	status,2,c
  4177  0129A4  D062               	goto	l1333
  4178                           
  4179                           ;main.c: 331:    V.calib = 0;
  4180  0129A6  0102               	movlb	2	; () banked
  4181  0129A8  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4182                           
  4183                           ; BSR set to: 2
  4184                           ;main.c: 332:    inp_index += 3;
  4185                           ;stkvar	_inp_index @ sp[(-5)+3]
  4186  0129AA  0EFE               	movlw	-2
  4187  0129AC  006F FF8C  F001    	movff	plusw1,btemp
  4188  0129B2  0E03               	movlw	3
  4189  0129B4  2601               	addwf	btemp^0,f,c
  4190  0129B6  0EFE               	movlw	-2
  4191  0129B8  0060  F007  FFE3   	movff	btemp,plusw1
  4192                           
  4193                           ;main.c: 333:    if (inp_index > 9)
  4194                           ;stkvar	_inp_index @ sp[(-5)+3]
  4195  0129BE  0EFE               	movlw	-2
  4196  0129C0  006F FF8C  F001    	movff	plusw1,btemp
  4197  0129C6  0E09               	movlw	9
  4198  0129C8  6401               	cpfsgt	btemp^0,c
  4199  0129CA  D03A               	goto	l12243
  4200                           
  4201                           ; BSR set to: 2
  4202                           ;main.c: 334:     inp_index = 0;
  4203                           ;stkvar	_inp_index @ sp[(-5)+3]
  4204  0129CC  0EFE               	movlw	-2
  4205  0129CE  6AE3               	clrf	plusw1,c
  4206  0129D0  D037               	goto	l12243
  4207  0129D2                     l12225:
  4208                           
  4209                           ; BSR set to: 2
  4210                           ;main.c: 337:     i = C_BATT;
  4211                           ;stkvar	_i @ sp[(-5)+2]
  4212  0129D2  0EFD               	movlw	-3
  4213  0129D4  6AE3               	clrf	plusw1,c
  4214                           
  4215                           ; BSR set to: 2
  4216                           ;main.c: 338:     j = C_PV;
  4217                           ;stkvar	_j @ sp[(-5)+1]
  4218  0129D6  0EFC               	movlw	-4
  4219  0129D8  6AE3               	clrf	plusw1,c
  4220  0129DA  2AE3               	incf	plusw1,f,c
  4221                           
  4222                           ; BSR set to: 2
  4223                           ;main.c: 339:     k = V_CC;
  4224                           ;stkvar	_k @ sp[(-5)+0]
  4225  0129DC  0EFB               	movlw	-5
  4226  0129DE  6AE3               	clrf	plusw1,c
  4227  0129E0  82E3               	bsf	plusw1,1,c
  4228                           
  4229                           ;main.c: 340:     break;
  4230  0129E2  D043               	goto	l1333
  4231  0129E4                     l12231:
  4232                           
  4233                           ; BSR set to: 2
  4234                           ;main.c: 342:     i = V_BAT;
  4235                           ;stkvar	_i @ sp[(-5)+2]
  4236  0129E4  0EFD               	movlw	-3
  4237  0129E6  6AE3               	clrf	plusw1,c
  4238  0129E8  84E3               	bsf	plusw1,2,c
  4239                           
  4240                           ;main.c: 343:     j = V_PV;
  4241                           ;stkvar	_j @ sp[(-5)+1]
  4242  0129EA  0EFC               	movlw	-4
  4243  0129EC  6AE3               	clrf	plusw1,c
  4244  0129EE  80E3               	bsf	plusw1,0,c
  4245  0129F0  84E3               	bsf	plusw1,2,c	;indir
  4246                           
  4247                           ;main.c: 344:     k = V_CBUS;
  4248                           ;stkvar	_k @ sp[(-5)+0]
  4249  0129F2  0EFB               	movlw	-5
  4250  0129F4  6AE3               	clrf	plusw1,c
  4251  0129F6  82E3               	bsf	plusw1,1,c
  4252  0129F8  84E3               	bsf	plusw1,2,c	;indir
  4253                           
  4254                           ;main.c: 345:     break;
  4255  0129FA  D037               	goto	l1333
  4256  0129FC                     l12233:
  4257                           
  4258                           ; BSR set to: 2
  4259                           ;main.c: 347:     i = V_BBAT;
  4260                           ;stkvar	_i @ sp[(-5)+2]
  4261  0129FC  0EFD               	movlw	-3
  4262  0129FE  6AE3               	clrf	plusw1,c
  4263  012A00  82E3               	bsf	plusw1,1,c
  4264  012A02  86E3               	bsf	plusw1,3,c	;indir
  4265                           
  4266                           ; BSR set to: 2
  4267                           ;main.c: 348:     j = V_TEMP;
  4268  012A04  0E0B               	movlw	11
  4269  012A06  6E0C               	movwf	(btemp+11)^0,c
  4270                           
  4271                           ;stkvar	_j @ sp[(-5)+1]
  4272  012A08  0EFC               	movlw	-4
  4273  012A0A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4274                           
  4275                           ; BSR set to: 2
  4276                           ;main.c: 349:     k = V_INVERTER;
  4277                           ;stkvar	_k @ sp[(-5)+0]
  4278  012A10  0EFB               	movlw	-5
  4279  012A12  6AE3               	clrf	plusw1,c
  4280  012A14  84E3               	bsf	plusw1,2,c
  4281  012A16  86E3               	bsf	plusw1,3,c	;indir
  4282                           
  4283                           ;main.c: 350:     break;
  4284  012A18  D028               	goto	l1333
  4285  012A1A                     l12239:
  4286                           
  4287                           ; BSR set to: 2
  4288                           ;main.c: 352:     i = channel_ANB5;
  4289  012A1A  0E0D               	movlw	13
  4290  012A1C  6E0C               	movwf	(btemp+11)^0,c
  4291                           
  4292                           ;stkvar	_i @ sp[(-5)+2]
  4293  012A1E  0EFD               	movlw	-3
  4294  012A20  0060  F033  FFE3   	movff	btemp+11,plusw1
  4295                           
  4296                           ;main.c: 353:     j = channel_ANB5;
  4297  012A26  0E0D               	movlw	13
  4298  012A28  6E0C               	movwf	(btemp+11)^0,c
  4299                           
  4300                           ;stkvar	_j @ sp[(-5)+1]
  4301  012A2A  0EFC               	movlw	-4
  4302  012A2C  0060  F033  FFE3   	movff	btemp+11,plusw1
  4303                           
  4304                           ;main.c: 354:     k = channel_ANB5;
  4305  012A32  0E0D               	movlw	13
  4306  012A34  6E0C               	movwf	(btemp+11)^0,c
  4307                           
  4308                           ;stkvar	_k @ sp[(-5)+0]
  4309  012A36  0EFB               	movlw	-5
  4310  012A38  0060  F033  FFE3   	movff	btemp+11,plusw1
  4311                           
  4312                           ;main.c: 355:     break;
  4313  012A3E  D015               	goto	l1333
  4314  012A40                     l12243:
  4315                           
  4316                           ; BSR set to: 2
  4317                           ;stkvar	_inp_index @ sp[(-5)+3]
  4318  012A40  0EFE               	movlw	-2
  4319  012A42  50E3               	movf	plusw1,w,c
  4320  012A44  6E0B               	movwf	(btemp+10)^0,c
  4321  012A46  6A0C               	clrf	(btemp+11)^0,c
  4322                           
  4323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4324                           ; Switch size 1, requested type "simple"
  4325                           ; Number of cases is 1, Range of values is 0 to 0
  4326                           ; switch strategies available:
  4327                           ; Name         Instructions Cycles
  4328                           ; simple_byte            4     3 (average)
  4329                           ;	Chosen strategy is simple_byte
  4330  012A48  500C               	movf	(btemp+11)^0,w,c
  4331  012A4A  0A00               	xorlw	0	; case 0
  4332  012A4C  A4D8               	btfss	status,2,c
  4333  012A4E  D00D               	goto	l1333
  4334                           
  4335                           ; BSR set to: 2
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 4, Range of values is 0 to 9
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte           13     7 (average)
  4341                           ;	Chosen strategy is simple_byte
  4342  012A50  500B               	movf	(btemp+10)^0,w,c
  4343  012A52  0A00               	xorlw	0	; case 0
  4344  012A54  B4D8               	btfsc	status,2,c
  4345  012A56  D7BD               	goto	l12225
  4346  012A58  0A03               	xorlw	3	; case 3
  4347  012A5A  B4D8               	btfsc	status,2,c
  4348  012A5C  D7C3               	goto	l12231
  4349  012A5E  0A05               	xorlw	5	; case 6
  4350  012A60  B4D8               	btfsc	status,2,c
  4351  012A62  D7CC               	goto	l12233
  4352  012A64  0A0F               	xorlw	15	; case 9
  4353  012A66  B4D8               	btfsc	status,2,c
  4354  012A68  D7D8               	goto	l12239
  4355  012A6A                     l1333:
  4356                           
  4357                           ;main.c: 364:   if (V.set_sequ) {
  4358  012A6A  0102               	movlb	2	; () banked
  4359  012A6C  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4360  012A6E  D4D8               	goto	l12159
  4361                           
  4362                           ; BSR set to: 2
  4363                           ;main.c: 365:    if (TimerDone(TMR_INFO)) {
  4364  012A70  0E07               	movlw	7
  4365  012A72  6EE6               	movwf	postinc1,c
  4366  012A74  EC65  F0D1         	call	_TimerDone	;wreg free
  4367  012A78  5001               	movf	btemp^0,w,c
  4368  012A7A  B4D8               	btfsc	status,2,c
  4369  012A7C  D00B               	goto	l12253
  4370                           
  4371                           ;main.c: 366:     V.set_sequ = 0;
  4372  012A7E  0102               	movlb	2	; () banked
  4373  012A80  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4374                           
  4375                           ; BSR set to: 2
  4376                           ;main.c: 367:     set_vterm(0);
  4377  012A82  0E00               	movlw	0
  4378  012A84  6EE6               	movwf	postinc1,c
  4379  012A86  EC4B  F0D3         	call	_set_vterm	;wreg free
  4380                           
  4381                           ;main.c: 368:     update_lcd(0);
  4382  012A8A  0E00               	movlw	0
  4383  012A8C  6EE6               	movwf	postinc1,c
  4384  012A8E  ECC7  F0C2         	call	_update_lcd	;wreg free
  4385                           
  4386                           ;main.c: 369:    } else {
  4387  012A92  D4C6               	goto	l12159
  4388  012A94                     l12253:
  4389                           
  4390                           ;main.c: 370:     set_vterm(2);
  4391  012A94  0E02               	movlw	2
  4392  012A96  6EE6               	movwf	postinc1,c
  4393  012A98  EC4B  F0D3         	call	_set_vterm	;wreg free
  4394                           
  4395                           ;main.c: 371:     update_lcd(2);
  4396  012A9C  0E02               	movlw	2
  4397  012A9E  6EE6               	movwf	postinc1,c
  4398  012AA0  ECC7  F0C2         	call	_update_lcd	;wreg free
  4399  012AA4  D4BD               	goto	l12159
  4400  012AA6                     __end_of_main:
  4401                           	opt callstack 0
  4402                           
  4403 ;; *************** function _static_soc *****************
  4404 ;; Defined at:
  4405 ;;		line 84 in file "mbmc.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1  [STACK] void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/39
  4416 ;;		On exit  : 3F/1
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:   15
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_main
  4430 ;; This function uses a reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text1
  4434  01A4FC                     __ptext1:
  4435                           	opt callstack 0
  4436  01A4FC                     _static_soc:
  4437                           	opt callstack 15
  4438                           
  4439                           ;mbmc.c: 86:  C.runtime = 120;
  4440                           
  4441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4442                           ;incstack = 0
  4443  01A4FC  0E00               	movlw	0
  4444  01A4FE  0101               	movlb	1	; () banked
  4445  01A500  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
  4446  01A502  0E78               	movlw	120
  4447  01A504  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
  4448                           
  4449                           ;mbmc.c: 87:  C.soc = 100;
  4450  01A506  0E00               	movlw	0
  4451  01A508  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
  4452  01A50A  0E64               	movlw	100
  4453  01A50C  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
  4454                           
  4455                           ; BSR set to: 1
  4456                           ;mbmc.c: 88:  C.dynamic_ah = C.bank_ah;
  4457  01A50E  C17C  F180         	movff	_C+124,_C+128	;volatile
  4458  01A512  C17D  F181         	movff	_C+125,_C+129	;volatile
  4459  01A516  C17E  F182         	movff	_C+126,_C+130	;volatile
  4460  01A51A  C17F  F183         	movff	_C+127,_C+131	;volatile
  4461                           
  4462                           ; BSR set to: 1
  4463                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4464  01A51E  0012               	return		;funcret
  4465  01A520                     __end_of_static_soc:
  4466                           	opt callstack 0
  4467                           
  4468 ;; *************** function _start_switch_handler *****************
  4469 ;; Defined at:
  4470 ;;		line 119 in file "dio.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1  [STACK] void 
  4477 ;; Registers used:
  4478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4479 ;; Tracked objects:
  4480 ;;		On entry : 1/0
  4481 ;;		On exit  : 3F/39
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:   16
  4491 ;; This function calls:
  4492 ;;		_INT1_SetInterruptHandler
  4493 ;; This function is called by:
  4494 ;;		_main
  4495 ;; This function uses a reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text2
  4499  01A61A                     __ptext2:
  4500                           	opt callstack 0
  4501  01A61A                     _start_switch_handler:
  4502                           	opt callstack 14
  4503                           
  4504                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  4505                           
  4506                           ; BSR set to: 1
  4507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4508                           ;incstack = 0
  4509  01A61A  0139               	movlb	57	; () banked
  4510  01A61C  9195               	bcf	149,0,b	;volatile
  4511                           
  4512                           ; BSR set to: 57
  4513                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  4514  01A61E  0E16               	movlw	low _switch_handler
  4515  01A620  6EE6               	movwf	postinc1,c
  4516  01A622  0E81               	movlw	high _switch_handler
  4517  01A624  6EE6               	movwf	postinc1,c
  4518  01A626  0E01               	movlw	low (_switch_handler shr (0+16))
  4519  01A628  6EE6               	movwf	postinc1,c
  4520  01A62A  ECF1  F0D1         	call	_INT1_SetInterruptHandler	;wreg free
  4521                           
  4522                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  4523  01A62E  0E02               	movlw	2
  4524  01A630  0100               	movlb	0	; () banked
  4525  01A632  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  4529  01A634  0139               	movlb	57	; () banked
  4530  01A636  8195               	bsf	149,0,b	;volatile
  4531                           
  4532                           ; BSR set to: 57
  4533                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  4534  01A638  0012               	return		;funcret
  4535  01A63A                     __end_of_start_switch_handler:
  4536                           	opt callstack 0
  4537                           
  4538 ;; *************** function _start_adc_scan *****************
  4539 ;; Defined at:
  4540 ;;		line 33 in file "daq.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1  [STACK] _Bool 
  4547 ;; Registers used:
  4548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 1/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4558 ;;Total ram usage:        0 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:   16
  4561 ;; This function calls:
  4562 ;;		_ADCC_DischargeSampleCapacitor
  4563 ;;		_ADCC_SetADIInterruptHandler
  4564 ;;		_ADCC_SetADTIInterruptHandler
  4565 ;;		_ADCC_StartConversion
  4566 ;; This function is called by:
  4567 ;;		_main
  4568 ;; This function uses a reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text3
  4572  0197BC                     __ptext3:
  4573                           	opt callstack 0
  4574  0197BC                     _start_adc_scan:
  4575                           	opt callstack 14
  4576                           
  4577                           ;daq.c: 35:  if (R.done)
  4578                           
  4579                           ; BSR set to: 57
  4580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4581                           ;incstack = 0
  4582  0197BC  0100               	movlb	0	; () banked
  4583  0197BE  51F2               	movf	(_R+39)& (0+255),w,b	;volatile
  4584  0197C0  A4D8               	btfss	status,2,c
  4585  0197C2  0012               	return	
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;daq.c: 38:  R.scan_index = 0;
  4589  0197C4  6BEF               	clrf	(_R+36)& (0+255),b	;volatile
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  4593  0197C6  013A               	movlb	58	; () banked
  4594  0197C8  5140               	movf	64,w,b	;volatile
  4595  0197CA  006E F940  F001    	movff	14928,btemp	;volatile
  4596  0197D0  6A02               	clrf	(btemp+1)^0,c
  4597  0197D2  0060  F004  F002   	movff	btemp,btemp+1
  4598  0197D8  6A01               	clrf	btemp^0,c
  4599  0197DA  2601               	addwf	btemp^0,f,c
  4600  0197DC  0E00               	movlw	0
  4601  0197DE  2202               	addwfc	(btemp+1)^0,f,c
  4602  0197E0  0E77               	movlw	119
  4603  0197E2  1401               	andwf	btemp^0,w,c
  4604  0197E4  0100               	movlb	0	; () banked
  4605  0197E6  6FF0               	movwf	(_R+37)& (0+255),b	;volatile
  4606  0197E8  0E3C               	movlw	60
  4607  0197EA  1402               	andwf	(btemp+1)^0,w,c
  4608  0197EC  6FF1               	movwf	(_R+38)& (0+255),b	;volatile
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  4612  0197EE  0EAE               	movlw	low _adc_int_handler
  4613  0197F0  6EE6               	movwf	postinc1,c
  4614  0197F2  0EA8               	movlw	high _adc_int_handler
  4615  0197F4  6EE6               	movwf	postinc1,c
  4616  0197F6  0E01               	movlw	low (_adc_int_handler shr (0+16))
  4617  0197F8  6EE6               	movwf	postinc1,c
  4618  0197FA  EC2D  F0D2         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4619                           
  4620                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  4621  0197FE  0E98               	movlw	low _adc_int_t_handler
  4622  019800  6EE6               	movwf	postinc1,c
  4623  019802  0E95               	movlw	high _adc_int_t_handler
  4624  019804  6EE6               	movwf	postinc1,c
  4625  019806  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  4626  019808  6EE6               	movwf	postinc1,c
  4627  01980A  EC19  F0D2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  4628                           
  4629                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  4630  01980E  EC2F  F0D4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  4631                           
  4632                           ; BSR set to: 62
  4633                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  4634  019812  0100               	movlb	0	; () banked
  4635  019814  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
  4636  019816  0B0F               	andlw	15
  4637  019818  6EE6               	movwf	postinc1,c
  4638  01981A  ECE4  F0D3         	call	_ADCC_StartConversion	;wreg free
  4639                           
  4640                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4641  01981E  0012               	return		;funcret
  4642  019820                     __end_of_start_adc_scan:
  4643                           	opt callstack 0
  4644                           
  4645 ;; *************** function _ADCC_StartConversion *****************
  4646 ;; Defined at:
  4647 ;;		line 128 in file "mcc_generated_files/adcc.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  channel         1  [STACK] enum E16136
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1  [STACK] void 
  4654 ;; Registers used:
  4655 ;;		fsr1l, fsr1h
  4656 ;; Tracked objects:
  4657 ;;		On entry : 3F/0
  4658 ;;		On exit  : 3F/3E
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:   15
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_start_adc_scan
  4672 ;;		_adc_int_t_handler
  4673 ;; This function uses a reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text4
  4677  01A7C8                     __ptext4:
  4678                           	opt callstack 0
  4679  01A7C8                     _ADCC_StartConversion:
  4680                           	opt callstack 0
  4681                           
  4682                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  4683                           ;stkvar	_channel @ sp[(0)+-1]
  4684                           
  4685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4686                           ;incstack = 0
  4687 ;; hardware stack exceeded
  4688  01A7C8  0EFF               	movlw	-1
  4689  01A7CA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  4690                           
  4691                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  4692  01A7D0  013E               	movlb	62	; () banked
  4693  01A7D2  8FF8               	bsf	248,7,b	;volatile
  4694                           
  4695                           ; BSR set to: 62
  4696                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  4697  01A7D4  81F8               	bsf	248,0,b	;volatile
  4698                           
  4699                           ; BSR set to: 62
  4700                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  4701  01A7D6  52E5               	movf	postdec1,f,c
  4702  01A7D8  0012               	return		;funcret
  4703  01A7DA                     __end_of_ADCC_StartConversion:
  4704                           	opt callstack 0
  4705                           
  4706 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4707 ;; Defined at:
  4708 ;;		line 189 in file "mcc_generated_files/adcc.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1  [STACK] void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 3F/3E
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4726 ;;Total ram usage:        0 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:   15
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_start_adc_scan
  4733 ;;		_adc_int_t_handler
  4734 ;; This function uses a reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text5
  4738  01A85E                     __ptext5:
  4739                           	opt callstack 0
  4740  01A85E                     _ADCC_DischargeSampleCapacitor:
  4741                           	opt callstack 0
  4742                           
  4743                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  4744                           
  4745                           ; BSR set to: 62
  4746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4747                           ;incstack = 0
  4748 ;; hardware stack exceeded
  4749  01A85E  0E3B               	movlw	59
  4750  01A860  013E               	movlb	62	; () banked
  4751  01A862  6FF1               	movwf	241,b	;volatile
  4752                           
  4753                           ; BSR set to: 62
  4754                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  4755  01A864  0012               	return		;funcret
  4756  01A866                     __end_of_ADCC_DischargeSampleCapacitor:
  4757                           	opt callstack 0
  4758                           
  4759 ;; *************** function _srand *****************
  4760 ;; Defined at:
  4761 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  s               2  [STACK] unsigned int 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1  [STACK] void 
  4768 ;; Registers used:
  4769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4770 ;; Tracked objects:
  4771 ;;		On entry : 3F/0
  4772 ;;		On exit  : 3F/2
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4779 ;;Total ram usage:        0 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:   15
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_main
  4786 ;; This function uses a reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text6
  4790  019FEE                     __ptext6:
  4791                           	opt callstack 0
  4792  019FEE                     _srand:
  4793                           	opt callstack 15
  4794                           
  4795                           ;stkvar	_s @ sp[(0)+-2]
  4796                           
  4797                           ; BSR set to: 62
  4798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4799                           ;incstack = 0
  4800  019FEE  0EFE               	movlw	-2
  4801  019FF0  50E3               	movf	plusw1,w,c
  4802  019FF2  0FFF               	addlw	255
  4803  019FF4  6E0B               	movwf	(btemp+10)^0,c
  4804  019FF6  0EFF               	movlw	-1
  4805  019FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
  4806  019FFE  0EFF               	movlw	255
  4807  01A000  220C               	addwfc	(btemp+11)^0,f,c
  4808  01A002  0060  F02C  F2D5   	movff	btemp+10,_seed
  4809  01A008  0060  F030  F2D6   	movff	btemp+11,_seed+1
  4810  01A00E  0102               	movlb	2	; () banked
  4811  01A010  6BD7               	clrf	(_seed+2)& (0+255),b
  4812  01A012  6BD8               	clrf	(_seed+3)& (0+255),b
  4813  01A014  6BD9               	clrf	(_seed+4)& (0+255),b
  4814  01A016  6BDA               	clrf	(_seed+5)& (0+255),b
  4815  01A018  6BDB               	clrf	(_seed+6)& (0+255),b
  4816  01A01A  6BDC               	clrf	(_seed+7)& (0+255),b
  4817                           
  4818                           ; BSR set to: 2
  4819                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4820  01A01C  52E5               	movf	postdec1,f,c
  4821  01A01E  52E5               	movf	postdec1,f,c
  4822  01A020  0012               	return		;funcret
  4823  01A022                     __end_of_srand:
  4824                           	opt callstack 0
  4825                           
  4826 ;; *************** function _init_port_dma *****************
  4827 ;; Defined at:
  4828 ;;		line 90 in file "eadog.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1  [STACK] void 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/2
  4839 ;;		On exit  : 3F/3B
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4846 ;;Total ram usage:        0 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:   15
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text7
  4857  01A08A                     __ptext7:
  4858                           	opt callstack 0
  4859  01A08A                     _init_port_dma:
  4860                           	opt callstack 15
  4861                           
  4862                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  4863                           
  4864                           ; BSR set to: 2
  4865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4866                           ;incstack = 0
  4867  01A08A  0E3F               	movlw	-193
  4868  01A08C  013B               	movlb	59	; () banked
  4869  01A08E  17DD               	andwf	221,f,b	;volatile
  4870                           
  4871                           ; BSR set to: 59
  4872                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  4873  01A090  9BDD               	bcf	221,5,b	;volatile
  4874                           
  4875                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  4876  01A092  51DD               	movf	221,w,b	;volatile
  4877  01A094  0BF9               	andlw	-7
  4878  01A096  0902               	iorlw	2
  4879  01A098  6FDD               	movwf	221,b	;volatile
  4880                           
  4881                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  4882  01A09A  0EE7               	movlw	-25
  4883  01A09C  17DD               	andwf	221,f,b	;volatile
  4884                           
  4885                           ; BSR set to: 59
  4886                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  4887  01A09E  81DD               	bsf	221,0,b	;volatile
  4888                           
  4889                           ; BSR set to: 59
  4890                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  4891  01A0A0  9DDC               	bcf	220,6,b	;volatile
  4892                           
  4893                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  4894  01A0A2  0E3D               	movlw	61
  4895  01A0A4  6FD1               	movwf	209,b	;volatile
  4896  01A0A6  0EEA               	movlw	234
  4897  01A0A8  6FD0               	movwf	208,b	;volatile
  4898                           
  4899                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  4900  01A0AA  0EFF               	movlw	low _port_data
  4901  01A0AC  6FD9               	movwf	217,b	;volatile
  4902  01A0AE  0E05               	movlw	high _port_data
  4903  01A0B0  6FDA               	movwf	218,b	;volatile
  4904  01A0B2  0E00               	movlw	low (_port_data shr (0+16))
  4905  01A0B4  6FDB               	movwf	219,b	;volatile
  4906                           
  4907                           ; BSR set to: 59
  4908                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  4909  01A0B6  9BDC               	bcf	220,5,b	;volatile
  4910                           
  4911                           ; BSR set to: 59
  4912                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  4913  01A0B8  0012               	return		;funcret
  4914  01A0BA                     __end_of_init_port_dma:
  4915                           	opt callstack 0
  4916                           
  4917 ;; *************** function _init_display *****************
  4918 ;; Defined at:
  4919 ;;		line 38 in file "eadog.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1  [STACK] void 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4928 ;; Tracked objects:
  4929 ;;		On entry : 3F/3B
  4930 ;;		On exit  : 3F/3D
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4937 ;;Total ram usage:        0 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:   17
  4940 ;; This function calls:
  4941 ;;		_ringBufS_init
  4942 ;;		_send_lcd_cmd
  4943 ;;		_send_lcd_cmd_long
  4944 ;;		_wdtdelay
  4945 ;; This function is called by:
  4946 ;;		_main
  4947 ;; This function uses a reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text8
  4951  0189B8                     __ptext8:
  4952                           	opt callstack 0
  4953  0189B8                     _init_display:
  4954                           	opt callstack 13
  4955                           
  4956                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  4957                           
  4958                           ; BSR set to: 59
  4959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4960                           ;incstack = 0
  4961  0189B8  0E43               	movlw	low _ring_buf1
  4962  0189BA  0100               	movlb	0	; () banked
  4963  0189BC  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4964  0189BE  0E04               	movlw	high _ring_buf1
  4965  0189C0  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4966                           
  4967                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  4968  0189C2  0E00               	movlw	low _ring_buf2
  4969  0189C4  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4970  0189C6  0E04               	movlw	high _ring_buf2
  4971  0189C8  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  4975  0189CA  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  4976  0189D0  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  4977  0189D6  EC3D  F0D1         	call	_ringBufS_init	;wreg free
  4978                           
  4979                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  4980  0189DA  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  4981  0189E0  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  4982  0189E6  EC3D  F0D1         	call	_ringBufS_init	;wreg free
  4983                           
  4984                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  4985  0189EA  84BE               	bsf	190,2,c	;volatile
  4986  0189EC  84BC               	bsf	188,2,c	;volatile
  4987                           
  4988                           ;eadog.c: 59:  wdtdelay(350000);
  4989  0189EE  0E30               	movlw	48
  4990  0189F0  6EE6               	movwf	postinc1,c
  4991  0189F2  0E57               	movlw	87
  4992  0189F4  6EE6               	movwf	postinc1,c
  4993  0189F6  0E05               	movlw	5
  4994  0189F8  6EE6               	movwf	postinc1,c
  4995  0189FA  0E00               	movlw	0
  4996  0189FC  6EE6               	movwf	postinc1,c
  4997  0189FE  ECA1  F0CC         	call	_wdtdelay	;wreg free
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5001  018A02  0E39               	movlw	57
  5002  018A04  6EE6               	movwf	postinc1,c
  5003  018A06  EC29  F0D1         	call	_send_lcd_cmd	;wreg free
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5007  018A0A  0E1D               	movlw	29
  5008  018A0C  6EE6               	movwf	postinc1,c
  5009  018A0E  EC29  F0D1         	call	_send_lcd_cmd	;wreg free
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5013  018A12  0E50               	movlw	80
  5014  018A14  6EE6               	movwf	postinc1,c
  5015  018A16  EC29  F0D1         	call	_send_lcd_cmd	;wreg free
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5019  018A1A  0E6C               	movlw	108
  5020  018A1C  6EE6               	movwf	postinc1,c
  5021  018A1E  EC29  F0D1         	call	_send_lcd_cmd	;wreg free
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5025  018A22  0E76               	movlw	118
  5026  018A24  6EE6               	movwf	postinc1,c
  5027  018A26  EC29  F0D1         	call	_send_lcd_cmd	;wreg free
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5031  018A2A  0E38               	movlw	56
  5032  018A2C  6EE6               	movwf	postinc1,c
  5033  018A2E  EC15  F0D1         	call	_send_lcd_cmd_long	;wreg free
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5037  018A32  0E0F               	movlw	15
  5038  018A34  6EE6               	movwf	postinc1,c
  5039  018A36  EC29  F0D1         	call	_send_lcd_cmd	;wreg free
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5043  018A3A  0E01               	movlw	1
  5044  018A3C  6EE6               	movwf	postinc1,c
  5045  018A3E  EC15  F0D1         	call	_send_lcd_cmd_long	;wreg free
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5049  018A42  0E02               	movlw	2
  5050  018A44  6EE6               	movwf	postinc1,c
  5051  018A46  EC29  F0D1         	call	_send_lcd_cmd	;wreg free
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5055  018A4A  0E06               	movlw	6
  5056  018A4C  6EE6               	movwf	postinc1,c
  5057  018A4E  EC29  F0D1         	call	_send_lcd_cmd	;wreg free
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;eadog.c: 70:  wdtdelay(30);
  5061  018A52  0E1E               	movlw	30
  5062  018A54  6EE6               	movwf	postinc1,c
  5063  018A56  0E00               	movlw	0
  5064  018A58  6EE6               	movwf	postinc1,c
  5065  018A5A  0E00               	movlw	0
  5066  018A5C  6EE6               	movwf	postinc1,c
  5067  018A5E  0E00               	movlw	0
  5068  018A60  6EE6               	movwf	postinc1,c
  5069  018A62  ECA1  F0CC         	call	_wdtdelay	;wreg free
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5073  018A66  0E02               	movlw	2
  5074  018A68  013D               	movlb	61	; () banked
  5075  018A6A  6F16               	movwf	22,b	;volatile
  5076                           
  5077                           ; BSR set to: 61
  5078                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5079  018A6C  0E40               	movlw	64
  5080  018A6E  6F15               	movwf	21,b	;volatile
  5081                           
  5082                           ; BSR set to: 61
  5083                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5084  018A70  0E83               	movlw	131
  5085  018A72  6F14               	movwf	20,b	;volatile
  5086                           
  5087                           ; BSR set to: 61
  5088                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5089  018A74  931A               	bcf	26,1,b	;volatile
  5090                           
  5091                           ; BSR set to: 61
  5092                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5093  018A76  0E3F               	movlw	-193
  5094  018A78  013B               	movlb	59	; () banked
  5095  018A7A  17FD               	andwf	253,f,b	;volatile
  5096                           
  5097                           ; BSR set to: 59
  5098                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5099  018A7C  9BFD               	bcf	253,5,b	;volatile
  5100                           
  5101                           ; BSR set to: 59
  5102                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5103  018A7E  51FD               	movf	253,w,b	;volatile
  5104  018A80  0BF9               	andlw	-7
  5105  018A82  0902               	iorlw	2
  5106  018A84  6FFD               	movwf	253,b	;volatile
  5107                           
  5108                           ; BSR set to: 59
  5109                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5110  018A86  0EE7               	movlw	-25
  5111  018A88  17FD               	andwf	253,f,b	;volatile
  5112                           
  5113                           ; BSR set to: 59
  5114                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5115  018A8A  81FD               	bsf	253,0,b	;volatile
  5116                           
  5117                           ; BSR set to: 59
  5118                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5119  018A8C  0E43               	movlw	low _ring_buf1
  5120  018A8E  6FF9               	movwf	249,b	;volatile
  5121  018A90  0E04               	movlw	high _ring_buf1
  5122  018A92  6FFA               	movwf	250,b	;volatile
  5123  018A94  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5124  018A96  6FFB               	movwf	251,b	;volatile
  5125                           
  5126                           ; BSR set to: 59
  5127                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5128  018A98  9BFC               	bcf	252,5,b	;volatile
  5129                           
  5130                           ; BSR set to: 59
  5131                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5132  018A9A  013D               	movlb	61	; () banked
  5133  018A9C  831A               	bsf	26,1,b	;volatile
  5134                           
  5135                           ; BSR set to: 61
  5136                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5137  018A9E  94BE               	bcf	190,2,c	;volatile
  5138                           
  5139                           ; BSR set to: 61
  5140                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5141  018AA0  0012               	return		;funcret
  5142  018AA2                     __end_of_init_display:
  5143                           	opt callstack 0
  5144                           
  5145 ;; *************** function _send_lcd_cmd_long *****************
  5146 ;; Defined at:
  5147 ;;		line 129 in file "eadog.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  cmd             1  [STACK] const unsigned char 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;		None
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1  [STACK] void 
  5154 ;; Registers used:
  5155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5156 ;; Tracked objects:
  5157 ;;		On entry : 3F/0
  5158 ;;		On exit  : 3F/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5165 ;;Total ram usage:        0 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:   16
  5168 ;; This function calls:
  5169 ;;		_SPI1_Exchange8bit
  5170 ;;		_wdtdelay
  5171 ;; This function is called by:
  5172 ;;		_init_display
  5173 ;; This function uses a reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text9
  5177  01A22A                     __ptext9:
  5178                           	opt callstack 0
  5179  01A22A                     _send_lcd_cmd_long:
  5180                           	opt callstack 13
  5181                           
  5182                           ; BSR set to: 61
  5183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5184                           ;incstack = 0
  5185                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5186  01A22A  92BC               	bcf	188,1,c	;volatile
  5187                           
  5188                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5189  01A22C  94BC               	bcf	188,2,c	;volatile
  5190                           
  5191                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5192                           ;stkvar	_cmd @ sp[(0)+-1]
  5193  01A22E  0EFF               	movlw	-1
  5194  01A230  50E3               	movf	plusw1,w,c
  5195  01A232  6EE6               	movwf	postinc1,c
  5196  01A234  EC2D  F0D3         	call	_SPI1_Exchange8bit	;wreg free
  5197                           
  5198                           ; BSR set to: 57
  5199                           ;eadog.c: 134:  wdtdelay(800);
  5200  01A238  0E20               	movlw	32
  5201  01A23A  6EE6               	movwf	postinc1,c
  5202  01A23C  0E03               	movlw	3
  5203  01A23E  6EE6               	movwf	postinc1,c
  5204  01A240  0E00               	movlw	0
  5205  01A242  6EE6               	movwf	postinc1,c
  5206  01A244  0E00               	movlw	0
  5207  01A246  6EE6               	movwf	postinc1,c
  5208  01A248  ECA1  F0CC         	call	_wdtdelay	;wreg free
  5209                           
  5210                           ; BSR set to: 0
  5211  01A24C  82BC               	bsf	188,1,c	;volatile
  5212                           
  5213                           ; BSR set to: 0
  5214                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5215  01A24E  52E5               	movf	postdec1,f,c
  5216  01A250  0012               	return		;funcret
  5217  01A252                     __end_of_send_lcd_cmd_long:
  5218                           	opt callstack 0
  5219                           
  5220 ;; *************** function _send_lcd_cmd *****************
  5221 ;; Defined at:
  5222 ;;		line 117 in file "eadog.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  cmd             1  [STACK] const unsigned char 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1  [STACK] void 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5231 ;; Tracked objects:
  5232 ;;		On entry : 3F/0
  5233 ;;		On exit  : 3F/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5240 ;;Total ram usage:        0 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:   16
  5243 ;; This function calls:
  5244 ;;		_SPI1_Exchange8bit
  5245 ;;		_wdtdelay
  5246 ;; This function is called by:
  5247 ;;		_init_display
  5248 ;; This function uses a reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text10
  5252  01A252                     __ptext10:
  5253                           	opt callstack 0
  5254  01A252                     _send_lcd_cmd:
  5255                           	opt callstack 13
  5256                           
  5257                           ; BSR set to: 0
  5258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5259                           ;incstack = 0
  5260                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5261  01A252  92BC               	bcf	188,1,c	;volatile
  5262                           
  5263                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5264  01A254  94BC               	bcf	188,2,c	;volatile
  5265                           
  5266                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5267                           ;stkvar	_cmd @ sp[(0)+-1]
  5268  01A256  0EFF               	movlw	-1
  5269  01A258  50E3               	movf	plusw1,w,c
  5270  01A25A  6EE6               	movwf	postinc1,c
  5271  01A25C  EC2D  F0D3         	call	_SPI1_Exchange8bit	;wreg free
  5272                           
  5273                           ; BSR set to: 57
  5274                           ;eadog.c: 122:  wdtdelay(30);
  5275  01A260  0E1E               	movlw	30
  5276  01A262  6EE6               	movwf	postinc1,c
  5277  01A264  0E00               	movlw	0
  5278  01A266  6EE6               	movwf	postinc1,c
  5279  01A268  0E00               	movlw	0
  5280  01A26A  6EE6               	movwf	postinc1,c
  5281  01A26C  0E00               	movlw	0
  5282  01A26E  6EE6               	movwf	postinc1,c
  5283  01A270  ECA1  F0CC         	call	_wdtdelay	;wreg free
  5284                           
  5285                           ; BSR set to: 0
  5286  01A274  82BC               	bsf	188,1,c	;volatile
  5287                           
  5288                           ; BSR set to: 0
  5289                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5290  01A276  52E5               	movf	postdec1,f,c
  5291  01A278  0012               	return		;funcret
  5292  01A27A                     __end_of_send_lcd_cmd:
  5293                           	opt callstack 0
  5294                           
  5295 ;; *************** function _SPI1_Exchange8bit *****************
  5296 ;; Defined at:
  5297 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  data            1  [STACK] unsigned char 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1  [STACK] unsigned char 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 3F/39
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5315 ;;Total ram usage:        0 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:   15
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_send_lcd_cmd
  5322 ;;		_send_lcd_cmd_long
  5323 ;; This function uses a reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text11
  5327  01A65A                     __ptext11:
  5328                           	opt callstack 0
  5329  01A65A                     _SPI1_Exchange8bit:
  5330                           	opt callstack 13
  5331                           
  5332                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5333                           
  5334                           ; BSR set to: 0
  5335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5336                           ;incstack = 0
  5337  01A65A  0E01               	movlw	1
  5338  01A65C  013D               	movlb	61	; () banked
  5339  01A65E  6F12               	movwf	18,b	;volatile
  5340                           
  5341                           ; BSR set to: 61
  5342                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5343                           ;stkvar	_data @ sp[(0)+-1]
  5344  01A660  0EFF               	movlw	-1
  5345  01A662  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5346  01A668                     l807:
  5347                           
  5348                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5349  01A668  0139               	movlb	57	; () banked
  5350  01A66A  A9A2               	btfss	162,4,b	;volatile
  5351  01A66C  D7FD               	goto	l807
  5352                           
  5353                           ; BSR set to: 57
  5354                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5355  01A66E  006F F440  F001    	movff	15632,btemp	;volatile
  5356                           
  5357                           ; BSR set to: 57
  5358                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5359  01A674  52E5               	movf	postdec1,f,c
  5360  01A676  0012               	return		;funcret
  5361  01A678                     __end_of_SPI1_Exchange8bit:
  5362                           	opt callstack 0
  5363                           
  5364 ;; *************** function _ringBufS_init *****************
  5365 ;; Defined at:
  5366 ;;		line 22 in file "ringbufs.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  _this           2  [STACK] PTR volatile struct ring
  5369 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1  [STACK] void 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5385 ;;Total ram usage:        0 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:   16
  5388 ;; This function calls:
  5389 ;;		_memset
  5390 ;; This function is called by:
  5391 ;;		_init_display
  5392 ;; This function uses a reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text12
  5396  01A27A                     __ptext12:
  5397                           	opt callstack 0
  5398  01A27A                     _ringBufS_init:
  5399                           	opt callstack 13
  5400                           
  5401                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5402                           
  5403                           ; BSR set to: 57
  5404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5405                           ;incstack = 0
  5406  01A27A  0E43               	movlw	67
  5407  01A27C  6EE6               	movwf	postinc1,c
  5408  01A27E  0E00               	movlw	0
  5409  01A280  6EE6               	movwf	postinc1,c
  5410  01A282  0E00               	movlw	0
  5411  01A284  6EE6               	movwf	postinc1,c
  5412  01A286  0E00               	movlw	0
  5413  01A288  6EE6               	movwf	postinc1,c
  5414                           
  5415                           ;stkvar	__this @ sp[(-4)+-2]
  5416  01A28A  0EFA               	movlw	-6
  5417  01A28C  006F FF8F FFE6     	movff	plusw1,postinc1
  5418  01A292  006F FF8F FFE6     	movff	plusw1,postinc1
  5419  01A298  EC7A  F0AD         	call	_memset	;wreg free
  5420                           
  5421                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5422  01A29C  52E5               	movf	postdec1,f,c
  5423  01A29E  52E5               	movf	postdec1,f,c
  5424  01A2A0  0012               	return		;funcret
  5425  01A2A2                     __end_of_ringBufS_init:
  5426                           	opt callstack 0
  5427                           
  5428 ;; *************** function _init_bsoc *****************
  5429 ;; Defined at:
  5430 ;;		line 88 in file "bsoc.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;		None
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1  [STACK] void 
  5437 ;; Registers used:
  5438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5439 ;; Tracked objects:
  5440 ;;		On entry : 3F/1
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5448 ;;Total ram usage:        0 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:   18
  5451 ;; This function calls:
  5452 ;;		_TMR3_SetInterruptHandler
  5453 ;;		_Volts_to_SOC
  5454 ;;		___fldiv
  5455 ;;		___flmul
  5456 ;;		___fltol
  5457 ;;		___xxtofl
  5458 ;;		_conv_raw_result
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;; This function uses a reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text13
  5465  017926                     __ptext13:
  5466                           	opt callstack 0
  5467  017926                     _init_bsoc:
  5468                           	opt callstack 12
  5469                           
  5470                           ;bsoc.c: 93:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5471                           
  5472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5473                           ;incstack = 0
  5474  017926  0E00               	movlw	0
  5475  017928  6EE6               	movwf	postinc1,c
  5476  01792A  0E00               	movlw	0
  5477  01792C  6EE6               	movwf	postinc1,c
  5478  01792E  0E7A               	movlw	122
  5479  017930  6EE6               	movwf	postinc1,c
  5480  017932  0E44               	movlw	68
  5481  017934  6EE6               	movwf	postinc1,c
  5482  017936  0E00               	movlw	0
  5483  017938  6EE6               	movwf	postinc1,c
  5484  01793A  0E04               	movlw	4
  5485  01793C  6EE6               	movwf	postinc1,c
  5486  01793E  ECB1  F0A3         	call	_conv_raw_result	;wreg free
  5487  017942  0060  F007  FFE6   	movff	btemp,postinc1
  5488  017948  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5489  01794E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5490  017954  0060  F013  FFE6   	movff	btemp+3,postinc1
  5491  01795A  ECDA  F0BB         	call	___fltol	;wreg free
  5492  01795E  0060  F007  FFE6   	movff	btemp,postinc1
  5493  017964  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5494  01796A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5495  017970  0060  F013  FFE6   	movff	btemp+3,postinc1
  5496  017976  0E00               	movlw	0
  5497  017978  6EE6               	movwf	postinc1,c
  5498  01797A  EC6F  F0B7         	call	___xxtofl	;wreg free
  5499  01797E  0060  F007  FFE6   	movff	btemp,postinc1
  5500  017984  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5501  01798A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5502  017990  0060  F013  FFE6   	movff	btemp+3,postinc1
  5503  017996  EC53  F095         	call	___flmul	;wreg free
  5504  01799A  0060  F007  FFE6   	movff	btemp,postinc1
  5505  0179A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5506  0179A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5507  0179AC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5508  0179B2  ECDA  F0BB         	call	___fltol	;wreg free
  5509  0179B6  0060  F007  FFE6   	movff	btemp,postinc1
  5510  0179BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5511  0179C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5512  0179C8  0060  F013  FFE6   	movff	btemp+3,postinc1
  5513  0179CE  ECDF  F0C8         	call	_Volts_to_SOC	;wreg free
  5514  0179D2  0060  F004  F19E   	movff	btemp,_C+158	;volatile
  5515  0179D8  0060  F008  F19F   	movff	btemp+1,_C+159	;volatile
  5516                           
  5517                           ;bsoc.c: 94:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5518  0179DE  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5519  0179E4  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5520  0179EA  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5521  0179F0  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5522  0179F6  0E00               	movlw	0
  5523  0179F8  6EE6               	movwf	postinc1,c
  5524  0179FA  0E00               	movlw	0
  5525  0179FC  6EE6               	movwf	postinc1,c
  5526  0179FE  0EC8               	movlw	200
  5527  017A00  6EE6               	movwf	postinc1,c
  5528  017A02  0E42               	movlw	66
  5529  017A04  6EE6               	movwf	postinc1,c
  5530  017A06  0101               	movlb	1	; () banked
  5531  017A08  519E               	movf	(_C+158)& (0+255),w,b	;volatile
  5532  017A0A  6E09               	movwf	(btemp+8)^0,c
  5533  017A0C  519F               	movf	(_C+159)& (0+255),w,b	;volatile
  5534  017A0E  6E0A               	movwf	(btemp+9)^0,c
  5535  017A10  6A0B               	clrf	(btemp+10)^0,c
  5536  017A12  6A0C               	clrf	(btemp+11)^0,c
  5537  017A14  0060  F027  FFE6   	movff	btemp+8,postinc1
  5538  017A1A  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5539  017A20  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5540  017A26  0060  F033  FFE6   	movff	btemp+11,postinc1
  5541  017A2C  0E00               	movlw	0
  5542  017A2E  6EE6               	movwf	postinc1,c
  5543  017A30  EC6F  F0B7         	call	___xxtofl	;wreg free
  5544  017A34  0060  F007  FFE6   	movff	btemp,postinc1
  5545  017A3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5546  017A40  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5547  017A46  0060  F013  FFE6   	movff	btemp+3,postinc1
  5548  017A4C  ECF4  F0A0         	call	___fldiv	;wreg free
  5549  017A50  0060  F007  FFE6   	movff	btemp,postinc1
  5550  017A56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5551  017A5C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5552  017A62  0060  F013  FFE6   	movff	btemp+3,postinc1
  5553  017A68  EC53  F095         	call	___flmul	;wreg free
  5554  017A6C  0060  F004  F180   	movff	btemp,_C+128	;volatile
  5555  017A72  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
  5556  017A78  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
  5557  017A7E  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
  5558                           
  5559                           ;bsoc.c: 95:  TMR3_SetInterruptHandler(calc_bsoc);
  5560  017A84  0E8C               	movlw	low _calc_bsoc
  5561  017A86  6EE6               	movwf	postinc1,c
  5562  017A88  0E3A               	movlw	high _calc_bsoc
  5563  017A8A  6EE6               	movwf	postinc1,c
  5564  017A8C  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5565  017A8E  6EE6               	movwf	postinc1,c
  5566  017A90  ECDD  F0D1         	call	_TMR3_SetInterruptHandler	;wreg free
  5567                           
  5568                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5569  017A94  0012               	return		;funcret
  5570  017A96                     __end_of_init_bsoc:
  5571                           	opt callstack 0
  5572                           
  5573 ;; *************** function _Volts_to_SOC *****************
  5574 ;; Defined at:
  5575 ;;		line 152 in file "bsoc.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  cvoltage        4  [STACK] unsigned long 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  2  [STACK] unsigned short 
  5582 ;; Registers used:
  5583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/1
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5593 ;;Total ram usage:        0 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:   15
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_calc_bsoc
  5600 ;;		_init_bsoc
  5601 ;; This function uses a reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text14
  5605  0191BE                     __ptext14:
  5606                           	opt callstack 0
  5607  0191BE                     _Volts_to_SOC:
  5608                           	opt callstack 0
  5609                           
  5610                           ;bsoc.c: 152: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 153: {;bsoc.c: 154:  stat
      +                          ic uint8_t slot;;bsoc.c: 156:  C.soc = 0;
  5611                           
  5612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5613                           ;incstack = 0
  5614 ;; hardware stack exceeded
  5615  0191BE  0101               	movlb	1	; () banked
  5616  0191C0  6B9E               	clrf	(_C+158)& (0+255),b	;volatile
  5617  0191C2  6B9F               	clrf	(_C+159)& (0+255),b	;volatile
  5618                           
  5619                           ;bsoc.c: 157:  for (slot = 0; slot < 26; slot++) {
  5620  0191C4  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5621  0191C6                     l9137:
  5622  0191C6  0E19               	movlw	25
  5623  0191C8  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  5624  0191CA  D001               	goto	l9141
  5625  0191CC  D036               	goto	l9149
  5626  0191CE                     l9141:
  5627                           
  5628                           ;bsoc.c: 158:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5629                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5630  0191CE  502D               	movf	Volts_to_SOC@slot^0,w,c
  5631  0191D0  0D08               	mullw	8
  5632  0191D2  0E71               	movlw	low _BVSOC_TABLE
  5633  0191D4  24F3               	addwf	243,w,c
  5634  0191D6  6EF6               	movwf	tblptrl,c
  5635  0191D8  0EFC               	movlw	high _BVSOC_TABLE
  5636  0191DA  20F4               	addwfc	244,w,c
  5637  0191DC  6EF7               	movwf	tblptrh,c
  5638  0191DE                     	if	1	;There are 3 active tblptr bytes
  5639  0191DE  6AF8               	clrf	tblptru,c
  5640  0191E0  0E00               	movlw	low (__mediumconst shr (0+16))
  5641  0191E2  22F8               	addwfc	tblptru,f,c
  5642  0191E4                     	endif
  5643  0191E4  0EFC               	movlw	-4
  5644  0191E6  50E3               	movf	plusw1,w,c
  5645  0191E8  0009               	tblrd		*+
  5646  0191EA  5CF5               	subwf	tablat,w,c
  5647  0191EC  0EFD               	movlw	-3
  5648  0191EE  50E3               	movf	plusw1,w,c
  5649  0191F0  0009               	tblrd		*+
  5650  0191F2  58F5               	subwfb	tablat,w,c
  5651  0191F4  0EFE               	movlw	-2
  5652  0191F6  50E3               	movf	plusw1,w,c
  5653  0191F8  0009               	tblrd		*+
  5654  0191FA  58F5               	subwfb	tablat,w,c
  5655  0191FC  0EFF               	movlw	-1
  5656  0191FE  50E3               	movf	plusw1,w,c
  5657  019200  0009               	tblrd		*+
  5658  019202  58F5               	subwfb	tablat,w,c
  5659  019204  B0D8               	btfsc	status,0,c
  5660  019206  D017               	goto	l9145
  5661                           
  5662                           ;bsoc.c: 159:    C.soc = BVSOC_TABLE[slot][1];
  5663  019208  502D               	movf	Volts_to_SOC@slot^0,w,c
  5664  01920A  0D08               	mullw	8
  5665  01920C  0E04               	movlw	4
  5666  01920E  26F3               	addwf	243,f,c
  5667  019210  0E00               	movlw	0
  5668  019212  22F4               	addwfc	244,f,c
  5669  019214  0E71               	movlw	low _BVSOC_TABLE
  5670  019216  24F3               	addwf	243,w,c
  5671  019218  6EF6               	movwf	tblptrl,c
  5672  01921A  0EFC               	movlw	high _BVSOC_TABLE
  5673  01921C  20F4               	addwfc	244,w,c
  5674  01921E  6EF7               	movwf	tblptrh,c
  5675  019220                     	if	1	;There are 3 active tblptr bytes
  5676  019220  6AF8               	clrf	tblptru,c
  5677  019222  0E00               	movlw	low (__mediumconst shr (0+16))
  5678  019224  22F8               	addwfc	tblptru,f,c
  5679  019226                     	endif
  5680  019226  0009               	tblrd		*+
  5681  019228  006F FFD4  F19E    	movff	tablat,_C+158	;volatile
  5682  01922E  000A               	tblrd		*-
  5683  019230  006F FFD4  F19F    	movff	tablat,_C+159	;volatile
  5684  019236                     l9145:
  5685                           
  5686                           ;bsoc.c: 161:  }
  5687  019236  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  5688  019238  D7C6               	goto	l9137
  5689  01923A                     l9149:
  5690                           
  5691                           ;bsoc.c: 163:  return C.soc;
  5692  01923A  EE20  F19E         	lfsr	2,_C+158	;volatile
  5693  01923E  006F FF78  F001    	movff	postinc2,btemp
  5694  019244  006F FF74  F002    	movff	postdec2,btemp+1
  5695                           
  5696                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  5697  01924A  52E5               	movf	postdec1,f,c
  5698  01924C  52E5               	movf	postdec1,f,c
  5699  01924E  52E5               	movf	postdec1,f,c
  5700  019250  52E5               	movf	postdec1,f,c
  5701  019252  0012               	return		;funcret
  5702  019254                     __end_of_Volts_to_SOC:
  5703                           	opt callstack 0
  5704                           
  5705 ;; *************** function _hid_display *****************
  5706 ;; Defined at:
  5707 ;;		line 17 in file "hid.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  h               1  [STACK] PTR struct H_data
  5710 ;;		 -> H(7), 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1  [STACK] PTR struct H_data
  5715 ;; Registers used:
  5716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5717 ;; Tracked objects:
  5718 ;;		On entry : 3F/1
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:   17
  5729 ;; This function calls:
  5730 ;;		_hid_input
  5731 ;; This function is called by:
  5732 ;;		_main
  5733 ;; This function uses a reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text15
  5737  0188B6                     __ptext15:
  5738                           	opt callstack 0
  5739  0188B6                     _hid_display:
  5740                           	opt callstack 13
  5741                           
  5742                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  5743                           ;stkvar	_h @ sp[(0)+-1]
  5744                           
  5745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5746                           ;incstack = 0
  5747  0188B6  0EFF               	movlw	-1
  5748  0188B8  50E3               	movf	plusw1,w,c
  5749  0188BA  6EE6               	movwf	postinc1,c
  5750  0188BC  ECBC  F0C9         	call	_hid_input	;wreg free
  5751                           
  5752                           ;hid.c: 21:  switch (h->h_state) {
  5753  0188C0  D066               	goto	l10177
  5754  0188C2                     l10155:
  5755                           
  5756                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  5757                           ;stkvar	_h @ sp[(0)+-1]
  5758  0188C2  0EFF               	movlw	-1
  5759  0188C4  50E3               	movf	plusw1,w,c
  5760  0188C6  6ED9               	movwf	fsr2l,c
  5761  0188C8  6ADA               	clrf	fsr2h,c
  5762  0188CA  0E01               	movlw	1
  5763  0188CC  26D9               	addwf	fsr2l,f,c
  5764  0188CE  0E01               	movlw	1
  5765  0188D0  6EDF               	movwf	indf2,c
  5766                           
  5767                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  5768                           ;stkvar	_h @ sp[(0)+-1]
  5769  0188D2  0EFF               	movlw	-1
  5770  0188D4  50E3               	movf	plusw1,w,c
  5771  0188D6  6ED9               	movwf	fsr2l,c
  5772  0188D8  6ADA               	clrf	fsr2h,c
  5773  0188DA  0E00               	movlw	0
  5774  0188DC  6EDF               	movwf	indf2,c
  5775                           
  5776                           ;hid.c: 25:   h->wait_enter = 1;
  5777                           ;stkvar	_h @ sp[(0)+-1]
  5778  0188DE  0EFF               	movlw	-1
  5779  0188E0  50E3               	movf	plusw1,w,c
  5780  0188E2  6ED9               	movwf	fsr2l,c
  5781  0188E4  6ADA               	clrf	fsr2h,c
  5782  0188E6  0E04               	movlw	4
  5783  0188E8  26D9               	addwf	fsr2l,f,c
  5784  0188EA  0E01               	movlw	1
  5785  0188EC  6EDF               	movwf	indf2,c
  5786                           
  5787                           ;hid.c: 26:   h->wait_select = 1;
  5788                           ;stkvar	_h @ sp[(0)+-1]
  5789  0188EE  0EFF               	movlw	-1
  5790  0188F0  50E3               	movf	plusw1,w,c
  5791  0188F2  6ED9               	movwf	fsr2l,c
  5792  0188F4  6ADA               	clrf	fsr2h,c
  5793  0188F6  0E02               	movlw	2
  5794  0188F8  26D9               	addwf	fsr2l,f,c
  5795  0188FA  0E01               	movlw	1
  5796  0188FC  6EDF               	movwf	indf2,c
  5797                           
  5798                           ;hid.c: 27:   h->select_p = SW_OFF;
  5799                           ;stkvar	_h @ sp[(0)+-1]
  5800  0188FE  0EFF               	movlw	-1
  5801  018900  50E3               	movf	plusw1,w,c
  5802  018902  6ED9               	movwf	fsr2l,c
  5803  018904  6ADA               	clrf	fsr2h,c
  5804  018906  0E03               	movlw	3
  5805  018908  26D9               	addwf	fsr2l,f,c
  5806  01890A  0E00               	movlw	0
  5807  01890C  6EDF               	movwf	indf2,c
  5808                           
  5809                           ;hid.c: 28:   h->enter_p = SW_OFF;
  5810                           ;stkvar	_h @ sp[(0)+-1]
  5811  01890E  0EFF               	movlw	-1
  5812  018910  50E3               	movf	plusw1,w,c
  5813  018912  6ED9               	movwf	fsr2l,c
  5814  018914  6ADA               	clrf	fsr2h,c
  5815  018916  0E05               	movlw	5
  5816  018918  26D9               	addwf	fsr2l,f,c
  5817  01891A  0E00               	movlw	0
  5818  01891C  D036               	goto	L1
  5819  01891E                     l10167:
  5820                           
  5821                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  5822                           ;stkvar	_h @ sp[(0)+-1]
  5823  01891E  0EFF               	movlw	-1
  5824  018920  50E3               	movf	plusw1,w,c
  5825  018922  6ED9               	movwf	fsr2l,c
  5826  018924  6ADA               	clrf	fsr2h,c
  5827  018926  0E02               	movlw	2
  5828  018928  26D9               	addwf	fsr2l,f,c
  5829  01892A  50DF               	movf	indf2,w,c
  5830  01892C  A4D8               	btfss	status,2,c
  5831  01892E  D042               	goto	l1866
  5832                           
  5833                           ;stkvar	_h @ sp[(0)+-1]
  5834  018930  0EFF               	movlw	-1
  5835  018932  50E3               	movf	plusw1,w,c
  5836  018934  6ED9               	movwf	fsr2l,c
  5837  018936  6ADA               	clrf	fsr2h,c
  5838  018938  0E03               	movlw	3
  5839  01893A  26D9               	addwf	fsr2l,f,c
  5840  01893C  50DF               	movf	indf2,w,c
  5841  01893E  A4D8               	btfss	status,2,c
  5842  018940  D039               	goto	l1866
  5843                           
  5844                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  5845                           ;stkvar	_h @ sp[(0)+-1]
  5846  018942  0EFF               	movlw	-1
  5847  018944  50E3               	movf	plusw1,w,c
  5848  018946  6ED9               	movwf	fsr2l,c
  5849  018948  6ADA               	clrf	fsr2h,c
  5850  01894A  0E06               	movlw	6
  5851  01894C  26D9               	addwf	fsr2l,f,c
  5852                           
  5853                           ;stkvar	_h @ sp[(0)+-1]
  5854  01894E  0EFF               	movlw	-1
  5855  018950  50E3               	movf	plusw1,w,c
  5856  018952  6EE9               	movwf	fsr0l,c
  5857  018954  6AEA               	clrf	fsr0h,c
  5858  018956  0E06               	movlw	6
  5859  018958  26E9               	addwf	fsr0l,f,c
  5860  01895A  2AEF               	incf	indf0,f,c
  5861  01895C  50EF               	movf	indf0,w,c
  5862  01895E  0B03               	andlw	3
  5863  018960  6EDF               	movwf	indf2,c
  5864                           
  5865                           ;hid.c: 34:    h->hid_display = h->sequence;
  5866                           ;stkvar	_h @ sp[(0)+-1]
  5867  018962  0EFF               	movlw	-1
  5868  018964  50E3               	movf	plusw1,w,c
  5869  018966  6ED9               	movwf	fsr2l,c
  5870  018968  6ADA               	clrf	fsr2h,c
  5871  01896A  0E06               	movlw	6
  5872  01896C  26D9               	addwf	fsr2l,f,c
  5873                           
  5874                           ;stkvar	_h @ sp[(0)+-1]
  5875  01896E  0EFF               	movlw	-1
  5876  018970  50E3               	movf	plusw1,w,c
  5877  018972  6EE9               	movwf	fsr0l,c
  5878  018974  6AEA               	clrf	fsr0h,c
  5879  018976  006F FF7F FFEF     	movff	indf2,indf0
  5880                           
  5881                           ;hid.c: 35:    h->wait_select = 1;
  5882                           ;stkvar	_h @ sp[(0)+-1]
  5883  01897C  0EFF               	movlw	-1
  5884  01897E  50E3               	movf	plusw1,w,c
  5885  018980  6ED9               	movwf	fsr2l,c
  5886  018982  6ADA               	clrf	fsr2h,c
  5887  018984  0E02               	movlw	2
  5888  018986  26D9               	addwf	fsr2l,f,c
  5889  018988  0E01               	movlw	1
  5890  01898A                     L1:
  5891  01898A  6EDF               	movwf	indf2,c
  5892  01898C  D013               	goto	l1866
  5893  01898E                     l10177:
  5894                           
  5895                           ;stkvar	_h @ sp[(0)+-1]
  5896  01898E  0EFF               	movlw	-1
  5897  018990  50E3               	movf	plusw1,w,c
  5898  018992  6ED9               	movwf	fsr2l,c
  5899  018994  6ADA               	clrf	fsr2h,c
  5900  018996  0E01               	movlw	1
  5901  018998  26D9               	addwf	fsr2l,f,c
  5902  01899A  50DF               	movf	indf2,w,c
  5903  01899C  6E0B               	movwf	(btemp+10)^0,c
  5904  01899E  6A0C               	clrf	(btemp+11)^0,c
  5905                           
  5906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5907                           ; Switch size 1, requested type "simple"
  5908                           ; Number of cases is 1, Range of values is 0 to 0
  5909                           ; switch strategies available:
  5910                           ; Name         Instructions Cycles
  5911                           ; simple_byte            4     3 (average)
  5912                           ;	Chosen strategy is simple_byte
  5913  0189A0  500C               	movf	(btemp+11)^0,w,c
  5914  0189A2  0A00               	xorlw	0	; case 0
  5915  0189A4  A4D8               	btfss	status,2,c
  5916  0189A6  D7BB               	goto	l10167
  5917                           
  5918                           ; Switch size 1, requested type "simple"
  5919                           ; Number of cases is 2, Range of values is 0 to 1
  5920                           ; switch strategies available:
  5921                           ; Name         Instructions Cycles
  5922                           ; simple_byte            7     4 (average)
  5923                           ;	Chosen strategy is simple_byte
  5924  0189A8  500B               	movf	(btemp+10)^0,w,c
  5925  0189AA  0A00               	xorlw	0	; case 0
  5926  0189AC  B4D8               	btfsc	status,2,c
  5927  0189AE  D789               	goto	l10155
  5928  0189B0  0A01               	xorlw	1	; case 1
  5929  0189B2  D7B5               	goto	l10167
  5930  0189B4                     l1866:
  5931                           
  5932                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5933  0189B4  52E5               	movf	postdec1,f,c
  5934  0189B6  0012               	return		;funcret
  5935  0189B8                     __end_of_hid_display:
  5936                           	opt callstack 0
  5937                           
  5938 ;; *************** function _hid_input *****************
  5939 ;; Defined at:
  5940 ;;		line 3 in file "hid.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  h               1  [STACK] PTR struct H_data
  5943 ;;		 -> H(7), 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;		None
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1  [STACK] PTR struct H_data
  5948 ;; Registers used:
  5949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/1
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5959 ;;Total ram usage:        0 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:   16
  5962 ;; This function calls:
  5963 ;;		_get_switch
  5964 ;; This function is called by:
  5965 ;;		_hid_display
  5966 ;; This function uses a reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text16
  5970  019378                     __ptext16:
  5971                           	opt callstack 0
  5972  019378                     _hid_input:
  5973                           	opt callstack 13
  5974                           
  5975                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  5976                           
  5977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5978                           ;incstack = 0
  5979  019378  0E02               	movlw	2
  5980  01937A  6EE6               	movwf	postinc1,c
  5981  01937C  EC51  F0D1         	call	_get_switch	;wreg free
  5982  019380  5001               	movf	btemp^0,w,c
  5983  019382  B4D8               	btfsc	status,2,c
  5984  019384  D01C               	goto	l9833
  5985                           
  5986                           ;hid.c: 6:   h->wait_select = 0;
  5987                           ;stkvar	_h @ sp[(0)+-1]
  5988  019386  0EFF               	movlw	-1
  5989  019388  50E3               	movf	plusw1,w,c
  5990  01938A  6ED9               	movwf	fsr2l,c
  5991  01938C  6ADA               	clrf	fsr2h,c
  5992  01938E  0E02               	movlw	2
  5993  019390  26D9               	addwf	fsr2l,f,c
  5994  019392  0E00               	movlw	0
  5995  019394  6EDF               	movwf	indf2,c
  5996                           
  5997                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  5998  019396  0E02               	movlw	2
  5999  019398  6EE6               	movwf	postinc1,c
  6000  01939A  EC51  F0D1         	call	_get_switch	;wreg free
  6001  01939E  5001               	movf	btemp^0,w,c
  6002  0193A0  B4D8               	btfsc	status,2,c
  6003  0193A2  D003               	goto	u9140
  6004  0193A4  6A0C               	clrf	(btemp+11)^0,c
  6005  0193A6  2A0C               	incf	(btemp+11)^0,f,c
  6006  0193A8  D001               	goto	u9158
  6007  0193AA                     u9140:
  6008  0193AA  6A0C               	clrf	(btemp+11)^0,c
  6009  0193AC                     u9158:
  6010                           
  6011                           ;stkvar	_h @ sp[(0)+-1]
  6012  0193AC  0EFF               	movlw	-1
  6013  0193AE  50E3               	movf	plusw1,w,c
  6014  0193B0  6ED9               	movwf	fsr2l,c
  6015  0193B2  6ADA               	clrf	fsr2h,c
  6016  0193B4  0E03               	movlw	3
  6017  0193B6  26D9               	addwf	fsr2l,f,c
  6018  0193B8  0060  F033  FFDF   	movff	btemp+11,indf2
  6019  0193BE                     l9833:
  6020                           
  6021                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6022  0193BE  0E03               	movlw	3
  6023  0193C0  6EE6               	movwf	postinc1,c
  6024  0193C2  EC51  F0D1         	call	_get_switch	;wreg free
  6025  0193C6  5001               	movf	btemp^0,w,c
  6026  0193C8  B4D8               	btfsc	status,2,c
  6027  0193CA  D01C               	goto	l1857
  6028                           
  6029                           ;hid.c: 11:   h->wait_enter = 0;
  6030                           ;stkvar	_h @ sp[(0)+-1]
  6031  0193CC  0EFF               	movlw	-1
  6032  0193CE  50E3               	movf	plusw1,w,c
  6033  0193D0  6ED9               	movwf	fsr2l,c
  6034  0193D2  6ADA               	clrf	fsr2h,c
  6035  0193D4  0E04               	movlw	4
  6036  0193D6  26D9               	addwf	fsr2l,f,c
  6037  0193D8  0E00               	movlw	0
  6038  0193DA  6EDF               	movwf	indf2,c
  6039                           
  6040                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6041  0193DC  0E03               	movlw	3
  6042  0193DE  6EE6               	movwf	postinc1,c
  6043  0193E0  EC51  F0D1         	call	_get_switch	;wreg free
  6044  0193E4  5001               	movf	btemp^0,w,c
  6045  0193E6  B4D8               	btfsc	status,2,c
  6046  0193E8  D003               	goto	u9170
  6047  0193EA  6A0C               	clrf	(btemp+11)^0,c
  6048  0193EC  2A0C               	incf	(btemp+11)^0,f,c
  6049  0193EE  D001               	goto	u9188
  6050  0193F0                     u9170:
  6051  0193F0  6A0C               	clrf	(btemp+11)^0,c
  6052  0193F2                     u9188:
  6053                           
  6054                           ;stkvar	_h @ sp[(0)+-1]
  6055  0193F2  0EFF               	movlw	-1
  6056  0193F4  50E3               	movf	plusw1,w,c
  6057  0193F6  6ED9               	movwf	fsr2l,c
  6058  0193F8  6ADA               	clrf	fsr2h,c
  6059  0193FA  0E05               	movlw	5
  6060  0193FC  26D9               	addwf	fsr2l,f,c
  6061  0193FE  0060  F033  FFDF   	movff	btemp+11,indf2
  6062  019404                     l1857:
  6063                           
  6064                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6065  019404  52E5               	movf	postdec1,f,c
  6066  019406  0012               	return		;funcret
  6067  019408                     __end_of_hid_input:
  6068                           	opt callstack 0
  6069                           
  6070 ;; *************** function _get_switch *****************
  6071 ;; Defined at:
  6072 ;;		line 18 in file "dio.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;  i               1  [STACK] unsigned char 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;		None
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1  [STACK] enum E17021
  6079 ;; Registers used:
  6080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/2
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6090 ;;Total ram usage:        0 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:   15
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_main
  6097 ;;		_hid_input
  6098 ;; This function uses a reentrant model
  6099 ;;
  6100                           
  6101                           	psect	text17
  6102  01A2A2                     __ptext17:
  6103                           	opt callstack 0
  6104  01A2A2                     _get_switch:
  6105                           	opt callstack 13
  6106                           
  6107                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6108                           ;stkvar	_i @ sp[(0)+-1]
  6109                           
  6110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6111                           ;incstack = 0
  6112  01A2A2  0EFF               	movlw	-1
  6113  01A2A4  006F FF8C  F001    	movff	plusw1,btemp
  6114  01A2AA  0E03               	movlw	3
  6115  01A2AC  6401               	cpfsgt	btemp^0,c
  6116  01A2AE  D002               	goto	l9105
  6117                           
  6118                           ;dio.c: 21:   return SW_OFF;
  6119  01A2B0  0E00               	movlw	0
  6120  01A2B2  D008               	goto	L2
  6121  01A2B4                     l9105:
  6122                           
  6123                           ;dio.c: 23:  return S.button[i].sw;
  6124                           ;stkvar	_i @ sp[(0)+-1]
  6125  01A2B4  0EFF               	movlw	-1
  6126  01A2B6  50E3               	movf	plusw1,w,c
  6127  01A2B8  0D05               	mullw	5
  6128  01A2BA  50F3               	movf	243,w,c
  6129  01A2BC  0F60               	addlw	low _S
  6130  01A2BE  6ED9               	movwf	fsr2l,c
  6131  01A2C0  6ADA               	clrf	fsr2h,c
  6132  01A2C2  50DF               	movf	indf2,w,c
  6133  01A2C4                     L2:
  6134  01A2C4  6E01               	movwf	btemp^0,c
  6135                           
  6136                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6137  01A2C6  52E5               	movf	postdec1,f,c
  6138  01A2C8  0012               	return		;funcret
  6139  01A2CA                     __end_of_get_switch:
  6140                           	opt callstack 0
  6141                           
  6142 ;; *************** function _eaDogM_WriteCommand *****************
  6143 ;; Defined at:
  6144 ;;		line 175 in file "eadog.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  cmd             1  [STACK] const unsigned char 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  1  [STACK] void 
  6151 ;; Registers used:
  6152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6153 ;; Tracked objects:
  6154 ;;		On entry : 3F/3D
  6155 ;;		On exit  : 3F/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6162 ;;Total ram usage:        0 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:   25
  6165 ;; This function calls:
  6166 ;;		_send_lcd_cmd_dma
  6167 ;; This function is called by:
  6168 ;;		_main
  6169 ;; This function uses a reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text18
  6173  01A7EA                     __ptext18:
  6174                           	opt callstack 0
  6175  01A7EA                     _eaDogM_WriteCommand:
  6176                           	opt callstack 5
  6177                           
  6178                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  6179                           ;stkvar	_cmd @ sp[(0)+-1]
  6180                           
  6181                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6182                           ;incstack = 0
  6183  01A7EA  0EFF               	movlw	-1
  6184  01A7EC  50E3               	movf	plusw1,w,c
  6185  01A7EE  6EE6               	movwf	postinc1,c
  6186  01A7F0  EC29  F0CD         	call	_send_lcd_cmd_dma	;wreg free
  6187                           
  6188                           ; BSR set to: 0
  6189                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  6190  01A7F4  52E5               	movf	postdec1,f,c
  6191  01A7F6  0012               	return		;funcret
  6192  01A7F8                     __end_of_eaDogM_WriteCommand:
  6193                           	opt callstack 0
  6194                           
  6195 ;; *************** function _convert_adc_data *****************
  6196 ;; Defined at:
  6197 ;;		line 40 in file "mbmc.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  i               1  [STACK] unsigned char 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  1  [STACK] void 
  6204 ;; Registers used:
  6205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/1
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6215 ;;Total ram usage:        0 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; Hardware stack levels required when called:   18
  6218 ;; This function calls:
  6219 ;;		_conv_raw_result
  6220 ;;		_lp_filter
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;; This function uses a reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text19
  6227  018DD0                     __ptext19:
  6228                           	opt callstack 0
  6229  018DD0                     _convert_adc_data:
  6230                           	opt callstack 0
  6231                           
  6232                           ; BSR set to: 0
  6233                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6234  018DD0  52E6               	movf	postinc1,f,c
  6235                           
  6236                           ;mbmc.c: 42:  uint8_t i = 0;
  6237                           ;stkvar	_i @ sp[(-1)+0]
  6238                           
  6239                           ;incstack = 0
  6240  018DD2  0EFF               	movlw	-1
  6241  018DD4  6AE3               	clrf	plusw1,c
  6242  018DD6                     l10127:
  6243                           
  6244                           ;mbmc.c: 45:   if (V.calib) {
  6245  018DD6  0102               	movlb	2	; () banked
  6246  018DD8  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6247  018DDA  B4D8               	btfsc	status,2,c
  6248  018DDC  D01B               	goto	l10131
  6249                           
  6250                           ; BSR set to: 2
  6251                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  6252  018DDE  0E01               	movlw	1
  6253  018DE0  6EE6               	movwf	postinc1,c
  6254                           
  6255                           ;stkvar	_i @ sp[(-2)+0]
  6256  018DE2  0EFE               	movlw	-2
  6257  018DE4  50E3               	movf	plusw1,w,c
  6258  018DE6  6EE6               	movwf	postinc1,c
  6259  018DE8  0E01               	movlw	1
  6260  018DEA  6EE6               	movwf	postinc1,c
  6261                           
  6262                           ;stkvar	_i @ sp[(-4)+0]
  6263  018DEC  0EFC               	movlw	-4
  6264  018DEE  50E3               	movf	plusw1,w,c
  6265  018DF0  6EE6               	movwf	postinc1,c
  6266  018DF2  ECB1  F0A3         	call	_conv_raw_result	;wreg free
  6267  018DF6  0060  F007  FFE6   	movff	btemp,postinc1
  6268  018DFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6269  018E02  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6270  018E08  0060  F013  FFE6   	movff	btemp+3,postinc1
  6271  018E0E  EC71  F0B9         	call	_lp_filter	;wreg free
  6272  018E12  D01A               	goto	L3
  6273  018E14                     l10131:
  6274                           
  6275                           ; BSR set to: 2
  6276                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  6277  018E14  0E00               	movlw	0
  6278  018E16  6EE6               	movwf	postinc1,c
  6279                           
  6280                           ;stkvar	_i @ sp[(-2)+0]
  6281  018E18  0EFE               	movlw	-2
  6282  018E1A  50E3               	movf	plusw1,w,c
  6283  018E1C  6EE6               	movwf	postinc1,c
  6284  018E1E  0E00               	movlw	0
  6285  018E20  6EE6               	movwf	postinc1,c
  6286                           
  6287                           ;stkvar	_i @ sp[(-4)+0]
  6288  018E22  0EFC               	movlw	-4
  6289  018E24  50E3               	movf	plusw1,w,c
  6290  018E26  6EE6               	movwf	postinc1,c
  6291  018E28  ECB1  F0A3         	call	_conv_raw_result	;wreg free
  6292  018E2C  0060  F007  FFE6   	movff	btemp,postinc1
  6293  018E32  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6294  018E38  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6295  018E3E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6296  018E44  EC71  F0B9         	call	_lp_filter	;wreg free
  6297  018E48                     L3:
  6298                           
  6299                           ;stkvar	_i @ sp[(-1)+0]
  6300  018E48  0EFF               	movlw	-1
  6301  018E4A  50E3               	movf	plusw1,w,c
  6302  018E4C  0D04               	mullw	4
  6303  018E4E  0E00               	movlw	low _C
  6304  018E50  24F3               	addwf	243,w,c
  6305  018E52  6ED9               	movwf	fsr2l,c
  6306  018E54  0E01               	movlw	high _C
  6307  018E56  20F4               	addwfc	prodh,w,c
  6308  018E58  6EDA               	movwf	fsr2h,c
  6309  018E5A  0060  F007  FFDE   	movff	btemp,postinc2
  6310  018E60  0060  F00B  FFDE   	movff	btemp+1,postinc2
  6311  018E66  0060  F00F  FFDE   	movff	btemp+2,postinc2
  6312  018E6C  0060  F013  FFDE   	movff	btemp+3,postinc2
  6313                           
  6314                           ;mbmc.c: 50:  } while (++i < 16);
  6315                           ;stkvar	_i @ sp[(-1)+0]
  6316  018E72  0EFF               	movlw	-1
  6317  018E74  2AE3               	incf	plusw1,f,c
  6318  018E76  0EFF               	movlw	-1
  6319  018E78  006F FF8C  F001    	movff	plusw1,btemp
  6320  018E7E  0E0F               	movlw	15
  6321  018E80  6401               	cpfsgt	btemp^0,c
  6322  018E82  D7A9               	goto	l10127
  6323                           
  6324                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6325  018E84  52E5               	movf	postdec1,f,c
  6326  018E86  0012               	return		;funcret
  6327  018E88                     __end_of_convert_adc_data:
  6328                           	opt callstack 0
  6329                           
  6330 ;; *************** function _conv_raw_result *****************
  6331 ;; Defined at:
  6332 ;;		line 80 in file "daq.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  chan            1  [STACK] const enum E16136
  6335 ;;  to_what         1  [STACK] const enum E16198
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  4  [STACK] float 
  6340 ;; Registers used:
  6341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/1
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6351 ;;Total ram usage:        0 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:   17
  6354 ;; This function calls:
  6355 ;;		___fldiv
  6356 ;;		___flmul
  6357 ;;		___flsub
  6358 ;;		___xxtofl
  6359 ;;		_get_raw_result
  6360 ;;		_nanf
  6361 ;; This function is called by:
  6362 ;;		_convert_adc_data
  6363 ;;		_init_bsoc
  6364 ;; This function uses a reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text20
  6368  014762                     __ptext20:
  6369                           	opt callstack 0
  6370  014762                     _conv_raw_result:
  6371                           	opt callstack 12
  6372                           
  6373                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  6374                           
  6375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6376                           ;incstack = 0
  6377  014762  D242               	goto	l9767
  6378  014764                     l9713:
  6379                           
  6380                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  6381                           ;stkvar	_chan @ sp[(0)+-1]
  6382  014764  0EFF               	movlw	-1
  6383  014766  006F FF8C  F00C    	movff	plusw1,btemp+11
  6384  01476C  0E77               	movlw	119
  6385  01476E  6E09               	movwf	(btemp+8)^0,c
  6386  014770  0E3C               	movlw	60
  6387  014772  6E0A               	movwf	(btemp+9)^0,c
  6388  014774  2A0C               	incf	(btemp+11)^0,f,c
  6389  014776  D003               	goto	u8914
  6390  014778                     u8915:
  6391  014778  340A               	rlcf	(btemp+9)^0,w,c
  6392  01477A  320A               	rrcf	(btemp+9)^0,f,c
  6393  01477C  3209               	rrcf	(btemp+8)^0,f,c
  6394  01477E                     u8914:
  6395  01477E  2E0C               	decfsz	(btemp+11)^0,f,c
  6396  014780  D7FB               	goto	u8915
  6397  014782  B009               	btfsc	(btemp+8)^0,0,c
  6398  014784  D007               	goto	l9719
  6399                           
  6400                           ;daq.c: 86:    return nanf("");
  6401  014786  0E33               	movlw	low (STR_46+78)
  6402  014788  6EE6               	movwf	postinc1,c
  6403  01478A  0EFE               	movlw	high (STR_46+78)
  6404  01478C  6EE6               	movwf	postinc1,c
  6405  01478E  EC10  F0CC         	call	_nanf	;wreg free
  6406  014792  D23A               	goto	l1737
  6407  014794                     l9719:
  6408                           
  6409                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  6410                           ;stkvar	_chan @ sp[(0)+-1]
  6411  014794  0EFF               	movlw	-1
  6412  014796  006F FF8C  F00C    	movff	plusw1,btemp+11
  6413  01479C  0E03               	movlw	3
  6414  01479E  6E09               	movwf	(btemp+8)^0,c
  6415  0147A0  0E00               	movlw	0
  6416  0147A2  6E0A               	movwf	(btemp+9)^0,c
  6417  0147A4  2A0C               	incf	(btemp+11)^0,f,c
  6418  0147A6  D003               	goto	u8934
  6419  0147A8                     u8935:
  6420  0147A8  340A               	rlcf	(btemp+9)^0,w,c
  6421  0147AA  320A               	rrcf	(btemp+9)^0,f,c
  6422  0147AC  3209               	rrcf	(btemp+8)^0,f,c
  6423  0147AE                     u8934:
  6424  0147AE  2E0C               	decfsz	(btemp+11)^0,f,c
  6425  0147B0  D7FB               	goto	u8935
  6426  0147B2  A009               	btfss	(btemp+8)^0,0,c
  6427  0147B4  D0EB               	goto	l9733
  6428                           
  6429                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  6430                           ;stkvar	_chan @ sp[(0)+-1]
  6431  0147B6  0EFF               	movlw	-1
  6432  0147B8  006F FF8C  F00C    	movff	plusw1,btemp+11
  6433  0147BE  0E01               	movlw	1
  6434  0147C0  6E09               	movwf	(btemp+8)^0,c
  6435  0147C2  0E00               	movlw	0
  6436  0147C4  6E0A               	movwf	(btemp+9)^0,c
  6437  0147C6  2A0C               	incf	(btemp+11)^0,f,c
  6438  0147C8  D003               	goto	u8954
  6439  0147CA                     u8955:
  6440  0147CA  340A               	rlcf	(btemp+9)^0,w,c
  6441  0147CC  320A               	rrcf	(btemp+9)^0,f,c
  6442  0147CE  3209               	rrcf	(btemp+8)^0,f,c
  6443  0147D0                     u8954:
  6444  0147D0  2E0C               	decfsz	(btemp+11)^0,f,c
  6445  0147D2  D7FB               	goto	u8955
  6446  0147D4  A009               	btfss	(btemp+8)^0,0,c
  6447  0147D6  D06D               	goto	l9729
  6448                           
  6449                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  6450  0147D8  0E7B               	movlw	123
  6451  0147DA  6EE6               	movwf	postinc1,c
  6452  0147DC  0E14               	movlw	20
  6453  0147DE  6EE6               	movwf	postinc1,c
  6454  0147E0  0EAE               	movlw	174
  6455  0147E2  6EE6               	movwf	postinc1,c
  6456  0147E4  0E3D               	movlw	61
  6457  0147E6  6EE6               	movwf	postinc1,c
  6458  0147E8  0060  F3AC  F009   	movff	_R+32,btemp+8	;volatile
  6459  0147EE  0060  F3B0  F00A   	movff	_R+33,btemp+9	;volatile
  6460  0147F4  0E00               	movlw	0
  6461  0147F6  BE0A               	btfsc	(btemp+9)^0,7,c
  6462  0147F8  0EFF               	movlw	255
  6463  0147FA  6E0B               	movwf	(btemp+10)^0,c
  6464  0147FC  6E0C               	movwf	(btemp+11)^0,c
  6465  0147FE  0060  F027  FFE6   	movff	btemp+8,postinc1
  6466  014804  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6467  01480A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6468  014810  0060  F033  FFE6   	movff	btemp+11,postinc1
  6469  014816  0E01               	movlw	1
  6470  014818  6EE6               	movwf	postinc1,c
  6471  01481A  EC6F  F0B7         	call	___xxtofl	;wreg free
  6472  01481E  0060  F007  FFE6   	movff	btemp,postinc1
  6473  014824  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6474  01482A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6475  014830  0060  F013  FFE6   	movff	btemp+3,postinc1
  6476                           
  6477                           ;stkvar	_chan @ sp[(-8)+-1]
  6478  014836  0EF7               	movlw	-9
  6479  014838  50E3               	movf	plusw1,w,c
  6480  01483A  6EE6               	movwf	postinc1,c
  6481  01483C  EC3C  F0D3         	call	_get_raw_result	;wreg free
  6482  014840  0060  F004  F00B   	movff	btemp,btemp+10
  6483  014846  0060  F008  F00C   	movff	btemp+1,btemp+11
  6484  01484C  500B               	movf	(btemp+10)^0,w,c
  6485  01484E  6E05               	movwf	(btemp+4)^0,c
  6486  014850  500C               	movf	(btemp+11)^0,w,c
  6487  014852  6E06               	movwf	(btemp+5)^0,c
  6488  014854  6A07               	clrf	(btemp+6)^0,c
  6489  014856  6A08               	clrf	(btemp+7)^0,c
  6490  014858  0060  F017  FFE6   	movff	btemp+4,postinc1
  6491  01485E  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6492  014864  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6493  01486A  0060  F023  FFE6   	movff	btemp+7,postinc1
  6494  014870  0E00               	movlw	0
  6495  014872  6EE6               	movwf	postinc1,c
  6496  014874  EC6F  F0B7         	call	___xxtofl	;wreg free
  6497  014878  0060  F007  FFE6   	movff	btemp,postinc1
  6498  01487E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6499  014884  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6500  01488A  0060  F013  FFE6   	movff	btemp+3,postinc1
  6501  014890  EC37  F0CE         	call	___flsub	;wreg free
  6502  014894  0060  F007  FFE6   	movff	btemp,postinc1
  6503  01489A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6504  0148A0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6505  0148A6  0060  F013  FFE6   	movff	btemp+3,postinc1
  6506  0148AC  EC53  F095         	call	___flmul	;wreg free
  6507  0148B0  D1AB               	goto	l1737
  6508  0148B2                     l9729:
  6509                           
  6510                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  6511  0148B2  0E29               	movlw	41
  6512  0148B4  6EE6               	movwf	postinc1,c
  6513  0148B6  0E5C               	movlw	92
  6514  0148B8  6EE6               	movwf	postinc1,c
  6515  0148BA  0E0F               	movlw	15
  6516  0148BC  6EE6               	movwf	postinc1,c
  6517  0148BE  0E3D               	movlw	61
  6518  0148C0  6EE6               	movwf	postinc1,c
  6519  0148C2  0060  F3B4  F009   	movff	_R+34,btemp+8	;volatile
  6520  0148C8  0060  F3B8  F00A   	movff	_R+35,btemp+9	;volatile
  6521  0148CE  0E00               	movlw	0
  6522  0148D0  BE0A               	btfsc	(btemp+9)^0,7,c
  6523  0148D2  0EFF               	movlw	255
  6524  0148D4  6E0B               	movwf	(btemp+10)^0,c
  6525  0148D6  6E0C               	movwf	(btemp+11)^0,c
  6526  0148D8  0060  F027  FFE6   	movff	btemp+8,postinc1
  6527  0148DE  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6528  0148E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6529  0148EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  6530  0148F0  0E01               	movlw	1
  6531  0148F2  6EE6               	movwf	postinc1,c
  6532  0148F4  EC6F  F0B7         	call	___xxtofl	;wreg free
  6533  0148F8  0060  F007  FFE6   	movff	btemp,postinc1
  6534  0148FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6535  014904  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6536  01490A  0060  F013  FFE6   	movff	btemp+3,postinc1
  6537                           
  6538                           ;stkvar	_chan @ sp[(-8)+-1]
  6539  014910  0EF7               	movlw	-9
  6540  014912  50E3               	movf	plusw1,w,c
  6541  014914  6EE6               	movwf	postinc1,c
  6542  014916  EC3C  F0D3         	call	_get_raw_result	;wreg free
  6543  01491A  0060  F004  F00B   	movff	btemp,btemp+10
  6544  014920  0060  F008  F00C   	movff	btemp+1,btemp+11
  6545  014926  500B               	movf	(btemp+10)^0,w,c
  6546  014928  6E05               	movwf	(btemp+4)^0,c
  6547  01492A  500C               	movf	(btemp+11)^0,w,c
  6548  01492C  6E06               	movwf	(btemp+5)^0,c
  6549  01492E  6A07               	clrf	(btemp+6)^0,c
  6550  014930  6A08               	clrf	(btemp+7)^0,c
  6551  014932  0060  F017  FFE6   	movff	btemp+4,postinc1
  6552  014938  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6553  01493E  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6554  014944  0060  F023  FFE6   	movff	btemp+7,postinc1
  6555  01494A  0E00               	movlw	0
  6556  01494C  6EE6               	movwf	postinc1,c
  6557  01494E  EC6F  F0B7         	call	___xxtofl	;wreg free
  6558  014952  0060  F007  FFE6   	movff	btemp,postinc1
  6559  014958  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6560  01495E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6561  014964  0060  F013  FFE6   	movff	btemp+3,postinc1
  6562  01496A  EC37  F0CE         	call	___flsub	;wreg free
  6563  01496E  0060  F007  FFE6   	movff	btemp,postinc1
  6564  014974  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6565  01497A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6566  014980  0060  F013  FFE6   	movff	btemp+3,postinc1
  6567  014986  EC53  F095         	call	___flmul	;wreg free
  6568  01498A  D13E               	goto	l1737
  6569  01498C                     l9733:
  6570                           
  6571                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  6572                           ;stkvar	_chan @ sp[(0)+-1]
  6573  01498C  0EFF               	movlw	-1
  6574  01498E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6575  014994  0E00               	movlw	0
  6576  014996  6E09               	movwf	(btemp+8)^0,c
  6577  014998  0E08               	movlw	8
  6578  01499A  6E0A               	movwf	(btemp+9)^0,c
  6579  01499C  2A0C               	incf	(btemp+11)^0,f,c
  6580  01499E  D003               	goto	u8974
  6581  0149A0                     u8975:
  6582  0149A0  340A               	rlcf	(btemp+9)^0,w,c
  6583  0149A2  320A               	rrcf	(btemp+9)^0,f,c
  6584  0149A4  3209               	rrcf	(btemp+8)^0,f,c
  6585  0149A6                     u8974:
  6586  0149A6  2E0C               	decfsz	(btemp+11)^0,f,c
  6587  0149A8  D7FB               	goto	u8975
  6588  0149AA  A009               	btfss	(btemp+8)^0,0,c
  6589  0149AC  D008               	goto	l9741
  6590                           
  6591                           ;daq.c: 96:     return 25.0;
  6592  0149AE  0E00               	movlw	0
  6593  0149B0  6E01               	movwf	btemp^0,c
  6594  0149B2  0E00               	movlw	0
  6595  0149B4  6E02               	movwf	(btemp+1)^0,c
  6596  0149B6  0EC8               	movlw	200
  6597  0149B8  6E03               	movwf	(btemp+2)^0,c
  6598  0149BA  0E41               	movlw	65
  6599  0149BC  D113               	goto	L4
  6600  0149BE                     l9741:
  6601                           
  6602                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6603  0149BE  0E00               	movlw	0
  6604  0149C0  6EE6               	movwf	postinc1,c
  6605  0149C2  0E00               	movlw	0
  6606  0149C4  6EE6               	movwf	postinc1,c
  6607  0149C6  0E7A               	movlw	122
  6608  0149C8  6EE6               	movwf	postinc1,c
  6609  0149CA  0E44               	movlw	68
  6610  0149CC  6EE6               	movwf	postinc1,c
  6611  0149CE  0E61               	movlw	97
  6612  0149D0  6EE6               	movwf	postinc1,c
  6613  0149D2  0E03               	movlw	3
  6614  0149D4  6EE6               	movwf	postinc1,c
  6615  0149D6  0E84               	movlw	132
  6616  0149D8  6EE6               	movwf	postinc1,c
  6617  0149DA  0E40               	movlw	64
  6618  0149DC  6EE6               	movwf	postinc1,c
  6619                           
  6620                           ;stkvar	_chan @ sp[(-8)+-1]
  6621  0149DE  0EF7               	movlw	-9
  6622  0149E0  50E3               	movf	plusw1,w,c
  6623  0149E2  6EE6               	movwf	postinc1,c
  6624  0149E4  EC3C  F0D3         	call	_get_raw_result	;wreg free
  6625  0149E8  0060  F004  F00B   	movff	btemp,btemp+10
  6626  0149EE  0060  F008  F00C   	movff	btemp+1,btemp+11
  6627  0149F4  500B               	movf	(btemp+10)^0,w,c
  6628  0149F6  6E05               	movwf	(btemp+4)^0,c
  6629  0149F8  500C               	movf	(btemp+11)^0,w,c
  6630  0149FA  6E06               	movwf	(btemp+5)^0,c
  6631  0149FC  6A07               	clrf	(btemp+6)^0,c
  6632  0149FE  6A08               	clrf	(btemp+7)^0,c
  6633  014A00  0060  F017  FFE6   	movff	btemp+4,postinc1
  6634  014A06  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6635  014A0C  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6636  014A12  0060  F023  FFE6   	movff	btemp+7,postinc1
  6637  014A18  0E00               	movlw	0
  6638  014A1A  6EE6               	movwf	postinc1,c
  6639  014A1C  EC6F  F0B7         	call	___xxtofl	;wreg free
  6640  014A20  0060  F007  FFE6   	movff	btemp,postinc1
  6641  014A26  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6642  014A2C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6643  014A32  0060  F013  FFE6   	movff	btemp+3,postinc1
  6644  014A38  EC53  F095         	call	___flmul	;wreg free
  6645  014A3C  0060  F007  FFE6   	movff	btemp,postinc1
  6646  014A42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6647  014A48  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6648  014A4E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6649  014A54  ECF4  F0A0         	call	___fldiv	;wreg free
  6650  014A58  D0D7               	goto	l1737
  6651  014A5A                     l9745:
  6652                           
  6653                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  6654                           ;stkvar	_chan @ sp[(0)+-1]
  6655  014A5A  0EFF               	movlw	-1
  6656  014A5C  006F FF8C  F00C    	movff	plusw1,btemp+11
  6657  014A62  0E03               	movlw	3
  6658  014A64  6E09               	movwf	(btemp+8)^0,c
  6659  014A66  0E00               	movlw	0
  6660  014A68  6E0A               	movwf	(btemp+9)^0,c
  6661  014A6A  2A0C               	incf	(btemp+11)^0,f,c
  6662  014A6C  D003               	goto	u8994
  6663  014A6E                     u8995:
  6664  014A6E  340A               	rlcf	(btemp+9)^0,w,c
  6665  014A70  320A               	rrcf	(btemp+9)^0,f,c
  6666  014A72  3209               	rrcf	(btemp+8)^0,f,c
  6667  014A74                     u8994:
  6668  014A74  2E0C               	decfsz	(btemp+11)^0,f,c
  6669  014A76  D7FB               	goto	u8995
  6670  014A78  B009               	btfsc	(btemp+8)^0,0,c
  6671  014A7A  D011               	goto	u9020
  6672                           
  6673                           ;stkvar	_chan @ sp[(0)+-1]
  6674  014A7C  0EFF               	movlw	-1
  6675  014A7E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6676  014A84  0E00               	movlw	0
  6677  014A86  6E09               	movwf	(btemp+8)^0,c
  6678  014A88  0E08               	movlw	8
  6679  014A8A  6E0A               	movwf	(btemp+9)^0,c
  6680  014A8C  2A0C               	incf	(btemp+11)^0,f,c
  6681  014A8E  D003               	goto	u9014
  6682  014A90                     u9015:
  6683  014A90  340A               	rlcf	(btemp+9)^0,w,c
  6684  014A92  320A               	rrcf	(btemp+9)^0,f,c
  6685  014A94  3209               	rrcf	(btemp+8)^0,f,c
  6686  014A96                     u9014:
  6687  014A96  2E0C               	decfsz	(btemp+11)^0,f,c
  6688  014A98  D7FB               	goto	u9015
  6689  014A9A  A009               	btfss	(btemp+8)^0,0,c
  6690  014A9C  D04E               	goto	l9753
  6691  014A9E                     u9020:
  6692                           
  6693                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  6694  014A9E  0E00               	movlw	0
  6695  014AA0  6EE6               	movwf	postinc1,c
  6696  014AA2  0E00               	movlw	0
  6697  014AA4  6EE6               	movwf	postinc1,c
  6698  014AA6  0E7A               	movlw	122
  6699  014AA8  6EE6               	movwf	postinc1,c
  6700  014AAA  0E44               	movlw	68
  6701  014AAC  6EE6               	movwf	postinc1,c
  6702  014AAE  0E00               	movlw	0
  6703  014AB0  6EE6               	movwf	postinc1,c
  6704  014AB2  0E00               	movlw	0
  6705  014AB4  6EE6               	movwf	postinc1,c
  6706  014AB6  0E20               	movlw	32
  6707  014AB8  6EE6               	movwf	postinc1,c
  6708  014ABA  0E3F               	movlw	63
  6709  014ABC  6EE6               	movwf	postinc1,c
  6710                           
  6711                           ;stkvar	_chan @ sp[(-8)+-1]
  6712  014ABE  0EF7               	movlw	-9
  6713  014AC0  50E3               	movf	plusw1,w,c
  6714  014AC2  6EE6               	movwf	postinc1,c
  6715  014AC4  EC3C  F0D3         	call	_get_raw_result	;wreg free
  6716  014AC8  0060  F004  F00B   	movff	btemp,btemp+10
  6717  014ACE  0060  F008  F00C   	movff	btemp+1,btemp+11
  6718  014AD4  500B               	movf	(btemp+10)^0,w,c
  6719  014AD6  6E05               	movwf	(btemp+4)^0,c
  6720  014AD8  500C               	movf	(btemp+11)^0,w,c
  6721  014ADA  6E06               	movwf	(btemp+5)^0,c
  6722  014ADC  6A07               	clrf	(btemp+6)^0,c
  6723  014ADE  6A08               	clrf	(btemp+7)^0,c
  6724  014AE0  0060  F017  FFE6   	movff	btemp+4,postinc1
  6725  014AE6  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6726  014AEC  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6727  014AF2  0060  F023  FFE6   	movff	btemp+7,postinc1
  6728  014AF8  0E00               	movlw	0
  6729  014AFA  6EE6               	movwf	postinc1,c
  6730  014AFC  EC6F  F0B7         	call	___xxtofl	;wreg free
  6731  014B00  0060  F007  FFE6   	movff	btemp,postinc1
  6732  014B06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6733  014B0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6734  014B12  0060  F013  FFE6   	movff	btemp+3,postinc1
  6735  014B18  EC53  F095         	call	___flmul	;wreg free
  6736  014B1C  0060  F007  FFE6   	movff	btemp,postinc1
  6737  014B22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6738  014B28  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6739  014B2E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6740  014B34  ECF4  F0A0         	call	___fldiv	;wreg free
  6741  014B38  D067               	goto	l1737
  6742  014B3A                     l9753:
  6743                           
  6744                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6745  014B3A  0E00               	movlw	0
  6746  014B3C  6EE6               	movwf	postinc1,c
  6747  014B3E  0E00               	movlw	0
  6748  014B40  6EE6               	movwf	postinc1,c
  6749  014B42  0E7A               	movlw	122
  6750  014B44  6EE6               	movwf	postinc1,c
  6751  014B46  0E44               	movlw	68
  6752  014B48  6EE6               	movwf	postinc1,c
  6753  014B4A  0E61               	movlw	97
  6754  014B4C  6EE6               	movwf	postinc1,c
  6755  014B4E  0E03               	movlw	3
  6756  014B50  6EE6               	movwf	postinc1,c
  6757  014B52  0E84               	movlw	132
  6758  014B54  6EE6               	movwf	postinc1,c
  6759  014B56  0E40               	movlw	64
  6760  014B58  6EE6               	movwf	postinc1,c
  6761                           
  6762                           ;stkvar	_chan @ sp[(-8)+-1]
  6763  014B5A  0EF7               	movlw	-9
  6764  014B5C  50E3               	movf	plusw1,w,c
  6765  014B5E  6EE6               	movwf	postinc1,c
  6766  014B60  EC3C  F0D3         	call	_get_raw_result	;wreg free
  6767  014B64  0060  F004  F00B   	movff	btemp,btemp+10
  6768  014B6A  0060  F008  F00C   	movff	btemp+1,btemp+11
  6769  014B70  500B               	movf	(btemp+10)^0,w,c
  6770  014B72  6E05               	movwf	(btemp+4)^0,c
  6771  014B74  500C               	movf	(btemp+11)^0,w,c
  6772  014B76  6E06               	movwf	(btemp+5)^0,c
  6773  014B78  6A07               	clrf	(btemp+6)^0,c
  6774  014B7A  6A08               	clrf	(btemp+7)^0,c
  6775  014B7C  0060  F017  FFE6   	movff	btemp+4,postinc1
  6776  014B82  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6777  014B88  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6778  014B8E  0060  F023  FFE6   	movff	btemp+7,postinc1
  6779  014B94  0E00               	movlw	0
  6780  014B96  6EE6               	movwf	postinc1,c
  6781  014B98  EC6F  F0B7         	call	___xxtofl	;wreg free
  6782  014B9C  0060  F007  FFE6   	movff	btemp,postinc1
  6783  014BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6784  014BA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6785  014BAE  0060  F013  FFE6   	movff	btemp+3,postinc1
  6786  014BB4  EC53  F095         	call	___flmul	;wreg free
  6787  014BB8  0060  F007  FFE6   	movff	btemp,postinc1
  6788  014BBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6789  014BC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6790  014BCA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6791  014BD0  ECF4  F0A0         	call	___fldiv	;wreg free
  6792  014BD4  D019               	goto	l1737
  6793  014BD6                     l9759:
  6794                           
  6795                           ;daq.c: 109:   return 0.0;
  6796  014BD6  0E00               	movlw	0
  6797  014BD8  6E01               	movwf	btemp^0,c
  6798  014BDA  0E00               	movlw	0
  6799  014BDC  6E02               	movwf	(btemp+1)^0,c
  6800  014BDE  0E00               	movlw	0
  6801  014BE0  6E03               	movwf	(btemp+2)^0,c
  6802  014BE2  0E00               	movlw	0
  6803  014BE4                     L4:
  6804  014BE4  6E04               	movwf	(btemp+3)^0,c
  6805  014BE6  D010               	goto	l1737
  6806  014BE8                     l9767:
  6807                           
  6808                           ;stkvar	_to_what @ sp[(0)+-2]
  6809  014BE8  0EFE               	movlw	-2
  6810  014BEA  50E3               	movf	plusw1,w,c
  6811  014BEC  6E0B               	movwf	(btemp+10)^0,c
  6812  014BEE  6A0C               	clrf	(btemp+11)^0,c
  6813                           
  6814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6815                           ; Switch size 1, requested type "simple"
  6816                           ; Number of cases is 1, Range of values is 0 to 0
  6817                           ; switch strategies available:
  6818                           ; Name         Instructions Cycles
  6819                           ; simple_byte            4     3 (average)
  6820                           ;	Chosen strategy is simple_byte
  6821  014BF0  500C               	movf	(btemp+11)^0,w,c
  6822  014BF2  0A00               	xorlw	0	; case 0
  6823  014BF4  A4D8               	btfss	status,2,c
  6824  014BF6  D7EF               	goto	l9759
  6825                           
  6826                           ; Switch size 1, requested type "simple"
  6827                           ; Number of cases is 2, Range of values is 0 to 1
  6828                           ; switch strategies available:
  6829                           ; Name         Instructions Cycles
  6830                           ; simple_byte            7     4 (average)
  6831                           ;	Chosen strategy is simple_byte
  6832  014BF8  500B               	movf	(btemp+10)^0,w,c
  6833  014BFA  0A00               	xorlw	0	; case 0
  6834  014BFC  B4D8               	btfsc	status,2,c
  6835  014BFE  D5B2               	goto	l9713
  6836  014C00  0A01               	xorlw	1	; case 1
  6837  014C02  B4D8               	btfsc	status,2,c
  6838  014C04  D72A               	goto	l9745
  6839  014C06  D7E7               	goto	l9759
  6840  014C08                     l1737:
  6841                           
  6842                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  6843  014C08  52E5               	movf	postdec1,f,c
  6844  014C0A  52E5               	movf	postdec1,f,c
  6845  014C0C  0012               	return		;funcret
  6846  014C0E                     __end_of_conv_raw_result:
  6847                           	opt callstack 0
  6848                           
  6849 ;; *************** function _nanf *****************
  6850 ;; Defined at:
  6851 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  s               2  [STACK] PTR const unsigned char 
  6854 ;;		 -> STR_83(1), STR_45(1), 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  u               4  [STACK] struct .
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  4  [STACK] float 
  6859 ;; Registers used:
  6860 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/1
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6870 ;;Total ram usage:        0 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:   15
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_conv_raw_result
  6877 ;; This function uses a reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text21
  6881  019820                     __ptext21:
  6882                           	opt callstack 0
  6883  019820                     _nanf:
  6884                           	opt callstack 0
  6885                           
  6886                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6887  019820  52E6               	movf	postinc1,f,c
  6888  019822  52E6               	movf	postinc1,f,c
  6889  019824  52E6               	movf	postinc1,f,c
  6890  019826  52E6               	movf	postinc1,f,c
  6891                           
  6892                           ;incstack = 0
  6893  019828  0EFF               	movlw	255
  6894  01982A  6E09               	movwf	(btemp+8)^0,c
  6895  01982C  0EFF               	movlw	255
  6896  01982E  6E0A               	movwf	(btemp+9)^0,c
  6897  019830  0EFF               	movlw	255
  6898  019832  6E0B               	movwf	(btemp+10)^0,c
  6899  019834  0E7F               	movlw	127
  6900  019836  6E0C               	movwf	(btemp+11)^0,c
  6901                           
  6902                           ;stkvar	_u @ sp[(-4)+0]
  6903  019838  0EFC               	movlw	-4
  6904  01983A  0060  F027  FFE3   	movff	btemp+8,plusw1
  6905  019840  0EFD               	movlw	-3
  6906  019842  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6907  019848  0EFE               	movlw	-2
  6908  01984A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6909  019850  0EFF               	movlw	-1
  6910  019852  0060  F033  FFE3   	movff	btemp+11,plusw1
  6911                           
  6912                           ;stkvar	_u @ sp[(-4)+0]
  6913  019858  0EFC               	movlw	-4
  6914  01985A  006F FF8C  F001    	movff	plusw1,btemp
  6915  019860  0EFD               	movlw	-3
  6916  019862  006F FF8C  F002    	movff	plusw1,btemp+1
  6917  019868  0EFE               	movlw	-2
  6918  01986A  006F FF8C  F003    	movff	plusw1,btemp+2
  6919  019870  0EFF               	movlw	-1
  6920  019872  006F FF8C  F004    	movff	plusw1,btemp+3
  6921                           
  6922                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  6923  019878  0EFA               	movlw	250
  6924  01987A  26E1               	addwf	fsr1l,f,c
  6925  01987C  0EFF               	movlw	255
  6926  01987E  22E2               	addwfc	fsr1h,f,c
  6927  019880  0012               	return		;funcret
  6928  019882                     __end_of_nanf:
  6929                           	opt callstack 0
  6930                           
  6931 ;; *************** function _get_raw_result *****************
  6932 ;; Defined at:
  6933 ;;		line 72 in file "daq.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  index           1  [STACK] const enum E16136
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  2  [STACK] unsigned short 
  6940 ;; Registers used:
  6941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/2
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6951 ;;Total ram usage:        0 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:   15
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_main
  6958 ;;		_conv_raw_result
  6959 ;; This function uses a reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text22
  6963  01A678                     __ptext22:
  6964                           	opt callstack 0
  6965  01A678                     _get_raw_result:
  6966                           	opt callstack 13
  6967                           
  6968                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  6969                           ;stkvar	_index @ sp[(0)+-1]
  6970                           
  6971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6972                           ;incstack = 0
  6973  01A678  0EFF               	movlw	-1
  6974  01A67A  50E3               	movf	plusw1,w,c
  6975  01A67C  0D02               	mullw	2
  6976  01A67E  50F3               	movf	243,w,c
  6977  01A680  0FCB               	addlw	low _R
  6978  01A682  6ED9               	movwf	fsr2l,c
  6979  01A684  6ADA               	clrf	fsr2h,c
  6980  01A686  006F FF78  F001    	movff	postinc2,btemp
  6981  01A68C  006F FF74  F002    	movff	postdec2,btemp+1
  6982                           
  6983                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  6984  01A692  52E5               	movf	postdec1,f,c
  6985  01A694  0012               	return		;funcret
  6986  01A696                     __end_of_get_raw_result:
  6987                           	opt callstack 0
  6988                           
  6989 ;; *************** function ___xxtofl *****************
  6990 ;; Defined at:
  6991 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  sign            1  [STACK] unsigned char 
  6994 ;;  val             4  [STACK] long 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  arg             4  [STACK] unsigned long 
  6997 ;;  exp             1  [STACK] unsigned char 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  4  [STACK] unsigned char 
  7000 ;; Registers used:
  7001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/1
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7011 ;;Total ram usage:        0 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:   15
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_conv_raw_result
  7018 ;;		_calc_bsoc
  7019 ;;		_init_bsoc
  7020 ;; This function uses a reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text23
  7024  016EDE                     __ptext23:
  7025                           	opt callstack 0
  7026  016EDE                     ___xxtofl:
  7027                           	opt callstack 0
  7028                           
  7029                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7030  016EDE  0E05               	movlw	5
  7031  016EE0  26E1               	addwf	fsr1l,f,c
  7032  016EE2  0E00               	movlw	0
  7033  016EE4  22E2               	addwfc	fsr1h,f,c
  7034                           
  7035                           ;stkvar	_sign @ sp[(-5)+-1]
  7036                           
  7037                           ;incstack = 0
  7038 ;; hardware stack exceeded
  7039  016EE6  0EFA               	movlw	-6
  7040  016EE8  50E3               	movf	plusw1,w,c
  7041  016EEA  B4D8               	btfsc	status,2,c
  7042  016EEC  D01D               	goto	l9159
  7043                           
  7044                           ;stkvar	_val @ sp[(-5)+-5]
  7045  016EEE  0EF9               	movlw	-7
  7046  016EF0  AEE3               	btfss	plusw1,7,c
  7047  016EF2  D01A               	goto	l9159
  7048                           
  7049                           ;stkvar	_val @ sp[(-5)+-5]
  7050  016EF4  0EF6               	movlw	-10
  7051  016EF6  006F FF8C  F009    	movff	plusw1,btemp+8
  7052  016EFC  0EF7               	movlw	-9
  7053  016EFE  006F FF8C  F00A    	movff	plusw1,btemp+9
  7054  016F04  0EF8               	movlw	-8
  7055  016F06  006F FF8C  F00B    	movff	plusw1,btemp+10
  7056  016F0C  0EF9               	movlw	-7
  7057  016F0E  006F FF8C  F00C    	movff	plusw1,btemp+11
  7058  016F14  1E09               	comf	(btemp+8)^0,f,c
  7059  016F16  1E0A               	comf	(btemp+9)^0,f,c
  7060  016F18  1E0B               	comf	(btemp+10)^0,f,c
  7061  016F1A  1E0C               	comf	(btemp+11)^0,f,c
  7062  016F1C  2A09               	incf	(btemp+8)^0,f,c
  7063  016F1E  0E00               	movlw	0
  7064  016F20  220A               	addwfc	(btemp+9)^0,f,c
  7065  016F22  220B               	addwfc	(btemp+10)^0,f,c
  7066  016F24  220C               	addwfc	(btemp+11)^0,f,c
  7067  016F26  D010               	goto	L5
  7068  016F28                     l9159:
  7069                           
  7070                           ;stkvar	_val @ sp[(-5)+-5]
  7071  016F28  0EF6               	movlw	-10
  7072  016F2A  006F FF8C  F009    	movff	plusw1,btemp+8
  7073  016F30  0EF7               	movlw	-9
  7074  016F32  006F FF8C  F00A    	movff	plusw1,btemp+9
  7075  016F38  0EF8               	movlw	-8
  7076  016F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
  7077  016F40  0EF9               	movlw	-7
  7078  016F42  006F FF8C  F00C    	movff	plusw1,btemp+11
  7079  016F48                     L5:
  7080                           
  7081                           ;stkvar	_arg @ sp[(-5)+0]
  7082  016F48  0EFB               	movlw	-5
  7083  016F4A  0060  F027  FFE3   	movff	btemp+8,plusw1
  7084  016F50  0EFC               	movlw	-4
  7085  016F52  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7086  016F58  0EFD               	movlw	-3
  7087  016F5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7088  016F60  0EFE               	movlw	-2
  7089  016F62  0060  F033  FFE3   	movff	btemp+11,plusw1
  7090                           
  7091                           ;stkvar	_val @ sp[(-5)+-5]
  7092  016F68  0EF6               	movlw	-10
  7093  016F6A  50E3               	movf	plusw1,w,c
  7094  016F6C  E113               	bnz	l9167
  7095  016F6E  0EF7               	movlw	-9
  7096  016F70  50E3               	movf	plusw1,w,c
  7097  016F72  E110               	bnz	l9167
  7098  016F74  0EF8               	movlw	-8
  7099  016F76  50E3               	movf	plusw1,w,c
  7100  016F78  E10D               	bnz	l9167
  7101  016F7A  0EF9               	movlw	-7
  7102  016F7C  50E3               	movf	plusw1,w,c
  7103  016F7E  A4D8               	btfss	status,2,c
  7104  016F80  D009               	goto	l9167
  7105  016F82  0E00               	movlw	0
  7106  016F84  6E01               	movwf	btemp^0,c
  7107  016F86  0E00               	movlw	0
  7108  016F88  6E02               	movwf	(btemp+1)^0,c
  7109  016F8A  0E00               	movlw	0
  7110  016F8C  6E03               	movwf	(btemp+2)^0,c
  7111  016F8E  0E00               	movlw	0
  7112  016F90  6E04               	movwf	(btemp+3)^0,c
  7113  016F92  D0A2               	goto	l2916
  7114  016F94                     l9167:
  7115  016F94  0E96               	movlw	150
  7116  016F96  6E0C               	movwf	(btemp+11)^0,c
  7117                           
  7118                           ;stkvar	_exp @ sp[(-5)+4]
  7119  016F98  0EFF               	movlw	-1
  7120  016F9A  0060  F033  FFE3   	movff	btemp+11,plusw1
  7121  016FA0  D00B               	goto	l9171
  7122  016FA2                     l9169:
  7123                           
  7124                           ;stkvar	_exp @ sp[(-5)+4]
  7125  016FA2  0EFF               	movlw	-1
  7126  016FA4  2AE3               	incf	plusw1,f,c
  7127                           
  7128                           ;stkvar	_arg @ sp[(-5)+0]
  7129  016FA6  90D8               	bcf	status,0,c
  7130  016FA8  0EFE               	movlw	-2
  7131  016FAA  32E3               	rrcf	plusw1,f,c
  7132  016FAC  0EFD               	movlw	-3
  7133  016FAE  32E3               	rrcf	plusw1,f,c
  7134  016FB0  0EFC               	movlw	-4
  7135  016FB2  32E3               	rrcf	plusw1,f,c
  7136  016FB4  0EFB               	movlw	-5
  7137  016FB6  32E3               	rrcf	plusw1,f,c
  7138  016FB8                     l9171:
  7139                           
  7140                           ;stkvar	_arg @ sp[(-5)+0]
  7141  016FB8  50E1               	movf	fsr1l,w,c
  7142  016FBA  0FFB               	addlw	-5
  7143  016FBC  6ED9               	movwf	fsr2l,c
  7144  016FBE  50E2               	movf	fsr1h,w,c
  7145  016FC0  6EDA               	movwf	fsr2h,c
  7146  016FC2  0EFF               	movlw	255
  7147  016FC4  22DA               	addwfc	fsr2h,f,c
  7148  016FC6  52DE               	movf	postinc2,f,c
  7149  016FC8  52DE               	movf	postinc2,f,c
  7150  016FCA  52DE               	movf	postinc2,f,c
  7151  016FCC  0EFE               	movlw	254
  7152  016FCE  14DD               	andwf	postdec2,w,c
  7153  016FD0  B4D8               	btfsc	status,2,c
  7154  016FD2  D018               	goto	l9179
  7155  016FD4  D7E6               	goto	l9169
  7156  016FD6                     l9173:
  7157                           
  7158                           ;stkvar	_exp @ sp[(-5)+4]
  7159  016FD6  0EFF               	movlw	-1
  7160  016FD8  2AE3               	incf	plusw1,f,c
  7161                           
  7162                           ;stkvar	_arg @ sp[(-5)+0]
  7163  016FDA  50E1               	movf	fsr1l,w,c
  7164  016FDC  0FFB               	addlw	-5
  7165  016FDE  6ED9               	movwf	fsr2l,c
  7166  016FE0  50E2               	movf	fsr1h,w,c
  7167  016FE2  6EDA               	movwf	fsr2h,c
  7168  016FE4  0EFF               	movlw	255
  7169  016FE6  22DA               	addwfc	fsr2h,f,c
  7170  016FE8  2ADE               	incf	postinc2,f,c
  7171  016FEA  0E00               	movlw	0
  7172  016FEC  22DE               	addwfc	postinc2,f,c
  7173  016FEE  22DE               	addwfc	postinc2,f,c
  7174  016FF0  22DE               	addwfc	postinc2,f,c
  7175                           
  7176                           ;stkvar	_arg @ sp[(-5)+0]
  7177  016FF2  90D8               	bcf	status,0,c
  7178  016FF4  0EFE               	movlw	-2
  7179  016FF6  32E3               	rrcf	plusw1,f,c
  7180  016FF8  0EFD               	movlw	-3
  7181  016FFA  32E3               	rrcf	plusw1,f,c
  7182  016FFC  0EFC               	movlw	-4
  7183  016FFE  32E3               	rrcf	plusw1,f,c
  7184  017000  0EFB               	movlw	-5
  7185  017002  32E3               	rrcf	plusw1,f,c
  7186  017004                     l9179:
  7187                           
  7188                           ;stkvar	_arg @ sp[(-5)+0]
  7189  017004  50E1               	movf	fsr1l,w,c
  7190  017006  0FFB               	addlw	-5
  7191  017008  6ED9               	movwf	fsr2l,c
  7192  01700A  50E2               	movf	fsr1h,w,c
  7193  01700C  6EDA               	movwf	fsr2h,c
  7194  01700E  0EFF               	movlw	255
  7195  017010  22DA               	addwfc	fsr2h,f,c
  7196  017012  52DE               	movf	postinc2,f,c
  7197  017014  52DE               	movf	postinc2,f,c
  7198  017016  52DE               	movf	postinc2,f,c
  7199  017018  0EFF               	movlw	255
  7200  01701A  14DD               	andwf	postdec2,w,c
  7201  01701C  B4D8               	btfsc	status,2,c
  7202  01701E  D00C               	goto	l9183
  7203  017020  D7DA               	goto	l9173
  7204  017022                     l9181:
  7205                           
  7206                           ;stkvar	_exp @ sp[(-5)+4]
  7207  017022  0EFF               	movlw	-1
  7208  017024  06E3               	decf	plusw1,f,c
  7209                           
  7210                           ;stkvar	_arg @ sp[(-5)+0]
  7211  017026  90D8               	bcf	status,0,c
  7212  017028  0EFB               	movlw	-5
  7213  01702A  36E3               	rlcf	plusw1,f,c
  7214  01702C  0EFC               	movlw	-4
  7215  01702E  36E3               	rlcf	plusw1,f,c
  7216  017030  0EFD               	movlw	-3
  7217  017032  36E3               	rlcf	plusw1,f,c
  7218  017034  0EFE               	movlw	-2
  7219  017036  36E3               	rlcf	plusw1,f,c
  7220  017038                     l9183:
  7221                           
  7222                           ;stkvar	_arg @ sp[(-5)+0]
  7223  017038  0EFD               	movlw	-3
  7224  01703A  BEE3               	btfsc	plusw1,7,c
  7225  01703C  D007               	goto	u8710
  7226                           
  7227                           ;stkvar	_exp @ sp[(-5)+4]
  7228  01703E  0EFF               	movlw	-1
  7229  017040  006F FF8C  F001    	movff	plusw1,btemp
  7230  017046  0E02               	movlw	2
  7231  017048  6001               	cpfslt	btemp^0,c
  7232  01704A  D7EB               	goto	l9181
  7233  01704C                     u8710:
  7234                           
  7235                           ;stkvar	_exp @ sp[(-5)+4]
  7236  01704C  0EFF               	movlw	-1
  7237  01704E  B0E3               	btfsc	plusw1,0,c
  7238  017050  D002               	goto	l9191
  7239                           
  7240                           ;stkvar	_arg @ sp[(-5)+0]
  7241  017052  0EFD               	movlw	-3
  7242  017054  9EE3               	bcf	plusw1,7,c
  7243  017056                     l9191:
  7244                           
  7245                           ;stkvar	_exp @ sp[(-5)+4]
  7246  017056  50E1               	movf	fsr1l,w,c
  7247  017058  0FFF               	addlw	-1
  7248  01705A  6ED9               	movwf	fsr2l,c
  7249  01705C  50E2               	movf	fsr1h,w,c
  7250  01705E  6EDA               	movwf	fsr2h,c
  7251  017060  0EFF               	movlw	255
  7252  017062  22DA               	addwfc	fsr2h,f,c
  7253  017064  90D8               	bcf	status,0,c
  7254  017066  32DF               	rrcf	indf2,f,c
  7255                           
  7256                           ;stkvar	_exp @ sp[(-5)+4]
  7257  017068  0EFF               	movlw	-1
  7258  01706A  006F FF8C  F00C    	movff	plusw1,btemp+11
  7259  017070  0060  F030  F005   	movff	btemp+11,btemp+4
  7260  017076  6A06               	clrf	(btemp+5)^0,c
  7261  017078  6A07               	clrf	(btemp+6)^0,c
  7262  01707A  6A08               	clrf	(btemp+7)^0,c
  7263  01707C  0060  F014  F008   	movff	btemp+4,btemp+7
  7264  017082  6A07               	clrf	(btemp+6)^0,c
  7265  017084  6A06               	clrf	(btemp+5)^0,c
  7266  017086  6A05               	clrf	(btemp+4)^0,c
  7267                           
  7268                           ;stkvar	_arg @ sp[(-5)+0]
  7269  017088  50E1               	movf	fsr1l,w,c
  7270  01708A  0FFB               	addlw	-5
  7271  01708C  6ED9               	movwf	fsr2l,c
  7272  01708E  50E2               	movf	fsr1h,w,c
  7273  017090  6EDA               	movwf	fsr2h,c
  7274  017092  0EFF               	movlw	255
  7275  017094  22DA               	addwfc	fsr2h,f,c
  7276  017096  5005               	movf	(btemp+4)^0,w,c
  7277  017098  12DE               	iorwf	postinc2,f,c
  7278  01709A  5006               	movf	(btemp+5)^0,w,c
  7279  01709C  12DE               	iorwf	postinc2,f,c
  7280  01709E  5007               	movf	(btemp+6)^0,w,c
  7281  0170A0  12DE               	iorwf	postinc2,f,c
  7282  0170A2  5008               	movf	(btemp+7)^0,w,c
  7283  0170A4  12DE               	iorwf	postinc2,f,c
  7284                           
  7285                           ;stkvar	_sign @ sp[(-5)+-1]
  7286  0170A6  0EFA               	movlw	-6
  7287  0170A8  50E3               	movf	plusw1,w,c
  7288  0170AA  B4D8               	btfsc	status,2,c
  7289  0170AC  D005               	goto	l9201
  7290                           
  7291                           ;stkvar	_val @ sp[(-5)+-5]
  7292  0170AE  0EF9               	movlw	-7
  7293  0170B0  AEE3               	btfss	plusw1,7,c
  7294  0170B2  D002               	goto	l9201
  7295                           
  7296                           ;stkvar	_arg @ sp[(-5)+0]
  7297  0170B4  0EFE               	movlw	-2
  7298  0170B6  8EE3               	bsf	plusw1,7,c
  7299  0170B8                     l9201:
  7300                           
  7301                           ;stkvar	_arg @ sp[(-5)+0]
  7302  0170B8  0EFB               	movlw	-5
  7303  0170BA  006F FF8C  F001    	movff	plusw1,btemp
  7304  0170C0  0EFC               	movlw	-4
  7305  0170C2  006F FF8C  F002    	movff	plusw1,btemp+1
  7306  0170C8  0EFD               	movlw	-3
  7307  0170CA  006F FF8C  F003    	movff	plusw1,btemp+2
  7308  0170D0  0EFE               	movlw	-2
  7309  0170D2  006F FF8C  F004    	movff	plusw1,btemp+3
  7310  0170D8                     l2916:
  7311                           
  7312                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  7313  0170D8  0EF6               	movlw	246
  7314  0170DA  26E1               	addwf	fsr1l,f,c
  7315  0170DC  0EFF               	movlw	255
  7316  0170DE  22E2               	addwfc	fsr1h,f,c
  7317  0170E0  0012               	return		;funcret
  7318  0170E2                     __end_of___xxtofl:
  7319                           	opt callstack 0
  7320                           
  7321 ;; *************** function _clear_hid_pflags *****************
  7322 ;; Defined at:
  7323 ;;		line 51 in file "hid.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  h               1  [STACK] PTR struct H_data
  7326 ;;		 -> H(7), 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1  [STACK] void 
  7331 ;; Registers used:
  7332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 3F/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7342 ;;Total ram usage:        0 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:   15
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_main
  7349 ;; This function uses a reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text24
  7353  01A520                     __ptext24:
  7354                           	opt callstack 0
  7355  01A520                     _clear_hid_pflags:
  7356                           	opt callstack 15
  7357                           
  7358                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7359                           ;stkvar	_h @ sp[(0)+-1]
  7360                           
  7361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7362                           ;incstack = 0
  7363  01A520  0EFF               	movlw	-1
  7364  01A522  50E3               	movf	plusw1,w,c
  7365  01A524  6ED9               	movwf	fsr2l,c
  7366  01A526  6ADA               	clrf	fsr2h,c
  7367  01A528  0E03               	movlw	3
  7368  01A52A  26D9               	addwf	fsr2l,f,c
  7369  01A52C  0E00               	movlw	0
  7370  01A52E  6EDF               	movwf	indf2,c
  7371                           
  7372                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7373                           ;stkvar	_h @ sp[(0)+-1]
  7374  01A530  0EFF               	movlw	-1
  7375  01A532  50E3               	movf	plusw1,w,c
  7376  01A534  6ED9               	movwf	fsr2l,c
  7377  01A536  6ADA               	clrf	fsr2h,c
  7378  01A538  0E05               	movlw	5
  7379  01A53A  26D9               	addwf	fsr2l,f,c
  7380  01A53C  0E00               	movlw	0
  7381  01A53E  6EDF               	movwf	indf2,c
  7382                           
  7383                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7384  01A540  52E5               	movf	postdec1,f,c
  7385  01A542  0012               	return		;funcret
  7386  01A544                     __end_of_clear_hid_pflags:
  7387                           	opt callstack 0
  7388                           
  7389 ;; *************** function _clear_adc_scan *****************
  7390 ;; Defined at:
  7391 ;;		line 64 in file "daq.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;		None
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;		None
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1  [STACK] void 
  7398 ;; Registers used:
  7399 ;;		None
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/1
  7402 ;;		On exit  : 3F/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7409 ;;Total ram usage:        0 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:   15
  7412 ;; This function calls:
  7413 ;;		Nothing
  7414 ;; This function is called by:
  7415 ;;		_main
  7416 ;; This function uses a reentrant model
  7417 ;;
  7418                           
  7419                           	psect	text25
  7420  01A886                     __ptext25:
  7421                           	opt callstack 0
  7422  01A886                     _clear_adc_scan:
  7423                           	opt callstack 15
  7424                           
  7425                           ;daq.c: 66:  R.done = 0;
  7426                           
  7427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7428                           ;incstack = 0
  7429  01A886  0100               	movlb	0	; () banked
  7430  01A888  6BF2               	clrf	(_R+39)& (0+255),b	;volatile
  7431                           
  7432                           ; BSR set to: 0
  7433                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7434  01A88A  0012               	return		;funcret
  7435  01A88C                     __end_of_clear_adc_scan:
  7436                           	opt callstack 0
  7437                           
  7438 ;; *************** function _check_help *****************
  7439 ;; Defined at:
  7440 ;;		line 40 in file "mconfig.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  flipper         1  [STACK] const _Bool 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  estatus         1    0        _Bool 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1  [STACK] _Bool 
  7447 ;; Registers used:
  7448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7449 ;; Tracked objects:
  7450 ;;		On entry : 3F/2
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7458 ;;Total ram usage:        0 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:   27
  7461 ;; This function calls:
  7462 ;;		_StartTimer
  7463 ;;		_TimerDone
  7464 ;;		_display_help
  7465 ;;		_display_info
  7466 ;;		_get_vterm_ptr
  7467 ;;		_help_button
  7468 ;;		_mode_lamp_bright
  7469 ;;		_mode_lamp_dim
  7470 ;;		_set_display_info
  7471 ;;		_set_temp_display_help
  7472 ;;		_set_vterm
  7473 ;;		_sprintf
  7474 ;;		_update_lcd
  7475 ;;		_vterm_dump
  7476 ;; This function is called by:
  7477 ;;		_main
  7478 ;; This function uses a reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text26
  7482  016CCC                     __ptext26:
  7483                           	opt callstack 0
  7484  016CCC                     _check_help:
  7485                           	opt callstack 3
  7486                           
  7487                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7488                           
  7489                           ; BSR set to: 0
  7490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7491                           ;incstack = 0
  7492  016CCC  ECA5  F0CF         	call	_help_button	;wreg free
  7493  016CD0  5001               	movf	btemp^0,w,c
  7494  016CD2  B4D8               	btfsc	status,2,c
  7495  016CD4  D0D0               	goto	l12045
  7496  016CD6  EC33  F0D4         	call	_display_info	;wreg free
  7497  016CDA  0401               	decf	btemp^0,w,c
  7498  016CDC  B4D8               	btfsc	status,2,c
  7499  016CDE  D0CB               	goto	l12045
  7500                           
  7501                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7502  016CE0  0EDC               	movlw	220
  7503  016CE2  6EE6               	movwf	postinc1,c
  7504  016CE4  0E05               	movlw	5
  7505  016CE6  6EE6               	movwf	postinc1,c
  7506  016CE8  0E0B               	movlw	11
  7507  016CEA  6EE6               	movwf	postinc1,c
  7508  016CEC  EC06  F0CF         	call	_StartTimer	;wreg free
  7509                           
  7510                           ;mconfig.c: 48:   if (V.debug)
  7511  016CF0  0102               	movlb	2	; () banked
  7512  016CF2  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7513                           
  7514                           ; BSR set to: 2
  7515                           ;mconfig.c: 49:    vterm_dump();
  7516  016CF4  ECF4  F0BF         	call	_vterm_dump	;wreg free
  7517                           
  7518                           ;mconfig.c: 51:   set_vterm(1);
  7519  016CF8  0E01               	movlw	1
  7520  016CFA  6EE6               	movwf	postinc1,c
  7521  016CFC  EC4B  F0D3         	call	_set_vterm	;wreg free
  7522                           
  7523                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7524  016D00  EC33  F0D4         	call	_display_info	;wreg free
  7525  016D04  5001               	movf	btemp^0,w,c
  7526  016D06  6EE6               	movwf	postinc1,c
  7527  016D08  ECED  F0D3         	call	_set_temp_display_help	;wreg free
  7528                           
  7529                           ; BSR set to: 2
  7530                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7531  016D0C  0E01               	movlw	1
  7532  016D0E  6EE6               	movwf	postinc1,c
  7533  016D10  EC5A  F0D3         	call	_set_display_info	;wreg free
  7534                           
  7535                           ;mconfig.c: 54:   if (flipper) {
  7536                           ;stkvar	_flipper @ sp[(0)+-1]
  7537  016D14  0EFF               	movlw	-1
  7538  016D16  50E3               	movf	plusw1,w,c
  7539  016D18  B4D8               	btfsc	status,2,c
  7540  016D1A  D019               	goto	l12031
  7541                           
  7542                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7543  016D1C  0EB4               	movlw	low STR_27
  7544  016D1E  6EE6               	movwf	postinc1,c
  7545  016D20  0EFF               	movlw	high STR_27
  7546  016D22  6EE6               	movwf	postinc1,c
  7547  016D24  0E73               	movlw	low STR_29
  7548  016D26  6EE6               	movwf	postinc1,c
  7549  016D28  0EFE               	movlw	high STR_29
  7550  016D2A  6EE6               	movwf	postinc1,c
  7551  016D2C  0E01               	movlw	1
  7552  016D2E  6EE6               	movwf	postinc1,c
  7553  016D30  0E00               	movlw	0
  7554  016D32  6EE6               	movwf	postinc1,c
  7555  016D34  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7556  016D38  0060  F007  FFE6   	movff	btemp,postinc1
  7557  016D3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7558  016D44  0E06               	movlw	6
  7559  016D46  6EE6               	movwf	postinc1,c
  7560  016D48  ECD6  F0C3         	call	_sprintf	;wreg free
  7561                           
  7562                           ;mconfig.c: 56:   } else {
  7563  016D4C  D018               	goto	l1641
  7564  016D4E                     l12031:
  7565                           
  7566                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7567  016D4E  0ECA               	movlw	low STR_28
  7568  016D50  6EE6               	movwf	postinc1,c
  7569  016D52  0EFF               	movlw	high STR_28
  7570  016D54  6EE6               	movwf	postinc1,c
  7571  016D56  0E73               	movlw	low STR_29
  7572  016D58  6EE6               	movwf	postinc1,c
  7573  016D5A  0EFE               	movlw	high STR_29
  7574  016D5C  6EE6               	movwf	postinc1,c
  7575  016D5E  0E01               	movlw	1
  7576  016D60  6EE6               	movwf	postinc1,c
  7577  016D62  0E00               	movlw	0
  7578  016D64  6EE6               	movwf	postinc1,c
  7579  016D66  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7580  016D6A  0060  F007  FFE6   	movff	btemp,postinc1
  7581  016D70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7582  016D76  0E06               	movlw	6
  7583  016D78  6EE6               	movwf	postinc1,c
  7584  016D7A  ECD6  F0C3         	call	_sprintf	;wreg free
  7585  016D7E                     l1641:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7589  016D7E  0102               	movlb	2	; () banked
  7590  016D80  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7591  016D82  32E8               	rrcf	wreg,f,c
  7592  016D84  32E8               	rrcf	wreg,f,c
  7593  016D86  0B03               	andlw	3
  7594  016D88  0D24               	mullw	36
  7595  016D8A  0E12               	movlw	18
  7596  016D8C  26F3               	addwf	243,f,c
  7597  016D8E  0E00               	movlw	0
  7598  016D90  22F4               	addwfc	244,f,c
  7599  016D92  0E41               	movlw	low _T
  7600  016D94  6E0B               	movwf	(btemp+10)^0,c
  7601  016D96  0EFD               	movlw	high _T
  7602  016D98  6E0C               	movwf	(btemp+11)^0,c
  7603  016D9A  50F3               	movf	243,w,c
  7604  016D9C  260B               	addwf	(btemp+10)^0,f,c
  7605  016D9E  50F4               	movf	244,w,c
  7606  016DA0  220C               	addwfc	(btemp+11)^0,f,c
  7607  016DA2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7608  016DA8  0060  F033  FFE6   	movff	btemp+11,postinc1
  7609  016DAE  0EC0               	movlw	low STR_31
  7610  016DB0  6EE6               	movwf	postinc1,c
  7611  016DB2  0EFF               	movlw	high STR_31
  7612  016DB4  6EE6               	movwf	postinc1,c
  7613  016DB6  0E01               	movlw	1
  7614  016DB8  6EE6               	movwf	postinc1,c
  7615  016DBA  0E01               	movlw	1
  7616  016DBC  6EE6               	movwf	postinc1,c
  7617  016DBE  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7618  016DC2  0060  F007  FFE6   	movff	btemp,postinc1
  7619  016DC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7620  016DCE  0E06               	movlw	6
  7621  016DD0  6EE6               	movwf	postinc1,c
  7622  016DD2  ECD6  F0C3         	call	_sprintf	;wreg free
  7623                           
  7624                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  7625  016DD6  0102               	movlb	2	; () banked
  7626  016DD8  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7627  016DDA  32E8               	rrcf	wreg,f,c
  7628  016DDC  32E8               	rrcf	wreg,f,c
  7629  016DDE  0B03               	andlw	3
  7630  016DE0  0D24               	mullw	36
  7631  016DE2  0E41               	movlw	low _T
  7632  016DE4  6E0B               	movwf	(btemp+10)^0,c
  7633  016DE6  0EFD               	movlw	high _T
  7634  016DE8  6E0C               	movwf	(btemp+11)^0,c
  7635  016DEA  50F3               	movf	243,w,c
  7636  016DEC  260B               	addwf	(btemp+10)^0,f,c
  7637  016DEE  50F4               	movf	244,w,c
  7638  016DF0  220C               	addwfc	(btemp+11)^0,f,c
  7639  016DF2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7640  016DF8  0060  F033  FFE6   	movff	btemp+11,postinc1
  7641  016DFE  0EC0               	movlw	low STR_31
  7642  016E00  6EE6               	movwf	postinc1,c
  7643  016E02  0EFF               	movlw	high STR_31
  7644  016E04  6EE6               	movwf	postinc1,c
  7645  016E06  0E01               	movlw	1
  7646  016E08  6EE6               	movwf	postinc1,c
  7647  016E0A  0E02               	movlw	2
  7648  016E0C  6EE6               	movwf	postinc1,c
  7649  016E0E  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7650  016E12  0060  F007  FFE6   	movff	btemp,postinc1
  7651  016E18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7652  016E1E  0E06               	movlw	6
  7653  016E20  6EE6               	movwf	postinc1,c
  7654  016E22  ECD6  F0C3         	call	_sprintf	;wreg free
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;mconfig.c: 61:   V.help_id++;
  7658  016E26  EE20  F29B         	lfsr	2,_V+155	;volatile
  7659  016E2A  38DF               	swapf	223,w,c
  7660  016E2C  6E0C               	movwf	(btemp+11)^0,c
  7661  016E2E  320C               	rrcf	(btemp+11)^0,f,c
  7662  016E30  300C               	rrcf	(btemp+11)^0,w,c
  7663  016E32  0B03               	andlw	3
  7664  016E34  6E0C               	movwf	(btemp+11)^0,c
  7665  016E36  2A0C               	incf	(btemp+11)^0,f,c
  7666  016E38  3A0C               	swapf	(btemp+11)^0,f,c
  7667  016E3A  360C               	rlcf	(btemp+11)^0,f,c
  7668  016E3C  360C               	rlcf	(btemp+11)^0,f,c
  7669  016E3E  50DF               	movf	223,w,c
  7670  016E40  180C               	xorwf	(btemp+11)^0,w,c
  7671  016E42  0B3F               	andlw	-193
  7672  016E44  180C               	xorwf	(btemp+11)^0,w,c
  7673  016E46  6EDF               	movwf	223,c
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  7677  016E48  0EB8               	movlw	184
  7678  016E4A  6EE6               	movwf	postinc1,c
  7679  016E4C  0E0B               	movlw	11
  7680  016E4E  6EE6               	movwf	postinc1,c
  7681  016E50  0E09               	movlw	9
  7682  016E52  6EE6               	movwf	postinc1,c
  7683  016E54  EC06  F0CF         	call	_StartTimer	;wreg free
  7684                           
  7685                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  7686  016E58  0EB8               	movlw	184
  7687  016E5A  6EE6               	movwf	postinc1,c
  7688  016E5C  0E0B               	movlw	11
  7689  016E5E  6EE6               	movwf	postinc1,c
  7690  016E60  0E07               	movlw	7
  7691  016E62  6EE6               	movwf	postinc1,c
  7692  016E64  EC06  F0CF         	call	_StartTimer	;wreg free
  7693                           
  7694                           ;mconfig.c: 64:   mode_lamp_bright();
  7695  016E68  ECFC  F0D3         	call	_mode_lamp_bright	;wreg free
  7696                           
  7697                           ;mconfig.c: 65:   update_lcd(1);
  7698  016E6C  0E01               	movlw	1
  7699  016E6E  6EE6               	movwf	postinc1,c
  7700  016E70  ECC7  F0C2         	call	_update_lcd	;wreg free
  7701                           
  7702                           ;mconfig.c: 67:  } else {
  7703  016E74  D032               	goto	l1642
  7704  016E76                     l12045:
  7705                           
  7706                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  7707  016E76  0E09               	movlw	9
  7708  016E78  6EE6               	movwf	postinc1,c
  7709  016E7A  EC65  F0D1         	call	_TimerDone	;wreg free
  7710  016E7E  5001               	movf	btemp^0,w,c
  7711  016E80  B4D8               	btfsc	status,2,c
  7712  016E82  D02B               	goto	l1642
  7713                           
  7714                           ;mconfig.c: 69:    set_vterm(0);
  7715  016E84  0E00               	movlw	0
  7716  016E86  6EE6               	movwf	postinc1,c
  7717  016E88  EC4B  F0D3         	call	_set_vterm	;wreg free
  7718                           
  7719                           ;mconfig.c: 70:    V.help = 0;
  7720  016E8C  0102               	movlb	2	; () banked
  7721  016E8E  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  7722                           
  7723                           ; BSR set to: 2
  7724                           ;mconfig.c: 71:    set_display_info(display_help());
  7725  016E90  EC37  F0D4         	call	_display_help	;wreg free
  7726  016E94  5001               	movf	btemp^0,w,c
  7727  016E96  6EE6               	movwf	postinc1,c
  7728  016E98  EC5A  F0D3         	call	_set_display_info	;wreg free
  7729                           
  7730                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  7731  016E9C  0060  FA57  FFE6   	movff	_V+149,postinc1
  7732  016EA2  0060  FA5B  FFE6   	movff	_V+150,postinc1
  7733  016EA8  ECA1  F0D3         	call	_mode_lamp_dim	;wreg free
  7734                           
  7735                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  7736  016EAC  0E0B               	movlw	11
  7737  016EAE  6EE6               	movwf	postinc1,c
  7738  016EB0  EC65  F0D1         	call	_TimerDone	;wreg free
  7739  016EB4  5001               	movf	btemp^0,w,c
  7740  016EB6  B4D8               	btfsc	status,2,c
  7741  016EB8  D010               	goto	l1642
  7742                           
  7743                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  7744  016EBA  0102               	movlb	2	; () banked
  7745  016EBC  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  7746  016EBE  A4D8               	btfss	status,2,c
  7747  016EC0  D002               	goto	u11650
  7748  016EC2  0E01               	movlw	1
  7749  016EC4  D001               	goto	u11660
  7750  016EC6                     u11650:
  7751  016EC6  0E00               	movlw	0
  7752  016EC8                     u11660:
  7753  016EC8  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  7754                           
  7755                           ; BSR set to: 2
  7756                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  7757  016ECA  0EDC               	movlw	220
  7758  016ECC  6EE6               	movwf	postinc1,c
  7759  016ECE  0E05               	movlw	5
  7760  016ED0  6EE6               	movwf	postinc1,c
  7761  016ED2  0E0B               	movlw	11
  7762  016ED4  6EE6               	movwf	postinc1,c
  7763  016ED6  EC06  F0CF         	call	_StartTimer	;wreg free
  7764  016EDA                     l1642:
  7765                           
  7766                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7767  016EDA  52E5               	movf	postdec1,f,c
  7768  016EDC  0012               	return		;funcret
  7769  016EDE                     __end_of_check_help:
  7770                           	opt callstack 0
  7771                           
  7772 ;; *************** function _vterm_dump *****************
  7773 ;; Defined at:
  7774 ;;		line 121 in file "mconfig.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1  [STACK] void 
  7781 ;; Registers used:
  7782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7783 ;; Tracked objects:
  7784 ;;		On entry : 3F/2
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7792 ;;Total ram usage:        0 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:   26
  7795 ;; This function calls:
  7796 ;;		_WaitMs
  7797 ;;		_eaDogM_WriteStringAtPos
  7798 ;;		_get_vterm_ptr
  7799 ;;		_sprintf
  7800 ;;		_wait_lcd_done
  7801 ;; This function is called by:
  7802 ;;		_check_help
  7803 ;; This function uses a reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text27
  7807  017FE8                     __ptext27:
  7808                           	opt callstack 0
  7809  017FE8                     _vterm_dump:
  7810                           	opt callstack 3
  7811                           
  7812                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  7813                           
  7814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7815                           ;incstack = 0
  7816  017FE8  0E01               	movlw	1
  7817  017FEA  6EE6               	movwf	postinc1,c
  7818  017FEC  0E00               	movlw	0
  7819  017FEE  6EE6               	movwf	postinc1,c
  7820  017FF0  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7821  017FF4  0060  F007  FFE6   	movff	btemp,postinc1
  7822  017FFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7823  018000  0E00               	movlw	0
  7824  018002  6EE6               	movwf	postinc1,c
  7825  018004  0E00               	movlw	0
  7826  018006  6EE6               	movwf	postinc1,c
  7827  018008  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7828  01800C  0060  F007  FFE6   	movff	btemp,postinc1
  7829  018012  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7830  018018  0E96               	movlw	low STR_33
  7831  01801A  6EE6               	movwf	postinc1,c
  7832  01801C  0EFF               	movlw	high STR_33
  7833  01801E  6EE6               	movwf	postinc1,c
  7834  018020  0E01               	movlw	low (_V+1)
  7835  018022  6EE6               	movwf	postinc1,c
  7836  018024  0E02               	movlw	high (_V+1)
  7837  018026  6EE6               	movwf	postinc1,c
  7838  018028  0E08               	movlw	8
  7839  01802A  6EE6               	movwf	postinc1,c
  7840  01802C  ECD6  F0C3         	call	_sprintf	;wreg free
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;mconfig.c: 124:  wait_lcd_done();
  7844  018030  EC78  F0D3         	call	_wait_lcd_done	;wreg free
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  7848  018034  0E01               	movlw	low (_V+1)
  7849  018036  6EE6               	movwf	postinc1,c
  7850  018038  0E02               	movlw	high (_V+1)
  7851  01803A  6EE6               	movwf	postinc1,c
  7852  01803C  0E00               	movlw	0
  7853  01803E  6EE6               	movwf	postinc1,c
  7854  018040  0E00               	movlw	0
  7855  018042  6EE6               	movwf	postinc1,c
  7856  018044  ECDC  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  7857                           
  7858                           ; BSR set to: 59
  7859                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  7860  018048  0E01               	movlw	1
  7861  01804A  6EE6               	movwf	postinc1,c
  7862  01804C  0E01               	movlw	1
  7863  01804E  6EE6               	movwf	postinc1,c
  7864  018050  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7865  018054  0060  F007  FFE6   	movff	btemp,postinc1
  7866  01805A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7867  018060  0E00               	movlw	0
  7868  018062  6EE6               	movwf	postinc1,c
  7869  018064  0E01               	movlw	1
  7870  018066  6EE6               	movwf	postinc1,c
  7871  018068  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7872  01806C  0060  F007  FFE6   	movff	btemp,postinc1
  7873  018072  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7874  018078  0E96               	movlw	low STR_33
  7875  01807A  6EE6               	movwf	postinc1,c
  7876  01807C  0EFF               	movlw	high STR_33
  7877  01807E  6EE6               	movwf	postinc1,c
  7878  018080  0E01               	movlw	low (_V+1)
  7879  018082  6EE6               	movwf	postinc1,c
  7880  018084  0E02               	movlw	high (_V+1)
  7881  018086  6EE6               	movwf	postinc1,c
  7882  018088  0E08               	movlw	8
  7883  01808A  6EE6               	movwf	postinc1,c
  7884  01808C  ECD6  F0C3         	call	_sprintf	;wreg free
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;mconfig.c: 127:  wait_lcd_done();
  7888  018090  EC78  F0D3         	call	_wait_lcd_done	;wreg free
  7889                           
  7890                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  7891  018094  0E01               	movlw	low (_V+1)
  7892  018096  6EE6               	movwf	postinc1,c
  7893  018098  0E02               	movlw	high (_V+1)
  7894  01809A  6EE6               	movwf	postinc1,c
  7895  01809C  0E00               	movlw	0
  7896  01809E  6EE6               	movwf	postinc1,c
  7897  0180A0  0E01               	movlw	1
  7898  0180A2  6EE6               	movwf	postinc1,c
  7899  0180A4  ECDC  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  7900                           
  7901                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  7902  0180A8  0E01               	movlw	1
  7903  0180AA  6EE6               	movwf	postinc1,c
  7904  0180AC  0E02               	movlw	2
  7905  0180AE  6EE6               	movwf	postinc1,c
  7906  0180B0  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7907  0180B4  0060  F007  FFE6   	movff	btemp,postinc1
  7908  0180BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7909  0180C0  0E00               	movlw	0
  7910  0180C2  6EE6               	movwf	postinc1,c
  7911  0180C4  0E02               	movlw	2
  7912  0180C6  6EE6               	movwf	postinc1,c
  7913  0180C8  ECBD  F0D0         	call	_get_vterm_ptr	;wreg free
  7914  0180CC  0060  F007  FFE6   	movff	btemp,postinc1
  7915  0180D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7916  0180D8  0E96               	movlw	low STR_33
  7917  0180DA  6EE6               	movwf	postinc1,c
  7918  0180DC  0EFF               	movlw	high STR_33
  7919  0180DE  6EE6               	movwf	postinc1,c
  7920  0180E0  0E01               	movlw	low (_V+1)
  7921  0180E2  6EE6               	movwf	postinc1,c
  7922  0180E4  0E02               	movlw	high (_V+1)
  7923  0180E6  6EE6               	movwf	postinc1,c
  7924  0180E8  0E08               	movlw	8
  7925  0180EA  6EE6               	movwf	postinc1,c
  7926  0180EC  ECD6  F0C3         	call	_sprintf	;wreg free
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;mconfig.c: 130:  wait_lcd_done();
  7930  0180F0  EC78  F0D3         	call	_wait_lcd_done	;wreg free
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  7934  0180F4  0E01               	movlw	low (_V+1)
  7935  0180F6  6EE6               	movwf	postinc1,c
  7936  0180F8  0E02               	movlw	high (_V+1)
  7937  0180FA  6EE6               	movwf	postinc1,c
  7938  0180FC  0E00               	movlw	0
  7939  0180FE  6EE6               	movwf	postinc1,c
  7940  018100  0E02               	movlw	2
  7941  018102  6EE6               	movwf	postinc1,c
  7942  018104  ECDC  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  7943                           
  7944                           ; BSR set to: 59
  7945                           ;mconfig.c: 132:  WaitMs(3000);
  7946  018108  0EB8               	movlw	184
  7947  01810A  6EE6               	movwf	postinc1,c
  7948  01810C  0E0B               	movlw	11
  7949  01810E  6EE6               	movwf	postinc1,c
  7950  018110  ECC1  F0CF         	call	_WaitMs	;wreg free
  7951                           
  7952                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7953  018114  0012               	return		;funcret
  7954  018116                     __end_of_vterm_dump:
  7955                           	opt callstack 0
  7956                           
  7957 ;; *************** function _sprintf *****************
  7958 ;; Defined at:
  7959 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  s               2  [STACK] PTR unsigned char 
  7962 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  7963 ;;  fmt             2  [STACK] PTR const unsigned char 
  7964 ;;		 -> STR_46(79), STR_44(3), STR_43(3), STR_42(19), 
  7965 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  7966 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  7967 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  7968 ;;		 -> STR_29(19), STR_23(17), STR_22(16), STR_21(16), 
  7969 ;;		 -> STR_20(19), STR_19(20), STR_18(19), STR_17(19), 
  7970 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  7971 ;;		 -> STR_12(19), STR_11(17), STR_10(16), STR_9(16), 
  7972 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  7973 ;;		 -> STR_2(15), STR_1(17), 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  f               6  [STACK] struct _IO_FILE
  7976 ;;  ap              2  [STACK] PTR void [1]
  7977 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7978 ;;  ret             2    0        int 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  2  [STACK] int 
  7981 ;; Registers used:
  7982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/2
  7985 ;;		On exit  : 3F/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:   23
  7995 ;; This function calls:
  7996 ;;		_vfprintf
  7997 ;; This function is called by:
  7998 ;;		_main
  7999 ;;		_check_help
  8000 ;;		_vterm_dump
  8001 ;;		_calc_bsoc
  8002 ;; This function uses a reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text28
  8006  0187AC                     __ptext28:
  8007                           	opt callstack 0
  8008  0187AC                     _sprintf:
  8009                           	opt callstack 0
  8010                           
  8011                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8012  0187AC  0E08               	movlw	8
  8013  0187AE  26E1               	addwf	fsr1l,f,c
  8014  0187B0  0E00               	movlw	0
  8015  0187B2  22E2               	addwfc	fsr1h,f,c
  8016                           
  8017                           ;incstack = 0
  8018 ;; hardware stack exceeded
  8019  0187B4  0EFE               	movlw	254
  8020  0187B6  6E0B               	movwf	(btemp+10)^0,c
  8021  0187B8  0EFF               	movlw	255
  8022  0187BA  6E0C               	movwf	(btemp+11)^0,c
  8023                           
  8024                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  8025  0187BC  0EF5               	movlw	245
  8026  0187BE  24E1               	addwf	fsr1l,w,c
  8027  0187C0  6E09               	movwf	(btemp+8)^0,c
  8028  0187C2  0EFF               	movlw	255
  8029  0187C4  20E2               	addwfc	fsr1h,w,c
  8030  0187C6  6E0A               	movwf	(btemp+9)^0,c
  8031  0187C8  500B               	movf	(btemp+10)^0,w,c
  8032  0187CA  2609               	addwf	(btemp+8)^0,f,c
  8033  0187CC  500C               	movf	(btemp+11)^0,w,c
  8034  0187CE  220A               	addwfc	(btemp+9)^0,f,c
  8035                           
  8036                           ;stkvar	_ap @ sp[(-8)+6]
  8037  0187D0  0EFF               	movlw	-1
  8038  0187D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
  8039  0187D8  0EFE               	movlw	-2
  8040  0187DA  0060  F027  FFE3   	movff	btemp+8,plusw1
  8041                           
  8042                           ;stkvar	_s @ sp[(-8)+-3]
  8043  0187E0  0EF5               	movlw	-11
  8044  0187E2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8045  0187E8  0EF6               	movlw	-10
  8046  0187EA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8047                           
  8048                           ;stkvar	_f @ sp[(-8)+0]
  8049  0187F0  0EF9               	movlw	-7
  8050  0187F2  0060  F033  FFE3   	movff	btemp+11,plusw1
  8051  0187F8  0EF8               	movlw	-8
  8052  0187FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8053                           
  8054                           ;stkvar	_f @ sp[(-8)+0]
  8055  018800  0EFA               	movlw	250
  8056  018802  24E1               	addwf	fsr1l,w,c
  8057  018804  6ED9               	movwf	fsr2l,c
  8058  018806  0EFF               	movlw	255
  8059  018808  20E2               	addwfc	fsr1h,w,c
  8060  01880A  6EDA               	movwf	fsr2h,c
  8061  01880C  0E00               	movlw	0
  8062  01880E  6EDE               	movwf	postinc2,c
  8063  018810  0E00               	movlw	0
  8064  018812  6EDD               	movwf	postdec2,c
  8065                           
  8066                           ;stkvar	_f @ sp[(-8)+0]
  8067  018814  0EFC               	movlw	252
  8068  018816  24E1               	addwf	fsr1l,w,c
  8069  018818  6ED9               	movwf	fsr2l,c
  8070  01881A  0EFF               	movlw	255
  8071  01881C  20E2               	addwfc	fsr1h,w,c
  8072  01881E  6EDA               	movwf	fsr2h,c
  8073  018820  0E00               	movlw	0
  8074  018822  6EDE               	movwf	postinc2,c
  8075  018824  0E00               	movlw	0
  8076  018826  6EDD               	movwf	postdec2,c
  8077                           
  8078                           ;stkvar	_ap @ sp[(-8)+6]
  8079  018828  0EFE               	movlw	254
  8080  01882A  24E1               	addwf	fsr1l,w,c
  8081  01882C  6E01               	movwf	btemp^0,c
  8082  01882E  0EFF               	movlw	255
  8083  018830  20E2               	addwfc	fsr1h,w,c
  8084  018832  6E02               	movwf	(btemp+1)^0,c
  8085  018834  0060  F007  FFE6   	movff	btemp,postinc1
  8086  01883A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8087                           
  8088                           ;stkvar	_fmt @ sp[(-10)+-5]
  8089  018840  0EF1               	movlw	-15
  8090  018842  006F FF8F FFE6     	movff	plusw1,postinc1
  8091  018848  006F FF8F FFE6     	movff	plusw1,postinc1
  8092                           
  8093                           ;stkvar	_f @ sp[(-12)+0]
  8094  01884E  0EF4               	movlw	244
  8095  018850  24E1               	addwf	fsr1l,w,c
  8096  018852  6E01               	movwf	btemp^0,c
  8097  018854  0EFF               	movlw	255
  8098  018856  20E2               	addwfc	fsr1h,w,c
  8099  018858  6E02               	movwf	(btemp+1)^0,c
  8100  01885A  0060  F007  FFE6   	movff	btemp,postinc1
  8101  018860  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8102  018866  EC44  F0C7         	call	_vfprintf	;wreg free
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;stkvar	_f @ sp[(-8)+0]
  8106  01886A  0EFA               	movlw	250
  8107  01886C  24E1               	addwf	fsr1l,w,c
  8108  01886E  6ED9               	movwf	fsr2l,c
  8109  018870  0EFF               	movlw	255
  8110  018872  20E2               	addwfc	fsr1h,w,c
  8111  018874  6EDA               	movwf	fsr2h,c
  8112  018876  006F FF78  F00B    	movff	postinc2,btemp+10
  8113  01887C  006F FF74  F00C    	movff	postdec2,btemp+11
  8114                           
  8115                           ;stkvar	_s @ sp[(-8)+-3]
  8116  018882  0EF5               	movlw	-11
  8117  018884  006F FF8C  F009    	movff	plusw1,btemp+8
  8118  01888A  0EF6               	movlw	-10
  8119  01888C  006F FF8C  F00A    	movff	plusw1,btemp+9
  8120  018892  500B               	movf	(btemp+10)^0,w,c
  8121  018894  2409               	addwf	(btemp+8)^0,w,c
  8122  018896  6ED9               	movwf	fsr2l,c
  8123  018898  500C               	movf	(btemp+11)^0,w,c
  8124  01889A  200A               	addwfc	(btemp+9)^0,w,c
  8125  01889C  6EDA               	movwf	fsr2h,c
  8126  01889E  0E00               	movlw	0
  8127  0188A0  6EDF               	movwf	indf2,c
  8128                           
  8129                           ; BSR set to: 0
  8130                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, args
      +                          ize = 4, vargsize = 0
  8131  0188A2  0EF8               	movlw	248
  8132  0188A4  26E1               	addwf	fsr1l,f,c
  8133  0188A6  0EFF               	movlw	255
  8134  0188A8  22E2               	addwfc	fsr1h,f,c
  8135  0188AA  52E5               	movf	postdec1,f,c
  8136  0188AC  50E7               	movf	indf1,w,c
  8137  0188AE  5EE1               	subwf	fsr1l,f,c
  8138  0188B0  0E00               	movlw	0
  8139  0188B2  5AE2               	subwfb	fsr1h,f,c
  8140  0188B4  0012               	return		;funcret
  8141  0188B6                     __end_of_sprintf:
  8142                           	opt callstack 0
  8143                           
  8144 ;; *************** function _get_vterm_ptr *****************
  8145 ;; Defined at:
  8146 ;;		line 116 in file "mconfig.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  line            1  [STACK] const unsigned char 
  8149 ;;  vterm           1  [STACK] const unsigned char 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;		None
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  2  [STACK] PTR unsigned char 
  8154 ;; Registers used:
  8155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/2
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8165 ;;Total ram usage:        0 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:   15
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_main
  8172 ;;		_check_help
  8173 ;;		_vterm_dump
  8174 ;; This function uses a reentrant model
  8175 ;;
  8176                           
  8177                           	psect	text29
  8178  01A17A                     __ptext29:
  8179                           	opt callstack 0
  8180  01A17A                     _get_vterm_ptr:
  8181                           	opt callstack 15
  8182                           
  8183                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8184                           ;stkvar	_vterm @ sp[(0)+-2]
  8185                           
  8186                           ; BSR set to: 0
  8187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8188                           ;incstack = 0
  8189  01A17A  0EFE               	movlw	-2
  8190  01A17C  50E3               	movf	plusw1,w,c
  8191  01A17E  0B03               	andlw	3
  8192  01A180  0D48               	mullw	72
  8193  01A182  0EFF               	movlw	low _D
  8194  01A184  6E01               	movwf	btemp^0,c
  8195  01A186  0E07               	movlw	high _D
  8196  01A188  6E02               	movwf	(btemp+1)^0,c
  8197  01A18A  50F3               	movf	243,w,c
  8198  01A18C  2601               	addwf	btemp^0,f,c
  8199  01A18E  50F4               	movf	244,w,c
  8200  01A190  2202               	addwfc	(btemp+1)^0,f,c
  8201                           
  8202                           ;stkvar	_line @ sp[(0)+-1]
  8203  01A192  0EFF               	movlw	-1
  8204  01A194  50E3               	movf	plusw1,w,c
  8205  01A196  0B03               	andlw	3
  8206  01A198  0D18               	mullw	24
  8207  01A19A  50F3               	movf	243,w,c
  8208  01A19C  2601               	addwf	btemp^0,f,c
  8209  01A19E  50F4               	movf	244,w,c
  8210  01A1A0  2202               	addwfc	(btemp+1)^0,f,c
  8211                           
  8212                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8213  01A1A2  52E5               	movf	postdec1,f,c
  8214  01A1A4  52E5               	movf	postdec1,f,c
  8215  01A1A6  0012               	return		;funcret
  8216  01A1A8                     __end_of_get_vterm_ptr:
  8217                           	opt callstack 0
  8218                           
  8219 ;; *************** function _WaitMs *****************
  8220 ;; Defined at:
  8221 ;;		line 32 in file "timers.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  numMilliseco    2  [STACK] const unsigned short 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1  [STACK] void 
  8228 ;; Registers used:
  8229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/2
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8239 ;;Total ram usage:        0 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:   16
  8242 ;; This function calls:
  8243 ;;		_StartTimer
  8244 ;;		_TimerDone
  8245 ;; This function is called by:
  8246 ;;		_main
  8247 ;;		_vterm_dump
  8248 ;; This function uses a reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text30
  8252  019F82                     __ptext30:
  8253                           	opt callstack 0
  8254  019F82                     _WaitMs:
  8255                           	opt callstack 12
  8256                           
  8257                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8258                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8259                           
  8260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8261                           ;incstack = 0
  8262  019F82  0EFE               	movlw	-2
  8263  019F84  006F FF8F FFE6     	movff	plusw1,postinc1
  8264  019F8A  006F FF8F FFE6     	movff	plusw1,postinc1
  8265  019F90  0E00               	movlw	0
  8266  019F92  6EE6               	movwf	postinc1,c
  8267  019F94  EC06  F0CF         	call	_StartTimer	;wreg free
  8268                           
  8269                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8270  019F98  D005               	goto	l9073
  8271  019F9A                     l1573:
  8272                           
  8273                           ;timers.c: 36:   __nop();
  8274  019F9A  F000               	nop	
  8275                           
  8276                           ;timers.c: 37:   __nop();
  8277  019F9C  F000               	nop	
  8278                           
  8279                           ;timers.c: 38:   __nop();
  8280  019F9E  F000               	nop	
  8281                           
  8282                           ;timers.c: 39:   __nop();
  8283  019FA0  F000               	nop	
  8284  019FA2  0004               	clrwdt		;# 
  8285  019FA4                     l9073:
  8286                           
  8287                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8288  019FA4  0E00               	movlw	0
  8289  019FA6  6EE6               	movwf	postinc1,c
  8290  019FA8  EC65  F0D1         	call	_TimerDone	;wreg free
  8291  019FAC  5001               	movf	btemp^0,w,c
  8292  019FAE  B4D8               	btfsc	status,2,c
  8293  019FB0  D7F4               	goto	l1573
  8294                           
  8295                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8296  019FB2  52E5               	movf	postdec1,f,c
  8297  019FB4  52E5               	movf	postdec1,f,c
  8298  019FB6  0012               	return		;funcret
  8299  019FB8                     __end_of_WaitMs:
  8300                           	opt callstack 0
  8301                           
  8302 ;; *************** function _update_lcd *****************
  8303 ;; Defined at:
  8304 ;;		line 85 in file "mconfig.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;  vterm           1  [STACK] unsigned char 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;		None
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1  [STACK] unsigned char 
  8311 ;; Registers used:
  8312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8322 ;;Total ram usage:        0 bytes
  8323 ;; Hardware stack levels used:    1
  8324 ;; Hardware stack levels required when called:   26
  8325 ;; This function calls:
  8326 ;;		_eaDogM_WriteStringAtPos
  8327 ;;		_wait_lcd_done
  8328 ;; This function is called by:
  8329 ;;		_main
  8330 ;;		_check_help
  8331 ;; This function uses a reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text31
  8335  01858E                     __ptext31:
  8336                           	opt callstack 0
  8337  01858E                     _update_lcd:
  8338                           	opt callstack 4
  8339                           
  8340                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8341                           ;stkvar	_vterm @ sp[(0)+-1]
  8342                           
  8343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8344                           ;incstack = 0
  8345  01858E  0EFF               	movlw	-1
  8346  018590  006F FF8C  F001    	movff	plusw1,btemp
  8347  018596  0E03               	movlw	3
  8348  018598  1601               	andwf	btemp^0,f,c
  8349  01859A  0EFF               	movlw	-1
  8350  01859C  0060  F007  FFE3   	movff	btemp,plusw1
  8351                           
  8352                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8353  0185A2  EE22  F11F         	lfsr	2,_D+288
  8354  0185A6  A0DF               	btfss	indf2,0,c
  8355  0185A8  D004               	goto	l11775
  8356                           
  8357                           ;stkvar	_vterm @ sp[(0)+-1]
  8358  0185AA  0EFF               	movlw	-1
  8359  0185AC  50E3               	movf	plusw1,w,c
  8360  0185AE  B4D8               	btfsc	status,2,c
  8361  0185B0  D074               	goto	l1649
  8362  0185B2                     l11775:
  8363                           
  8364                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8365                           ;stkvar	_vterm @ sp[(0)+-1]
  8366  0185B2  0EFF               	movlw	-1
  8367  0185B4  50E3               	movf	plusw1,w,c
  8368  0185B6  0D48               	mullw	72
  8369  0185B8  0E0F               	movlw	low (_D+16)
  8370  0185BA  24F3               	addwf	243,w,c
  8371  0185BC  6ED9               	movwf	fsr2l,c
  8372  0185BE  0E08               	movlw	high (_D+16)
  8373  0185C0  20F4               	addwfc	prodh,w,c
  8374  0185C2  6EDA               	movwf	fsr2h,c
  8375  0185C4  0E00               	movlw	0
  8376  0185C6  6EDF               	movwf	indf2,c
  8377                           
  8378                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8379                           ;stkvar	_vterm @ sp[(0)+-1]
  8380  0185C8  0EFF               	movlw	-1
  8381  0185CA  50E3               	movf	plusw1,w,c
  8382  0185CC  0D48               	mullw	72
  8383  0185CE  0E27               	movlw	low (_D+40)
  8384  0185D0  24F3               	addwf	243,w,c
  8385  0185D2  6ED9               	movwf	fsr2l,c
  8386  0185D4  0E08               	movlw	high (_D+40)
  8387  0185D6  20F4               	addwfc	prodh,w,c
  8388  0185D8  6EDA               	movwf	fsr2h,c
  8389  0185DA  0E00               	movlw	0
  8390  0185DC  6EDF               	movwf	indf2,c
  8391                           
  8392                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8393                           ;stkvar	_vterm @ sp[(0)+-1]
  8394  0185DE  0EFF               	movlw	-1
  8395  0185E0  50E3               	movf	plusw1,w,c
  8396  0185E2  0D48               	mullw	72
  8397  0185E4  0E3F               	movlw	low (_D+64)
  8398  0185E6  24F3               	addwf	243,w,c
  8399  0185E8  6ED9               	movwf	fsr2l,c
  8400  0185EA  0E08               	movlw	high (_D+64)
  8401  0185EC  20F4               	addwfc	prodh,w,c
  8402  0185EE  6EDA               	movwf	fsr2h,c
  8403  0185F0  0E00               	movlw	0
  8404  0185F2  6EDF               	movwf	indf2,c
  8405                           
  8406                           ;mconfig.c: 95:  wait_lcd_done();
  8407  0185F4  EC78  F0D3         	call	_wait_lcd_done	;wreg free
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8411                           ;stkvar	_vterm @ sp[(0)+-1]
  8412  0185F8  0EFF               	movlw	-1
  8413  0185FA  50E3               	movf	plusw1,w,c
  8414  0185FC  0D48               	mullw	72
  8415  0185FE  0EFF               	movlw	low _D
  8416  018600  6E0B               	movwf	(btemp+10)^0,c
  8417  018602  0E07               	movlw	high _D
  8418  018604  6E0C               	movwf	(btemp+11)^0,c
  8419  018606  50F3               	movf	243,w,c
  8420  018608  260B               	addwf	(btemp+10)^0,f,c
  8421  01860A  50F4               	movf	244,w,c
  8422  01860C  220C               	addwfc	(btemp+11)^0,f,c
  8423  01860E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8424  018614  0060  F033  FFE6   	movff	btemp+11,postinc1
  8425  01861A  0E00               	movlw	0
  8426  01861C  6EE6               	movwf	postinc1,c
  8427  01861E  0E00               	movlw	0
  8428  018620  6EE6               	movwf	postinc1,c
  8429  018622  ECDC  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  8430                           
  8431                           ; BSR set to: 59
  8432                           ;mconfig.c: 97:  wait_lcd_done();
  8433  018626  EC78  F0D3         	call	_wait_lcd_done	;wreg free
  8434                           
  8435                           ; BSR set to: 0
  8436                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8437                           ;stkvar	_vterm @ sp[(0)+-1]
  8438  01862A  0EFF               	movlw	-1
  8439  01862C  50E3               	movf	plusw1,w,c
  8440  01862E  0D48               	mullw	72
  8441  018630  0EFF               	movlw	low _D
  8442  018632  6E0B               	movwf	(btemp+10)^0,c
  8443  018634  0E07               	movlw	high _D
  8444  018636  6E0C               	movwf	(btemp+11)^0,c
  8445  018638  0E18               	movlw	24
  8446  01863A  260B               	addwf	(btemp+10)^0,f,c
  8447  01863C  0E00               	movlw	0
  8448  01863E  220C               	addwfc	(btemp+11)^0,f,c
  8449  018640  50F3               	movf	243,w,c
  8450  018642  260B               	addwf	(btemp+10)^0,f,c
  8451  018644  50F4               	movf	244,w,c
  8452  018646  220C               	addwfc	(btemp+11)^0,f,c
  8453  018648  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8454  01864E  0060  F033  FFE6   	movff	btemp+11,postinc1
  8455  018654  0E00               	movlw	0
  8456  018656  6EE6               	movwf	postinc1,c
  8457  018658  0E01               	movlw	1
  8458  01865A  6EE6               	movwf	postinc1,c
  8459  01865C  ECDC  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  8460                           
  8461                           ; BSR set to: 59
  8462                           ;mconfig.c: 99:  wait_lcd_done();
  8463  018660  EC78  F0D3         	call	_wait_lcd_done	;wreg free
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8467                           ;stkvar	_vterm @ sp[(0)+-1]
  8468  018664  0EFF               	movlw	-1
  8469  018666  50E3               	movf	plusw1,w,c
  8470  018668  0D48               	mullw	72
  8471  01866A  0EFF               	movlw	low _D
  8472  01866C  6E0B               	movwf	(btemp+10)^0,c
  8473  01866E  0E07               	movlw	high _D
  8474  018670  6E0C               	movwf	(btemp+11)^0,c
  8475  018672  0E30               	movlw	48
  8476  018674  260B               	addwf	(btemp+10)^0,f,c
  8477  018676  0E00               	movlw	0
  8478  018678  220C               	addwfc	(btemp+11)^0,f,c
  8479  01867A  50F3               	movf	243,w,c
  8480  01867C  260B               	addwf	(btemp+10)^0,f,c
  8481  01867E  50F4               	movf	244,w,c
  8482  018680  220C               	addwfc	(btemp+11)^0,f,c
  8483  018682  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8484  018688  0060  F033  FFE6   	movff	btemp+11,postinc1
  8485  01868E  0E00               	movlw	0
  8486  018690  6EE6               	movwf	postinc1,c
  8487  018692  0E02               	movlw	2
  8488  018694  6EE6               	movwf	postinc1,c
  8489  018696  ECDC  F0CF         	call	_eaDogM_WriteStringAtPos	;wreg free
  8490  01869A                     l1649:
  8491                           
  8492                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8493  01869A  52E5               	movf	postdec1,f,c
  8494  01869C  0012               	return		;funcret
  8495  01869E                     __end_of_update_lcd:
  8496                           	opt callstack 0
  8497                           
  8498 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8499 ;; Defined at:
  8500 ;;		line 278 in file "eadog.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  r               1  [STACK] const unsigned char 
  8503 ;;  c               1  [STACK] const unsigned char 
  8504 ;;  strPtr          2  [STACK] PTR unsigned char 
  8505 ;;		 -> D.lcd(288), D(290), V(188), 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;		None
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  1  [STACK] void 
  8510 ;; Registers used:
  8511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8512 ;; Tracked objects:
  8513 ;;		On entry : 3F/0
  8514 ;;		On exit  : 3F/3B
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8521 ;;Total ram usage:        0 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; Hardware stack levels required when called:   25
  8524 ;; This function calls:
  8525 ;;		_eaDogM_WriteString
  8526 ;;		_send_lcd_cmd_dma
  8527 ;; This function is called by:
  8528 ;;		_update_lcd
  8529 ;;		_vterm_dump
  8530 ;; This function uses a reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text32
  8534  019FB8                     __ptext32:
  8535                           	opt callstack 0
  8536  019FB8                     _eaDogM_WriteStringAtPos:
  8537                           	opt callstack 4
  8538                           
  8539                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8540                           ;stkvar	_c @ sp[(0)+-2]
  8541                           
  8542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8543                           ;incstack = 0
  8544  019FB8  0EFE               	movlw	-2
  8545  019FBA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8546                           
  8547                           ;stkvar	_r @ sp[(0)+-1]
  8548  019FC0  0EFF               	movlw	-1
  8549  019FC2  50E3               	movf	plusw1,w,c
  8550  019FC4  0D10               	mullw	16
  8551  019FC6  50F3               	movf	243,w,c
  8552  019FC8  240C               	addwf	(btemp+11)^0,w,c
  8553  019FCA  0F80               	addlw	128
  8554  019FCC  6EE6               	movwf	postinc1,c
  8555  019FCE  EC29  F0CD         	call	_send_lcd_cmd_dma	;wreg free
  8556                           
  8557                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  8558                           ;stkvar	_strPtr @ sp[(0)+-4]
  8559  019FD2  0EFC               	movlw	-4
  8560  019FD4  006F FF8F FFE6     	movff	plusw1,postinc1
  8561  019FDA  006F FF8F FFE6     	movff	plusw1,postinc1
  8562  019FE0  ECEF  F0C7         	call	_eaDogM_WriteString	;wreg free
  8563                           
  8564                           ; BSR set to: 59
  8565                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8566  019FE4  52E5               	movf	postdec1,f,c
  8567  019FE6  52E5               	movf	postdec1,f,c
  8568  019FE8  52E5               	movf	postdec1,f,c
  8569  019FEA  52E5               	movf	postdec1,f,c
  8570  019FEC  0012               	return		;funcret
  8571  019FEE                     __end_of_eaDogM_WriteStringAtPos:
  8572                           	opt callstack 0
  8573                           
  8574 ;; *************** function _send_lcd_cmd_dma *****************
  8575 ;; Defined at:
  8576 ;;		line 220 in file "eadog.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  strPtr          1  [STACK] unsigned char 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1  [STACK] void 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/3D
  8587 ;;		On exit  : 3F/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:   24
  8597 ;; This function calls:
  8598 ;;		_printf
  8599 ;;		_ringBufS_flush
  8600 ;;		_start_lcd
  8601 ;;		_wait_lcd_done
  8602 ;;		_wait_lcd_set
  8603 ;; This function is called by:
  8604 ;;		_eaDogM_WriteCommand
  8605 ;;		_eaDogM_WriteStringAtPos
  8606 ;; This function uses a reentrant model
  8607 ;;
  8608                           
  8609                           	psect	text33
  8610  019A52                     __ptext33:
  8611                           	opt callstack 0
  8612  019A52                     _send_lcd_cmd_dma:
  8613                           	opt callstack 4
  8614                           
  8615                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8616                           
  8617                           ; BSR set to: 59
  8618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8619                           ;incstack = 0
  8620  019A52  EC46  F0D4         	call	_wait_lcd_set	;wreg free
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  8624  019A56  0E00               	movlw	0
  8625  019A58  6EE6               	movwf	postinc1,c
  8626  019A5A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8627  019A60  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8628  019A66  EC2A  F0C9         	call	_ringBufS_flush	;wreg free
  8629  019A6A  92BC               	bcf	188,1,c	;volatile
  8630  019A6C  94BC               	bcf	188,2,c	;volatile
  8631                           
  8632                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  8633  019A6E  013B               	movlb	59	; () banked
  8634  019A70  9FFC               	bcf	252,7,b	;volatile
  8635                           
  8636                           ; BSR set to: 59
  8637                           ;eadog.c: 229:  DMA1SSZ = 1;
  8638  019A72  0E00               	movlw	0
  8639  019A74  6FF8               	movwf	248,b	;volatile
  8640  019A76  0E01               	movlw	1
  8641  019A78  6FF7               	movwf	247,b	;volatile
  8642                           
  8643                           ; BSR set to: 59
  8644                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  8645  019A7A  8FFC               	bsf	252,7,b	;volatile
  8646                           
  8647                           ; BSR set to: 59
  8648                           ;eadog.c: 231:  printf("%c", strPtr);
  8649                           ;stkvar	_strPtr @ sp[(0)+-1]
  8650  019A7C  0EFF               	movlw	-1
  8651  019A7E  50E3               	movf	plusw1,w,c
  8652  019A80  6EE6               	movwf	postinc1,c
  8653  019A82  0E00               	movlw	0
  8654  019A84  6EE6               	movwf	postinc1,c
  8655  019A86  0EF9               	movlw	low STR_25
  8656  019A88  6EE6               	movwf	postinc1,c
  8657  019A8A  0EFF               	movlw	high STR_25
  8658  019A8C  6EE6               	movwf	postinc1,c
  8659  019A8E  0E04               	movlw	4
  8660  019A90  6EE6               	movwf	postinc1,c
  8661  019A92  EC41  F0CC         	call	_printf	;wreg free
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;eadog.c: 232:  start_lcd();
  8665  019A96  EC49  F0D4         	call	_start_lcd	;wreg free
  8666                           
  8667                           ; BSR set to: 59
  8668                           ;eadog.c: 233:  wait_lcd_done();
  8669  019A9A  EC78  F0D3         	call	_wait_lcd_done	;wreg free
  8670                           
  8671                           ; BSR set to: 0
  8672  019A9E  82BC               	bsf	188,1,c	;volatile
  8673                           
  8674                           ; BSR set to: 0
  8675                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8676  019AA0  52E5               	movf	postdec1,f,c
  8677  019AA2  0012               	return		;funcret
  8678  019AA4                     __end_of_send_lcd_cmd_dma:
  8679                           	opt callstack 0
  8680                           
  8681 ;; *************** function _wait_lcd_done *****************
  8682 ;; Defined at:
  8683 ;;		line 156 in file "eadog.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;		None
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;		None
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1  [STACK] void 
  8690 ;; Registers used:
  8691 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 3F/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8701 ;;Total ram usage:        0 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:   16
  8704 ;; This function calls:
  8705 ;;		_wdtdelay
  8706 ;; This function is called by:
  8707 ;;		_send_lcd_cmd_dma
  8708 ;;		_update_lcd
  8709 ;;		_vterm_dump
  8710 ;; This function uses a reentrant model
  8711 ;;
  8712                           
  8713                           	psect	text34
  8714  01A6F0                     __ptext34:
  8715                           	opt callstack 0
  8716  01A6F0                     _wait_lcd_done:
  8717                           	opt callstack 13
  8718                           
  8719                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  8720                           
  8721                           ; BSR set to: 0
  8722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8723                           ;incstack = 0
  8724  01A6F0  0100               	movlb	0	; () banked
  8725  01A6F2  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  8726  01A6F4  D7FD               	goto	_wait_lcd_done
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;eadog.c: 159:  wdtdelay(50);
  8730  01A6F6  0E32               	movlw	50
  8731  01A6F8  6EE6               	movwf	postinc1,c
  8732  01A6FA  0E00               	movlw	0
  8733  01A6FC  6EE6               	movwf	postinc1,c
  8734  01A6FE  0E00               	movlw	0
  8735  01A700  6EE6               	movwf	postinc1,c
  8736  01A702  0E00               	movlw	0
  8737  01A704  6EE6               	movwf	postinc1,c
  8738  01A706  ECA1  F0CC         	call	_wdtdelay	;wreg free
  8739                           
  8740                           ; BSR set to: 0
  8741                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8742  01A70A  0012               	return		;funcret
  8743  01A70C                     __end_of_wait_lcd_done:
  8744                           	opt callstack 0
  8745                           
  8746 ;; *************** function _wdtdelay *****************
  8747 ;; Defined at:
  8748 ;;		line 23 in file "eadog.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;  delay           4  [STACK] const unsigned long 
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;		None
  8753 ;; Return value:  Size  Location     Type
  8754 ;;                  1  [STACK] void 
  8755 ;; Registers used:
  8756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 3F/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8766 ;;Total ram usage:        0 bytes
  8767 ;; Hardware stack levels used:    1
  8768 ;; Hardware stack levels required when called:   15
  8769 ;; This function calls:
  8770 ;;		Nothing
  8771 ;; This function is called by:
  8772 ;;		_init_display
  8773 ;;		_send_lcd_cmd
  8774 ;;		_send_lcd_cmd_long
  8775 ;;		_wait_lcd_done
  8776 ;; This function uses a reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text35
  8780  019942                     __ptext35:
  8781                           	opt callstack 0
  8782  019942                     _wdtdelay:
  8783                           	opt callstack 13
  8784                           
  8785                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  8786                           
  8787                           ; BSR set to: 0
  8788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8789                           ;incstack = 0
  8790  019942  0100               	movlb	0	; () banked
  8791  019944  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  8792  019946  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8793  019948  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8794  01994A  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8795  01994C                     l1414:
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;eadog.c: 28:   __nop();
  8799  01994C  F000               	nop	
  8800  01994E  0004               	clrwdt		;# 
  8801                           
  8802                           ;eadog.c: 30:  };
  8803  019950  0E01               	movlw	1
  8804  019952  0100               	movlb	0	; () banked
  8805  019954  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  8806  019956  0E00               	movlw	0
  8807  019958  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8808  01995A  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8809  01995C  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;stkvar	_delay @ sp[(0)+-4]
  8813  01995E  0EFC               	movlw	-4
  8814  019960  006F FF8C  F001    	movff	plusw1,btemp
  8815  019966  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  8816  019968  5C01               	subwf	btemp^0,w,c
  8817  01996A  0EFD               	movlw	-3
  8818  01996C  006F FF8C  F001    	movff	plusw1,btemp
  8819  019972  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8820  019974  5801               	subwfb	btemp^0,w,c
  8821  019976  0EFE               	movlw	-2
  8822  019978  006F FF8C  F001    	movff	plusw1,btemp
  8823  01997E  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8824  019980  5801               	subwfb	btemp^0,w,c
  8825  019982  0EFF               	movlw	-1
  8826  019984  006F FF8C  F001    	movff	plusw1,btemp
  8827  01998A  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8828  01998C  5801               	subwfb	btemp^0,w,c
  8829  01998E  B0D8               	btfsc	status,0,c
  8830  019990  D7DD               	goto	l1414
  8831                           
  8832                           ; BSR set to: 0
  8833                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8834  019992  52E5               	movf	postdec1,f,c
  8835  019994  52E5               	movf	postdec1,f,c
  8836  019996  52E5               	movf	postdec1,f,c
  8837  019998  52E5               	movf	postdec1,f,c
  8838  01999A  0012               	return		;funcret
  8839  01999C                     __end_of_wdtdelay:
  8840                           	opt callstack 0
  8841                           
  8842 ;; *************** function _eaDogM_WriteString *****************
  8843 ;; Defined at:
  8844 ;;		line 199 in file "eadog.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;  strPtr          2  [STACK] PTR unsigned char 
  8847 ;;		 -> D.lcd(288), D(290), V(188), 
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1  [STACK] void 
  8852 ;; Registers used:
  8853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8854 ;; Tracked objects:
  8855 ;;		On entry : 3F/0
  8856 ;;		On exit  : 3F/3B
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8863 ;;Total ram usage:        0 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; Hardware stack levels required when called:   24
  8866 ;; This function calls:
  8867 ;;		_printf
  8868 ;;		_ringBufS_flush
  8869 ;;		_start_lcd
  8870 ;;		_strlen
  8871 ;;		_wait_lcd_set
  8872 ;; This function is called by:
  8873 ;;		_eaDogM_WriteStringAtPos
  8874 ;; This function uses a reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text36
  8878  018FDE                     __ptext36:
  8879                           	opt callstack 0
  8880  018FDE                     _eaDogM_WriteString:
  8881                           	opt callstack 4
  8882                           
  8883                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  8884                           
  8885                           ; BSR set to: 0
  8886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8887                           ;incstack = 0
  8888  018FDE  EC46  F0D4         	call	_wait_lcd_set	;wreg free
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  8892  018FE2  0E00               	movlw	0
  8893  018FE4  6EE6               	movwf	postinc1,c
  8894  018FE6  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8895  018FEC  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8896  018FF2  EC2A  F0C9         	call	_ringBufS_flush	;wreg free
  8897  018FF6  94BC               	bcf	188,2,c	;volatile
  8898                           
  8899                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8900                           ;stkvar	_strPtr @ sp[(0)+-2]
  8901  018FF8  0EFE               	movlw	-2
  8902  018FFA  006F FF8F FFE6     	movff	plusw1,postinc1
  8903  019000  006F FF8F FFE6     	movff	plusw1,postinc1
  8904  019006  EC42  F0C8         	call	_strlen	;wreg free
  8905  01900A  5002               	movf	(btemp+1)^0,w,c
  8906  01900C  E104               	bnz	u11420
  8907  01900E  0E41               	movlw	65
  8908  019010  5C01               	subwf	btemp^0,w,c
  8909  019012  A0D8               	btfss	status,0,c
  8910  019014  D010               	goto	l11635
  8911  019016                     u11420:
  8912                           
  8913                           ;stkvar	_strPtr @ sp[(0)+-2]
  8914  019016  0EFE               	movlw	-2
  8915  019018  006F FF8C  F00B    	movff	plusw1,btemp+10
  8916  01901E  0EFF               	movlw	-1
  8917  019020  006F FF8C  F00C    	movff	plusw1,btemp+11
  8918  019026  0E40               	movlw	64
  8919  019028  240B               	addwf	(btemp+10)^0,w,c
  8920  01902A  6ED9               	movwf	fsr2l,c
  8921  01902C  0E00               	movlw	0
  8922  01902E  200C               	addwfc	(btemp+11)^0,w,c
  8923  019030  6EDA               	movwf	fsr2h,c
  8924  019032  0E00               	movlw	0
  8925  019034  6EDF               	movwf	indf2,c
  8926  019036                     l11635:
  8927                           
  8928                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  8929  019036  013B               	movlb	59	; () banked
  8930  019038  9FFC               	bcf	252,7,b	;volatile
  8931                           
  8932                           ; BSR set to: 59
  8933                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  8934                           ;stkvar	_strPtr @ sp[(0)+-2]
  8935  01903A  0EFE               	movlw	-2
  8936  01903C  006F FF8F FFE6     	movff	plusw1,postinc1
  8937  019042  006F FF8F FFE6     	movff	plusw1,postinc1
  8938  019048  EC42  F0C8         	call	_strlen	;wreg free
  8939  01904C  0060  F007  FBF7   	movff	btemp,15351	;volatile
  8940  019052  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  8941                           
  8942                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  8943  019058  013B               	movlb	59	; () banked
  8944  01905A  8FFC               	bsf	252,7,b	;volatile
  8945                           
  8946                           ; BSR set to: 59
  8947                           ;eadog.c: 210:  printf("%s", strPtr);
  8948                           ;stkvar	_strPtr @ sp[(0)+-2]
  8949  01905C  0EFE               	movlw	-2
  8950  01905E  006F FF8F FFE6     	movff	plusw1,postinc1
  8951  019064  006F FF8F FFE6     	movff	plusw1,postinc1
  8952  01906A  0EFC               	movlw	low STR_24
  8953  01906C  6EE6               	movwf	postinc1,c
  8954  01906E  0EFF               	movlw	high STR_24
  8955  019070  6EE6               	movwf	postinc1,c
  8956  019072  0E04               	movlw	4
  8957  019074  6EE6               	movwf	postinc1,c
  8958  019076  EC41  F0CC         	call	_printf	;wreg free
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;eadog.c: 211:  start_lcd();
  8962  01907A  EC49  F0D4         	call	_start_lcd	;wreg free
  8963                           
  8964                           ; BSR set to: 59
  8965                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8966  01907E  52E5               	movf	postdec1,f,c
  8967  019080  52E5               	movf	postdec1,f,c
  8968  019082  0012               	return		;funcret
  8969  019084                     __end_of_eaDogM_WriteString:
  8970                           	opt callstack 0
  8971                           
  8972 ;; *************** function _wait_lcd_set *****************
  8973 ;; Defined at:
  8974 ;;		line 146 in file "eadog.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;		None
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1  [STACK] void 
  8981 ;; Registers used:
  8982 ;;		None
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/3D
  8985 ;;		On exit  : 3F/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8992 ;;Total ram usage:        0 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:   15
  8995 ;; This function calls:
  8996 ;;		Nothing
  8997 ;; This function is called by:
  8998 ;;		_eaDogM_WriteString
  8999 ;;		_send_lcd_cmd_dma
  9000 ;; This function uses a reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text37
  9004  01A88C                     __ptext37:
  9005                           	opt callstack 0
  9006  01A88C                     _wait_lcd_set:
  9007                           	opt callstack 12
  9008                           
  9009                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  9010                           
  9011                           ; BSR set to: 59
  9012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9013                           ;incstack = 0
  9014  01A88C  0100               	movlb	0	; () banked
  9015  01A88E  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  9016                           
  9017                           ; BSR set to: 0
  9018                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9019  01A890  0012               	return		;funcret
  9020  01A892                     __end_of_wait_lcd_set:
  9021                           	opt callstack 0
  9022                           
  9023 ;; *************** function _start_lcd *****************
  9024 ;; Defined at:
  9025 ;;		line 141 in file "eadog.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1  [STACK] void 
  9032 ;; Registers used:
  9033 ;;		None
  9034 ;; Tracked objects:
  9035 ;;		On entry : 3F/0
  9036 ;;		On exit  : 3F/3B
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:   15
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_eaDogM_WriteString
  9050 ;;		_send_lcd_cmd_dma
  9051 ;; This function uses a reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text38
  9055  01A892                     __ptext38:
  9056                           	opt callstack 0
  9057  01A892                     _start_lcd:
  9058                           	opt callstack 12
  9059                           
  9060                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9061                           
  9062                           ; BSR set to: 0
  9063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9064                           ;incstack = 0
  9065  01A892  013B               	movlb	59	; () banked
  9066  01A894  8DFC               	bsf	252,6,b	;volatile
  9067                           
  9068                           ; BSR set to: 59
  9069                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9070  01A896  0012               	return		;funcret
  9071  01A898                     __end_of_start_lcd:
  9072                           	opt callstack 0
  9073                           
  9074 ;; *************** function _ringBufS_flush *****************
  9075 ;; Defined at:
  9076 ;;		line 76 in file "ringbufs.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9079 ;;		 -> ring_buf1(67), 
  9080 ;;  clearBuffer     1  [STACK] const char 
  9081 ;; Auto vars:     Size  Location     Type
  9082 ;;		None
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  1  [STACK] void 
  9085 ;; Registers used:
  9086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9087 ;; Tracked objects:
  9088 ;;		On entry : 3F/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9096 ;;Total ram usage:        0 bytes
  9097 ;; Hardware stack levels used:    1
  9098 ;; Hardware stack levels required when called:   16
  9099 ;; This function calls:
  9100 ;;		_memset
  9101 ;; This function is called by:
  9102 ;;		_eaDogM_WriteString
  9103 ;;		_send_lcd_cmd_dma
  9104 ;; This function uses a reentrant model
  9105 ;;
  9106                           
  9107                           	psect	text39
  9108  019254                     __ptext39:
  9109                           	opt callstack 0
  9110  019254                     _ringBufS_flush:
  9111                           	opt callstack 11
  9112                           
  9113                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9114                           ;stkvar	__this @ sp[(0)+-2]
  9115                           
  9116                           ; BSR set to: 59
  9117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9118                           ;incstack = 0
  9119  019254  0EFE               	movlw	-2
  9120  019256  006F FF8C  F00B    	movff	plusw1,btemp+10
  9121  01925C  0EFF               	movlw	-1
  9122  01925E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9123  019264  0E42               	movlw	66
  9124  019266  240B               	addwf	(btemp+10)^0,w,c
  9125  019268  6ED9               	movwf	fsr2l,c
  9126  01926A  0E00               	movlw	0
  9127  01926C  200C               	addwfc	(btemp+11)^0,w,c
  9128  01926E  6EDA               	movwf	fsr2h,c
  9129  019270  0E00               	movlw	0
  9130  019272  6EDF               	movwf	indf2,c
  9131                           
  9132                           ;ringbufs.c: 79:  _this->head = 0;
  9133                           ;stkvar	__this @ sp[(0)+-2]
  9134  019274  0EFE               	movlw	-2
  9135  019276  006F FF8C  F00B    	movff	plusw1,btemp+10
  9136  01927C  0EFF               	movlw	-1
  9137  01927E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9138  019284  0E40               	movlw	64
  9139  019286  240B               	addwf	(btemp+10)^0,w,c
  9140  019288  6ED9               	movwf	fsr2l,c
  9141  01928A  0E00               	movlw	0
  9142  01928C  200C               	addwfc	(btemp+11)^0,w,c
  9143  01928E  6EDA               	movwf	fsr2h,c
  9144  019290  0E00               	movlw	0
  9145  019292  6EDF               	movwf	indf2,c
  9146                           
  9147                           ;ringbufs.c: 80:  _this->tail = 0;
  9148                           ;stkvar	__this @ sp[(0)+-2]
  9149  019294  0EFE               	movlw	-2
  9150  019296  006F FF8C  F00B    	movff	plusw1,btemp+10
  9151  01929C  0EFF               	movlw	-1
  9152  01929E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9153  0192A4  0E41               	movlw	65
  9154  0192A6  240B               	addwf	(btemp+10)^0,w,c
  9155  0192A8  6ED9               	movwf	fsr2l,c
  9156  0192AA  0E00               	movlw	0
  9157  0192AC  200C               	addwfc	(btemp+11)^0,w,c
  9158  0192AE  6EDA               	movwf	fsr2h,c
  9159  0192B0  0E00               	movlw	0
  9160  0192B2  6EDF               	movwf	indf2,c
  9161                           
  9162                           ;ringbufs.c: 81:  if (clearBuffer) {
  9163                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9164  0192B4  0EFD               	movlw	-3
  9165  0192B6  50E3               	movf	plusw1,w,c
  9166  0192B8  B4D8               	btfsc	status,2,c
  9167  0192BA  D011               	goto	l1558
  9168                           
  9169                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9170  0192BC  0E40               	movlw	64
  9171  0192BE  6EE6               	movwf	postinc1,c
  9172  0192C0  0E00               	movlw	0
  9173  0192C2  6EE6               	movwf	postinc1,c
  9174  0192C4  0E00               	movlw	0
  9175  0192C6  6EE6               	movwf	postinc1,c
  9176  0192C8  0E00               	movlw	0
  9177  0192CA  6EE6               	movwf	postinc1,c
  9178                           
  9179                           ;stkvar	__this @ sp[(-4)+-2]
  9180  0192CC  0EFA               	movlw	-6
  9181  0192CE  006F FF8F FFE6     	movff	plusw1,postinc1
  9182  0192D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9183  0192DA  EC7A  F0AD         	call	_memset	;wreg free
  9184  0192DE                     l1558:
  9185                           
  9186                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9187  0192DE  52E5               	movf	postdec1,f,c
  9188  0192E0  52E5               	movf	postdec1,f,c
  9189  0192E2  52E5               	movf	postdec1,f,c
  9190  0192E4  0012               	return		;funcret
  9191  0192E6                     __end_of_ringBufS_flush:
  9192                           	opt callstack 0
  9193                           
  9194 ;; *************** function _memset *****************
  9195 ;; Defined at:
  9196 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;  dest            2  [STACK] PTR void 
  9199 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9200 ;;  c               2  [STACK] int 
  9201 ;;  n               2  [STACK] unsigned int 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;  s               2  [STACK] PTR unsigned char 
  9204 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9205 ;;  k               2  [STACK] unsigned int 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  2  [STACK] PTR void 
  9208 ;; Registers used:
  9209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9219 ;;Total ram usage:        0 bytes
  9220 ;; Hardware stack levels used:    1
  9221 ;; Hardware stack levels required when called:   15
  9222 ;; This function calls:
  9223 ;;		Nothing
  9224 ;; This function is called by:
  9225 ;;		_ringBufS_init
  9226 ;;		_ringBufS_flush
  9227 ;; This function uses a reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text40
  9231  015AF4                     __ptext40:
  9232                           	opt callstack 0
  9233  015AF4                     _memset:
  9234                           	opt callstack 0
  9235                           
  9236                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9237  015AF4  52E6               	movf	postinc1,f,c
  9238  015AF6  52E6               	movf	postinc1,f,c
  9239  015AF8  52E6               	movf	postinc1,f,c
  9240  015AFA  52E6               	movf	postinc1,f,c
  9241                           
  9242                           ;stkvar	_dest @ sp[(-4)+-2]
  9243                           
  9244                           ;incstack = 0
  9245  015AFC  0EFA               	movlw	-6
  9246  015AFE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9247  015B04  0EFB               	movlw	-5
  9248  015B06  006F FF8C  F00C    	movff	plusw1,btemp+11
  9249                           
  9250                           ;stkvar	_s @ sp[(-4)+0]
  9251  015B0C  0EFD               	movlw	-3
  9252  015B0E  0060  F033  FFE3   	movff	btemp+11,plusw1
  9253  015B14  0EFC               	movlw	-4
  9254  015B16  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9255                           
  9256                           ;stkvar	_n @ sp[(-4)+-6]
  9257  015B1C  0EF6               	movlw	-10
  9258  015B1E  006F FF8C  F001    	movff	plusw1,btemp
  9259  015B24  0EF7               	movlw	-9
  9260  015B26  50E3               	movf	plusw1,w,c
  9261  015B28  1001               	iorwf	btemp^0,w,c
  9262  015B2A  B4D8               	btfsc	status,2,c
  9263  015B2C  D154               	goto	u10020
  9264                           
  9265                           ;stkvar	_c @ sp[(-4)+-4]
  9266                           ;stkvar	_s @ sp[(-4)+0]
  9267  015B2E  0EFC               	movlw	-4
  9268  015B30  006F FF8F FFD9     	movff	plusw1,fsr2l
  9269  015B36  0EFD               	movlw	-3
  9270  015B38  006F FF8F FFDA     	movff	plusw1,fsr2h
  9271  015B3E  0EF8               	movlw	-8
  9272  015B40  006F FF8F FFDF     	movff	plusw1,indf2
  9273                           
  9274                           ;stkvar	_c @ sp[(-4)+-4]
  9275                           ;stkvar	_n @ sp[(-4)+-6]
  9276                           ;stkvar	_s @ sp[(-4)+0]
  9277  015B46  0EFC               	movlw	-4
  9278  015B48  006F FF8C  F00B    	movff	plusw1,btemp+10
  9279  015B4E  0EFD               	movlw	-3
  9280  015B50  006F FF8C  F00C    	movff	plusw1,btemp+11
  9281  015B56  0EF6               	movlw	-10
  9282  015B58  50E3               	movf	plusw1,w,c
  9283  015B5A  260B               	addwf	(btemp+10)^0,f,c
  9284  015B5C  0EF7               	movlw	-9
  9285  015B5E  50E3               	movf	plusw1,w,c
  9286  015B60  220C               	addwfc	(btemp+11)^0,f,c
  9287  015B62  0EFF               	movlw	255
  9288  015B64  240B               	addwf	(btemp+10)^0,w,c
  9289  015B66  6ED9               	movwf	fsr2l,c
  9290  015B68  0EFF               	movlw	255
  9291  015B6A  200C               	addwfc	(btemp+11)^0,w,c
  9292  015B6C  6EDA               	movwf	fsr2h,c
  9293  015B6E  0EF8               	movlw	-8
  9294  015B70  006F FF8F FFDF     	movff	plusw1,indf2
  9295                           
  9296                           ;stkvar	_n @ sp[(-4)+-6]
  9297  015B76  0EF7               	movlw	-9
  9298  015B78  50E3               	movf	plusw1,w,c
  9299  015B7A  E108               	bnz	l10803
  9300  015B7C  0EF6               	movlw	-10
  9301  015B7E  006F FF8C  F001    	movff	plusw1,btemp
  9302  015B84  0E03               	movlw	3
  9303  015B86  5E01               	subwf	btemp^0,f,c
  9304  015B88  A0D8               	btfss	status,0,c
  9305  015B8A  D125               	goto	u10020
  9306  015B8C                     l10803:
  9307                           
  9308                           ;stkvar	_c @ sp[(-4)+-4]
  9309                           ;stkvar	_s @ sp[(-4)+0]
  9310  015B8C  0EFC               	movlw	-4
  9311  015B8E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9312  015B94  0EFD               	movlw	-3
  9313  015B96  006F FF8C  F00C    	movff	plusw1,btemp+11
  9314  015B9C  0E01               	movlw	1
  9315  015B9E  240B               	addwf	(btemp+10)^0,w,c
  9316  015BA0  6ED9               	movwf	fsr2l,c
  9317  015BA2  0E00               	movlw	0
  9318  015BA4  200C               	addwfc	(btemp+11)^0,w,c
  9319  015BA6  6EDA               	movwf	fsr2h,c
  9320  015BA8  0EF8               	movlw	-8
  9321  015BAA  006F FF8F FFDF     	movff	plusw1,indf2
  9322                           
  9323                           ;stkvar	_c @ sp[(-4)+-4]
  9324                           ;stkvar	_s @ sp[(-4)+0]
  9325  015BB0  0EFC               	movlw	-4
  9326  015BB2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9327  015BB8  0EFD               	movlw	-3
  9328  015BBA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9329  015BC0  0E02               	movlw	2
  9330  015BC2  240B               	addwf	(btemp+10)^0,w,c
  9331  015BC4  6ED9               	movwf	fsr2l,c
  9332  015BC6  0E00               	movlw	0
  9333  015BC8  200C               	addwfc	(btemp+11)^0,w,c
  9334  015BCA  6EDA               	movwf	fsr2h,c
  9335  015BCC  0EF8               	movlw	-8
  9336  015BCE  006F FF8F FFDF     	movff	plusw1,indf2
  9337                           
  9338                           ;stkvar	_c @ sp[(-4)+-4]
  9339                           ;stkvar	_n @ sp[(-4)+-6]
  9340                           ;stkvar	_s @ sp[(-4)+0]
  9341  015BD4  0EFC               	movlw	-4
  9342  015BD6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9343  015BDC  0EFD               	movlw	-3
  9344  015BDE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9345  015BE4  0EF6               	movlw	-10
  9346  015BE6  50E3               	movf	plusw1,w,c
  9347  015BE8  260B               	addwf	(btemp+10)^0,f,c
  9348  015BEA  0EF7               	movlw	-9
  9349  015BEC  50E3               	movf	plusw1,w,c
  9350  015BEE  220C               	addwfc	(btemp+11)^0,f,c
  9351  015BF0  0EFE               	movlw	254
  9352  015BF2  240B               	addwf	(btemp+10)^0,w,c
  9353  015BF4  6ED9               	movwf	fsr2l,c
  9354  015BF6  0EFF               	movlw	255
  9355  015BF8  200C               	addwfc	(btemp+11)^0,w,c
  9356  015BFA  6EDA               	movwf	fsr2h,c
  9357  015BFC  0EF8               	movlw	-8
  9358  015BFE  006F FF8F FFDF     	movff	plusw1,indf2
  9359                           
  9360                           ;stkvar	_c @ sp[(-4)+-4]
  9361                           ;stkvar	_n @ sp[(-4)+-6]
  9362                           ;stkvar	_s @ sp[(-4)+0]
  9363  015C04  0EFC               	movlw	-4
  9364  015C06  006F FF8C  F00B    	movff	plusw1,btemp+10
  9365  015C0C  0EFD               	movlw	-3
  9366  015C0E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9367  015C14  0EF6               	movlw	-10
  9368  015C16  50E3               	movf	plusw1,w,c
  9369  015C18  260B               	addwf	(btemp+10)^0,f,c
  9370  015C1A  0EF7               	movlw	-9
  9371  015C1C  50E3               	movf	plusw1,w,c
  9372  015C1E  220C               	addwfc	(btemp+11)^0,f,c
  9373  015C20  0EFD               	movlw	253
  9374  015C22  240B               	addwf	(btemp+10)^0,w,c
  9375  015C24  6ED9               	movwf	fsr2l,c
  9376  015C26  0EFF               	movlw	255
  9377  015C28  200C               	addwfc	(btemp+11)^0,w,c
  9378  015C2A  6EDA               	movwf	fsr2h,c
  9379  015C2C  0EF8               	movlw	-8
  9380  015C2E  006F FF8F FFDF     	movff	plusw1,indf2
  9381                           
  9382                           ;stkvar	_n @ sp[(-4)+-6]
  9383  015C34  0EF7               	movlw	-9
  9384  015C36  50E3               	movf	plusw1,w,c
  9385  015C38  E108               	bnz	l10809
  9386  015C3A  0EF6               	movlw	-10
  9387  015C3C  006F FF8C  F001    	movff	plusw1,btemp
  9388  015C42  0E07               	movlw	7
  9389  015C44  5E01               	subwf	btemp^0,f,c
  9390  015C46  A0D8               	btfss	status,0,c
  9391  015C48  D0C6               	goto	u10020
  9392  015C4A                     l10809:
  9393                           
  9394                           ;stkvar	_c @ sp[(-4)+-4]
  9395                           ;stkvar	_s @ sp[(-4)+0]
  9396  015C4A  0EFC               	movlw	-4
  9397  015C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9398  015C52  0EFD               	movlw	-3
  9399  015C54  006F FF8C  F00C    	movff	plusw1,btemp+11
  9400  015C5A  0E03               	movlw	3
  9401  015C5C  240B               	addwf	(btemp+10)^0,w,c
  9402  015C5E  6ED9               	movwf	fsr2l,c
  9403  015C60  0E00               	movlw	0
  9404  015C62  200C               	addwfc	(btemp+11)^0,w,c
  9405  015C64  6EDA               	movwf	fsr2h,c
  9406  015C66  0EF8               	movlw	-8
  9407  015C68  006F FF8F FFDF     	movff	plusw1,indf2
  9408                           
  9409                           ;stkvar	_c @ sp[(-4)+-4]
  9410                           ;stkvar	_n @ sp[(-4)+-6]
  9411                           ;stkvar	_s @ sp[(-4)+0]
  9412  015C6E  0EFC               	movlw	-4
  9413  015C70  006F FF8C  F00B    	movff	plusw1,btemp+10
  9414  015C76  0EFD               	movlw	-3
  9415  015C78  006F FF8C  F00C    	movff	plusw1,btemp+11
  9416  015C7E  0EF6               	movlw	-10
  9417  015C80  50E3               	movf	plusw1,w,c
  9418  015C82  260B               	addwf	(btemp+10)^0,f,c
  9419  015C84  0EF7               	movlw	-9
  9420  015C86  50E3               	movf	plusw1,w,c
  9421  015C88  220C               	addwfc	(btemp+11)^0,f,c
  9422  015C8A  0EFC               	movlw	252
  9423  015C8C  240B               	addwf	(btemp+10)^0,w,c
  9424  015C8E  6ED9               	movwf	fsr2l,c
  9425  015C90  0EFF               	movlw	255
  9426  015C92  200C               	addwfc	(btemp+11)^0,w,c
  9427  015C94  6EDA               	movwf	fsr2h,c
  9428  015C96  0EF8               	movlw	-8
  9429  015C98  006F FF8F FFDF     	movff	plusw1,indf2
  9430                           
  9431                           ;stkvar	_n @ sp[(-4)+-6]
  9432  015C9E  0EF7               	movlw	-9
  9433  015CA0  50E3               	movf	plusw1,w,c
  9434  015CA2  E108               	bnz	l10815
  9435  015CA4  0EF6               	movlw	-10
  9436  015CA6  006F FF8C  F001    	movff	plusw1,btemp
  9437  015CAC  0E09               	movlw	9
  9438  015CAE  5E01               	subwf	btemp^0,f,c
  9439  015CB0  A0D8               	btfss	status,0,c
  9440  015CB2  D091               	goto	u10020
  9441  015CB4                     l10815:
  9442                           
  9443                           ;stkvar	_s @ sp[(-4)+0]
  9444  015CB4  0EFC               	movlw	-4
  9445  015CB6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9446  015CBC  1E0B               	comf	(btemp+10)^0,f,c
  9447  015CBE  0EFD               	movlw	-3
  9448  015CC0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9449  015CC6  1E0C               	comf	(btemp+11)^0,f,c
  9450  015CC8  2A0B               	incf	(btemp+10)^0,f,c
  9451  015CCA  B4D8               	btfsc	status,2,c
  9452  015CCC  2A0C               	incf	(btemp+11)^0,f,c
  9453  015CCE  0E03               	movlw	3
  9454  015CD0  160B               	andwf	(btemp+10)^0,f,c
  9455  015CD2  0E00               	movlw	0
  9456  015CD4  160C               	andwf	(btemp+11)^0,f,c
  9457                           
  9458                           ;stkvar	_k @ sp[(-4)+2]
  9459  015CD6  0EFE               	movlw	-2
  9460  015CD8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9461  015CDE  0EFF               	movlw	-1
  9462  015CE0  0060  F033  FFE3   	movff	btemp+11,plusw1
  9463                           
  9464                           ;stkvar	_k @ sp[(-4)+2]
  9465                           ;stkvar	_s @ sp[(-4)+0]
  9466  015CE6  0EFC               	movlw	-4
  9467  015CE8  50E3               	movf	plusw1,w,c
  9468  015CEA  6E01               	movwf	btemp^0,c
  9469  015CEC  0EFE               	movlw	-2
  9470  015CEE  50E3               	movf	plusw1,w,c
  9471  015CF0  2601               	addwf	btemp^0,f,c
  9472  015CF2  0EFC               	movlw	-4
  9473  015CF4  0060  F007  FFE3   	movff	btemp,plusw1
  9474  015CFA  0EFD               	movlw	-3
  9475  015CFC  50E3               	movf	plusw1,w,c
  9476  015CFE  6E01               	movwf	btemp^0,c
  9477  015D00  0EFF               	movlw	-1
  9478  015D02  50E3               	movf	plusw1,w,c
  9479  015D04  2201               	addwfc	btemp^0,f,c
  9480  015D06  0EFD               	movlw	-3
  9481  015D08  0060  F007  FFE3   	movff	btemp,plusw1
  9482                           
  9483                           ;stkvar	_k @ sp[(-4)+2]
  9484                           ;stkvar	_n @ sp[(-4)+-6]
  9485  015D0E  0EF6               	movlw	-10
  9486  015D10  50E3               	movf	plusw1,w,c
  9487  015D12  6E01               	movwf	btemp^0,c
  9488  015D14  0EFE               	movlw	-2
  9489  015D16  50E3               	movf	plusw1,w,c
  9490  015D18  5E01               	subwf	btemp^0,f,c
  9491  015D1A  0EF6               	movlw	-10
  9492  015D1C  0060  F007  FFE3   	movff	btemp,plusw1
  9493  015D22  0EF7               	movlw	-9
  9494  015D24  50E3               	movf	plusw1,w,c
  9495  015D26  6E01               	movwf	btemp^0,c
  9496  015D28  0EFF               	movlw	-1
  9497  015D2A  50E3               	movf	plusw1,w,c
  9498  015D2C  5A01               	subwfb	btemp^0,f,c
  9499  015D2E  0EF7               	movlw	-9
  9500  015D30  0060  F007  FFE3   	movff	btemp,plusw1
  9501  015D36  0EFC               	movlw	252
  9502  015D38  6E0B               	movwf	(btemp+10)^0,c
  9503  015D3A  0EFF               	movlw	255
  9504  015D3C  6E0C               	movwf	(btemp+11)^0,c
  9505                           
  9506                           ;stkvar	_n @ sp[(-4)+-6]
  9507  015D3E  0EF6               	movlw	-10
  9508  015D40  006F FF8C  F001    	movff	plusw1,btemp
  9509  015D46  500B               	movf	(btemp+10)^0,w,c
  9510  015D48  1601               	andwf	btemp^0,f,c
  9511  015D4A  0EF6               	movlw	-10
  9512  015D4C  0060  F007  FFE3   	movff	btemp,plusw1
  9513  015D52  0EF7               	movlw	-9
  9514  015D54  006F FF8C  F001    	movff	plusw1,btemp
  9515  015D5A  500C               	movf	(btemp+11)^0,w,c
  9516  015D5C  1601               	andwf	btemp^0,f,c
  9517  015D5E  0EF7               	movlw	-9
  9518  015D60  D02E               	goto	L6
  9519  015D62                     l10823:
  9520                           
  9521                           ;stkvar	_c @ sp[(-4)+-4]
  9522                           ;stkvar	_s @ sp[(-4)+0]
  9523  015D62  0EFC               	movlw	-4
  9524  015D64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9525  015D6A  0EFD               	movlw	-3
  9526  015D6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9527  015D72  0EF8               	movlw	-8
  9528  015D74  006F FF8F FFDF     	movff	plusw1,indf2
  9529                           
  9530                           ;stkvar	_n @ sp[(-4)+-6]
  9531  015D7A  0EF6               	movlw	-10
  9532  015D7C  006F FF8C  F001    	movff	plusw1,btemp
  9533  015D82  0E01               	movlw	1
  9534  015D84  5E01               	subwf	btemp^0,f,c
  9535  015D86  0EF6               	movlw	-10
  9536  015D88  0060  F007  FFE3   	movff	btemp,plusw1
  9537  015D8E  0EF7               	movlw	-9
  9538  015D90  006F FF8C  F001    	movff	plusw1,btemp
  9539  015D96  0E00               	movlw	0
  9540  015D98  5A01               	subwfb	btemp^0,f,c
  9541  015D9A  0EF7               	movlw	-9
  9542  015D9C  0060  F007  FFE3   	movff	btemp,plusw1
  9543                           
  9544                           ;stkvar	_s @ sp[(-4)+0]
  9545  015DA2  0EFC               	movlw	-4
  9546  015DA4  50E3               	movf	plusw1,w,c
  9547  015DA6  0F01               	addlw	1
  9548  015DA8  6E01               	movwf	btemp^0,c
  9549  015DAA  0EFC               	movlw	-4
  9550  015DAC  0060  F007  FFE3   	movff	btemp,plusw1
  9551  015DB2  6A01               	clrf	btemp^0,c
  9552  015DB4  0EFD               	movlw	-3
  9553  015DB6  50E3               	movf	plusw1,w,c
  9554  015DB8  2001               	addwfc	btemp^0,w,c
  9555  015DBA  6E01               	movwf	btemp^0,c
  9556  015DBC  0EFD               	movlw	-3
  9557  015DBE                     L6:
  9558  015DBE  0060  F007  FFE3   	movff	btemp,plusw1
  9559                           
  9560                           ;stkvar	_n @ sp[(-4)+-6]
  9561  015DC4  0EF6               	movlw	-10
  9562  015DC6  006F FF8C  F001    	movff	plusw1,btemp
  9563  015DCC  0EF7               	movlw	-9
  9564  015DCE  50E3               	movf	plusw1,w,c
  9565  015DD0  1001               	iorwf	btemp^0,w,c
  9566  015DD2  A4D8               	btfss	status,2,c
  9567  015DD4  D7C6               	goto	l10823
  9568  015DD6                     u10020:
  9569                           
  9570                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9571  015DD6  0EF6               	movlw	246
  9572  015DD8  26E1               	addwf	fsr1l,f,c
  9573  015DDA  0EFF               	movlw	255
  9574  015DDC  22E2               	addwfc	fsr1h,f,c
  9575  015DDE  0012               	return		;funcret
  9576  015DE0                     __end_of_memset:
  9577                           	opt callstack 0
  9578                           
  9579 ;; *************** function _printf *****************
  9580 ;; Defined at:
  9581 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;  fmt             2  [STACK] PTR const unsigned char 
  9584 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;  ap              2  [STACK] PTR void [1]
  9587 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9588 ;;  ret             2    0        int 
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  2  [STACK] int 
  9591 ;; Registers used:
  9592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9593 ;; Tracked objects:
  9594 ;;		On entry : 3F/3B
  9595 ;;		On exit  : 3F/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:   23
  9605 ;; This function calls:
  9606 ;;		_vfprintf
  9607 ;; This function is called by:
  9608 ;;		_eaDogM_WriteString
  9609 ;;		_send_lcd_cmd_dma
  9610 ;; This function uses a reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text41
  9614  019882                     __ptext41:
  9615                           	opt callstack 0
  9616  019882                     _printf:
  9617                           	opt callstack 0
  9618                           
  9619                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9620  019882  52E6               	movf	postinc1,f,c
  9621  019884  52E6               	movf	postinc1,f,c
  9622                           
  9623                           ;stkvar	?_printf @ sp[(-2)+-3]
  9624                           
  9625                           ;incstack = 0
  9626  019886  0EFB               	movlw	251
  9627  019888  24E1               	addwf	fsr1l,w,c
  9628  01988A  6E0B               	movwf	(btemp+10)^0,c
  9629  01988C  0EFF               	movlw	255
  9630  01988E  20E2               	addwfc	fsr1h,w,c
  9631  019890  6E0C               	movwf	(btemp+11)^0,c
  9632                           
  9633                           ;stkvar	_ap @ sp[(-2)+0]
  9634  019892  0EFF               	movlw	-1
  9635  019894  0060  F033  FFE3   	movff	btemp+11,plusw1
  9636  01989A  0EFE               	movlw	-2
  9637  01989C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9638                           
  9639                           ;stkvar	_ap @ sp[(-2)+0]
  9640  0198A2  0EFE               	movlw	254
  9641  0198A4  24E1               	addwf	fsr1l,w,c
  9642  0198A6  6E01               	movwf	btemp^0,c
  9643  0198A8  0EFF               	movlw	255
  9644  0198AA  20E2               	addwfc	fsr1h,w,c
  9645  0198AC  6E02               	movwf	(btemp+1)^0,c
  9646  0198AE  0060  F007  FFE6   	movff	btemp,postinc1
  9647  0198B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9648                           
  9649                           ;stkvar	_fmt @ sp[(-4)+-3]
  9650  0198BA  0EF9               	movlw	-7
  9651  0198BC  006F FF8F FFE6     	movff	plusw1,postinc1
  9652  0198C2  006F FF8F FFE6     	movff	plusw1,postinc1
  9653  0198C8  0E00               	movlw	0
  9654  0198CA  6EE6               	movwf	postinc1,c
  9655  0198CC  0E00               	movlw	0
  9656  0198CE  6EE6               	movwf	postinc1,c
  9657  0198D0  EC44  F0C7         	call	_vfprintf	;wreg free
  9658                           
  9659                           ; BSR set to: 0
  9660                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  9661  0198D4  52E5               	movf	postdec1,f,c
  9662  0198D6  52E5               	movf	postdec1,f,c
  9663  0198D8  52E5               	movf	postdec1,f,c
  9664  0198DA  50E7               	movf	indf1,w,c
  9665  0198DC  5EE1               	subwf	fsr1l,f,c
  9666  0198DE  0E00               	movlw	0
  9667  0198E0  5AE2               	subwfb	fsr1h,f,c
  9668  0198E2  0012               	return		;funcret
  9669  0198E4                     __end_of_printf:
  9670                           	opt callstack 0
  9671                           
  9672 ;; *************** function _vfprintf *****************
  9673 ;; Defined at:
  9674 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9677 ;;		 -> f(6), NULL(0), 
  9678 ;;  fmt             2  [STACK] PTR const unsigned char 
  9679 ;;		 -> STR_46(79), STR_44(3), STR_43(3), STR_42(19), 
  9680 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9681 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9682 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9683 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9684 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9685 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9686 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9687 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9688 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9689 ;;		 -> STR_1(17), 
  9690 ;;  ap              2  [STACK] PTR PTR void 
  9691 ;;		 -> ap(2), ap(2), 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  cfmt            2  [STACK] PTR unsigned char 
  9694 ;;		 -> STR_46(79), STR_44(3), STR_43(3), STR_42(19), 
  9695 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9696 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9697 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9698 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9699 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9700 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9701 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9702 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9703 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9704 ;;		 -> STR_1(17), 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  2  [STACK] int 
  9707 ;; Registers used:
  9708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/2
  9711 ;;		On exit  : 3F/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9718 ;;Total ram usage:        0 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:   22
  9721 ;; This function calls:
  9722 ;;		_vfpfcnvrt
  9723 ;; This function is called by:
  9724 ;;		_sprintf
  9725 ;;		_printf
  9726 ;; This function uses a reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text42
  9730  018E88                     __ptext42:
  9731                           	opt callstack 0
  9732  018E88                     _vfprintf:
  9733                           	opt callstack 0
  9734                           
  9735                           ; BSR set to: 0
  9736                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9737  018E88  52E6               	movf	postinc1,f,c
  9738  018E8A  52E6               	movf	postinc1,f,c
  9739                           
  9740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9741                           ;stkvar	_fmt @ sp[(-2)+-4]
  9742                           
  9743                           ;incstack = 0
  9744 ;; hardware stack exceeded
  9745  018E8C  0EFA               	movlw	-6
  9746  018E8E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9747  018E94  0EFB               	movlw	-5
  9748  018E96  006F FF8C  F00C    	movff	plusw1,btemp+11
  9749                           
  9750                           ;stkvar	_cfmt @ sp[(-2)+0]
  9751  018E9C  0EFF               	movlw	-1
  9752  018E9E  0060  F033  FFE3   	movff	btemp+11,plusw1
  9753  018EA4  0EFE               	movlw	-2
  9754  018EA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9755                           
  9756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9757  018EAC  0100               	movlb	0	; () banked
  9758  018EAE  6BC7               	clrf	_nout& (0+255),b
  9759  018EB0  6BC8               	clrf	(_nout+1)& (0+255),b
  9760                           
  9761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9762  018EB2  D021               	goto	l11651
  9763  018EB4                     l11649:
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9767                           ;stkvar	_ap @ sp[(-2)+-6]
  9768  018EB4  0EF8               	movlw	-8
  9769  018EB6  006F FF8F FFE6     	movff	plusw1,postinc1
  9770  018EBC  006F FF8F FFE6     	movff	plusw1,postinc1
  9771                           
  9772                           ;stkvar	_cfmt @ sp[(-4)+0]
  9773  018EC2  0EFC               	movlw	252
  9774  018EC4  24E1               	addwf	fsr1l,w,c
  9775  018EC6  6E01               	movwf	btemp^0,c
  9776  018EC8  0EFF               	movlw	255
  9777  018ECA  20E2               	addwfc	fsr1h,w,c
  9778  018ECC  6E02               	movwf	(btemp+1)^0,c
  9779  018ECE  0060  F007  FFE6   	movff	btemp,postinc1
  9780  018ED4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9781                           
  9782                           ;stkvar	_fp @ sp[(-6)+-2]
  9783  018EDA  0EF8               	movlw	-8
  9784  018EDC  006F FF8F FFE6     	movff	plusw1,postinc1
  9785  018EE2  006F FF8F FFE6     	movff	plusw1,postinc1
  9786  018EE8  EC22  F089         	call	_vfpfcnvrt	;wreg free
  9787  018EEC  5001               	movf	btemp^0,w,c
  9788  018EEE  0100               	movlb	0	; () banked
  9789  018EF0  27C7               	addwf	_nout& (0+255),f,b
  9790  018EF2  5002               	movf	(btemp+1)^0,w,c
  9791  018EF4  23C8               	addwfc	(_nout+1)& (0+255),f,b
  9792  018EF6                     l11651:
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9796                           ;stkvar	_cfmt @ sp[(-2)+0]
  9797  018EF6  50E1               	movf	fsr1l,w,c
  9798  018EF8  0FFE               	addlw	-2
  9799  018EFA  6ED9               	movwf	fsr2l,c
  9800  018EFC  50E2               	movf	fsr1h,w,c
  9801  018EFE  6EDA               	movwf	fsr2h,c
  9802  018F00  0EFF               	movlw	255
  9803  018F02  22DA               	addwfc	fsr2h,f,c
  9804  018F04  006F FF7B FFF6     	movff	postinc2,tblptrl
  9805  018F0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9806  018F10                     	if	0	;tblptru may be non-zero
  9807  018F10                     	endif
  9808  018F10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9809  018F10  0E00               	movlw	low (__mediumconst shr (0+16))
  9810  018F12  6EF8               	movwf	tblptru,c
  9811  018F14                     	endif
  9812  018F14  0008               	tblrd		*
  9813  018F16  50F5               	movf	tablat,w,c
  9814  018F18  0900               	iorlw	0
  9815  018F1A  A4D8               	btfss	status,2,c
  9816  018F1C  D7CB               	goto	l11649
  9817                           
  9818                           ; BSR set to: 0
  9819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9820  018F1E  0060  F31C  F001   	movff	_nout,btemp
  9821  018F24  0060  F320  F002   	movff	_nout+1,btemp+1
  9822                           
  9823                           ; BSR set to: 0
  9824                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  9825  018F2A  0EF8               	movlw	248
  9826  018F2C  26E1               	addwf	fsr1l,f,c
  9827  018F2E  0EFF               	movlw	255
  9828  018F30  22E2               	addwfc	fsr1h,f,c
  9829  018F32  0012               	return		;funcret
  9830  018F34                     __end_of_vfprintf:
  9831                           	opt callstack 0
  9832                           
  9833 ;; *************** function _vfpfcnvrt *****************
  9834 ;; Defined at:
  9835 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9836 ;; Parameters:    Size  Location     Type
  9837 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9838 ;;		 -> f(6), NULL(0), 
  9839 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9840 ;;		 -> cfmt(2), 
  9841 ;;  ap              2  [STACK] PTR PTR void 
  9842 ;;		 -> ap(2), ap(2), 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  llu             8  [STACK] unsigned long long 
  9845 ;;  ll              8  [STACK] long long 
  9846 ;;  f               4  [STACK] long long 
  9847 ;;  ct              3  [STACK] unsigned char [3]
  9848 ;;  vp              3    0        PTR void 
  9849 ;;  cp              2  [STACK] PTR unsigned char 
  9850 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  9851 ;;		 -> D.lcd(288), D(290), T(144), STR_7(4), 
  9852 ;;		 -> STR_3(4), V(188), 
  9853 ;;  i               2    0        int 
  9854 ;;  done            2    0        int 
  9855 ;;  c               1  [STACK] unsigned char 
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  2  [STACK] int 
  9858 ;; Registers used:
  9859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9869 ;;Total ram usage:        0 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:   21
  9872 ;; This function calls:
  9873 ;;		_atoi
  9874 ;;		_ctoa
  9875 ;;		_dtoa
  9876 ;;		_efgtoa
  9877 ;;		_fputc
  9878 ;;		_isdigit
  9879 ;;		_isupper
  9880 ;;		_stoa
  9881 ;;		_strncmp
  9882 ;;		_tolower
  9883 ;;		_utoa
  9884 ;;		_xtoa
  9885 ;; This function is called by:
  9886 ;;		_vfprintf
  9887 ;; This function uses a reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text43
  9891  011244                     __ptext43:
  9892                           	opt callstack 0
  9893  011244                     _vfpfcnvrt:
  9894                           	opt callstack 0
  9895                           
  9896                           ; BSR set to: 0
  9897                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9898  011244  0E20               	movlw	32
  9899  011246  26E1               	addwf	fsr1l,f,c
  9900  011248  0E00               	movlw	0
  9901  01124A  22E2               	addwfc	fsr1h,f,c
  9902                           
  9903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9904                           ;stkvar	_fmt @ sp[(-32)+-4]
  9905                           
  9906                           ;incstack = 0
  9907 ;; hardware stack exceeded
  9908  01124C  0EDC               	movlw	-36
  9909  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9910  011254  0EDD               	movlw	-35
  9911  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  9912  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9913  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  9914  011268                     	if	0	;tblptru may be non-zero
  9915  011268                     	endif
  9916  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9917  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  9918  01126A  6EF8               	movwf	tblptru,c
  9919  01126C                     	endif
  9920  01126C  0008               	tblrd		*
  9921  01126E  50F5               	movf	tablat,w,c
  9922  011270  0A25               	xorlw	37
  9923  011272  A4D8               	btfss	status,2,c
  9924  011274  EFC9  F090         	goto	l11595
  9925                           
  9926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9927                           ;stkvar	_fmt @ sp[(-32)+-4]
  9928  011278  0EDC               	movlw	-36
  9929  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9930  011280  0EDD               	movlw	-35
  9931  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  9932  011288  2ADE               	incf	postinc2,f,c
  9933  01128A  0E00               	movlw	0
  9934  01128C  22DD               	addwfc	postdec2,f,c
  9935                           
  9936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9937  01128E  6A21               	clrf	_width^0,c
  9938  011290  6A22               	clrf	(_width+1)^0,c
  9939  011292  6A25               	clrf	_flags^0,c
  9940  011294  6A26               	clrf	(_flags+1)^0,c
  9941                           
  9942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9943  011296  6823               	setf	_prec^0,c
  9944  011298  6824               	setf	(_prec+1)^0,c
  9945                           
  9946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  9947                           ;stkvar	_fmt @ sp[(-32)+-4]
  9948  01129A  0EDC               	movlw	-36
  9949  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9950  0112A2  0EDD               	movlw	-35
  9951  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9952  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9953  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9954  0112B6                     	if	0	;tblptru may be non-zero
  9955  0112B6                     	endif
  9956  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9957  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9958  0112B8  6EF8               	movwf	tblptru,c
  9959  0112BA                     	endif
  9960  0112BA  0008               	tblrd		*
  9961  0112BC  50F5               	movf	tablat,w,c
  9962  0112BE  0A2A               	xorlw	42
  9963  0112C0  A4D8               	btfss	status,2,c
  9964  0112C2  D031               	goto	l11413
  9965                           
  9966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  9967                           ;stkvar	_fmt @ sp[(-32)+-4]
  9968  0112C4  0EDC               	movlw	-36
  9969  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9970  0112CC  0EDD               	movlw	-35
  9971  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9972  0112D4  2ADE               	incf	postinc2,f,c
  9973  0112D6  0E00               	movlw	0
  9974  0112D8  22DD               	addwfc	postdec2,f,c
  9975                           
  9976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  9977                           ;stkvar	_ap @ sp[(-32)+-6]
  9978  0112DA  0EDA               	movlw	-38
  9979  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9980  0112E2  0EDB               	movlw	-37
  9981  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9982  0112EA  0E02               	movlw	2
  9983  0112EC  5EDE               	subwf	postinc2,f,c
  9984  0112EE  0E00               	movlw	0
  9985  0112F0  5ADD               	subwfb	postdec2,f,c
  9986  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
  9987  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
  9988  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9989  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9990  01130A  006F FF78  F021    	movff	postinc2,_width
  9991  011310  006F FF74  F022    	movff	postdec2,_width+1
  9992                           
  9993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  9994  011316  AE22               	btfss	(_width+1)^0,7,c
  9995  011318  D066               	goto	u11160
  9996                           
  9997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  9998  01131A  8025               	bsf	_flags^0,0,c
  9999                           
 10000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10001  01131C  6C21               	negf	_width^0,c
 10002  01131E  1E22               	comf	(_width+1)^0,f,c
 10003  011320  B0D8               	btfsc	status,0,c
 10004  011322  2A22               	incf	(_width+1)^0,f,c
 10005  011324  D060               	goto	u11160
 10006  011326                     l11413:
 10007                           
 10008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10009                           ;stkvar	_fmt @ sp[(-32)+-4]
 10010  011326  0EDC               	movlw	-36
 10011  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 10012  01132E  0EDD               	movlw	-35
 10013  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 10014  011336  006F FF78  F00B    	movff	postinc2,btemp+10
 10015  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
 10016  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10017  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
 10018  01134E  ECFC  F0B2         	call	_atoi	;wreg free
 10019  011352  0060  F004  F021   	movff	btemp,_width
 10020  011358  0060  F008  F022   	movff	btemp+1,_width+1
 10021                           
 10022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10023  01135E  D00B               	goto	l11417
 10024  011360                     l11415:
 10025                           
 10026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10027                           ;stkvar	_fmt @ sp[(-32)+-4]
 10028  011360  0EDC               	movlw	-36
 10029  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
 10030  011368  0EDD               	movlw	-35
 10031  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10032  011370  2ADE               	incf	postinc2,f,c
 10033  011372  0E00               	movlw	0
 10034  011374  22DD               	addwfc	postdec2,f,c
 10035  011376                     l11417:
 10036  011376  0ED0               	movlw	208
 10037  011378  6E0B               	movwf	(btemp+10)^0,c
 10038  01137A  0EFF               	movlw	255
 10039  01137C  6E0C               	movwf	(btemp+11)^0,c
 10040                           
 10041                           ;stkvar	_fmt @ sp[(-32)+-4]
 10042  01137E  0EDC               	movlw	-36
 10043  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
 10044  011386  0EDD               	movlw	-35
 10045  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
 10046  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10047  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
 10048  01139A                     	if	0	;tblptru may be non-zero
 10049  01139A                     	endif
 10050  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10051  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
 10052  01139C  6EF8               	movwf	tblptru,c
 10053  01139E                     	endif
 10054  01139E  0008               	tblrd		*
 10055  0113A0  50F5               	movf	tablat,w,c
 10056  0113A2  6E09               	movwf	(btemp+8)^0,c
 10057  0113A4  6A0A               	clrf	(btemp+9)^0,c
 10058  0113A6  500B               	movf	(btemp+10)^0,w,c
 10059  0113A8  2609               	addwf	(btemp+8)^0,f,c
 10060  0113AA  500C               	movf	(btemp+11)^0,w,c
 10061  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10062  0113AE  500A               	movf	(btemp+9)^0,w,c
 10063  0113B0  E106               	bnz	u11140
 10064  0113B2  0E0A               	movlw	10
 10065  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10066  0113B6  B0D8               	btfsc	status,0,c
 10067  0113B8  D002               	goto	u11140
 10068  0113BA  0E01               	movlw	1
 10069  0113BC  D001               	goto	u11150
 10070  0113BE                     u11140:
 10071  0113BE  0E00               	movlw	0
 10072  0113C0                     u11150:
 10073  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10074  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10075                           
 10076                           ;stkvar	_vfpfcnvrt$5211 @ sp[(-32)+4]
 10077  0113C4  0EE4               	movlw	-28
 10078  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10079  0113CC  0EE5               	movlw	-27
 10080  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10081                           
 10082                           ;stkvar	_vfpfcnvrt$5211 @ sp[(-32)+4]
 10083  0113D4  0EE4               	movlw	-28
 10084  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10085  0113DC  0EE5               	movlw	-27
 10086  0113DE  50E3               	movf	plusw1,w,c
 10087  0113E0  1001               	iorwf	btemp^0,w,c
 10088  0113E2  A4D8               	btfss	status,2,c
 10089  0113E4  D7BD               	goto	l11415
 10090  0113E6                     u11160:
 10091                           
 10092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10093                           ;stkvar	_fmt @ sp[(-32)+-4]
 10094  0113E6  0EDC               	movlw	-36
 10095  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10096  0113EE  0EDD               	movlw	-35
 10097  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10098  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10099  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10100  011402                     	if	0	;tblptru may be non-zero
 10101  011402                     	endif
 10102  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10103  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10104  011404  6EF8               	movwf	tblptru,c
 10105  011406                     	endif
 10106  011406  0008               	tblrd		*
 10107  011408  50F5               	movf	tablat,w,c
 10108  01140A  0A2E               	xorlw	46
 10109  01140C  A4D8               	btfss	status,2,c
 10110  01140E  D0AC               	goto	u11210
 10111                           
 10112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10113  011410  6A23               	clrf	_prec^0,c
 10114  011412  6A24               	clrf	(_prec+1)^0,c
 10115                           
 10116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10117                           ;stkvar	_fmt @ sp[(-32)+-4]
 10118  011414  0EDC               	movlw	-36
 10119  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10120  01141C  0EDD               	movlw	-35
 10121  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10122  011424  2ADE               	incf	postinc2,f,c
 10123  011426  0E00               	movlw	0
 10124  011428  22DD               	addwfc	postdec2,f,c
 10125                           
 10126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10127                           ;stkvar	_fmt @ sp[(-32)+-4]
 10128  01142A  0EDC               	movlw	-36
 10129  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10130  011432  0EDD               	movlw	-35
 10131  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10132  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10133  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10134  011446                     	if	0	;tblptru may be non-zero
 10135  011446                     	endif
 10136  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10137  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10138  011448  6EF8               	movwf	tblptru,c
 10139  01144A                     	endif
 10140  01144A  0008               	tblrd		*
 10141  01144C  50F5               	movf	tablat,w,c
 10142  01144E  0A2A               	xorlw	42
 10143  011450  A4D8               	btfss	status,2,c
 10144  011452  D02A               	goto	l11435
 10145                           
 10146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10147                           ;stkvar	_fmt @ sp[(-32)+-4]
 10148  011454  0EDC               	movlw	-36
 10149  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10150  01145C  0EDD               	movlw	-35
 10151  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10152  011464  2ADE               	incf	postinc2,f,c
 10153  011466  0E00               	movlw	0
 10154  011468  22DD               	addwfc	postdec2,f,c
 10155                           
 10156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10157                           ;stkvar	_ap @ sp[(-32)+-6]
 10158  01146A  0EDA               	movlw	-38
 10159  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10160  011472  0EDB               	movlw	-37
 10161  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10162  01147A  0E02               	movlw	2
 10163  01147C  5EDE               	subwf	postinc2,f,c
 10164  01147E  0E00               	movlw	0
 10165  011480  5ADD               	subwfb	postdec2,f,c
 10166  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10167  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10168  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10169  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10170  01149A  006F FF78  F023    	movff	postinc2,_prec
 10171  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10172                           
 10173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10174  0114A6  D060               	goto	u11210
 10175  0114A8                     l11435:
 10176                           
 10177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10178                           ;stkvar	_fmt @ sp[(-32)+-4]
 10179  0114A8  0EDC               	movlw	-36
 10180  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10181  0114B0  0EDD               	movlw	-35
 10182  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10183  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10184  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10185  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10186  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10187  0114D0  ECFC  F0B2         	call	_atoi	;wreg free
 10188  0114D4  0060  F004  F023   	movff	btemp,_prec
 10189  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10190                           
 10191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10192  0114E0  D00B               	goto	l11439
 10193  0114E2                     l11437:
 10194                           
 10195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10196                           ;stkvar	_fmt @ sp[(-32)+-4]
 10197  0114E2  0EDC               	movlw	-36
 10198  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10199  0114EA  0EDD               	movlw	-35
 10200  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10201  0114F2  2ADE               	incf	postinc2,f,c
 10202  0114F4  0E00               	movlw	0
 10203  0114F6  22DD               	addwfc	postdec2,f,c
 10204  0114F8                     l11439:
 10205  0114F8  0ED0               	movlw	208
 10206  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10207  0114FC  0EFF               	movlw	255
 10208  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10209                           
 10210                           ;stkvar	_fmt @ sp[(-32)+-4]
 10211  011500  0EDC               	movlw	-36
 10212  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10213  011508  0EDD               	movlw	-35
 10214  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10215  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10216  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10217  01151C                     	if	0	;tblptru may be non-zero
 10218  01151C                     	endif
 10219  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10220  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10221  01151E  6EF8               	movwf	tblptru,c
 10222  011520                     	endif
 10223  011520  0008               	tblrd		*
 10224  011522  50F5               	movf	tablat,w,c
 10225  011524  6E09               	movwf	(btemp+8)^0,c
 10226  011526  6A0A               	clrf	(btemp+9)^0,c
 10227  011528  500B               	movf	(btemp+10)^0,w,c
 10228  01152A  2609               	addwf	(btemp+8)^0,f,c
 10229  01152C  500C               	movf	(btemp+11)^0,w,c
 10230  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10231  011530  500A               	movf	(btemp+9)^0,w,c
 10232  011532  E106               	bnz	u11190
 10233  011534  0E0A               	movlw	10
 10234  011536  5C09               	subwf	(btemp+8)^0,w,c
 10235  011538  B0D8               	btfsc	status,0,c
 10236  01153A  D002               	goto	u11190
 10237  01153C  0E01               	movlw	1
 10238  01153E  D001               	goto	u11200
 10239  011540                     u11190:
 10240  011540  0E00               	movlw	0
 10241  011542                     u11200:
 10242  011542  6E0B               	movwf	(btemp+10)^0,c
 10243  011544  6A0C               	clrf	(btemp+11)^0,c
 10244                           
 10245                           ;stkvar	_vfpfcnvrt$5212 @ sp[(-32)+0]
 10246  011546  0EE0               	movlw	-32
 10247  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10248  01154E  0EE1               	movlw	-31
 10249  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10250                           
 10251                           ;stkvar	_vfpfcnvrt$5212 @ sp[(-32)+0]
 10252  011556  0EE0               	movlw	-32
 10253  011558  006F FF8C  F001    	movff	plusw1,btemp
 10254  01155E  0EE1               	movlw	-31
 10255  011560  50E3               	movf	plusw1,w,c
 10256  011562  1001               	iorwf	btemp^0,w,c
 10257  011564  A4D8               	btfss	status,2,c
 10258  011566  D7BD               	goto	l11437
 10259  011568                     u11210:
 10260                           
 10261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10262                           ;stkvar	_fmt @ sp[(-32)+-4]
 10263  011568  0EDC               	movlw	-36
 10264  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10265  011570  0EDD               	movlw	-35
 10266  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10267  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10268  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10269  011584                     	if	0	;tblptru may be non-zero
 10270  011584                     	endif
 10271  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10272  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10273  011586  6EF8               	movwf	tblptru,c
 10274  011588                     	endif
 10275  011588  0008               	tblrd		*
 10276  01158A  50F5               	movf	tablat,w,c
 10277  01158C  6EE6               	movwf	postinc1,c
 10278  01158E  0E00               	movlw	0
 10279  011590  6EE6               	movwf	postinc1,c
 10280  011592  EC8A  F0CA         	call	_tolower	;wreg free
 10281                           
 10282                           ;stkvar	_ct @ sp[(-32)+26]
 10283  011596  0EFA               	movlw	-6
 10284  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10285                           
 10286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10287                           ;stkvar	_ct @ sp[(-32)+26]
 10288  01159E  0EFA               	movlw	-6
 10289  0115A0  50E3               	movf	plusw1,w,c
 10290  0115A2  B4D8               	btfsc	status,2,c
 10291  0115A4  D05B               	goto	l11455
 10292                           
 10293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10294                           ;stkvar	_ct @ sp[(-32)+26]
 10295  0115A6  0EFB               	movlw	251
 10296  0115A8  24E1               	addwf	fsr1l,w,c
 10297  0115AA  6ED9               	movwf	fsr2l,c
 10298  0115AC  0EFF               	movlw	255
 10299  0115AE  20E2               	addwfc	fsr1h,w,c
 10300  0115B0  6EDA               	movwf	fsr2h,c
 10301                           
 10302                           ;stkvar	_fmt @ sp[(-32)+-4]
 10303  0115B2  0EDC               	movlw	-36
 10304  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10305  0115BA  0EDD               	movlw	-35
 10306  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10307  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10308  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10309  0115CE  0E01               	movlw	1
 10310  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10311  0115D2  0E00               	movlw	0
 10312  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10313  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10314  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10315  0115E2                     	if	0	;tblptru may be non-zero
 10316  0115E2                     	endif
 10317  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10318  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10319  0115E4  6EF8               	movwf	tblptru,c
 10320  0115E6                     	endif
 10321  0115E6  0008               	tblrd		*
 10322  0115E8  50F5               	movf	tablat,w,c
 10323  0115EA  6EE6               	movwf	postinc1,c
 10324  0115EC  0E00               	movlw	0
 10325  0115EE  6EE6               	movwf	postinc1,c
 10326  0115F0  EC8A  F0CA         	call	_tolower	;wreg free
 10327  0115F4  5001               	movf	btemp^0,w,c
 10328  0115F6  6EDF               	movwf	indf2,c
 10329                           
 10330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10331                           ;stkvar	_ct @ sp[(-32)+26]
 10332  0115F8  0EFB               	movlw	251
 10333  0115FA  24E1               	addwf	fsr1l,w,c
 10334  0115FC  6ED9               	movwf	fsr2l,c
 10335  0115FE  0EFF               	movlw	255
 10336  011600  20E2               	addwfc	fsr1h,w,c
 10337  011602  6EDA               	movwf	fsr2h,c
 10338  011604  50DF               	movf	indf2,w,c
 10339  011606  B4D8               	btfsc	status,2,c
 10340  011608  D029               	goto	l11455
 10341                           
 10342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10343                           ;stkvar	_ct @ sp[(-32)+26]
 10344  01160A  0EFC               	movlw	252
 10345  01160C  24E1               	addwf	fsr1l,w,c
 10346  01160E  6ED9               	movwf	fsr2l,c
 10347  011610  0EFF               	movlw	255
 10348  011612  20E2               	addwfc	fsr1h,w,c
 10349  011614  6EDA               	movwf	fsr2h,c
 10350                           
 10351                           ;stkvar	_fmt @ sp[(-32)+-4]
 10352  011616  0EDC               	movlw	-36
 10353  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10354  01161E  0EDD               	movlw	-35
 10355  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10356  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10357  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10358  011632  0E02               	movlw	2
 10359  011634  260B               	addwf	(btemp+10)^0,f,c
 10360  011636  0E00               	movlw	0
 10361  011638  220C               	addwfc	(btemp+11)^0,f,c
 10362  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10363  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10364  011646                     	if	0	;tblptru may be non-zero
 10365  011646                     	endif
 10366  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10367  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10368  011648  6EF8               	movwf	tblptru,c
 10369  01164A                     	endif
 10370  01164A  0008               	tblrd		*
 10371  01164C  50F5               	movf	tablat,w,c
 10372  01164E  6EE6               	movwf	postinc1,c
 10373  011650  0E00               	movlw	0
 10374  011652  6EE6               	movwf	postinc1,c
 10375  011654  EC8A  F0CA         	call	_tolower	;wreg free
 10376  011658  5001               	movf	btemp^0,w,c
 10377  01165A  6EDF               	movwf	indf2,c
 10378  01165C                     l11455:
 10379                           
 10380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10381                           ;stkvar	_fmt @ sp[(-32)+-4]
 10382  01165C  0EDC               	movlw	-36
 10383  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10384  011664  0EDD               	movlw	-35
 10385  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10386  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10387  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10388  011678                     	if	0	;tblptru may be non-zero
 10389  011678                     	endif
 10390  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10391  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10392  01167A  6EF8               	movwf	tblptru,c
 10393  01167C                     	endif
 10394  01167C  0008               	tblrd		*
 10395  01167E  50F5               	movf	tablat,w,c
 10396  011680  0A63               	xorlw	99
 10397  011682  A4D8               	btfss	status,2,c
 10398  011684  D037               	goto	l11465
 10399                           
 10400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10401                           ;stkvar	_fmt @ sp[(-32)+-4]
 10402  011686  0EDC               	movlw	-36
 10403  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10404  01168E  0EDD               	movlw	-35
 10405  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10406  011696  2ADE               	incf	postinc2,f,c
 10407  011698  0E00               	movlw	0
 10408  01169A  22DD               	addwfc	postdec2,f,c
 10409                           
 10410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10411                           ;stkvar	_ap @ sp[(-32)+-6]
 10412  01169C  0EDA               	movlw	-38
 10413  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10414  0116A4  0EDB               	movlw	-37
 10415  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10416  0116AC  0E02               	movlw	2
 10417  0116AE  5EDE               	subwf	postinc2,f,c
 10418  0116B0  0E00               	movlw	0
 10419  0116B2  5ADD               	subwfb	postdec2,f,c
 10420  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10421  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10422  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10423  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10424  0116CC  50DF               	movf	indf2,w,c
 10425  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10426                           
 10427                           ;stkvar	_c @ sp[(-32)+31]
 10428  0116D0  0EFF               	movlw	-1
 10429  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10430                           
 10431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10432                           ;stkvar	_c @ sp[(-32)+31]
 10433  0116D8  0EFF               	movlw	-1
 10434  0116DA  50E3               	movf	plusw1,w,c
 10435  0116DC  6EE6               	movwf	postinc1,c
 10436                           
 10437                           ;stkvar	_fp @ sp[(-33)+-2]
 10438  0116DE  0EDD               	movlw	-35
 10439  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10440  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10441  0116EC  EC04  F0CA         	call	_ctoa	;wreg free
 10442  0116F0  EFF3  F090         	goto	l2225
 10443  0116F4                     l11465:
 10444                           
 10445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10446                           ;stkvar	_fmt @ sp[(-32)+-4]
 10447  0116F4  0EDC               	movlw	-36
 10448  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10449  0116FC  0EDD               	movlw	-35
 10450  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10451  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
 10452  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10453  011710                     	if	0	;tblptru may be non-zero
 10454  011710                     	endif
 10455  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10456  011710  0E00               	movlw	low (__mediumconst shr (0+16))
 10457  011712  6EF8               	movwf	tblptru,c
 10458  011714                     	endif
 10459  011714  0008               	tblrd		*
 10460  011716  50F5               	movf	tablat,w,c
 10461  011718  0A64               	xorlw	100
 10462  01171A  B4D8               	btfsc	status,2,c
 10463  01171C  D015               	goto	u11260
 10464                           
 10465                           ;stkvar	_fmt @ sp[(-32)+-4]
 10466  01171E  0EDC               	movlw	-36
 10467  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
 10468  011726  0EDD               	movlw	-35
 10469  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
 10470  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10471  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
 10472  01173A                     	if	0	;tblptru may be non-zero
 10473  01173A                     	endif
 10474  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10475  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
 10476  01173C  6EF8               	movwf	tblptru,c
 10477  01173E                     	endif
 10478  01173E  0008               	tblrd		*
 10479  011740  50F5               	movf	tablat,w,c
 10480  011742  0A69               	xorlw	105
 10481  011744  A4D8               	btfss	status,2,c
 10482  011746  D076               	goto	l11477
 10483  011748                     u11260:
 10484                           
 10485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10486                           ;stkvar	_fmt @ sp[(-32)+-4]
 10487  011748  0EDC               	movlw	-36
 10488  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10489  011750  0EDD               	movlw	-35
 10490  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
 10491  011758  2ADE               	incf	postinc2,f,c
 10492  01175A  0E00               	movlw	0
 10493  01175C  22DD               	addwfc	postdec2,f,c
 10494                           
 10495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10496                           ;stkvar	_ap @ sp[(-32)+-6]
 10497  01175E  0EDA               	movlw	-38
 10498  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
 10499  011766  0EDB               	movlw	-37
 10500  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
 10501  01176E  0E02               	movlw	2
 10502  011770  5EDE               	subwf	postinc2,f,c
 10503  011772  0E00               	movlw	0
 10504  011774  5ADD               	subwfb	postdec2,f,c
 10505  011776  006F FF78  F00B    	movff	postinc2,btemp+10
 10506  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
 10507  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10508  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10509  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
 10510  011794  006F FF74  F00C    	movff	postdec2,btemp+11
 10511                           
 10512                           ;stkvar	_ll @ sp[(-32)+14]
 10513  01179A  0EEE               	movlw	-18
 10514  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10515  0117A2  0EEF               	movlw	-17
 10516  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10517  0117AA  6A01               	clrf	btemp^0,c
 10518  0117AC  BEE3               	btfsc	plusw1,7,c
 10519  0117AE  6801               	setf	btemp^0,c
 10520  0117B0  0EF0               	movlw	-16
 10521  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
 10522  0117B8  0EF1               	movlw	-15
 10523  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
 10524  0117C0  0EF2               	movlw	-14
 10525  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
 10526  0117C8  0EF3               	movlw	-13
 10527  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
 10528  0117D0  0EF4               	movlw	-12
 10529  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
 10530  0117D8  0EF5               	movlw	-11
 10531  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
 10532  0117E0                     l11473:
 10533                           
 10534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10535                           ;stkvar	_ll @ sp[(-32)+14]
 10536  0117E0  50E1               	movf	fsr1l,w,c
 10537  0117E2  0FEE               	addlw	-18
 10538  0117E4  6ED9               	movwf	fsr2l,c
 10539  0117E6  50E2               	movf	fsr1h,w,c
 10540  0117E8  6EDA               	movwf	fsr2h,c
 10541  0117EA  0EFF               	movlw	255
 10542  0117EC  22DA               	addwfc	fsr2h,f,c
 10543  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
 10544  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
 10545  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
 10546  011800  006F FF7B FFE6     	movff	postinc2,postinc1
 10547  011806  006F FF7B FFE6     	movff	postinc2,postinc1
 10548  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
 10549  011812  006F FF7B FFE6     	movff	postinc2,postinc1
 10550  011818  006F FF7B FFE6     	movff	postinc2,postinc1
 10551                           
 10552                           ;stkvar	_fp @ sp[(-40)+-2]
 10553  01181E  0ED6               	movlw	-42
 10554  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 10555  011826  006F FF8F FFE6     	movff	plusw1,postinc1
 10556  01182C  EC07  F0A6         	call	_dtoa	;wreg free
 10557  011830  EFF3  F090         	goto	l2225
 10558  011834                     l11477:
 10559                           
 10560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10561  011834  0E02               	movlw	2
 10562  011836  6EE6               	movwf	postinc1,c
 10563  011838  0E00               	movlw	0
 10564  01183A  6EE6               	movwf	postinc1,c
 10565  01183C  0EEA               	movlw	low STR_55
 10566  01183E  6EE6               	movwf	postinc1,c
 10567  011840  0EFF               	movlw	high STR_55
 10568  011842  6EE6               	movwf	postinc1,c
 10569                           
 10570                           ;stkvar	_fmt @ sp[(-36)+-4]
 10571  011844  0ED8               	movlw	-40
 10572  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
 10573  01184C  0ED9               	movlw	-39
 10574  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10575  011854  006F FF78  F00B    	movff	postinc2,btemp+10
 10576  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
 10577  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10578  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
 10579  01186C  EC56  F0B5         	call	_strncmp	;wreg free
 10580  011870  5001               	movf	btemp^0,w,c
 10581  011872  1002               	iorwf	(btemp+1)^0,w,c
 10582  011874  B4D8               	btfsc	status,2,c
 10583  011876  D022               	goto	u11280
 10584  011878  0E02               	movlw	2
 10585  01187A  6EE6               	movwf	postinc1,c
 10586  01187C  0E00               	movlw	0
 10587  01187E  6EE6               	movwf	postinc1,c
 10588  011880  0EF0               	movlw	low STR_59
 10589  011882  6EE6               	movwf	postinc1,c
 10590  011884  0EFF               	movlw	high STR_59
 10591  011886  6EE6               	movwf	postinc1,c
 10592                           
 10593                           ;stkvar	_fmt @ sp[(-36)+-4]
 10594  011888  0ED8               	movlw	-40
 10595  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10596  011890  0ED9               	movlw	-39
 10597  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
 10598  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10599  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10600  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10601  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10602  0118B0  EC56  F0B5         	call	_strncmp	;wreg free
 10603  0118B4  5001               	movf	btemp^0,w,c
 10604  0118B6  1002               	iorwf	(btemp+1)^0,w,c
 10605  0118B8  A4D8               	btfss	status,2,c
 10606  0118BA  D069               	goto	l11489
 10607  0118BC                     u11280:
 10608                           
 10609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10610                           ;stkvar	_fmt @ sp[(-32)+-4]
 10611  0118BC  0EDC               	movlw	-36
 10612  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10613  0118C4  0EDD               	movlw	-35
 10614  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10615  0118CC  0E02               	movlw	2
 10616  0118CE  26DE               	addwf	postinc2,f,c
 10617  0118D0  0E00               	movlw	0
 10618  0118D2  22DD               	addwfc	postdec2,f,c
 10619                           
 10620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10621                           ;stkvar	_ap @ sp[(-32)+-6]
 10622  0118D4  0EDA               	movlw	-38
 10623  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10624  0118DC  0EDB               	movlw	-37
 10625  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10626  0118E4  0E04               	movlw	4
 10627  0118E6  5EDE               	subwf	postinc2,f,c
 10628  0118E8  0E00               	movlw	0
 10629  0118EA  5ADD               	subwfb	postdec2,f,c
 10630  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
 10631  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
 10632  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10633  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10634  011904  006F FF78  F009    	movff	postinc2,btemp+8
 10635  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
 10636  011910  006F FF78  F00B    	movff	postinc2,btemp+10
 10637  011916  006F FF78  F00C    	movff	postinc2,btemp+11
 10638  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
 10639  011922  0060  F028  F012   	movff	btemp+9,btemp+17
 10640  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
 10641  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
 10642  011934  6A15               	clrf	(btemp+20)^0,c
 10643  011936  BE14               	btfsc	(btemp+19)^0,7,c
 10644  011938  6815               	setf	(btemp+20)^0,c
 10645  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
 10646  011940  0060  F054  F017   	movff	btemp+20,btemp+22
 10647  011946  0060  F054  F018   	movff	btemp+20,btemp+23
 10648                           
 10649                           ;stkvar	_ll @ sp[(-32)+14]
 10650  01194C  0EEE               	movlw	-18
 10651  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 10652  011954  0EEF               	movlw	-17
 10653  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10654  01195C  0EF0               	movlw	-16
 10655  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10656  011964  0EF1               	movlw	-15
 10657  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 10658  01196C  0EF2               	movlw	-14
 10659  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 10660  011974  0EF3               	movlw	-13
 10661  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10662  01197C  0EF4               	movlw	-12
 10663  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10664  011984  0EF5               	movlw	-11
 10665  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 10666  01198C  D729               	goto	l11473
 10667  01198E                     l11489:
 10668                           
 10669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 10670                           ;stkvar	_ct @ sp[(-32)+26]
 10671  01198E  0EFA               	movlw	-6
 10672  011990  006F FF8C  F001    	movff	plusw1,btemp
 10673  011996  0E66               	movlw	102
 10674  011998  1801               	xorwf	btemp^0,w,c
 10675  01199A  A4D8               	btfss	status,2,c
 10676  01199C  D06E               	goto	l11501
 10677                           
 10678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 10679                           ;stkvar	_fmt @ sp[(-32)+-4]
 10680  01199E  0EDC               	movlw	-36
 10681  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10682  0119A6  0EDD               	movlw	-35
 10683  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10684  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 10685  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 10686  0119BA                     	if	0	;tblptru may be non-zero
 10687  0119BA                     	endif
 10688  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10689  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 10690  0119BC  6EF8               	movwf	tblptru,c
 10691  0119BE                     	endif
 10692                           
 10693                           ;stkvar	_c @ sp[(-32)+31]
 10694  0119BE  0008               	tblrd		*
 10695  0119C0  0EFF               	movlw	-1
 10696  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 10697                           
 10698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 10699                           ;stkvar	_fmt @ sp[(-32)+-4]
 10700  0119C8  0EDC               	movlw	-36
 10701  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10702  0119D0  0EDD               	movlw	-35
 10703  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10704  0119D8  2ADE               	incf	postinc2,f,c
 10705  0119DA  0E00               	movlw	0
 10706  0119DC  22DD               	addwfc	postdec2,f,c
 10707                           
 10708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 10709                           ;stkvar	_ap @ sp[(-32)+-6]
 10710  0119DE  0EDA               	movlw	-38
 10711  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10712  0119E6  0EDB               	movlw	-37
 10713  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10714  0119EE  0E04               	movlw	4
 10715  0119F0  5EDE               	subwf	postinc2,f,c
 10716  0119F2  0E00               	movlw	0
 10717  0119F4  5ADD               	subwfb	postdec2,f,c
 10718  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 10719  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 10720  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10721  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10722  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 10723  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 10724  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 10725  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 10726                           
 10727                           ;stkvar	_f @ sp[(-32)+22]
 10728  011A26  0EF6               	movlw	-10
 10729  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 10730  011A2E  0EF7               	movlw	-9
 10731  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10732  011A36  0EF8               	movlw	-8
 10733  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10734  011A3E  0EF9               	movlw	-7
 10735  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 10736  011A46                     l11497:
 10737                           
 10738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 10739                           ;stkvar	_c @ sp[(-32)+31]
 10740  011A46  0EFF               	movlw	-1
 10741  011A48  50E3               	movf	plusw1,w,c
 10742  011A4A  6EE6               	movwf	postinc1,c
 10743                           
 10744                           ;stkvar	_f @ sp[(-33)+22]
 10745  011A4C  0EF5               	movlw	-11
 10746  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 10747  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 10748  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 10749  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 10750                           
 10751                           ;stkvar	_fp @ sp[(-37)+-2]
 10752  011A66  0ED9               	movlw	-39
 10753  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 10754  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 10755  011A74  EC00  F080         	call	_efgtoa	;wreg free
 10756  011A78  D3B6               	goto	l2225
 10757  011A7A                     l11501:
 10758                           
 10759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10760  011A7A  0E02               	movlw	2
 10761  011A7C  6EE6               	movwf	postinc1,c
 10762  011A7E  0E00               	movlw	0
 10763  011A80  6EE6               	movwf	postinc1,c
 10764  011A82  0EED               	movlw	low STR_64
 10765  011A84  6EE6               	movwf	postinc1,c
 10766  011A86  0EFF               	movlw	high STR_64
 10767  011A88  6EE6               	movwf	postinc1,c
 10768                           
 10769                           ;stkvar	_ct @ sp[(-36)+26]
 10770  011A8A  0EF6               	movlw	246
 10771  011A8C  24E1               	addwf	fsr1l,w,c
 10772  011A8E  6E01               	movwf	btemp^0,c
 10773  011A90  0EFF               	movlw	255
 10774  011A92  20E2               	addwfc	fsr1h,w,c
 10775  011A94  6E02               	movwf	(btemp+1)^0,c
 10776  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 10777  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10778  011AA2  EC56  F0B5         	call	_strncmp	;wreg free
 10779  011AA6  5001               	movf	btemp^0,w,c
 10780  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 10781  011AAA  A4D8               	btfss	status,2,c
 10782  011AAC  D096               	goto	l11521
 10783                           
 10784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10785                           ;stkvar	_fmt @ sp[(-32)+-4]
 10786  011AAE  0EDC               	movlw	-36
 10787  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10788  011AB6  0EDD               	movlw	-35
 10789  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10790  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 10791  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 10792  011ACA  0E01               	movlw	1
 10793  011ACC  260B               	addwf	(btemp+10)^0,f,c
 10794  011ACE  0E00               	movlw	0
 10795  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 10796  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10797  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10798  011ADE                     	if	0	;tblptru may be non-zero
 10799  011ADE                     	endif
 10800  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10801  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 10802  011AE0  6EF8               	movwf	tblptru,c
 10803  011AE2                     	endif
 10804                           
 10805                           ;stkvar	_c @ sp[(-32)+31]
 10806  011AE2  0008               	tblrd		*
 10807  011AE4  0EFF               	movlw	-1
 10808  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 10809  011AEC  0EBF               	movlw	191
 10810  011AEE  6E0B               	movwf	(btemp+10)^0,c
 10811  011AF0  0EFF               	movlw	255
 10812  011AF2  6E0C               	movwf	(btemp+11)^0,c
 10813                           
 10814                           ;stkvar	_fmt @ sp[(-32)+-4]
 10815  011AF4  0EDC               	movlw	-36
 10816  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10817  011AFC  0EDD               	movlw	-35
 10818  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10819  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 10820  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10821  011B10                     	if	0	;tblptru may be non-zero
 10822  011B10                     	endif
 10823  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10824  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 10825  011B12  6EF8               	movwf	tblptru,c
 10826  011B14                     	endif
 10827  011B14  0008               	tblrd		*
 10828  011B16  50F5               	movf	tablat,w,c
 10829  011B18  6E09               	movwf	(btemp+8)^0,c
 10830  011B1A  6A0A               	clrf	(btemp+9)^0,c
 10831  011B1C  500B               	movf	(btemp+10)^0,w,c
 10832  011B1E  2609               	addwf	(btemp+8)^0,f,c
 10833  011B20  500C               	movf	(btemp+11)^0,w,c
 10834  011B22  220A               	addwfc	(btemp+9)^0,f,c
 10835  011B24  500A               	movf	(btemp+9)^0,w,c
 10836  011B26  E106               	bnz	u11310
 10837  011B28  0E1A               	movlw	26
 10838  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 10839  011B2C  B0D8               	btfsc	status,0,c
 10840  011B2E  D002               	goto	u11310
 10841  011B30  0E01               	movlw	1
 10842  011B32  D001               	goto	u11320
 10843  011B34                     u11310:
 10844  011B34  0E00               	movlw	0
 10845  011B36                     u11320:
 10846  011B36  6E0B               	movwf	(btemp+10)^0,c
 10847  011B38  6A0C               	clrf	(btemp+11)^0,c
 10848                           
 10849                           ;stkvar	_vfpfcnvrt$5223 @ sp[(-32)+2]
 10850  011B3A  0EE2               	movlw	-30
 10851  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10852  011B42  0EE3               	movlw	-29
 10853  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 10854                           
 10855                           ;stkvar	_vfpfcnvrt$5223 @ sp[(-32)+2]
 10856  011B4A  0EE2               	movlw	-30
 10857  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 10858  011B52  0EE3               	movlw	-29
 10859  011B54  50E3               	movf	plusw1,w,c
 10860  011B56  1001               	iorwf	btemp^0,w,c
 10861                           
 10862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10863                           ;stkvar	_ap @ sp[(-32)+-6]
 10864                           
 10865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 10866                           
 10867                           ;stkvar	_f @ sp[(-32)+22]
 10868                           
 10869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 10870                           ;stkvar	_ap @ sp[(-32)+-6]
 10871  011B58  0EDA               	movlw	-38
 10872  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10873  011B60  0EDB               	movlw	-37
 10874  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 10875  011B68  0E04               	movlw	4
 10876  011B6A  5EDE               	subwf	postinc2,f,c
 10877  011B6C  0E00               	movlw	0
 10878  011B6E  5ADD               	subwfb	postdec2,f,c
 10879  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 10880  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 10881  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10882  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10883  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 10884  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 10885  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 10886  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 10887                           
 10888                           ;stkvar	_f @ sp[(-32)+22]
 10889  011BA0  0EF6               	movlw	-10
 10890  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 10891  011BA8  0EF7               	movlw	-9
 10892  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10893  011BB0  0EF8               	movlw	-8
 10894  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10895  011BB8  0EF9               	movlw	-7
 10896  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10897                           
 10898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 10899                           ;stkvar	_fmt @ sp[(-32)+-4]
 10900  011BC0  0EDC               	movlw	-36
 10901  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10902  011BC8  0EDD               	movlw	-35
 10903  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10904  011BD0  0E02               	movlw	2
 10905  011BD2  26DE               	addwf	postinc2,f,c
 10906  011BD4  0E00               	movlw	0
 10907  011BD6  22DD               	addwfc	postdec2,f,c
 10908  011BD8  D736               	goto	l11497
 10909  011BDA                     l11521:
 10910                           
 10911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10912                           ;stkvar	_fmt @ sp[(-32)+-4]
 10913  011BDA  0EDC               	movlw	-36
 10914  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10915  011BE2  0EDD               	movlw	-35
 10916  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10917  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10918  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10919  011BF6                     	if	0	;tblptru may be non-zero
 10920  011BF6                     	endif
 10921  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10922  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 10923  011BF8  6EF8               	movwf	tblptru,c
 10924  011BFA                     	endif
 10925  011BFA  0008               	tblrd		*
 10926  011BFC  50F5               	movf	tablat,w,c
 10927  011BFE  0A73               	xorlw	115
 10928  011C00  A4D8               	btfss	status,2,c
 10929  011C02  D042               	goto	l11531
 10930                           
 10931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10932                           ;stkvar	_fmt @ sp[(-32)+-4]
 10933  011C04  0EDC               	movlw	-36
 10934  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 10935  011C0C  0EDD               	movlw	-35
 10936  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10937  011C14  2ADE               	incf	postinc2,f,c
 10938  011C16  0E00               	movlw	0
 10939  011C18  22DD               	addwfc	postdec2,f,c
 10940                           
 10941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10942                           ;stkvar	_ap @ sp[(-32)+-6]
 10943  011C1A  0EDA               	movlw	-38
 10944  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10945  011C22  0EDB               	movlw	-37
 10946  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 10947  011C2A  0E02               	movlw	2
 10948  011C2C  5EDE               	subwf	postinc2,f,c
 10949  011C2E  0E00               	movlw	0
 10950  011C30  5ADD               	subwfb	postdec2,f,c
 10951  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 10952  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 10953  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10954  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10955  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 10956  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 10957                           
 10958                           ;stkvar	_cp @ sp[(-32)+29]
 10959  011C56  0EFE               	movlw	-2
 10960  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 10961  011C5E  0EFD               	movlw	-3
 10962  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10963                           
 10964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10965                           ;stkvar	_cp @ sp[(-32)+29]
 10966  011C66  0EFD               	movlw	-3
 10967  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 10968  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 10969                           
 10970                           ;stkvar	_fp @ sp[(-34)+-2]
 10971  011C74  0EDC               	movlw	-36
 10972  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 10973  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10974  011C82  EC5D  F0B0         	call	_stoa	;wreg free
 10975  011C86  D2AF               	goto	l2225
 10976  011C88                     l11531:
 10977                           
 10978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 10979                           ;stkvar	_fmt @ sp[(-32)+-4]
 10980  011C88  0EDC               	movlw	-36
 10981  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10982  011C90  0EDD               	movlw	-35
 10983  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 10984  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 10985  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10986  011CA4                     	if	0	;tblptru may be non-zero
 10987  011CA4                     	endif
 10988  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10989  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 10990  011CA6  6EF8               	movwf	tblptru,c
 10991  011CA8                     	endif
 10992  011CA8  0008               	tblrd		*
 10993  011CAA  50F5               	movf	tablat,w,c
 10994  011CAC  0A75               	xorlw	117
 10995  011CAE  A4D8               	btfss	status,2,c
 10996  011CB0  D07C               	goto	l11541
 10997                           
 10998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 10999                           ;stkvar	_fmt @ sp[(-32)+-4]
 11000  011CB2  0EDC               	movlw	-36
 11001  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11002  011CBA  0EDD               	movlw	-35
 11003  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11004  011CC2  2ADE               	incf	postinc2,f,c
 11005  011CC4  0E00               	movlw	0
 11006  011CC6  22DD               	addwfc	postdec2,f,c
 11007                           
 11008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11009                           ;stkvar	_ap @ sp[(-32)+-6]
 11010  011CC8  0EDA               	movlw	-38
 11011  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11012  011CD0  0EDB               	movlw	-37
 11013  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11014  011CD8  0E02               	movlw	2
 11015  011CDA  5EDE               	subwf	postinc2,f,c
 11016  011CDC  0E00               	movlw	0
 11017  011CDE  5ADD               	subwfb	postdec2,f,c
 11018  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 11019  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 11020  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11021  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11022  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 11023  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 11024  011D04  500B               	movf	(btemp+10)^0,w,c
 11025  011D06  6E11               	movwf	(btemp+16)^0,c
 11026  011D08  500C               	movf	(btemp+11)^0,w,c
 11027  011D0A  6E12               	movwf	(btemp+17)^0,c
 11028  011D0C  6A13               	clrf	(btemp+18)^0,c
 11029  011D0E  6A14               	clrf	(btemp+19)^0,c
 11030  011D10  6A15               	clrf	(btemp+20)^0,c
 11031  011D12  6A16               	clrf	(btemp+21)^0,c
 11032  011D14  6A17               	clrf	(btemp+22)^0,c
 11033  011D16  6A18               	clrf	(btemp+23)^0,c
 11034                           
 11035                           ;stkvar	_llu @ sp[(-32)+6]
 11036  011D18  0EE6               	movlw	-26
 11037  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11038  011D20  0EE7               	movlw	-25
 11039  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11040  011D28  0EE8               	movlw	-24
 11041  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11042  011D30  0EE9               	movlw	-23
 11043  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 11044  011D38  0EEA               	movlw	-22
 11045  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11046  011D40  0EEB               	movlw	-21
 11047  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11048  011D48  0EEC               	movlw	-20
 11049  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11050  011D50  0EED               	movlw	-19
 11051  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 11052                           
 11053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 11054                           ;stkvar	_llu @ sp[(-32)+6]
 11055  011D58  50E1               	movf	fsr1l,w,c
 11056  011D5A  0FE6               	addlw	-26
 11057  011D5C  6ED9               	movwf	fsr2l,c
 11058  011D5E  50E2               	movf	fsr1h,w,c
 11059  011D60  6EDA               	movwf	fsr2h,c
 11060  011D62  0EFF               	movlw	255
 11061  011D64  22DA               	addwfc	fsr2h,f,c
 11062  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 11063  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11064  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 11065  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 11066  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11067  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 11068  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 11069  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 11070                           
 11071                           ;stkvar	_fp @ sp[(-40)+-2]
 11072  011D96  0ED6               	movlw	-42
 11073  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11074  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11075  011DA4  ECDA  F0AB         	call	_utoa	;wreg free
 11076  011DA8  D21E               	goto	l2225
 11077  011DAA                     l11541:
 11078                           
 11079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11080  011DAA  0E02               	movlw	2
 11081  011DAC  6EE6               	movwf	postinc1,c
 11082  011DAE  0E00               	movlw	0
 11083  011DB0  6EE6               	movwf	postinc1,c
 11084  011DB2  0EF3               	movlw	low STR_69
 11085  011DB4  6EE6               	movwf	postinc1,c
 11086  011DB6  0EFF               	movlw	high STR_69
 11087  011DB8  6EE6               	movwf	postinc1,c
 11088                           
 11089                           ;stkvar	_fmt @ sp[(-36)+-4]
 11090  011DBA  0ED8               	movlw	-40
 11091  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11092  011DC2  0ED9               	movlw	-39
 11093  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11094  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 11095  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 11096  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11097  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11098  011DE2  EC56  F0B5         	call	_strncmp	;wreg free
 11099  011DE6  5001               	movf	btemp^0,w,c
 11100  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 11101  011DEA  A4D8               	btfss	status,2,c
 11102  011DEC  D039               	goto	l11551
 11103                           
 11104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 11105                           ;stkvar	_fmt @ sp[(-32)+-4]
 11106  011DEE  0EDC               	movlw	-36
 11107  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11108  011DF6  0EDD               	movlw	-35
 11109  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11110  011DFE  0E02               	movlw	2
 11111  011E00  26DE               	addwf	postinc2,f,c
 11112  011E02  0E00               	movlw	0
 11113  011E04  22DD               	addwfc	postdec2,f,c
 11114                           
 11115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11116                           ;stkvar	_ap @ sp[(-32)+-6]
 11117  011E06  0EDA               	movlw	-38
 11118  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 11119  011E0E  0EDB               	movlw	-37
 11120  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 11121  011E16  0E04               	movlw	4
 11122  011E18  5EDE               	subwf	postinc2,f,c
 11123  011E1A  0E00               	movlw	0
 11124  011E1C  5ADD               	subwfb	postdec2,f,c
 11125  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11126  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 11127  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11128  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11129  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 11130  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 11131  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 11132  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 11133  011E4E  5009               	movf	(btemp+8)^0,w,c
 11134  011E50  6E11               	movwf	(btemp+16)^0,c
 11135  011E52  500A               	movf	(btemp+9)^0,w,c
 11136  011E54  6E12               	movwf	(btemp+17)^0,c
 11137  011E56  500B               	movf	(btemp+10)^0,w,c
 11138  011E58  6E13               	movwf	(btemp+18)^0,c
 11139  011E5A  500C               	movf	(btemp+11)^0,w,c
 11140  011E5C  6E14               	movwf	(btemp+19)^0,c
 11141  011E5E  D758               	goto	L7
 11142  011E60                     l11551:
 11143                           
 11144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 11145                           ;stkvar	_fmt @ sp[(-32)+-4]
 11146  011E60  0EDC               	movlw	-36
 11147  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11148  011E68  0EDD               	movlw	-35
 11149  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11150  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 11151  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 11152  011E7C                     	if	0	;tblptru may be non-zero
 11153  011E7C                     	endif
 11154  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11155  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 11156  011E7E  6EF8               	movwf	tblptru,c
 11157  011E80                     	endif
 11158  011E80  0008               	tblrd		*
 11159  011E82  50F5               	movf	tablat,w,c
 11160  011E84  0A78               	xorlw	120
 11161  011E86  B4D8               	btfsc	status,2,c
 11162  011E88  D015               	goto	u11380
 11163                           
 11164                           ;stkvar	_fmt @ sp[(-32)+-4]
 11165  011E8A  0EDC               	movlw	-36
 11166  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11167  011E92  0EDD               	movlw	-35
 11168  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 11169  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11170  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11171  011EA6                     	if	0	;tblptru may be non-zero
 11172  011EA6                     	endif
 11173  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11174  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 11175  011EA8  6EF8               	movwf	tblptru,c
 11176  011EAA                     	endif
 11177  011EAA  0008               	tblrd		*
 11178  011EAC  50F5               	movf	tablat,w,c
 11179  011EAE  0A58               	xorlw	88
 11180  011EB0  A4D8               	btfss	status,2,c
 11181  011EB2  D094               	goto	l11565
 11182  011EB4                     u11380:
 11183                           
 11184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 11185                           ;stkvar	_fmt @ sp[(-32)+-4]
 11186  011EB4  0EDC               	movlw	-36
 11187  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11188  011EBC  0EDD               	movlw	-35
 11189  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11190  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11191  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11192  011ED0                     	if	0	;tblptru may be non-zero
 11193  011ED0                     	endif
 11194  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11195  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 11196  011ED2  6EF8               	movwf	tblptru,c
 11197  011ED4                     	endif
 11198                           
 11199                           ;stkvar	_c @ sp[(-32)+31]
 11200  011ED4  0008               	tblrd		*
 11201  011ED6  0EFF               	movlw	-1
 11202  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 11203                           
 11204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 11205                           ;stkvar	_fmt @ sp[(-32)+-4]
 11206  011EDE  0EDC               	movlw	-36
 11207  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11208  011EE6  0EDD               	movlw	-35
 11209  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11210  011EEE  2ADE               	incf	postinc2,f,c
 11211  011EF0  0E00               	movlw	0
 11212  011EF2  22DD               	addwfc	postdec2,f,c
 11213                           
 11214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11215                           ;stkvar	_ap @ sp[(-32)+-6]
 11216  011EF4  0EDA               	movlw	-38
 11217  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11218  011EFC  0EDB               	movlw	-37
 11219  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11220  011F04  0E02               	movlw	2
 11221  011F06  5EDE               	subwf	postinc2,f,c
 11222  011F08  0E00               	movlw	0
 11223  011F0A  5ADD               	subwfb	postdec2,f,c
 11224  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 11225  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 11226  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11227  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11228  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 11229  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 11230  011F30  500B               	movf	(btemp+10)^0,w,c
 11231  011F32  6E11               	movwf	(btemp+16)^0,c
 11232  011F34  500C               	movf	(btemp+11)^0,w,c
 11233  011F36  6E12               	movwf	(btemp+17)^0,c
 11234  011F38  6A13               	clrf	(btemp+18)^0,c
 11235  011F3A  6A14               	clrf	(btemp+19)^0,c
 11236  011F3C  6A15               	clrf	(btemp+20)^0,c
 11237  011F3E  6A16               	clrf	(btemp+21)^0,c
 11238  011F40  6A17               	clrf	(btemp+22)^0,c
 11239  011F42  6A18               	clrf	(btemp+23)^0,c
 11240                           
 11241                           ;stkvar	_llu @ sp[(-32)+6]
 11242  011F44  0EE6               	movlw	-26
 11243  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 11244  011F4C  0EE7               	movlw	-25
 11245  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11246  011F54  0EE8               	movlw	-24
 11247  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11248  011F5C  0EE9               	movlw	-23
 11249  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 11250  011F64  0EEA               	movlw	-22
 11251  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 11252  011F6C  0EEB               	movlw	-21
 11253  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11254  011F74  0EEC               	movlw	-20
 11255  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11256  011F7C  0EED               	movlw	-19
 11257  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 11258                           
 11259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 11260                           ;stkvar	_c @ sp[(-32)+31]
 11261  011F84  0EFF               	movlw	-1
 11262  011F86  50E3               	movf	plusw1,w,c
 11263  011F88  6EE6               	movwf	postinc1,c
 11264                           
 11265                           ;stkvar	_llu @ sp[(-33)+6]
 11266  011F8A  50E1               	movf	fsr1l,w,c
 11267  011F8C  0FE5               	addlw	-27
 11268  011F8E  6ED9               	movwf	fsr2l,c
 11269  011F90  50E2               	movf	fsr1h,w,c
 11270  011F92  6EDA               	movwf	fsr2h,c
 11271  011F94  0EFF               	movlw	255
 11272  011F96  22DA               	addwfc	fsr2h,f,c
 11273  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 11274  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11275  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 11276  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11277  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11278  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11279  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 11280  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 11281                           
 11282                           ;stkvar	_fp @ sp[(-41)+-2]
 11283  011FC8  0ED5               	movlw	-43
 11284  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 11285  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 11286  011FD6  EC47  F0A8         	call	_xtoa	;wreg free
 11287  011FDA  D105               	goto	l2225
 11288  011FDC                     l11565:
 11289                           
 11290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 11291  011FDC  0E02               	movlw	2
 11292  011FDE  6EE6               	movwf	postinc1,c
 11293  011FE0  0E00               	movlw	0
 11294  011FE2  6EE6               	movwf	postinc1,c
 11295  011FE4  0EF6               	movlw	low STR_74
 11296  011FE6  6EE6               	movwf	postinc1,c
 11297  011FE8  0EFF               	movlw	high STR_74
 11298  011FEA  6EE6               	movwf	postinc1,c
 11299                           
 11300                           ;stkvar	_fmt @ sp[(-36)+-4]
 11301  011FEC  0ED8               	movlw	-40
 11302  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11303  011FF4  0ED9               	movlw	-39
 11304  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11305  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 11306  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 11307  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11308  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11309  012014  EC56  F0B5         	call	_strncmp	;wreg free
 11310  012018  5001               	movf	btemp^0,w,c
 11311  01201A  1002               	iorwf	(btemp+1)^0,w,c
 11312  01201C  B4D8               	btfsc	status,2,c
 11313  01201E  D022               	goto	u11400
 11314  012020  0E02               	movlw	2
 11315  012022  6EE6               	movwf	postinc1,c
 11316  012024  0E00               	movlw	0
 11317  012026  6EE6               	movwf	postinc1,c
 11318  012028  0EE7               	movlw	low STR_78
 11319  01202A  6EE6               	movwf	postinc1,c
 11320  01202C  0EFF               	movlw	high STR_78
 11321  01202E  6EE6               	movwf	postinc1,c
 11322                           
 11323                           ;stkvar	_fmt @ sp[(-36)+-4]
 11324  012030  0ED8               	movlw	-40
 11325  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 11326  012038  0ED9               	movlw	-39
 11327  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11328  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 11329  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 11330  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11331  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 11332  012058  EC56  F0B5         	call	_strncmp	;wreg free
 11333  01205C  5001               	movf	btemp^0,w,c
 11334  01205E  1002               	iorwf	(btemp+1)^0,w,c
 11335  012060  A4D8               	btfss	status,2,c
 11336  012062  D058               	goto	l11579
 11337  012064                     u11400:
 11338                           
 11339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 11340                           ;stkvar	_fmt @ sp[(-32)+-4]
 11341  012064  0EDC               	movlw	-36
 11342  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 11343  01206C  0EDD               	movlw	-35
 11344  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11345  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 11346  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 11347  012080  0E01               	movlw	1
 11348  012082  260B               	addwf	(btemp+10)^0,f,c
 11349  012084  0E00               	movlw	0
 11350  012086  220C               	addwfc	(btemp+11)^0,f,c
 11351  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11352  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11353  012094                     	if	0	;tblptru may be non-zero
 11354  012094                     	endif
 11355  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11356  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 11357  012096  6EF8               	movwf	tblptru,c
 11358  012098                     	endif
 11359                           
 11360                           ;stkvar	_c @ sp[(-32)+31]
 11361  012098  0008               	tblrd		*
 11362  01209A  0EFF               	movlw	-1
 11363  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 11364                           
 11365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 11366                           ;stkvar	_fmt @ sp[(-32)+-4]
 11367  0120A2  0EDC               	movlw	-36
 11368  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11369  0120AA  0EDD               	movlw	-35
 11370  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11371  0120B2  0E02               	movlw	2
 11372  0120B4  26DE               	addwf	postinc2,f,c
 11373  0120B6  0E00               	movlw	0
 11374  0120B8  22DD               	addwfc	postdec2,f,c
 11375                           
 11376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11377                           ;stkvar	_ap @ sp[(-32)+-6]
 11378  0120BA  0EDA               	movlw	-38
 11379  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11380  0120C2  0EDB               	movlw	-37
 11381  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11382  0120CA  0E04               	movlw	4
 11383  0120CC  5EDE               	subwf	postinc2,f,c
 11384  0120CE  0E00               	movlw	0
 11385  0120D0  5ADD               	subwfb	postdec2,f,c
 11386  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11387  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11388  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11389  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11390  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 11391  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 11392  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11393  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 11394  012102  5009               	movf	(btemp+8)^0,w,c
 11395  012104  6E11               	movwf	(btemp+16)^0,c
 11396  012106  500A               	movf	(btemp+9)^0,w,c
 11397  012108  6E12               	movwf	(btemp+17)^0,c
 11398  01210A  500B               	movf	(btemp+10)^0,w,c
 11399  01210C  6E13               	movwf	(btemp+18)^0,c
 11400  01210E  500C               	movf	(btemp+11)^0,w,c
 11401  012110  6E14               	movwf	(btemp+19)^0,c
 11402  012112  D714               	goto	L8
 11403  012114                     l11579:
 11404                           
 11405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 11406                           ;stkvar	_fmt @ sp[(-32)+-4]
 11407  012114  0EDC               	movlw	-36
 11408  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 11409  01211C  0EDD               	movlw	-35
 11410  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11411  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 11412  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11413  012130                     	if	0	;tblptru may be non-zero
 11414  012130                     	endif
 11415  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11416  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 11417  012132  6EF8               	movwf	tblptru,c
 11418  012134                     	endif
 11419  012134  0008               	tblrd		*
 11420  012136  50F5               	movf	tablat,w,c
 11421  012138  0A25               	xorlw	37
 11422  01213A  A4D8               	btfss	status,2,c
 11423  01213C  D01A               	goto	l11589
 11424                           
 11425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 11426                           ;stkvar	_fmt @ sp[(-32)+-4]
 11427  01213E  0EDC               	movlw	-36
 11428  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 11429  012146  0EDD               	movlw	-35
 11430  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 11431  01214E  2ADE               	incf	postinc2,f,c
 11432  012150  0E00               	movlw	0
 11433  012152  22DD               	addwfc	postdec2,f,c
 11434                           
 11435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 11436                           ;stkvar	_fp @ sp[(-32)+-2]
 11437  012154  0EDE               	movlw	-34
 11438  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 11439  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 11440  012162  0E25               	movlw	37
 11441  012164  6EE6               	movwf	postinc1,c
 11442  012166  0E00               	movlw	0
 11443  012168  6EE6               	movwf	postinc1,c
 11444  01216A  EC1F  F0C1         	call	_fputc	;wreg free
 11445  01216E                     l11585:
 11446                           
 11447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 11448  01216E  0E01               	movlw	1
 11449  012170  D00C               	goto	L9
 11450  012172                     l11589:
 11451                           
 11452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11453                           ;stkvar	_fmt @ sp[(-32)+-4]
 11454  012172  0EDC               	movlw	-36
 11455  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 11456  01217A  0EDD               	movlw	-35
 11457  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11458  012182  2ADE               	incf	postinc2,f,c
 11459  012184  0E00               	movlw	0
 11460  012186  22DD               	addwfc	postdec2,f,c
 11461                           
 11462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11463  012188  0E00               	movlw	0
 11464  01218A                     L9:
 11465  01218A  6E01               	movwf	btemp^0,c
 11466  01218C  0E00               	movlw	0
 11467  01218E  6E02               	movwf	(btemp+1)^0,c
 11468  012190  D02A               	goto	l2225
 11469  012192                     l11595:
 11470                           
 11471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11472                           ;stkvar	_fp @ sp[(-32)+-2]
 11473  012192  0EDE               	movlw	-34
 11474  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 11475  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 11476                           
 11477                           ;stkvar	_fmt @ sp[(-34)+-4]
 11478  0121A0  0EDA               	movlw	-38
 11479  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11480  0121A8  0EDB               	movlw	-37
 11481  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11482  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11483  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11484  0121BC                     	if	0	;tblptru may be non-zero
 11485  0121BC                     	endif
 11486  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11487  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 11488  0121BE  6EF8               	movwf	tblptru,c
 11489  0121C0                     	endif
 11490  0121C0  0008               	tblrd		*
 11491  0121C2  50F5               	movf	tablat,w,c
 11492  0121C4  6EE6               	movwf	postinc1,c
 11493  0121C6  0E00               	movlw	0
 11494  0121C8  6EE6               	movwf	postinc1,c
 11495  0121CA  EC1F  F0C1         	call	_fputc	;wreg free
 11496                           
 11497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11498                           ;stkvar	_fmt @ sp[(-32)+-4]
 11499  0121CE  0EDC               	movlw	-36
 11500  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11501  0121D6  0EDD               	movlw	-35
 11502  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11503  0121DE  2ADE               	incf	postinc2,f,c
 11504  0121E0  0E00               	movlw	0
 11505  0121E2  22DD               	addwfc	postdec2,f,c
 11506  0121E4  D7C4               	goto	l11585
 11507  0121E6                     l2225:
 11508                           
 11509                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11510  0121E6  0EDA               	movlw	218
 11511  0121E8  26E1               	addwf	fsr1l,f,c
 11512  0121EA  0EFF               	movlw	255
 11513  0121EC  22E2               	addwfc	fsr1h,f,c
 11514  0121EE  0012               	return		;funcret
 11515  0121F0                     __end_of_vfpfcnvrt:
 11516                           	opt callstack 0
 11517                           
 11518 ;; *************** function _xtoa *****************
 11519 ;; Defined at:
 11520 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11521 ;; Parameters:    Size  Location     Type
 11522 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11523 ;;		 -> f(6), NULL(0), 
 11524 ;;  d               8  [STACK] unsigned long long 
 11525 ;;  x               1  [STACK] unsigned char 
 11526 ;; Auto vars:     Size  Location     Type
 11527 ;;  n               8  [STACK] unsigned long long 
 11528 ;;  c               2  [STACK] int 
 11529 ;;  i               2  [STACK] int 
 11530 ;;  w               2  [STACK] int 
 11531 ;;  p               2  [STACK] int 
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  2  [STACK] int 
 11534 ;; Registers used:
 11535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11536 ;; Tracked objects:
 11537 ;;		On entry : 0/0
 11538 ;;		On exit  : 0/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11545 ;;Total ram usage:        0 bytes
 11546 ;; Hardware stack levels used:    1
 11547 ;; Hardware stack levels required when called:   20
 11548 ;; This function calls:
 11549 ;;		_isalpha
 11550 ;;		_isupper
 11551 ;;		_pad
 11552 ;;		_toupper
 11553 ;; This function is called by:
 11554 ;;		_vfpfcnvrt
 11555 ;; This function uses a reentrant model
 11556 ;;
 11557                           
 11558                           	psect	text44
 11559  01508E                     __ptext44:
 11560                           	opt callstack 0
 11561  01508E                     _xtoa:
 11562                           	opt callstack 0
 11563                           
 11564                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11565  01508E  0E14               	movlw	20
 11566  015090  26E1               	addwf	fsr1l,f,c
 11567  015092  0E00               	movlw	0
 11568  015094  22E2               	addwfc	fsr1h,f,c
 11569                           
 11570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11571                           
 11572                           ;incstack = 0
 11573 ;; hardware stack exceeded
 11574  015096  AE24               	btfss	(_prec+1)^0,7,c
 11575                           
 11576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11577  015098  9225               	bcf	_flags^0,1,c
 11578                           
 11579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11580  01509A  BE24               	btfsc	(_prec+1)^0,7,c
 11581  01509C  D005               	goto	u10920
 11582  01509E  5024               	movf	(_prec+1)^0,w,c
 11583  0150A0  E110               	bnz	l11315
 11584  0150A2  0423               	decf	_prec^0,w,c
 11585  0150A4  B0D8               	btfsc	status,0,c
 11586  0150A6  D00D               	goto	l11315
 11587  0150A8                     u10920:
 11588  0150A8  0E01               	movlw	1
 11589  0150AA  6E0B               	movwf	(btemp+10)^0,c
 11590  0150AC  0E00               	movlw	0
 11591  0150AE  6E0C               	movwf	(btemp+11)^0,c
 11592                           
 11593                           ;stkvar	_p @ sp[(-20)+18]
 11594  0150B0  0EFE               	movlw	-2
 11595  0150B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11596  0150B8  0EFF               	movlw	-1
 11597  0150BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11598  0150C0  D008               	goto	l2175
 11599  0150C2                     l11315:
 11600                           
 11601                           ;stkvar	_p @ sp[(-20)+18]
 11602  0150C2  0EFE               	movlw	-2
 11603  0150C4  0060  F08F  FFE3   	movff	_prec,plusw1
 11604  0150CA  0EFF               	movlw	-1
 11605  0150CC  0060  F093  FFE3   	movff	_prec+1,plusw1
 11606  0150D2                     l2175:
 11607                           
 11608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11609                           ;stkvar	_w @ sp[(-20)+16]
 11610  0150D2  0EFC               	movlw	-4
 11611  0150D4  0060  F087  FFE3   	movff	_width,plusw1
 11612  0150DA  0EFD               	movlw	-3
 11613  0150DC  0060  F08B  FFE3   	movff	_width+1,plusw1
 11614                           
 11615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11616  0150E2  A825               	btfss	_flags^0,4,c
 11617  0150E4  D00B               	goto	l11321
 11618                           
 11619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 11620                           ;stkvar	_w @ sp[(-20)+16]
 11621  0150E6  50E1               	movf	fsr1l,w,c
 11622  0150E8  0FFC               	addlw	-4
 11623  0150EA  6ED9               	movwf	fsr2l,c
 11624  0150EC  50E2               	movf	fsr1h,w,c
 11625  0150EE  6EDA               	movwf	fsr2h,c
 11626  0150F0  0EFF               	movlw	255
 11627  0150F2  22DA               	addwfc	fsr2h,f,c
 11628  0150F4  0EFE               	movlw	254
 11629  0150F6  26DE               	addwf	postinc2,f,c
 11630  0150F8  0EFF               	movlw	255
 11631  0150FA  22DD               	addwfc	postdec2,f,c
 11632  0150FC                     l11321:
 11633                           
 11634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 11635                           ;stkvar	_d @ sp[(-20)+-10]
 11636  0150FC  0EE2               	movlw	226
 11637  0150FE  24E1               	addwf	fsr1l,w,c
 11638  015100  6ED9               	movwf	fsr2l,c
 11639  015102  0EFF               	movlw	255
 11640  015104  20E2               	addwfc	fsr1h,w,c
 11641  015106  6EDA               	movwf	fsr2h,c
 11642                           
 11643                           ;stkvar	_n @ sp[(-20)+4]
 11644  015108  0E08               	movlw	8
 11645  01510A  6E01               	movwf	btemp^0,c
 11646  01510C  0EF0               	movlw	-16
 11647  01510E                     us1094999:
 11648  01510E  006F FF7B FFE3     	movff	postinc2,plusw1
 11649  015114  28E8               	incf	wreg,w,c
 11650  015116  2E01               	decfsz	btemp^0,f,c
 11651  015118  D7FA               	bra	us1094999
 11652                           
 11653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 11654  01511A  0E4F               	movlw	79
 11655  01511C  6E0B               	movwf	(btemp+10)^0,c
 11656  01511E  0E00               	movlw	0
 11657  015120  6E0C               	movwf	(btemp+11)^0,c
 11658                           
 11659                           ;stkvar	_i @ sp[(-20)+14]
 11660  015122  0EFA               	movlw	-6
 11661  015124  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11662  01512A  0EFB               	movlw	-5
 11663  01512C  0060  F033  FFE3   	movff	btemp+11,plusw1
 11664                           
 11665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 11666  015132  0103               	movlb	3	; () banked
 11667  015134  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11668                           
 11669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11670  015136  D0EE               	goto	l11359
 11671  015138                     l11327:
 11672                           
 11673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 11674                           ;stkvar	_i @ sp[(-20)+14]
 11675  015138  50E1               	movf	fsr1l,w,c
 11676  01513A  0FFA               	addlw	-6
 11677  01513C  6ED9               	movwf	fsr2l,c
 11678  01513E  50E2               	movf	fsr1h,w,c
 11679  015140  6EDA               	movwf	fsr2h,c
 11680  015142  0EFF               	movlw	255
 11681  015144  22DA               	addwfc	fsr2h,f,c
 11682  015146  06DE               	decf	postinc2,f,c
 11683  015148  0E00               	movlw	0
 11684  01514A  5ADD               	subwfb	postdec2,f,c
 11685                           
 11686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 11687                           ;stkvar	_n @ sp[(-20)+4]
 11688  01514C  0EF0               	movlw	-16
 11689  01514E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11690  015154  0EF1               	movlw	-15
 11691  015156  006F FF8C  F00C    	movff	plusw1,btemp+11
 11692  01515C  0E0F               	movlw	15
 11693  01515E  160B               	andwf	(btemp+10)^0,f,c
 11694  015160  0E00               	movlw	0
 11695  015162  160C               	andwf	(btemp+11)^0,f,c
 11696                           
 11697                           ;stkvar	_c @ sp[(-20)+12]
 11698  015164  0EF8               	movlw	-8
 11699  015166  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11700  01516C  0EF9               	movlw	-7
 11701  01516E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11702                           
 11703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 11704                           ;stkvar	_c @ sp[(-20)+12]
 11705  015174  0EF9               	movlw	-7
 11706  015176  BEE3               	btfsc	plusw1,7,c
 11707  015178  D00F               	goto	l11335
 11708  01517A  0EF9               	movlw	-7
 11709  01517C  50E3               	movf	plusw1,w,c
 11710  01517E  E108               	bnz	u10950
 11711  015180  0EF8               	movlw	-8
 11712  015182  006F FF8C  F001    	movff	plusw1,btemp
 11713  015188  0E0A               	movlw	10
 11714  01518A  5E01               	subwf	btemp^0,f,c
 11715  01518C  A0D8               	btfss	status,0,c
 11716  01518E  D004               	goto	l11335
 11717  015190                     u10950:
 11718                           
 11719                           ;stkvar	_c @ sp[(-20)+12]
 11720  015190  0EF8               	movlw	-8
 11721  015192  50E3               	movf	plusw1,w,c
 11722  015194  0F57               	addlw	87
 11723  015196  D003               	goto	L10
 11724  015198                     l11335:
 11725                           
 11726                           ;stkvar	_c @ sp[(-20)+12]
 11727  015198  0EF8               	movlw	-8
 11728  01519A  50E3               	movf	plusw1,w,c
 11729  01519C  0F30               	addlw	48
 11730  01519E                     L10:
 11731  01519E  6E0B               	movwf	(btemp+10)^0,c
 11732  0151A0  0EF9               	movlw	-7
 11733  0151A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11734  0151A8  0E00               	movlw	0
 11735  0151AA  220C               	addwfc	(btemp+11)^0,f,c
 11736                           
 11737                           ;stkvar	_c @ sp[(-20)+12]
 11738  0151AC  0EF8               	movlw	-8
 11739  0151AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11740  0151B4  0EF9               	movlw	-7
 11741  0151B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11742  0151BC  0EBF               	movlw	191
 11743  0151BE  6E0B               	movwf	(btemp+10)^0,c
 11744  0151C0  0EFF               	movlw	255
 11745  0151C2  6E0C               	movwf	(btemp+11)^0,c
 11746                           
 11747                           ;stkvar	_x @ sp[(-20)+-11]
 11748  0151C4  0EE1               	movlw	-31
 11749  0151C6  50E3               	movf	plusw1,w,c
 11750  0151C8  6E09               	movwf	(btemp+8)^0,c
 11751  0151CA  6A0A               	clrf	(btemp+9)^0,c
 11752  0151CC  500B               	movf	(btemp+10)^0,w,c
 11753  0151CE  2609               	addwf	(btemp+8)^0,f,c
 11754  0151D0  500C               	movf	(btemp+11)^0,w,c
 11755  0151D2  220A               	addwfc	(btemp+9)^0,f,c
 11756  0151D4  500A               	movf	(btemp+9)^0,w,c
 11757  0151D6  E106               	bnz	u10960
 11758  0151D8  0E1A               	movlw	26
 11759  0151DA  5C09               	subwf	(btemp+8)^0,w,c
 11760  0151DC  B0D8               	btfsc	status,0,c
 11761  0151DE  D002               	goto	u10960
 11762  0151E0  0E01               	movlw	1
 11763  0151E2  D001               	goto	u10970
 11764  0151E4                     u10960:
 11765  0151E4  0E00               	movlw	0
 11766  0151E6                     u10970:
 11767  0151E6  6E0B               	movwf	(btemp+10)^0,c
 11768  0151E8  6A0C               	clrf	(btemp+11)^0,c
 11769                           
 11770                           ;stkvar	_xtoa$5196 @ sp[(-20)+2]
 11771  0151EA  0EEE               	movlw	-18
 11772  0151EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11773  0151F2  0EEF               	movlw	-17
 11774  0151F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11775                           
 11776                           ;stkvar	_xtoa$5196 @ sp[(-20)+2]
 11777  0151FA  0EEE               	movlw	-18
 11778  0151FC  006F FF8C  F001    	movff	plusw1,btemp
 11779  015202  0EEF               	movlw	-17
 11780  015204  50E3               	movf	plusw1,w,c
 11781  015206  1001               	iorwf	btemp^0,w,c
 11782  015208  B4D8               	btfsc	status,2,c
 11783  01520A  D041               	goto	l11351
 11784  01520C  0E9F               	movlw	159
 11785  01520E  6E0B               	movwf	(btemp+10)^0,c
 11786  015210  0EFF               	movlw	255
 11787  015212  6E0C               	movwf	(btemp+11)^0,c
 11788                           
 11789                           ;stkvar	_c @ sp[(-20)+12]
 11790  015214  0EF8               	movlw	-8
 11791  015216  006F FF8C  F009    	movff	plusw1,btemp+8
 11792  01521C  0EF9               	movlw	-7
 11793  01521E  006F FF8C  F00A    	movff	plusw1,btemp+9
 11794  015224  0E20               	movlw	32
 11795  015226  1209               	iorwf	(btemp+8)^0,f,c
 11796  015228  0E00               	movlw	0
 11797  01522A  120A               	iorwf	(btemp+9)^0,f,c
 11798  01522C  500B               	movf	(btemp+10)^0,w,c
 11799  01522E  2609               	addwf	(btemp+8)^0,f,c
 11800  015230  500C               	movf	(btemp+11)^0,w,c
 11801  015232  220A               	addwfc	(btemp+9)^0,f,c
 11802  015234  500A               	movf	(btemp+9)^0,w,c
 11803  015236  E106               	bnz	u10990
 11804  015238  0E1A               	movlw	26
 11805  01523A  5C09               	subwf	(btemp+8)^0,w,c
 11806  01523C  B0D8               	btfsc	status,0,c
 11807  01523E  D002               	goto	u10990
 11808  015240  0E01               	movlw	1
 11809  015242  D001               	goto	u11000
 11810  015244                     u10990:
 11811  015244  0E00               	movlw	0
 11812  015246                     u11000:
 11813  015246  6E0B               	movwf	(btemp+10)^0,c
 11814  015248  6A0C               	clrf	(btemp+11)^0,c
 11815                           
 11816                           ;stkvar	_xtoa$5197 @ sp[(-20)+0]
 11817  01524A  0EEC               	movlw	-20
 11818  01524C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11819  015252  0EED               	movlw	-19
 11820  015254  0060  F033  FFE3   	movff	btemp+11,plusw1
 11821                           
 11822                           ;stkvar	_xtoa$5197 @ sp[(-20)+0]
 11823  01525A  0EEC               	movlw	-20
 11824  01525C  006F FF8C  F001    	movff	plusw1,btemp
 11825  015262  0EED               	movlw	-19
 11826  015264  50E3               	movf	plusw1,w,c
 11827  015266  1001               	iorwf	btemp^0,w,c
 11828  015268  B4D8               	btfsc	status,2,c
 11829  01526A  D011               	goto	l11351
 11830                           
 11831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 11832                           ;stkvar	_c @ sp[(-20)+12]
 11833  01526C  0EF8               	movlw	-8
 11834  01526E  006F FF8F FFE6     	movff	plusw1,postinc1
 11835  015274  006F FF8F FFE6     	movff	plusw1,postinc1
 11836  01527A  EC48  F0CA         	call	_toupper	;wreg free
 11837                           
 11838                           ;stkvar	_c @ sp[(-20)+12]
 11839  01527E  0EF8               	movlw	-8
 11840  015280  0060  F007  FFE3   	movff	btemp,plusw1
 11841  015286  0EF9               	movlw	-7
 11842  015288  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11843  01528E                     l11351:
 11844                           
 11845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 11846                           ;stkvar	_c @ sp[(-20)+12]
 11847                           ;stkvar	_i @ sp[(-20)+14]
 11848  01528E  0EFA               	movlw	-6
 11849  015290  006F FF8C  F00B    	movff	plusw1,btemp+10
 11850  015296  0EFB               	movlw	-5
 11851  015298  006F FF8C  F00C    	movff	plusw1,btemp+11
 11852  01529E  0E94               	movlw	low _dbuf
 11853  0152A0  240B               	addwf	(btemp+10)^0,w,c
 11854  0152A2  6ED9               	movwf	fsr2l,c
 11855  0152A4  0E03               	movlw	high _dbuf
 11856  0152A6  200C               	addwfc	(btemp+11)^0,w,c
 11857  0152A8  6EDA               	movwf	fsr2h,c
 11858  0152AA  0EF8               	movlw	-8
 11859  0152AC  006F FF8F FFDF     	movff	plusw1,indf2
 11860                           
 11861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 11862                           ;stkvar	_p @ sp[(-20)+18]
 11863  0152B2  50E1               	movf	fsr1l,w,c
 11864  0152B4  0FFE               	addlw	-2
 11865  0152B6  6ED9               	movwf	fsr2l,c
 11866  0152B8  50E2               	movf	fsr1h,w,c
 11867  0152BA  6EDA               	movwf	fsr2h,c
 11868  0152BC  0EFF               	movlw	255
 11869  0152BE  22DA               	addwfc	fsr2h,f,c
 11870  0152C0  06DE               	decf	postinc2,f,c
 11871  0152C2  0E00               	movlw	0
 11872  0152C4  5ADD               	subwfb	postdec2,f,c
 11873                           
 11874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 11875                           ;stkvar	_w @ sp[(-20)+16]
 11876  0152C6  50E1               	movf	fsr1l,w,c
 11877  0152C8  0FFC               	addlw	-4
 11878  0152CA  6ED9               	movwf	fsr2l,c
 11879  0152CC  50E2               	movf	fsr1h,w,c
 11880  0152CE  6EDA               	movwf	fsr2h,c
 11881  0152D0  0EFF               	movlw	255
 11882  0152D2  22DA               	addwfc	fsr2h,f,c
 11883  0152D4  06DE               	decf	postinc2,f,c
 11884  0152D6  0E00               	movlw	0
 11885  0152D8  5ADD               	subwfb	postdec2,f,c
 11886                           
 11887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 11888  0152DA  0E04               	movlw	4
 11889  0152DC  6E0C               	movwf	(btemp+11)^0,c
 11890                           
 11891                           ;stkvar	_n @ sp[(-20)+4]
 11892  0152DE  50E1               	movf	fsr1l,w,c
 11893  0152E0  0FF0               	addlw	-16
 11894  0152E2  6ED9               	movwf	fsr2l,c
 11895  0152E4  50E2               	movf	fsr1h,w,c
 11896  0152E6  6EDA               	movwf	fsr2h,c
 11897  0152E8  0EFF               	movlw	255
 11898  0152EA  22DA               	addwfc	fsr2h,f,c
 11899  0152EC  280C               	incf	(btemp+11)^0,w,c
 11900  0152EE  52DE               	movf	postinc2,f,c
 11901  0152F0  D00F               	goto	u11020
 11902  0152F2                     u11025:
 11903  0152F2  52DE               	movf	postinc2,f,c
 11904  0152F4  52DE               	movf	postinc2,f,c
 11905  0152F6  52DE               	movf	postinc2,f,c
 11906  0152F8  52DE               	movf	postinc2,f,c
 11907  0152FA  52DE               	movf	postinc2,f,c
 11908  0152FC  52DE               	movf	postinc2,f,c
 11909  0152FE  90D8               	bcf	status,0,c
 11910  015300  32DD               	rrcf	postdec2,f,c
 11911  015302  32DD               	rrcf	postdec2,f,c
 11912  015304  32DD               	rrcf	postdec2,f,c
 11913  015306  32DD               	rrcf	postdec2,f,c
 11914  015308  32DD               	rrcf	postdec2,f,c
 11915  01530A  32DD               	rrcf	postdec2,f,c
 11916  01530C  32DD               	rrcf	postdec2,f,c
 11917  01530E  32DE               	rrcf	postinc2,f,c
 11918  015310                     u11020:
 11919  015310  2EE8               	decfsz	wreg,f,c
 11920  015312  D7EF               	goto	u11025
 11921  015314                     l11359:
 11922                           
 11923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11924                           ;stkvar	_i @ sp[(-20)+14]
 11925  015314  0EFB               	movlw	-5
 11926  015316  BEE3               	btfsc	plusw1,7,c
 11927  015318  D03A               	goto	u11070
 11928  01531A  0EFB               	movlw	-5
 11929  01531C  50E3               	movf	plusw1,w,c
 11930  01531E  E108               	bnz	u11030
 11931  015320  0EFA               	movlw	-6
 11932  015322  006F FF8C  F001    	movff	plusw1,btemp
 11933  015328  0E02               	movlw	2
 11934  01532A  5E01               	subwf	btemp^0,f,c
 11935  01532C  A0D8               	btfss	status,0,c
 11936  01532E  D02F               	goto	u11070
 11937  015330                     u11030:
 11938                           
 11939                           ;stkvar	_n @ sp[(-20)+4]
 11940  015330  0EF0               	movlw	-16
 11941  015332  50E3               	movf	plusw1,w,c
 11942  015334  E115               	bnz	u11041
 11943  015336  0EF1               	movlw	-15
 11944  015338  50E3               	movf	plusw1,w,c
 11945  01533A  E112               	bnz	u11041
 11946  01533C  0EF2               	movlw	-14
 11947  01533E  50E3               	movf	plusw1,w,c
 11948  015340  E10F               	bnz	u11041
 11949  015342  0EF3               	movlw	-13
 11950  015344  50E3               	movf	plusw1,w,c
 11951  015346  E10C               	bnz	u11041
 11952  015348  0EF4               	movlw	-12
 11953  01534A  50E3               	movf	plusw1,w,c
 11954  01534C  E109               	bnz	u11041
 11955  01534E  0EF5               	movlw	-11
 11956  015350  50E3               	movf	plusw1,w,c
 11957  015352  E106               	bnz	u11041
 11958  015354  0EF6               	movlw	-10
 11959  015356  50E3               	movf	plusw1,w,c
 11960  015358  E103               	bnz	u11041
 11961  01535A  0EF7               	movlw	-9
 11962  01535C  50E3               	movf	plusw1,w,c
 11963  01535E  A4D8               	btfss	status,2,c
 11964  015360                     u11041:
 11965  015360  D6EB               	goto	l11327
 11966                           
 11967                           ;stkvar	_p @ sp[(-20)+18]
 11968  015362  0EFF               	movlw	-1
 11969  015364  BEE3               	btfsc	plusw1,7,c
 11970  015366  D007               	goto	u11050
 11971  015368  0EFF               	movlw	-1
 11972  01536A  50E3               	movf	plusw1,w,c
 11973  01536C  E103               	bnz	u11051
 11974  01536E  0EFE               	movlw	-2
 11975  015370  04E3               	decf	plusw1,w,c
 11976  015372  B0D8               	btfsc	status,0,c
 11977  015374                     u11051:
 11978  015374  D6E1               	goto	l11327
 11979  015376                     u11050:
 11980                           
 11981                           ;stkvar	_w @ sp[(-20)+16]
 11982  015376  0EFD               	movlw	-3
 11983  015378  BEE3               	btfsc	plusw1,7,c
 11984  01537A  D009               	goto	u11070
 11985  01537C  0EFD               	movlw	-3
 11986  01537E  50E3               	movf	plusw1,w,c
 11987  015380  E104               	bnz	u11060
 11988  015382  0EFC               	movlw	-4
 11989  015384  04E3               	decf	plusw1,w,c
 11990  015386  A0D8               	btfss	status,0,c
 11991  015388  D002               	goto	u11070
 11992  01538A                     u11060:
 11993  01538A  B225               	btfsc	_flags^0,1,c
 11994  01538C  D6D5               	goto	l11327
 11995  01538E                     u11070:
 11996                           
 11997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 11998  01538E  A825               	btfss	_flags^0,4,c
 11999  015390  D036               	goto	l11375
 12000                           
 12001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 12002                           ;stkvar	_i @ sp[(-20)+14]
 12003  015392  50E1               	movf	fsr1l,w,c
 12004  015394  0FFA               	addlw	-6
 12005  015396  6ED9               	movwf	fsr2l,c
 12006  015398  50E2               	movf	fsr1h,w,c
 12007  01539A  6EDA               	movwf	fsr2h,c
 12008  01539C  0EFF               	movlw	255
 12009  01539E  22DA               	addwfc	fsr2h,f,c
 12010  0153A0  06DE               	decf	postinc2,f,c
 12011  0153A2  0E00               	movlw	0
 12012  0153A4  5ADD               	subwfb	postdec2,f,c
 12013                           
 12014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 12015                           ;stkvar	_x @ sp[(-20)+-11]
 12016                           ;stkvar	_i @ sp[(-20)+14]
 12017  0153A6  0EFA               	movlw	-6
 12018  0153A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 12019  0153AE  0EFB               	movlw	-5
 12020  0153B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12021  0153B6  0E94               	movlw	low _dbuf
 12022  0153B8  240B               	addwf	(btemp+10)^0,w,c
 12023  0153BA  6ED9               	movwf	fsr2l,c
 12024  0153BC  0E03               	movlw	high _dbuf
 12025  0153BE  200C               	addwfc	(btemp+11)^0,w,c
 12026  0153C0  6EDA               	movwf	fsr2h,c
 12027  0153C2  0EE1               	movlw	-31
 12028  0153C4  006F FF8F FFDF     	movff	plusw1,indf2
 12029                           
 12030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 12031                           ;stkvar	_i @ sp[(-20)+14]
 12032  0153CA  50E1               	movf	fsr1l,w,c
 12033  0153CC  0FFA               	addlw	-6
 12034  0153CE  6ED9               	movwf	fsr2l,c
 12035  0153D0  50E2               	movf	fsr1h,w,c
 12036  0153D2  6EDA               	movwf	fsr2h,c
 12037  0153D4  0EFF               	movlw	255
 12038  0153D6  22DA               	addwfc	fsr2h,f,c
 12039  0153D8  06DE               	decf	postinc2,f,c
 12040  0153DA  0E00               	movlw	0
 12041  0153DC  5ADD               	subwfb	postdec2,f,c
 12042                           
 12043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 12044                           ;stkvar	_i @ sp[(-20)+14]
 12045  0153DE  0EFA               	movlw	-6
 12046  0153E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 12047  0153E6  0EFB               	movlw	-5
 12048  0153E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12049  0153EE  0E94               	movlw	low _dbuf
 12050  0153F0  240B               	addwf	(btemp+10)^0,w,c
 12051  0153F2  6ED9               	movwf	fsr2l,c
 12052  0153F4  0E03               	movlw	high _dbuf
 12053  0153F6  200C               	addwfc	(btemp+11)^0,w,c
 12054  0153F8  6EDA               	movwf	fsr2h,c
 12055  0153FA  0E30               	movlw	48
 12056  0153FC  6EDF               	movwf	indf2,c
 12057  0153FE                     l11375:
 12058                           
 12059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 12060                           ;stkvar	_w @ sp[(-20)+16]
 12061  0153FE  0EFC               	movlw	-4
 12062  015400  006F FF8F FFE6     	movff	plusw1,postinc1
 12063  015406  006F FF8F FFE6     	movff	plusw1,postinc1
 12064                           
 12065                           ;stkvar	_i @ sp[(-22)+14]
 12066  01540C  0E94               	movlw	low _dbuf
 12067  01540E  6E0B               	movwf	(btemp+10)^0,c
 12068  015410  0E03               	movlw	high _dbuf
 12069  015412  6E0C               	movwf	(btemp+11)^0,c
 12070  015414  0EF8               	movlw	-8
 12071  015416  50E3               	movf	plusw1,w,c
 12072  015418  260B               	addwf	(btemp+10)^0,f,c
 12073  01541A  0EF9               	movlw	-7
 12074  01541C  50E3               	movf	plusw1,w,c
 12075  01541E  220C               	addwfc	(btemp+11)^0,f,c
 12076  015420  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12077  015426  0060  F033  FFE6   	movff	btemp+11,postinc1
 12078                           
 12079                           ;stkvar	_fp @ sp[(-24)+-2]
 12080  01542C  0EE6               	movlw	-26
 12081  01542E  006F FF8F FFE6     	movff	plusw1,postinc1
 12082  015434  006F FF8F FFE6     	movff	plusw1,postinc1
 12083  01543A  EC3D  F0C2         	call	_pad	;wreg free
 12084                           
 12085                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 12086  01543E  0EE1               	movlw	225
 12087  015440  26E1               	addwf	fsr1l,f,c
 12088  015442  0EFF               	movlw	255
 12089  015444  22E2               	addwfc	fsr1h,f,c
 12090  015446  0012               	return		;funcret
 12091  015448                     __end_of_xtoa:
 12092                           	opt callstack 0
 12093                           
 12094 ;; *************** function _toupper *****************
 12095 ;; Defined at:
 12096 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;  c               2  [STACK] int 
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;		None
 12101 ;; Return value:  Size  Location     Type
 12102 ;;                  2  [STACK] int 
 12103 ;; Registers used:
 12104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12105 ;; Tracked objects:
 12106 ;;		On entry : 0/3
 12107 ;;		On exit  : 0/0
 12108 ;;		Unchanged: 0/0
 12109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12114 ;;Total ram usage:        0 bytes
 12115 ;; Hardware stack levels used:    1
 12116 ;; Hardware stack levels required when called:   16
 12117 ;; This function calls:
 12118 ;;		_islower
 12119 ;; This function is called by:
 12120 ;;		_xtoa
 12121 ;; This function uses a reentrant model
 12122 ;;
 12123                           
 12124                           	psect	text45
 12125  019490                     __ptext45:
 12126                           	opt callstack 0
 12127  019490                     _toupper:
 12128                           	opt callstack 0
 12129                           
 12130                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12131  019490  52E6               	movf	postinc1,f,c
 12132  019492  52E6               	movf	postinc1,f,c
 12133                           
 12134                           ;stkvar	_c @ sp[(-2)+-2]
 12135                           
 12136                           ;incstack = 0
 12137 ;; hardware stack exceeded
 12138  019494  0EFC               	movlw	-4
 12139  019496  50E3               	movf	plusw1,w,c
 12140  019498  0F9F               	addlw	159
 12141  01949A  6E0B               	movwf	(btemp+10)^0,c
 12142  01949C  0EFD               	movlw	-3
 12143  01949E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12144  0194A4  0EFF               	movlw	255
 12145  0194A6  220C               	addwfc	(btemp+11)^0,f,c
 12146  0194A8  500C               	movf	(btemp+11)^0,w,c
 12147  0194AA  E106               	bnz	u5760
 12148  0194AC  0E1A               	movlw	26
 12149  0194AE  5C0B               	subwf	(btemp+10)^0,w,c
 12150  0194B0  B0D8               	btfsc	status,0,c
 12151  0194B2  D002               	goto	u5760
 12152  0194B4  0E01               	movlw	1
 12153  0194B6  D001               	goto	u5770
 12154  0194B8                     u5760:
 12155  0194B8  0E00               	movlw	0
 12156  0194BA                     u5770:
 12157  0194BA  6E0B               	movwf	(btemp+10)^0,c
 12158  0194BC  6A0C               	clrf	(btemp+11)^0,c
 12159                           
 12160                           ;stkvar	_toupper$5996 @ sp[(-2)+0]
 12161  0194BE  0EFE               	movlw	-2
 12162  0194C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12163  0194C6  0EFF               	movlw	-1
 12164  0194C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12165                           
 12166                           ;stkvar	_toupper$5996 @ sp[(-2)+0]
 12167  0194CE  0EFE               	movlw	-2
 12168  0194D0  006F FF8C  F001    	movff	plusw1,btemp
 12169  0194D6  0EFF               	movlw	-1
 12170  0194D8  50E3               	movf	plusw1,w,c
 12171  0194DA  1001               	iorwf	btemp^0,w,c
 12172  0194DC  B4D8               	btfsc	status,2,c
 12173  0194DE  D00D               	goto	l7439
 12174                           
 12175                           ;stkvar	_c @ sp[(-2)+-2]
 12176  0194E0  0EFC               	movlw	-4
 12177  0194E2  006F FF8C  F001    	movff	plusw1,btemp
 12178  0194E8  0EFD               	movlw	-3
 12179  0194EA  006F FF8C  F002    	movff	plusw1,btemp+1
 12180  0194F0  0E5F               	movlw	95
 12181  0194F2  1601               	andwf	btemp^0,f,c
 12182  0194F4  0E00               	movlw	0
 12183  0194F6  1602               	andwf	(btemp+1)^0,f,c
 12184  0194F8  D008               	goto	l3337
 12185  0194FA                     l7439:
 12186                           
 12187                           ;stkvar	_c @ sp[(-2)+-2]
 12188  0194FA  0EFC               	movlw	-4
 12189  0194FC  006F FF8C  F001    	movff	plusw1,btemp
 12190  019502  0EFD               	movlw	-3
 12191  019504  006F FF8C  F002    	movff	plusw1,btemp+1
 12192  01950A                     l3337:
 12193                           
 12194                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12195  01950A  52E5               	movf	postdec1,f,c
 12196  01950C  52E5               	movf	postdec1,f,c
 12197  01950E  52E5               	movf	postdec1,f,c
 12198  019510  52E5               	movf	postdec1,f,c
 12199  019512  0012               	return		;funcret
 12200  019514                     __end_of_toupper:
 12201                           	opt callstack 0
 12202                           
 12203 ;; *************** function _islower *****************
 12204 ;; Defined at:
 12205 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 12206 ;; Parameters:    Size  Location     Type
 12207 ;;  c               2  [STACK] int 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;		None
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  2  [STACK] int 
 12212 ;; Registers used:
 12213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12223 ;;Total ram usage:        0 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:   15
 12226 ;; This function calls:
 12227 ;;		Nothing
 12228 ;; This function is called by:
 12229 ;;		_toupper
 12230 ;; This function uses a reentrant model
 12231 ;;
 12232                           
 12233                           	psect	text46
 12234  01A0BA                     __ptext46:
 12235                           	opt callstack 0
 12236  01A0BA                     _islower:
 12237                           	opt callstack 0
 12238                           
 12239                           ;stkvar	_c @ sp[(0)+-2]
 12240                           
 12241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12242                           ;incstack = 0
 12243 ;; hardware stack exceeded
 12244  01A0BA  0EFE               	movlw	-2
 12245  01A0BC  50E3               	movf	plusw1,w,c
 12246  01A0BE  0F9F               	addlw	159
 12247  01A0C0  6E0B               	movwf	(btemp+10)^0,c
 12248  01A0C2  0EFF               	movlw	-1
 12249  01A0C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12250  01A0CA  0EFF               	movlw	255
 12251  01A0CC  220C               	addwfc	(btemp+11)^0,f,c
 12252  01A0CE  500C               	movf	(btemp+11)^0,w,c
 12253  01A0D0  E106               	bnz	u5450
 12254  01A0D2  0E1A               	movlw	26
 12255  01A0D4  5C0B               	subwf	(btemp+10)^0,w,c
 12256  01A0D6  B0D8               	btfsc	status,0,c
 12257  01A0D8  D002               	goto	u5450
 12258  01A0DA  0E01               	movlw	1
 12259  01A0DC  D001               	goto	u5460
 12260  01A0DE                     u5450:
 12261  01A0DE  0E00               	movlw	0
 12262  01A0E0                     u5460:
 12263  01A0E0  6E01               	movwf	btemp^0,c
 12264  01A0E2  6A02               	clrf	(btemp+1)^0,c
 12265                           
 12266                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12267  01A0E4  52E5               	movf	postdec1,f,c
 12268  01A0E6  52E5               	movf	postdec1,f,c
 12269  01A0E8  0012               	return		;funcret
 12270  01A0EA                     __end_of_islower:
 12271                           	opt callstack 0
 12272                           
 12273 ;; *************** function _isalpha *****************
 12274 ;; Defined at:
 12275 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;  c               2  [STACK] int 
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;		None
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  2  [STACK] int 
 12282 ;; Registers used:
 12283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12293 ;;Total ram usage:        0 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; Hardware stack levels required when called:   15
 12296 ;; This function calls:
 12297 ;;		Nothing
 12298 ;; This function is called by:
 12299 ;;		_xtoa
 12300 ;; This function uses a reentrant model
 12301 ;;
 12302                           
 12303                           	psect	text47
 12304  019D86                     __ptext47:
 12305                           	opt callstack 0
 12306  019D86                     _isalpha:
 12307                           	opt callstack 0
 12308                           
 12309                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12310                           ;incstack = 0
 12311 ;; hardware stack exceeded
 12312  019D86  0E9F               	movlw	159
 12313  019D88  6E0B               	movwf	(btemp+10)^0,c
 12314  019D8A  0EFF               	movlw	255
 12315  019D8C  6E0C               	movwf	(btemp+11)^0,c
 12316                           
 12317                           ;stkvar	_c @ sp[(0)+-2]
 12318  019D8E  0EFE               	movlw	-2
 12319  019D90  006F FF8C  F009    	movff	plusw1,btemp+8
 12320  019D96  0EFF               	movlw	-1
 12321  019D98  006F FF8C  F00A    	movff	plusw1,btemp+9
 12322  019D9E  0E20               	movlw	32
 12323  019DA0  1209               	iorwf	(btemp+8)^0,f,c
 12324  019DA2  0E00               	movlw	0
 12325  019DA4  120A               	iorwf	(btemp+9)^0,f,c
 12326  019DA6  500B               	movf	(btemp+10)^0,w,c
 12327  019DA8  2609               	addwf	(btemp+8)^0,f,c
 12328  019DAA  500C               	movf	(btemp+11)^0,w,c
 12329  019DAC  220A               	addwfc	(btemp+9)^0,f,c
 12330  019DAE  500A               	movf	(btemp+9)^0,w,c
 12331  019DB0  E106               	bnz	u5740
 12332  019DB2  0E1A               	movlw	26
 12333  019DB4  5C09               	subwf	(btemp+8)^0,w,c
 12334  019DB6  B0D8               	btfsc	status,0,c
 12335  019DB8  D002               	goto	u5740
 12336  019DBA  0E01               	movlw	1
 12337  019DBC  D001               	goto	u5750
 12338  019DBE                     u5740:
 12339  019DBE  0E00               	movlw	0
 12340  019DC0                     u5750:
 12341  019DC0  6E01               	movwf	btemp^0,c
 12342  019DC2  6A02               	clrf	(btemp+1)^0,c
 12343                           
 12344                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12345  019DC4  52E5               	movf	postdec1,f,c
 12346  019DC6  52E5               	movf	postdec1,f,c
 12347  019DC8  0012               	return		;funcret
 12348  019DCA                     __end_of_isalpha:
 12349                           	opt callstack 0
 12350                           
 12351 ;; *************** function _utoa *****************
 12352 ;; Defined at:
 12353 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12356 ;;		 -> f(6), NULL(0), 
 12357 ;;  d               8  [STACK] unsigned long long 
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;  n               8  [STACK] unsigned long long 
 12360 ;;  i               2  [STACK] int 
 12361 ;;  w               2  [STACK] int 
 12362 ;;  p               2  [STACK] int 
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  2  [STACK] int 
 12365 ;; Registers used:
 12366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/0
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12376 ;;Total ram usage:        0 bytes
 12377 ;; Hardware stack levels used:    1
 12378 ;; Hardware stack levels required when called:   20
 12379 ;; This function calls:
 12380 ;;		___lodiv
 12381 ;;		___lomod
 12382 ;;		_pad
 12383 ;; This function is called by:
 12384 ;;		_vfpfcnvrt
 12385 ;; This function uses a reentrant model
 12386 ;;
 12387                           
 12388                           	psect	text48
 12389  0157B4                     __ptext48:
 12390                           	opt callstack 0
 12391  0157B4                     _utoa:
 12392                           	opt callstack 0
 12393                           
 12394                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12395  0157B4  0E0E               	movlw	14
 12396  0157B6  26E1               	addwf	fsr1l,f,c
 12397  0157B8  0E00               	movlw	0
 12398  0157BA  22E2               	addwfc	fsr1h,f,c
 12399                           
 12400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 12401                           
 12402                           ;incstack = 0
 12403 ;; hardware stack exceeded
 12404  0157BC  AE24               	btfss	(_prec+1)^0,7,c
 12405                           
 12406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 12407  0157BE  9225               	bcf	_flags^0,1,c
 12408                           
 12409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 12410  0157C0  BE24               	btfsc	(_prec+1)^0,7,c
 12411  0157C2  D005               	goto	u10840
 12412  0157C4  5024               	movf	(_prec+1)^0,w,c
 12413  0157C6  E110               	bnz	l11275
 12414  0157C8  0423               	decf	_prec^0,w,c
 12415  0157CA  B0D8               	btfsc	status,0,c
 12416  0157CC  D00D               	goto	l11275
 12417  0157CE                     u10840:
 12418  0157CE  0E01               	movlw	1
 12419  0157D0  6E0B               	movwf	(btemp+10)^0,c
 12420  0157D2  0E00               	movlw	0
 12421  0157D4  6E0C               	movwf	(btemp+11)^0,c
 12422                           
 12423                           ;stkvar	_p @ sp[(-14)+12]
 12424  0157D6  0EFE               	movlw	-2
 12425  0157D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12426  0157DE  0EFF               	movlw	-1
 12427  0157E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12428  0157E6  D008               	goto	l2160
 12429  0157E8                     l11275:
 12430                           
 12431                           ;stkvar	_p @ sp[(-14)+12]
 12432  0157E8  0EFE               	movlw	-2
 12433  0157EA  0060  F08F  FFE3   	movff	_prec,plusw1
 12434  0157F0  0EFF               	movlw	-1
 12435  0157F2  0060  F093  FFE3   	movff	_prec+1,plusw1
 12436  0157F8                     l2160:
 12437                           
 12438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 12439                           ;stkvar	_w @ sp[(-14)+10]
 12440  0157F8  0EFC               	movlw	-4
 12441  0157FA  0060  F087  FFE3   	movff	_width,plusw1
 12442  015800  0EFD               	movlw	-3
 12443  015802  0060  F08B  FFE3   	movff	_width+1,plusw1
 12444                           
 12445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 12446                           ;stkvar	_d @ sp[(-14)+-10]
 12447  015808  0EE8               	movlw	232
 12448  01580A  24E1               	addwf	fsr1l,w,c
 12449  01580C  6ED9               	movwf	fsr2l,c
 12450  01580E  0EFF               	movlw	255
 12451  015810  20E2               	addwfc	fsr1h,w,c
 12452  015812  6EDA               	movwf	fsr2h,c
 12453                           
 12454                           ;stkvar	_n @ sp[(-14)+0]
 12455  015814  0E08               	movlw	8
 12456  015816  6E01               	movwf	btemp^0,c
 12457  015818  0EF2               	movlw	-14
 12458  01581A                     us1085999:
 12459  01581A  006F FF7B FFE3     	movff	postinc2,plusw1
 12460  015820  28E8               	incf	wreg,w,c
 12461  015822  2E01               	decfsz	btemp^0,f,c
 12462  015824  D7FA               	bra	us1085999
 12463                           
 12464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 12465  015826  0E4F               	movlw	79
 12466  015828  6E0B               	movwf	(btemp+10)^0,c
 12467  01582A  0E00               	movlw	0
 12468  01582C  6E0C               	movwf	(btemp+11)^0,c
 12469                           
 12470                           ;stkvar	_i @ sp[(-14)+8]
 12471  01582E  0EFA               	movlw	-6
 12472  015830  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12473  015836  0EFB               	movlw	-5
 12474  015838  0060  F033  FFE3   	movff	btemp+11,plusw1
 12475                           
 12476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 12477  01583E  0103               	movlb	3	; () banked
 12478  015840  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12479                           
 12480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12481  015842  D0FB               	goto	l11293
 12482  015844                     l11283:
 12483                           
 12484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 12485                           ;stkvar	_i @ sp[(-14)+8]
 12486  015844  50E1               	movf	fsr1l,w,c
 12487  015846  0FFA               	addlw	-6
 12488  015848  6ED9               	movwf	fsr2l,c
 12489  01584A  50E2               	movf	fsr1h,w,c
 12490  01584C  6EDA               	movwf	fsr2h,c
 12491  01584E  0EFF               	movlw	255
 12492  015850  22DA               	addwfc	fsr2h,f,c
 12493  015852  06DE               	decf	postinc2,f,c
 12494  015854  0E00               	movlw	0
 12495  015856  5ADD               	subwfb	postdec2,f,c
 12496                           
 12497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 12498  015858  0E0A               	movlw	10
 12499  01585A  6EE6               	movwf	postinc1,c
 12500  01585C  0E00               	movlw	0
 12501  01585E  6EE6               	movwf	postinc1,c
 12502  015860  0E00               	movlw	0
 12503  015862  6EE6               	movwf	postinc1,c
 12504  015864  0E00               	movlw	0
 12505  015866  6EE6               	movwf	postinc1,c
 12506  015868  0E00               	movlw	0
 12507  01586A  6EE6               	movwf	postinc1,c
 12508  01586C  0E00               	movlw	0
 12509  01586E  6EE6               	movwf	postinc1,c
 12510  015870  0E00               	movlw	0
 12511  015872  6EE6               	movwf	postinc1,c
 12512  015874  0E00               	movlw	0
 12513  015876  6EE6               	movwf	postinc1,c
 12514                           
 12515                           ;stkvar	_n @ sp[(-22)+0]
 12516  015878  50E1               	movf	fsr1l,w,c
 12517  01587A  0FEA               	addlw	-22
 12518  01587C  6ED9               	movwf	fsr2l,c
 12519  01587E  50E2               	movf	fsr1h,w,c
 12520  015880  6EDA               	movwf	fsr2h,c
 12521  015882  0EFF               	movlw	255
 12522  015884  22DA               	addwfc	fsr2h,f,c
 12523  015886  006F FF7B FFE6     	movff	postinc2,postinc1
 12524  01588C  006F FF7B FFE6     	movff	postinc2,postinc1
 12525  015892  006F FF7B FFE6     	movff	postinc2,postinc1
 12526  015898  006F FF7B FFE6     	movff	postinc2,postinc1
 12527  01589E  006F FF7B FFE6     	movff	postinc2,postinc1
 12528  0158A4  006F FF7B FFE6     	movff	postinc2,postinc1
 12529  0158AA  006F FF7B FFE6     	movff	postinc2,postinc1
 12530  0158B0  006F FF7B FFE6     	movff	postinc2,postinc1
 12531  0158B6  EC54  F0BF         	call	___lomod	;wreg free
 12532  0158BA  52E5               	movf	postdec1,f,c
 12533  0158BC  006F FF9C  F018    	movff	indf1,btemp+23
 12534  0158C2  52E5               	movf	postdec1,f,c
 12535  0158C4  006F FF9C  F017    	movff	indf1,btemp+22
 12536  0158CA  52E5               	movf	postdec1,f,c
 12537  0158CC  006F FF9C  F016    	movff	indf1,btemp+21
 12538  0158D2  52E5               	movf	postdec1,f,c
 12539  0158D4  006F FF9C  F015    	movff	indf1,btemp+20
 12540  0158DA  52E5               	movf	postdec1,f,c
 12541  0158DC  006F FF9C  F014    	movff	indf1,btemp+19
 12542  0158E2  52E5               	movf	postdec1,f,c
 12543  0158E4  006F FF9C  F013    	movff	indf1,btemp+18
 12544  0158EA  52E5               	movf	postdec1,f,c
 12545  0158EC  006F FF9C  F012    	movff	indf1,btemp+17
 12546  0158F2  52E5               	movf	postdec1,f,c
 12547  0158F4  006F FF9C  F011    	movff	indf1,btemp+16
 12548  0158FA  0EF8               	movlw	248
 12549  0158FC  26E1               	addwf	fsr1l,f,c
 12550  0158FE  0EFF               	movlw	255
 12551  015900  22E2               	addwfc	fsr1h,f,c
 12552  015902  0E30               	movlw	48
 12553  015904  2611               	addwf	(btemp+16)^0,f,c
 12554                           
 12555                           ;stkvar	_i @ sp[(-14)+8]
 12556  015906  0EFA               	movlw	-6
 12557  015908  006F FF8C  F00B    	movff	plusw1,btemp+10
 12558  01590E  0EFB               	movlw	-5
 12559  015910  006F FF8C  F00C    	movff	plusw1,btemp+11
 12560  015916  0E94               	movlw	low _dbuf
 12561  015918  240B               	addwf	(btemp+10)^0,w,c
 12562  01591A  6ED9               	movwf	fsr2l,c
 12563  01591C  0E03               	movlw	high _dbuf
 12564  01591E  200C               	addwfc	(btemp+11)^0,w,c
 12565  015920  6EDA               	movwf	fsr2h,c
 12566  015922  0060  F047  FFDF   	movff	btemp+16,indf2
 12567                           
 12568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 12569                           ;stkvar	_p @ sp[(-14)+12]
 12570  015928  50E1               	movf	fsr1l,w,c
 12571  01592A  0FFE               	addlw	-2
 12572  01592C  6ED9               	movwf	fsr2l,c
 12573  01592E  50E2               	movf	fsr1h,w,c
 12574  015930  6EDA               	movwf	fsr2h,c
 12575  015932  0EFF               	movlw	255
 12576  015934  22DA               	addwfc	fsr2h,f,c
 12577  015936  06DE               	decf	postinc2,f,c
 12578  015938  0E00               	movlw	0
 12579  01593A  5ADD               	subwfb	postdec2,f,c
 12580                           
 12581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 12582                           ;stkvar	_w @ sp[(-14)+10]
 12583  01593C  50E1               	movf	fsr1l,w,c
 12584  01593E  0FFC               	addlw	-4
 12585  015940  6ED9               	movwf	fsr2l,c
 12586  015942  50E2               	movf	fsr1h,w,c
 12587  015944  6EDA               	movwf	fsr2h,c
 12588  015946  0EFF               	movlw	255
 12589  015948  22DA               	addwfc	fsr2h,f,c
 12590  01594A  06DE               	decf	postinc2,f,c
 12591  01594C  0E00               	movlw	0
 12592  01594E  5ADD               	subwfb	postdec2,f,c
 12593                           
 12594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 12595  015950  0E0A               	movlw	10
 12596  015952  6EE6               	movwf	postinc1,c
 12597  015954  0E00               	movlw	0
 12598  015956  6EE6               	movwf	postinc1,c
 12599  015958  0E00               	movlw	0
 12600  01595A  6EE6               	movwf	postinc1,c
 12601  01595C  0E00               	movlw	0
 12602  01595E  6EE6               	movwf	postinc1,c
 12603  015960  0E00               	movlw	0
 12604  015962  6EE6               	movwf	postinc1,c
 12605  015964  0E00               	movlw	0
 12606  015966  6EE6               	movwf	postinc1,c
 12607  015968  0E00               	movlw	0
 12608  01596A  6EE6               	movwf	postinc1,c
 12609  01596C  0E00               	movlw	0
 12610  01596E  6EE6               	movwf	postinc1,c
 12611                           
 12612                           ;stkvar	_n @ sp[(-22)+0]
 12613  015970  50E1               	movf	fsr1l,w,c
 12614  015972  0FEA               	addlw	-22
 12615  015974  6ED9               	movwf	fsr2l,c
 12616  015976  50E2               	movf	fsr1h,w,c
 12617  015978  6EDA               	movwf	fsr2h,c
 12618  01597A  0EFF               	movlw	255
 12619  01597C  22DA               	addwfc	fsr2h,f,c
 12620  01597E  006F FF7B FFE6     	movff	postinc2,postinc1
 12621  015984  006F FF7B FFE6     	movff	postinc2,postinc1
 12622  01598A  006F FF7B FFE6     	movff	postinc2,postinc1
 12623  015990  006F FF7B FFE6     	movff	postinc2,postinc1
 12624  015996  006F FF7B FFE6     	movff	postinc2,postinc1
 12625  01599C  006F FF7B FFE6     	movff	postinc2,postinc1
 12626  0159A2  006F FF7B FFE6     	movff	postinc2,postinc1
 12627  0159A8  006F FF7B FFE6     	movff	postinc2,postinc1
 12628  0159AE  EC1A  F0BB         	call	___lodiv	;wreg free
 12629  0159B2  52E5               	movf	postdec1,f,c
 12630  0159B4  006F FF9C  F018    	movff	indf1,btemp+23
 12631  0159BA  52E5               	movf	postdec1,f,c
 12632  0159BC  006F FF9C  F017    	movff	indf1,btemp+22
 12633  0159C2  52E5               	movf	postdec1,f,c
 12634  0159C4  006F FF9C  F016    	movff	indf1,btemp+21
 12635  0159CA  52E5               	movf	postdec1,f,c
 12636  0159CC  006F FF9C  F015    	movff	indf1,btemp+20
 12637  0159D2  52E5               	movf	postdec1,f,c
 12638  0159D4  006F FF9C  F014    	movff	indf1,btemp+19
 12639  0159DA  52E5               	movf	postdec1,f,c
 12640  0159DC  006F FF9C  F013    	movff	indf1,btemp+18
 12641  0159E2  52E5               	movf	postdec1,f,c
 12642  0159E4  006F FF9C  F012    	movff	indf1,btemp+17
 12643  0159EA  52E5               	movf	postdec1,f,c
 12644  0159EC  006F FF9C  F011    	movff	indf1,btemp+16
 12645  0159F2  0EF8               	movlw	248
 12646  0159F4  26E1               	addwf	fsr1l,f,c
 12647  0159F6  0EFF               	movlw	255
 12648  0159F8  22E2               	addwfc	fsr1h,f,c
 12649                           
 12650                           ;stkvar	_n @ sp[(-14)+0]
 12651  0159FA  0EF2               	movlw	-14
 12652  0159FC  0060  F047  FFE3   	movff	btemp+16,plusw1
 12653  015A02  0EF3               	movlw	-13
 12654  015A04  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12655  015A0A  0EF4               	movlw	-12
 12656  015A0C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12657  015A12  0EF5               	movlw	-11
 12658  015A14  0060  F053  FFE3   	movff	btemp+19,plusw1
 12659  015A1A  0EF6               	movlw	-10
 12660  015A1C  0060  F057  FFE3   	movff	btemp+20,plusw1
 12661  015A22  0EF7               	movlw	-9
 12662  015A24  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12663  015A2A  0EF8               	movlw	-8
 12664  015A2C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12665  015A32  0EF9               	movlw	-7
 12666  015A34  0060  F063  FFE3   	movff	btemp+23,plusw1
 12667  015A3A                     l11293:
 12668                           
 12669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12670                           ;stkvar	_i @ sp[(-14)+8]
 12671  015A3A  0EFA               	movlw	-6
 12672  015A3C  006F FF8C  F001    	movff	plusw1,btemp
 12673  015A42  0EFB               	movlw	-5
 12674  015A44  50E3               	movf	plusw1,w,c
 12675  015A46  1001               	iorwf	btemp^0,w,c
 12676  015A48  B4D8               	btfsc	status,2,c
 12677  015A4A  D02F               	goto	u10900
 12678                           
 12679                           ;stkvar	_n @ sp[(-14)+0]
 12680  015A4C  0EF2               	movlw	-14
 12681  015A4E  50E3               	movf	plusw1,w,c
 12682  015A50  E115               	bnz	u10871
 12683  015A52  0EF3               	movlw	-13
 12684  015A54  50E3               	movf	plusw1,w,c
 12685  015A56  E112               	bnz	u10871
 12686  015A58  0EF4               	movlw	-12
 12687  015A5A  50E3               	movf	plusw1,w,c
 12688  015A5C  E10F               	bnz	u10871
 12689  015A5E  0EF5               	movlw	-11
 12690  015A60  50E3               	movf	plusw1,w,c
 12691  015A62  E10C               	bnz	u10871
 12692  015A64  0EF6               	movlw	-10
 12693  015A66  50E3               	movf	plusw1,w,c
 12694  015A68  E109               	bnz	u10871
 12695  015A6A  0EF7               	movlw	-9
 12696  015A6C  50E3               	movf	plusw1,w,c
 12697  015A6E  E106               	bnz	u10871
 12698  015A70  0EF8               	movlw	-8
 12699  015A72  50E3               	movf	plusw1,w,c
 12700  015A74  E103               	bnz	u10871
 12701  015A76  0EF9               	movlw	-7
 12702  015A78  50E3               	movf	plusw1,w,c
 12703  015A7A  A4D8               	btfss	status,2,c
 12704  015A7C                     u10871:
 12705  015A7C  D6E3               	goto	l11283
 12706                           
 12707                           ;stkvar	_p @ sp[(-14)+12]
 12708  015A7E  0EFF               	movlw	-1
 12709  015A80  BEE3               	btfsc	plusw1,7,c
 12710  015A82  D007               	goto	u10880
 12711  015A84  0EFF               	movlw	-1
 12712  015A86  50E3               	movf	plusw1,w,c
 12713  015A88  E103               	bnz	u10881
 12714  015A8A  0EFE               	movlw	-2
 12715  015A8C  04E3               	decf	plusw1,w,c
 12716  015A8E  B0D8               	btfsc	status,0,c
 12717  015A90                     u10881:
 12718  015A90  D6D9               	goto	l11283
 12719  015A92                     u10880:
 12720                           
 12721                           ;stkvar	_w @ sp[(-14)+10]
 12722  015A92  0EFD               	movlw	-3
 12723  015A94  BEE3               	btfsc	plusw1,7,c
 12724  015A96  D009               	goto	u10900
 12725  015A98  0EFD               	movlw	-3
 12726  015A9A  50E3               	movf	plusw1,w,c
 12727  015A9C  E104               	bnz	u10890
 12728  015A9E  0EFC               	movlw	-4
 12729  015AA0  04E3               	decf	plusw1,w,c
 12730  015AA2  A0D8               	btfss	status,0,c
 12731  015AA4  D002               	goto	u10900
 12732  015AA6                     u10890:
 12733  015AA6  B225               	btfsc	_flags^0,1,c
 12734  015AA8  D6CD               	goto	l11283
 12735  015AAA                     u10900:
 12736                           
 12737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 12738                           ;stkvar	_w @ sp[(-14)+10]
 12739  015AAA  0EFC               	movlw	-4
 12740  015AAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12741  015AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12742                           
 12743                           ;stkvar	_i @ sp[(-16)+8]
 12744  015AB8  0E94               	movlw	low _dbuf
 12745  015ABA  6E0B               	movwf	(btemp+10)^0,c
 12746  015ABC  0E03               	movlw	high _dbuf
 12747  015ABE  6E0C               	movwf	(btemp+11)^0,c
 12748  015AC0  0EF8               	movlw	-8
 12749  015AC2  50E3               	movf	plusw1,w,c
 12750  015AC4  260B               	addwf	(btemp+10)^0,f,c
 12751  015AC6  0EF9               	movlw	-7
 12752  015AC8  50E3               	movf	plusw1,w,c
 12753  015ACA  220C               	addwfc	(btemp+11)^0,f,c
 12754  015ACC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12755  015AD2  0060  F033  FFE6   	movff	btemp+11,postinc1
 12756                           
 12757                           ;stkvar	_fp @ sp[(-18)+-2]
 12758  015AD8  0EEC               	movlw	-20
 12759  015ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 12760  015AE0  006F FF8F FFE6     	movff	plusw1,postinc1
 12761  015AE6  EC3D  F0C2         	call	_pad	;wreg free
 12762                           
 12763                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 12764  015AEA  0EE8               	movlw	232
 12765  015AEC  26E1               	addwf	fsr1l,f,c
 12766  015AEE  0EFF               	movlw	255
 12767  015AF0  22E2               	addwfc	fsr1h,f,c
 12768  015AF2  0012               	return		;funcret
 12769  015AF4                     __end_of_utoa:
 12770                           	opt callstack 0
 12771                           
 12772 ;; *************** function ___lomod *****************
 12773 ;; Defined at:
 12774 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;  dividend        8  [STACK] unsigned long long 
 12777 ;;  divisor         8  [STACK] unsigned long long 
 12778 ;; Auto vars:     Size  Location     Type
 12779 ;;  counter         1  [STACK] unsigned char 
 12780 ;; Return value:  Size  Location     Type
 12781 ;;                  8  [STACK] unsigned long long 
 12782 ;; Registers used:
 12783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12784 ;; Tracked objects:
 12785 ;;		On entry : 0/3
 12786 ;;		On exit  : 0/0
 12787 ;;		Unchanged: 0/0
 12788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12793 ;;Total ram usage:        0 bytes
 12794 ;; Hardware stack levels used:    1
 12795 ;; Hardware stack levels required when called:   15
 12796 ;; This function calls:
 12797 ;;		Nothing
 12798 ;; This function is called by:
 12799 ;;		_utoa
 12800 ;; This function uses a reentrant model
 12801 ;;
 12802                           
 12803                           	psect	text49
 12804  017EA8                     __ptext49:
 12805                           	opt callstack 0
 12806  017EA8                     ___lomod:
 12807                           	opt callstack 0
 12808                           
 12809                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12810  017EA8  52E6               	movf	postinc1,f,c
 12811                           
 12812                           ;stkvar	_divisor @ sp[(-1)+-16]
 12813                           
 12814                           ;incstack = 0
 12815 ;; hardware stack exceeded
 12816  017EAA  0EEF               	movlw	-17
 12817  017EAC  50E3               	movf	plusw1,w,c
 12818  017EAE  E116               	bnz	u6890
 12819  017EB0  0EF0               	movlw	-16
 12820  017EB2  50E3               	movf	plusw1,w,c
 12821  017EB4  E113               	bnz	u6890
 12822  017EB6  0EF1               	movlw	-15
 12823  017EB8  50E3               	movf	plusw1,w,c
 12824  017EBA  E110               	bnz	u6890
 12825  017EBC  0EF2               	movlw	-14
 12826  017EBE  50E3               	movf	plusw1,w,c
 12827  017EC0  E10D               	bnz	u6890
 12828  017EC2  0EF3               	movlw	-13
 12829  017EC4  50E3               	movf	plusw1,w,c
 12830  017EC6  E10A               	bnz	u6890
 12831  017EC8  0EF4               	movlw	-12
 12832  017ECA  50E3               	movf	plusw1,w,c
 12833  017ECC  E107               	bnz	u6890
 12834  017ECE  0EF5               	movlw	-11
 12835  017ED0  50E3               	movf	plusw1,w,c
 12836  017ED2  E104               	bnz	u6890
 12837  017ED4  0EF6               	movlw	-10
 12838  017ED6  50E3               	movf	plusw1,w,c
 12839  017ED8  B4D8               	btfsc	status,2,c
 12840  017EDA  D075               	goto	u6920
 12841  017EDC                     u6890:
 12842                           
 12843                           ;stkvar	_counter @ sp[(-1)+0]
 12844  017EDC  0EFF               	movlw	-1
 12845  017EDE  6AE3               	clrf	plusw1,c
 12846  017EE0  D012               	goto	L11
 12847  017EE2                     l8049:
 12848                           
 12849                           ;stkvar	_divisor @ sp[(-1)+-16]
 12850  017EE2  90D8               	bcf	status,0,c
 12851  017EE4  0EEF               	movlw	-17
 12852  017EE6  36E3               	rlcf	plusw1,f,c
 12853  017EE8  0EF0               	movlw	-16
 12854  017EEA  36E3               	rlcf	plusw1,f,c
 12855  017EEC  0EF1               	movlw	-15
 12856  017EEE  36E3               	rlcf	plusw1,f,c
 12857  017EF0  0EF2               	movlw	-14
 12858  017EF2  36E3               	rlcf	plusw1,f,c
 12859  017EF4  0EF3               	movlw	-13
 12860  017EF6  36E3               	rlcf	plusw1,f,c
 12861  017EF8  0EF4               	movlw	-12
 12862  017EFA  36E3               	rlcf	plusw1,f,c
 12863  017EFC  0EF5               	movlw	-11
 12864  017EFE  36E3               	rlcf	plusw1,f,c
 12865  017F00  0EF6               	movlw	-10
 12866  017F02  36E3               	rlcf	plusw1,f,c
 12867                           
 12868                           ;stkvar	_counter @ sp[(-1)+0]
 12869  017F04  0EFF               	movlw	-1
 12870  017F06                     L11:
 12871  017F06  2AE3               	incf	plusw1,f,c
 12872                           
 12873                           ;stkvar	_divisor @ sp[(-1)+-16]
 12874  017F08  0EF6               	movlw	-10
 12875  017F0A  AEE3               	btfss	plusw1,7,c
 12876  017F0C  D7EA               	goto	l8049
 12877  017F0E                     u6900:
 12878                           
 12879                           ;stkvar	_divisor @ sp[(-1)+-16]
 12880                           ;stkvar	_dividend @ sp[(-1)+-8]
 12881  017F0E  50E1               	movf	fsr1l,w,c
 12882  017F10  0FF7               	addlw	-9
 12883  017F12  6ED9               	movwf	fsr2l,c
 12884  017F14  50E2               	movf	fsr1h,w,c
 12885  017F16  6EDA               	movwf	fsr2h,c
 12886  017F18  0EFF               	movlw	255
 12887  017F1A  22DA               	addwfc	fsr2h,f,c
 12888  017F1C  0EEF               	movlw	-17
 12889  017F1E  50E3               	movf	plusw1,w,c
 12890  017F20  5CDE               	subwf	postinc2,w,c
 12891  017F22  0EF0               	movlw	-16
 12892  017F24  50E3               	movf	plusw1,w,c
 12893  017F26  58DE               	subwfb	postinc2,w,c
 12894  017F28  0EF1               	movlw	-15
 12895  017F2A  50E3               	movf	plusw1,w,c
 12896  017F2C  58DE               	subwfb	postinc2,w,c
 12897  017F2E  0EF2               	movlw	-14
 12898  017F30  50E3               	movf	plusw1,w,c
 12899  017F32  58DE               	subwfb	postinc2,w,c
 12900  017F34  0EF3               	movlw	-13
 12901  017F36  50E3               	movf	plusw1,w,c
 12902  017F38  58DE               	subwfb	postinc2,w,c
 12903  017F3A  0EF4               	movlw	-12
 12904  017F3C  50E3               	movf	plusw1,w,c
 12905  017F3E  58DE               	subwfb	postinc2,w,c
 12906  017F40  0EF5               	movlw	-11
 12907  017F42  50E3               	movf	plusw1,w,c
 12908  017F44  58DE               	subwfb	postinc2,w,c
 12909  017F46  0EF6               	movlw	-10
 12910  017F48  50E3               	movf	plusw1,w,c
 12911  017F4A  58DE               	subwfb	postinc2,w,c
 12912  017F4C  A0D8               	btfss	status,0,c
 12913  017F4E  D01F               	goto	l8057
 12914                           
 12915                           ;stkvar	_divisor @ sp[(-1)+-16]
 12916                           ;stkvar	_dividend @ sp[(-1)+-8]
 12917  017F50  50E1               	movf	fsr1l,w,c
 12918  017F52  0FF7               	addlw	-9
 12919  017F54  6ED9               	movwf	fsr2l,c
 12920  017F56  50E2               	movf	fsr1h,w,c
 12921  017F58  6EDA               	movwf	fsr2h,c
 12922  017F5A  0EFF               	movlw	255
 12923  017F5C  22DA               	addwfc	fsr2h,f,c
 12924  017F5E  0EEF               	movlw	-17
 12925  017F60  50E3               	movf	plusw1,w,c
 12926  017F62  5EDE               	subwf	postinc2,f,c
 12927  017F64  0EF0               	movlw	-16
 12928  017F66  50E3               	movf	plusw1,w,c
 12929  017F68  5ADE               	subwfb	postinc2,f,c
 12930  017F6A  0EF1               	movlw	-15
 12931  017F6C  50E3               	movf	plusw1,w,c
 12932  017F6E  5ADE               	subwfb	postinc2,f,c
 12933  017F70  0EF2               	movlw	-14
 12934  017F72  50E3               	movf	plusw1,w,c
 12935  017F74  5ADE               	subwfb	postinc2,f,c
 12936  017F76  0EF3               	movlw	-13
 12937  017F78  50E3               	movf	plusw1,w,c
 12938  017F7A  5ADE               	subwfb	postinc2,f,c
 12939  017F7C  0EF4               	movlw	-12
 12940  017F7E  50E3               	movf	plusw1,w,c
 12941  017F80  5ADE               	subwfb	postinc2,f,c
 12942  017F82  0EF5               	movlw	-11
 12943  017F84  50E3               	movf	plusw1,w,c
 12944  017F86  5ADE               	subwfb	postinc2,f,c
 12945  017F88  0EF6               	movlw	-10
 12946  017F8A  50E3               	movf	plusw1,w,c
 12947  017F8C  5ADE               	subwfb	postinc2,f,c
 12948  017F8E                     l8057:
 12949                           
 12950                           ;stkvar	_divisor @ sp[(-1)+-16]
 12951  017F8E  90D8               	bcf	status,0,c
 12952  017F90  0EF6               	movlw	-10
 12953  017F92  32E3               	rrcf	plusw1,f,c
 12954  017F94  0EF5               	movlw	-11
 12955  017F96  32E3               	rrcf	plusw1,f,c
 12956  017F98  0EF4               	movlw	-12
 12957  017F9A  32E3               	rrcf	plusw1,f,c
 12958  017F9C  0EF3               	movlw	-13
 12959  017F9E  32E3               	rrcf	plusw1,f,c
 12960  017FA0  0EF2               	movlw	-14
 12961  017FA2  32E3               	rrcf	plusw1,f,c
 12962  017FA4  0EF1               	movlw	-15
 12963  017FA6  32E3               	rrcf	plusw1,f,c
 12964  017FA8  0EF0               	movlw	-16
 12965  017FAA  32E3               	rrcf	plusw1,f,c
 12966  017FAC  0EEF               	movlw	-17
 12967  017FAE  32E3               	rrcf	plusw1,f,c
 12968                           
 12969                           ;stkvar	_counter @ sp[(-1)+0]
 12970  017FB0  0EFF               	movlw	-1
 12971  017FB2  50E3               	movf	plusw1,w,c
 12972  017FB4  6E01               	movwf	btemp^0,c
 12973  017FB6  0E01               	movlw	1
 12974  017FB8  5E01               	subwf	btemp^0,f,c
 12975  017FBA  0EFF               	movlw	-1
 12976  017FBC  0060  F007  FFE3   	movff	btemp,plusw1
 12977  017FC2  A4D8               	btfss	status,2,c
 12978  017FC4  D7A4               	goto	u6900
 12979  017FC6                     u6920:
 12980                           
 12981                           ;stkvar	_dividend @ sp[(-1)+-8]
 12982  017FC6  0EF7               	movlw	247
 12983  017FC8  24E1               	addwf	fsr1l,w,c
 12984  017FCA  6ED9               	movwf	fsr2l,c
 12985  017FCC  0EFF               	movlw	255
 12986  017FCE  20E2               	addwfc	fsr1h,w,c
 12987  017FD0  6EDA               	movwf	fsr2h,c
 12988                           
 12989                           ;stkvar	?___lomod @ sp[(-1)+-8]
 12990  017FD2  0E08               	movlw	8
 12991  017FD4  6E01               	movwf	btemp^0,c
 12992  017FD6  0EF7               	movlw	-9
 12993  017FD8                     us693999:
 12994  017FD8  006F FF7B FFE3     	movff	postinc2,plusw1
 12995  017FDE  28E8               	incf	wreg,w,c
 12996  017FE0  2E01               	decfsz	btemp^0,f,c
 12997  017FE2  D7FA               	bra	us693999
 12998                           
 12999                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13000  017FE4  52E5               	movf	postdec1,f,c
 13001  017FE6  0012               	return		;funcret
 13002  017FE8                     __end_of___lomod:
 13003                           	opt callstack 0
 13004                           
 13005 ;; *************** function ___lodiv *****************
 13006 ;; Defined at:
 13007 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;  dividend        8  [STACK] unsigned long long 
 13010 ;;  divisor         8  [STACK] unsigned long long 
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;  quotient        8  [STACK] unsigned long long 
 13013 ;;  counter         1  [STACK] unsigned char 
 13014 ;; Return value:  Size  Location     Type
 13015 ;;                  8  [STACK] unsigned long long 
 13016 ;; Registers used:
 13017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13018 ;; Tracked objects:
 13019 ;;		On entry : 0/3
 13020 ;;		On exit  : 0/0
 13021 ;;		Unchanged: 0/0
 13022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13027 ;;Total ram usage:        0 bytes
 13028 ;; Hardware stack levels used:    1
 13029 ;; Hardware stack levels required when called:   15
 13030 ;; This function calls:
 13031 ;;		Nothing
 13032 ;; This function is called by:
 13033 ;;		_utoa
 13034 ;; This function uses a reentrant model
 13035 ;;
 13036                           
 13037                           	psect	text50
 13038  017634                     __ptext50:
 13039                           	opt callstack 0
 13040  017634                     ___lodiv:
 13041                           	opt callstack 0
 13042                           
 13043                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13044  017634  0E09               	movlw	9
 13045  017636  26E1               	addwf	fsr1l,f,c
 13046  017638  0E00               	movlw	0
 13047  01763A  22E2               	addwfc	fsr1h,f,c
 13048                           
 13049                           ;stkvar	_quotient @ sp[(-9)+0]
 13050                           
 13051                           ;incstack = 0
 13052 ;; hardware stack exceeded
 13053  01763C  0E07               	movlw	7
 13054  01763E  6E01               	movwf	btemp^0,c
 13055  017640  0EF7               	movlw	-9
 13056  017642                     u6831:
 13057  017642  6AE3               	clrf	plusw1,c
 13058  017644  2AE8               	incf	wreg,f,c
 13059  017646  0601               	decf	btemp^0,f,c
 13060  017648  E2FC               	bc	u6831
 13061                           
 13062                           ;stkvar	_divisor @ sp[(-9)+-16]
 13063  01764A  0EE7               	movlw	-25
 13064  01764C  50E3               	movf	plusw1,w,c
 13065  01764E  E116               	bnz	u6840
 13066  017650  0EE8               	movlw	-24
 13067  017652  50E3               	movf	plusw1,w,c
 13068  017654  E113               	bnz	u6840
 13069  017656  0EE9               	movlw	-23
 13070  017658  50E3               	movf	plusw1,w,c
 13071  01765A  E110               	bnz	u6840
 13072  01765C  0EEA               	movlw	-22
 13073  01765E  50E3               	movf	plusw1,w,c
 13074  017660  E10D               	bnz	u6840
 13075  017662  0EEB               	movlw	-21
 13076  017664  50E3               	movf	plusw1,w,c
 13077  017666  E10A               	bnz	u6840
 13078  017668  0EEC               	movlw	-20
 13079  01766A  50E3               	movf	plusw1,w,c
 13080  01766C  E107               	bnz	u6840
 13081  01766E  0EED               	movlw	-19
 13082  017670  50E3               	movf	plusw1,w,c
 13083  017672  E104               	bnz	u6840
 13084  017674  0EEE               	movlw	-18
 13085  017676  50E3               	movf	plusw1,w,c
 13086  017678  B4D8               	btfsc	status,2,c
 13087  01767A  D088               	goto	u6870
 13088  01767C                     u6840:
 13089                           
 13090                           ;stkvar	_counter @ sp[(-9)+8]
 13091  01767C  0EFF               	movlw	-1
 13092  01767E  6AE3               	clrf	plusw1,c
 13093  017680  D012               	goto	L12
 13094  017682                     l8025:
 13095                           
 13096                           ;stkvar	_divisor @ sp[(-9)+-16]
 13097  017682  90D8               	bcf	status,0,c
 13098  017684  0EE7               	movlw	-25
 13099  017686  36E3               	rlcf	plusw1,f,c
 13100  017688  0EE8               	movlw	-24
 13101  01768A  36E3               	rlcf	plusw1,f,c
 13102  01768C  0EE9               	movlw	-23
 13103  01768E  36E3               	rlcf	plusw1,f,c
 13104  017690  0EEA               	movlw	-22
 13105  017692  36E3               	rlcf	plusw1,f,c
 13106  017694  0EEB               	movlw	-21
 13107  017696  36E3               	rlcf	plusw1,f,c
 13108  017698  0EEC               	movlw	-20
 13109  01769A  36E3               	rlcf	plusw1,f,c
 13110  01769C  0EED               	movlw	-19
 13111  01769E  36E3               	rlcf	plusw1,f,c
 13112  0176A0  0EEE               	movlw	-18
 13113  0176A2  36E3               	rlcf	plusw1,f,c
 13114                           
 13115                           ;stkvar	_counter @ sp[(-9)+8]
 13116  0176A4  0EFF               	movlw	-1
 13117  0176A6                     L12:
 13118  0176A6  2AE3               	incf	plusw1,f,c
 13119                           
 13120                           ;stkvar	_divisor @ sp[(-9)+-16]
 13121  0176A8  0EEE               	movlw	-18
 13122  0176AA  AEE3               	btfss	plusw1,7,c
 13123  0176AC  D7EA               	goto	l8025
 13124  0176AE                     u6850:
 13125                           
 13126                           ;stkvar	_quotient @ sp[(-9)+0]
 13127  0176AE  90D8               	bcf	status,0,c
 13128  0176B0  0EF7               	movlw	-9
 13129  0176B2  36E3               	rlcf	plusw1,f,c
 13130  0176B4  0EF8               	movlw	-8
 13131  0176B6  36E3               	rlcf	plusw1,f,c
 13132  0176B8  0EF9               	movlw	-7
 13133  0176BA  36E3               	rlcf	plusw1,f,c
 13134  0176BC  0EFA               	movlw	-6
 13135  0176BE  36E3               	rlcf	plusw1,f,c
 13136  0176C0  0EFB               	movlw	-5
 13137  0176C2  36E3               	rlcf	plusw1,f,c
 13138  0176C4  0EFC               	movlw	-4
 13139  0176C6  36E3               	rlcf	plusw1,f,c
 13140  0176C8  0EFD               	movlw	-3
 13141  0176CA  36E3               	rlcf	plusw1,f,c
 13142  0176CC  0EFE               	movlw	-2
 13143  0176CE  36E3               	rlcf	plusw1,f,c
 13144                           
 13145                           ;stkvar	_divisor @ sp[(-9)+-16]
 13146                           ;stkvar	_dividend @ sp[(-9)+-8]
 13147  0176D0  50E1               	movf	fsr1l,w,c
 13148  0176D2  0FEF               	addlw	-17
 13149  0176D4  6ED9               	movwf	fsr2l,c
 13150  0176D6  50E2               	movf	fsr1h,w,c
 13151  0176D8  6EDA               	movwf	fsr2h,c
 13152  0176DA  0EFF               	movlw	255
 13153  0176DC  22DA               	addwfc	fsr2h,f,c
 13154  0176DE  0EE7               	movlw	-25
 13155  0176E0  50E3               	movf	plusw1,w,c
 13156  0176E2  5CDE               	subwf	postinc2,w,c
 13157  0176E4  0EE8               	movlw	-24
 13158  0176E6  50E3               	movf	plusw1,w,c
 13159  0176E8  58DE               	subwfb	postinc2,w,c
 13160  0176EA  0EE9               	movlw	-23
 13161  0176EC  50E3               	movf	plusw1,w,c
 13162  0176EE  58DE               	subwfb	postinc2,w,c
 13163  0176F0  0EEA               	movlw	-22
 13164  0176F2  50E3               	movf	plusw1,w,c
 13165  0176F4  58DE               	subwfb	postinc2,w,c
 13166  0176F6  0EEB               	movlw	-21
 13167  0176F8  50E3               	movf	plusw1,w,c
 13168  0176FA  58DE               	subwfb	postinc2,w,c
 13169  0176FC  0EEC               	movlw	-20
 13170  0176FE  50E3               	movf	plusw1,w,c
 13171  017700  58DE               	subwfb	postinc2,w,c
 13172  017702  0EED               	movlw	-19
 13173  017704  50E3               	movf	plusw1,w,c
 13174  017706  58DE               	subwfb	postinc2,w,c
 13175  017708  0EEE               	movlw	-18
 13176  01770A  50E3               	movf	plusw1,w,c
 13177  01770C  58DE               	subwfb	postinc2,w,c
 13178  01770E  A0D8               	btfss	status,0,c
 13179  017710  D021               	goto	l8037
 13180                           
 13181                           ;stkvar	_divisor @ sp[(-9)+-16]
 13182                           ;stkvar	_dividend @ sp[(-9)+-8]
 13183  017712  50E1               	movf	fsr1l,w,c
 13184  017714  0FEF               	addlw	-17
 13185  017716  6ED9               	movwf	fsr2l,c
 13186  017718  50E2               	movf	fsr1h,w,c
 13187  01771A  6EDA               	movwf	fsr2h,c
 13188  01771C  0EFF               	movlw	255
 13189  01771E  22DA               	addwfc	fsr2h,f,c
 13190  017720  0EE7               	movlw	-25
 13191  017722  50E3               	movf	plusw1,w,c
 13192  017724  5EDE               	subwf	postinc2,f,c
 13193  017726  0EE8               	movlw	-24
 13194  017728  50E3               	movf	plusw1,w,c
 13195  01772A  5ADE               	subwfb	postinc2,f,c
 13196  01772C  0EE9               	movlw	-23
 13197  01772E  50E3               	movf	plusw1,w,c
 13198  017730  5ADE               	subwfb	postinc2,f,c
 13199  017732  0EEA               	movlw	-22
 13200  017734  50E3               	movf	plusw1,w,c
 13201  017736  5ADE               	subwfb	postinc2,f,c
 13202  017738  0EEB               	movlw	-21
 13203  01773A  50E3               	movf	plusw1,w,c
 13204  01773C  5ADE               	subwfb	postinc2,f,c
 13205  01773E  0EEC               	movlw	-20
 13206  017740  50E3               	movf	plusw1,w,c
 13207  017742  5ADE               	subwfb	postinc2,f,c
 13208  017744  0EED               	movlw	-19
 13209  017746  50E3               	movf	plusw1,w,c
 13210  017748  5ADE               	subwfb	postinc2,f,c
 13211  01774A  0EEE               	movlw	-18
 13212  01774C  50E3               	movf	plusw1,w,c
 13213  01774E  5ADE               	subwfb	postinc2,f,c
 13214                           
 13215                           ;stkvar	_quotient @ sp[(-9)+0]
 13216  017750  0EF7               	movlw	-9
 13217  017752  80E3               	bsf	plusw1,0,c
 13218  017754                     l8037:
 13219                           
 13220                           ;stkvar	_divisor @ sp[(-9)+-16]
 13221  017754  90D8               	bcf	status,0,c
 13222  017756  0EEE               	movlw	-18
 13223  017758  32E3               	rrcf	plusw1,f,c
 13224  01775A  0EED               	movlw	-19
 13225  01775C  32E3               	rrcf	plusw1,f,c
 13226  01775E  0EEC               	movlw	-20
 13227  017760  32E3               	rrcf	plusw1,f,c
 13228  017762  0EEB               	movlw	-21
 13229  017764  32E3               	rrcf	plusw1,f,c
 13230  017766  0EEA               	movlw	-22
 13231  017768  32E3               	rrcf	plusw1,f,c
 13232  01776A  0EE9               	movlw	-23
 13233  01776C  32E3               	rrcf	plusw1,f,c
 13234  01776E  0EE8               	movlw	-24
 13235  017770  32E3               	rrcf	plusw1,f,c
 13236  017772  0EE7               	movlw	-25
 13237  017774  32E3               	rrcf	plusw1,f,c
 13238                           
 13239                           ;stkvar	_counter @ sp[(-9)+8]
 13240  017776  0EFF               	movlw	-1
 13241  017778  50E3               	movf	plusw1,w,c
 13242  01777A  6E01               	movwf	btemp^0,c
 13243  01777C  0E01               	movlw	1
 13244  01777E  5E01               	subwf	btemp^0,f,c
 13245  017780  0EFF               	movlw	-1
 13246  017782  0060  F007  FFE3   	movff	btemp,plusw1
 13247  017788  A4D8               	btfss	status,2,c
 13248  01778A  D791               	goto	u6850
 13249  01778C                     u6870:
 13250                           
 13251                           ;stkvar	_quotient @ sp[(-9)+0]
 13252  01778C  0EF7               	movlw	247
 13253  01778E  24E1               	addwf	fsr1l,w,c
 13254  017790  6ED9               	movwf	fsr2l,c
 13255  017792  0EFF               	movlw	255
 13256  017794  20E2               	addwfc	fsr1h,w,c
 13257  017796  6EDA               	movwf	fsr2h,c
 13258                           
 13259                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 13260  017798  0E08               	movlw	8
 13261  01779A  6E01               	movwf	btemp^0,c
 13262  01779C  0EEF               	movlw	-17
 13263  01779E                     us688999:
 13264  01779E  006F FF7B FFE3     	movff	postinc2,plusw1
 13265  0177A4  28E8               	incf	wreg,w,c
 13266  0177A6  2E01               	decfsz	btemp^0,f,c
 13267  0177A8  D7FA               	bra	us688999
 13268                           
 13269                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13270  0177AA  0EF7               	movlw	247
 13271  0177AC  26E1               	addwf	fsr1l,f,c
 13272  0177AE  0EFF               	movlw	255
 13273  0177B0  22E2               	addwfc	fsr1h,f,c
 13274  0177B2  0012               	return		;funcret
 13275  0177B4                     __end_of___lodiv:
 13276                           	opt callstack 0
 13277                           
 13278 ;; *************** function _strncmp *****************
 13279 ;; Defined at:
 13280 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 13281 ;; Parameters:    Size  Location     Type
 13282 ;;  _l              2  [STACK] PTR const unsigned char 
 13283 ;;		 -> ct(3), STR_46(79), STR_44(3), STR_43(3), 
 13284 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
 13285 ;;		 -> STR_38(19), STR_37(19), STR_36(24), STR_35(15), 
 13286 ;;		 -> STR_34(15), STR_33(15), STR_32(10), STR_31(10), 
 13287 ;;		 -> STR_30(19), STR_29(19), STR_26(3), STR_25(3), 
 13288 ;;		 -> STR_24(3), STR_23(17), STR_22(16), STR_21(16), 
 13289 ;;		 -> STR_20(19), STR_19(20), STR_18(19), STR_17(19), 
 13290 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
 13291 ;;		 -> STR_12(19), STR_11(17), STR_10(16), STR_9(16), 
 13292 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
 13293 ;;		 -> STR_2(15), STR_1(17), 
 13294 ;;  _r              2  [STACK] PTR const unsigned char 
 13295 ;;		 -> STR_80(3), STR_76(3), STR_71(3), STR_66(3), 
 13296 ;;		 -> STR_61(3), STR_57(3), 
 13297 ;;  n               2  [STACK] unsigned int 
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;  r               2  [STACK] PTR const unsigned char 
 13300 ;;		 -> STR_80(3), STR_76(3), STR_71(3), STR_66(3), 
 13301 ;;		 -> STR_61(3), STR_57(3), 
 13302 ;;  l               2  [STACK] PTR const unsigned char 
 13303 ;;		 -> ct(3), STR_46(79), STR_44(3), STR_43(3), 
 13304 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
 13305 ;;		 -> STR_38(19), STR_37(19), STR_36(24), STR_35(15), 
 13306 ;;		 -> STR_34(15), STR_33(15), STR_32(10), STR_31(10), 
 13307 ;;		 -> STR_30(19), STR_29(19), STR_26(3), STR_25(3), 
 13308 ;;		 -> STR_24(3), STR_23(17), STR_22(16), STR_21(16), 
 13309 ;;		 -> STR_20(19), STR_19(20), STR_18(19), STR_17(19), 
 13310 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
 13311 ;;		 -> STR_12(19), STR_11(17), STR_10(16), STR_9(16), 
 13312 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
 13313 ;;		 -> STR_2(15), STR_1(17), 
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  2  [STACK] int 
 13316 ;; Registers used:
 13317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 13318 ;; Tracked objects:
 13319 ;;		On entry : 0/0
 13320 ;;		On exit  : 0/0
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13327 ;;Total ram usage:        0 bytes
 13328 ;; Hardware stack levels used:    1
 13329 ;; Hardware stack levels required when called:   15
 13330 ;; This function calls:
 13331 ;;		Nothing
 13332 ;; This function is called by:
 13333 ;;		_vfpfcnvrt
 13334 ;; This function uses a reentrant model
 13335 ;;
 13336                           
 13337                           	psect	text51
 13338  016AAC                     __ptext51:
 13339                           	opt callstack 0
 13340  016AAC                     _strncmp:
 13341                           	opt callstack 0
 13342                           
 13343                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13344  016AAC  52E6               	movf	postinc1,f,c
 13345  016AAE  52E6               	movf	postinc1,f,c
 13346  016AB0  52E6               	movf	postinc1,f,c
 13347  016AB2  52E6               	movf	postinc1,f,c
 13348                           
 13349                           ;stkvar	__l @ sp[(-4)+-2]
 13350                           
 13351                           ;incstack = 0
 13352 ;; hardware stack exceeded
 13353  016AB4  0EFA               	movlw	-6
 13354  016AB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 13355  016ABC  0EFB               	movlw	-5
 13356  016ABE  006F FF8C  F00C    	movff	plusw1,btemp+11
 13357                           
 13358                           ;stkvar	_l @ sp[(-4)+2]
 13359  016AC4  0EFF               	movlw	-1
 13360  016AC6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13361  016ACC  0EFE               	movlw	-2
 13362  016ACE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13363                           
 13364                           ;stkvar	__r @ sp[(-4)+-4]
 13365  016AD4  0EF8               	movlw	-8
 13366  016AD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 13367  016ADC  0EF9               	movlw	-7
 13368  016ADE  006F FF8C  F00C    	movff	plusw1,btemp+11
 13369                           
 13370                           ;stkvar	_r @ sp[(-4)+0]
 13371  016AE4  0EFD               	movlw	-3
 13372  016AE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13373  016AEC  0EFC               	movlw	-4
 13374  016AEE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13375                           
 13376                           ;stkvar	_n @ sp[(-4)+-6]
 13377  016AF4  0EF6               	movlw	-10
 13378  016AF6  006F FF8C  F001    	movff	plusw1,btemp
 13379  016AFC  0E01               	movlw	1
 13380  016AFE  5E01               	subwf	btemp^0,f,c
 13381  016B00  0EF6               	movlw	-10
 13382  016B02  0060  F007  FFE3   	movff	btemp,plusw1
 13383  016B08  0EF7               	movlw	-9
 13384  016B0A  006F FF8C  F001    	movff	plusw1,btemp
 13385  016B10  0E00               	movlw	0
 13386  016B12  5A01               	subwfb	btemp^0,f,c
 13387  016B14  0EF7               	movlw	-9
 13388  016B16  0060  F007  FFE3   	movff	btemp,plusw1
 13389  016B1C  0EF6               	movlw	-10
 13390  016B1E  28E3               	incf	plusw1,w,c
 13391  016B20  E13F               	bnz	l8733
 13392  016B22  0EF7               	movlw	-9
 13393  016B24  28E3               	incf	plusw1,w,c
 13394  016B26  A4D8               	btfss	status,2,c
 13395  016B28  D03B               	goto	l8733
 13396  016B2A  0E00               	movlw	0
 13397  016B2C  6E01               	movwf	btemp^0,c
 13398  016B2E  0E00               	movlw	0
 13399  016B30  6E02               	movwf	(btemp+1)^0,c
 13400  016B32  D0C7               	goto	l3309
 13401  016B34                     l8731:
 13402                           
 13403                           ;stkvar	_l @ sp[(-4)+2]
 13404  016B34  0EFE               	movlw	-2
 13405  016B36  50E3               	movf	plusw1,w,c
 13406  016B38  0F01               	addlw	1
 13407  016B3A  6E01               	movwf	btemp^0,c
 13408  016B3C  0EFE               	movlw	-2
 13409  016B3E  0060  F007  FFE3   	movff	btemp,plusw1
 13410  016B44  6A01               	clrf	btemp^0,c
 13411  016B46  0EFF               	movlw	-1
 13412  016B48  50E3               	movf	plusw1,w,c
 13413  016B4A  2001               	addwfc	btemp^0,w,c
 13414  016B4C  6E01               	movwf	btemp^0,c
 13415  016B4E  0EFF               	movlw	-1
 13416  016B50  0060  F007  FFE3   	movff	btemp,plusw1
 13417                           
 13418                           ;stkvar	_r @ sp[(-4)+0]
 13419  016B56  0EFC               	movlw	-4
 13420  016B58  50E3               	movf	plusw1,w,c
 13421  016B5A  0F01               	addlw	1
 13422  016B5C  6E01               	movwf	btemp^0,c
 13423  016B5E  0EFC               	movlw	-4
 13424  016B60  0060  F007  FFE3   	movff	btemp,plusw1
 13425  016B66  6A01               	clrf	btemp^0,c
 13426  016B68  0EFD               	movlw	-3
 13427  016B6A  50E3               	movf	plusw1,w,c
 13428  016B6C  2001               	addwfc	btemp^0,w,c
 13429  016B6E  6E01               	movwf	btemp^0,c
 13430  016B70  0EFD               	movlw	-3
 13431  016B72  0060  F007  FFE3   	movff	btemp,plusw1
 13432                           
 13433                           ;stkvar	_n @ sp[(-4)+-6]
 13434  016B78  0EF6               	movlw	-10
 13435  016B7A  006F FF8C  F001    	movff	plusw1,btemp
 13436  016B80  0E01               	movlw	1
 13437  016B82  5E01               	subwf	btemp^0,f,c
 13438  016B84  0EF6               	movlw	-10
 13439  016B86  0060  F007  FFE3   	movff	btemp,plusw1
 13440  016B8C  0EF7               	movlw	-9
 13441  016B8E  006F FF8C  F001    	movff	plusw1,btemp
 13442  016B94  0E00               	movlw	0
 13443  016B96  5A01               	subwfb	btemp^0,f,c
 13444  016B98  0EF7               	movlw	-9
 13445  016B9A  0060  F007  FFE3   	movff	btemp,plusw1
 13446  016BA0                     l8733:
 13447                           
 13448                           ;stkvar	_l @ sp[(-4)+2]
 13449  016BA0  0EFE               	movlw	-2
 13450  016BA2  006F FF8F FFF6     	movff	plusw1,tblptrl
 13451  016BA8  0EFF               	movlw	-1
 13452  016BAA  006F FF8F FFF7     	movff	plusw1,tblptrh
 13453  016BB0  0E00               	movlw	low (__mediumconst shr (0+16))
 13454  016BB2  6EF8               	movwf	tblptru,c
 13455  016BB4  0E1F               	movlw	(high __ramtop+-1)
 13456  016BB6  64F7               	cpfsgt	tblptrh,c
 13457  016BB8  D003               	bra	u8167
 13458  016BBA  0008               	tblrd		*
 13459  016BBC  50F5               	movf	tablat,w,c
 13460  016BBE  D007               	bra	u8160
 13461  016BC0                     u8167:
 13462  016BC0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13463  016BC6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13464  016BCC  50EF               	movf	indf0,w,c
 13465  016BCE                     u8160:
 13466  016BCE  0900               	iorlw	0
 13467  016BD0  B4D8               	btfsc	status,2,c
 13468  016BD2  D04A               	goto	u8200
 13469                           
 13470                           ;stkvar	_r @ sp[(-4)+0]
 13471  016BD4  50E1               	movf	fsr1l,w,c
 13472  016BD6  0FFC               	addlw	-4
 13473  016BD8  6ED9               	movwf	fsr2l,c
 13474  016BDA  50E2               	movf	fsr1h,w,c
 13475  016BDC  6EDA               	movwf	fsr2h,c
 13476  016BDE  0EFF               	movlw	255
 13477  016BE0  22DA               	addwfc	fsr2h,f,c
 13478  016BE2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13479  016BE8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13480  016BEE                     	if	0	;tblptru may be non-zero
 13481  016BEE                     	endif
 13482  016BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13483  016BEE  0E00               	movlw	low (__mediumconst shr (0+16))
 13484  016BF0  6EF8               	movwf	tblptru,c
 13485  016BF2                     	endif
 13486  016BF2  0008               	tblrd		*
 13487  016BF4  50F5               	movf	tablat,w,c
 13488  016BF6  0900               	iorlw	0
 13489  016BF8  B4D8               	btfsc	status,2,c
 13490  016BFA  D036               	goto	u8200
 13491                           
 13492                           ;stkvar	_n @ sp[(-4)+-6]
 13493  016BFC  0EF6               	movlw	-10
 13494  016BFE  006F FF8C  F001    	movff	plusw1,btemp
 13495  016C04  0EF7               	movlw	-9
 13496  016C06  50E3               	movf	plusw1,w,c
 13497  016C08  1001               	iorwf	btemp^0,w,c
 13498  016C0A  B4D8               	btfsc	status,2,c
 13499  016C0C  D02D               	goto	u8200
 13500                           
 13501                           ;stkvar	_r @ sp[(-4)+0]
 13502  016C0E  50E1               	movf	fsr1l,w,c
 13503  016C10  0FFC               	addlw	-4
 13504  016C12  6ED9               	movwf	fsr2l,c
 13505  016C14  50E2               	movf	fsr1h,w,c
 13506  016C16  6EDA               	movwf	fsr2h,c
 13507  016C18  0EFF               	movlw	255
 13508  016C1A  22DA               	addwfc	fsr2h,f,c
 13509  016C1C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13510  016C22  006F FF77 FFF7     	movff	postdec2,tblptrh
 13511  016C28                     	if	0	;tblptru may be non-zero
 13512  016C28                     	endif
 13513  016C28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13514  016C28  0E00               	movlw	low (__mediumconst shr (0+16))
 13515  016C2A  6EF8               	movwf	tblptru,c
 13516  016C2C                     	endif
 13517  016C2C  0008               	tblrd		*
 13518  016C2E  006F FFD4  F00C    	movff	tablat,btemp+11
 13519                           
 13520                           ;stkvar	_l @ sp[(-4)+2]
 13521  016C34  0EFE               	movlw	-2
 13522  016C36  006F FF8F FFF6     	movff	plusw1,tblptrl
 13523  016C3C  0EFF               	movlw	-1
 13524  016C3E  006F FF8F FFF7     	movff	plusw1,tblptrh
 13525  016C44  0E00               	movlw	low (__mediumconst shr (0+16))
 13526  016C46  6EF8               	movwf	tblptru,c
 13527  016C48  0E1F               	movlw	(high __ramtop+-1)
 13528  016C4A  64F7               	cpfsgt	tblptrh,c
 13529  016C4C  D003               	bra	u8207
 13530  016C4E  0008               	tblrd		*
 13531  016C50  50F5               	movf	tablat,w,c
 13532  016C52  D007               	bra	u8205
 13533  016C54                     u8207:
 13534  016C54  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13535  016C5A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13536  016C60  50EF               	movf	indf0,w,c
 13537  016C62                     u8205:
 13538  016C62  180C               	xorwf	(btemp+11)^0,w,c
 13539  016C64  B4D8               	btfsc	status,2,c
 13540  016C66  D766               	goto	l8731
 13541  016C68                     u8200:
 13542                           
 13543                           ;stkvar	_l @ sp[(-4)+2]
 13544  016C68  0EFE               	movlw	-2
 13545  016C6A  006F FF8F FFF6     	movff	plusw1,tblptrl
 13546  016C70  0EFF               	movlw	-1
 13547  016C72  006F FF8F FFF7     	movff	plusw1,tblptrh
 13548  016C78  0E00               	movlw	low (__mediumconst shr (0+16))
 13549  016C7A  6EF8               	movwf	tblptru,c
 13550  016C7C  0E1F               	movlw	(high __ramtop+-1)
 13551  016C7E  64F7               	cpfsgt	tblptrh,c
 13552  016C80  D003               	bra	u8217
 13553  016C82  0008               	tblrd		*
 13554  016C84  50F5               	movf	tablat,w,c
 13555  016C86  D007               	bra	u8210
 13556  016C88                     u8217:
 13557  016C88  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13558  016C8E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13559  016C94  50EF               	movf	indf0,w,c
 13560  016C96                     u8210:
 13561  016C96  6E01               	movwf	btemp^0,c
 13562  016C98  6A02               	clrf	(btemp+1)^0,c
 13563                           
 13564                           ;stkvar	_r @ sp[(-4)+0]
 13565  016C9A  50E1               	movf	fsr1l,w,c
 13566  016C9C  0FFC               	addlw	-4
 13567  016C9E  6ED9               	movwf	fsr2l,c
 13568  016CA0  50E2               	movf	fsr1h,w,c
 13569  016CA2  6EDA               	movwf	fsr2h,c
 13570  016CA4  0EFF               	movlw	255
 13571  016CA6  22DA               	addwfc	fsr2h,f,c
 13572  016CA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13573  016CAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13574  016CB4                     	if	0	;tblptru may be non-zero
 13575  016CB4                     	endif
 13576  016CB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13577  016CB4  0E00               	movlw	low (__mediumconst shr (0+16))
 13578  016CB6  6EF8               	movwf	tblptru,c
 13579  016CB8                     	endif
 13580  016CB8  0008               	tblrd		*
 13581  016CBA  50F5               	movf	tablat,w,c
 13582  016CBC  5E01               	subwf	btemp^0,f,c
 13583  016CBE  0E00               	movlw	0
 13584  016CC0  5A02               	subwfb	(btemp+1)^0,f,c
 13585  016CC2                     l3309:
 13586                           
 13587                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 13588  016CC2  0EF6               	movlw	246
 13589  016CC4  26E1               	addwf	fsr1l,f,c
 13590  016CC6  0EFF               	movlw	255
 13591  016CC8  22E2               	addwfc	fsr1h,f,c
 13592  016CCA  0012               	return		;funcret
 13593  016CCC                     __end_of_strncmp:
 13594                           	opt callstack 0
 13595                           
 13596 ;; *************** function _stoa *****************
 13597 ;; Defined at:
 13598 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13599 ;; Parameters:    Size  Location     Type
 13600 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13601 ;;		 -> f(6), NULL(0), 
 13602 ;;  s               2  [STACK] PTR unsigned char 
 13603 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 13604 ;;		 -> D.lcd(288), D(290), T(144), STR_7(4), 
 13605 ;;		 -> STR_3(4), V(188), 
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;  nuls            7  [STACK] unsigned char [7]
 13608 ;;  l               2  [STACK] int 
 13609 ;;  p               2  [STACK] int 
 13610 ;;  cp              2  [STACK] PTR unsigned char 
 13611 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 13612 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 13613 ;;		 -> STR_7(4), STR_3(4), V(188), 
 13614 ;;  w               2  [STACK] int 
 13615 ;;  i               2  [STACK] int 
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  2  [STACK] int 
 13618 ;; Registers used:
 13619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13620 ;; Tracked objects:
 13621 ;;		On entry : 0/0
 13622 ;;		On exit  : 0/0
 13623 ;;		Unchanged: 0/0
 13624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;Total ram usage:        0 bytes
 13630 ;; Hardware stack levels used:    1
 13631 ;; Hardware stack levels required when called:   18
 13632 ;; This function calls:
 13633 ;;		_fputc
 13634 ;;		_strlen
 13635 ;; This function is called by:
 13636 ;;		_vfpfcnvrt
 13637 ;; This function uses a reentrant model
 13638 ;;
 13639                           
 13640                           	psect	text52
 13641  0160BA                     __ptext52:
 13642                           	opt callstack 0
 13643  0160BA                     _stoa:
 13644                           	opt callstack 0
 13645                           
 13646                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13647  0160BA  0E11               	movlw	17
 13648  0160BC  26E1               	addwf	fsr1l,f,c
 13649  0160BE  0E00               	movlw	0
 13650  0160C0  22E2               	addwfc	fsr1h,f,c
 13651                           
 13652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 13653                           
 13654                           ;incstack = 0
 13655 ;; hardware stack exceeded
 13656  0160C2  EE20  F1D3         	lfsr	2,stoa@F1166
 13657                           
 13658                           ;stkvar	_nuls @ sp[(-17)+0]
 13659  0160C6  0E07               	movlw	7
 13660  0160C8  6E01               	movwf	btemp^0,c
 13661  0160CA  0EEF               	movlw	-17
 13662  0160CC                     us1073999:
 13663  0160CC  006F FF7B FFE3     	movff	postinc2,plusw1
 13664  0160D2  28E8               	incf	wreg,w,c
 13665  0160D4  2E01               	decfsz	btemp^0,f,c
 13666  0160D6  D7FA               	bra	us1073999
 13667                           
 13668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 13669                           ;stkvar	_s @ sp[(-17)+-4]
 13670  0160D8  0EEB               	movlw	-21
 13671  0160DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 13672  0160E0  0EEC               	movlw	-20
 13673  0160E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 13674                           
 13675                           ;stkvar	_cp @ sp[(-17)+11]
 13676  0160E8  0EFB               	movlw	-5
 13677  0160EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13678  0160F0  0EFA               	movlw	-6
 13679  0160F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13680                           
 13681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 13682                           ;stkvar	_cp @ sp[(-17)+11]
 13683  0160F8  0EFA               	movlw	-6
 13684  0160FA  006F FF8C  F001    	movff	plusw1,btemp
 13685  016100  0EFB               	movlw	-5
 13686  016102  50E3               	movf	plusw1,w,c
 13687  016104  1001               	iorwf	btemp^0,w,c
 13688  016106  A4D8               	btfss	status,2,c
 13689  016108  D00E               	goto	l11223
 13690                           
 13691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 13692                           ;stkvar	_nuls @ sp[(-17)+0]
 13693  01610A  0EEF               	movlw	239
 13694  01610C  24E1               	addwf	fsr1l,w,c
 13695  01610E  6E0B               	movwf	(btemp+10)^0,c
 13696  016110  0EFF               	movlw	255
 13697  016112  20E2               	addwfc	fsr1h,w,c
 13698  016114  6E0C               	movwf	(btemp+11)^0,c
 13699                           
 13700                           ;stkvar	_cp @ sp[(-17)+11]
 13701  016116  0EFB               	movlw	-5
 13702  016118  0060  F033  FFE3   	movff	btemp+11,plusw1
 13703  01611E  0EFA               	movlw	-6
 13704  016120  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13705  016126                     l11223:
 13706                           
 13707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 13708                           ;stkvar	_cp @ sp[(-17)+11]
 13709  016126  0EFA               	movlw	-6
 13710  016128  006F FF8F FFE6     	movff	plusw1,postinc1
 13711  01612E  006F FF8F FFE6     	movff	plusw1,postinc1
 13712  016134  EC42  F0C8         	call	_strlen	;wreg free
 13713                           
 13714                           ;stkvar	_l @ sp[(-17)+7]
 13715  016138  0EF6               	movlw	-10
 13716  01613A  0060  F007  FFE3   	movff	btemp,plusw1
 13717  016140  0EF7               	movlw	-9
 13718  016142  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13719                           
 13720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 13721                           ;stkvar	_p @ sp[(-17)+9]
 13722  016148  0EF8               	movlw	-8
 13723  01614A  0060  F08F  FFE3   	movff	_prec,plusw1
 13724  016150  0EF9               	movlw	-7
 13725  016152  0060  F093  FFE3   	movff	_prec+1,plusw1
 13726                           
 13727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 13728                           ;stkvar	_p @ sp[(-17)+9]
 13729  016158  0EF9               	movlw	-7
 13730  01615A  BEE3               	btfsc	plusw1,7,c
 13731  01615C  D023               	goto	l2139
 13732                           
 13733                           ;stkvar	_l @ sp[(-17)+7]
 13734                           ;stkvar	_p @ sp[(-17)+9]
 13735  01615E  50E1               	movf	fsr1l,w,c
 13736  016160  0FF8               	addlw	-8
 13737  016162  6ED9               	movwf	fsr2l,c
 13738  016164  50E2               	movf	fsr1h,w,c
 13739  016166  6EDA               	movwf	fsr2h,c
 13740  016168  0EFF               	movlw	255
 13741  01616A  22DA               	addwfc	fsr2h,f,c
 13742  01616C  0EF6               	movlw	-10
 13743  01616E  50E3               	movf	plusw1,w,c
 13744  016170  5CDE               	subwf	postinc2,w,c
 13745  016172  50DE               	movf	postinc2,w,c
 13746  016174  0A80               	xorlw	128
 13747  016176  6E01               	movwf	btemp^0,c
 13748  016178  0EF7               	movlw	-9
 13749  01617A  50E3               	movf	plusw1,w,c
 13750  01617C  0A80               	xorlw	128
 13751  01617E  5801               	subwfb	btemp^0,w,c
 13752  016180  B0D8               	btfsc	status,0,c
 13753  016182  D010               	goto	l2139
 13754                           
 13755                           ;stkvar	_p @ sp[(-17)+9]
 13756                           ;stkvar	_l @ sp[(-17)+7]
 13757  016184  0EF8               	movlw	-8
 13758  016186  006F FF8C  F001    	movff	plusw1,btemp
 13759  01618C  0EF6               	movlw	-10
 13760  01618E  0060  F007  FFE3   	movff	btemp,plusw1
 13761  016194  0EF9               	movlw	-7
 13762  016196  006F FF8C  F001    	movff	plusw1,btemp
 13763  01619C  0EF7               	movlw	-9
 13764  01619E  0060  F007  FFE3   	movff	btemp,plusw1
 13765  0161A4                     l2139:
 13766                           
 13767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 13768                           ;stkvar	_l @ sp[(-17)+7]
 13769                           ;stkvar	_p @ sp[(-17)+9]
 13770  0161A4  0EF6               	movlw	-10
 13771  0161A6  006F FF8C  F001    	movff	plusw1,btemp
 13772  0161AC  0EF8               	movlw	-8
 13773  0161AE  0060  F007  FFE3   	movff	btemp,plusw1
 13774  0161B4  0EF7               	movlw	-9
 13775  0161B6  006F FF8C  F001    	movff	plusw1,btemp
 13776  0161BC  0EF9               	movlw	-7
 13777  0161BE  0060  F007  FFE3   	movff	btemp,plusw1
 13778                           
 13779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 13780                           ;stkvar	_w @ sp[(-17)+13]
 13781  0161C4  0EFC               	movlw	-4
 13782  0161C6  0060  F087  FFE3   	movff	_width,plusw1
 13783  0161CC  0EFD               	movlw	-3
 13784  0161CE  0060  F08B  FFE3   	movff	_width+1,plusw1
 13785                           
 13786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 13787  0161D4  A025               	btfss	_flags^0,0,c
 13788  0161D6  D01F               	goto	l11243
 13789  0161D8  D031               	goto	u10780
 13790  0161DA                     l11239:
 13791                           
 13792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 13793                           ;stkvar	_fp @ sp[(-17)+-2]
 13794  0161DA  0EED               	movlw	-19
 13795  0161DC  006F FF8F FFE6     	movff	plusw1,postinc1
 13796  0161E2  006F FF8F FFE6     	movff	plusw1,postinc1
 13797  0161E8  0E20               	movlw	32
 13798  0161EA  6EE6               	movwf	postinc1,c
 13799  0161EC  0E00               	movlw	0
 13800  0161EE  6EE6               	movwf	postinc1,c
 13801  0161F0  EC1F  F0C1         	call	_fputc	;wreg free
 13802                           
 13803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 13804                           ;stkvar	_l @ sp[(-17)+7]
 13805  0161F4  0EF6               	movlw	-10
 13806  0161F6  50E3               	movf	plusw1,w,c
 13807  0161F8  0F01               	addlw	1
 13808  0161FA  6E01               	movwf	btemp^0,c
 13809  0161FC  0EF6               	movlw	-10
 13810  0161FE  0060  F007  FFE3   	movff	btemp,plusw1
 13811  016204  6A01               	clrf	btemp^0,c
 13812  016206  0EF7               	movlw	-9
 13813  016208  50E3               	movf	plusw1,w,c
 13814  01620A  2001               	addwfc	btemp^0,w,c
 13815  01620C  6E01               	movwf	btemp^0,c
 13816  01620E  0EF7               	movlw	-9
 13817  016210  0060  F007  FFE3   	movff	btemp,plusw1
 13818  016216                     l11243:
 13819                           
 13820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 13821                           ;stkvar	_w @ sp[(-17)+13]
 13822                           ;stkvar	_l @ sp[(-17)+7]
 13823  016216  50E1               	movf	fsr1l,w,c
 13824  016218  0FF6               	addlw	-10
 13825  01621A  6ED9               	movwf	fsr2l,c
 13826  01621C  50E2               	movf	fsr1h,w,c
 13827  01621E  6EDA               	movwf	fsr2h,c
 13828  016220  0EFF               	movlw	255
 13829  016222  22DA               	addwfc	fsr2h,f,c
 13830  016224  0EFC               	movlw	-4
 13831  016226  50E3               	movf	plusw1,w,c
 13832  016228  5CDE               	subwf	postinc2,w,c
 13833  01622A  50DE               	movf	postinc2,w,c
 13834  01622C  0A80               	xorlw	128
 13835  01622E  6E01               	movwf	btemp^0,c
 13836  016230  0EFD               	movlw	-3
 13837  016232  50E3               	movf	plusw1,w,c
 13838  016234  0A80               	xorlw	128
 13839  016236  5801               	subwfb	btemp^0,w,c
 13840  016238  A0D8               	btfss	status,0,c
 13841  01623A  D7CF               	goto	l11239
 13842  01623C                     u10780:
 13843                           
 13844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 13845                           ;stkvar	_i @ sp[(-17)+15]
 13846  01623C  0EFE               	movlw	-2
 13847  01623E  6AE3               	clrf	plusw1,c
 13848  016240  0EFF               	movlw	-1
 13849  016242  6AE3               	clrf	plusw1,c
 13850                           
 13851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13852  016244  D045               	goto	l11253
 13853  016246                     l11247:
 13854                           
 13855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 13856                           ;stkvar	_fp @ sp[(-17)+-2]
 13857  016246  0EED               	movlw	-19
 13858  016248  006F FF8F FFE6     	movff	plusw1,postinc1
 13859  01624E  006F FF8F FFE6     	movff	plusw1,postinc1
 13860                           
 13861                           ;stkvar	_cp @ sp[(-19)+11]
 13862  016254  0EF8               	movlw	-8
 13863  016256  006F FF8F FFF6     	movff	plusw1,tblptrl
 13864  01625C  0EF9               	movlw	-7
 13865  01625E  006F FF8F FFF7     	movff	plusw1,tblptrh
 13866  016264  0E00               	movlw	low (__mediumconst shr (0+16))
 13867  016266  6EF8               	movwf	tblptru,c
 13868  016268  0E1F               	movlw	(high __ramtop+-1)
 13869  01626A  64F7               	cpfsgt	tblptrh,c
 13870  01626C  D003               	bra	u10797
 13871  01626E  0008               	tblrd		*
 13872  016270  50F5               	movf	tablat,w,c
 13873  016272  D007               	bra	u10790
 13874  016274                     u10797:
 13875  016274  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13876  01627A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13877  016280  50EF               	movf	indf0,w,c
 13878  016282                     u10790:
 13879  016282  6EE6               	movwf	postinc1,c
 13880  016284  0E00               	movlw	0
 13881  016286  6EE6               	movwf	postinc1,c
 13882  016288  EC1F  F0C1         	call	_fputc	;wreg free
 13883                           
 13884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 13885                           ;stkvar	_cp @ sp[(-17)+11]
 13886  01628C  0EFA               	movlw	-6
 13887  01628E  50E3               	movf	plusw1,w,c
 13888  016290  0F01               	addlw	1
 13889  016292  6E01               	movwf	btemp^0,c
 13890  016294  0EFA               	movlw	-6
 13891  016296  0060  F007  FFE3   	movff	btemp,plusw1
 13892  01629C  6A01               	clrf	btemp^0,c
 13893  01629E  0EFB               	movlw	-5
 13894  0162A0  50E3               	movf	plusw1,w,c
 13895  0162A2  2001               	addwfc	btemp^0,w,c
 13896  0162A4  6E01               	movwf	btemp^0,c
 13897  0162A6  0EFB               	movlw	-5
 13898  0162A8  0060  F007  FFE3   	movff	btemp,plusw1
 13899                           
 13900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 13901                           ;stkvar	_i @ sp[(-17)+15]
 13902  0162AE  0EFE               	movlw	-2
 13903  0162B0  50E3               	movf	plusw1,w,c
 13904  0162B2  0F01               	addlw	1
 13905  0162B4  6E01               	movwf	btemp^0,c
 13906  0162B6  0EFE               	movlw	-2
 13907  0162B8  0060  F007  FFE3   	movff	btemp,plusw1
 13908  0162BE  6A01               	clrf	btemp^0,c
 13909  0162C0  0EFF               	movlw	-1
 13910  0162C2  50E3               	movf	plusw1,w,c
 13911  0162C4  2001               	addwfc	btemp^0,w,c
 13912  0162C6  6E01               	movwf	btemp^0,c
 13913  0162C8  0EFF               	movlw	-1
 13914  0162CA  0060  F007  FFE3   	movff	btemp,plusw1
 13915  0162D0                     l11253:
 13916                           
 13917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13918                           ;stkvar	_p @ sp[(-17)+9]
 13919                           ;stkvar	_i @ sp[(-17)+15]
 13920  0162D0  50E1               	movf	fsr1l,w,c
 13921  0162D2  0FFE               	addlw	-2
 13922  0162D4  6ED9               	movwf	fsr2l,c
 13923  0162D6  50E2               	movf	fsr1h,w,c
 13924  0162D8  6EDA               	movwf	fsr2h,c
 13925  0162DA  0EFF               	movlw	255
 13926  0162DC  22DA               	addwfc	fsr2h,f,c
 13927  0162DE  0EF8               	movlw	-8
 13928  0162E0  50E3               	movf	plusw1,w,c
 13929  0162E2  5CDE               	subwf	postinc2,w,c
 13930  0162E4  50DE               	movf	postinc2,w,c
 13931  0162E6  0A80               	xorlw	128
 13932  0162E8  6E01               	movwf	btemp^0,c
 13933  0162EA  0EF9               	movlw	-7
 13934  0162EC  50E3               	movf	plusw1,w,c
 13935  0162EE  0A80               	xorlw	128
 13936  0162F0  5801               	subwfb	btemp^0,w,c
 13937  0162F2  A0D8               	btfss	status,0,c
 13938  0162F4  D7A8               	goto	l11247
 13939                           
 13940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 13941  0162F6  B025               	btfsc	_flags^0,0,c
 13942  0162F8  D01F               	goto	l11261
 13943  0162FA  D031               	goto	u10820
 13944  0162FC                     l11257:
 13945                           
 13946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 13947                           ;stkvar	_fp @ sp[(-17)+-2]
 13948  0162FC  0EED               	movlw	-19
 13949  0162FE  006F FF8F FFE6     	movff	plusw1,postinc1
 13950  016304  006F FF8F FFE6     	movff	plusw1,postinc1
 13951  01630A  0E20               	movlw	32
 13952  01630C  6EE6               	movwf	postinc1,c
 13953  01630E  0E00               	movlw	0
 13954  016310  6EE6               	movwf	postinc1,c
 13955  016312  EC1F  F0C1         	call	_fputc	;wreg free
 13956                           
 13957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 13958                           ;stkvar	_l @ sp[(-17)+7]
 13959  016316  0EF6               	movlw	-10
 13960  016318  50E3               	movf	plusw1,w,c
 13961  01631A  0F01               	addlw	1
 13962  01631C  6E01               	movwf	btemp^0,c
 13963  01631E  0EF6               	movlw	-10
 13964  016320  0060  F007  FFE3   	movff	btemp,plusw1
 13965  016326  6A01               	clrf	btemp^0,c
 13966  016328  0EF7               	movlw	-9
 13967  01632A  50E3               	movf	plusw1,w,c
 13968  01632C  2001               	addwfc	btemp^0,w,c
 13969  01632E  6E01               	movwf	btemp^0,c
 13970  016330  0EF7               	movlw	-9
 13971  016332  0060  F007  FFE3   	movff	btemp,plusw1
 13972  016338                     l11261:
 13973                           
 13974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 13975                           ;stkvar	_w @ sp[(-17)+13]
 13976                           ;stkvar	_l @ sp[(-17)+7]
 13977  016338  50E1               	movf	fsr1l,w,c
 13978  01633A  0FF6               	addlw	-10
 13979  01633C  6ED9               	movwf	fsr2l,c
 13980  01633E  50E2               	movf	fsr1h,w,c
 13981  016340  6EDA               	movwf	fsr2h,c
 13982  016342  0EFF               	movlw	255
 13983  016344  22DA               	addwfc	fsr2h,f,c
 13984  016346  0EFC               	movlw	-4
 13985  016348  50E3               	movf	plusw1,w,c
 13986  01634A  5CDE               	subwf	postinc2,w,c
 13987  01634C  50DE               	movf	postinc2,w,c
 13988  01634E  0A80               	xorlw	128
 13989  016350  6E01               	movwf	btemp^0,c
 13990  016352  0EFD               	movlw	-3
 13991  016354  50E3               	movf	plusw1,w,c
 13992  016356  0A80               	xorlw	128
 13993  016358  5801               	subwfb	btemp^0,w,c
 13994  01635A  A0D8               	btfss	status,0,c
 13995  01635C  D7CF               	goto	l11257
 13996  01635E                     u10820:
 13997                           
 13998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 13999                           ;stkvar	_l @ sp[(-17)+7]
 14000  01635E  0EF6               	movlw	-10
 14001  016360  006F FF8C  F001    	movff	plusw1,btemp
 14002  016366  0EF7               	movlw	-9
 14003  016368  006F FF8C  F002    	movff	plusw1,btemp+1
 14004                           
 14005                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14006  01636E  0EEB               	movlw	235
 14007  016370  26E1               	addwf	fsr1l,f,c
 14008  016372  0EFF               	movlw	255
 14009  016374  22E2               	addwfc	fsr1h,f,c
 14010  016376  0012               	return		;funcret
 14011  016378                     __end_of_stoa:
 14012                           	opt callstack 0
 14013                           
 14014 ;; *************** function _efgtoa *****************
 14015 ;; Defined at:
 14016 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14019 ;;		 -> f(6), NULL(0), 
 14020 ;;  f               4  [STACK] PTR struct _IO_FILE
 14021 ;;  c               1  [STACK] unsigned char 
 14022 ;; Auto vars:     Size  Location     Type
 14023 ;;  u               4  [STACK] unsigned char 
 14024 ;;  g               4  [STACK] unsigned char 
 14025 ;;  l               4  [STACK] unsigned char 
 14026 ;;  h               4  [STACK] unsigned char 
 14027 ;;  ou              4  [STACK] unsigned char 
 14028 ;;  n               2  [STACK] int 
 14029 ;;  e               2  [STACK] int 
 14030 ;;  i               2  [STACK] int 
 14031 ;;  w               2  [STACK] int 
 14032 ;;  p               2  [STACK] int 
 14033 ;;  sign            2  [STACK] int 
 14034 ;;  d               2  [STACK] int 
 14035 ;;  ne              2  [STACK] int 
 14036 ;;  m               2  [STACK] int 
 14037 ;;  pp              2  [STACK] int 
 14038 ;;  t               2  [STACK] int 
 14039 ;;  mode            1  [STACK] unsigned char 
 14040 ;;  nmode           1  [STACK] unsigned char 
 14041 ;; Return value:  Size  Location     Type
 14042 ;;                  2  [STACK] int 
 14043 ;; Registers used:
 14044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14045 ;; Tracked objects:
 14046 ;;		On entry : 0/0
 14047 ;;		On exit  : 0/0
 14048 ;;		Unchanged: 0/0
 14049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14054 ;;Total ram usage:        0 bytes
 14055 ;; Hardware stack levels used:    1
 14056 ;; Hardware stack levels required when called:   20
 14057 ;; This function calls:
 14058 ;;		___awdiv
 14059 ;;		___awmod
 14060 ;;		___fladd
 14061 ;;		___fldiv
 14062 ;;		___fleq
 14063 ;;		___flge
 14064 ;;		___flmul
 14065 ;;		___flneg
 14066 ;;		___flsub
 14067 ;;		___fltol
 14068 ;;		___fpclassifyf
 14069 ;;		_floorf
 14070 ;;		_isupper
 14071 ;;		_pad
 14072 ;;		_strcpy
 14073 ;;		_tolower
 14074 ;; This function is called by:
 14075 ;;		_vfpfcnvrt
 14076 ;; This function uses a reentrant model
 14077 ;;
 14078                           
 14079                           	psect	text53
 14080  010000                     __ptext53:
 14081                           	opt callstack 0
 14082  010000                     _efgtoa:
 14083                           	opt callstack 0
 14084                           
 14085                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14086  010000  0E38               	movlw	56
 14087  010002  26E1               	addwf	fsr1l,f,c
 14088  010004  0E00               	movlw	0
 14089  010006  22E2               	addwfc	fsr1h,f,c
 14090                           
 14091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 14092                           ;stkvar	_sign @ sp[(-56)+42]
 14093                           
 14094                           ;incstack = 0
 14095 ;; hardware stack exceeded
 14096  010008  0EF2               	movlw	-14
 14097  01000A  6AE3               	clrf	plusw1,c
 14098  01000C  0EF3               	movlw	-13
 14099  01000E  6AE3               	clrf	plusw1,c
 14100                           
 14101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 14102                           ;stkvar	_f @ sp[(-56)+-6]
 14103  010010  0EC2               	movlw	-62
 14104  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 14105  010018  0EC3               	movlw	-61
 14106  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14107  010020  0EC4               	movlw	-60
 14108  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 14109  010028  0EC5               	movlw	-59
 14110  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14111                           
 14112                           ;stkvar	_g @ sp[(-56)+16]
 14113  010030  0ED8               	movlw	-40
 14114  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 14115  010038  0ED9               	movlw	-39
 14116  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14117  010040  0EDA               	movlw	-38
 14118  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14119  010048  0EDB               	movlw	-37
 14120  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14121                           
 14122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 14123                           ;stkvar	_g @ sp[(-56)+16]
 14124  010050  0EDB               	movlw	-37
 14125  010052  AEE3               	btfss	plusw1,7,c
 14126  010054  D02B               	goto	l10921
 14127                           
 14128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 14129  010056  0E01               	movlw	1
 14130  010058  6E0B               	movwf	(btemp+10)^0,c
 14131  01005A  0E00               	movlw	0
 14132  01005C  6E0C               	movwf	(btemp+11)^0,c
 14133                           
 14134                           ;stkvar	_sign @ sp[(-56)+42]
 14135  01005E  0EF2               	movlw	-14
 14136  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14137  010066  0EF3               	movlw	-13
 14138  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 14139                           
 14140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 14141                           ;stkvar	_g @ sp[(-56)+16]
 14142  01006E  0ED8               	movlw	-40
 14143  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 14144  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 14145  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 14146  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 14147  010088  ECF0  F0CD         	call	___flneg	;wreg free
 14148                           
 14149                           ;stkvar	_g @ sp[(-56)+16]
 14150  01008C  0ED8               	movlw	-40
 14151  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 14152  010094  0ED9               	movlw	-39
 14153  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14154  01009C  0EDA               	movlw	-38
 14155  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14156  0100A4  0EDB               	movlw	-37
 14157  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 14158  0100AC                     l10921:
 14159                           
 14160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 14161                           ;stkvar	_n @ sp[(-56)+32]
 14162  0100AC  0EE8               	movlw	-24
 14163  0100AE  6AE3               	clrf	plusw1,c
 14164  0100B0  0EE9               	movlw	-23
 14165  0100B2  6AE3               	clrf	plusw1,c
 14166                           
 14167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 14168                           ;stkvar	_w @ sp[(-56)+38]
 14169  0100B4  0EEE               	movlw	-18
 14170  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 14171  0100BC  0EEF               	movlw	-17
 14172  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14173                           
 14174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 14175                           ;stkvar	_sign @ sp[(-56)+42]
 14176  0100C4  0EF2               	movlw	-14
 14177  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 14178  0100CC  0EF3               	movlw	-13
 14179  0100CE  50E3               	movf	plusw1,w,c
 14180  0100D0  1001               	iorwf	btemp^0,w,c
 14181  0100D2  A4D8               	btfss	status,2,c
 14182  0100D4  D002               	goto	u10230
 14183  0100D6  A425               	btfss	_flags^0,2,c
 14184  0100D8  D036               	goto	l10941
 14185  0100DA                     u10230:
 14186                           
 14187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 14188                           ;stkvar	_sign @ sp[(-56)+42]
 14189  0100DA  0EF2               	movlw	-14
 14190  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 14191  0100E2  0EF3               	movlw	-13
 14192  0100E4  50E3               	movf	plusw1,w,c
 14193  0100E6  1001               	iorwf	btemp^0,w,c
 14194  0100E8  A4D8               	btfss	status,2,c
 14195  0100EA  D002               	goto	l10933
 14196  0100EC  0E2B               	movlw	43
 14197  0100EE  D001               	goto	L13
 14198  0100F0                     l10933:
 14199  0100F0  0E2D               	movlw	45
 14200  0100F2                     L13:
 14201  0100F2  6E0B               	movwf	(btemp+10)^0,c
 14202  0100F4  0E00               	movlw	0
 14203  0100F6  6E0C               	movwf	(btemp+11)^0,c
 14204                           
 14205                           ;stkvar	_efgtoa$5158 @ sp[(-56)+10]
 14206  0100F8  0ED2               	movlw	-46
 14207  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14208  010100  0ED3               	movlw	-45
 14209  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 14210                           
 14211                           ;stkvar	_efgtoa$5158 @ sp[(-56)+10]
 14212  010108  0ED2               	movlw	-46
 14213  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 14214                           
 14215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 14216                           ;stkvar	_n @ sp[(-56)+32]
 14217  010110  0EE8               	movlw	-24
 14218  010112  50E3               	movf	plusw1,w,c
 14219  010114  0F01               	addlw	1
 14220  010116  6E01               	movwf	btemp^0,c
 14221  010118  0EE8               	movlw	-24
 14222  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 14223  010120  6A01               	clrf	btemp^0,c
 14224  010122  0EE9               	movlw	-23
 14225  010124  50E3               	movf	plusw1,w,c
 14226  010126  2001               	addwfc	btemp^0,w,c
 14227  010128  6E01               	movwf	btemp^0,c
 14228  01012A  0EE9               	movlw	-23
 14229  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 14230                           
 14231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 14232                           ;stkvar	_w @ sp[(-56)+38]
 14233  010132  50E1               	movf	fsr1l,w,c
 14234  010134  0FEE               	addlw	-18
 14235  010136  6ED9               	movwf	fsr2l,c
 14236  010138  50E2               	movf	fsr1h,w,c
 14237  01013A  6EDA               	movwf	fsr2h,c
 14238  01013C  0EFF               	movlw	255
 14239  01013E  22DA               	addwfc	fsr2h,f,c
 14240  010140  06DE               	decf	postinc2,f,c
 14241  010142  0E00               	movlw	0
 14242  010144  5ADD               	subwfb	postdec2,f,c
 14243  010146                     l10941:
 14244                           
 14245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14246                           ;stkvar	_g @ sp[(-56)+16]
 14247  010146  0ED8               	movlw	-40
 14248  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 14249  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 14250  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 14251  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 14252  010160  EC4F  F0BA         	call	___fpclassifyf	;wreg free
 14253  010164  0401               	decf	btemp^0,w,c
 14254  010166  1002               	iorwf	(btemp+1)^0,w,c
 14255  010168  A4D8               	btfss	status,2,c
 14256  01016A  D076               	goto	l10959
 14257  01016C  0EBF               	movlw	191
 14258  01016E  6E0B               	movwf	(btemp+10)^0,c
 14259  010170  0EFF               	movlw	255
 14260  010172  6E0C               	movwf	(btemp+11)^0,c
 14261                           
 14262                           ;stkvar	_c @ sp[(-56)+-7]
 14263  010174  0EC1               	movlw	-63
 14264  010176  50E3               	movf	plusw1,w,c
 14265  010178  6E09               	movwf	(btemp+8)^0,c
 14266  01017A  6A0A               	clrf	(btemp+9)^0,c
 14267  01017C  500B               	movf	(btemp+10)^0,w,c
 14268  01017E  2609               	addwf	(btemp+8)^0,f,c
 14269  010180  500C               	movf	(btemp+11)^0,w,c
 14270  010182  220A               	addwfc	(btemp+9)^0,f,c
 14271  010184  500A               	movf	(btemp+9)^0,w,c
 14272  010186  E106               	bnz	u10260
 14273  010188  0E1A               	movlw	26
 14274  01018A  5C09               	subwf	(btemp+8)^0,w,c
 14275  01018C  B0D8               	btfsc	status,0,c
 14276  01018E  D002               	goto	u10260
 14277  010190  0E01               	movlw	1
 14278  010192  D001               	goto	u10270
 14279  010194                     u10260:
 14280  010194  0E00               	movlw	0
 14281  010196                     u10270:
 14282  010196  6E0B               	movwf	(btemp+10)^0,c
 14283  010198  6A0C               	clrf	(btemp+11)^0,c
 14284                           
 14285                           ;stkvar	_efgtoa$5159 @ sp[(-56)+8]
 14286  01019A  0ED0               	movlw	-48
 14287  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14288  0101A2  0ED1               	movlw	-47
 14289  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14290                           
 14291                           ;stkvar	_efgtoa$5159 @ sp[(-56)+8]
 14292  0101AA  0ED0               	movlw	-48
 14293  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 14294  0101B2  0ED1               	movlw	-47
 14295  0101B4  50E3               	movf	plusw1,w,c
 14296  0101B6  1001               	iorwf	btemp^0,w,c
 14297  0101B8  B4D8               	btfsc	status,2,c
 14298  0101BA  D017               	goto	l10951
 14299                           
 14300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 14301  0101BC  0ED3               	movlw	low STR_47
 14302  0101BE  6EE6               	movwf	postinc1,c
 14303  0101C0  0EFF               	movlw	high STR_47
 14304  0101C2  6EE6               	movwf	postinc1,c
 14305                           
 14306                           ;stkvar	_n @ sp[(-58)+32]
 14307  0101C4  0E94               	movlw	low _dbuf
 14308  0101C6  6E0B               	movwf	(btemp+10)^0,c
 14309  0101C8  0E03               	movlw	high _dbuf
 14310  0101CA  6E0C               	movwf	(btemp+11)^0,c
 14311  0101CC  0EE6               	movlw	-26
 14312  0101CE  50E3               	movf	plusw1,w,c
 14313  0101D0  260B               	addwf	(btemp+10)^0,f,c
 14314  0101D2  0EE7               	movlw	-25
 14315  0101D4  50E3               	movf	plusw1,w,c
 14316  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 14317  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14318  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14319  0101E4  ECBE  F0C5         	call	_strcpy	;wreg free
 14320                           
 14321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 14322  0101E8  D016               	goto	l10953
 14323  0101EA                     l10951:
 14324                           
 14325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 14326  0101EA  0EDB               	movlw	low STR_48
 14327  0101EC  6EE6               	movwf	postinc1,c
 14328  0101EE  0EFF               	movlw	high STR_48
 14329  0101F0  6EE6               	movwf	postinc1,c
 14330                           
 14331                           ;stkvar	_n @ sp[(-58)+32]
 14332  0101F2  0E94               	movlw	low _dbuf
 14333  0101F4  6E0B               	movwf	(btemp+10)^0,c
 14334  0101F6  0E03               	movlw	high _dbuf
 14335  0101F8  6E0C               	movwf	(btemp+11)^0,c
 14336  0101FA  0EE6               	movlw	-26
 14337  0101FC  50E3               	movf	plusw1,w,c
 14338  0101FE  260B               	addwf	(btemp+10)^0,f,c
 14339  010200  0EE7               	movlw	-25
 14340  010202  50E3               	movf	plusw1,w,c
 14341  010204  220C               	addwfc	(btemp+11)^0,f,c
 14342  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14343  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14344  010212  ECBE  F0C5         	call	_strcpy	;wreg free
 14345  010216                     l10953:
 14346                           
 14347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 14348                           ;stkvar	_w @ sp[(-56)+38]
 14349  010216  50E1               	movf	fsr1l,w,c
 14350  010218  0FEE               	addlw	-18
 14351  01021A  6ED9               	movwf	fsr2l,c
 14352  01021C  50E2               	movf	fsr1h,w,c
 14353  01021E  6EDA               	movwf	fsr2h,c
 14354  010220  0EFF               	movlw	255
 14355  010222  22DA               	addwfc	fsr2h,f,c
 14356  010224  0EFD               	movlw	253
 14357  010226  26DE               	addwf	postinc2,f,c
 14358  010228  0EFF               	movlw	255
 14359  01022A  22DD               	addwfc	postdec2,f,c
 14360  01022C                     l10955:
 14361                           
 14362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 14363                           ;stkvar	_w @ sp[(-56)+38]
 14364  01022C  0EEE               	movlw	-18
 14365  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 14366  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 14367  01023A  0E94               	movlw	low _dbuf
 14368  01023C  6EE6               	movwf	postinc1,c
 14369  01023E  0E03               	movlw	high _dbuf
 14370  010240  6EE6               	movwf	postinc1,c
 14371                           
 14372                           ;stkvar	_fp @ sp[(-60)+-2]
 14373  010242  0EC2               	movlw	-62
 14374  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 14375  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 14376  010250  EC3D  F0C2         	call	_pad	;wreg free
 14377  010254  EF1D  F089         	goto	l2057
 14378  010258                     l10959:
 14379                           
 14380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14381                           ;stkvar	_g @ sp[(-56)+16]
 14382  010258  0ED8               	movlw	-40
 14383  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 14384  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 14385  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 14386  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 14387  010272  EC4F  F0BA         	call	___fpclassifyf	;wreg free
 14388  010276  5001               	movf	btemp^0,w,c
 14389  010278  1002               	iorwf	(btemp+1)^0,w,c
 14390  01027A  A4D8               	btfss	status,2,c
 14391  01027C  D056               	goto	l10977
 14392  01027E  0EBF               	movlw	191
 14393  010280  6E0B               	movwf	(btemp+10)^0,c
 14394  010282  0EFF               	movlw	255
 14395  010284  6E0C               	movwf	(btemp+11)^0,c
 14396                           
 14397                           ;stkvar	_c @ sp[(-56)+-7]
 14398  010286  0EC1               	movlw	-63
 14399  010288  50E3               	movf	plusw1,w,c
 14400  01028A  6E09               	movwf	(btemp+8)^0,c
 14401  01028C  6A0A               	clrf	(btemp+9)^0,c
 14402  01028E  500B               	movf	(btemp+10)^0,w,c
 14403  010290  2609               	addwf	(btemp+8)^0,f,c
 14404  010292  500C               	movf	(btemp+11)^0,w,c
 14405  010294  220A               	addwfc	(btemp+9)^0,f,c
 14406  010296  500A               	movf	(btemp+9)^0,w,c
 14407  010298  E106               	bnz	u10300
 14408  01029A  0E1A               	movlw	26
 14409  01029C  5C09               	subwf	(btemp+8)^0,w,c
 14410  01029E  B0D8               	btfsc	status,0,c
 14411  0102A0  D002               	goto	u10300
 14412  0102A2  0E01               	movlw	1
 14413  0102A4  D001               	goto	u10310
 14414  0102A6                     u10300:
 14415  0102A6  0E00               	movlw	0
 14416  0102A8                     u10310:
 14417  0102A8  6E0B               	movwf	(btemp+10)^0,c
 14418  0102AA  6A0C               	clrf	(btemp+11)^0,c
 14419                           
 14420                           ;stkvar	_efgtoa$5163 @ sp[(-56)+6]
 14421  0102AC  0ECE               	movlw	-50
 14422  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14423  0102B4  0ECF               	movlw	-49
 14424  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14425                           
 14426                           ;stkvar	_efgtoa$5163 @ sp[(-56)+6]
 14427  0102BC  0ECE               	movlw	-50
 14428  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 14429  0102C4  0ECF               	movlw	-49
 14430  0102C6  50E3               	movf	plusw1,w,c
 14431  0102C8  1001               	iorwf	btemp^0,w,c
 14432  0102CA  B4D8               	btfsc	status,2,c
 14433  0102CC  D017               	goto	l10969
 14434                           
 14435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 14436  0102CE  0ED7               	movlw	low STR_51
 14437  0102D0  6EE6               	movwf	postinc1,c
 14438  0102D2  0EFF               	movlw	high STR_51
 14439  0102D4  6EE6               	movwf	postinc1,c
 14440                           
 14441                           ;stkvar	_n @ sp[(-58)+32]
 14442  0102D6  0E94               	movlw	low _dbuf
 14443  0102D8  6E0B               	movwf	(btemp+10)^0,c
 14444  0102DA  0E03               	movlw	high _dbuf
 14445  0102DC  6E0C               	movwf	(btemp+11)^0,c
 14446  0102DE  0EE6               	movlw	-26
 14447  0102E0  50E3               	movf	plusw1,w,c
 14448  0102E2  260B               	addwf	(btemp+10)^0,f,c
 14449  0102E4  0EE7               	movlw	-25
 14450  0102E6  50E3               	movf	plusw1,w,c
 14451  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 14452  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14453  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14454  0102F6  ECBE  F0C5         	call	_strcpy	;wreg free
 14455                           
 14456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 14457  0102FA  D78D               	goto	l10953
 14458  0102FC                     l10969:
 14459                           
 14460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 14461  0102FC  0EDF               	movlw	low STR_52
 14462  0102FE  6EE6               	movwf	postinc1,c
 14463  010300  0EFF               	movlw	high STR_52
 14464  010302  6EE6               	movwf	postinc1,c
 14465                           
 14466                           ;stkvar	_n @ sp[(-58)+32]
 14467  010304  0E94               	movlw	low _dbuf
 14468  010306  6E0B               	movwf	(btemp+10)^0,c
 14469  010308  0E03               	movlw	high _dbuf
 14470  01030A  6E0C               	movwf	(btemp+11)^0,c
 14471  01030C  0EE6               	movlw	-26
 14472  01030E  50E3               	movf	plusw1,w,c
 14473  010310  260B               	addwf	(btemp+10)^0,f,c
 14474  010312  0EE7               	movlw	-25
 14475  010314  50E3               	movf	plusw1,w,c
 14476  010316  220C               	addwfc	(btemp+11)^0,f,c
 14477  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14478  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14479  010324  ECBE  F0C5         	call	_strcpy	;wreg free
 14480  010328  D776               	goto	l10953
 14481  01032A                     l10977:
 14482                           
 14483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 14484  01032A  0E00               	movlw	0
 14485  01032C  6E09               	movwf	(btemp+8)^0,c
 14486  01032E  0E00               	movlw	0
 14487  010330  6E0A               	movwf	(btemp+9)^0,c
 14488  010332  0E80               	movlw	128
 14489  010334  6E0B               	movwf	(btemp+10)^0,c
 14490  010336  0E3F               	movlw	63
 14491  010338  6E0C               	movwf	(btemp+11)^0,c
 14492                           
 14493                           ;stkvar	_u @ sp[(-56)+12]
 14494  01033A  0ED4               	movlw	-44
 14495  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 14496  010342  0ED5               	movlw	-43
 14497  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14498  01034A  0ED6               	movlw	-42
 14499  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14500  010352  0ED7               	movlw	-41
 14501  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 14502                           
 14503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 14504                           ;stkvar	_e @ sp[(-56)+34]
 14505  01035A  0EEA               	movlw	-22
 14506  01035C  6AE3               	clrf	plusw1,c
 14507  01035E  0EEB               	movlw	-21
 14508  010360  6AE3               	clrf	plusw1,c
 14509                           
 14510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 14511  010362  0E00               	movlw	0
 14512  010364  6EE6               	movwf	postinc1,c
 14513  010366  0E00               	movlw	0
 14514  010368  6EE6               	movwf	postinc1,c
 14515  01036A  0E00               	movlw	0
 14516  01036C  6EE6               	movwf	postinc1,c
 14517  01036E  0E00               	movlw	0
 14518  010370  6EE6               	movwf	postinc1,c
 14519                           
 14520                           ;stkvar	_g @ sp[(-60)+16]
 14521  010372  0ED4               	movlw	-44
 14522  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 14523  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 14524  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 14525  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 14526  01038C  EC28  F0C6         	call	___fleq	;wreg free
 14527  010390  A001               	btfss	btemp& (0+255),0,c
 14528  010392  D039               	goto	l10989
 14529  010394  D0BC               	goto	u10350
 14530  010396                     l10985:
 14531                           
 14532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 14533  010396  0E00               	movlw	0
 14534  010398  6EE6               	movwf	postinc1,c
 14535  01039A  0E00               	movlw	0
 14536  01039C  6EE6               	movwf	postinc1,c
 14537  01039E  0E20               	movlw	32
 14538  0103A0  6EE6               	movwf	postinc1,c
 14539  0103A2  0E41               	movlw	65
 14540  0103A4  6EE6               	movwf	postinc1,c
 14541                           
 14542                           ;stkvar	_u @ sp[(-60)+12]
 14543  0103A6  0ED0               	movlw	-48
 14544  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14545  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14546  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14547  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 14548  0103C0  EC53  F095         	call	___flmul	;wreg free
 14549                           
 14550                           ;stkvar	_u @ sp[(-56)+12]
 14551  0103C4  0ED4               	movlw	-44
 14552  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 14553  0103CC  0ED5               	movlw	-43
 14554  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14555  0103D4  0ED6               	movlw	-42
 14556  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14557  0103DC  0ED7               	movlw	-41
 14558  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 14559                           
 14560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 14561                           ;stkvar	_e @ sp[(-56)+34]
 14562  0103E4  0EEA               	movlw	-22
 14563  0103E6  50E3               	movf	plusw1,w,c
 14564  0103E8  0F01               	addlw	1
 14565  0103EA  6E01               	movwf	btemp^0,c
 14566  0103EC  0EEA               	movlw	-22
 14567  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 14568  0103F4  6A01               	clrf	btemp^0,c
 14569  0103F6  0EEB               	movlw	-21
 14570  0103F8  50E3               	movf	plusw1,w,c
 14571  0103FA  2001               	addwfc	btemp^0,w,c
 14572  0103FC  6E01               	movwf	btemp^0,c
 14573  0103FE  0EEB               	movlw	-21
 14574  010400  0060  F007  FFE3   	movff	btemp,plusw1
 14575  010406                     l10989:
 14576                           
 14577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 14578  010406  0E00               	movlw	0
 14579  010408  6EE6               	movwf	postinc1,c
 14580  01040A  0E00               	movlw	0
 14581  01040C  6EE6               	movwf	postinc1,c
 14582  01040E  0E20               	movlw	32
 14583  010410  6EE6               	movwf	postinc1,c
 14584  010412  0E41               	movlw	65
 14585  010414  6EE6               	movwf	postinc1,c
 14586                           
 14587                           ;stkvar	_u @ sp[(-60)+12]
 14588  010416  0ED0               	movlw	-48
 14589  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 14590  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 14591  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 14592  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 14593  010430  EC53  F095         	call	___flmul	;wreg free
 14594  010434  0060  F007  FFE6   	movff	btemp,postinc1
 14595  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14596  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14597  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 14598                           
 14599                           ;stkvar	_g @ sp[(-60)+16]
 14600  01044C  0ED4               	movlw	-44
 14601  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 14602  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 14603  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 14604  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 14605  010466  EC4B  F0BD         	call	___flge	;wreg free
 14606  01046A  A001               	btfss	btemp& (0+255),0,c
 14607  01046C  D032               	goto	l10995
 14608  01046E  D793               	goto	l10985
 14609  010470                     l10991:
 14610                           
 14611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 14612  010470  0E00               	movlw	0
 14613  010472  6EE6               	movwf	postinc1,c
 14614  010474  0E00               	movlw	0
 14615  010476  6EE6               	movwf	postinc1,c
 14616  010478  0E20               	movlw	32
 14617  01047A  6EE6               	movwf	postinc1,c
 14618  01047C  0E41               	movlw	65
 14619  01047E  6EE6               	movwf	postinc1,c
 14620                           
 14621                           ;stkvar	_u @ sp[(-60)+12]
 14622  010480  0ED0               	movlw	-48
 14623  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 14624  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 14625  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 14626  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 14627  01049A  ECF4  F0A0         	call	___fldiv	;wreg free
 14628                           
 14629                           ;stkvar	_u @ sp[(-56)+12]
 14630  01049E  0ED4               	movlw	-44
 14631  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 14632  0104A6  0ED5               	movlw	-43
 14633  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14634  0104AE  0ED6               	movlw	-42
 14635  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14636  0104B6  0ED7               	movlw	-41
 14637  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 14638                           
 14639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 14640                           ;stkvar	_e @ sp[(-56)+34]
 14641  0104BE  50E1               	movf	fsr1l,w,c
 14642  0104C0  0FEA               	addlw	-22
 14643  0104C2  6ED9               	movwf	fsr2l,c
 14644  0104C4  50E2               	movf	fsr1h,w,c
 14645  0104C6  6EDA               	movwf	fsr2h,c
 14646  0104C8  0EFF               	movlw	255
 14647  0104CA  22DA               	addwfc	fsr2h,f,c
 14648  0104CC  06DE               	decf	postinc2,f,c
 14649  0104CE  0E00               	movlw	0
 14650  0104D0  5ADD               	subwfb	postdec2,f,c
 14651  0104D2                     l10995:
 14652                           
 14653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 14654                           ;stkvar	_u @ sp[(-56)+12]
 14655  0104D2  0ED4               	movlw	-44
 14656  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14657  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 14658  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 14659  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 14660                           
 14661                           ;stkvar	_g @ sp[(-60)+16]
 14662  0104EC  0ED4               	movlw	-44
 14663  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 14664  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 14665  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14666  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 14667  010506  EC4B  F0BD         	call	___flge	;wreg free
 14668  01050A  A001               	btfss	btemp& (0+255),0,c
 14669  01050C  D7B1               	goto	l10991
 14670  01050E                     u10350:
 14671                           
 14672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 14673                           ;stkvar	_c @ sp[(-56)+-7]
 14674  01050E  0EC1               	movlw	-63
 14675  010510  50E3               	movf	plusw1,w,c
 14676  010512  6EE6               	movwf	postinc1,c
 14677  010514  0E00               	movlw	0
 14678  010516  6EE6               	movwf	postinc1,c
 14679  010518  EC8A  F0CA         	call	_tolower	;wreg free
 14680                           
 14681                           ;stkvar	_mode @ sp[(-56)+54]
 14682  01051C  0EFE               	movlw	-2
 14683  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 14684                           
 14685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 14686                           ;stkvar	_mode @ sp[(-56)+54]
 14687                           ;stkvar	_nmode @ sp[(-56)+55]
 14688  010524  0EFE               	movlw	-2
 14689  010526  006F FF8C  F001    	movff	plusw1,btemp
 14690  01052C  0EFF               	movlw	-1
 14691  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 14692                           
 14693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 14694                           ;stkvar	_mode @ sp[(-56)+54]
 14695  010534  0EFE               	movlw	-2
 14696  010536  006F FF8C  F001    	movff	plusw1,btemp
 14697  01053C  0E67               	movlw	103
 14698  01053E  1801               	xorwf	btemp^0,w,c
 14699  010540  A4D8               	btfss	status,2,c
 14700  010542  D025               	goto	l11013
 14701                           
 14702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 14703  010544  5023               	movf	_prec^0,w,c
 14704  010546  1024               	iorwf	(_prec+1)^0,w,c
 14705  010548  A4D8               	btfss	status,2,c
 14706  01054A  D004               	goto	l11007
 14707                           
 14708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 14709  01054C  0E00               	movlw	0
 14710  01054E  6E24               	movwf	(_prec+1)^0,c
 14711  010550  0E01               	movlw	1
 14712  010552  6E23               	movwf	_prec^0,c
 14713  010554                     l11007:
 14714                           
 14715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 14716  010554  BE24               	btfsc	(_prec+1)^0,7,c
 14717  010556  D005               	goto	u10380
 14718  010558  5024               	movf	(_prec+1)^0,w,c
 14719  01055A  E110               	bnz	l11011
 14720  01055C  0423               	decf	_prec^0,w,c
 14721  01055E  B0D8               	btfsc	status,0,c
 14722  010560  D00D               	goto	l11011
 14723  010562                     u10380:
 14724  010562  0E06               	movlw	6
 14725  010564  6E0B               	movwf	(btemp+10)^0,c
 14726  010566  0E00               	movlw	0
 14727  010568  6E0C               	movwf	(btemp+11)^0,c
 14728                           
 14729                           ;stkvar	_p @ sp[(-56)+40]
 14730  01056A  0EF0               	movlw	-16
 14731  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14732  010572  0EF1               	movlw	-15
 14733  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 14734  01057A  D00C               	goto	l11019
 14735  01057C                     l11011:
 14736                           
 14737                           ;stkvar	_p @ sp[(-56)+40]
 14738  01057C  0EF0               	movlw	-16
 14739  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 14740  010584  0EF1               	movlw	-15
 14741  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 14742  01058C  D003               	goto	l11019
 14743  01058E                     l11013:
 14744                           
 14745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 14746  01058E  AE24               	btfss	(_prec+1)^0,7,c
 14747  010590  D7F5               	goto	l11011
 14748  010592  D7E7               	goto	u10380
 14749  010594                     l11019:
 14750                           
 14751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 14752                           ;stkvar	_mode @ sp[(-56)+54]
 14753  010594  0EFE               	movlw	-2
 14754  010596  006F FF8C  F001    	movff	plusw1,btemp
 14755  01059C  0E67               	movlw	103
 14756  01059E  1801               	xorwf	btemp^0,w,c
 14757  0105A0  A4D8               	btfss	status,2,c
 14758  0105A2  D02F               	goto	l11029
 14759                           
 14760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 14761                           ;stkvar	_e @ sp[(-56)+34]
 14762  0105A4  0EEB               	movlw	-21
 14763  0105A6  AEE3               	btfss	plusw1,7,c
 14764  0105A8  D00E               	goto	u10410
 14765  0105AA  0EEA               	movlw	-22
 14766  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 14767  0105B2  0EFC               	movlw	252
 14768  0105B4  5E01               	subwf	btemp^0,f,c
 14769  0105B6  0EEB               	movlw	-21
 14770  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 14771  0105BE  0EFF               	movlw	255
 14772  0105C0  5A01               	subwfb	btemp^0,f,c
 14773  0105C2  A0D8               	btfss	status,0,c
 14774  0105C4  D018               	goto	l11027
 14775  0105C6                     u10410:
 14776                           
 14777                           ;stkvar	_e @ sp[(-56)+34]
 14778                           ;stkvar	_p @ sp[(-56)+40]
 14779  0105C6  0EF0               	movlw	-16
 14780  0105C8  50E3               	movf	plusw1,w,c
 14781  0105CA  0FFF               	addlw	255
 14782  0105CC  6E0B               	movwf	(btemp+10)^0,c
 14783  0105CE  0EF1               	movlw	-15
 14784  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14785  0105D6  0EFF               	movlw	255
 14786  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 14787  0105DA  0EEA               	movlw	-22
 14788  0105DC  50E3               	movf	plusw1,w,c
 14789  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 14790  0105E0  500C               	movf	(btemp+11)^0,w,c
 14791  0105E2  0A80               	xorlw	128
 14792  0105E4  6E01               	movwf	btemp^0,c
 14793  0105E6  0EEB               	movlw	-21
 14794  0105E8  50E3               	movf	plusw1,w,c
 14795  0105EA  0A80               	xorlw	128
 14796  0105EC  5801               	subwfb	btemp^0,w,c
 14797  0105EE  A0D8               	btfss	status,0,c
 14798  0105F0  D002               	goto	l11027
 14799                           
 14800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 14801  0105F2  0E66               	movlw	102
 14802  0105F4  D001               	goto	L14
 14803  0105F6                     l11027:
 14804                           
 14805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 14806  0105F6  0E65               	movlw	101
 14807  0105F8                     L14:
 14808  0105F8  6E0C               	movwf	(btemp+11)^0,c
 14809                           
 14810                           ;stkvar	_nmode @ sp[(-56)+55]
 14811  0105FA  0EFF               	movlw	-1
 14812  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14813  010602                     l11029:
 14814                           
 14815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 14816                           ;stkvar	_p @ sp[(-56)+40]
 14817                           ;stkvar	_m @ sp[(-56)+48]
 14818  010602  0EF0               	movlw	-16
 14819  010604  006F FF8C  F001    	movff	plusw1,btemp
 14820  01060A  0EF8               	movlw	-8
 14821  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 14822  010612  0EF1               	movlw	-15
 14823  010614  006F FF8C  F001    	movff	plusw1,btemp
 14824  01061A  0EF9               	movlw	-7
 14825  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 14826                           
 14827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 14828                           ;stkvar	_mode @ sp[(-56)+54]
 14829  010622  0EFE               	movlw	-2
 14830  010624  006F FF8C  F001    	movff	plusw1,btemp
 14831  01062A  0E67               	movlw	103
 14832  01062C  1801               	xorwf	btemp^0,w,c
 14833  01062E  A4D8               	btfss	status,2,c
 14834  010630  D00B               	goto	u10450
 14835                           
 14836                           ;stkvar	_nmode @ sp[(-56)+55]
 14837  010632  0EFF               	movlw	-1
 14838  010634  006F FF8C  F001    	movff	plusw1,btemp
 14839  01063A  0E66               	movlw	102
 14840  01063C  1801               	xorwf	btemp^0,w,c
 14841  01063E  A4D8               	btfss	status,2,c
 14842  010640  D014               	goto	l2086
 14843                           
 14844                           ;stkvar	_e @ sp[(-56)+34]
 14845  010642  0EEB               	movlw	-21
 14846  010644  AEE3               	btfss	plusw1,7,c
 14847  010646  D011               	goto	l2086
 14848  010648                     u10450:
 14849                           
 14850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 14851                           ;stkvar	_m @ sp[(-56)+48]
 14852  010648  0EF8               	movlw	-8
 14853  01064A  50E3               	movf	plusw1,w,c
 14854  01064C  0F01               	addlw	1
 14855  01064E  6E01               	movwf	btemp^0,c
 14856  010650  0EF8               	movlw	-8
 14857  010652  0060  F007  FFE3   	movff	btemp,plusw1
 14858  010658  6A01               	clrf	btemp^0,c
 14859  01065A  0EF9               	movlw	-7
 14860  01065C  50E3               	movf	plusw1,w,c
 14861  01065E  2001               	addwfc	btemp^0,w,c
 14862  010660  6E01               	movwf	btemp^0,c
 14863  010662  0EF9               	movlw	-7
 14864  010664  0060  F007  FFE3   	movff	btemp,plusw1
 14865  01066A                     l2086:
 14866                           
 14867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 14868                           ;stkvar	_nmode @ sp[(-56)+55]
 14869  01066A  0EFF               	movlw	-1
 14870  01066C  006F FF8C  F001    	movff	plusw1,btemp
 14871  010672  0E66               	movlw	102
 14872  010674  1801               	xorwf	btemp^0,w,c
 14873  010676  A4D8               	btfss	status,2,c
 14874  010678  D03B               	goto	l11049
 14875                           
 14876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 14877                           ;stkvar	_e @ sp[(-56)+34]
 14878  01067A  0EEB               	movlw	-21
 14879  01067C  AEE3               	btfss	plusw1,7,c
 14880  01067E  D01C               	goto	l11045
 14881                           
 14882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 14883  010680  0E00               	movlw	0
 14884  010682  6E09               	movwf	(btemp+8)^0,c
 14885  010684  0E00               	movlw	0
 14886  010686  6E0A               	movwf	(btemp+9)^0,c
 14887  010688  0E80               	movlw	128
 14888  01068A  6E0B               	movwf	(btemp+10)^0,c
 14889  01068C  0E3F               	movlw	63
 14890  01068E  6E0C               	movwf	(btemp+11)^0,c
 14891                           
 14892                           ;stkvar	_u @ sp[(-56)+12]
 14893  010690  0ED4               	movlw	-44
 14894  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 14895  010698  0ED5               	movlw	-43
 14896  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14897  0106A0  0ED6               	movlw	-42
 14898  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14899  0106A8  0ED7               	movlw	-41
 14900  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14901                           
 14902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 14903                           ;stkvar	_e @ sp[(-56)+34]
 14904  0106B0  0EEA               	movlw	-22
 14905  0106B2  6AE3               	clrf	plusw1,c
 14906  0106B4  0EEB               	movlw	-21
 14907  0106B6  6AE3               	clrf	plusw1,c
 14908  0106B8                     l11045:
 14909                           
 14910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 14911                           ;stkvar	_mode @ sp[(-56)+54]
 14912  0106B8  0EFE               	movlw	-2
 14913  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 14914  0106C0  0E67               	movlw	103
 14915  0106C2  1801               	xorwf	btemp^0,w,c
 14916  0106C4  B4D8               	btfsc	status,2,c
 14917  0106C6  D014               	goto	l11049
 14918                           
 14919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 14920                           ;stkvar	_e @ sp[(-56)+34]
 14921                           ;stkvar	_m @ sp[(-56)+48]
 14922  0106C8  0EF8               	movlw	-8
 14923  0106CA  50E3               	movf	plusw1,w,c
 14924  0106CC  6E01               	movwf	btemp^0,c
 14925  0106CE  0EEA               	movlw	-22
 14926  0106D0  50E3               	movf	plusw1,w,c
 14927  0106D2  2601               	addwf	btemp^0,f,c
 14928  0106D4  0EF8               	movlw	-8
 14929  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 14930  0106DC  0EF9               	movlw	-7
 14931  0106DE  50E3               	movf	plusw1,w,c
 14932  0106E0  6E01               	movwf	btemp^0,c
 14933  0106E2  0EEB               	movlw	-21
 14934  0106E4  50E3               	movf	plusw1,w,c
 14935  0106E6  2201               	addwfc	btemp^0,f,c
 14936  0106E8  0EF9               	movlw	-7
 14937  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 14938  0106F0                     l11049:
 14939                           
 14940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 14941                           ;stkvar	_i @ sp[(-56)+36]
 14942  0106F0  0EEC               	movlw	-20
 14943  0106F2  6AE3               	clrf	plusw1,c
 14944  0106F4  0EED               	movlw	-19
 14945  0106F6  6AE3               	clrf	plusw1,c
 14946                           
 14947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 14948                           ;stkvar	_g @ sp[(-56)+16]
 14949  0106F8  0ED8               	movlw	-40
 14950  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 14951  010700  0ED9               	movlw	-39
 14952  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 14953  010708  0EDA               	movlw	-38
 14954  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14955  010710  0EDB               	movlw	-37
 14956  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 14957                           
 14958                           ;stkvar	_h @ sp[(-56)+24]
 14959  010718  0EE0               	movlw	-32
 14960  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14961  010720  0EE1               	movlw	-31
 14962  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14963  010728  0EE2               	movlw	-30
 14964  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14965  010730  0EE3               	movlw	-29
 14966  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 14967                           
 14968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 14969                           ;stkvar	_u @ sp[(-56)+12]
 14970  010738  0ED4               	movlw	-44
 14971  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 14972  010740  0ED5               	movlw	-43
 14973  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 14974  010748  0ED6               	movlw	-42
 14975  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14976  010750  0ED7               	movlw	-41
 14977  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 14978                           
 14979                           ;stkvar	_ou @ sp[(-56)+28]
 14980  010758  0EE4               	movlw	-28
 14981  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14982  010760  0EE5               	movlw	-27
 14983  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14984  010768  0EE6               	movlw	-26
 14985  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14986  010770  0EE7               	movlw	-25
 14987  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 14988                           
 14989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 14990  010778  D0D6               	goto	l11065
 14991  01077A                     l11055:
 14992                           
 14993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 14994                           ;stkvar	_u @ sp[(-56)+12]
 14995  01077A  0ED4               	movlw	-44
 14996  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 14997  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 14998  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 14999  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 15000                           
 15001                           ;stkvar	_h @ sp[(-60)+24]
 15002  010794  0EDC               	movlw	-36
 15003  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 15004  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 15005  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15006  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15007  0107AE  ECF4  F0A0         	call	___fldiv	;wreg free
 15008  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 15009  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15010  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15011  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 15012  0107CA  EC24  F0AA         	call	_floorf	;wreg free
 15013                           
 15014                           ;stkvar	_l @ sp[(-56)+20]
 15015  0107CE  0EDC               	movlw	-36
 15016  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 15017  0107D6  0EDD               	movlw	-35
 15018  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15019  0107DE  0EDE               	movlw	-34
 15020  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15021  0107E6  0EDF               	movlw	-33
 15022  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15023                           
 15024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 15025                           ;stkvar	_l @ sp[(-56)+20]
 15026  0107EE  0EDC               	movlw	-36
 15027  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15028  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 15029  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 15030  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 15031  010808  ECDA  F0BB         	call	___fltol	;wreg free
 15032  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 15033  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 15034                           
 15035                           ;stkvar	_d @ sp[(-56)+44]
 15036  010818  0EF4               	movlw	-12
 15037  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15038  010820  0EF5               	movlw	-11
 15039  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 15040                           
 15041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 15042                           ;stkvar	_u @ sp[(-56)+12]
 15043  010828  0ED4               	movlw	-44
 15044  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 15045  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 15046  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 15047  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 15048                           
 15049                           ;stkvar	_l @ sp[(-60)+20]
 15050  010842  0ED8               	movlw	-40
 15051  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 15052  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 15053  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 15054  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 15055  01085C  EC53  F095         	call	___flmul	;wreg free
 15056  010860  0060  F007  FFE6   	movff	btemp,postinc1
 15057  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15058  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15059  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 15060                           
 15061                           ;stkvar	_h @ sp[(-60)+24]
 15062  010878  0EDC               	movlw	-36
 15063  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 15064  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 15065  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 15066  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 15067  010892  EC37  F0CE         	call	___flsub	;wreg free
 15068                           
 15069                           ;stkvar	_h @ sp[(-56)+24]
 15070  010896  0EE0               	movlw	-32
 15071  010898  0060  F007  FFE3   	movff	btemp,plusw1
 15072  01089E  0EE1               	movlw	-31
 15073  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15074  0108A6  0EE2               	movlw	-30
 15075  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15076  0108AE  0EE3               	movlw	-29
 15077  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 15078                           
 15079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 15080  0108B6  0E00               	movlw	0
 15081  0108B8  6EE6               	movwf	postinc1,c
 15082  0108BA  0E00               	movlw	0
 15083  0108BC  6EE6               	movwf	postinc1,c
 15084  0108BE  0E20               	movlw	32
 15085  0108C0  6EE6               	movwf	postinc1,c
 15086  0108C2  0E41               	movlw	65
 15087  0108C4  6EE6               	movwf	postinc1,c
 15088                           
 15089                           ;stkvar	_u @ sp[(-60)+12]
 15090  0108C6  0ED0               	movlw	-48
 15091  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15092  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15093  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15094  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15095  0108E0  ECF4  F0A0         	call	___fldiv	;wreg free
 15096                           
 15097                           ;stkvar	_u @ sp[(-56)+12]
 15098  0108E4  0ED4               	movlw	-44
 15099  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 15100  0108EC  0ED5               	movlw	-43
 15101  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15102  0108F4  0ED6               	movlw	-42
 15103  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15104  0108FC  0ED7               	movlw	-41
 15105  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15106                           
 15107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 15108                           ;stkvar	_i @ sp[(-56)+36]
 15109  010904  0EEC               	movlw	-20
 15110  010906  50E3               	movf	plusw1,w,c
 15111  010908  0F01               	addlw	1
 15112  01090A  6E01               	movwf	btemp^0,c
 15113  01090C  0EEC               	movlw	-20
 15114  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 15115  010914  6A01               	clrf	btemp^0,c
 15116  010916  0EED               	movlw	-19
 15117  010918  50E3               	movf	plusw1,w,c
 15118  01091A  2001               	addwfc	btemp^0,w,c
 15119  01091C  6E01               	movwf	btemp^0,c
 15120  01091E  0EED               	movlw	-19
 15121  010920  0060  F007  FFE3   	movff	btemp,plusw1
 15122  010926                     l11065:
 15123                           
 15124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15125                           ;stkvar	_m @ sp[(-56)+48]
 15126                           ;stkvar	_i @ sp[(-56)+36]
 15127  010926  50E1               	movf	fsr1l,w,c
 15128  010928  0FEC               	addlw	-20
 15129  01092A  6ED9               	movwf	fsr2l,c
 15130  01092C  50E2               	movf	fsr1h,w,c
 15131  01092E  6EDA               	movwf	fsr2h,c
 15132  010930  0EFF               	movlw	255
 15133  010932  22DA               	addwfc	fsr2h,f,c
 15134  010934  0EF8               	movlw	-8
 15135  010936  50E3               	movf	plusw1,w,c
 15136  010938  5CDE               	subwf	postinc2,w,c
 15137  01093A  50DE               	movf	postinc2,w,c
 15138  01093C  0A80               	xorlw	128
 15139  01093E  6E01               	movwf	btemp^0,c
 15140  010940  0EF9               	movlw	-7
 15141  010942  50E3               	movf	plusw1,w,c
 15142  010944  0A80               	xorlw	128
 15143  010946  5801               	subwfb	btemp^0,w,c
 15144  010948  A0D8               	btfss	status,0,c
 15145  01094A  D717               	goto	l11055
 15146                           
 15147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 15148  01094C  0E00               	movlw	0
 15149  01094E  6EE6               	movwf	postinc1,c
 15150  010950  0E00               	movlw	0
 15151  010952  6EE6               	movwf	postinc1,c
 15152  010954  0EA0               	movlw	160
 15153  010956  6EE6               	movwf	postinc1,c
 15154  010958  0E40               	movlw	64
 15155  01095A  6EE6               	movwf	postinc1,c
 15156                           
 15157                           ;stkvar	_u @ sp[(-60)+12]
 15158  01095C  0ED0               	movlw	-48
 15159  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 15160  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 15161  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 15162  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 15163  010976  EC53  F095         	call	___flmul	;wreg free
 15164                           
 15165                           ;stkvar	_l @ sp[(-56)+20]
 15166  01097A  0EDC               	movlw	-36
 15167  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 15168  010982  0EDD               	movlw	-35
 15169  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15170  01098A  0EDE               	movlw	-34
 15171  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15172  010992  0EDF               	movlw	-33
 15173  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 15174                           
 15175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 15176                           ;stkvar	_l @ sp[(-56)+20]
 15177  01099A  0EDC               	movlw	-36
 15178  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 15179  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15180  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15181  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15182                           
 15183                           ;stkvar	_h @ sp[(-60)+24]
 15184  0109B4  0EDC               	movlw	-36
 15185  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15186  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15187  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 15188  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15189  0109CE  EC4B  F0BD         	call	___flge	;wreg free
 15190  0109D2  A001               	btfss	btemp& (0+255),0,c
 15191  0109D4  D021               	goto	u10520
 15192                           
 15193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 15194                           ;stkvar	_l @ sp[(-56)+20]
 15195                           
 15196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 15197                           
 15198                           ;stkvar	_l @ sp[(-56)+20]
 15199                           
 15200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 15201  0109D6  0EDC               	movlw	-36
 15202  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 15203  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 15204  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 15205  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 15206                           
 15207                           ;stkvar	_h @ sp[(-60)+24]
 15208  0109F0  0EDC               	movlw	-36
 15209  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 15210  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 15211  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15212  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 15213  010A0A  EC28  F0C6         	call	___fleq	;wreg free
 15214  010A0E  A001               	btfss	btemp& (0+255),0,c
 15215  010A10  D01B               	goto	l11079
 15216                           
 15217                           ;stkvar	_d @ sp[(-56)+44]
 15218  010A12  0EF4               	movlw	-12
 15219  010A14  B0E3               	btfsc	plusw1,0,c
 15220  010A16  D018               	goto	l11079
 15221  010A18                     u10520:
 15222                           
 15223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 15224  010A18  0E00               	movlw	0
 15225  010A1A  6E09               	movwf	(btemp+8)^0,c
 15226  010A1C  0E00               	movlw	0
 15227  010A1E  6E0A               	movwf	(btemp+9)^0,c
 15228  010A20  0E00               	movlw	0
 15229  010A22  6E0B               	movwf	(btemp+10)^0,c
 15230  010A24  0E00               	movlw	0
 15231  010A26  6E0C               	movwf	(btemp+11)^0,c
 15232                           
 15233                           ;stkvar	_l @ sp[(-56)+20]
 15234  010A28  0EDC               	movlw	-36
 15235  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15236  010A30  0EDD               	movlw	-35
 15237  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15238  010A38  0EDE               	movlw	-34
 15239  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15240  010A40  0EDF               	movlw	-33
 15241  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 15242  010A48                     l11079:
 15243                           
 15244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 15245                           ;stkvar	_l @ sp[(-56)+20]
 15246  010A48  0EDC               	movlw	-36
 15247  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 15248  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 15249  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 15250  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15251                           
 15252                           ;stkvar	_g @ sp[(-60)+16]
 15253  010A62  0ED4               	movlw	-44
 15254  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 15255  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 15256  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 15257  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 15258  010A7C  EC68  F099         	call	___fladd	;wreg free
 15259                           
 15260                           ;stkvar	_h @ sp[(-56)+24]
 15261  010A80  0EE0               	movlw	-32
 15262  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 15263  010A88  0EE1               	movlw	-31
 15264  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15265  010A90  0EE2               	movlw	-30
 15266  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15267  010A98  0EE3               	movlw	-29
 15268  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 15269                           
 15270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 15271                           ;stkvar	_ou @ sp[(-56)+28]
 15272  010AA0  0EE4               	movlw	-28
 15273  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 15274  010AA8  0EE5               	movlw	-27
 15275  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15276  010AB0  0EE6               	movlw	-26
 15277  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15278  010AB8  0EE7               	movlw	-25
 15279  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15280                           
 15281                           ;stkvar	_u @ sp[(-56)+12]
 15282  010AC0  0ED4               	movlw	-44
 15283  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 15284  010AC8  0ED5               	movlw	-43
 15285  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15286  010AD0  0ED6               	movlw	-42
 15287  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15288  010AD8  0ED7               	movlw	-41
 15289  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15290                           
 15291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 15292                           ;stkvar	_nmode @ sp[(-56)+55]
 15293  010AE0  0EFF               	movlw	-1
 15294  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 15295  010AE8  0E65               	movlw	101
 15296  010AEA  1801               	xorwf	btemp^0,w,c
 15297  010AEC  B4D8               	btfsc	status,2,c
 15298  010AEE  D011               	goto	l11087
 15299                           
 15300                           ;stkvar	_e @ sp[(-56)+34]
 15301                           ;stkvar	_ne @ sp[(-56)+46]
 15302  010AF0  0EEA               	movlw	-22
 15303  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 15304  010AF8  0EF6               	movlw	-10
 15305  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 15306  010B00  0EEB               	movlw	-21
 15307  010B02  006F FF8C  F001    	movff	plusw1,btemp
 15308  010B08  0EF7               	movlw	-9
 15309  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 15310  010B10  D004               	goto	l2101
 15311  010B12                     l11087:
 15312                           
 15313                           ;stkvar	_ne @ sp[(-56)+46]
 15314  010B12  0EF6               	movlw	-10
 15315  010B14  6AE3               	clrf	plusw1,c
 15316  010B16  0EF7               	movlw	-9
 15317  010B18  6AE3               	clrf	plusw1,c
 15318  010B1A                     l2101:
 15319                           
 15320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 15321                           ;stkvar	_pp @ sp[(-56)+50]
 15322  010B1A  0EFA               	movlw	-6
 15323  010B1C  6AE3               	clrf	plusw1,c
 15324  010B1E  0EFB               	movlw	-5
 15325  010B20  6AE3               	clrf	plusw1,c
 15326                           
 15327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 15328                           ;stkvar	_t @ sp[(-56)+52]
 15329  010B22  0EFC               	movlw	-4
 15330  010B24  6AE3               	clrf	plusw1,c
 15331  010B26  0EFD               	movlw	-3
 15332  010B28  6AE3               	clrf	plusw1,c
 15333                           
 15334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 15335                           ;stkvar	_i @ sp[(-56)+36]
 15336  010B2A  0EEC               	movlw	-20
 15337  010B2C  6AE3               	clrf	plusw1,c
 15338  010B2E  0EED               	movlw	-19
 15339  010B30  6AE3               	clrf	plusw1,c
 15340                           
 15341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15342  010B32  D1B7               	goto	l11139
 15343  010B34                     l11089:
 15344                           
 15345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 15346                           ;stkvar	_u @ sp[(-56)+12]
 15347  010B34  0ED4               	movlw	-44
 15348  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 15349  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15350  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 15351  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 15352                           
 15353                           ;stkvar	_h @ sp[(-60)+24]
 15354  010B4E  0EDC               	movlw	-36
 15355  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 15356  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15357  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15358  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 15359  010B68  ECF4  F0A0         	call	___fldiv	;wreg free
 15360  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 15361  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15362  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15363  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 15364  010B84  EC24  F0AA         	call	_floorf	;wreg free
 15365                           
 15366                           ;stkvar	_l @ sp[(-56)+20]
 15367  010B88  0EDC               	movlw	-36
 15368  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 15369  010B90  0EDD               	movlw	-35
 15370  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15371  010B98  0EDE               	movlw	-34
 15372  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15373  010BA0  0EDF               	movlw	-33
 15374  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 15375                           
 15376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 15377                           ;stkvar	_l @ sp[(-56)+20]
 15378  010BA8  0EDC               	movlw	-36
 15379  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 15380  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15381  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15382  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 15383  010BC2  ECDA  F0BB         	call	___fltol	;wreg free
 15384  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 15385  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 15386                           
 15387                           ;stkvar	_d @ sp[(-56)+44]
 15388  010BD2  0EF4               	movlw	-12
 15389  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15390  010BDA  0EF5               	movlw	-11
 15391  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15392                           
 15393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 15394  010BE2  B825               	btfsc	_flags^0,4,c
 15395  010BE4  D026               	goto	l11103
 15396                           
 15397                           ;stkvar	_d @ sp[(-56)+44]
 15398  010BE6  0EF4               	movlw	-12
 15399  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 15400  010BEE  0EF5               	movlw	-11
 15401  010BF0  50E3               	movf	plusw1,w,c
 15402  010BF2  1001               	iorwf	btemp^0,w,c
 15403  010BF4  A4D8               	btfss	status,2,c
 15404  010BF6  D01D               	goto	l11103
 15405                           
 15406                           ;stkvar	_mode @ sp[(-56)+54]
 15407  010BF8  0EFE               	movlw	-2
 15408  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 15409  010C00  0E67               	movlw	103
 15410  010C02  1801               	xorwf	btemp^0,w,c
 15411  010C04  A4D8               	btfss	status,2,c
 15412  010C06  D015               	goto	l11103
 15413                           
 15414                           ;stkvar	_ne @ sp[(-56)+46]
 15415  010C08  0EF7               	movlw	-9
 15416  010C0A  AEE3               	btfss	plusw1,7,c
 15417  010C0C  D012               	goto	l11103
 15418                           
 15419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 15420                           ;stkvar	_t @ sp[(-56)+52]
 15421  010C0E  0EFC               	movlw	-4
 15422  010C10  50E3               	movf	plusw1,w,c
 15423  010C12  0F01               	addlw	1
 15424  010C14  6E01               	movwf	btemp^0,c
 15425  010C16  0EFC               	movlw	-4
 15426  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 15427  010C1E  6A01               	clrf	btemp^0,c
 15428  010C20  0EFD               	movlw	-3
 15429  010C22  50E3               	movf	plusw1,w,c
 15430  010C24  2001               	addwfc	btemp^0,w,c
 15431  010C26  6E01               	movwf	btemp^0,c
 15432  010C28  0EFD               	movlw	-3
 15433  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 15434                           
 15435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 15436  010C30  D0AF               	goto	l11131
 15437  010C32                     l11103:
 15438                           
 15439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 15440                           ;stkvar	_pp @ sp[(-56)+50]
 15441  010C32  0EFA               	movlw	-6
 15442  010C34  006F FF8C  F001    	movff	plusw1,btemp
 15443  010C3A  0EFB               	movlw	-5
 15444  010C3C  50E3               	movf	plusw1,w,c
 15445  010C3E  1001               	iorwf	btemp^0,w,c
 15446  010C40  A4D8               	btfss	status,2,c
 15447  010C42  D070               	goto	l11123
 15448                           
 15449                           ;stkvar	_ne @ sp[(-56)+46]
 15450  010C44  0EF7               	movlw	-9
 15451  010C46  AEE3               	btfss	plusw1,7,c
 15452  010C48  D06D               	goto	l11123
 15453                           
 15454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 15455                           ;stkvar	_n @ sp[(-56)+32]
 15456  010C4A  0EE8               	movlw	-24
 15457  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15458  010C52  0EE9               	movlw	-23
 15459  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 15460  010C5A  0E94               	movlw	low _dbuf
 15461  010C5C  240B               	addwf	(btemp+10)^0,w,c
 15462  010C5E  6ED9               	movwf	fsr2l,c
 15463  010C60  0E03               	movlw	high _dbuf
 15464  010C62  200C               	addwfc	(btemp+11)^0,w,c
 15465  010C64  6EDA               	movwf	fsr2h,c
 15466  010C66  0E2E               	movlw	46
 15467  010C68  6EDF               	movwf	indf2,c
 15468                           
 15469                           ;stkvar	_n @ sp[(-56)+32]
 15470  010C6A  0EE8               	movlw	-24
 15471  010C6C  50E3               	movf	plusw1,w,c
 15472  010C6E  0F01               	addlw	1
 15473  010C70  6E01               	movwf	btemp^0,c
 15474  010C72  0EE8               	movlw	-24
 15475  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 15476  010C7A  6A01               	clrf	btemp^0,c
 15477  010C7C  0EE9               	movlw	-23
 15478  010C7E  50E3               	movf	plusw1,w,c
 15479  010C80  2001               	addwfc	btemp^0,w,c
 15480  010C82  6E01               	movwf	btemp^0,c
 15481  010C84  0EE9               	movlw	-23
 15482  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 15483                           
 15484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 15485                           ;stkvar	_w @ sp[(-56)+38]
 15486  010C8C  50E1               	movf	fsr1l,w,c
 15487  010C8E  0FEE               	addlw	-18
 15488  010C90  6ED9               	movwf	fsr2l,c
 15489  010C92  50E2               	movf	fsr1h,w,c
 15490  010C94  6EDA               	movwf	fsr2h,c
 15491  010C96  0EFF               	movlw	255
 15492  010C98  22DA               	addwfc	fsr2h,f,c
 15493  010C9A  06DE               	decf	postinc2,f,c
 15494  010C9C  0E00               	movlw	0
 15495  010C9E  5ADD               	subwfb	postdec2,f,c
 15496                           
 15497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 15498  010CA0  0E01               	movlw	1
 15499  010CA2  6E0B               	movwf	(btemp+10)^0,c
 15500  010CA4  0E00               	movlw	0
 15501  010CA6  6E0C               	movwf	(btemp+11)^0,c
 15502                           
 15503                           ;stkvar	_pp @ sp[(-56)+50]
 15504  010CA8  0EFA               	movlw	-6
 15505  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15506  010CB0  0EFB               	movlw	-5
 15507  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15508  010CB8  D035               	goto	l11123
 15509  010CBA                     l11115:
 15510                           
 15511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 15512                           ;stkvar	_n @ sp[(-56)+32]
 15513  010CBA  0EE8               	movlw	-24
 15514  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15515  010CC2  0EE9               	movlw	-23
 15516  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15517  010CCA  0E94               	movlw	low _dbuf
 15518  010CCC  240B               	addwf	(btemp+10)^0,w,c
 15519  010CCE  6ED9               	movwf	fsr2l,c
 15520  010CD0  0E03               	movlw	high _dbuf
 15521  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 15522  010CD4  6EDA               	movwf	fsr2h,c
 15523  010CD6  0E30               	movlw	48
 15524  010CD8  6EDF               	movwf	indf2,c
 15525                           
 15526                           ;stkvar	_n @ sp[(-56)+32]
 15527  010CDA  0EE8               	movlw	-24
 15528  010CDC  50E3               	movf	plusw1,w,c
 15529  010CDE  0F01               	addlw	1
 15530  010CE0  6E01               	movwf	btemp^0,c
 15531  010CE2  0EE8               	movlw	-24
 15532  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 15533  010CEA  6A01               	clrf	btemp^0,c
 15534  010CEC  0EE9               	movlw	-23
 15535  010CEE  50E3               	movf	plusw1,w,c
 15536  010CF0  2001               	addwfc	btemp^0,w,c
 15537  010CF2  6E01               	movwf	btemp^0,c
 15538  010CF4  0EE9               	movlw	-23
 15539  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 15540                           
 15541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 15542                           ;stkvar	_w @ sp[(-56)+38]
 15543  010CFC  50E1               	movf	fsr1l,w,c
 15544  010CFE  0FEE               	addlw	-18
 15545  010D00  6ED9               	movwf	fsr2l,c
 15546  010D02  50E2               	movf	fsr1h,w,c
 15547  010D04  6EDA               	movwf	fsr2h,c
 15548  010D06  0EFF               	movlw	255
 15549  010D08  22DA               	addwfc	fsr2h,f,c
 15550  010D0A  06DE               	decf	postinc2,f,c
 15551  010D0C  0E00               	movlw	0
 15552  010D0E  5ADD               	subwfb	postdec2,f,c
 15553                           
 15554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 15555                           ;stkvar	_t @ sp[(-56)+52]
 15556  010D10  50E1               	movf	fsr1l,w,c
 15557  010D12  0FFC               	addlw	-4
 15558  010D14  6ED9               	movwf	fsr2l,c
 15559  010D16  50E2               	movf	fsr1h,w,c
 15560  010D18  6EDA               	movwf	fsr2h,c
 15561  010D1A  0EFF               	movlw	255
 15562  010D1C  22DA               	addwfc	fsr2h,f,c
 15563  010D1E  06DE               	decf	postinc2,f,c
 15564  010D20  0E00               	movlw	0
 15565  010D22  5ADD               	subwfb	postdec2,f,c
 15566  010D24                     l11123:
 15567                           
 15568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 15569                           ;stkvar	_t @ sp[(-56)+52]
 15570  010D24  0EFC               	movlw	-4
 15571  010D26  006F FF8C  F001    	movff	plusw1,btemp
 15572  010D2C  0EFD               	movlw	-3
 15573  010D2E  50E3               	movf	plusw1,w,c
 15574  010D30  1001               	iorwf	btemp^0,w,c
 15575  010D32  A4D8               	btfss	status,2,c
 15576  010D34  D7C2               	goto	l11115
 15577                           
 15578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 15579                           ;stkvar	_n @ sp[(-56)+32]
 15580  010D36  0EE8               	movlw	-24
 15581  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 15582  010D3E  0EE9               	movlw	-23
 15583  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 15584  010D46  0E94               	movlw	low _dbuf
 15585  010D48  240B               	addwf	(btemp+10)^0,w,c
 15586  010D4A  6ED9               	movwf	fsr2l,c
 15587  010D4C  0E03               	movlw	high _dbuf
 15588  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 15589  010D50  6EDA               	movwf	fsr2h,c
 15590                           
 15591                           ;stkvar	_d @ sp[(-56)+44]
 15592  010D52  0EF4               	movlw	-12
 15593  010D54  50E3               	movf	plusw1,w,c
 15594  010D56  0F30               	addlw	48
 15595  010D58  6EDF               	movwf	indf2,c
 15596                           
 15597                           ;stkvar	_n @ sp[(-56)+32]
 15598  010D5A  0EE8               	movlw	-24
 15599  010D5C  50E3               	movf	plusw1,w,c
 15600  010D5E  0F01               	addlw	1
 15601  010D60  6E01               	movwf	btemp^0,c
 15602  010D62  0EE8               	movlw	-24
 15603  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 15604  010D6A  6A01               	clrf	btemp^0,c
 15605  010D6C  0EE9               	movlw	-23
 15606  010D6E  50E3               	movf	plusw1,w,c
 15607  010D70  2001               	addwfc	btemp^0,w,c
 15608  010D72  6E01               	movwf	btemp^0,c
 15609  010D74  0EE9               	movlw	-23
 15610  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 15611                           
 15612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 15613                           ;stkvar	_w @ sp[(-56)+38]
 15614  010D7C  50E1               	movf	fsr1l,w,c
 15615  010D7E  0FEE               	addlw	-18
 15616  010D80  6ED9               	movwf	fsr2l,c
 15617  010D82  50E2               	movf	fsr1h,w,c
 15618  010D84  6EDA               	movwf	fsr2h,c
 15619  010D86  0EFF               	movlw	255
 15620  010D88  22DA               	addwfc	fsr2h,f,c
 15621  010D8A  06DE               	decf	postinc2,f,c
 15622  010D8C  0E00               	movlw	0
 15623  010D8E  5ADD               	subwfb	postdec2,f,c
 15624  010D90                     l11131:
 15625                           
 15626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 15627                           ;stkvar	_u @ sp[(-56)+12]
 15628  010D90  0ED4               	movlw	-44
 15629  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 15630  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 15631  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15632  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15633                           
 15634                           ;stkvar	_l @ sp[(-60)+20]
 15635  010DAA  0ED8               	movlw	-40
 15636  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 15637  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 15638  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 15639  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 15640  010DC4  EC53  F095         	call	___flmul	;wreg free
 15641  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 15642  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15643  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15644  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 15645                           
 15646                           ;stkvar	_h @ sp[(-60)+24]
 15647  010DE0  0EDC               	movlw	-36
 15648  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 15649  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 15650  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 15651  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 15652  010DFA  EC37  F0CE         	call	___flsub	;wreg free
 15653                           
 15654                           ;stkvar	_h @ sp[(-56)+24]
 15655  010DFE  0EE0               	movlw	-32
 15656  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 15657  010E06  0EE1               	movlw	-31
 15658  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15659  010E0E  0EE2               	movlw	-30
 15660  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15661  010E16  0EE3               	movlw	-29
 15662  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 15663                           
 15664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 15665  010E1E  0E00               	movlw	0
 15666  010E20  6EE6               	movwf	postinc1,c
 15667  010E22  0E00               	movlw	0
 15668  010E24  6EE6               	movwf	postinc1,c
 15669  010E26  0E20               	movlw	32
 15670  010E28  6EE6               	movwf	postinc1,c
 15671  010E2A  0E41               	movlw	65
 15672  010E2C  6EE6               	movwf	postinc1,c
 15673                           
 15674                           ;stkvar	_u @ sp[(-60)+12]
 15675  010E2E  0ED0               	movlw	-48
 15676  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 15677  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 15678  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15679  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 15680  010E48  ECF4  F0A0         	call	___fldiv	;wreg free
 15681                           
 15682                           ;stkvar	_u @ sp[(-56)+12]
 15683  010E4C  0ED4               	movlw	-44
 15684  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 15685  010E54  0ED5               	movlw	-43
 15686  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15687  010E5C  0ED6               	movlw	-42
 15688  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15689  010E64  0ED7               	movlw	-41
 15690  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 15691                           
 15692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 15693                           ;stkvar	_ne @ sp[(-56)+46]
 15694  010E6C  50E1               	movf	fsr1l,w,c
 15695  010E6E  0FF6               	addlw	-10
 15696  010E70  6ED9               	movwf	fsr2l,c
 15697  010E72  50E2               	movf	fsr1h,w,c
 15698  010E74  6EDA               	movwf	fsr2h,c
 15699  010E76  0EFF               	movlw	255
 15700  010E78  22DA               	addwfc	fsr2h,f,c
 15701  010E7A  06DE               	decf	postinc2,f,c
 15702  010E7C  0E00               	movlw	0
 15703  010E7E  5ADD               	subwfb	postdec2,f,c
 15704                           
 15705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 15706                           ;stkvar	_i @ sp[(-56)+36]
 15707  010E80  0EEC               	movlw	-20
 15708  010E82  50E3               	movf	plusw1,w,c
 15709  010E84  0F01               	addlw	1
 15710  010E86  6E01               	movwf	btemp^0,c
 15711  010E88  0EEC               	movlw	-20
 15712  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 15713  010E90  6A01               	clrf	btemp^0,c
 15714  010E92  0EED               	movlw	-19
 15715  010E94  50E3               	movf	plusw1,w,c
 15716  010E96  2001               	addwfc	btemp^0,w,c
 15717  010E98  6E01               	movwf	btemp^0,c
 15718  010E9A  0EED               	movlw	-19
 15719  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 15720  010EA2                     l11139:
 15721                           
 15722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15723                           ;stkvar	_m @ sp[(-56)+48]
 15724                           ;stkvar	_i @ sp[(-56)+36]
 15725  010EA2  50E1               	movf	fsr1l,w,c
 15726  010EA4  0FEC               	addlw	-20
 15727  010EA6  6ED9               	movwf	fsr2l,c
 15728  010EA8  50E2               	movf	fsr1h,w,c
 15729  010EAA  6EDA               	movwf	fsr2h,c
 15730  010EAC  0EFF               	movlw	255
 15731  010EAE  22DA               	addwfc	fsr2h,f,c
 15732  010EB0  0EF8               	movlw	-8
 15733  010EB2  50E3               	movf	plusw1,w,c
 15734  010EB4  5CDE               	subwf	postinc2,w,c
 15735  010EB6  50DE               	movf	postinc2,w,c
 15736  010EB8  0A80               	xorlw	128
 15737  010EBA  6E01               	movwf	btemp^0,c
 15738  010EBC  0EF9               	movlw	-7
 15739  010EBE  50E3               	movf	plusw1,w,c
 15740  010EC0  0A80               	xorlw	128
 15741  010EC2  5801               	subwfb	btemp^0,w,c
 15742  010EC4  B0D8               	btfsc	status,0,c
 15743  010EC6  D00E               	goto	u10620
 15744                           
 15745                           ;stkvar	_n @ sp[(-56)+32]
 15746  010EC8  0EE9               	movlw	-23
 15747  010ECA  BEE3               	btfsc	plusw1,7,c
 15748  010ECC  D633               	goto	l11089
 15749  010ECE  0EE9               	movlw	-23
 15750  010ED0  50E3               	movf	plusw1,w,c
 15751  010ED2  E108               	bnz	u10620
 15752  010ED4  0EE8               	movlw	-24
 15753  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 15754  010EDC  0E4B               	movlw	75
 15755  010EDE  5E01               	subwf	btemp^0,f,c
 15756  010EE0  A0D8               	btfss	status,0,c
 15757  010EE2  D628               	goto	l11089
 15758  010EE4                     u10620:
 15759                           
 15760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 15761                           ;stkvar	_pp @ sp[(-56)+50]
 15762  010EE4  0EFA               	movlw	-6
 15763  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 15764  010EEC  0EFB               	movlw	-5
 15765  010EEE  50E3               	movf	plusw1,w,c
 15766  010EF0  1001               	iorwf	btemp^0,w,c
 15767  010EF2  B4D8               	btfsc	status,2,c
 15768  010EF4  A825               	btfss	_flags^0,4,c
 15769  010EF6  D021               	goto	l11151
 15770                           
 15771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 15772                           ;stkvar	_n @ sp[(-56)+32]
 15773  010EF8  0EE8               	movlw	-24
 15774  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 15775  010F00  0EE9               	movlw	-23
 15776  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 15777  010F08  0E94               	movlw	low _dbuf
 15778  010F0A  240B               	addwf	(btemp+10)^0,w,c
 15779  010F0C  6ED9               	movwf	fsr2l,c
 15780  010F0E  0E03               	movlw	high _dbuf
 15781  010F10  200C               	addwfc	(btemp+11)^0,w,c
 15782  010F12  6EDA               	movwf	fsr2h,c
 15783  010F14  0E2E               	movlw	46
 15784  010F16  6EDF               	movwf	indf2,c
 15785                           
 15786                           ;stkvar	_n @ sp[(-56)+32]
 15787  010F18  0EE8               	movlw	-24
 15788  010F1A  50E3               	movf	plusw1,w,c
 15789  010F1C  0F01               	addlw	1
 15790  010F1E  6E01               	movwf	btemp^0,c
 15791  010F20  0EE8               	movlw	-24
 15792  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 15793  010F28  6A01               	clrf	btemp^0,c
 15794  010F2A  0EE9               	movlw	-23
 15795  010F2C  50E3               	movf	plusw1,w,c
 15796  010F2E  2001               	addwfc	btemp^0,w,c
 15797  010F30  6E01               	movwf	btemp^0,c
 15798  010F32  0EE9               	movlw	-23
 15799  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 15800  010F3A                     l11151:
 15801                           
 15802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 15803                           ;stkvar	_n @ sp[(-56)+32]
 15804  010F3A  0EE8               	movlw	-24
 15805  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15806  010F42  0EE9               	movlw	-23
 15807  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 15808  010F4A  0E94               	movlw	low _dbuf
 15809  010F4C  240B               	addwf	(btemp+10)^0,w,c
 15810  010F4E  6ED9               	movwf	fsr2l,c
 15811  010F50  0E03               	movlw	high _dbuf
 15812  010F52  200C               	addwfc	(btemp+11)^0,w,c
 15813  010F54  6EDA               	movwf	fsr2h,c
 15814  010F56  0E00               	movlw	0
 15815  010F58  6EDF               	movwf	indf2,c
 15816                           
 15817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 15818                           ;stkvar	_nmode @ sp[(-56)+55]
 15819  010F5A  0EFF               	movlw	-1
 15820  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 15821  010F62  0E65               	movlw	101
 15822  010F64  1801               	xorwf	btemp^0,w,c
 15823  010F66  A4D8               	btfss	status,2,c
 15824  010F68  EF16  F081         	goto	l10955
 15825                           
 15826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 15827  010F6C  0E4F               	movlw	79
 15828  010F6E  6E0B               	movwf	(btemp+10)^0,c
 15829  010F70  0E00               	movlw	0
 15830  010F72  6E0C               	movwf	(btemp+11)^0,c
 15831                           
 15832                           ;stkvar	_i @ sp[(-56)+36]
 15833  010F74  0EEC               	movlw	-20
 15834  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15835  010F7C  0EED               	movlw	-19
 15836  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15837                           
 15838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 15839                           ;stkvar	_i @ sp[(-56)+36]
 15840  010F84  0EEC               	movlw	-20
 15841  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 15842  010F8C  0EED               	movlw	-19
 15843  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15844  010F94  0E94               	movlw	low _dbuf
 15845  010F96  240B               	addwf	(btemp+10)^0,w,c
 15846  010F98  6ED9               	movwf	fsr2l,c
 15847  010F9A  0E03               	movlw	high _dbuf
 15848  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 15849  010F9E  6EDA               	movwf	fsr2h,c
 15850  010FA0  0E00               	movlw	0
 15851  010FA2  6EDF               	movwf	indf2,c
 15852                           
 15853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 15854                           ;stkvar	_sign @ sp[(-56)+42]
 15855  010FA4  0EF2               	movlw	-14
 15856  010FA6  6AE3               	clrf	plusw1,c
 15857  010FA8  0EF3               	movlw	-13
 15858  010FAA  6AE3               	clrf	plusw1,c
 15859                           
 15860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 15861                           ;stkvar	_e @ sp[(-56)+34]
 15862  010FAC  0EEB               	movlw	-21
 15863  010FAE  AEE3               	btfss	plusw1,7,c
 15864  010FB0  D012               	goto	l11165
 15865                           
 15866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 15867  010FB2  0E01               	movlw	1
 15868  010FB4  6E0B               	movwf	(btemp+10)^0,c
 15869  010FB6  0E00               	movlw	0
 15870  010FB8  6E0C               	movwf	(btemp+11)^0,c
 15871                           
 15872                           ;stkvar	_sign @ sp[(-56)+42]
 15873  010FBA  0EF2               	movlw	-14
 15874  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15875  010FC2  0EF3               	movlw	-13
 15876  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15877                           
 15878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 15879                           ;stkvar	_e @ sp[(-56)+34]
 15880                           ;stkvar	_e @ sp[(-56)+34]
 15881  010FCA  0EEA               	movlw	-22
 15882  010FCC  6CE3               	negf	plusw1,c
 15883  010FCE  0EEB               	movlw	-21
 15884  010FD0  1EE3               	comf	plusw1,f,c
 15885  010FD2  B0D8               	btfsc	status,0,c
 15886  010FD4  2AE3               	incf	plusw1,f,c
 15887  010FD6                     l11165:
 15888                           
 15889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 15890  010FD6  0E02               	movlw	2
 15891  010FD8  6E0B               	movwf	(btemp+10)^0,c
 15892  010FDA  0E00               	movlw	0
 15893  010FDC  6E0C               	movwf	(btemp+11)^0,c
 15894                           
 15895                           ;stkvar	_p @ sp[(-56)+40]
 15896  010FDE  0EF0               	movlw	-16
 15897  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15898  010FE6  0EF1               	movlw	-15
 15899  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 15900                           
 15901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 15902  010FEE  D051               	goto	l11177
 15903  010FF0                     l11167:
 15904                           
 15905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 15906                           ;stkvar	_i @ sp[(-56)+36]
 15907  010FF0  50E1               	movf	fsr1l,w,c
 15908  010FF2  0FEC               	addlw	-20
 15909  010FF4  6ED9               	movwf	fsr2l,c
 15910  010FF6  50E2               	movf	fsr1h,w,c
 15911  010FF8  6EDA               	movwf	fsr2h,c
 15912  010FFA  0EFF               	movlw	255
 15913  010FFC  22DA               	addwfc	fsr2h,f,c
 15914  010FFE  06DE               	decf	postinc2,f,c
 15915  011000  0E00               	movlw	0
 15916  011002  5ADD               	subwfb	postdec2,f,c
 15917                           
 15918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 15919                           ;stkvar	_i @ sp[(-56)+36]
 15920  011004  0EEC               	movlw	-20
 15921  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 15922  01100C  0EED               	movlw	-19
 15923  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15924  011014  0E94               	movlw	low _dbuf
 15925  011016  240B               	addwf	(btemp+10)^0,w,c
 15926  011018  6ED9               	movwf	fsr2l,c
 15927  01101A  0E03               	movlw	high _dbuf
 15928  01101C  200C               	addwfc	(btemp+11)^0,w,c
 15929  01101E  6EDA               	movwf	fsr2h,c
 15930  011020  0E0A               	movlw	10
 15931  011022  6EE6               	movwf	postinc1,c
 15932  011024  0E00               	movlw	0
 15933  011026  6EE6               	movwf	postinc1,c
 15934                           
 15935                           ;stkvar	_e @ sp[(-58)+34]
 15936  011028  0EE8               	movlw	-24
 15937  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 15938  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 15939  011036  ECB1  F0C1         	call	___awmod	;wreg free
 15940  01103A  5001               	movf	btemp^0,w,c
 15941  01103C  0F30               	addlw	48
 15942  01103E  6EDF               	movwf	indf2,c
 15943                           
 15944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 15945  011040  0E0A               	movlw	10
 15946  011042  6EE6               	movwf	postinc1,c
 15947  011044  0E00               	movlw	0
 15948  011046  6EE6               	movwf	postinc1,c
 15949                           
 15950                           ;stkvar	_e @ sp[(-58)+34]
 15951  011048  0EE8               	movlw	-24
 15952  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 15953  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 15954  011056  ECAD  F0BE         	call	___awdiv	;wreg free
 15955                           
 15956                           ;stkvar	_e @ sp[(-56)+34]
 15957  01105A  0EEA               	movlw	-22
 15958  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 15959  011062  0EEB               	movlw	-21
 15960  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15961                           
 15962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 15963                           ;stkvar	_p @ sp[(-56)+40]
 15964  01106A  50E1               	movf	fsr1l,w,c
 15965  01106C  0FF0               	addlw	-16
 15966  01106E  6ED9               	movwf	fsr2l,c
 15967  011070  50E2               	movf	fsr1h,w,c
 15968  011072  6EDA               	movwf	fsr2h,c
 15969  011074  0EFF               	movlw	255
 15970  011076  22DA               	addwfc	fsr2h,f,c
 15971  011078  06DE               	decf	postinc2,f,c
 15972  01107A  0E00               	movlw	0
 15973  01107C  5ADD               	subwfb	postdec2,f,c
 15974                           
 15975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 15976                           ;stkvar	_w @ sp[(-56)+38]
 15977  01107E  50E1               	movf	fsr1l,w,c
 15978  011080  0FEE               	addlw	-18
 15979  011082  6ED9               	movwf	fsr2l,c
 15980  011084  50E2               	movf	fsr1h,w,c
 15981  011086  6EDA               	movwf	fsr2h,c
 15982  011088  0EFF               	movlw	255
 15983  01108A  22DA               	addwfc	fsr2h,f,c
 15984  01108C  06DE               	decf	postinc2,f,c
 15985  01108E  0E00               	movlw	0
 15986  011090  5ADD               	subwfb	postdec2,f,c
 15987  011092                     l11177:
 15988                           
 15989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 15990                           ;stkvar	_e @ sp[(-56)+34]
 15991  011092  0EEA               	movlw	-22
 15992  011094  006F FF8C  F001    	movff	plusw1,btemp
 15993  01109A  0EEB               	movlw	-21
 15994  01109C  50E3               	movf	plusw1,w,c
 15995  01109E  1001               	iorwf	btemp^0,w,c
 15996  0110A0  A4D8               	btfss	status,2,c
 15997  0110A2  D7A6               	goto	l11167
 15998                           
 15999                           ;stkvar	_p @ sp[(-56)+40]
 16000  0110A4  0EF1               	movlw	-15
 16001  0110A6  BEE3               	btfsc	plusw1,7,c
 16002  0110A8  D007               	goto	u10680
 16003  0110AA  0EF1               	movlw	-15
 16004  0110AC  50E3               	movf	plusw1,w,c
 16005  0110AE  E1A0               	bnz	l11167
 16006  0110B0  0EF0               	movlw	-16
 16007  0110B2  04E3               	decf	plusw1,w,c
 16008  0110B4  B0D8               	btfsc	status,0,c
 16009  0110B6  D79C               	goto	l11167
 16010  0110B8                     u10680:
 16011                           
 16012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 16013                           ;stkvar	_i @ sp[(-56)+36]
 16014  0110B8  50E1               	movf	fsr1l,w,c
 16015  0110BA  0FEC               	addlw	-20
 16016  0110BC  6ED9               	movwf	fsr2l,c
 16017  0110BE  50E2               	movf	fsr1h,w,c
 16018  0110C0  6EDA               	movwf	fsr2h,c
 16019  0110C2  0EFF               	movlw	255
 16020  0110C4  22DA               	addwfc	fsr2h,f,c
 16021  0110C6  06DE               	decf	postinc2,f,c
 16022  0110C8  0E00               	movlw	0
 16023  0110CA  5ADD               	subwfb	postdec2,f,c
 16024                           
 16025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 16026                           ;stkvar	_sign @ sp[(-56)+42]
 16027  0110CC  0EF2               	movlw	-14
 16028  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 16029  0110D4  0EF3               	movlw	-13
 16030  0110D6  50E3               	movf	plusw1,w,c
 16031  0110D8  1001               	iorwf	btemp^0,w,c
 16032  0110DA  A4D8               	btfss	status,2,c
 16033  0110DC  D002               	goto	l11187
 16034  0110DE  0E2B               	movlw	43
 16035  0110E0  D001               	goto	L15
 16036  0110E2                     l11187:
 16037  0110E2  0E2D               	movlw	45
 16038  0110E4                     L15:
 16039  0110E4  6E0B               	movwf	(btemp+10)^0,c
 16040  0110E6  0E00               	movlw	0
 16041  0110E8  6E0C               	movwf	(btemp+11)^0,c
 16042                           
 16043                           ;stkvar	_efgtoa$5167 @ sp[(-56)+4]
 16044  0110EA  0ECC               	movlw	-52
 16045  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16046  0110F2  0ECD               	movlw	-51
 16047  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16048                           
 16049                           ;stkvar	_efgtoa$5167 @ sp[(-56)+4]
 16050                           ;stkvar	_i @ sp[(-56)+36]
 16051  0110FA  0EEC               	movlw	-20
 16052  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16053  011102  0EED               	movlw	-19
 16054  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 16055  01110A  0E94               	movlw	low _dbuf
 16056  01110C  240B               	addwf	(btemp+10)^0,w,c
 16057  01110E  6ED9               	movwf	fsr2l,c
 16058  011110  0E03               	movlw	high _dbuf
 16059  011112  200C               	addwfc	(btemp+11)^0,w,c
 16060  011114  6EDA               	movwf	fsr2h,c
 16061  011116  0ECC               	movlw	-52
 16062  011118  006F FF8F FFDF     	movff	plusw1,indf2
 16063                           
 16064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 16065                           ;stkvar	_w @ sp[(-56)+38]
 16066  01111E  50E1               	movf	fsr1l,w,c
 16067  011120  0FEE               	addlw	-18
 16068  011122  6ED9               	movwf	fsr2l,c
 16069  011124  50E2               	movf	fsr1h,w,c
 16070  011126  6EDA               	movwf	fsr2h,c
 16071  011128  0EFF               	movlw	255
 16072  01112A  22DA               	addwfc	fsr2h,f,c
 16073  01112C  06DE               	decf	postinc2,f,c
 16074  01112E  0E00               	movlw	0
 16075  011130  5ADD               	subwfb	postdec2,f,c
 16076                           
 16077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16078                           ;stkvar	_i @ sp[(-56)+36]
 16079  011132  50E1               	movf	fsr1l,w,c
 16080  011134  0FEC               	addlw	-20
 16081  011136  6ED9               	movwf	fsr2l,c
 16082  011138  50E2               	movf	fsr1h,w,c
 16083  01113A  6EDA               	movwf	fsr2h,c
 16084  01113C  0EFF               	movlw	255
 16085  01113E  22DA               	addwfc	fsr2h,f,c
 16086  011140  06DE               	decf	postinc2,f,c
 16087  011142  0E00               	movlw	0
 16088  011144  5ADD               	subwfb	postdec2,f,c
 16089  011146  0EBF               	movlw	191
 16090  011148  6E0B               	movwf	(btemp+10)^0,c
 16091  01114A  0EFF               	movlw	255
 16092  01114C  6E0C               	movwf	(btemp+11)^0,c
 16093                           
 16094                           ;stkvar	_c @ sp[(-56)+-7]
 16095  01114E  0EC1               	movlw	-63
 16096  011150  50E3               	movf	plusw1,w,c
 16097  011152  6E09               	movwf	(btemp+8)^0,c
 16098  011154  6A0A               	clrf	(btemp+9)^0,c
 16099  011156  500B               	movf	(btemp+10)^0,w,c
 16100  011158  2609               	addwf	(btemp+8)^0,f,c
 16101  01115A  500C               	movf	(btemp+11)^0,w,c
 16102  01115C  220A               	addwfc	(btemp+9)^0,f,c
 16103  01115E  500A               	movf	(btemp+9)^0,w,c
 16104  011160  E106               	bnz	u10700
 16105  011162  0E1A               	movlw	26
 16106  011164  5C09               	subwf	(btemp+8)^0,w,c
 16107  011166  B0D8               	btfsc	status,0,c
 16108  011168  D002               	goto	u10700
 16109  01116A  0E01               	movlw	1
 16110  01116C  D001               	goto	u10710
 16111  01116E                     u10700:
 16112  01116E  0E00               	movlw	0
 16113  011170                     u10710:
 16114  011170  6E0B               	movwf	(btemp+10)^0,c
 16115  011172  6A0C               	clrf	(btemp+11)^0,c
 16116                           
 16117                           ;stkvar	_efgtoa$5169 @ sp[(-56)+0]
 16118  011174  0EC8               	movlw	-56
 16119  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16120  01117C  0EC9               	movlw	-55
 16121  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16122                           
 16123                           ;stkvar	_efgtoa$5169 @ sp[(-56)+0]
 16124  011184  0EC8               	movlw	-56
 16125  011186  006F FF8C  F001    	movff	plusw1,btemp
 16126  01118C  0EC9               	movlw	-55
 16127  01118E  50E3               	movf	plusw1,w,c
 16128  011190  1001               	iorwf	btemp^0,w,c
 16129  011192  A4D8               	btfss	status,2,c
 16130  011194  D002               	goto	l11203
 16131  011196  0E65               	movlw	101
 16132  011198  D001               	goto	L16
 16133  01119A                     l11203:
 16134  01119A  0E45               	movlw	69
 16135  01119C                     L16:
 16136  01119C  6E0B               	movwf	(btemp+10)^0,c
 16137  01119E  0E00               	movlw	0
 16138  0111A0  6E0C               	movwf	(btemp+11)^0,c
 16139                           
 16140                           ;stkvar	_efgtoa$5168 @ sp[(-56)+2]
 16141  0111A2  0ECA               	movlw	-54
 16142  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16143  0111AA  0ECB               	movlw	-53
 16144  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16145                           
 16146                           ;stkvar	_efgtoa$5168 @ sp[(-56)+2]
 16147                           ;stkvar	_i @ sp[(-56)+36]
 16148  0111B2  0EEC               	movlw	-20
 16149  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16150  0111BA  0EED               	movlw	-19
 16151  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16152  0111C2  0E94               	movlw	low _dbuf
 16153  0111C4  240B               	addwf	(btemp+10)^0,w,c
 16154  0111C6  6ED9               	movwf	fsr2l,c
 16155  0111C8  0E03               	movlw	high _dbuf
 16156  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 16157  0111CC  6EDA               	movwf	fsr2h,c
 16158  0111CE  0ECA               	movlw	-54
 16159  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 16160                           
 16161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 16162                           ;stkvar	_w @ sp[(-56)+38]
 16163  0111D6  50E1               	movf	fsr1l,w,c
 16164  0111D8  0FEE               	addlw	-18
 16165  0111DA  6ED9               	movwf	fsr2l,c
 16166  0111DC  50E2               	movf	fsr1h,w,c
 16167  0111DE  6EDA               	movwf	fsr2h,c
 16168  0111E0  0EFF               	movlw	255
 16169  0111E2  22DA               	addwfc	fsr2h,f,c
 16170  0111E4  06DE               	decf	postinc2,f,c
 16171  0111E6  0E00               	movlw	0
 16172  0111E8  5ADD               	subwfb	postdec2,f,c
 16173                           
 16174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 16175                           ;stkvar	_i @ sp[(-56)+36]
 16176  0111EA  0EEC               	movlw	-20
 16177  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16178  0111F2  0EED               	movlw	-19
 16179  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16180  0111FA  0E94               	movlw	low _dbuf
 16181  0111FC  240B               	addwf	(btemp+10)^0,w,c
 16182  0111FE  6E09               	movwf	(btemp+8)^0,c
 16183  011200  0E03               	movlw	high _dbuf
 16184  011202  200C               	addwfc	(btemp+11)^0,w,c
 16185  011204  6E0A               	movwf	(btemp+9)^0,c
 16186  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 16187  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 16188                           
 16189                           ;stkvar	_n @ sp[(-58)+32]
 16190  011212  0E94               	movlw	low _dbuf
 16191  011214  6E0B               	movwf	(btemp+10)^0,c
 16192  011216  0E03               	movlw	high _dbuf
 16193  011218  6E0C               	movwf	(btemp+11)^0,c
 16194  01121A  0EE6               	movlw	-26
 16195  01121C  50E3               	movf	plusw1,w,c
 16196  01121E  260B               	addwf	(btemp+10)^0,f,c
 16197  011220  0EE7               	movlw	-25
 16198  011222  50E3               	movf	plusw1,w,c
 16199  011224  220C               	addwfc	(btemp+11)^0,f,c
 16200  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16201  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16202  011232  ECBE  F0C5         	call	_strcpy	;wreg free
 16203  011236  EF16  F081         	goto	l10955
 16204  01123A                     l2057:
 16205                           
 16206                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 16207  01123A  0EC1               	movlw	193
 16208  01123C  26E1               	addwf	fsr1l,f,c
 16209  01123E  0EFF               	movlw	255
 16210  011240  22E2               	addwfc	fsr1h,f,c
 16211  011242  0012               	return		;funcret
 16212  011244                     __end_of_efgtoa:
 16213                           	opt callstack 0
 16214                           
 16215 ;; *************** function _tolower *****************
 16216 ;; Defined at:
 16217 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;  c               2  [STACK] int 
 16220 ;; Auto vars:     Size  Location     Type
 16221 ;;		None
 16222 ;; Return value:  Size  Location     Type
 16223 ;;                  2  [STACK] int 
 16224 ;; Registers used:
 16225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16226 ;; Tracked objects:
 16227 ;;		On entry : 0/0
 16228 ;;		On exit  : 0/0
 16229 ;;		Unchanged: 0/0
 16230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16235 ;;Total ram usage:        0 bytes
 16236 ;; Hardware stack levels used:    1
 16237 ;; Hardware stack levels required when called:   16
 16238 ;; This function calls:
 16239 ;;		_isupper
 16240 ;; This function is called by:
 16241 ;;		_efgtoa
 16242 ;;		_vfpfcnvrt
 16243 ;; This function uses a reentrant model
 16244 ;;
 16245                           
 16246                           	psect	text54
 16247  019514                     __ptext54:
 16248                           	opt callstack 0
 16249  019514                     _tolower:
 16250                           	opt callstack 0
 16251                           
 16252                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16253  019514  52E6               	movf	postinc1,f,c
 16254  019516  52E6               	movf	postinc1,f,c
 16255                           
 16256                           ;stkvar	_c @ sp[(-2)+-2]
 16257                           
 16258                           ;incstack = 0
 16259 ;; hardware stack exceeded
 16260  019518  0EFC               	movlw	-4
 16261  01951A  50E3               	movf	plusw1,w,c
 16262  01951C  0FBF               	addlw	191
 16263  01951E  6E0B               	movwf	(btemp+10)^0,c
 16264  019520  0EFD               	movlw	-3
 16265  019522  006F FF8C  F00C    	movff	plusw1,btemp+11
 16266  019528  0EFF               	movlw	255
 16267  01952A  220C               	addwfc	(btemp+11)^0,f,c
 16268  01952C  500C               	movf	(btemp+11)^0,w,c
 16269  01952E  E106               	bnz	u5610
 16270  019530  0E1A               	movlw	26
 16271  019532  5C0B               	subwf	(btemp+10)^0,w,c
 16272  019534  B0D8               	btfsc	status,0,c
 16273  019536  D002               	goto	u5610
 16274  019538  0E01               	movlw	1
 16275  01953A  D001               	goto	u5620
 16276  01953C                     u5610:
 16277  01953C  0E00               	movlw	0
 16278  01953E                     u5620:
 16279  01953E  6E0B               	movwf	(btemp+10)^0,c
 16280  019540  6A0C               	clrf	(btemp+11)^0,c
 16281                           
 16282                           ;stkvar	_tolower$5981 @ sp[(-2)+0]
 16283  019542  0EFE               	movlw	-2
 16284  019544  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16285  01954A  0EFF               	movlw	-1
 16286  01954C  0060  F033  FFE3   	movff	btemp+11,plusw1
 16287                           
 16288                           ;stkvar	_tolower$5981 @ sp[(-2)+0]
 16289  019552  0EFE               	movlw	-2
 16290  019554  006F FF8C  F001    	movff	plusw1,btemp
 16291  01955A  0EFF               	movlw	-1
 16292  01955C  50E3               	movf	plusw1,w,c
 16293  01955E  1001               	iorwf	btemp^0,w,c
 16294  019560  B4D8               	btfsc	status,2,c
 16295  019562  D00D               	goto	l7383
 16296                           
 16297                           ;stkvar	_c @ sp[(-2)+-2]
 16298  019564  0EFC               	movlw	-4
 16299  019566  006F FF8C  F001    	movff	plusw1,btemp
 16300  01956C  0EFD               	movlw	-3
 16301  01956E  006F FF8C  F002    	movff	plusw1,btemp+1
 16302  019574  0E20               	movlw	32
 16303  019576  1201               	iorwf	btemp^0,f,c
 16304  019578  0E00               	movlw	0
 16305  01957A  1202               	iorwf	(btemp+1)^0,f,c
 16306  01957C  D008               	goto	l3324
 16307  01957E                     l7383:
 16308                           
 16309                           ;stkvar	_c @ sp[(-2)+-2]
 16310  01957E  0EFC               	movlw	-4
 16311  019580  006F FF8C  F001    	movff	plusw1,btemp
 16312  019586  0EFD               	movlw	-3
 16313  019588  006F FF8C  F002    	movff	plusw1,btemp+1
 16314  01958E                     l3324:
 16315                           
 16316                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16317  01958E  52E5               	movf	postdec1,f,c
 16318  019590  52E5               	movf	postdec1,f,c
 16319  019592  52E5               	movf	postdec1,f,c
 16320  019594  52E5               	movf	postdec1,f,c
 16321  019596  0012               	return		;funcret
 16322  019598                     __end_of_tolower:
 16323                           	opt callstack 0
 16324                           
 16325 ;; *************** function _isupper *****************
 16326 ;; Defined at:
 16327 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 16328 ;; Parameters:    Size  Location     Type
 16329 ;;  c               2  [STACK] int 
 16330 ;; Auto vars:     Size  Location     Type
 16331 ;;		None
 16332 ;; Return value:  Size  Location     Type
 16333 ;;                  2  [STACK] int 
 16334 ;; Registers used:
 16335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16336 ;; Tracked objects:
 16337 ;;		On entry : 0/0
 16338 ;;		On exit  : 0/0
 16339 ;;		Unchanged: 0/0
 16340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16345 ;;Total ram usage:        0 bytes
 16346 ;; Hardware stack levels used:    1
 16347 ;; Hardware stack levels required when called:   15
 16348 ;; This function calls:
 16349 ;;		Nothing
 16350 ;; This function is called by:
 16351 ;;		_efgtoa
 16352 ;;		_xtoa
 16353 ;;		_vfpfcnvrt
 16354 ;;		_tolower
 16355 ;; This function uses a reentrant model
 16356 ;;
 16357                           
 16358                           	psect	text55
 16359  01A0EA                     __ptext55:
 16360                           	opt callstack 0
 16361  01A0EA                     _isupper:
 16362                           	opt callstack 0
 16363                           
 16364                           ;stkvar	_c @ sp[(0)+-2]
 16365                           
 16366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16367                           ;incstack = 0
 16368 ;; hardware stack exceeded
 16369  01A0EA  0EFE               	movlw	-2
 16370  01A0EC  50E3               	movf	plusw1,w,c
 16371  01A0EE  0FBF               	addlw	191
 16372  01A0F0  6E0B               	movwf	(btemp+10)^0,c
 16373  01A0F2  0EFF               	movlw	-1
 16374  01A0F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16375  01A0FA  0EFF               	movlw	255
 16376  01A0FC  220C               	addwfc	(btemp+11)^0,f,c
 16377  01A0FE  500C               	movf	(btemp+11)^0,w,c
 16378  01A100  E106               	bnz	u5010
 16379  01A102  0E1A               	movlw	26
 16380  01A104  5C0B               	subwf	(btemp+10)^0,w,c
 16381  01A106  B0D8               	btfsc	status,0,c
 16382  01A108  D002               	goto	u5010
 16383  01A10A  0E01               	movlw	1
 16384  01A10C  D001               	goto	u5020
 16385  01A10E                     u5010:
 16386  01A10E  0E00               	movlw	0
 16387  01A110                     u5020:
 16388  01A110  6E01               	movwf	btemp^0,c
 16389  01A112  6A02               	clrf	(btemp+1)^0,c
 16390                           
 16391                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16392  01A114  52E5               	movf	postdec1,f,c
 16393  01A116  52E5               	movf	postdec1,f,c
 16394  01A118  0012               	return		;funcret
 16395  01A11A                     __end_of_isupper:
 16396                           	opt callstack 0
 16397                           
 16398 ;; *************** function _strcpy *****************
 16399 ;; Defined at:
 16400 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 16401 ;; Parameters:    Size  Location     Type
 16402 ;;  dest            2  [STACK] PTR unsigned char 
 16403 ;;		 -> dbuf(80), 
 16404 ;;  src             2  [STACK] PTR const unsigned char 
 16405 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 16406 ;;		 -> dbuf(80), 
 16407 ;; Auto vars:     Size  Location     Type
 16408 ;;  d               2  [STACK] PTR unsigned char 
 16409 ;;		 -> dbuf(80), 
 16410 ;;  s               2  [STACK] PTR const unsigned char 
 16411 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 16412 ;;		 -> dbuf(80), 
 16413 ;; Return value:  Size  Location     Type
 16414 ;;                  2  [STACK] PTR unsigned char 
 16415 ;; Registers used:
 16416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 16417 ;; Tracked objects:
 16418 ;;		On entry : 0/0
 16419 ;;		On exit  : 0/0
 16420 ;;		Unchanged: 0/0
 16421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16426 ;;Total ram usage:        0 bytes
 16427 ;; Hardware stack levels used:    1
 16428 ;; Hardware stack levels required when called:   15
 16429 ;; This function calls:
 16430 ;;		Nothing
 16431 ;; This function is called by:
 16432 ;;		_efgtoa
 16433 ;; This function uses a reentrant model
 16434 ;;
 16435                           
 16436                           	psect	text56
 16437  018B7C                     __ptext56:
 16438                           	opt callstack 0
 16439  018B7C                     _strcpy:
 16440                           	opt callstack 0
 16441                           
 16442                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16443  018B7C  52E6               	movf	postinc1,f,c
 16444  018B7E  52E6               	movf	postinc1,f,c
 16445  018B80  52E6               	movf	postinc1,f,c
 16446  018B82  52E6               	movf	postinc1,f,c
 16447                           
 16448                           ;stkvar	_src @ sp[(-4)+-4]
 16449                           
 16450                           ;incstack = 0
 16451 ;; hardware stack exceeded
 16452  018B84  0EF8               	movlw	-8
 16453  018B86  006F FF8C  F00B    	movff	plusw1,btemp+10
 16454  018B8C  0EF9               	movlw	-7
 16455  018B8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16456                           
 16457                           ;stkvar	_s @ sp[(-4)+2]
 16458  018B94  0EFF               	movlw	-1
 16459  018B96  0060  F033  FFE3   	movff	btemp+11,plusw1
 16460  018B9C  0EFE               	movlw	-2
 16461  018B9E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16462                           
 16463                           ;stkvar	_dest @ sp[(-4)+-2]
 16464  018BA4  0EFA               	movlw	-6
 16465  018BA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 16466  018BAC  0EFB               	movlw	-5
 16467  018BAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 16468                           
 16469                           ;stkvar	_d @ sp[(-4)+0]
 16470  018BB4  0EFD               	movlw	-3
 16471  018BB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16472  018BBC  0EFC               	movlw	-4
 16473  018BBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16474  018BC4                     l10777:
 16475                           
 16476                           ;stkvar	_s @ sp[(-4)+2]
 16477  018BC4  50E1               	movf	fsr1l,w,c
 16478  018BC6  0FFE               	addlw	-2
 16479  018BC8  6ED9               	movwf	fsr2l,c
 16480  018BCA  50E2               	movf	fsr1h,w,c
 16481  018BCC  6EDA               	movwf	fsr2h,c
 16482  018BCE  0EFF               	movlw	255
 16483  018BD0  22DA               	addwfc	fsr2h,f,c
 16484  018BD2  006F FF7C  F00B    	movff	indf2,btemp+10
 16485  018BD8  0E01               	movlw	1
 16486  018BDA  26DE               	addwf	postinc2,f,c
 16487  018BDC  006F FF7C  F00C    	movff	indf2,btemp+11
 16488  018BE2  0E00               	movlw	0
 16489  018BE4  22DD               	addwfc	postdec2,f,c
 16490  018BE6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16491  018BEC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16492  018BF2  0E00               	movlw	low (__mediumconst shr (0+16))
 16493  018BF4  6EF8               	movwf	tblptru,c
 16494                           
 16495                           ;stkvar	_d @ sp[(-4)+0]
 16496  018BF6  50E1               	movf	fsr1l,w,c
 16497  018BF8  0FFC               	addlw	-4
 16498  018BFA  6ED9               	movwf	fsr2l,c
 16499  018BFC  50E2               	movf	fsr1h,w,c
 16500  018BFE  6EDA               	movwf	fsr2h,c
 16501  018C00  0EFF               	movlw	255
 16502  018C02  22DA               	addwfc	fsr2h,f,c
 16503  018C04  006F FF7C  F00B    	movff	indf2,btemp+10
 16504  018C0A  0E01               	movlw	1
 16505  018C0C  26DE               	addwf	postinc2,f,c
 16506  018C0E  006F FF7C  F00C    	movff	indf2,btemp+11
 16507  018C14  0E00               	movlw	0
 16508  018C16  22DD               	addwfc	postdec2,f,c
 16509  018C18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16510  018C1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16511  018C24  0E1F               	movlw	(high __ramtop+-1)
 16512  018C26  64F7               	cpfsgt	tblptrh,c
 16513  018C28  D003               	bra	u9957
 16514  018C2A  0008               	tblrd		*
 16515  018C2C  50F5               	movf	tablat,w,c
 16516  018C2E  D007               	bra	u9950
 16517  018C30                     u9957:
 16518  018C30  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16519  018C36  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16520  018C3C  50EF               	movf	indf0,w,c
 16521  018C3E                     u9950:
 16522  018C3E  6EDF               	movwf	indf2,c
 16523  018C40  50DF               	movf	indf2,w,c
 16524  018C42  A4D8               	btfss	status,2,c
 16525  018C44  D7BF               	goto	l10777
 16526                           
 16527                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 16528  018C46  0EF8               	movlw	248
 16529  018C48  26E1               	addwf	fsr1l,f,c
 16530  018C4A  0EFF               	movlw	255
 16531  018C4C  22E2               	addwfc	fsr1h,f,c
 16532  018C4E  0012               	return		;funcret
 16533  018C50                     __end_of_strcpy:
 16534                           	opt callstack 0
 16535                           
 16536 ;; *************** function _floorf *****************
 16537 ;; Defined at:
 16538 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 16539 ;; Parameters:    Size  Location     Type
 16540 ;;  x               4  [STACK] float 
 16541 ;; Auto vars:     Size  Location     Type
 16542 ;;  u               4  [STACK] struct .
 16543 ;;  m               4  [STACK] unsigned long 
 16544 ;;  e               2  [STACK] int 
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  4  [STACK] float 
 16547 ;; Registers used:
 16548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16558 ;;Total ram usage:        0 bytes
 16559 ;; Hardware stack levels used:    1
 16560 ;; Hardware stack levels required when called:   15
 16561 ;; This function calls:
 16562 ;;		Nothing
 16563 ;; This function is called by:
 16564 ;;		_efgtoa
 16565 ;; This function uses a reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text57
 16569  015448                     __ptext57:
 16570                           	opt callstack 0
 16571  015448                     _floorf:
 16572                           	opt callstack 0
 16573                           
 16574                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16575  015448  0E0A               	movlw	10
 16576  01544A  26E1               	addwf	fsr1l,f,c
 16577  01544C  0E00               	movlw	0
 16578  01544E  22E2               	addwfc	fsr1h,f,c
 16579                           
 16580                           ;incstack = 0
 16581 ;; hardware stack exceeded
 16582  015450  0060  F254  F009   	movff	floorf@F524,btemp+8
 16583  015456  0060  F258  F00A   	movff	floorf@F524+1,btemp+9
 16584  01545C  0060  F25C  F00B   	movff	floorf@F524+2,btemp+10
 16585  015462  0060  F260  F00C   	movff	floorf@F524+3,btemp+11
 16586                           
 16587                           ;stkvar	_u @ sp[(-10)+0]
 16588  015468  0EF6               	movlw	-10
 16589  01546A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16590  015470  0EF7               	movlw	-9
 16591  015472  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16592  015478  0EF8               	movlw	-8
 16593  01547A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16594  015480  0EF9               	movlw	-7
 16595  015482  0060  F033  FFE3   	movff	btemp+11,plusw1
 16596                           
 16597                           ;stkvar	_x @ sp[(-10)+-4]
 16598  015488  0EF2               	movlw	-14
 16599  01548A  006F FF8C  F009    	movff	plusw1,btemp+8
 16600  015490  0EF3               	movlw	-13
 16601  015492  006F FF8C  F00A    	movff	plusw1,btemp+9
 16602  015498  0EF4               	movlw	-12
 16603  01549A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16604  0154A0  0EF5               	movlw	-11
 16605  0154A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 16606                           
 16607                           ;stkvar	_u @ sp[(-10)+0]
 16608  0154A8  0EF6               	movlw	-10
 16609  0154AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 16610  0154B0  0EF7               	movlw	-9
 16611  0154B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16612  0154B8  0EF8               	movlw	-8
 16613  0154BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16614  0154C0  0EF9               	movlw	-7
 16615  0154C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16616  0154C8  0E81               	movlw	129
 16617  0154CA  6E0B               	movwf	(btemp+10)^0,c
 16618  0154CC  0EFF               	movlw	255
 16619  0154CE  6E0C               	movwf	(btemp+11)^0,c
 16620                           
 16621                           ;stkvar	_u @ sp[(-10)+0]
 16622  0154D0  0EF6               	movlw	-10
 16623  0154D2  006F FF8C  F005    	movff	plusw1,btemp+4
 16624  0154D8  0EF7               	movlw	-9
 16625  0154DA  006F FF8C  F006    	movff	plusw1,btemp+5
 16626  0154E0  0EF8               	movlw	-8
 16627  0154E2  006F FF8C  F007    	movff	plusw1,btemp+6
 16628  0154E8  0EF9               	movlw	-7
 16629  0154EA  006F FF8C  F008    	movff	plusw1,btemp+7
 16630  0154F0  0E18               	movlw	24
 16631  0154F2  D005               	goto	u5640
 16632  0154F4                     u5645:
 16633  0154F4  90D8               	bcf	status,0,c
 16634  0154F6  3208               	rrcf	(btemp+7)^0,f,c
 16635  0154F8  3207               	rrcf	(btemp+6)^0,f,c
 16636  0154FA  3206               	rrcf	(btemp+5)^0,f,c
 16637  0154FC  3205               	rrcf	(btemp+4)^0,f,c
 16638  0154FE                     u5640:
 16639  0154FE  2EE8               	decfsz	wreg,f,c
 16640  015500  D7F9               	goto	u5645
 16641  015502  0060  F014  F009   	movff	btemp+4,btemp+8
 16642  015508  0060  F018  F00A   	movff	btemp+5,btemp+9
 16643  01550E  0EFF               	movlw	255
 16644  015510  1609               	andwf	(btemp+8)^0,f,c
 16645  015512  0E00               	movlw	0
 16646  015514  160A               	andwf	(btemp+9)^0,f,c
 16647  015516  500B               	movf	(btemp+10)^0,w,c
 16648  015518  2609               	addwf	(btemp+8)^0,f,c
 16649  01551A  500C               	movf	(btemp+11)^0,w,c
 16650  01551C  220A               	addwfc	(btemp+9)^0,f,c
 16651                           
 16652                           ;stkvar	_e @ sp[(-10)+8]
 16653  01551E  0EFE               	movlw	-2
 16654  015520  0060  F027  FFE3   	movff	btemp+8,plusw1
 16655  015526  0EFF               	movlw	-1
 16656  015528  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16657                           
 16658                           ;stkvar	_e @ sp[(-10)+8]
 16659  01552E  0EFF               	movlw	-1
 16660  015530  BEE3               	btfsc	plusw1,7,c
 16661  015532  D019               	goto	l7397
 16662  015534  0EFF               	movlw	-1
 16663  015536  50E3               	movf	plusw1,w,c
 16664  015538  E108               	bnz	u5650
 16665  01553A  0EFE               	movlw	-2
 16666  01553C  006F FF8C  F001    	movff	plusw1,btemp
 16667  015542  0E17               	movlw	23
 16668  015544  5E01               	subwf	btemp^0,f,c
 16669  015546  A0D8               	btfss	status,0,c
 16670  015548  D00E               	goto	l7397
 16671  01554A                     u5650:
 16672                           
 16673                           ;stkvar	_x @ sp[(-10)+-4]
 16674  01554A  0EF2               	movlw	-14
 16675  01554C  006F FF8C  F001    	movff	plusw1,btemp
 16676  015552  0EF3               	movlw	-13
 16677  015554  006F FF8C  F002    	movff	plusw1,btemp+1
 16678  01555A  0EF4               	movlw	-12
 16679  01555C  006F FF8C  F003    	movff	plusw1,btemp+2
 16680  015562  0EF5               	movlw	-11
 16681  015564  D11F               	goto	L17
 16682  015566                     l7397:
 16683                           
 16684                           ;stkvar	_e @ sp[(-10)+8]
 16685  015566  0EFF               	movlw	-1
 16686  015568  BEE3               	btfsc	plusw1,7,c
 16687  01556A  D0B4               	goto	l7413
 16688                           
 16689                           ;stkvar	_e @ sp[(-10)+8]
 16690  01556C  0EFE               	movlw	-2
 16691  01556E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16692  015574  0EFF               	movlw	255
 16693  015576  6E05               	movwf	(btemp+4)^0,c
 16694  015578  0EFF               	movlw	255
 16695  01557A  6E06               	movwf	(btemp+5)^0,c
 16696  01557C  0E7F               	movlw	127
 16697  01557E  6E07               	movwf	(btemp+6)^0,c
 16698  015580  0E00               	movlw	0
 16699  015582  6E08               	movwf	(btemp+7)^0,c
 16700  015584                     u5675:
 16701  015584  660C               	tstfsz	(btemp+11)^0,c
 16702  015586  D001               	goto	u5676
 16703  015588  D007               	goto	u5677
 16704  01558A                     u5676:
 16705  01558A  3408               	rlcf	(btemp+7)^0,w,c
 16706  01558C  3208               	rrcf	(btemp+7)^0,f,c
 16707  01558E  3207               	rrcf	(btemp+6)^0,f,c
 16708  015590  3206               	rrcf	(btemp+5)^0,f,c
 16709  015592  3205               	rrcf	(btemp+4)^0,f,c
 16710  015594  2E0C               	decfsz	(btemp+11)^0,f,c
 16711  015596  D7F6               	goto	u5675
 16712  015598                     u5677:
 16713                           
 16714                           ;stkvar	_m @ sp[(-10)+4]
 16715  015598  0EFA               	movlw	-6
 16716  01559A  0060  F017  FFE3   	movff	btemp+4,plusw1
 16717  0155A0  0EFB               	movlw	-5
 16718  0155A2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 16719  0155A8  0EFC               	movlw	-4
 16720  0155AA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 16721  0155B0  0EFD               	movlw	-3
 16722  0155B2  0060  F023  FFE3   	movff	btemp+7,plusw1
 16723                           
 16724                           ;stkvar	_m @ sp[(-10)+4]
 16725                           ;stkvar	_u @ sp[(-10)+0]
 16726  0155B8  0EF6               	movlw	-10
 16727  0155BA  006F FF8C  F009    	movff	plusw1,btemp+8
 16728  0155C0  0EF7               	movlw	-9
 16729  0155C2  006F FF8C  F00A    	movff	plusw1,btemp+9
 16730  0155C8  0EF8               	movlw	-8
 16731  0155CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16732  0155D0  0EF9               	movlw	-7
 16733  0155D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 16734  0155D8  0EFA               	movlw	-6
 16735  0155DA  50E3               	movf	plusw1,w,c
 16736  0155DC  1609               	andwf	(btemp+8)^0,f,c
 16737  0155DE  0EFB               	movlw	-5
 16738  0155E0  50E3               	movf	plusw1,w,c
 16739  0155E2  160A               	andwf	(btemp+9)^0,f,c
 16740  0155E4  0EFC               	movlw	-4
 16741  0155E6  50E3               	movf	plusw1,w,c
 16742  0155E8  160B               	andwf	(btemp+10)^0,f,c
 16743  0155EA  0EFD               	movlw	-3
 16744  0155EC  50E3               	movf	plusw1,w,c
 16745  0155EE  160C               	andwf	(btemp+11)^0,f,c
 16746  0155F0  5009               	movf	(btemp+8)^0,w,c
 16747  0155F2  100A               	iorwf	(btemp+9)^0,w,c
 16748  0155F4  100B               	iorwf	(btemp+10)^0,w,c
 16749  0155F6  100C               	iorwf	(btemp+11)^0,w,c
 16750  0155F8  B4D8               	btfsc	status,2,c
 16751  0155FA  D7A7               	goto	u5650
 16752                           
 16753                           ;stkvar	_u @ sp[(-10)+0]
 16754  0155FC  0EF6               	movlw	-10
 16755  0155FE  006F FF8C  F009    	movff	plusw1,btemp+8
 16756  015604  0EF7               	movlw	-9
 16757  015606  006F FF8C  F00A    	movff	plusw1,btemp+9
 16758  01560C  0EF8               	movlw	-8
 16759  01560E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16760  015614  0EF9               	movlw	-7
 16761  015616  006F FF8C  F00C    	movff	plusw1,btemp+11
 16762  01561C  0E20               	movlw	32
 16763  01561E  D005               	goto	u5690
 16764  015620                     u5695:
 16765  015620  90D8               	bcf	status,0,c
 16766  015622  320C               	rrcf	(btemp+11)^0,f,c
 16767  015624  320B               	rrcf	(btemp+10)^0,f,c
 16768  015626  320A               	rrcf	(btemp+9)^0,f,c
 16769  015628  3209               	rrcf	(btemp+8)^0,f,c
 16770  01562A                     u5690:
 16771  01562A  2EE8               	decfsz	wreg,f,c
 16772  01562C  D7F9               	goto	u5695
 16773  01562E  5009               	movf	(btemp+8)^0,w,c
 16774  015630  B4D8               	btfsc	status,2,c
 16775  015632  D028               	goto	l7411
 16776                           
 16777                           ;stkvar	_m @ sp[(-10)+4]
 16778                           ;stkvar	_u @ sp[(-10)+0]
 16779  015634  0EF6               	movlw	-10
 16780  015636  50E3               	movf	plusw1,w,c
 16781  015638  6E01               	movwf	btemp^0,c
 16782  01563A  0EFA               	movlw	-6
 16783  01563C  50E3               	movf	plusw1,w,c
 16784  01563E  2601               	addwf	btemp^0,f,c
 16785  015640  0EF6               	movlw	-10
 16786  015642  0060  F007  FFE3   	movff	btemp,plusw1
 16787  015648  0EF7               	movlw	-9
 16788  01564A  50E3               	movf	plusw1,w,c
 16789  01564C  6E01               	movwf	btemp^0,c
 16790  01564E  0EFB               	movlw	-5
 16791  015650  50E3               	movf	plusw1,w,c
 16792  015652  2201               	addwfc	btemp^0,f,c
 16793  015654  0EF7               	movlw	-9
 16794  015656  0060  F007  FFE3   	movff	btemp,plusw1
 16795  01565C  0EF8               	movlw	-8
 16796  01565E  50E3               	movf	plusw1,w,c
 16797  015660  6E01               	movwf	btemp^0,c
 16798  015662  0EFC               	movlw	-4
 16799  015664  50E3               	movf	plusw1,w,c
 16800  015666  2201               	addwfc	btemp^0,f,c
 16801  015668  0EF8               	movlw	-8
 16802  01566A  0060  F007  FFE3   	movff	btemp,plusw1
 16803  015670  0EF9               	movlw	-7
 16804  015672  50E3               	movf	plusw1,w,c
 16805  015674  6E01               	movwf	btemp^0,c
 16806  015676  0EFD               	movlw	-3
 16807  015678  50E3               	movf	plusw1,w,c
 16808  01567A  2201               	addwfc	btemp^0,f,c
 16809  01567C  0EF9               	movlw	-7
 16810  01567E  0060  F007  FFE3   	movff	btemp,plusw1
 16811  015684                     l7411:
 16812                           
 16813                           ;stkvar	_m @ sp[(-10)+4]
 16814  015684  0EFA               	movlw	-6
 16815  015686  006F FF8C  F009    	movff	plusw1,btemp+8
 16816  01568C  0EFB               	movlw	-5
 16817  01568E  006F FF8C  F00A    	movff	plusw1,btemp+9
 16818  015694  0EFC               	movlw	-4
 16819  015696  006F FF8C  F00B    	movff	plusw1,btemp+10
 16820  01569C  0EFD               	movlw	-3
 16821  01569E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16822  0156A4  1C09               	comf	(btemp+8)^0,w,c
 16823  0156A6  6E05               	movwf	(btemp+4)^0,c
 16824  0156A8  1C0A               	comf	(btemp+9)^0,w,c
 16825  0156AA  6E06               	movwf	(btemp+5)^0,c
 16826  0156AC  1C0B               	comf	(btemp+10)^0,w,c
 16827  0156AE  6E07               	movwf	(btemp+6)^0,c
 16828  0156B0  1C0C               	comf	(btemp+11)^0,w,c
 16829  0156B2  6E08               	movwf	(btemp+7)^0,c
 16830                           
 16831                           ;stkvar	_u @ sp[(-10)+0]
 16832  0156B4  50E1               	movf	fsr1l,w,c
 16833  0156B6  0FF6               	addlw	-10
 16834  0156B8  6ED9               	movwf	fsr2l,c
 16835  0156BA  50E2               	movf	fsr1h,w,c
 16836  0156BC  6EDA               	movwf	fsr2h,c
 16837  0156BE  0EFF               	movlw	255
 16838  0156C0  22DA               	addwfc	fsr2h,f,c
 16839  0156C2  5005               	movf	(btemp+4)^0,w,c
 16840  0156C4  16DE               	andwf	postinc2,f,c
 16841  0156C6  5006               	movf	(btemp+5)^0,w,c
 16842  0156C8  16DE               	andwf	postinc2,f,c
 16843  0156CA  5007               	movf	(btemp+6)^0,w,c
 16844  0156CC  16DE               	andwf	postinc2,f,c
 16845  0156CE  5008               	movf	(btemp+7)^0,w,c
 16846  0156D0  16DE               	andwf	postinc2,f,c
 16847  0156D2  D05B               	goto	l7421
 16848  0156D4                     l7413:
 16849                           
 16850                           ;stkvar	_u @ sp[(-10)+0]
 16851  0156D4  0EF6               	movlw	-10
 16852  0156D6  006F FF8C  F009    	movff	plusw1,btemp+8
 16853  0156DC  0EF7               	movlw	-9
 16854  0156DE  006F FF8C  F00A    	movff	plusw1,btemp+9
 16855  0156E4  0EF8               	movlw	-8
 16856  0156E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 16857  0156EC  0EF9               	movlw	-7
 16858  0156EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 16859  0156F4  0E20               	movlw	32
 16860  0156F6  D005               	goto	u5710
 16861  0156F8                     u5715:
 16862  0156F8  90D8               	bcf	status,0,c
 16863  0156FA  320C               	rrcf	(btemp+11)^0,f,c
 16864  0156FC  320B               	rrcf	(btemp+10)^0,f,c
 16865  0156FE  320A               	rrcf	(btemp+9)^0,f,c
 16866  015700  3209               	rrcf	(btemp+8)^0,f,c
 16867  015702                     u5710:
 16868  015702  2EE8               	decfsz	wreg,f,c
 16869  015704  D7F9               	goto	u5715
 16870  015706  6609               	tstfsz	(btemp+8)^0,c
 16871  015708  D009               	goto	l7417
 16872                           
 16873                           ;stkvar	_u @ sp[(-10)+0]
 16874  01570A  0EF6               	movlw	-10
 16875  01570C  6AE3               	clrf	plusw1,c
 16876  01570E  0EF7               	movlw	-9
 16877  015710  6AE3               	clrf	plusw1,c
 16878  015712  0EF8               	movlw	-8
 16879  015714  6AE3               	clrf	plusw1,c
 16880  015716  0EF9               	movlw	-7
 16881  015718  6AE3               	clrf	plusw1,c
 16882  01571A  D037               	goto	l7421
 16883  01571C                     l7417:
 16884                           
 16885                           ;stkvar	_u @ sp[(-10)+0]
 16886  01571C  0EF6               	movlw	-10
 16887  01571E  006F FF8C  F009    	movff	plusw1,btemp+8
 16888  015724  0EF7               	movlw	-9
 16889  015726  006F FF8C  F00A    	movff	plusw1,btemp+9
 16890  01572C  0EF8               	movlw	-8
 16891  01572E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16892  015734  0EF9               	movlw	-7
 16893  015736  006F FF8C  F00C    	movff	plusw1,btemp+11
 16894  01573C  90D8               	bcf	status,0,c
 16895  01573E  3409               	rlcf	(btemp+8)^0,w,c
 16896  015740  6E05               	movwf	(btemp+4)^0,c
 16897  015742  340A               	rlcf	(btemp+9)^0,w,c
 16898  015744  6E06               	movwf	(btemp+5)^0,c
 16899  015746  340B               	rlcf	(btemp+10)^0,w,c
 16900  015748  6E07               	movwf	(btemp+6)^0,c
 16901  01574A  340C               	rlcf	(btemp+11)^0,w,c
 16902  01574C  6E08               	movwf	(btemp+7)^0,c
 16903  01574E  5005               	movf	(btemp+4)^0,w,c
 16904  015750  1006               	iorwf	(btemp+5)^0,w,c
 16905  015752  1007               	iorwf	(btemp+6)^0,w,c
 16906  015754  1008               	iorwf	(btemp+7)^0,w,c
 16907  015756  B4D8               	btfsc	status,2,c
 16908  015758  D018               	goto	l7421
 16909  01575A  0E00               	movlw	0
 16910  01575C  6E09               	movwf	(btemp+8)^0,c
 16911  01575E  0E00               	movlw	0
 16912  015760  6E0A               	movwf	(btemp+9)^0,c
 16913  015762  0E80               	movlw	128
 16914  015764  6E0B               	movwf	(btemp+10)^0,c
 16915  015766  0EBF               	movlw	191
 16916  015768  6E0C               	movwf	(btemp+11)^0,c
 16917                           
 16918                           ;stkvar	_u @ sp[(-10)+0]
 16919  01576A  0EF6               	movlw	-10
 16920  01576C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16921  015772  0EF7               	movlw	-9
 16922  015774  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16923  01577A  0EF8               	movlw	-8
 16924  01577C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16925  015782  0EF9               	movlw	-7
 16926  015784  0060  F033  FFE3   	movff	btemp+11,plusw1
 16927  01578A                     l7421:
 16928                           
 16929                           ;stkvar	_u @ sp[(-10)+0]
 16930  01578A  0EF6               	movlw	-10
 16931  01578C  006F FF8C  F001    	movff	plusw1,btemp
 16932  015792  0EF7               	movlw	-9
 16933  015794  006F FF8C  F002    	movff	plusw1,btemp+1
 16934  01579A  0EF8               	movlw	-8
 16935  01579C  006F FF8C  F003    	movff	plusw1,btemp+2
 16936  0157A2  0EF9               	movlw	-7
 16937  0157A4                     L17:
 16938  0157A4  006F FF8C  F004    	movff	plusw1,btemp+3
 16939                           
 16940                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16941  0157AA  0EF2               	movlw	242
 16942  0157AC  26E1               	addwf	fsr1l,f,c
 16943  0157AE  0EFF               	movlw	255
 16944  0157B0  22E2               	addwfc	fsr1h,f,c
 16945  0157B2  0012               	return		;funcret
 16946  0157B4                     __end_of_floorf:
 16947                           	opt callstack 0
 16948                           
 16949 ;; *************** function ___fpclassifyf *****************
 16950 ;; Defined at:
 16951 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 16952 ;; Parameters:    Size  Location     Type
 16953 ;;  x               4  [STACK] float 
 16954 ;; Auto vars:     Size  Location     Type
 16955 ;;  u               4  [STACK] struct .
 16956 ;;  e               2  [STACK] int 
 16957 ;; Return value:  Size  Location     Type
 16958 ;;                  2  [STACK] int 
 16959 ;; Registers used:
 16960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 16961 ;; Tracked objects:
 16962 ;;		On entry : 0/0
 16963 ;;		On exit  : 0/0
 16964 ;;		Unchanged: 0/0
 16965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16970 ;;Total ram usage:        0 bytes
 16971 ;; Hardware stack levels used:    1
 16972 ;; Hardware stack levels required when called:   15
 16973 ;; This function calls:
 16974 ;;		Nothing
 16975 ;; This function is called by:
 16976 ;;		_efgtoa
 16977 ;; This function uses a reentrant model
 16978 ;;
 16979                           
 16980                           	psect	text58
 16981  01749E                     __ptext58:
 16982                           	opt callstack 0
 16983  01749E                     ___fpclassifyf:
 16984                           	opt callstack 0
 16985                           
 16986                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16987  01749E  0E06               	movlw	6
 16988  0174A0  26E1               	addwf	fsr1l,f,c
 16989  0174A2  0E00               	movlw	0
 16990  0174A4  22E2               	addwfc	fsr1h,f,c
 16991                           
 16992                           ;incstack = 0
 16993 ;; hardware stack exceeded
 16994  0174A6  0060  F264  F009   	movff	___fpclassifyf@F463,btemp+8
 16995  0174AC  0060  F268  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 16996  0174B2  0060  F26C  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 16997  0174B8  0060  F270  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 16998                           
 16999                           ;stkvar	_u @ sp[(-6)+0]
 17000  0174BE  0EFA               	movlw	-6
 17001  0174C0  0060  F027  FFE3   	movff	btemp+8,plusw1
 17002  0174C6  0EFB               	movlw	-5
 17003  0174C8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17004  0174CE  0EFC               	movlw	-4
 17005  0174D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17006  0174D6  0EFD               	movlw	-3
 17007  0174D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17008                           
 17009                           ;stkvar	_x @ sp[(-6)+-4]
 17010  0174DE  0EF6               	movlw	-10
 17011  0174E0  006F FF8C  F009    	movff	plusw1,btemp+8
 17012  0174E6  0EF7               	movlw	-9
 17013  0174E8  006F FF8C  F00A    	movff	plusw1,btemp+9
 17014  0174EE  0EF8               	movlw	-8
 17015  0174F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17016  0174F6  0EF9               	movlw	-7
 17017  0174F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17018                           
 17019                           ;stkvar	_u @ sp[(-6)+0]
 17020  0174FE  0EFA               	movlw	-6
 17021  017500  0060  F027  FFE3   	movff	btemp+8,plusw1
 17022  017506  0EFB               	movlw	-5
 17023  017508  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17024  01750E  0EFC               	movlw	-4
 17025  017510  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17026  017516  0EFD               	movlw	-3
 17027  017518  0060  F033  FFE3   	movff	btemp+11,plusw1
 17028                           
 17029                           ;stkvar	_u @ sp[(-6)+0]
 17030  01751E  0EFA               	movlw	-6
 17031  017520  006F FF8C  F009    	movff	plusw1,btemp+8
 17032  017526  0EFB               	movlw	-5
 17033  017528  006F FF8C  F00A    	movff	plusw1,btemp+9
 17034  01752E  0EFC               	movlw	-4
 17035  017530  006F FF8C  F00B    	movff	plusw1,btemp+10
 17036  017536  0EFD               	movlw	-3
 17037  017538  006F FF8C  F00C    	movff	plusw1,btemp+11
 17038  01753E  0E18               	movlw	24
 17039  017540  D005               	goto	u5520
 17040  017542                     u5525:
 17041  017542  90D8               	bcf	status,0,c
 17042  017544  320C               	rrcf	(btemp+11)^0,f,c
 17043  017546  320B               	rrcf	(btemp+10)^0,f,c
 17044  017548  320A               	rrcf	(btemp+9)^0,f,c
 17045  01754A  3209               	rrcf	(btemp+8)^0,f,c
 17046  01754C                     u5520:
 17047  01754C  2EE8               	decfsz	wreg,f,c
 17048  01754E  D7F9               	goto	u5525
 17049  017550  0060  F024  F007   	movff	btemp+8,btemp+6
 17050  017556  0060  F028  F008   	movff	btemp+9,btemp+7
 17051  01755C  0EFF               	movlw	255
 17052  01755E  1607               	andwf	(btemp+6)^0,f,c
 17053  017560  0E00               	movlw	0
 17054  017562  1608               	andwf	(btemp+7)^0,f,c
 17055                           
 17056                           ;stkvar	_e @ sp[(-6)+4]
 17057  017564  0EFE               	movlw	-2
 17058  017566  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17059  01756C  0EFF               	movlw	-1
 17060  01756E  0060  F023  FFE3   	movff	btemp+7,plusw1
 17061                           
 17062                           ;stkvar	_e @ sp[(-6)+4]
 17063  017574  0EFE               	movlw	-2
 17064  017576  006F FF8C  F001    	movff	plusw1,btemp
 17065  01757C  0EFF               	movlw	-1
 17066  01757E  50E3               	movf	plusw1,w,c
 17067  017580  1001               	iorwf	btemp^0,w,c
 17068  017582  A4D8               	btfss	status,2,c
 17069  017584  D023               	goto	l7359
 17070                           
 17071                           ;stkvar	_u @ sp[(-6)+0]
 17072  017586  0EFA               	movlw	-6
 17073  017588  006F FF8C  F009    	movff	plusw1,btemp+8
 17074  01758E  0EFB               	movlw	-5
 17075  017590  006F FF8C  F00A    	movff	plusw1,btemp+9
 17076  017596  0EFC               	movlw	-4
 17077  017598  006F FF8C  F00B    	movff	plusw1,btemp+10
 17078  01759E  0EFD               	movlw	-3
 17079  0175A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17080  0175A6  90D8               	bcf	status,0,c
 17081  0175A8  3409               	rlcf	(btemp+8)^0,w,c
 17082  0175AA  6E05               	movwf	(btemp+4)^0,c
 17083  0175AC  340A               	rlcf	(btemp+9)^0,w,c
 17084  0175AE  6E06               	movwf	(btemp+5)^0,c
 17085  0175B0  340B               	rlcf	(btemp+10)^0,w,c
 17086  0175B2  6E07               	movwf	(btemp+6)^0,c
 17087  0175B4  340C               	rlcf	(btemp+11)^0,w,c
 17088  0175B6  6E08               	movwf	(btemp+7)^0,c
 17089  0175B8  5005               	movf	(btemp+4)^0,w,c
 17090  0175BA  1006               	iorwf	(btemp+5)^0,w,c
 17091  0175BC  1007               	iorwf	(btemp+6)^0,w,c
 17092  0175BE  1008               	iorwf	(btemp+7)^0,w,c
 17093  0175C0  A4D8               	btfss	status,2,c
 17094  0175C2  D002               	goto	l7355
 17095  0175C4  0E02               	movlw	2
 17096  0175C6  D02E               	goto	L18
 17097  0175C8                     l7355:
 17098  0175C8  0E03               	movlw	3
 17099  0175CA  D02C               	goto	L18
 17100  0175CC                     l7359:
 17101                           
 17102                           ;stkvar	_e @ sp[(-6)+4]
 17103  0175CC  0EFE               	movlw	-2
 17104  0175CE  28E3               	incf	plusw1,w,c
 17105  0175D0  E128               	bnz	l7365
 17106  0175D2  0EFF               	movlw	-1
 17107  0175D4  50E3               	movf	plusw1,w,c
 17108  0175D6  A4D8               	btfss	status,2,c
 17109  0175D8  D024               	goto	l7365
 17110                           
 17111                           ;stkvar	_u @ sp[(-6)+0]
 17112  0175DA  0EFA               	movlw	-6
 17113  0175DC  006F FF8C  F009    	movff	plusw1,btemp+8
 17114  0175E2  0EFB               	movlw	-5
 17115  0175E4  006F FF8C  F00A    	movff	plusw1,btemp+9
 17116  0175EA  0EFC               	movlw	-4
 17117  0175EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17118  0175F2  0EFD               	movlw	-3
 17119  0175F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17120  0175FA  0E09               	movlw	9
 17121  0175FC                     u5565:
 17122  0175FC  90D8               	bcf	status,0,c
 17123  0175FE  3609               	rlcf	(btemp+8)^0,f,c
 17124  017600  360A               	rlcf	(btemp+9)^0,f,c
 17125  017602  360B               	rlcf	(btemp+10)^0,f,c
 17126  017604  360C               	rlcf	(btemp+11)^0,f,c
 17127  017606  2EE8               	decfsz	wreg,f,c
 17128  017608  D7F9               	goto	u5565
 17129  01760A  5009               	movf	(btemp+8)^0,w,c
 17130  01760C  100A               	iorwf	(btemp+9)^0,w,c
 17131  01760E  100B               	iorwf	(btemp+10)^0,w,c
 17132  017610  100C               	iorwf	(btemp+11)^0,w,c
 17133  017612  A4D8               	btfss	status,2,c
 17134  017614  D002               	goto	u5570
 17135  017616  0E01               	movlw	1
 17136  017618  D001               	goto	u5580
 17137  01761A                     u5570:
 17138  01761A  0E00               	movlw	0
 17139  01761C                     u5580:
 17140  01761C  6E01               	movwf	btemp^0,c
 17141  01761E  6A02               	clrf	(btemp+1)^0,c
 17142  017620  D004               	goto	l2939
 17143  017622                     l7365:
 17144  017622  0E04               	movlw	4
 17145  017624                     L18:
 17146  017624  6E01               	movwf	btemp^0,c
 17147  017626  0E00               	movlw	0
 17148  017628  6E02               	movwf	(btemp+1)^0,c
 17149  01762A                     l2939:
 17150                           
 17151                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 17152  01762A  0EF6               	movlw	246
 17153  01762C  26E1               	addwf	fsr1l,f,c
 17154  01762E  0EFF               	movlw	255
 17155  017630  22E2               	addwfc	fsr1h,f,c
 17156  017632  0012               	return		;funcret
 17157  017634                     __end_of___fpclassifyf:
 17158                           	opt callstack 0
 17159                           
 17160 ;; *************** function ___fltol *****************
 17161 ;; Defined at:
 17162 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 17163 ;; Parameters:    Size  Location     Type
 17164 ;;  f1              4  [STACK] int 
 17165 ;; Auto vars:     Size  Location     Type
 17166 ;;  exp1            1  [STACK] unsigned char 
 17167 ;;  sign1           1  [STACK] unsigned char 
 17168 ;; Return value:  Size  Location     Type
 17169 ;;                  4  [STACK] long 
 17170 ;; Registers used:
 17171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17172 ;; Tracked objects:
 17173 ;;		On entry : 0/1
 17174 ;;		On exit  : 0/0
 17175 ;;		Unchanged: 0/0
 17176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17181 ;;Total ram usage:        0 bytes
 17182 ;; Hardware stack levels used:    1
 17183 ;; Hardware stack levels required when called:   15
 17184 ;; This function calls:
 17185 ;;		Nothing
 17186 ;; This function is called by:
 17187 ;;		_calc_bsoc
 17188 ;;		_init_bsoc
 17189 ;;		_efgtoa
 17190 ;; This function uses a reentrant model
 17191 ;;
 17192                           
 17193                           	psect	text59
 17194  0177B4                     __ptext59:
 17195                           	opt callstack 0
 17196  0177B4                     ___fltol:
 17197                           	opt callstack 0
 17198                           
 17199                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17200  0177B4  52E6               	movf	postinc1,f,c
 17201  0177B6  52E6               	movf	postinc1,f,c
 17202                           
 17203                           ;stkvar	_f1 @ sp[(-2)+-4]
 17204                           
 17205                           ;incstack = 0
 17206 ;; hardware stack exceeded
 17207  0177B8  0EFA               	movlw	-6
 17208  0177BA  006F FF8C  F009    	movff	plusw1,btemp+8
 17209  0177C0  0EFB               	movlw	-5
 17210  0177C2  006F FF8C  F00A    	movff	plusw1,btemp+9
 17211  0177C8  0EFC               	movlw	-4
 17212  0177CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17213  0177D0  0EFD               	movlw	-3
 17214  0177D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17215  0177D8  0E18               	movlw	24
 17216  0177DA  D005               	goto	u6730
 17217  0177DC                     u6735:
 17218  0177DC  90D8               	bcf	status,0,c
 17219  0177DE  320C               	rrcf	(btemp+11)^0,f,c
 17220  0177E0  320B               	rrcf	(btemp+10)^0,f,c
 17221  0177E2  320A               	rrcf	(btemp+9)^0,f,c
 17222  0177E4  3209               	rrcf	(btemp+8)^0,f,c
 17223  0177E6                     u6730:
 17224  0177E6  2EE8               	decfsz	wreg,f,c
 17225  0177E8  D7F9               	goto	u6735
 17226                           
 17227                           ;stkvar	_exp1 @ sp[(-2)+0]
 17228  0177EA  0EFE               	movlw	-2
 17229  0177EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 17230  0177F2  0EFE               	movlw	-2
 17231  0177F4  50E3               	movf	plusw1,w,c
 17232  0177F6  A4D8               	btfss	status,2,c
 17233  0177F8  D006               	goto	l7985
 17234  0177FA                     u6740:
 17235  0177FA  0E00               	movlw	0
 17236  0177FC  6E01               	movwf	btemp^0,c
 17237  0177FE  6A02               	clrf	(btemp+1)^0,c
 17238  017800  6A03               	clrf	(btemp+2)^0,c
 17239  017802  6A04               	clrf	(btemp+3)^0,c
 17240  017804  D08B               	goto	l2555
 17241  017806                     l7985:
 17242                           
 17243                           ;stkvar	_f1 @ sp[(-2)+-4]
 17244  017806  0EFA               	movlw	-6
 17245  017808  006F FF8C  F009    	movff	plusw1,btemp+8
 17246  01780E  0EFB               	movlw	-5
 17247  017810  006F FF8C  F00A    	movff	plusw1,btemp+9
 17248  017816  0EFC               	movlw	-4
 17249  017818  006F FF8C  F00B    	movff	plusw1,btemp+10
 17250  01781E  0EFD               	movlw	-3
 17251  017820  006F FF8C  F00C    	movff	plusw1,btemp+11
 17252  017826  0E20               	movlw	32
 17253  017828  D005               	goto	u6750
 17254  01782A                     u6755:
 17255  01782A  90D8               	bcf	status,0,c
 17256  01782C  320C               	rrcf	(btemp+11)^0,f,c
 17257  01782E  320B               	rrcf	(btemp+10)^0,f,c
 17258  017830  320A               	rrcf	(btemp+9)^0,f,c
 17259  017832  3209               	rrcf	(btemp+8)^0,f,c
 17260  017834                     u6750:
 17261  017834  2EE8               	decfsz	wreg,f,c
 17262  017836  D7F9               	goto	u6755
 17263                           
 17264                           ;stkvar	_sign1 @ sp[(-2)+1]
 17265  017838  0EFF               	movlw	-1
 17266  01783A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17267                           
 17268                           ;stkvar	_f1 @ sp[(-2)+-4]
 17269  017840  0EFC               	movlw	-4
 17270  017842  8EE3               	bsf	plusw1,7,c
 17271                           
 17272                           ;stkvar	_f1 @ sp[(-2)+-4]
 17273  017844  50E1               	movf	fsr1l,w,c
 17274  017846  0FFA               	addlw	-6
 17275  017848  6ED9               	movwf	fsr2l,c
 17276  01784A  50E2               	movf	fsr1h,w,c
 17277  01784C  6EDA               	movwf	fsr2h,c
 17278  01784E  0EFF               	movlw	255
 17279  017850  22DA               	addwfc	fsr2h,f,c
 17280  017852  0EFF               	movlw	255
 17281  017854  16DE               	andwf	postinc2,f,c
 17282  017856  0EFF               	movlw	255
 17283  017858  16DE               	andwf	postinc2,f,c
 17284  01785A  0EFF               	movlw	255
 17285  01785C  16DE               	andwf	postinc2,f,c
 17286  01785E  0E00               	movlw	0
 17287  017860  16DE               	andwf	postinc2,f,c
 17288                           
 17289                           ;stkvar	_exp1 @ sp[(-2)+0]
 17290  017862  0EFE               	movlw	-2
 17291  017864  006F FF8C  F001    	movff	plusw1,btemp
 17292  01786A  0E96               	movlw	150
 17293  01786C  5E01               	subwf	btemp^0,f,c
 17294  01786E  0EFE               	movlw	-2
 17295  017870  0060  F007  FFE3   	movff	btemp,plusw1
 17296                           
 17297                           ;stkvar	_exp1 @ sp[(-2)+0]
 17298  017876  0EFE               	movlw	-2
 17299  017878  AEE3               	btfss	plusw1,7,c
 17300  01787A  D014               	goto	l8003
 17301                           
 17302                           ;stkvar	_exp1 @ sp[(-2)+0]
 17303  01787C  0EFE               	movlw	-2
 17304  01787E  50E3               	movf	plusw1,w,c
 17305  017880  0A80               	xorlw	128
 17306  017882  0F97               	addlw	151
 17307  017884  A0D8               	btfss	status,0,c
 17308  017886  D7B9               	goto	u6740
 17309  017888                     l8001:
 17310                           
 17311                           ;stkvar	_f1 @ sp[(-2)+-4]
 17312  017888  90D8               	bcf	status,0,c
 17313  01788A  0EFD               	movlw	-3
 17314  01788C  32E3               	rrcf	plusw1,f,c
 17315  01788E  0EFC               	movlw	-4
 17316  017890  32E3               	rrcf	plusw1,f,c
 17317  017892  0EFB               	movlw	-5
 17318  017894  32E3               	rrcf	plusw1,f,c
 17319  017896  0EFA               	movlw	-6
 17320  017898  32E3               	rrcf	plusw1,f,c
 17321                           
 17322                           ;stkvar	_exp1 @ sp[(-2)+0]
 17323  01789A  0EFE               	movlw	-2
 17324  01789C  2AE3               	incf	plusw1,f,c
 17325  01789E  B4D8               	btfsc	status,2,c
 17326  0178A0  D018               	goto	u6800
 17327  0178A2  D7F2               	goto	l8001
 17328  0178A4                     l8003:
 17329                           
 17330                           ;stkvar	_exp1 @ sp[(-2)+0]
 17331  0178A4  0EFE               	movlw	-2
 17332  0178A6  006F FF8C  F001    	movff	plusw1,btemp
 17333  0178AC  0E1F               	movlw	31
 17334  0178AE  6401               	cpfsgt	btemp^0,c
 17335  0178B0  D00C               	goto	l8011
 17336  0178B2  D7A3               	goto	u6740
 17337  0178B4                     l8009:
 17338                           
 17339                           ;stkvar	_f1 @ sp[(-2)+-4]
 17340  0178B4  90D8               	bcf	status,0,c
 17341  0178B6  0EFA               	movlw	-6
 17342  0178B8  36E3               	rlcf	plusw1,f,c
 17343  0178BA  0EFB               	movlw	-5
 17344  0178BC  36E3               	rlcf	plusw1,f,c
 17345  0178BE  0EFC               	movlw	-4
 17346  0178C0  36E3               	rlcf	plusw1,f,c
 17347  0178C2  0EFD               	movlw	-3
 17348  0178C4  36E3               	rlcf	plusw1,f,c
 17349                           
 17350                           ;stkvar	_exp1 @ sp[(-2)+0]
 17351  0178C6  0EFE               	movlw	-2
 17352  0178C8  06E3               	decf	plusw1,f,c
 17353  0178CA                     l8011:
 17354                           
 17355                           ;stkvar	_exp1 @ sp[(-2)+0]
 17356  0178CA  0EFE               	movlw	-2
 17357  0178CC  50E3               	movf	plusw1,w,c
 17358  0178CE  A4D8               	btfss	status,2,c
 17359  0178D0  D7F1               	goto	l8009
 17360  0178D2                     u6800:
 17361                           
 17362                           ;stkvar	_sign1 @ sp[(-2)+1]
 17363  0178D2  0EFF               	movlw	-1
 17364  0178D4  50E3               	movf	plusw1,w,c
 17365  0178D6  B4D8               	btfsc	status,2,c
 17366  0178D8  D011               	goto	u6820
 17367                           
 17368                           ;stkvar	_f1 @ sp[(-2)+-4]
 17369                           ;stkvar	_f1 @ sp[(-2)+-4]
 17370  0178DA  0EFA               	movlw	-6
 17371  0178DC  6CE3               	negf	plusw1,c
 17372  0178DE  0EFB               	movlw	-5
 17373  0178E0  1EE3               	comf	plusw1,f,c
 17374  0178E2  0EFC               	movlw	-4
 17375  0178E4  1EE3               	comf	plusw1,f,c
 17376  0178E6  0EFD               	movlw	-3
 17377  0178E8  1EE3               	comf	plusw1,f,c
 17378  0178EA  E308               	bnc	u6820
 17379  0178EC  0EFB               	movlw	-5
 17380  0178EE  2AE3               	incf	plusw1,f,c
 17381  0178F0  E305               	bnc	u6820
 17382  0178F2  0EFC               	movlw	-4
 17383  0178F4  2AE3               	incf	plusw1,f,c
 17384  0178F6  E302               	bnc	u6820
 17385  0178F8  0EFD               	movlw	-3
 17386  0178FA  2AE3               	incf	plusw1,f,c
 17387  0178FC                     u6820:
 17388                           
 17389                           ;stkvar	_f1 @ sp[(-2)+-4]
 17390  0178FC  0EFA               	movlw	-6
 17391  0178FE  006F FF8C  F001    	movff	plusw1,btemp
 17392  017904  0EFB               	movlw	-5
 17393  017906  006F FF8C  F002    	movff	plusw1,btemp+1
 17394  01790C  0EFC               	movlw	-4
 17395  01790E  006F FF8C  F003    	movff	plusw1,btemp+2
 17396  017914  0EFD               	movlw	-3
 17397  017916  006F FF8C  F004    	movff	plusw1,btemp+3
 17398  01791C                     l2555:
 17399                           
 17400                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17401  01791C  0EFA               	movlw	250
 17402  01791E  26E1               	addwf	fsr1l,f,c
 17403  017920  0EFF               	movlw	255
 17404  017922  22E2               	addwfc	fsr1h,f,c
 17405  017924  0012               	return		;funcret
 17406  017926                     __end_of___fltol:
 17407                           	opt callstack 0
 17408                           
 17409 ;; *************** function ___flneg *****************
 17410 ;; Defined at:
 17411 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 17412 ;; Parameters:    Size  Location     Type
 17413 ;;  f1              4  [STACK] long 
 17414 ;; Auto vars:     Size  Location     Type
 17415 ;;		None
 17416 ;; Return value:  Size  Location     Type
 17417 ;;                  4  [STACK] long 
 17418 ;; Registers used:
 17419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 17420 ;; Tracked objects:
 17421 ;;		On entry : 0/0
 17422 ;;		On exit  : 0/0
 17423 ;;		Unchanged: 0/0
 17424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17429 ;;Total ram usage:        0 bytes
 17430 ;; Hardware stack levels used:    1
 17431 ;; Hardware stack levels required when called:   15
 17432 ;; This function calls:
 17433 ;;		Nothing
 17434 ;; This function is called by:
 17435 ;;		_calc_bsoc
 17436 ;;		_efgtoa
 17437 ;; This function uses a reentrant model
 17438 ;;
 17439                           
 17440                           	psect	text60
 17441  019BE0                     __ptext60:
 17442                           	opt callstack 0
 17443  019BE0                     ___flneg:
 17444                           	opt callstack 0
 17445                           
 17446                           ;stkvar	_f1 @ sp[(0)+-4]
 17447                           
 17448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17449                           ;incstack = 0
 17450 ;; hardware stack exceeded
 17451  019BE0  0EFC               	movlw	-4
 17452  019BE2  50E3               	movf	plusw1,w,c
 17453  019BE4  E10A               	bnz	u6720
 17454  019BE6  0EFD               	movlw	-3
 17455  019BE8  50E3               	movf	plusw1,w,c
 17456  019BEA  E107               	bnz	u6720
 17457  019BEC  0EFE               	movlw	-2
 17458  019BEE  50E3               	movf	plusw1,w,c
 17459  019BF0  E104               	bnz	u6720
 17460  019BF2  0EFF               	movlw	-1
 17461  019BF4  50E3               	movf	plusw1,w,c
 17462  019BF6  B4D8               	btfsc	status,2,c
 17463  019BF8  D002               	goto	l7975
 17464  019BFA                     u6720:
 17465                           
 17466                           ;stkvar	_f1 @ sp[(0)+-4]
 17467  019BFA  0EFF               	movlw	-1
 17468  019BFC  7EE3               	btg	plusw1,7,c
 17469  019BFE                     l7975:
 17470                           
 17471                           ;stkvar	_f1 @ sp[(0)+-4]
 17472  019BFE  0EFC               	movlw	-4
 17473  019C00  006F FF8C  F001    	movff	plusw1,btemp
 17474  019C06  0EFD               	movlw	-3
 17475  019C08  006F FF8C  F002    	movff	plusw1,btemp+1
 17476  019C0E  0EFE               	movlw	-2
 17477  019C10  006F FF8C  F003    	movff	plusw1,btemp+2
 17478  019C16  0EFF               	movlw	-1
 17479  019C18  006F FF8C  F004    	movff	plusw1,btemp+3
 17480                           
 17481                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17482  019C1E  52E5               	movf	postdec1,f,c
 17483  019C20  52E5               	movf	postdec1,f,c
 17484  019C22  52E5               	movf	postdec1,f,c
 17485  019C24  52E5               	movf	postdec1,f,c
 17486  019C26  0012               	return		;funcret
 17487  019C28                     __end_of___flneg:
 17488                           	opt callstack 0
 17489                           
 17490 ;; *************** function ___flge *****************
 17491 ;; Defined at:
 17492 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17493 ;; Parameters:    Size  Location     Type
 17494 ;;  ff1             4  [STACK] long 
 17495 ;;  ff2             4  [STACK] long 
 17496 ;; Auto vars:     Size  Location     Type
 17497 ;;		None
 17498 ;; Return value:  Size  Location     Type
 17499 ;;		None               void
 17500 ;; Registers used:
 17501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17502 ;; Tracked objects:
 17503 ;;		On entry : 0/0
 17504 ;;		On exit  : 0/0
 17505 ;;		Unchanged: 0/0
 17506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17511 ;;Total ram usage:        0 bytes
 17512 ;; Hardware stack levels used:    1
 17513 ;; Hardware stack levels required when called:   15
 17514 ;; This function calls:
 17515 ;;		Nothing
 17516 ;; This function is called by:
 17517 ;;		_calc_bsoc
 17518 ;;		_efgtoa
 17519 ;; This function uses a reentrant model
 17520 ;;
 17521                           
 17522                           	psect	text61
 17523  017A96                     __ptext61:
 17524                           	opt callstack 0
 17525  017A96                     ___flge:
 17526                           	opt callstack 0
 17527                           
 17528                           ;stkvar	_ff1 @ sp[(0)+-4]
 17529                           
 17530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17531                           ;incstack = 0
 17532 ;; hardware stack exceeded
 17533  017A96  50E1               	movf	fsr1l,w,c
 17534  017A98  0FFC               	addlw	-4
 17535  017A9A  6ED9               	movwf	fsr2l,c
 17536  017A9C  50E2               	movf	fsr1h,w,c
 17537  017A9E  6EDA               	movwf	fsr2h,c
 17538  017AA0  0EFF               	movlw	255
 17539  017AA2  22DA               	addwfc	fsr2h,f,c
 17540  017AA4  0E00               	movlw	0
 17541  017AA6  14DE               	andwf	postinc2,w,c
 17542  017AA8  6E09               	movwf	(btemp+8)^0,c
 17543  017AAA  0E00               	movlw	0
 17544  017AAC  14DE               	andwf	postinc2,w,c
 17545  017AAE  6E0A               	movwf	(btemp+9)^0,c
 17546  017AB0  0E80               	movlw	128
 17547  017AB2  14DE               	andwf	postinc2,w,c
 17548  017AB4  6E0B               	movwf	(btemp+10)^0,c
 17549  017AB6  0E7F               	movlw	127
 17550  017AB8  14DE               	andwf	postinc2,w,c
 17551  017ABA  6E0C               	movwf	(btemp+11)^0,c
 17552  017ABC  5009               	movf	(btemp+8)^0,w,c
 17553  017ABE  100A               	iorwf	(btemp+9)^0,w,c
 17554  017AC0  100B               	iorwf	(btemp+10)^0,w,c
 17555  017AC2  100C               	iorwf	(btemp+11)^0,w,c
 17556  017AC4  A4D8               	btfss	status,2,c
 17557  017AC6  D008               	goto	l7949
 17558                           
 17559                           ;stkvar	_ff1 @ sp[(0)+-4]
 17560  017AC8  0EFC               	movlw	-4
 17561  017ACA  6AE3               	clrf	plusw1,c
 17562  017ACC  0EFD               	movlw	-3
 17563  017ACE  6AE3               	clrf	plusw1,c
 17564  017AD0  0EFE               	movlw	-2
 17565  017AD2  6AE3               	clrf	plusw1,c
 17566  017AD4  0EFF               	movlw	-1
 17567  017AD6  6AE3               	clrf	plusw1,c
 17568  017AD8                     l7949:
 17569                           
 17570                           ;stkvar	_ff2 @ sp[(0)+-8]
 17571  017AD8  50E1               	movf	fsr1l,w,c
 17572  017ADA  0FF8               	addlw	-8
 17573  017ADC  6ED9               	movwf	fsr2l,c
 17574  017ADE  50E2               	movf	fsr1h,w,c
 17575  017AE0  6EDA               	movwf	fsr2h,c
 17576  017AE2  0EFF               	movlw	255
 17577  017AE4  22DA               	addwfc	fsr2h,f,c
 17578  017AE6  0E00               	movlw	0
 17579  017AE8  14DE               	andwf	postinc2,w,c
 17580  017AEA  6E09               	movwf	(btemp+8)^0,c
 17581  017AEC  0E00               	movlw	0
 17582  017AEE  14DE               	andwf	postinc2,w,c
 17583  017AF0  6E0A               	movwf	(btemp+9)^0,c
 17584  017AF2  0E80               	movlw	128
 17585  017AF4  14DE               	andwf	postinc2,w,c
 17586  017AF6  6E0B               	movwf	(btemp+10)^0,c
 17587  017AF8  0E7F               	movlw	127
 17588  017AFA  14DE               	andwf	postinc2,w,c
 17589  017AFC  6E0C               	movwf	(btemp+11)^0,c
 17590  017AFE  5009               	movf	(btemp+8)^0,w,c
 17591  017B00  100A               	iorwf	(btemp+9)^0,w,c
 17592  017B02  100B               	iorwf	(btemp+10)^0,w,c
 17593  017B04  100C               	iorwf	(btemp+11)^0,w,c
 17594  017B06  A4D8               	btfss	status,2,c
 17595  017B08  D008               	goto	l2521
 17596                           
 17597                           ;stkvar	_ff2 @ sp[(0)+-8]
 17598  017B0A  0EF8               	movlw	-8
 17599  017B0C  6AE3               	clrf	plusw1,c
 17600  017B0E  0EF9               	movlw	-7
 17601  017B10  6AE3               	clrf	plusw1,c
 17602  017B12  0EFA               	movlw	-6
 17603  017B14  6AE3               	clrf	plusw1,c
 17604  017B16  0EFB               	movlw	-5
 17605  017B18  6AE3               	clrf	plusw1,c
 17606  017B1A                     l2521:
 17607                           
 17608                           ;stkvar	_ff1 @ sp[(0)+-4]
 17609  017B1A  0EFF               	movlw	-1
 17610  017B1C  AEE3               	btfss	plusw1,7,c
 17611  017B1E  D024               	goto	l7955
 17612                           
 17613                           ;stkvar	_ff1 @ sp[(0)+-4]
 17614  017B20  0E00               	movlw	0
 17615  017B22  6E09               	movwf	(btemp+8)^0,c
 17616  017B24  0E00               	movlw	0
 17617  017B26  6E0A               	movwf	(btemp+9)^0,c
 17618  017B28  0E00               	movlw	0
 17619  017B2A  6E0B               	movwf	(btemp+10)^0,c
 17620  017B2C  0E80               	movlw	128
 17621  017B2E  6E0C               	movwf	(btemp+11)^0,c
 17622  017B30  0EFC               	movlw	-4
 17623  017B32  50E3               	movf	plusw1,w,c
 17624  017B34  5E09               	subwf	(btemp+8)^0,f,c
 17625  017B36  0EFD               	movlw	-3
 17626  017B38  50E3               	movf	plusw1,w,c
 17627  017B3A  5A0A               	subwfb	(btemp+9)^0,f,c
 17628  017B3C  0EFE               	movlw	-2
 17629  017B3E  50E3               	movf	plusw1,w,c
 17630  017B40  5A0B               	subwfb	(btemp+10)^0,f,c
 17631  017B42  0EFF               	movlw	-1
 17632  017B44  50E3               	movf	plusw1,w,c
 17633  017B46  5A0C               	subwfb	(btemp+11)^0,f,c
 17634                           
 17635                           ;stkvar	_ff1 @ sp[(0)+-4]
 17636  017B48  0EFC               	movlw	-4
 17637  017B4A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17638  017B50  0EFD               	movlw	-3
 17639  017B52  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17640  017B58  0EFE               	movlw	-2
 17641  017B5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17642  017B60  0EFF               	movlw	-1
 17643  017B62  0060  F033  FFE3   	movff	btemp+11,plusw1
 17644  017B68                     l7955:
 17645                           
 17646                           ;stkvar	_ff2 @ sp[(0)+-8]
 17647  017B68  0EFB               	movlw	-5
 17648  017B6A  AEE3               	btfss	plusw1,7,c
 17649  017B6C  D024               	goto	l7959
 17650                           
 17651                           ;stkvar	_ff2 @ sp[(0)+-8]
 17652  017B6E  0E00               	movlw	0
 17653  017B70  6E09               	movwf	(btemp+8)^0,c
 17654  017B72  0E00               	movlw	0
 17655  017B74  6E0A               	movwf	(btemp+9)^0,c
 17656  017B76  0E00               	movlw	0
 17657  017B78  6E0B               	movwf	(btemp+10)^0,c
 17658  017B7A  0E80               	movlw	128
 17659  017B7C  6E0C               	movwf	(btemp+11)^0,c
 17660  017B7E  0EF8               	movlw	-8
 17661  017B80  50E3               	movf	plusw1,w,c
 17662  017B82  5E09               	subwf	(btemp+8)^0,f,c
 17663  017B84  0EF9               	movlw	-7
 17664  017B86  50E3               	movf	plusw1,w,c
 17665  017B88  5A0A               	subwfb	(btemp+9)^0,f,c
 17666  017B8A  0EFA               	movlw	-6
 17667  017B8C  50E3               	movf	plusw1,w,c
 17668  017B8E  5A0B               	subwfb	(btemp+10)^0,f,c
 17669  017B90  0EFB               	movlw	-5
 17670  017B92  50E3               	movf	plusw1,w,c
 17671  017B94  5A0C               	subwfb	(btemp+11)^0,f,c
 17672                           
 17673                           ;stkvar	_ff2 @ sp[(0)+-8]
 17674  017B96  0EF8               	movlw	-8
 17675  017B98  0060  F027  FFE3   	movff	btemp+8,plusw1
 17676  017B9E  0EF9               	movlw	-7
 17677  017BA0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17678  017BA6  0EFA               	movlw	-6
 17679  017BA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17680  017BAE  0EFB               	movlw	-5
 17681  017BB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 17682  017BB6                     l7959:
 17683                           
 17684                           ;stkvar	_ff1 @ sp[(0)+-4]
 17685  017BB6  0EFF               	movlw	-1
 17686  017BB8  7EE3               	btg	plusw1,7,c
 17687                           
 17688                           ;stkvar	_ff2 @ sp[(0)+-8]
 17689  017BBA  0EFB               	movlw	-5
 17690  017BBC  7EE3               	btg	plusw1,7,c
 17691                           
 17692                           ;stkvar	_ff2 @ sp[(0)+-8]
 17693                           ;stkvar	_ff1 @ sp[(0)+-4]
 17694  017BBE  50E1               	movf	fsr1l,w,c
 17695  017BC0  0FFC               	addlw	-4
 17696  017BC2  6ED9               	movwf	fsr2l,c
 17697  017BC4  50E2               	movf	fsr1h,w,c
 17698  017BC6  6EDA               	movwf	fsr2h,c
 17699  017BC8  0EFF               	movlw	255
 17700  017BCA  22DA               	addwfc	fsr2h,f,c
 17701  017BCC  0EF8               	movlw	-8
 17702  017BCE  50E3               	movf	plusw1,w,c
 17703  017BD0  5CDE               	subwf	postinc2,w,c
 17704  017BD2  0EF9               	movlw	-7
 17705  017BD4  50E3               	movf	plusw1,w,c
 17706  017BD6  58DE               	subwfb	postinc2,w,c
 17707  017BD8  0EFA               	movlw	-6
 17708  017BDA  50E3               	movf	plusw1,w,c
 17709  017BDC  58DE               	subwfb	postinc2,w,c
 17710  017BDE  0EFB               	movlw	-5
 17711  017BE0  50E3               	movf	plusw1,w,c
 17712  017BE2  58DE               	subwfb	postinc2,w,c
 17713  017BE4  B0D8               	btfsc	status,0,c
 17714  017BE6  D002               	goto	l7967
 17715  017BE8  9001               	bcf	btemp& (0+255),0,c
 17716  017BEA  D001               	goto	l2528
 17717  017BEC                     l7967:
 17718  017BEC  8001               	bsf	btemp& (0+255),0,c
 17719  017BEE                     l2528:
 17720                           
 17721                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17722  017BEE  0EF8               	movlw	248
 17723  017BF0  26E1               	addwf	fsr1l,f,c
 17724  017BF2  0EFF               	movlw	255
 17725  017BF4  22E2               	addwfc	fsr1h,f,c
 17726  017BF6  0012               	return		;funcret
 17727  017BF8                     __end_of___flge:
 17728                           	opt callstack 0
 17729                           
 17730 ;; *************** function ___fleq *****************
 17731 ;; Defined at:
 17732 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17733 ;; Parameters:    Size  Location     Type
 17734 ;;  ff1             4  [STACK] long 
 17735 ;;  ff2             4  [STACK] long 
 17736 ;; Auto vars:     Size  Location     Type
 17737 ;;		None
 17738 ;; Return value:  Size  Location     Type
 17739 ;;		None               void
 17740 ;; Registers used:
 17741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17742 ;; Tracked objects:
 17743 ;;		On entry : 0/0
 17744 ;;		On exit  : 0/0
 17745 ;;		Unchanged: 0/0
 17746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17751 ;;Total ram usage:        0 bytes
 17752 ;; Hardware stack levels used:    1
 17753 ;; Hardware stack levels required when called:   15
 17754 ;; This function calls:
 17755 ;;		Nothing
 17756 ;; This function is called by:
 17757 ;;		_efgtoa
 17758 ;; This function uses a reentrant model
 17759 ;;
 17760                           
 17761                           	psect	text62
 17762  018C50                     __ptext62:
 17763                           	opt callstack 0
 17764  018C50                     ___fleq:
 17765                           	opt callstack 0
 17766                           
 17767                           ;stkvar	_ff1 @ sp[(0)+-4]
 17768                           
 17769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17770                           ;incstack = 0
 17771 ;; hardware stack exceeded
 17772  018C50  50E1               	movf	fsr1l,w,c
 17773  018C52  0FFC               	addlw	-4
 17774  018C54  6ED9               	movwf	fsr2l,c
 17775  018C56  50E2               	movf	fsr1h,w,c
 17776  018C58  6EDA               	movwf	fsr2h,c
 17777  018C5A  0EFF               	movlw	255
 17778  018C5C  22DA               	addwfc	fsr2h,f,c
 17779  018C5E  0E00               	movlw	0
 17780  018C60  14DE               	andwf	postinc2,w,c
 17781  018C62  6E09               	movwf	(btemp+8)^0,c
 17782  018C64  0E00               	movlw	0
 17783  018C66  14DE               	andwf	postinc2,w,c
 17784  018C68  6E0A               	movwf	(btemp+9)^0,c
 17785  018C6A  0E80               	movlw	128
 17786  018C6C  14DE               	andwf	postinc2,w,c
 17787  018C6E  6E0B               	movwf	(btemp+10)^0,c
 17788  018C70  0E7F               	movlw	127
 17789  018C72  14DE               	andwf	postinc2,w,c
 17790  018C74  6E0C               	movwf	(btemp+11)^0,c
 17791  018C76  5009               	movf	(btemp+8)^0,w,c
 17792  018C78  100A               	iorwf	(btemp+9)^0,w,c
 17793  018C7A  100B               	iorwf	(btemp+10)^0,w,c
 17794  018C7C  100C               	iorwf	(btemp+11)^0,w,c
 17795  018C7E  A4D8               	btfss	status,2,c
 17796  018C80  D008               	goto	l7933
 17797                           
 17798                           ;stkvar	_ff1 @ sp[(0)+-4]
 17799  018C82  0EFC               	movlw	-4
 17800  018C84  6AE3               	clrf	plusw1,c
 17801  018C86  0EFD               	movlw	-3
 17802  018C88  6AE3               	clrf	plusw1,c
 17803  018C8A  0EFE               	movlw	-2
 17804  018C8C  6AE3               	clrf	plusw1,c
 17805  018C8E  0EFF               	movlw	-1
 17806  018C90  6AE3               	clrf	plusw1,c
 17807  018C92                     l7933:
 17808                           
 17809                           ;stkvar	_ff2 @ sp[(0)+-8]
 17810  018C92  50E1               	movf	fsr1l,w,c
 17811  018C94  0FF8               	addlw	-8
 17812  018C96  6ED9               	movwf	fsr2l,c
 17813  018C98  50E2               	movf	fsr1h,w,c
 17814  018C9A  6EDA               	movwf	fsr2h,c
 17815  018C9C  0EFF               	movlw	255
 17816  018C9E  22DA               	addwfc	fsr2h,f,c
 17817  018CA0  0E00               	movlw	0
 17818  018CA2  14DE               	andwf	postinc2,w,c
 17819  018CA4  6E09               	movwf	(btemp+8)^0,c
 17820  018CA6  0E00               	movlw	0
 17821  018CA8  14DE               	andwf	postinc2,w,c
 17822  018CAA  6E0A               	movwf	(btemp+9)^0,c
 17823  018CAC  0E80               	movlw	128
 17824  018CAE  14DE               	andwf	postinc2,w,c
 17825  018CB0  6E0B               	movwf	(btemp+10)^0,c
 17826  018CB2  0E7F               	movlw	127
 17827  018CB4  14DE               	andwf	postinc2,w,c
 17828  018CB6  6E0C               	movwf	(btemp+11)^0,c
 17829  018CB8  5009               	movf	(btemp+8)^0,w,c
 17830  018CBA  100A               	iorwf	(btemp+9)^0,w,c
 17831  018CBC  100B               	iorwf	(btemp+10)^0,w,c
 17832  018CBE  100C               	iorwf	(btemp+11)^0,w,c
 17833  018CC0  A4D8               	btfss	status,2,c
 17834  018CC2  D008               	goto	l7937
 17835                           
 17836                           ;stkvar	_ff2 @ sp[(0)+-8]
 17837  018CC4  0EF8               	movlw	-8
 17838  018CC6  6AE3               	clrf	plusw1,c
 17839  018CC8  0EF9               	movlw	-7
 17840  018CCA  6AE3               	clrf	plusw1,c
 17841  018CCC  0EFA               	movlw	-6
 17842  018CCE  6AE3               	clrf	plusw1,c
 17843  018CD0  0EFB               	movlw	-5
 17844  018CD2  6AE3               	clrf	plusw1,c
 17845  018CD4                     l7937:
 17846                           
 17847                           ;stkvar	_ff2 @ sp[(0)+-8]
 17848                           ;stkvar	_ff1 @ sp[(0)+-4]
 17849  018CD4  50E1               	movf	fsr1l,w,c
 17850  018CD6  0FFC               	addlw	-4
 17851  018CD8  6ED9               	movwf	fsr2l,c
 17852  018CDA  50E2               	movf	fsr1h,w,c
 17853  018CDC  6EDA               	movwf	fsr2h,c
 17854  018CDE  0EFF               	movlw	255
 17855  018CE0  22DA               	addwfc	fsr2h,f,c
 17856  018CE2  0EF8               	movlw	-8
 17857  018CE4  50E3               	movf	plusw1,w,c
 17858  018CE6  18DE               	xorwf	postinc2,w,c
 17859  018CE8  E10D               	bnz	u6660
 17860  018CEA  0EF9               	movlw	-7
 17861  018CEC  50E3               	movf	plusw1,w,c
 17862  018CEE  18DE               	xorwf	postinc2,w,c
 17863  018CF0  E109               	bnz	u6660
 17864  018CF2  0EFA               	movlw	-6
 17865  018CF4  50E3               	movf	plusw1,w,c
 17866  018CF6  18DE               	xorwf	postinc2,w,c
 17867  018CF8  E105               	bnz	u6660
 17868  018CFA  0EFB               	movlw	-5
 17869  018CFC  50E3               	movf	plusw1,w,c
 17870  018CFE  18DE               	xorwf	postinc2,w,c
 17871  018D00  B4D8               	btfsc	status,2,c
 17872  018D02  D002               	goto	l7941
 17873  018D04                     u6660:
 17874  018D04  9001               	bcf	btemp& (0+255),0,c
 17875  018D06  D001               	goto	l2517
 17876  018D08                     l7941:
 17877  018D08  8001               	bsf	btemp& (0+255),0,c
 17878  018D0A                     l2517:
 17879                           
 17880                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17881  018D0A  0EF8               	movlw	248
 17882  018D0C  26E1               	addwf	fsr1l,f,c
 17883  018D0E  0EFF               	movlw	255
 17884  018D10  22E2               	addwfc	fsr1h,f,c
 17885  018D12  0012               	return		;funcret
 17886  018D14                     __end_of___fleq:
 17887                           	opt callstack 0
 17888                           
 17889 ;; *************** function ___fldiv *****************
 17890 ;; Defined at:
 17891 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 17892 ;; Parameters:    Size  Location     Type
 17893 ;;  b               4  [STACK] long 
 17894 ;;  a               4  [STACK] long 
 17895 ;; Auto vars:     Size  Location     Type
 17896 ;;  grs             4  [STACK] unsigned long 
 17897 ;;  rem             4  [STACK] unsigned long 
 17898 ;;  new_exp         2  [STACK] short 
 17899 ;;  aexp            1  [STACK] unsigned char 
 17900 ;;  bexp            1  [STACK] unsigned char 
 17901 ;;  sign            1  [STACK] unsigned char 
 17902 ;; Return value:  Size  Location     Type
 17903 ;;                  4  [STACK] unsigned char 
 17904 ;; Registers used:
 17905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17906 ;; Tracked objects:
 17907 ;;		On entry : 0/1
 17908 ;;		On exit  : 0/0
 17909 ;;		Unchanged: 0/0
 17910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17915 ;;Total ram usage:        0 bytes
 17916 ;; Hardware stack levels used:    1
 17917 ;; Hardware stack levels required when called:   15
 17918 ;; This function calls:
 17919 ;;		Nothing
 17920 ;; This function is called by:
 17921 ;;		_conv_raw_result
 17922 ;;		_calc_bsoc
 17923 ;;		_init_bsoc
 17924 ;;		_efgtoa
 17925 ;; This function uses a reentrant model
 17926 ;;
 17927                           
 17928                           	psect	text63
 17929  0141E8                     __ptext63:
 17930                           	opt callstack 0
 17931  0141E8                     ___fldiv:
 17932                           	opt callstack 0
 17933                           
 17934                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17935  0141E8  0E0D               	movlw	13
 17936  0141EA  26E1               	addwf	fsr1l,f,c
 17937  0141EC  0E00               	movlw	0
 17938  0141EE  22E2               	addwfc	fsr1h,f,c
 17939                           
 17940                           ;stkvar	_b @ sp[(-13)+-4]
 17941                           
 17942                           ;incstack = 0
 17943 ;; hardware stack exceeded
 17944  0141F0  0EF2               	movlw	242
 17945  0141F2  24E1               	addwf	fsr1l,w,c
 17946  0141F4  6ED9               	movwf	fsr2l,c
 17947  0141F6  0EFF               	movlw	255
 17948  0141F8  20E2               	addwfc	fsr1h,w,c
 17949  0141FA  6EDA               	movwf	fsr2h,c
 17950  0141FC  50DF               	movf	indf2,w,c
 17951  0141FE  6E0C               	movwf	(btemp+11)^0,c
 17952  014200  0E80               	movlw	128
 17953  014202  160C               	andwf	(btemp+11)^0,f,c
 17954                           
 17955                           ;stkvar	_sign @ sp[(-13)+12]
 17956  014204  0EFF               	movlw	-1
 17957  014206  0060  F033  FFE3   	movff	btemp+11,plusw1
 17958                           
 17959                           ;stkvar	_b @ sp[(-13)+-4]
 17960  01420C  0EF2               	movlw	242
 17961  01420E  24E1               	addwf	fsr1l,w,c
 17962  014210  6ED9               	movwf	fsr2l,c
 17963  014212  0EFF               	movlw	255
 17964  014214  20E2               	addwfc	fsr1h,w,c
 17965  014216  6EDA               	movwf	fsr2h,c
 17966  014218  50DF               	movf	indf2,w,c
 17967  01421A  6E0C               	movwf	(btemp+11)^0,c
 17968  01421C  90D8               	bcf	status,0,c
 17969  01421E  340C               	rlcf	(btemp+11)^0,w,c
 17970  014220  6E0B               	movwf	(btemp+10)^0,c
 17971                           
 17972                           ;stkvar	_bexp @ sp[(-13)+11]
 17973  014222  0EFE               	movlw	-2
 17974  014224  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17975                           
 17976                           ;stkvar	_b @ sp[(-13)+-4]
 17977  01422A  0EF1               	movlw	241
 17978  01422C  24E1               	addwf	fsr1l,w,c
 17979  01422E  6ED9               	movwf	fsr2l,c
 17980  014230  0EFF               	movlw	255
 17981  014232  20E2               	addwfc	fsr1h,w,c
 17982  014234  6EDA               	movwf	fsr2h,c
 17983  014236  AEDF               	btfss	indf2,7,c
 17984  014238  D002               	goto	l7535
 17985                           
 17986                           ;stkvar	_bexp @ sp[(-13)+11]
 17987  01423A  0EFE               	movlw	-2
 17988  01423C  80E3               	bsf	plusw1,0,c
 17989  01423E                     l7535:
 17990                           
 17991                           ;stkvar	_bexp @ sp[(-13)+11]
 17992  01423E  0EFE               	movlw	-2
 17993  014240  50E3               	movf	plusw1,w,c
 17994  014242  B4D8               	btfsc	status,2,c
 17995  014244  D027               	goto	l7545
 17996                           
 17997                           ;stkvar	_bexp @ sp[(-13)+11]
 17998  014246  0EFE               	movlw	-2
 17999  014248  28E3               	incf	plusw1,w,c
 18000  01424A  A4D8               	btfss	status,2,c
 18001  01424C  D018               	goto	l7541
 18002  01424E  0E00               	movlw	0
 18003  014250  6E09               	movwf	(btemp+8)^0,c
 18004  014252  0E00               	movlw	0
 18005  014254  6E0A               	movwf	(btemp+9)^0,c
 18006  014256  0E00               	movlw	0
 18007  014258  6E0B               	movwf	(btemp+10)^0,c
 18008  01425A  0E00               	movlw	0
 18009  01425C  6E0C               	movwf	(btemp+11)^0,c
 18010                           
 18011                           ;stkvar	_b @ sp[(-13)+-4]
 18012  01425E  0EEF               	movlw	-17
 18013  014260  0060  F027  FFE3   	movff	btemp+8,plusw1
 18014  014266  0EF0               	movlw	-16
 18015  014268  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18016  01426E  0EF1               	movlw	-15
 18017  014270  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18018  014276  0EF2               	movlw	-14
 18019  014278  0060  F033  FFE3   	movff	btemp+11,plusw1
 18020  01427E                     l7541:
 18021                           
 18022                           ;stkvar	_b @ sp[(-13)+-4]
 18023  01427E  0EF1               	movlw	-15
 18024  014280  8EE3               	bsf	plusw1,7,c
 18025                           
 18026                           ;stkvar	_b @ sp[(-13)+-4]
 18027  014282  0EF2               	movlw	242
 18028  014284  24E1               	addwf	fsr1l,w,c
 18029  014286  6ED9               	movwf	fsr2l,c
 18030  014288  0EFF               	movlw	255
 18031  01428A  20E2               	addwfc	fsr1h,w,c
 18032  01428C  6EDA               	movwf	fsr2h,c
 18033  01428E  0E00               	movlw	0
 18034  014290  6EDF               	movwf	indf2,c
 18035  014292  D018               	goto	l7547
 18036  014294                     l7545:
 18037  014294  0E00               	movlw	0
 18038  014296  6E09               	movwf	(btemp+8)^0,c
 18039  014298  0E00               	movlw	0
 18040  01429A  6E0A               	movwf	(btemp+9)^0,c
 18041  01429C  0E00               	movlw	0
 18042  01429E  6E0B               	movwf	(btemp+10)^0,c
 18043  0142A0  0E00               	movlw	0
 18044  0142A2  6E0C               	movwf	(btemp+11)^0,c
 18045                           
 18046                           ;stkvar	_b @ sp[(-13)+-4]
 18047  0142A4  0EEF               	movlw	-17
 18048  0142A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 18049  0142AC  0EF0               	movlw	-16
 18050  0142AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18051  0142B4  0EF1               	movlw	-15
 18052  0142B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18053  0142BC  0EF2               	movlw	-14
 18054  0142BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18055  0142C4                     l7547:
 18056                           
 18057                           ;stkvar	_a @ sp[(-13)+-8]
 18058  0142C4  0EEE               	movlw	238
 18059  0142C6  24E1               	addwf	fsr1l,w,c
 18060  0142C8  6ED9               	movwf	fsr2l,c
 18061  0142CA  0EFF               	movlw	255
 18062  0142CC  20E2               	addwfc	fsr1h,w,c
 18063  0142CE  6EDA               	movwf	fsr2h,c
 18064  0142D0  50DF               	movf	indf2,w,c
 18065  0142D2  6E0C               	movwf	(btemp+11)^0,c
 18066  0142D4  0E80               	movlw	128
 18067  0142D6  160C               	andwf	(btemp+11)^0,f,c
 18068                           
 18069                           ;stkvar	_sign @ sp[(-13)+12]
 18070  0142D8  50E1               	movf	fsr1l,w,c
 18071  0142DA  0FFF               	addlw	-1
 18072  0142DC  6ED9               	movwf	fsr2l,c
 18073  0142DE  50E2               	movf	fsr1h,w,c
 18074  0142E0  6EDA               	movwf	fsr2h,c
 18075  0142E2  0EFF               	movlw	255
 18076  0142E4  22DA               	addwfc	fsr2h,f,c
 18077  0142E6  500C               	movf	(btemp+11)^0,w,c
 18078  0142E8  1ADF               	xorwf	indf2,f,c
 18079                           
 18080                           ;stkvar	_a @ sp[(-13)+-8]
 18081  0142EA  0EEE               	movlw	238
 18082  0142EC  24E1               	addwf	fsr1l,w,c
 18083  0142EE  6ED9               	movwf	fsr2l,c
 18084  0142F0  0EFF               	movlw	255
 18085  0142F2  20E2               	addwfc	fsr1h,w,c
 18086  0142F4  6EDA               	movwf	fsr2h,c
 18087  0142F6  50DF               	movf	indf2,w,c
 18088  0142F8  6E0C               	movwf	(btemp+11)^0,c
 18089  0142FA  90D8               	bcf	status,0,c
 18090  0142FC  340C               	rlcf	(btemp+11)^0,w,c
 18091  0142FE  6E0B               	movwf	(btemp+10)^0,c
 18092                           
 18093                           ;stkvar	_aexp @ sp[(-13)+10]
 18094  014300  0EFD               	movlw	-3
 18095  014302  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18096                           
 18097                           ;stkvar	_a @ sp[(-13)+-8]
 18098  014308  0EED               	movlw	237
 18099  01430A  24E1               	addwf	fsr1l,w,c
 18100  01430C  6ED9               	movwf	fsr2l,c
 18101  01430E  0EFF               	movlw	255
 18102  014310  20E2               	addwfc	fsr1h,w,c
 18103  014312  6EDA               	movwf	fsr2h,c
 18104  014314  AEDF               	btfss	indf2,7,c
 18105  014316  D002               	goto	l7555
 18106                           
 18107                           ;stkvar	_aexp @ sp[(-13)+10]
 18108  014318  0EFD               	movlw	-3
 18109  01431A  80E3               	bsf	plusw1,0,c
 18110  01431C                     l7555:
 18111                           
 18112                           ;stkvar	_aexp @ sp[(-13)+10]
 18113  01431C  0EFD               	movlw	-3
 18114  01431E  50E3               	movf	plusw1,w,c
 18115  014320  B4D8               	btfsc	status,2,c
 18116  014322  D027               	goto	l7565
 18117                           
 18118                           ;stkvar	_aexp @ sp[(-13)+10]
 18119  014324  0EFD               	movlw	-3
 18120  014326  28E3               	incf	plusw1,w,c
 18121  014328  A4D8               	btfss	status,2,c
 18122  01432A  D018               	goto	l7561
 18123  01432C  0E00               	movlw	0
 18124  01432E  6E09               	movwf	(btemp+8)^0,c
 18125  014330  0E00               	movlw	0
 18126  014332  6E0A               	movwf	(btemp+9)^0,c
 18127  014334  0E00               	movlw	0
 18128  014336  6E0B               	movwf	(btemp+10)^0,c
 18129  014338  0E00               	movlw	0
 18130  01433A  6E0C               	movwf	(btemp+11)^0,c
 18131                           
 18132                           ;stkvar	_a @ sp[(-13)+-8]
 18133  01433C  0EEB               	movlw	-21
 18134  01433E  0060  F027  FFE3   	movff	btemp+8,plusw1
 18135  014344  0EEC               	movlw	-20
 18136  014346  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18137  01434C  0EED               	movlw	-19
 18138  01434E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18139  014354  0EEE               	movlw	-18
 18140  014356  0060  F033  FFE3   	movff	btemp+11,plusw1
 18141  01435C                     l7561:
 18142                           
 18143                           ;stkvar	_a @ sp[(-13)+-8]
 18144  01435C  0EED               	movlw	-19
 18145  01435E  8EE3               	bsf	plusw1,7,c
 18146                           
 18147                           ;stkvar	_a @ sp[(-13)+-8]
 18148  014360  0EEE               	movlw	238
 18149  014362  24E1               	addwf	fsr1l,w,c
 18150  014364  6ED9               	movwf	fsr2l,c
 18151  014366  0EFF               	movlw	255
 18152  014368  20E2               	addwfc	fsr1h,w,c
 18153  01436A  6EDA               	movwf	fsr2h,c
 18154  01436C  0E00               	movlw	0
 18155  01436E  6EDF               	movwf	indf2,c
 18156  014370  D018               	goto	l7567
 18157  014372                     l7565:
 18158  014372  0E00               	movlw	0
 18159  014374  6E09               	movwf	(btemp+8)^0,c
 18160  014376  0E00               	movlw	0
 18161  014378  6E0A               	movwf	(btemp+9)^0,c
 18162  01437A  0E00               	movlw	0
 18163  01437C  6E0B               	movwf	(btemp+10)^0,c
 18164  01437E  0E00               	movlw	0
 18165  014380  6E0C               	movwf	(btemp+11)^0,c
 18166                           
 18167                           ;stkvar	_a @ sp[(-13)+-8]
 18168  014382  0EEB               	movlw	-21
 18169  014384  0060  F027  FFE3   	movff	btemp+8,plusw1
 18170  01438A  0EEC               	movlw	-20
 18171  01438C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18172  014392  0EED               	movlw	-19
 18173  014394  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18174  01439A  0EEE               	movlw	-18
 18175  01439C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18176  0143A2                     l7567:
 18177                           
 18178                           ;stkvar	_a @ sp[(-13)+-8]
 18179  0143A2  0EEB               	movlw	-21
 18180  0143A4  50E3               	movf	plusw1,w,c
 18181  0143A6  E139               	bnz	l7579
 18182  0143A8  0EEC               	movlw	-20
 18183  0143AA  50E3               	movf	plusw1,w,c
 18184  0143AC  E136               	bnz	l7579
 18185  0143AE  0EED               	movlw	-19
 18186  0143B0  50E3               	movf	plusw1,w,c
 18187  0143B2  E133               	bnz	l7579
 18188  0143B4  0EEE               	movlw	-18
 18189  0143B6  50E3               	movf	plusw1,w,c
 18190  0143B8  A4D8               	btfss	status,2,c
 18191  0143BA  D02F               	goto	l7579
 18192                           
 18193                           ;stkvar	_b @ sp[(-13)+-4]
 18194  0143BC  0EEF               	movlw	-17
 18195  0143BE  6AE3               	clrf	plusw1,c
 18196  0143C0  0EF0               	movlw	-16
 18197  0143C2  6AE3               	clrf	plusw1,c
 18198  0143C4  0EF1               	movlw	-15
 18199  0143C6  6AE3               	clrf	plusw1,c
 18200  0143C8  0EF2               	movlw	-14
 18201  0143CA  6AE3               	clrf	plusw1,c
 18202                           
 18203                           ;stkvar	_b @ sp[(-13)+-4]
 18204  0143CC  0EF1               	movlw	241
 18205  0143CE  24E1               	addwf	fsr1l,w,c
 18206  0143D0  6ED9               	movwf	fsr2l,c
 18207  0143D2  0EFF               	movlw	255
 18208  0143D4  20E2               	addwfc	fsr1h,w,c
 18209  0143D6  6EDA               	movwf	fsr2h,c
 18210  0143D8  0E80               	movlw	128
 18211  0143DA  12DE               	iorwf	postinc2,f,c
 18212  0143DC  0E7F               	movlw	127
 18213  0143DE  12DD               	iorwf	postdec2,f,c
 18214  0143E0                     l7573:
 18215                           
 18216                           ;stkvar	_sign @ sp[(-13)+12]
 18217  0143E0  0EFF               	movlw	-1
 18218  0143E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18219                           
 18220                           ;stkvar	_b @ sp[(-13)+-4]
 18221  0143E8  0EF2               	movlw	242
 18222  0143EA  24E1               	addwf	fsr1l,w,c
 18223  0143EC  6ED9               	movwf	fsr2l,c
 18224  0143EE  0EFF               	movlw	255
 18225  0143F0  20E2               	addwfc	fsr1h,w,c
 18226  0143F2  6EDA               	movwf	fsr2h,c
 18227  0143F4  500C               	movf	(btemp+11)^0,w,c
 18228  0143F6  12DF               	iorwf	indf2,f,c
 18229                           
 18230                           ;stkvar	_b @ sp[(-13)+-4]
 18231  0143F8  0EEF               	movlw	-17
 18232  0143FA  006F FF8C  F001    	movff	plusw1,btemp
 18233  014400  0EF0               	movlw	-16
 18234  014402  006F FF8C  F002    	movff	plusw1,btemp+1
 18235  014408  0EF1               	movlw	-15
 18236  01440A  006F FF8C  F003    	movff	plusw1,btemp+2
 18237  014410  0EF2               	movlw	-14
 18238  014412  006F FF8C  F004    	movff	plusw1,btemp+3
 18239  014418  D19F               	goto	l2840
 18240  01441A                     l7579:
 18241                           
 18242                           ;stkvar	_bexp @ sp[(-13)+11]
 18243  01441A  0EFE               	movlw	-2
 18244  01441C  50E3               	movf	plusw1,w,c
 18245  01441E  A4D8               	btfss	status,2,c
 18246  014420  D009               	goto	l7587
 18247  014422  0E00               	movlw	0
 18248  014424  6E01               	movwf	btemp^0,c
 18249  014426  0E00               	movlw	0
 18250  014428  6E02               	movwf	(btemp+1)^0,c
 18251  01442A  0E00               	movlw	0
 18252  01442C  6E03               	movwf	(btemp+2)^0,c
 18253  01442E  0E00               	movlw	0
 18254  014430  6E04               	movwf	(btemp+3)^0,c
 18255  014432  D192               	goto	l2840
 18256  014434                     l7587:
 18257                           
 18258                           ;stkvar	_bexp @ sp[(-13)+11]
 18259  014434  0EFE               	movlw	-2
 18260  014436  50E3               	movf	plusw1,w,c
 18261  014438  6E0B               	movwf	(btemp+10)^0,c
 18262  01443A  6A0C               	clrf	(btemp+11)^0,c
 18263                           
 18264                           ;stkvar	_aexp @ sp[(-13)+10]
 18265  01443C  0EFD               	movlw	-3
 18266  01443E  50E3               	movf	plusw1,w,c
 18267  014440  5E0B               	subwf	(btemp+10)^0,f,c
 18268  014442  0E00               	movlw	0
 18269  014444  5A0C               	subwfb	(btemp+11)^0,f,c
 18270  014446  0E7F               	movlw	127
 18271  014448  260B               	addwf	(btemp+10)^0,f,c
 18272  01444A  0E00               	movlw	0
 18273  01444C  220C               	addwfc	(btemp+11)^0,f,c
 18274                           
 18275                           ;stkvar	_new_exp @ sp[(-13)+8]
 18276  01444E  0EFB               	movlw	-5
 18277  014450  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18278  014456  0EFC               	movlw	-4
 18279  014458  0060  F033  FFE3   	movff	btemp+11,plusw1
 18280                           
 18281                           ;stkvar	_b @ sp[(-13)+-4]
 18282  01445E  0EEF               	movlw	-17
 18283  014460  006F FF8C  F009    	movff	plusw1,btemp+8
 18284  014466  0EF0               	movlw	-16
 18285  014468  006F FF8C  F00A    	movff	plusw1,btemp+9
 18286  01446E  0EF1               	movlw	-15
 18287  014470  006F FF8C  F00B    	movff	plusw1,btemp+10
 18288  014476  0EF2               	movlw	-14
 18289  014478  006F FF8C  F00C    	movff	plusw1,btemp+11
 18290                           
 18291                           ;stkvar	_rem @ sp[(-13)+4]
 18292  01447E  0EF7               	movlw	-9
 18293  014480  0060  F027  FFE3   	movff	btemp+8,plusw1
 18294  014486  0EF8               	movlw	-8
 18295  014488  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18296  01448E  0EF9               	movlw	-7
 18297  014490  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18298  014496  0EFA               	movlw	-6
 18299  014498  0060  F033  FFE3   	movff	btemp+11,plusw1
 18300                           
 18301                           ;stkvar	_b @ sp[(-13)+-4]
 18302  01449E  0EEF               	movlw	-17
 18303  0144A0  6AE3               	clrf	plusw1,c
 18304  0144A2  0EF0               	movlw	-16
 18305  0144A4  6AE3               	clrf	plusw1,c
 18306  0144A6  0EF1               	movlw	-15
 18307  0144A8  6AE3               	clrf	plusw1,c
 18308  0144AA  0EF2               	movlw	-14
 18309  0144AC  6AE3               	clrf	plusw1,c
 18310                           
 18311                           ;stkvar	_grs @ sp[(-13)+0]
 18312  0144AE  0EF3               	movlw	-13
 18313  0144B0  6AE3               	clrf	plusw1,c
 18314  0144B2  0EF4               	movlw	-12
 18315  0144B4  6AE3               	clrf	plusw1,c
 18316  0144B6  0EF5               	movlw	-11
 18317  0144B8  6AE3               	clrf	plusw1,c
 18318  0144BA  0EF6               	movlw	-10
 18319  0144BC  6AE3               	clrf	plusw1,c
 18320                           
 18321                           ;stkvar	_aexp @ sp[(-13)+10]
 18322  0144BE  0EFD               	movlw	-3
 18323  0144C0  6AE3               	clrf	plusw1,c
 18324  0144C2  D050               	goto	l7615
 18325  0144C4                     l7597:
 18326                           
 18327                           ;stkvar	_aexp @ sp[(-13)+10]
 18328  0144C4  0EFD               	movlw	-3
 18329  0144C6  50E3               	movf	plusw1,w,c
 18330  0144C8  B4D8               	btfsc	status,2,c
 18331  0144CA  D020               	goto	l7607
 18332                           
 18333                           ;stkvar	_rem @ sp[(-13)+4]
 18334  0144CC  90D8               	bcf	status,0,c
 18335  0144CE  0EF7               	movlw	-9
 18336  0144D0  36E3               	rlcf	plusw1,f,c
 18337  0144D2  0EF8               	movlw	-8
 18338  0144D4  36E3               	rlcf	plusw1,f,c
 18339  0144D6  0EF9               	movlw	-7
 18340  0144D8  36E3               	rlcf	plusw1,f,c
 18341  0144DA  0EFA               	movlw	-6
 18342  0144DC  36E3               	rlcf	plusw1,f,c
 18343                           
 18344                           ;stkvar	_b @ sp[(-13)+-4]
 18345  0144DE  90D8               	bcf	status,0,c
 18346  0144E0  0EEF               	movlw	-17
 18347  0144E2  36E3               	rlcf	plusw1,f,c
 18348  0144E4  0EF0               	movlw	-16
 18349  0144E6  36E3               	rlcf	plusw1,f,c
 18350  0144E8  0EF1               	movlw	-15
 18351  0144EA  36E3               	rlcf	plusw1,f,c
 18352  0144EC  0EF2               	movlw	-14
 18353  0144EE  36E3               	rlcf	plusw1,f,c
 18354                           
 18355                           ;stkvar	_grs @ sp[(-13)+0]
 18356  0144F0  0EF6               	movlw	-10
 18357  0144F2  AEE3               	btfss	plusw1,7,c
 18358  0144F4  D002               	goto	l7605
 18359                           
 18360                           ;stkvar	_b @ sp[(-13)+-4]
 18361  0144F6  0EEF               	movlw	-17
 18362  0144F8  80E3               	bsf	plusw1,0,c
 18363  0144FA                     l7605:
 18364                           
 18365                           ;stkvar	_grs @ sp[(-13)+0]
 18366  0144FA  90D8               	bcf	status,0,c
 18367  0144FC  0EF3               	movlw	-13
 18368  0144FE  36E3               	rlcf	plusw1,f,c
 18369  014500  0EF4               	movlw	-12
 18370  014502  36E3               	rlcf	plusw1,f,c
 18371  014504  0EF5               	movlw	-11
 18372  014506  36E3               	rlcf	plusw1,f,c
 18373  014508  0EF6               	movlw	-10
 18374  01450A  36E3               	rlcf	plusw1,f,c
 18375  01450C                     l7607:
 18376                           
 18377                           ;stkvar	_a @ sp[(-13)+-8]
 18378                           ;stkvar	_rem @ sp[(-13)+4]
 18379  01450C  50E1               	movf	fsr1l,w,c
 18380  01450E  0FF7               	addlw	-9
 18381  014510  6ED9               	movwf	fsr2l,c
 18382  014512  50E2               	movf	fsr1h,w,c
 18383  014514  6EDA               	movwf	fsr2h,c
 18384  014516  0EFF               	movlw	255
 18385  014518  22DA               	addwfc	fsr2h,f,c
 18386  01451A  0EEB               	movlw	-21
 18387  01451C  50E3               	movf	plusw1,w,c
 18388  01451E  5CDE               	subwf	postinc2,w,c
 18389  014520  0EEC               	movlw	-20
 18390  014522  50E3               	movf	plusw1,w,c
 18391  014524  58DE               	subwfb	postinc2,w,c
 18392  014526  0EED               	movlw	-19
 18393  014528  50E3               	movf	plusw1,w,c
 18394  01452A  58DE               	subwfb	postinc2,w,c
 18395  01452C  0EEE               	movlw	-18
 18396  01452E  50E3               	movf	plusw1,w,c
 18397  014530  58DE               	subwfb	postinc2,w,c
 18398  014532  A0D8               	btfss	status,0,c
 18399  014534  D015               	goto	l7613
 18400                           
 18401                           ;stkvar	_grs @ sp[(-13)+0]
 18402  014536  0EF6               	movlw	-10
 18403  014538  8CE3               	bsf	plusw1,6,c
 18404                           
 18405                           ;stkvar	_a @ sp[(-13)+-8]
 18406                           ;stkvar	_rem @ sp[(-13)+4]
 18407  01453A  50E1               	movf	fsr1l,w,c
 18408  01453C  0FF7               	addlw	-9
 18409  01453E  6ED9               	movwf	fsr2l,c
 18410  014540  50E2               	movf	fsr1h,w,c
 18411  014542  6EDA               	movwf	fsr2h,c
 18412  014544  0EFF               	movlw	255
 18413  014546  22DA               	addwfc	fsr2h,f,c
 18414  014548  0EEB               	movlw	-21
 18415  01454A  50E3               	movf	plusw1,w,c
 18416  01454C  5EDE               	subwf	postinc2,f,c
 18417  01454E  0EEC               	movlw	-20
 18418  014550  50E3               	movf	plusw1,w,c
 18419  014552  5ADE               	subwfb	postinc2,f,c
 18420  014554  0EED               	movlw	-19
 18421  014556  50E3               	movf	plusw1,w,c
 18422  014558  5ADE               	subwfb	postinc2,f,c
 18423  01455A  0EEE               	movlw	-18
 18424  01455C  50E3               	movf	plusw1,w,c
 18425  01455E  5ADE               	subwfb	postinc2,f,c
 18426  014560                     l7613:
 18427                           
 18428                           ;stkvar	_aexp @ sp[(-13)+10]
 18429  014560  0EFD               	movlw	-3
 18430  014562  2AE3               	incf	plusw1,f,c
 18431  014564                     l7615:
 18432                           
 18433                           ;stkvar	_aexp @ sp[(-13)+10]
 18434  014564  0EFD               	movlw	-3
 18435  014566  006F FF8C  F001    	movff	plusw1,btemp
 18436  01456C  0E19               	movlw	25
 18437  01456E  6401               	cpfsgt	btemp^0,c
 18438  014570  D7A9               	goto	l7597
 18439                           
 18440                           ;stkvar	_rem @ sp[(-13)+4]
 18441  014572  0EF7               	movlw	-9
 18442  014574  50E3               	movf	plusw1,w,c
 18443  014576  E10A               	bnz	u6160
 18444  014578  0EF8               	movlw	-8
 18445  01457A  50E3               	movf	plusw1,w,c
 18446  01457C  E107               	bnz	u6160
 18447  01457E  0EF9               	movlw	-7
 18448  014580  50E3               	movf	plusw1,w,c
 18449  014582  E104               	bnz	u6160
 18450  014584  0EFA               	movlw	-6
 18451  014586  50E3               	movf	plusw1,w,c
 18452  014588  B4D8               	btfsc	status,2,c
 18453  01458A  D024               	goto	l7631
 18454  01458C                     u6160:
 18455                           
 18456                           ;stkvar	_grs @ sp[(-13)+0]
 18457  01458C  0EF3               	movlw	-13
 18458  01458E  80E3               	bsf	plusw1,0,c
 18459  014590  D021               	goto	l7631
 18460  014592                     l7621:
 18461                           
 18462                           ;stkvar	_b @ sp[(-13)+-4]
 18463  014592  90D8               	bcf	status,0,c
 18464  014594  0EEF               	movlw	-17
 18465  014596  36E3               	rlcf	plusw1,f,c
 18466  014598  0EF0               	movlw	-16
 18467  01459A  36E3               	rlcf	plusw1,f,c
 18468  01459C  0EF1               	movlw	-15
 18469  01459E  36E3               	rlcf	plusw1,f,c
 18470  0145A0  0EF2               	movlw	-14
 18471  0145A2  36E3               	rlcf	plusw1,f,c
 18472                           
 18473                           ;stkvar	_grs @ sp[(-13)+0]
 18474  0145A4  0EF6               	movlw	-10
 18475  0145A6  AEE3               	btfss	plusw1,7,c
 18476  0145A8  D002               	goto	l7627
 18477                           
 18478                           ;stkvar	_b @ sp[(-13)+-4]
 18479  0145AA  0EEF               	movlw	-17
 18480  0145AC  80E3               	bsf	plusw1,0,c
 18481  0145AE                     l7627:
 18482                           
 18483                           ;stkvar	_grs @ sp[(-13)+0]
 18484  0145AE  90D8               	bcf	status,0,c
 18485  0145B0  0EF3               	movlw	-13
 18486  0145B2  36E3               	rlcf	plusw1,f,c
 18487  0145B4  0EF4               	movlw	-12
 18488  0145B6  36E3               	rlcf	plusw1,f,c
 18489  0145B8  0EF5               	movlw	-11
 18490  0145BA  36E3               	rlcf	plusw1,f,c
 18491  0145BC  0EF6               	movlw	-10
 18492  0145BE  36E3               	rlcf	plusw1,f,c
 18493                           
 18494                           ;stkvar	_new_exp @ sp[(-13)+8]
 18495  0145C0  50E1               	movf	fsr1l,w,c
 18496  0145C2  0FFB               	addlw	-5
 18497  0145C4  6ED9               	movwf	fsr2l,c
 18498  0145C6  50E2               	movf	fsr1h,w,c
 18499  0145C8  6EDA               	movwf	fsr2h,c
 18500  0145CA  0EFF               	movlw	255
 18501  0145CC  22DA               	addwfc	fsr2h,f,c
 18502  0145CE  06DE               	decf	postinc2,f,c
 18503  0145D0  0E00               	movlw	0
 18504  0145D2  5ADD               	subwfb	postdec2,f,c
 18505  0145D4                     l7631:
 18506                           
 18507                           ;stkvar	_b @ sp[(-13)+-4]
 18508  0145D4  0EF1               	movlw	-15
 18509  0145D6  AEE3               	btfss	plusw1,7,c
 18510  0145D8  D7DC               	goto	l7621
 18511                           
 18512                           ;stkvar	_aexp @ sp[(-13)+10]
 18513  0145DA  0EFD               	movlw	-3
 18514  0145DC  6AE3               	clrf	plusw1,c
 18515                           
 18516                           ;stkvar	_grs @ sp[(-13)+0]
 18517  0145DE  0EF6               	movlw	-10
 18518  0145E0  AEE3               	btfss	plusw1,7,c
 18519  0145E2  D020               	goto	l7645
 18520                           
 18521                           ;stkvar	_grs @ sp[(-13)+0]
 18522  0145E4  50E1               	movf	fsr1l,w,c
 18523  0145E6  0FF3               	addlw	-13
 18524  0145E8  6ED9               	movwf	fsr2l,c
 18525  0145EA  50E2               	movf	fsr1h,w,c
 18526  0145EC  6EDA               	movwf	fsr2h,c
 18527  0145EE  0EFF               	movlw	255
 18528  0145F0  22DA               	addwfc	fsr2h,f,c
 18529  0145F2  0EFF               	movlw	255
 18530  0145F4  14DE               	andwf	postinc2,w,c
 18531  0145F6  6E09               	movwf	(btemp+8)^0,c
 18532  0145F8  0EFF               	movlw	255
 18533  0145FA  14DE               	andwf	postinc2,w,c
 18534  0145FC  6E0A               	movwf	(btemp+9)^0,c
 18535  0145FE  0EFF               	movlw	255
 18536  014600  14DE               	andwf	postinc2,w,c
 18537  014602  6E0B               	movwf	(btemp+10)^0,c
 18538  014604  0E7F               	movlw	127
 18539  014606  14DE               	andwf	postinc2,w,c
 18540  014608  6E0C               	movwf	(btemp+11)^0,c
 18541  01460A  5009               	movf	(btemp+8)^0,w,c
 18542  01460C  100A               	iorwf	(btemp+9)^0,w,c
 18543  01460E  100B               	iorwf	(btemp+10)^0,w,c
 18544  014610  100C               	iorwf	(btemp+11)^0,w,c
 18545  014612  B4D8               	btfsc	status,2,c
 18546  014614  D004               	goto	l7641
 18547  014616                     u6200:
 18548                           
 18549                           ;stkvar	_aexp @ sp[(-13)+10]
 18550  014616  0EFD               	movlw	-3
 18551  014618  6AE3               	clrf	plusw1,c
 18552  01461A  2AE3               	incf	plusw1,f,c
 18553  01461C  D003               	goto	l7645
 18554  01461E                     l7641:
 18555                           
 18556                           ;stkvar	_b @ sp[(-13)+-4]
 18557  01461E  0EEF               	movlw	-17
 18558  014620  B0E3               	btfsc	plusw1,0,c
 18559  014622  D7F9               	goto	u6200
 18560  014624                     l7645:
 18561                           
 18562                           ;stkvar	_aexp @ sp[(-13)+10]
 18563  014624  0EFD               	movlw	-3
 18564  014626  50E3               	movf	plusw1,w,c
 18565  014628  B4D8               	btfsc	status,2,c
 18566  01462A  D036               	goto	l7655
 18567                           
 18568                           ;stkvar	_b @ sp[(-13)+-4]
 18569  01462C  50E1               	movf	fsr1l,w,c
 18570  01462E  0FEF               	addlw	-17
 18571  014630  6ED9               	movwf	fsr2l,c
 18572  014632  50E2               	movf	fsr1h,w,c
 18573  014634  6EDA               	movwf	fsr2h,c
 18574  014636  0EFF               	movlw	255
 18575  014638  22DA               	addwfc	fsr2h,f,c
 18576  01463A  2ADE               	incf	postinc2,f,c
 18577  01463C  0E00               	movlw	0
 18578  01463E  22DE               	addwfc	postinc2,f,c
 18579  014640  22DE               	addwfc	postinc2,f,c
 18580  014642  22DE               	addwfc	postinc2,f,c
 18581                           
 18582                           ;stkvar	_b @ sp[(-13)+-4]
 18583  014644  0EF2               	movlw	-14
 18584  014646  A0E3               	btfss	plusw1,0,c
 18585  014648  D027               	goto	l7655
 18586  01464A  0E01               	movlw	1
 18587  01464C  6E0C               	movwf	(btemp+11)^0,c
 18588                           
 18589                           ;stkvar	_b @ sp[(-13)+-4]
 18590  01464E  50E1               	movf	fsr1l,w,c
 18591  014650  0FEF               	addlw	-17
 18592  014652  6ED9               	movwf	fsr2l,c
 18593  014654  50E2               	movf	fsr1h,w,c
 18594  014656  6EDA               	movwf	fsr2h,c
 18595  014658  0EFF               	movlw	255
 18596  01465A  22DA               	addwfc	fsr2h,f,c
 18597  01465C  280C               	incf	(btemp+11)^0,w,c
 18598  01465E  52DE               	movf	postinc2,f,c
 18599  014660  D008               	goto	u6240
 18600  014662                     u6245:
 18601  014662  52DE               	movf	postinc2,f,c
 18602  014664  90D8               	bcf	status,0,c
 18603  014666  BEDC               	btfsc	preinc2,7,c
 18604  014668  80D8               	bsf	status,0,c
 18605  01466A  32DD               	rrcf	postdec2,f,c
 18606  01466C  32DD               	rrcf	postdec2,f,c
 18607  01466E  32DD               	rrcf	postdec2,f,c
 18608  014670  32DE               	rrcf	postinc2,f,c
 18609  014672                     u6240:
 18610  014672  2EE8               	decfsz	wreg,f,c
 18611  014674  D7F6               	goto	u6245
 18612                           
 18613                           ;stkvar	_new_exp @ sp[(-13)+8]
 18614  014676  0EFB               	movlw	-5
 18615  014678  50E3               	movf	plusw1,w,c
 18616  01467A  0F01               	addlw	1
 18617  01467C  6E01               	movwf	btemp^0,c
 18618  01467E  0EFB               	movlw	-5
 18619  014680  0060  F007  FFE3   	movff	btemp,plusw1
 18620  014686  6A01               	clrf	btemp^0,c
 18621  014688  0EFC               	movlw	-4
 18622  01468A  50E3               	movf	plusw1,w,c
 18623  01468C  2001               	addwfc	btemp^0,w,c
 18624  01468E  6E01               	movwf	btemp^0,c
 18625  014690  0EFC               	movlw	-4
 18626  014692  0060  F007  FFE3   	movff	btemp,plusw1
 18627  014698                     l7655:
 18628                           
 18629                           ;stkvar	_new_exp @ sp[(-13)+8]
 18630  014698  0EFC               	movlw	-4
 18631  01469A  BEE3               	btfsc	plusw1,7,c
 18632  01469C  D01B               	goto	l7661
 18633  01469E  0EFC               	movlw	-4
 18634  0146A0  50E3               	movf	plusw1,w,c
 18635  0146A2  E104               	bnz	u6250
 18636  0146A4  0EFB               	movlw	-5
 18637  0146A6  28E3               	incf	plusw1,w,c
 18638  0146A8  A0D8               	btfss	status,0,c
 18639  0146AA  D014               	goto	l7661
 18640  0146AC                     u6250:
 18641  0146AC  0EFF               	movlw	255
 18642  0146AE  6E0B               	movwf	(btemp+10)^0,c
 18643  0146B0  0E00               	movlw	0
 18644  0146B2  6E0C               	movwf	(btemp+11)^0,c
 18645                           
 18646                           ;stkvar	_new_exp @ sp[(-13)+8]
 18647  0146B4  0EFB               	movlw	-5
 18648  0146B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18649  0146BC  0EFC               	movlw	-4
 18650  0146BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18651                           
 18652                           ;stkvar	_b @ sp[(-13)+-4]
 18653  0146C4  0EEF               	movlw	-17
 18654  0146C6  6AE3               	clrf	plusw1,c
 18655  0146C8  0EF0               	movlw	-16
 18656  0146CA  6AE3               	clrf	plusw1,c
 18657  0146CC  0EF1               	movlw	-15
 18658  0146CE  6AE3               	clrf	plusw1,c
 18659  0146D0  0EF2               	movlw	-14
 18660  0146D2  6AE3               	clrf	plusw1,c
 18661  0146D4                     l7661:
 18662                           
 18663                           ;stkvar	_new_exp @ sp[(-13)+8]
 18664  0146D4  0EFC               	movlw	-4
 18665  0146D6  BEE3               	btfsc	plusw1,7,c
 18666  0146D8  D007               	goto	u6260
 18667  0146DA  0EFC               	movlw	-4
 18668  0146DC  50E3               	movf	plusw1,w,c
 18669  0146DE  E112               	bnz	l7667
 18670  0146E0  0EFB               	movlw	-5
 18671  0146E2  04E3               	decf	plusw1,w,c
 18672  0146E4  B0D8               	btfsc	status,0,c
 18673  0146E6  D00E               	goto	l7667
 18674  0146E8                     u6260:
 18675                           
 18676                           ;stkvar	_new_exp @ sp[(-13)+8]
 18677  0146E8  0EFB               	movlw	-5
 18678  0146EA  6AE3               	clrf	plusw1,c
 18679  0146EC  0EFC               	movlw	-4
 18680  0146EE  6AE3               	clrf	plusw1,c
 18681                           
 18682                           ;stkvar	_b @ sp[(-13)+-4]
 18683  0146F0  0EEF               	movlw	-17
 18684  0146F2  6AE3               	clrf	plusw1,c
 18685  0146F4  0EF0               	movlw	-16
 18686  0146F6  6AE3               	clrf	plusw1,c
 18687  0146F8  0EF1               	movlw	-15
 18688  0146FA  6AE3               	clrf	plusw1,c
 18689  0146FC  0EF2               	movlw	-14
 18690  0146FE  6AE3               	clrf	plusw1,c
 18691                           
 18692                           ;stkvar	_sign @ sp[(-13)+12]
 18693  014700  0EFF               	movlw	-1
 18694  014702  6AE3               	clrf	plusw1,c
 18695  014704                     l7667:
 18696                           
 18697                           ;stkvar	_new_exp @ sp[(-13)+8]
 18698                           ;stkvar	_bexp @ sp[(-13)+11]
 18699  014704  0EFB               	movlw	-5
 18700  014706  006F FF8C  F001    	movff	plusw1,btemp
 18701  01470C  0EFE               	movlw	-2
 18702  01470E  0060  F007  FFE3   	movff	btemp,plusw1
 18703                           
 18704                           ;stkvar	_bexp @ sp[(-13)+11]
 18705  014714  0EFE               	movlw	-2
 18706  014716  A0E3               	btfss	plusw1,0,c
 18707  014718  D009               	goto	l7673
 18708                           
 18709                           ;stkvar	_b @ sp[(-13)+-4]
 18710  01471A  0EF1               	movlw	241
 18711  01471C  24E1               	addwf	fsr1l,w,c
 18712  01471E  6ED9               	movwf	fsr2l,c
 18713  014720  0EFF               	movlw	255
 18714  014722  20E2               	addwfc	fsr1h,w,c
 18715  014724  6EDA               	movwf	fsr2h,c
 18716  014726  0E00               	movlw	0
 18717  014728  8EDB               	bsf	plusw2,7,c
 18718  01472A  D008               	goto	l7675
 18719  01472C                     l7673:
 18720                           
 18721                           ;stkvar	_b @ sp[(-13)+-4]
 18722  01472C  0EF1               	movlw	241
 18723  01472E  24E1               	addwf	fsr1l,w,c
 18724  014730  6ED9               	movwf	fsr2l,c
 18725  014732  0EFF               	movlw	255
 18726  014734  20E2               	addwfc	fsr1h,w,c
 18727  014736  6EDA               	movwf	fsr2h,c
 18728  014738  0E7F               	movlw	127
 18729  01473A  16DF               	andwf	indf2,f,c
 18730  01473C                     l7675:
 18731                           
 18732                           ;stkvar	_b @ sp[(-13)+-4]
 18733  01473C  0EF2               	movlw	242
 18734  01473E  24E1               	addwf	fsr1l,w,c
 18735  014740  6ED9               	movwf	fsr2l,c
 18736  014742  0EFF               	movlw	255
 18737  014744  20E2               	addwfc	fsr1h,w,c
 18738  014746  6EDA               	movwf	fsr2h,c
 18739                           
 18740                           ;stkvar	_bexp @ sp[(-13)+11]
 18741  014748  0EFE               	movlw	-2
 18742  01474A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18743  014750  90D8               	bcf	status,0,c
 18744  014752  300C               	rrcf	(btemp+11)^0,w,c
 18745  014754  6EDF               	movwf	indf2,c
 18746  014756  D644               	goto	l7573
 18747  014758                     l2840:
 18748                           
 18749                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 18750  014758  0EEB               	movlw	235
 18751  01475A  26E1               	addwf	fsr1l,f,c
 18752  01475C  0EFF               	movlw	255
 18753  01475E  22E2               	addwfc	fsr1h,f,c
 18754  014760  0012               	return		;funcret
 18755  014762                     __end_of___fldiv:
 18756                           	opt callstack 0
 18757                           
 18758 ;; *************** function ___awmod *****************
 18759 ;; Defined at:
 18760 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18761 ;; Parameters:    Size  Location     Type
 18762 ;;  dividend        2  [STACK] int 
 18763 ;;  divisor         2  [STACK] int 
 18764 ;; Auto vars:     Size  Location     Type
 18765 ;;  sign            1  [STACK] unsigned char 
 18766 ;;  counter         1  [STACK] unsigned char 
 18767 ;; Return value:  Size  Location     Type
 18768 ;;                  2  [STACK] int 
 18769 ;; Registers used:
 18770 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18771 ;; Tracked objects:
 18772 ;;		On entry : 0/0
 18773 ;;		On exit  : 0/0
 18774 ;;		Unchanged: 0/0
 18775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18780 ;;Total ram usage:        0 bytes
 18781 ;; Hardware stack levels used:    1
 18782 ;; Hardware stack levels required when called:   15
 18783 ;; This function calls:
 18784 ;;		Nothing
 18785 ;; This function is called by:
 18786 ;;		_efgtoa
 18787 ;; This function uses a reentrant model
 18788 ;;
 18789                           
 18790                           	psect	text64
 18791  018362                     __ptext64:
 18792                           	opt callstack 0
 18793  018362                     ___awmod:
 18794                           	opt callstack 0
 18795                           
 18796                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18797  018362  52E6               	movf	postinc1,f,c
 18798  018364  52E6               	movf	postinc1,f,c
 18799                           
 18800                           ;stkvar	_sign @ sp[(-2)+0]
 18801                           
 18802                           ;incstack = 0
 18803 ;; hardware stack exceeded
 18804  018366  0EFE               	movlw	-2
 18805  018368  6AE3               	clrf	plusw1,c
 18806                           
 18807                           ;stkvar	_dividend @ sp[(-2)+-2]
 18808  01836A  0EFD               	movlw	-3
 18809  01836C  AEE3               	btfss	plusw1,7,c
 18810  01836E  D009               	goto	l7899
 18811                           
 18812                           ;stkvar	_dividend @ sp[(-2)+-2]
 18813                           ;stkvar	_dividend @ sp[(-2)+-2]
 18814  018370  0EFC               	movlw	-4
 18815  018372  6CE3               	negf	plusw1,c
 18816  018374  0EFD               	movlw	-3
 18817  018376  1EE3               	comf	plusw1,f,c
 18818  018378  B0D8               	btfsc	status,0,c
 18819  01837A  2AE3               	incf	plusw1,f,c
 18820                           
 18821                           ;stkvar	_sign @ sp[(-2)+0]
 18822  01837C  0EFE               	movlw	-2
 18823  01837E  6AE3               	clrf	plusw1,c
 18824  018380  2AE3               	incf	plusw1,f,c
 18825  018382                     l7899:
 18826                           
 18827                           ;stkvar	_divisor @ sp[(-2)+-4]
 18828  018382  0EFB               	movlw	-5
 18829  018384  AEE3               	btfss	plusw1,7,c
 18830  018386  D006               	goto	l7903
 18831                           
 18832                           ;stkvar	_divisor @ sp[(-2)+-4]
 18833                           ;stkvar	_divisor @ sp[(-2)+-4]
 18834  018388  0EFA               	movlw	-6
 18835  01838A  6CE3               	negf	plusw1,c
 18836  01838C  0EFB               	movlw	-5
 18837  01838E  1EE3               	comf	plusw1,f,c
 18838  018390  B0D8               	btfsc	status,0,c
 18839  018392  2AE3               	incf	plusw1,f,c
 18840  018394                     l7903:
 18841                           
 18842                           ;stkvar	_divisor @ sp[(-2)+-4]
 18843  018394  0EFA               	movlw	-6
 18844  018396  006F FF8C  F001    	movff	plusw1,btemp
 18845  01839C  0EFB               	movlw	-5
 18846  01839E  50E3               	movf	plusw1,w,c
 18847  0183A0  1001               	iorwf	btemp^0,w,c
 18848  0183A2  B4D8               	btfsc	status,2,c
 18849  0183A4  D053               	goto	u6620
 18850                           
 18851                           ;stkvar	_counter @ sp[(-2)+1]
 18852  0183A6  0EFF               	movlw	-1
 18853  0183A8  6AE3               	clrf	plusw1,c
 18854  0183AA  D012               	goto	L19
 18855  0183AC                     l7907:
 18856                           
 18857                           ;stkvar	_divisor @ sp[(-2)+-4]
 18858  0183AC  0EFA               	movlw	-6
 18859  0183AE  50E3               	movf	plusw1,w,c
 18860  0183B0  90D8               	bcf	status,0,c
 18861  0183B2  34E8               	rlcf	wreg,w,c
 18862  0183B4  6E01               	movwf	btemp^0,c
 18863  0183B6  0EFA               	movlw	-6
 18864  0183B8  0060  F007  FFE3   	movff	btemp,plusw1
 18865  0183BE  0EFB               	movlw	-5
 18866  0183C0  50E3               	movf	plusw1,w,c
 18867  0183C2  34E8               	rlcf	wreg,w,c
 18868  0183C4  6E01               	movwf	btemp^0,c
 18869  0183C6  0EFB               	movlw	-5
 18870  0183C8  0060  F007  FFE3   	movff	btemp,plusw1
 18871                           
 18872                           ;stkvar	_counter @ sp[(-2)+1]
 18873  0183CE  0EFF               	movlw	-1
 18874  0183D0                     L19:
 18875  0183D0  2AE3               	incf	plusw1,f,c
 18876                           
 18877                           ;stkvar	_divisor @ sp[(-2)+-4]
 18878  0183D2  0EFB               	movlw	-5
 18879  0183D4  AEE3               	btfss	plusw1,7,c
 18880  0183D6  D7EA               	goto	l7907
 18881  0183D8                     u6600:
 18882                           
 18883                           ;stkvar	_divisor @ sp[(-2)+-4]
 18884  0183D8  0EFA               	movlw	-6
 18885  0183DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18886  0183E0  0EFB               	movlw	-5
 18887  0183E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18888                           
 18889                           ;stkvar	_dividend @ sp[(-2)+-2]
 18890  0183E8  0EFC               	movlw	-4
 18891  0183EA  006F FF8C  F009    	movff	plusw1,btemp+8
 18892  0183F0  0EFD               	movlw	-3
 18893  0183F2  006F FF8C  F00A    	movff	plusw1,btemp+9
 18894  0183F8  500B               	movf	(btemp+10)^0,w,c
 18895  0183FA  5C09               	subwf	(btemp+8)^0,w,c
 18896  0183FC  500C               	movf	(btemp+11)^0,w,c
 18897  0183FE  580A               	subwfb	(btemp+9)^0,w,c
 18898  018400  A0D8               	btfss	status,0,c
 18899  018402  D014               	goto	l7917
 18900                           
 18901                           ;stkvar	_divisor @ sp[(-2)+-4]
 18902                           ;stkvar	_dividend @ sp[(-2)+-2]
 18903  018404  0EFC               	movlw	-4
 18904  018406  50E3               	movf	plusw1,w,c
 18905  018408  6E01               	movwf	btemp^0,c
 18906  01840A  0EFA               	movlw	-6
 18907  01840C  50E3               	movf	plusw1,w,c
 18908  01840E  5E01               	subwf	btemp^0,f,c
 18909  018410  0EFC               	movlw	-4
 18910  018412  0060  F007  FFE3   	movff	btemp,plusw1
 18911  018418  0EFD               	movlw	-3
 18912  01841A  50E3               	movf	plusw1,w,c
 18913  01841C  6E01               	movwf	btemp^0,c
 18914  01841E  0EFB               	movlw	-5
 18915  018420  50E3               	movf	plusw1,w,c
 18916  018422  5A01               	subwfb	btemp^0,f,c
 18917  018424  0EFD               	movlw	-3
 18918  018426  0060  F007  FFE3   	movff	btemp,plusw1
 18919  01842C                     l7917:
 18920                           
 18921                           ;stkvar	_divisor @ sp[(-2)+-4]
 18922  01842C  90D8               	bcf	status,0,c
 18923  01842E  0EFB               	movlw	-5
 18924  018430  32E3               	rrcf	plusw1,f,c
 18925  018432  0EFA               	movlw	-6
 18926  018434  32E3               	rrcf	plusw1,f,c
 18927                           
 18928                           ;stkvar	_counter @ sp[(-2)+1]
 18929  018436  0EFF               	movlw	-1
 18930  018438  50E3               	movf	plusw1,w,c
 18931  01843A  6E01               	movwf	btemp^0,c
 18932  01843C  0E01               	movlw	1
 18933  01843E  5E01               	subwf	btemp^0,f,c
 18934  018440  0EFF               	movlw	-1
 18935  018442  0060  F007  FFE3   	movff	btemp,plusw1
 18936  018448  A4D8               	btfss	status,2,c
 18937  01844A  D7C6               	goto	u6600
 18938  01844C                     u6620:
 18939                           
 18940                           ;stkvar	_sign @ sp[(-2)+0]
 18941  01844C  0EFE               	movlw	-2
 18942  01844E  50E3               	movf	plusw1,w,c
 18943  018450  B4D8               	btfsc	status,2,c
 18944  018452  D006               	goto	l7925
 18945                           
 18946                           ;stkvar	_dividend @ sp[(-2)+-2]
 18947                           ;stkvar	_dividend @ sp[(-2)+-2]
 18948  018454  0EFC               	movlw	-4
 18949  018456  6CE3               	negf	plusw1,c
 18950  018458  0EFD               	movlw	-3
 18951  01845A  1EE3               	comf	plusw1,f,c
 18952  01845C  B0D8               	btfsc	status,0,c
 18953  01845E  2AE3               	incf	plusw1,f,c
 18954  018460                     l7925:
 18955                           
 18956                           ;stkvar	_dividend @ sp[(-2)+-2]
 18957  018460  0EFC               	movlw	-4
 18958  018462  006F FF8C  F001    	movff	plusw1,btemp
 18959  018468  0EFD               	movlw	-3
 18960  01846A  006F FF8C  F002    	movff	plusw1,btemp+1
 18961                           
 18962                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18963  018470  0EFA               	movlw	250
 18964  018472  26E1               	addwf	fsr1l,f,c
 18965  018474  0EFF               	movlw	255
 18966  018476  22E2               	addwfc	fsr1h,f,c
 18967  018478  0012               	return		;funcret
 18968  01847A                     __end_of___awmod:
 18969                           	opt callstack 0
 18970                           
 18971 ;; *************** function ___awdiv *****************
 18972 ;; Defined at:
 18973 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18974 ;; Parameters:    Size  Location     Type
 18975 ;;  dividend        2  [STACK] int 
 18976 ;;  divisor         2  [STACK] int 
 18977 ;; Auto vars:     Size  Location     Type
 18978 ;;  quotient        2  [STACK] int 
 18979 ;;  sign            1  [STACK] unsigned char 
 18980 ;;  counter         1  [STACK] unsigned char 
 18981 ;; Return value:  Size  Location     Type
 18982 ;;                  2  [STACK] int 
 18983 ;; Registers used:
 18984 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18985 ;; Tracked objects:
 18986 ;;		On entry : 0/0
 18987 ;;		On exit  : 0/0
 18988 ;;		Unchanged: 0/0
 18989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18994 ;;Total ram usage:        0 bytes
 18995 ;; Hardware stack levels used:    1
 18996 ;; Hardware stack levels required when called:   15
 18997 ;; This function calls:
 18998 ;;		Nothing
 18999 ;; This function is called by:
 19000 ;;		_efgtoa
 19001 ;; This function uses a reentrant model
 19002 ;;
 19003                           
 19004                           	psect	text65
 19005  017D5A                     __ptext65:
 19006                           	opt callstack 0
 19007  017D5A                     ___awdiv:
 19008                           	opt callstack 0
 19009                           
 19010                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19011  017D5A  52E6               	movf	postinc1,f,c
 19012  017D5C  52E6               	movf	postinc1,f,c
 19013  017D5E  52E6               	movf	postinc1,f,c
 19014  017D60  52E6               	movf	postinc1,f,c
 19015                           
 19016                           ;stkvar	_sign @ sp[(-4)+2]
 19017                           
 19018                           ;incstack = 0
 19019 ;; hardware stack exceeded
 19020  017D62  0EFE               	movlw	-2
 19021  017D64  6AE3               	clrf	plusw1,c
 19022                           
 19023                           ;stkvar	_divisor @ sp[(-4)+-4]
 19024  017D66  0EF9               	movlw	-7
 19025  017D68  AEE3               	btfss	plusw1,7,c
 19026  017D6A  D009               	goto	l7853
 19027                           
 19028                           ;stkvar	_divisor @ sp[(-4)+-4]
 19029                           ;stkvar	_divisor @ sp[(-4)+-4]
 19030  017D6C  0EF8               	movlw	-8
 19031  017D6E  6CE3               	negf	plusw1,c
 19032  017D70  0EF9               	movlw	-7
 19033  017D72  1EE3               	comf	plusw1,f,c
 19034  017D74  B0D8               	btfsc	status,0,c
 19035  017D76  2AE3               	incf	plusw1,f,c
 19036                           
 19037                           ;stkvar	_sign @ sp[(-4)+2]
 19038  017D78  0EFE               	movlw	-2
 19039  017D7A  6AE3               	clrf	plusw1,c
 19040  017D7C  2AE3               	incf	plusw1,f,c
 19041  017D7E                     l7853:
 19042                           
 19043                           ;stkvar	_dividend @ sp[(-4)+-2]
 19044  017D7E  0EFB               	movlw	-5
 19045  017D80  AEE3               	btfss	plusw1,7,c
 19046  017D82  D008               	goto	l7859
 19047                           
 19048                           ;stkvar	_dividend @ sp[(-4)+-2]
 19049                           ;stkvar	_dividend @ sp[(-4)+-2]
 19050  017D84  0EFA               	movlw	-6
 19051  017D86  6CE3               	negf	plusw1,c
 19052  017D88  0EFB               	movlw	-5
 19053  017D8A  1EE3               	comf	plusw1,f,c
 19054  017D8C  B0D8               	btfsc	status,0,c
 19055  017D8E  2AE3               	incf	plusw1,f,c
 19056                           
 19057                           ;stkvar	_sign @ sp[(-4)+2]
 19058  017D90  0EFE               	movlw	-2
 19059  017D92  70E3               	btg	plusw1,0,c
 19060  017D94                     l7859:
 19061                           
 19062                           ;stkvar	_quotient @ sp[(-4)+0]
 19063  017D94  0EFC               	movlw	-4
 19064  017D96  6AE3               	clrf	plusw1,c
 19065  017D98  0EFD               	movlw	-3
 19066  017D9A  6AE3               	clrf	plusw1,c
 19067                           
 19068                           ;stkvar	_divisor @ sp[(-4)+-4]
 19069  017D9C  0EF8               	movlw	-8
 19070  017D9E  006F FF8C  F001    	movff	plusw1,btemp
 19071  017DA4  0EF9               	movlw	-7
 19072  017DA6  50E3               	movf	plusw1,w,c
 19073  017DA8  1001               	iorwf	btemp^0,w,c
 19074  017DAA  B4D8               	btfsc	status,2,c
 19075  017DAC  D066               	goto	u6550
 19076                           
 19077                           ;stkvar	_counter @ sp[(-4)+3]
 19078  017DAE  0EFF               	movlw	-1
 19079  017DB0  6AE3               	clrf	plusw1,c
 19080  017DB2  D012               	goto	L20
 19081  017DB4                     l7865:
 19082                           
 19083                           ;stkvar	_divisor @ sp[(-4)+-4]
 19084  017DB4  0EF8               	movlw	-8
 19085  017DB6  50E3               	movf	plusw1,w,c
 19086  017DB8  90D8               	bcf	status,0,c
 19087  017DBA  34E8               	rlcf	wreg,w,c
 19088  017DBC  6E01               	movwf	btemp^0,c
 19089  017DBE  0EF8               	movlw	-8
 19090  017DC0  0060  F007  FFE3   	movff	btemp,plusw1
 19091  017DC6  0EF9               	movlw	-7
 19092  017DC8  50E3               	movf	plusw1,w,c
 19093  017DCA  34E8               	rlcf	wreg,w,c
 19094  017DCC  6E01               	movwf	btemp^0,c
 19095  017DCE  0EF9               	movlw	-7
 19096  017DD0  0060  F007  FFE3   	movff	btemp,plusw1
 19097                           
 19098                           ;stkvar	_counter @ sp[(-4)+3]
 19099  017DD6  0EFF               	movlw	-1
 19100  017DD8                     L20:
 19101  017DD8  2AE3               	incf	plusw1,f,c
 19102                           
 19103                           ;stkvar	_divisor @ sp[(-4)+-4]
 19104  017DDA  0EF9               	movlw	-7
 19105  017DDC  AEE3               	btfss	plusw1,7,c
 19106  017DDE  D7EA               	goto	l7865
 19107  017DE0                     u6530:
 19108                           
 19109                           ;stkvar	_quotient @ sp[(-4)+0]
 19110  017DE0  0EFC               	movlw	-4
 19111  017DE2  50E3               	movf	plusw1,w,c
 19112  017DE4  90D8               	bcf	status,0,c
 19113  017DE6  34E8               	rlcf	wreg,w,c
 19114  017DE8  6E01               	movwf	btemp^0,c
 19115  017DEA  0EFC               	movlw	-4
 19116  017DEC  0060  F007  FFE3   	movff	btemp,plusw1
 19117  017DF2  0EFD               	movlw	-3
 19118  017DF4  50E3               	movf	plusw1,w,c
 19119  017DF6  34E8               	rlcf	wreg,w,c
 19120  017DF8  6E01               	movwf	btemp^0,c
 19121  017DFA  0EFD               	movlw	-3
 19122  017DFC  0060  F007  FFE3   	movff	btemp,plusw1
 19123                           
 19124                           ;stkvar	_divisor @ sp[(-4)+-4]
 19125  017E02  0EF8               	movlw	-8
 19126  017E04  006F FF8C  F00B    	movff	plusw1,btemp+10
 19127  017E0A  0EF9               	movlw	-7
 19128  017E0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19129                           
 19130                           ;stkvar	_dividend @ sp[(-4)+-2]
 19131  017E12  0EFA               	movlw	-6
 19132  017E14  006F FF8C  F009    	movff	plusw1,btemp+8
 19133  017E1A  0EFB               	movlw	-5
 19134  017E1C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19135  017E22  500B               	movf	(btemp+10)^0,w,c
 19136  017E24  5C09               	subwf	(btemp+8)^0,w,c
 19137  017E26  500C               	movf	(btemp+11)^0,w,c
 19138  017E28  580A               	subwfb	(btemp+9)^0,w,c
 19139  017E2A  A0D8               	btfss	status,0,c
 19140  017E2C  D016               	goto	l7879
 19141                           
 19142                           ;stkvar	_divisor @ sp[(-4)+-4]
 19143                           ;stkvar	_dividend @ sp[(-4)+-2]
 19144  017E2E  0EFA               	movlw	-6
 19145  017E30  50E3               	movf	plusw1,w,c
 19146  017E32  6E01               	movwf	btemp^0,c
 19147  017E34  0EF8               	movlw	-8
 19148  017E36  50E3               	movf	plusw1,w,c
 19149  017E38  5E01               	subwf	btemp^0,f,c
 19150  017E3A  0EFA               	movlw	-6
 19151  017E3C  0060  F007  FFE3   	movff	btemp,plusw1
 19152  017E42  0EFB               	movlw	-5
 19153  017E44  50E3               	movf	plusw1,w,c
 19154  017E46  6E01               	movwf	btemp^0,c
 19155  017E48  0EF9               	movlw	-7
 19156  017E4A  50E3               	movf	plusw1,w,c
 19157  017E4C  5A01               	subwfb	btemp^0,f,c
 19158  017E4E  0EFB               	movlw	-5
 19159  017E50  0060  F007  FFE3   	movff	btemp,plusw1
 19160                           
 19161                           ;stkvar	_quotient @ sp[(-4)+0]
 19162  017E56  0EFC               	movlw	-4
 19163  017E58  80E3               	bsf	plusw1,0,c
 19164  017E5A                     l7879:
 19165                           
 19166                           ;stkvar	_divisor @ sp[(-4)+-4]
 19167  017E5A  90D8               	bcf	status,0,c
 19168  017E5C  0EF9               	movlw	-7
 19169  017E5E  32E3               	rrcf	plusw1,f,c
 19170  017E60  0EF8               	movlw	-8
 19171  017E62  32E3               	rrcf	plusw1,f,c
 19172                           
 19173                           ;stkvar	_counter @ sp[(-4)+3]
 19174  017E64  0EFF               	movlw	-1
 19175  017E66  50E3               	movf	plusw1,w,c
 19176  017E68  6E01               	movwf	btemp^0,c
 19177  017E6A  0E01               	movlw	1
 19178  017E6C  5E01               	subwf	btemp^0,f,c
 19179  017E6E  0EFF               	movlw	-1
 19180  017E70  0060  F007  FFE3   	movff	btemp,plusw1
 19181  017E76  A4D8               	btfss	status,2,c
 19182  017E78  D7B3               	goto	u6530
 19183  017E7A                     u6550:
 19184                           
 19185                           ;stkvar	_sign @ sp[(-4)+2]
 19186  017E7A  0EFE               	movlw	-2
 19187  017E7C  50E3               	movf	plusw1,w,c
 19188  017E7E  B4D8               	btfsc	status,2,c
 19189  017E80  D006               	goto	l7887
 19190                           
 19191                           ;stkvar	_quotient @ sp[(-4)+0]
 19192                           ;stkvar	_quotient @ sp[(-4)+0]
 19193  017E82  0EFC               	movlw	-4
 19194  017E84  6CE3               	negf	plusw1,c
 19195  017E86  0EFD               	movlw	-3
 19196  017E88  1EE3               	comf	plusw1,f,c
 19197  017E8A  B0D8               	btfsc	status,0,c
 19198  017E8C  2AE3               	incf	plusw1,f,c
 19199  017E8E                     l7887:
 19200                           
 19201                           ;stkvar	_quotient @ sp[(-4)+0]
 19202  017E8E  0EFC               	movlw	-4
 19203  017E90  006F FF8C  F001    	movff	plusw1,btemp
 19204  017E96  0EFD               	movlw	-3
 19205  017E98  006F FF8C  F002    	movff	plusw1,btemp+1
 19206                           
 19207                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19208  017E9E  0EF8               	movlw	248
 19209  017EA0  26E1               	addwf	fsr1l,f,c
 19210  017EA2  0EFF               	movlw	255
 19211  017EA4  22E2               	addwfc	fsr1h,f,c
 19212  017EA6  0012               	return		;funcret
 19213  017EA8                     __end_of___awdiv:
 19214                           	opt callstack 0
 19215                           
 19216 ;; *************** function _dtoa *****************
 19217 ;; Defined at:
 19218 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19219 ;; Parameters:    Size  Location     Type
 19220 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19221 ;;		 -> f(6), NULL(0), 
 19222 ;;  d               8  [STACK] long long 
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;  n               8  [STACK] long long 
 19225 ;;  i               2  [STACK] int 
 19226 ;;  s               2  [STACK] int 
 19227 ;;  w               2  [STACK] int 
 19228 ;;  p               2  [STACK] int 
 19229 ;; Return value:  Size  Location     Type
 19230 ;;                  2  [STACK] int 
 19231 ;; Registers used:
 19232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19233 ;; Tracked objects:
 19234 ;;		On entry : 0/0
 19235 ;;		On exit  : 0/0
 19236 ;;		Unchanged: 0/0
 19237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19242 ;;Total ram usage:        0 bytes
 19243 ;; Hardware stack levels used:    1
 19244 ;; Hardware stack levels required when called:   20
 19245 ;; This function calls:
 19246 ;;		___aodiv
 19247 ;;		___aomod
 19248 ;;		_abs
 19249 ;;		_pad
 19250 ;; This function is called by:
 19251 ;;		_vfpfcnvrt
 19252 ;; This function uses a reentrant model
 19253 ;;
 19254                           
 19255                           	psect	text66
 19256  014C0E                     __ptext66:
 19257                           	opt callstack 0
 19258  014C0E                     _dtoa:
 19259                           	opt callstack 0
 19260                           
 19261                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19262  014C0E  0E12               	movlw	18
 19263  014C10  26E1               	addwf	fsr1l,f,c
 19264  014C12  0E00               	movlw	0
 19265  014C14  22E2               	addwfc	fsr1h,f,c
 19266                           
 19267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19268                           ;stkvar	_d @ sp[(-18)+-10]
 19269                           
 19270                           ;incstack = 0
 19271 ;; hardware stack exceeded
 19272  014C16  0EE4               	movlw	228
 19273  014C18  24E1               	addwf	fsr1l,w,c
 19274  014C1A  6ED9               	movwf	fsr2l,c
 19275  014C1C  0EFF               	movlw	255
 19276  014C1E  20E2               	addwfc	fsr1h,w,c
 19277  014C20  6EDA               	movwf	fsr2h,c
 19278                           
 19279                           ;stkvar	_n @ sp[(-18)+2]
 19280  014C22  0E08               	movlw	8
 19281  014C24  6E01               	movwf	btemp^0,c
 19282  014C26  0EF0               	movlw	-16
 19283  014C28                     us1004999:
 19284  014C28  006F FF7B FFE3     	movff	postinc2,plusw1
 19285  014C2E  28E8               	incf	wreg,w,c
 19286  014C30  2E01               	decfsz	btemp^0,f,c
 19287  014C32  D7FA               	bra	us1004999
 19288                           
 19289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19290                           ;stkvar	_n @ sp[(-18)+2]
 19291  014C34  0EF7               	movlw	-9
 19292  014C36  AEE3               	btfss	plusw1,7,c
 19293  014C38  D002               	goto	u10050
 19294  014C3A  0E01               	movlw	1
 19295  014C3C  D001               	goto	u10060
 19296  014C3E                     u10050:
 19297  014C3E  0E00               	movlw	0
 19298  014C40                     u10060:
 19299  014C40  6E0B               	movwf	(btemp+10)^0,c
 19300  014C42  6A0C               	clrf	(btemp+11)^0,c
 19301                           
 19302                           ;stkvar	_s @ sp[(-18)+12]
 19303  014C44  0EFA               	movlw	-6
 19304  014C46  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19305  014C4C  0EFB               	movlw	-5
 19306  014C4E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19307                           
 19308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19309                           ;stkvar	_s @ sp[(-18)+12]
 19310  014C54  0EFA               	movlw	-6
 19311  014C56  006F FF8C  F001    	movff	plusw1,btemp
 19312  014C5C  0EFB               	movlw	-5
 19313  014C5E  50E3               	movf	plusw1,w,c
 19314  014C60  1001               	iorwf	btemp^0,w,c
 19315  014C62  B4D8               	btfsc	status,2,c
 19316  014C64  D025               	goto	u10080
 19317                           
 19318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19319                           ;stkvar	_n @ sp[(-18)+2]
 19320                           ;stkvar	_n @ sp[(-18)+2]
 19321  014C66  0EF0               	movlw	-16
 19322  014C68  6CE3               	negf	plusw1,c
 19323  014C6A  0EF1               	movlw	-15
 19324  014C6C  1EE3               	comf	plusw1,f,c
 19325  014C6E  0EF2               	movlw	-14
 19326  014C70  1EE3               	comf	plusw1,f,c
 19327  014C72  0EF3               	movlw	-13
 19328  014C74  1EE3               	comf	plusw1,f,c
 19329  014C76  0EF4               	movlw	-12
 19330  014C78  1EE3               	comf	plusw1,f,c
 19331  014C7A  0EF5               	movlw	-11
 19332  014C7C  1EE3               	comf	plusw1,f,c
 19333  014C7E  0EF6               	movlw	-10
 19334  014C80  1EE3               	comf	plusw1,f,c
 19335  014C82  0EF7               	movlw	-9
 19336  014C84  1EE3               	comf	plusw1,f,c
 19337  014C86  E314               	bnc	u10080
 19338  014C88  0EF1               	movlw	-15
 19339  014C8A  2AE3               	incf	plusw1,f,c
 19340  014C8C  E311               	bnc	u10080
 19341  014C8E  0EF2               	movlw	-14
 19342  014C90  2AE3               	incf	plusw1,f,c
 19343  014C92  E30E               	bnc	u10080
 19344  014C94  0EF3               	movlw	-13
 19345  014C96  2AE3               	incf	plusw1,f,c
 19346  014C98  E30B               	bnc	u10080
 19347  014C9A  0EF4               	movlw	-12
 19348  014C9C  2AE3               	incf	plusw1,f,c
 19349  014C9E  E308               	bnc	u10080
 19350  014CA0  0EF5               	movlw	-11
 19351  014CA2  2AE3               	incf	plusw1,f,c
 19352  014CA4  E305               	bnc	u10080
 19353  014CA6  0EF6               	movlw	-10
 19354  014CA8  2AE3               	incf	plusw1,f,c
 19355  014CAA  E302               	bnc	u10080
 19356  014CAC  0EF7               	movlw	-9
 19357  014CAE  2AE3               	incf	plusw1,f,c
 19358  014CB0                     u10080:
 19359                           
 19360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19361  014CB0  AE24               	btfss	(_prec+1)^0,7,c
 19362                           
 19363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19364  014CB2  9225               	bcf	_flags^0,1,c
 19365                           
 19366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19367  014CB4  BE24               	btfsc	(_prec+1)^0,7,c
 19368  014CB6  D005               	goto	u10100
 19369  014CB8  5024               	movf	(_prec+1)^0,w,c
 19370  014CBA  E110               	bnz	l10861
 19371  014CBC  0423               	decf	_prec^0,w,c
 19372  014CBE  B0D8               	btfsc	status,0,c
 19373  014CC0  D00D               	goto	l10861
 19374  014CC2                     u10100:
 19375  014CC2  0E01               	movlw	1
 19376  014CC4  6E0B               	movwf	(btemp+10)^0,c
 19377  014CC6  0E00               	movlw	0
 19378  014CC8  6E0C               	movwf	(btemp+11)^0,c
 19379                           
 19380                           ;stkvar	_p @ sp[(-18)+16]
 19381  014CCA  0EFE               	movlw	-2
 19382  014CCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19383  014CD2  0EFF               	movlw	-1
 19384  014CD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19385  014CDA  D008               	goto	l2021
 19386  014CDC                     l10861:
 19387                           
 19388                           ;stkvar	_p @ sp[(-18)+16]
 19389  014CDC  0EFE               	movlw	-2
 19390  014CDE  0060  F08F  FFE3   	movff	_prec,plusw1
 19391  014CE4  0EFF               	movlw	-1
 19392  014CE6  0060  F093  FFE3   	movff	_prec+1,plusw1
 19393  014CEC                     l2021:
 19394                           
 19395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19396                           ;stkvar	_w @ sp[(-18)+14]
 19397  014CEC  0EFC               	movlw	-4
 19398  014CEE  0060  F087  FFE3   	movff	_width,plusw1
 19399  014CF4  0EFD               	movlw	-3
 19400  014CF6  0060  F08B  FFE3   	movff	_width+1,plusw1
 19401                           
 19402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19403                           ;stkvar	_s @ sp[(-18)+12]
 19404  014CFC  0EFA               	movlw	-6
 19405  014CFE  006F FF8C  F001    	movff	plusw1,btemp
 19406  014D04  0EFB               	movlw	-5
 19407  014D06  50E3               	movf	plusw1,w,c
 19408  014D08  1001               	iorwf	btemp^0,w,c
 19409  014D0A  A4D8               	btfss	status,2,c
 19410  014D0C  D002               	goto	u10120
 19411  014D0E  A425               	btfss	_flags^0,2,c
 19412  014D10  D00A               	goto	l10869
 19413  014D12                     u10120:
 19414                           
 19415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19416                           ;stkvar	_w @ sp[(-18)+14]
 19417  014D12  50E1               	movf	fsr1l,w,c
 19418  014D14  0FFC               	addlw	-4
 19419  014D16  6ED9               	movwf	fsr2l,c
 19420  014D18  50E2               	movf	fsr1h,w,c
 19421  014D1A  6EDA               	movwf	fsr2h,c
 19422  014D1C  0EFF               	movlw	255
 19423  014D1E  22DA               	addwfc	fsr2h,f,c
 19424  014D20  06DE               	decf	postinc2,f,c
 19425  014D22  0E00               	movlw	0
 19426  014D24  5ADD               	subwfb	postdec2,f,c
 19427  014D26                     l10869:
 19428                           
 19429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19430  014D26  0E4F               	movlw	79
 19431  014D28  6E0B               	movwf	(btemp+10)^0,c
 19432  014D2A  0E00               	movlw	0
 19433  014D2C  6E0C               	movwf	(btemp+11)^0,c
 19434                           
 19435                           ;stkvar	_i @ sp[(-18)+10]
 19436  014D2E  0EF8               	movlw	-8
 19437  014D30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19438  014D36  0EF9               	movlw	-7
 19439  014D38  0060  F033  FFE3   	movff	btemp+11,plusw1
 19440                           
 19441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19442  014D3E  0103               	movlb	3	; () banked
 19443  014D40  6BE3               	clrf	(_dbuf+79)& (0+255),b
 19444                           
 19445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19446  014D42  D109               	goto	l10883
 19447  014D44                     l10873:
 19448                           
 19449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19450                           ;stkvar	_i @ sp[(-18)+10]
 19451  014D44  50E1               	movf	fsr1l,w,c
 19452  014D46  0FF8               	addlw	-8
 19453  014D48  6ED9               	movwf	fsr2l,c
 19454  014D4A  50E2               	movf	fsr1h,w,c
 19455  014D4C  6EDA               	movwf	fsr2h,c
 19456  014D4E  0EFF               	movlw	255
 19457  014D50  22DA               	addwfc	fsr2h,f,c
 19458  014D52  06DE               	decf	postinc2,f,c
 19459  014D54  0E00               	movlw	0
 19460  014D56  5ADD               	subwfb	postdec2,f,c
 19461                           
 19462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19463  014D58  0E0A               	movlw	10
 19464  014D5A  6EE6               	movwf	postinc1,c
 19465  014D5C  0E00               	movlw	0
 19466  014D5E  6EE6               	movwf	postinc1,c
 19467  014D60  0E00               	movlw	0
 19468  014D62  6EE6               	movwf	postinc1,c
 19469  014D64  0E00               	movlw	0
 19470  014D66  6EE6               	movwf	postinc1,c
 19471  014D68  0E00               	movlw	0
 19472  014D6A  6EE6               	movwf	postinc1,c
 19473  014D6C  0E00               	movlw	0
 19474  014D6E  6EE6               	movwf	postinc1,c
 19475  014D70  0E00               	movlw	0
 19476  014D72  6EE6               	movwf	postinc1,c
 19477  014D74  0E00               	movlw	0
 19478  014D76  6EE6               	movwf	postinc1,c
 19479                           
 19480                           ;stkvar	_n @ sp[(-26)+2]
 19481  014D78  50E1               	movf	fsr1l,w,c
 19482  014D7A  0FE8               	addlw	-24
 19483  014D7C  6ED9               	movwf	fsr2l,c
 19484  014D7E  50E2               	movf	fsr1h,w,c
 19485  014D80  6EDA               	movwf	fsr2h,c
 19486  014D82  0EFF               	movlw	255
 19487  014D84  22DA               	addwfc	fsr2h,f,c
 19488  014D86  006F FF7B FFE6     	movff	postinc2,postinc1
 19489  014D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 19490  014D92  006F FF7B FFE6     	movff	postinc2,postinc1
 19491  014D98  006F FF7B FFE6     	movff	postinc2,postinc1
 19492  014D9E  006F FF7B FFE6     	movff	postinc2,postinc1
 19493  014DA4  006F FF7B FFE6     	movff	postinc2,postinc1
 19494  014DAA  006F FF7B FFE6     	movff	postinc2,postinc1
 19495  014DB0  006F FF7B FFE6     	movff	postinc2,postinc1
 19496  014DB6  EC36  F0B4         	call	___aomod	;wreg free
 19497  014DBA  52E5               	movf	postdec1,f,c
 19498  014DBC  006F FF9C  F018    	movff	indf1,btemp+23
 19499  014DC2  52E5               	movf	postdec1,f,c
 19500  014DC4  006F FF9C  F017    	movff	indf1,btemp+22
 19501  014DCA  52E5               	movf	postdec1,f,c
 19502  014DCC  006F FF9C  F016    	movff	indf1,btemp+21
 19503  014DD2  52E5               	movf	postdec1,f,c
 19504  014DD4  006F FF9C  F015    	movff	indf1,btemp+20
 19505  014DDA  52E5               	movf	postdec1,f,c
 19506  014DDC  006F FF9C  F014    	movff	indf1,btemp+19
 19507  014DE2  52E5               	movf	postdec1,f,c
 19508  014DE4  006F FF9C  F013    	movff	indf1,btemp+18
 19509  014DEA  52E5               	movf	postdec1,f,c
 19510  014DEC  006F FF9C  F012    	movff	indf1,btemp+17
 19511  014DF2  52E5               	movf	postdec1,f,c
 19512  014DF4  006F FF9C  F011    	movff	indf1,btemp+16
 19513  014DFA  0EF8               	movlw	248
 19514  014DFC  26E1               	addwf	fsr1l,f,c
 19515  014DFE  0EFF               	movlw	255
 19516  014E00  22E2               	addwfc	fsr1h,f,c
 19517  014E02  0060  F044  F00B   	movff	btemp+16,btemp+10
 19518  014E08  0060  F048  F00C   	movff	btemp+17,btemp+11
 19519  014E0E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19520  014E14  0060  F033  FFE6   	movff	btemp+11,postinc1
 19521  014E1A  EC14  F0CE         	call	_abs	;wreg free
 19522  014E1E  0E30               	movlw	48
 19523  014E20  2601               	addwf	btemp^0,f,c
 19524                           
 19525                           ;stkvar	_i @ sp[(-18)+10]
 19526  014E22  0EF8               	movlw	-8
 19527  014E24  006F FF8C  F00B    	movff	plusw1,btemp+10
 19528  014E2A  0EF9               	movlw	-7
 19529  014E2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19530  014E32  0E94               	movlw	low _dbuf
 19531  014E34  240B               	addwf	(btemp+10)^0,w,c
 19532  014E36  6ED9               	movwf	fsr2l,c
 19533  014E38  0E03               	movlw	high _dbuf
 19534  014E3A  200C               	addwfc	(btemp+11)^0,w,c
 19535  014E3C  6EDA               	movwf	fsr2h,c
 19536  014E3E  0060  F007  FFDF   	movff	btemp,indf2
 19537                           
 19538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19539                           ;stkvar	_p @ sp[(-18)+16]
 19540  014E44  50E1               	movf	fsr1l,w,c
 19541  014E46  0FFE               	addlw	-2
 19542  014E48  6ED9               	movwf	fsr2l,c
 19543  014E4A  50E2               	movf	fsr1h,w,c
 19544  014E4C  6EDA               	movwf	fsr2h,c
 19545  014E4E  0EFF               	movlw	255
 19546  014E50  22DA               	addwfc	fsr2h,f,c
 19547  014E52  06DE               	decf	postinc2,f,c
 19548  014E54  0E00               	movlw	0
 19549  014E56  5ADD               	subwfb	postdec2,f,c
 19550                           
 19551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19552                           ;stkvar	_w @ sp[(-18)+14]
 19553  014E58  50E1               	movf	fsr1l,w,c
 19554  014E5A  0FFC               	addlw	-4
 19555  014E5C  6ED9               	movwf	fsr2l,c
 19556  014E5E  50E2               	movf	fsr1h,w,c
 19557  014E60  6EDA               	movwf	fsr2h,c
 19558  014E62  0EFF               	movlw	255
 19559  014E64  22DA               	addwfc	fsr2h,f,c
 19560  014E66  06DE               	decf	postinc2,f,c
 19561  014E68  0E00               	movlw	0
 19562  014E6A  5ADD               	subwfb	postdec2,f,c
 19563                           
 19564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19565  014E6C  0E0A               	movlw	10
 19566  014E6E  6EE6               	movwf	postinc1,c
 19567  014E70  0E00               	movlw	0
 19568  014E72  6EE6               	movwf	postinc1,c
 19569  014E74  0E00               	movlw	0
 19570  014E76  6EE6               	movwf	postinc1,c
 19571  014E78  0E00               	movlw	0
 19572  014E7A  6EE6               	movwf	postinc1,c
 19573  014E7C  0E00               	movlw	0
 19574  014E7E  6EE6               	movwf	postinc1,c
 19575  014E80  0E00               	movlw	0
 19576  014E82  6EE6               	movwf	postinc1,c
 19577  014E84  0E00               	movlw	0
 19578  014E86  6EE6               	movwf	postinc1,c
 19579  014E88  0E00               	movlw	0
 19580  014E8A  6EE6               	movwf	postinc1,c
 19581                           
 19582                           ;stkvar	_n @ sp[(-26)+2]
 19583  014E8C  50E1               	movf	fsr1l,w,c
 19584  014E8E  0FE8               	addlw	-24
 19585  014E90  6ED9               	movwf	fsr2l,c
 19586  014E92  50E2               	movf	fsr1h,w,c
 19587  014E94  6EDA               	movwf	fsr2h,c
 19588  014E96  0EFF               	movlw	255
 19589  014E98  22DA               	addwfc	fsr2h,f,c
 19590  014E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 19591  014EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 19592  014EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 19593  014EAC  006F FF7B FFE6     	movff	postinc2,postinc1
 19594  014EB2  006F FF7B FFE6     	movff	postinc2,postinc1
 19595  014EB8  006F FF7B FFE6     	movff	postinc2,postinc1
 19596  014EBE  006F FF7B FFE6     	movff	postinc2,postinc1
 19597  014EC4  006F FF7B FFE6     	movff	postinc2,postinc1
 19598  014ECA  ECBC  F0B1         	call	___aodiv	;wreg free
 19599  014ECE  52E5               	movf	postdec1,f,c
 19600  014ED0  006F FF9C  F018    	movff	indf1,btemp+23
 19601  014ED6  52E5               	movf	postdec1,f,c
 19602  014ED8  006F FF9C  F017    	movff	indf1,btemp+22
 19603  014EDE  52E5               	movf	postdec1,f,c
 19604  014EE0  006F FF9C  F016    	movff	indf1,btemp+21
 19605  014EE6  52E5               	movf	postdec1,f,c
 19606  014EE8  006F FF9C  F015    	movff	indf1,btemp+20
 19607  014EEE  52E5               	movf	postdec1,f,c
 19608  014EF0  006F FF9C  F014    	movff	indf1,btemp+19
 19609  014EF6  52E5               	movf	postdec1,f,c
 19610  014EF8  006F FF9C  F013    	movff	indf1,btemp+18
 19611  014EFE  52E5               	movf	postdec1,f,c
 19612  014F00  006F FF9C  F012    	movff	indf1,btemp+17
 19613  014F06  52E5               	movf	postdec1,f,c
 19614  014F08  006F FF9C  F011    	movff	indf1,btemp+16
 19615  014F0E  0EF8               	movlw	248
 19616  014F10  26E1               	addwf	fsr1l,f,c
 19617  014F12  0EFF               	movlw	255
 19618  014F14  22E2               	addwfc	fsr1h,f,c
 19619                           
 19620                           ;stkvar	_n @ sp[(-18)+2]
 19621  014F16  0EF0               	movlw	-16
 19622  014F18  0060  F047  FFE3   	movff	btemp+16,plusw1
 19623  014F1E  0EF1               	movlw	-15
 19624  014F20  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19625  014F26  0EF2               	movlw	-14
 19626  014F28  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19627  014F2E  0EF3               	movlw	-13
 19628  014F30  0060  F053  FFE3   	movff	btemp+19,plusw1
 19629  014F36  0EF4               	movlw	-12
 19630  014F38  0060  F057  FFE3   	movff	btemp+20,plusw1
 19631  014F3E  0EF5               	movlw	-11
 19632  014F40  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19633  014F46  0EF6               	movlw	-10
 19634  014F48  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19635  014F4E  0EF7               	movlw	-9
 19636  014F50  0060  F063  FFE3   	movff	btemp+23,plusw1
 19637  014F56                     l10883:
 19638                           
 19639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19640                           ;stkvar	_i @ sp[(-18)+10]
 19641  014F56  0EF9               	movlw	-7
 19642  014F58  BEE3               	btfsc	plusw1,7,c
 19643  014F5A  D036               	goto	u10170
 19644  014F5C  0EF9               	movlw	-7
 19645  014F5E  50E3               	movf	plusw1,w,c
 19646  014F60  E104               	bnz	u10130
 19647  014F62  0EF8               	movlw	-8
 19648  014F64  04E3               	decf	plusw1,w,c
 19649  014F66  A0D8               	btfss	status,0,c
 19650  014F68  D02F               	goto	u10170
 19651  014F6A                     u10130:
 19652                           
 19653                           ;stkvar	_n @ sp[(-18)+2]
 19654  014F6A  0EF0               	movlw	-16
 19655  014F6C  50E3               	movf	plusw1,w,c
 19656  014F6E  E115               	bnz	u10141
 19657  014F70  0EF1               	movlw	-15
 19658  014F72  50E3               	movf	plusw1,w,c
 19659  014F74  E112               	bnz	u10141
 19660  014F76  0EF2               	movlw	-14
 19661  014F78  50E3               	movf	plusw1,w,c
 19662  014F7A  E10F               	bnz	u10141
 19663  014F7C  0EF3               	movlw	-13
 19664  014F7E  50E3               	movf	plusw1,w,c
 19665  014F80  E10C               	bnz	u10141
 19666  014F82  0EF4               	movlw	-12
 19667  014F84  50E3               	movf	plusw1,w,c
 19668  014F86  E109               	bnz	u10141
 19669  014F88  0EF5               	movlw	-11
 19670  014F8A  50E3               	movf	plusw1,w,c
 19671  014F8C  E106               	bnz	u10141
 19672  014F8E  0EF6               	movlw	-10
 19673  014F90  50E3               	movf	plusw1,w,c
 19674  014F92  E103               	bnz	u10141
 19675  014F94  0EF7               	movlw	-9
 19676  014F96  50E3               	movf	plusw1,w,c
 19677  014F98  A4D8               	btfss	status,2,c
 19678  014F9A                     u10141:
 19679  014F9A  D6D4               	goto	l10873
 19680                           
 19681                           ;stkvar	_p @ sp[(-18)+16]
 19682  014F9C  0EFF               	movlw	-1
 19683  014F9E  BEE3               	btfsc	plusw1,7,c
 19684  014FA0  D007               	goto	u10150
 19685  014FA2  0EFF               	movlw	-1
 19686  014FA4  50E3               	movf	plusw1,w,c
 19687  014FA6  E103               	bnz	u10151
 19688  014FA8  0EFE               	movlw	-2
 19689  014FAA  04E3               	decf	plusw1,w,c
 19690  014FAC  B0D8               	btfsc	status,0,c
 19691  014FAE                     u10151:
 19692  014FAE  D6CA               	goto	l10873
 19693  014FB0                     u10150:
 19694                           
 19695                           ;stkvar	_w @ sp[(-18)+14]
 19696  014FB0  0EFD               	movlw	-3
 19697  014FB2  BEE3               	btfsc	plusw1,7,c
 19698  014FB4  D009               	goto	u10170
 19699  014FB6  0EFD               	movlw	-3
 19700  014FB8  50E3               	movf	plusw1,w,c
 19701  014FBA  E104               	bnz	u10160
 19702  014FBC  0EFC               	movlw	-4
 19703  014FBE  04E3               	decf	plusw1,w,c
 19704  014FC0  A0D8               	btfss	status,0,c
 19705  014FC2  D002               	goto	u10170
 19706  014FC4                     u10160:
 19707  014FC4  B225               	btfsc	_flags^0,1,c
 19708  014FC6  D6BE               	goto	l10873
 19709  014FC8                     u10170:
 19710                           
 19711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19712                           ;stkvar	_s @ sp[(-18)+12]
 19713  014FC8  0EFA               	movlw	-6
 19714  014FCA  006F FF8C  F001    	movff	plusw1,btemp
 19715  014FD0  0EFB               	movlw	-5
 19716  014FD2  50E3               	movf	plusw1,w,c
 19717  014FD4  1001               	iorwf	btemp^0,w,c
 19718  014FD6  A4D8               	btfss	status,2,c
 19719  014FD8  D002               	goto	u10190
 19720  014FDA  A425               	btfss	_flags^0,2,c
 19721  014FDC  D033               	goto	l10907
 19722  014FDE                     u10190:
 19723                           
 19724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19725                           ;stkvar	_i @ sp[(-18)+10]
 19726  014FDE  50E1               	movf	fsr1l,w,c
 19727  014FE0  0FF8               	addlw	-8
 19728  014FE2  6ED9               	movwf	fsr2l,c
 19729  014FE4  50E2               	movf	fsr1h,w,c
 19730  014FE6  6EDA               	movwf	fsr2h,c
 19731  014FE8  0EFF               	movlw	255
 19732  014FEA  22DA               	addwfc	fsr2h,f,c
 19733  014FEC  06DE               	decf	postinc2,f,c
 19734  014FEE  0E00               	movlw	0
 19735  014FF0  5ADD               	subwfb	postdec2,f,c
 19736                           
 19737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19738                           ;stkvar	_s @ sp[(-18)+12]
 19739  014FF2  0EFA               	movlw	-6
 19740  014FF4  006F FF8C  F001    	movff	plusw1,btemp
 19741  014FFA  0EFB               	movlw	-5
 19742  014FFC  50E3               	movf	plusw1,w,c
 19743  014FFE  1001               	iorwf	btemp^0,w,c
 19744  015000  A4D8               	btfss	status,2,c
 19745  015002  D002               	goto	l10903
 19746  015004  0E2B               	movlw	43
 19747  015006  D001               	goto	L21
 19748  015008                     l10903:
 19749  015008  0E2D               	movlw	45
 19750  01500A                     L21:
 19751  01500A  6E0B               	movwf	(btemp+10)^0,c
 19752  01500C  0E00               	movlw	0
 19753  01500E  6E0C               	movwf	(btemp+11)^0,c
 19754                           
 19755                           ;stkvar	_dtoa$5135 @ sp[(-18)+0]
 19756  015010  0EEE               	movlw	-18
 19757  015012  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19758  015018  0EEF               	movlw	-17
 19759  01501A  0060  F033  FFE3   	movff	btemp+11,plusw1
 19760                           
 19761                           ;stkvar	_dtoa$5135 @ sp[(-18)+0]
 19762                           ;stkvar	_i @ sp[(-18)+10]
 19763  015020  0EF8               	movlw	-8
 19764  015022  006F FF8C  F00B    	movff	plusw1,btemp+10
 19765  015028  0EF9               	movlw	-7
 19766  01502A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19767  015030  0E94               	movlw	low _dbuf
 19768  015032  240B               	addwf	(btemp+10)^0,w,c
 19769  015034  6ED9               	movwf	fsr2l,c
 19770  015036  0E03               	movlw	high _dbuf
 19771  015038  200C               	addwfc	(btemp+11)^0,w,c
 19772  01503A  6EDA               	movwf	fsr2h,c
 19773  01503C  0EEE               	movlw	-18
 19774  01503E  006F FF8F FFDF     	movff	plusw1,indf2
 19775  015044                     l10907:
 19776                           
 19777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19778                           ;stkvar	_w @ sp[(-18)+14]
 19779  015044  0EFC               	movlw	-4
 19780  015046  006F FF8F FFE6     	movff	plusw1,postinc1
 19781  01504C  006F FF8F FFE6     	movff	plusw1,postinc1
 19782                           
 19783                           ;stkvar	_i @ sp[(-20)+10]
 19784  015052  0E94               	movlw	low _dbuf
 19785  015054  6E0B               	movwf	(btemp+10)^0,c
 19786  015056  0E03               	movlw	high _dbuf
 19787  015058  6E0C               	movwf	(btemp+11)^0,c
 19788  01505A  0EF6               	movlw	-10
 19789  01505C  50E3               	movf	plusw1,w,c
 19790  01505E  260B               	addwf	(btemp+10)^0,f,c
 19791  015060  0EF7               	movlw	-9
 19792  015062  50E3               	movf	plusw1,w,c
 19793  015064  220C               	addwfc	(btemp+11)^0,f,c
 19794  015066  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19795  01506C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19796                           
 19797                           ;stkvar	_fp @ sp[(-22)+-2]
 19798  015072  0EE8               	movlw	-24
 19799  015074  006F FF8F FFE6     	movff	plusw1,postinc1
 19800  01507A  006F FF8F FFE6     	movff	plusw1,postinc1
 19801  015080  EC3D  F0C2         	call	_pad	;wreg free
 19802                           
 19803                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19804  015084  0EE4               	movlw	228
 19805  015086  26E1               	addwf	fsr1l,f,c
 19806  015088  0EFF               	movlw	255
 19807  01508A  22E2               	addwfc	fsr1h,f,c
 19808  01508C  0012               	return		;funcret
 19809  01508E                     __end_of_dtoa:
 19810                           	opt callstack 0
 19811                           
 19812 ;; *************** function _abs *****************
 19813 ;; Defined at:
 19814 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19815 ;; Parameters:    Size  Location     Type
 19816 ;;  a               2  [STACK] int 
 19817 ;; Auto vars:     Size  Location     Type
 19818 ;;		None
 19819 ;; Return value:  Size  Location     Type
 19820 ;;                  2  [STACK] int 
 19821 ;; Registers used:
 19822 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19823 ;; Tracked objects:
 19824 ;;		On entry : 0/3
 19825 ;;		On exit  : 0/0
 19826 ;;		Unchanged: 0/0
 19827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19832 ;;Total ram usage:        0 bytes
 19833 ;; Hardware stack levels used:    1
 19834 ;; Hardware stack levels required when called:   15
 19835 ;; This function calls:
 19836 ;;		Nothing
 19837 ;; This function is called by:
 19838 ;;		_dtoa
 19839 ;; This function uses a reentrant model
 19840 ;;
 19841                           
 19842                           	psect	text67
 19843  019C28                     __ptext67:
 19844                           	opt callstack 0
 19845  019C28                     _abs:
 19846                           	opt callstack 0
 19847                           
 19848                           ;stkvar	_a @ sp[(0)+-2]
 19849                           
 19850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19851                           ;incstack = 0
 19852 ;; hardware stack exceeded
 19853  019C28  0EFF               	movlw	-1
 19854  019C2A  BEE3               	btfsc	plusw1,7,c
 19855  019C2C  D007               	goto	u5510
 19856  019C2E  0EFF               	movlw	-1
 19857  019C30  50E3               	movf	plusw1,w,c
 19858  019C32  E112               	bnz	l7341
 19859  019C34  0EFE               	movlw	-2
 19860  019C36  04E3               	decf	plusw1,w,c
 19861  019C38  B0D8               	btfsc	status,0,c
 19862  019C3A  D00E               	goto	l7341
 19863  019C3C                     u5510:
 19864                           
 19865                           ;stkvar	_a @ sp[(0)+-2]
 19866  019C3C  0EFE               	movlw	-2
 19867  019C3E  006F FF8C  F001    	movff	plusw1,btemp
 19868  019C44  1E01               	comf	btemp^0,f,c
 19869  019C46  0EFF               	movlw	-1
 19870  019C48  006F FF8C  F002    	movff	plusw1,btemp+1
 19871  019C4E  1E02               	comf	(btemp+1)^0,f,c
 19872  019C50  2A01               	incf	btemp^0,f,c
 19873  019C52  B4D8               	btfsc	status,2,c
 19874  019C54  2A02               	incf	(btemp+1)^0,f,c
 19875  019C56  D008               	goto	l2947
 19876  019C58                     l7341:
 19877                           
 19878                           ;stkvar	_a @ sp[(0)+-2]
 19879  019C58  0EFE               	movlw	-2
 19880  019C5A  006F FF8C  F001    	movff	plusw1,btemp
 19881  019C60  0EFF               	movlw	-1
 19882  019C62  006F FF8C  F002    	movff	plusw1,btemp+1
 19883  019C68                     l2947:
 19884                           
 19885                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19886  019C68  52E5               	movf	postdec1,f,c
 19887  019C6A  52E5               	movf	postdec1,f,c
 19888  019C6C  0012               	return		;funcret
 19889  019C6E                     __end_of_abs:
 19890                           	opt callstack 0
 19891                           
 19892 ;; *************** function ___aomod *****************
 19893 ;; Defined at:
 19894 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19895 ;; Parameters:    Size  Location     Type
 19896 ;;  dividend        8  [STACK] long long 
 19897 ;;  divisor         8  [STACK] long long 
 19898 ;; Auto vars:     Size  Location     Type
 19899 ;;  sign            1  [STACK] unsigned char 
 19900 ;;  counter         1  [STACK] unsigned char 
 19901 ;; Return value:  Size  Location     Type
 19902 ;;                  8  [STACK] long long 
 19903 ;; Registers used:
 19904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19905 ;; Tracked objects:
 19906 ;;		On entry : 0/3
 19907 ;;		On exit  : 0/0
 19908 ;;		Unchanged: 0/0
 19909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19914 ;;Total ram usage:        0 bytes
 19915 ;; Hardware stack levels used:    1
 19916 ;; Hardware stack levels required when called:   15
 19917 ;; This function calls:
 19918 ;;		Nothing
 19919 ;; This function is called by:
 19920 ;;		_dtoa
 19921 ;; This function uses a reentrant model
 19922 ;;
 19923                           
 19924                           	psect	text68
 19925  01686C                     __ptext68:
 19926                           	opt callstack 0
 19927  01686C                     ___aomod:
 19928                           	opt callstack 0
 19929                           
 19930                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19931  01686C  52E6               	movf	postinc1,f,c
 19932  01686E  52E6               	movf	postinc1,f,c
 19933                           
 19934                           ;stkvar	_sign @ sp[(-2)+0]
 19935                           
 19936                           ;incstack = 0
 19937 ;; hardware stack exceeded
 19938  016870  0EFE               	movlw	-2
 19939  016872  6AE3               	clrf	plusw1,c
 19940                           
 19941                           ;stkvar	_dividend @ sp[(-2)+-8]
 19942  016874  0EFD               	movlw	-3
 19943  016876  AEE3               	btfss	plusw1,7,c
 19944  016878  D028               	goto	l7499
 19945                           
 19946                           ;stkvar	_dividend @ sp[(-2)+-8]
 19947                           ;stkvar	_dividend @ sp[(-2)+-8]
 19948  01687A  0EF6               	movlw	-10
 19949  01687C  6CE3               	negf	plusw1,c
 19950  01687E  0EF7               	movlw	-9
 19951  016880  1EE3               	comf	plusw1,f,c
 19952  016882  0EF8               	movlw	-8
 19953  016884  1EE3               	comf	plusw1,f,c
 19954  016886  0EF9               	movlw	-7
 19955  016888  1EE3               	comf	plusw1,f,c
 19956  01688A  0EFA               	movlw	-6
 19957  01688C  1EE3               	comf	plusw1,f,c
 19958  01688E  0EFB               	movlw	-5
 19959  016890  1EE3               	comf	plusw1,f,c
 19960  016892  0EFC               	movlw	-4
 19961  016894  1EE3               	comf	plusw1,f,c
 19962  016896  0EFD               	movlw	-3
 19963  016898  1EE3               	comf	plusw1,f,c
 19964  01689A  E314               	bnc	u5940
 19965  01689C  0EF7               	movlw	-9
 19966  01689E  2AE3               	incf	plusw1,f,c
 19967  0168A0  E311               	bnc	u5940
 19968  0168A2  0EF8               	movlw	-8
 19969  0168A4  2AE3               	incf	plusw1,f,c
 19970  0168A6  E30E               	bnc	u5940
 19971  0168A8  0EF9               	movlw	-7
 19972  0168AA  2AE3               	incf	plusw1,f,c
 19973  0168AC  E30B               	bnc	u5940
 19974  0168AE  0EFA               	movlw	-6
 19975  0168B0  2AE3               	incf	plusw1,f,c
 19976  0168B2  E308               	bnc	u5940
 19977  0168B4  0EFB               	movlw	-5
 19978  0168B6  2AE3               	incf	plusw1,f,c
 19979  0168B8  E305               	bnc	u5940
 19980  0168BA  0EFC               	movlw	-4
 19981  0168BC  2AE3               	incf	plusw1,f,c
 19982  0168BE  E302               	bnc	u5940
 19983  0168C0  0EFD               	movlw	-3
 19984  0168C2  2AE3               	incf	plusw1,f,c
 19985  0168C4                     u5940:
 19986                           
 19987                           ;stkvar	_sign @ sp[(-2)+0]
 19988  0168C4  0EFE               	movlw	-2
 19989  0168C6  6AE3               	clrf	plusw1,c
 19990  0168C8  2AE3               	incf	plusw1,f,c
 19991  0168CA                     l7499:
 19992                           
 19993                           ;stkvar	_divisor @ sp[(-2)+-16]
 19994  0168CA  0EF5               	movlw	-11
 19995  0168CC  AEE3               	btfss	plusw1,7,c
 19996  0168CE  D025               	goto	u5960
 19997                           
 19998                           ;stkvar	_divisor @ sp[(-2)+-16]
 19999                           ;stkvar	_divisor @ sp[(-2)+-16]
 20000  0168D0  0EEE               	movlw	-18
 20001  0168D2  6CE3               	negf	plusw1,c
 20002  0168D4  0EEF               	movlw	-17
 20003  0168D6  1EE3               	comf	plusw1,f,c
 20004  0168D8  0EF0               	movlw	-16
 20005  0168DA  1EE3               	comf	plusw1,f,c
 20006  0168DC  0EF1               	movlw	-15
 20007  0168DE  1EE3               	comf	plusw1,f,c
 20008  0168E0  0EF2               	movlw	-14
 20009  0168E2  1EE3               	comf	plusw1,f,c
 20010  0168E4  0EF3               	movlw	-13
 20011  0168E6  1EE3               	comf	plusw1,f,c
 20012  0168E8  0EF4               	movlw	-12
 20013  0168EA  1EE3               	comf	plusw1,f,c
 20014  0168EC  0EF5               	movlw	-11
 20015  0168EE  1EE3               	comf	plusw1,f,c
 20016  0168F0  E314               	bnc	u5960
 20017  0168F2  0EEF               	movlw	-17
 20018  0168F4  2AE3               	incf	plusw1,f,c
 20019  0168F6  E311               	bnc	u5960
 20020  0168F8  0EF0               	movlw	-16
 20021  0168FA  2AE3               	incf	plusw1,f,c
 20022  0168FC  E30E               	bnc	u5960
 20023  0168FE  0EF1               	movlw	-15
 20024  016900  2AE3               	incf	plusw1,f,c
 20025  016902  E30B               	bnc	u5960
 20026  016904  0EF2               	movlw	-14
 20027  016906  2AE3               	incf	plusw1,f,c
 20028  016908  E308               	bnc	u5960
 20029  01690A  0EF3               	movlw	-13
 20030  01690C  2AE3               	incf	plusw1,f,c
 20031  01690E  E305               	bnc	u5960
 20032  016910  0EF4               	movlw	-12
 20033  016912  2AE3               	incf	plusw1,f,c
 20034  016914  E302               	bnc	u5960
 20035  016916  0EF5               	movlw	-11
 20036  016918  2AE3               	incf	plusw1,f,c
 20037  01691A                     u5960:
 20038                           
 20039                           ;stkvar	_divisor @ sp[(-2)+-16]
 20040  01691A  0EEE               	movlw	-18
 20041  01691C  50E3               	movf	plusw1,w,c
 20042  01691E  E116               	bnz	u5970
 20043  016920  0EEF               	movlw	-17
 20044  016922  50E3               	movf	plusw1,w,c
 20045  016924  E113               	bnz	u5970
 20046  016926  0EF0               	movlw	-16
 20047  016928  50E3               	movf	plusw1,w,c
 20048  01692A  E110               	bnz	u5970
 20049  01692C  0EF1               	movlw	-15
 20050  01692E  50E3               	movf	plusw1,w,c
 20051  016930  E10D               	bnz	u5970
 20052  016932  0EF2               	movlw	-14
 20053  016934  50E3               	movf	plusw1,w,c
 20054  016936  E10A               	bnz	u5970
 20055  016938  0EF3               	movlw	-13
 20056  01693A  50E3               	movf	plusw1,w,c
 20057  01693C  E107               	bnz	u5970
 20058  01693E  0EF4               	movlw	-12
 20059  016940  50E3               	movf	plusw1,w,c
 20060  016942  E104               	bnz	u5970
 20061  016944  0EF5               	movlw	-11
 20062  016946  50E3               	movf	plusw1,w,c
 20063  016948  B4D8               	btfsc	status,2,c
 20064  01694A  D075               	goto	u6000
 20065  01694C                     u5970:
 20066                           
 20067                           ;stkvar	_counter @ sp[(-2)+1]
 20068  01694C  0EFF               	movlw	-1
 20069  01694E  6AE3               	clrf	plusw1,c
 20070  016950  D012               	goto	L22
 20071  016952                     l7507:
 20072                           
 20073                           ;stkvar	_divisor @ sp[(-2)+-16]
 20074  016952  90D8               	bcf	status,0,c
 20075  016954  0EEE               	movlw	-18
 20076  016956  36E3               	rlcf	plusw1,f,c
 20077  016958  0EEF               	movlw	-17
 20078  01695A  36E3               	rlcf	plusw1,f,c
 20079  01695C  0EF0               	movlw	-16
 20080  01695E  36E3               	rlcf	plusw1,f,c
 20081  016960  0EF1               	movlw	-15
 20082  016962  36E3               	rlcf	plusw1,f,c
 20083  016964  0EF2               	movlw	-14
 20084  016966  36E3               	rlcf	plusw1,f,c
 20085  016968  0EF3               	movlw	-13
 20086  01696A  36E3               	rlcf	plusw1,f,c
 20087  01696C  0EF4               	movlw	-12
 20088  01696E  36E3               	rlcf	plusw1,f,c
 20089  016970  0EF5               	movlw	-11
 20090  016972  36E3               	rlcf	plusw1,f,c
 20091                           
 20092                           ;stkvar	_counter @ sp[(-2)+1]
 20093  016974  0EFF               	movlw	-1
 20094  016976                     L22:
 20095  016976  2AE3               	incf	plusw1,f,c
 20096                           
 20097                           ;stkvar	_divisor @ sp[(-2)+-16]
 20098  016978  0EF5               	movlw	-11
 20099  01697A  AEE3               	btfss	plusw1,7,c
 20100  01697C  D7EA               	goto	l7507
 20101  01697E                     u5980:
 20102                           
 20103                           ;stkvar	_divisor @ sp[(-2)+-16]
 20104                           ;stkvar	_dividend @ sp[(-2)+-8]
 20105  01697E  50E1               	movf	fsr1l,w,c
 20106  016980  0FF6               	addlw	-10
 20107  016982  6ED9               	movwf	fsr2l,c
 20108  016984  50E2               	movf	fsr1h,w,c
 20109  016986  6EDA               	movwf	fsr2h,c
 20110  016988  0EFF               	movlw	255
 20111  01698A  22DA               	addwfc	fsr2h,f,c
 20112  01698C  0EEE               	movlw	-18
 20113  01698E  50E3               	movf	plusw1,w,c
 20114  016990  5CDE               	subwf	postinc2,w,c
 20115  016992  0EEF               	movlw	-17
 20116  016994  50E3               	movf	plusw1,w,c
 20117  016996  58DE               	subwfb	postinc2,w,c
 20118  016998  0EF0               	movlw	-16
 20119  01699A  50E3               	movf	plusw1,w,c
 20120  01699C  58DE               	subwfb	postinc2,w,c
 20121  01699E  0EF1               	movlw	-15
 20122  0169A0  50E3               	movf	plusw1,w,c
 20123  0169A2  58DE               	subwfb	postinc2,w,c
 20124  0169A4  0EF2               	movlw	-14
 20125  0169A6  50E3               	movf	plusw1,w,c
 20126  0169A8  58DE               	subwfb	postinc2,w,c
 20127  0169AA  0EF3               	movlw	-13
 20128  0169AC  50E3               	movf	plusw1,w,c
 20129  0169AE  58DE               	subwfb	postinc2,w,c
 20130  0169B0  0EF4               	movlw	-12
 20131  0169B2  50E3               	movf	plusw1,w,c
 20132  0169B4  58DE               	subwfb	postinc2,w,c
 20133  0169B6  0EF5               	movlw	-11
 20134  0169B8  50E3               	movf	plusw1,w,c
 20135  0169BA  58DE               	subwfb	postinc2,w,c
 20136  0169BC  A0D8               	btfss	status,0,c
 20137  0169BE  D01F               	goto	l7515
 20138                           
 20139                           ;stkvar	_divisor @ sp[(-2)+-16]
 20140                           ;stkvar	_dividend @ sp[(-2)+-8]
 20141  0169C0  50E1               	movf	fsr1l,w,c
 20142  0169C2  0FF6               	addlw	-10
 20143  0169C4  6ED9               	movwf	fsr2l,c
 20144  0169C6  50E2               	movf	fsr1h,w,c
 20145  0169C8  6EDA               	movwf	fsr2h,c
 20146  0169CA  0EFF               	movlw	255
 20147  0169CC  22DA               	addwfc	fsr2h,f,c
 20148  0169CE  0EEE               	movlw	-18
 20149  0169D0  50E3               	movf	plusw1,w,c
 20150  0169D2  5EDE               	subwf	postinc2,f,c
 20151  0169D4  0EEF               	movlw	-17
 20152  0169D6  50E3               	movf	plusw1,w,c
 20153  0169D8  5ADE               	subwfb	postinc2,f,c
 20154  0169DA  0EF0               	movlw	-16
 20155  0169DC  50E3               	movf	plusw1,w,c
 20156  0169DE  5ADE               	subwfb	postinc2,f,c
 20157  0169E0  0EF1               	movlw	-15
 20158  0169E2  50E3               	movf	plusw1,w,c
 20159  0169E4  5ADE               	subwfb	postinc2,f,c
 20160  0169E6  0EF2               	movlw	-14
 20161  0169E8  50E3               	movf	plusw1,w,c
 20162  0169EA  5ADE               	subwfb	postinc2,f,c
 20163  0169EC  0EF3               	movlw	-13
 20164  0169EE  50E3               	movf	plusw1,w,c
 20165  0169F0  5ADE               	subwfb	postinc2,f,c
 20166  0169F2  0EF4               	movlw	-12
 20167  0169F4  50E3               	movf	plusw1,w,c
 20168  0169F6  5ADE               	subwfb	postinc2,f,c
 20169  0169F8  0EF5               	movlw	-11
 20170  0169FA  50E3               	movf	plusw1,w,c
 20171  0169FC  5ADE               	subwfb	postinc2,f,c
 20172  0169FE                     l7515:
 20173                           
 20174                           ;stkvar	_divisor @ sp[(-2)+-16]
 20175  0169FE  90D8               	bcf	status,0,c
 20176  016A00  0EF5               	movlw	-11
 20177  016A02  32E3               	rrcf	plusw1,f,c
 20178  016A04  0EF4               	movlw	-12
 20179  016A06  32E3               	rrcf	plusw1,f,c
 20180  016A08  0EF3               	movlw	-13
 20181  016A0A  32E3               	rrcf	plusw1,f,c
 20182  016A0C  0EF2               	movlw	-14
 20183  016A0E  32E3               	rrcf	plusw1,f,c
 20184  016A10  0EF1               	movlw	-15
 20185  016A12  32E3               	rrcf	plusw1,f,c
 20186  016A14  0EF0               	movlw	-16
 20187  016A16  32E3               	rrcf	plusw1,f,c
 20188  016A18  0EEF               	movlw	-17
 20189  016A1A  32E3               	rrcf	plusw1,f,c
 20190  016A1C  0EEE               	movlw	-18
 20191  016A1E  32E3               	rrcf	plusw1,f,c
 20192                           
 20193                           ;stkvar	_counter @ sp[(-2)+1]
 20194  016A20  0EFF               	movlw	-1
 20195  016A22  50E3               	movf	plusw1,w,c
 20196  016A24  6E01               	movwf	btemp^0,c
 20197  016A26  0E01               	movlw	1
 20198  016A28  5E01               	subwf	btemp^0,f,c
 20199  016A2A  0EFF               	movlw	-1
 20200  016A2C  0060  F007  FFE3   	movff	btemp,plusw1
 20201  016A32  A4D8               	btfss	status,2,c
 20202  016A34  D7A4               	goto	u5980
 20203  016A36                     u6000:
 20204                           
 20205                           ;stkvar	_sign @ sp[(-2)+0]
 20206  016A36  0EFE               	movlw	-2
 20207  016A38  50E3               	movf	plusw1,w,c
 20208  016A3A  B4D8               	btfsc	status,2,c
 20209  016A3C  D025               	goto	u6020
 20210                           
 20211                           ;stkvar	_dividend @ sp[(-2)+-8]
 20212                           ;stkvar	_dividend @ sp[(-2)+-8]
 20213  016A3E  0EF6               	movlw	-10
 20214  016A40  6CE3               	negf	plusw1,c
 20215  016A42  0EF7               	movlw	-9
 20216  016A44  1EE3               	comf	plusw1,f,c
 20217  016A46  0EF8               	movlw	-8
 20218  016A48  1EE3               	comf	plusw1,f,c
 20219  016A4A  0EF9               	movlw	-7
 20220  016A4C  1EE3               	comf	plusw1,f,c
 20221  016A4E  0EFA               	movlw	-6
 20222  016A50  1EE3               	comf	plusw1,f,c
 20223  016A52  0EFB               	movlw	-5
 20224  016A54  1EE3               	comf	plusw1,f,c
 20225  016A56  0EFC               	movlw	-4
 20226  016A58  1EE3               	comf	plusw1,f,c
 20227  016A5A  0EFD               	movlw	-3
 20228  016A5C  1EE3               	comf	plusw1,f,c
 20229  016A5E  E314               	bnc	u6020
 20230  016A60  0EF7               	movlw	-9
 20231  016A62  2AE3               	incf	plusw1,f,c
 20232  016A64  E311               	bnc	u6020
 20233  016A66  0EF8               	movlw	-8
 20234  016A68  2AE3               	incf	plusw1,f,c
 20235  016A6A  E30E               	bnc	u6020
 20236  016A6C  0EF9               	movlw	-7
 20237  016A6E  2AE3               	incf	plusw1,f,c
 20238  016A70  E30B               	bnc	u6020
 20239  016A72  0EFA               	movlw	-6
 20240  016A74  2AE3               	incf	plusw1,f,c
 20241  016A76  E308               	bnc	u6020
 20242  016A78  0EFB               	movlw	-5
 20243  016A7A  2AE3               	incf	plusw1,f,c
 20244  016A7C  E305               	bnc	u6020
 20245  016A7E  0EFC               	movlw	-4
 20246  016A80  2AE3               	incf	plusw1,f,c
 20247  016A82  E302               	bnc	u6020
 20248  016A84  0EFD               	movlw	-3
 20249  016A86  2AE3               	incf	plusw1,f,c
 20250  016A88                     u6020:
 20251                           
 20252                           ;stkvar	_dividend @ sp[(-2)+-8]
 20253  016A88  0EF6               	movlw	246
 20254  016A8A  24E1               	addwf	fsr1l,w,c
 20255  016A8C  6ED9               	movwf	fsr2l,c
 20256  016A8E  0EFF               	movlw	255
 20257  016A90  20E2               	addwfc	fsr1h,w,c
 20258  016A92  6EDA               	movwf	fsr2h,c
 20259                           
 20260                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20261  016A94  0E08               	movlw	8
 20262  016A96  6E01               	movwf	btemp^0,c
 20263  016A98  0EF6               	movlw	-10
 20264  016A9A                     us603999:
 20265  016A9A  006F FF7B FFE3     	movff	postinc2,plusw1
 20266  016AA0  28E8               	incf	wreg,w,c
 20267  016AA2  2E01               	decfsz	btemp^0,f,c
 20268  016AA4  D7FA               	bra	us603999
 20269                           
 20270                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20271  016AA6  52E5               	movf	postdec1,f,c
 20272  016AA8  52E5               	movf	postdec1,f,c
 20273  016AAA  0012               	return		;funcret
 20274  016AAC                     __end_of___aomod:
 20275                           	opt callstack 0
 20276                           
 20277 ;; *************** function ___aodiv *****************
 20278 ;; Defined at:
 20279 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20280 ;; Parameters:    Size  Location     Type
 20281 ;;  dividend        8  [STACK] long long 
 20282 ;;  divisor         8  [STACK] long long 
 20283 ;; Auto vars:     Size  Location     Type
 20284 ;;  quotient        8  [STACK] long long 
 20285 ;;  sign            1  [STACK] unsigned char 
 20286 ;;  counter         1  [STACK] unsigned char 
 20287 ;; Return value:  Size  Location     Type
 20288 ;;                  8  [STACK] long long 
 20289 ;; Registers used:
 20290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20291 ;; Tracked objects:
 20292 ;;		On entry : 0/3
 20293 ;;		On exit  : 0/0
 20294 ;;		Unchanged: 0/0
 20295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20300 ;;Total ram usage:        0 bytes
 20301 ;; Hardware stack levels used:    1
 20302 ;; Hardware stack levels required when called:   15
 20303 ;; This function calls:
 20304 ;;		Nothing
 20305 ;; This function is called by:
 20306 ;;		_dtoa
 20307 ;; This function uses a reentrant model
 20308 ;;
 20309                           
 20310                           	psect	text69
 20311  016378                     __ptext69:
 20312                           	opt callstack 0
 20313  016378                     ___aodiv:
 20314                           	opt callstack 0
 20315                           
 20316                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20317  016378  0E0A               	movlw	10
 20318  01637A  26E1               	addwf	fsr1l,f,c
 20319  01637C  0E00               	movlw	0
 20320  01637E  22E2               	addwfc	fsr1h,f,c
 20321                           
 20322                           ;stkvar	_sign @ sp[(-10)+8]
 20323                           
 20324                           ;incstack = 0
 20325 ;; hardware stack exceeded
 20326  016380  0EFE               	movlw	-2
 20327  016382  6AE3               	clrf	plusw1,c
 20328                           
 20329                           ;stkvar	_divisor @ sp[(-10)+-16]
 20330  016384  0EED               	movlw	-19
 20331  016386  AEE3               	btfss	plusw1,7,c
 20332  016388  D028               	goto	l7455
 20333                           
 20334                           ;stkvar	_divisor @ sp[(-10)+-16]
 20335                           ;stkvar	_divisor @ sp[(-10)+-16]
 20336  01638A  0EE6               	movlw	-26
 20337  01638C  6CE3               	negf	plusw1,c
 20338  01638E  0EE7               	movlw	-25
 20339  016390  1EE3               	comf	plusw1,f,c
 20340  016392  0EE8               	movlw	-24
 20341  016394  1EE3               	comf	plusw1,f,c
 20342  016396  0EE9               	movlw	-23
 20343  016398  1EE3               	comf	plusw1,f,c
 20344  01639A  0EEA               	movlw	-22
 20345  01639C  1EE3               	comf	plusw1,f,c
 20346  01639E  0EEB               	movlw	-21
 20347  0163A0  1EE3               	comf	plusw1,f,c
 20348  0163A2  0EEC               	movlw	-20
 20349  0163A4  1EE3               	comf	plusw1,f,c
 20350  0163A6  0EED               	movlw	-19
 20351  0163A8  1EE3               	comf	plusw1,f,c
 20352  0163AA  E314               	bnc	u5820
 20353  0163AC  0EE7               	movlw	-25
 20354  0163AE  2AE3               	incf	plusw1,f,c
 20355  0163B0  E311               	bnc	u5820
 20356  0163B2  0EE8               	movlw	-24
 20357  0163B4  2AE3               	incf	plusw1,f,c
 20358  0163B6  E30E               	bnc	u5820
 20359  0163B8  0EE9               	movlw	-23
 20360  0163BA  2AE3               	incf	plusw1,f,c
 20361  0163BC  E30B               	bnc	u5820
 20362  0163BE  0EEA               	movlw	-22
 20363  0163C0  2AE3               	incf	plusw1,f,c
 20364  0163C2  E308               	bnc	u5820
 20365  0163C4  0EEB               	movlw	-21
 20366  0163C6  2AE3               	incf	plusw1,f,c
 20367  0163C8  E305               	bnc	u5820
 20368  0163CA  0EEC               	movlw	-20
 20369  0163CC  2AE3               	incf	plusw1,f,c
 20370  0163CE  E302               	bnc	u5820
 20371  0163D0  0EED               	movlw	-19
 20372  0163D2  2AE3               	incf	plusw1,f,c
 20373  0163D4                     u5820:
 20374                           
 20375                           ;stkvar	_sign @ sp[(-10)+8]
 20376  0163D4  0EFE               	movlw	-2
 20377  0163D6  6AE3               	clrf	plusw1,c
 20378  0163D8  2AE3               	incf	plusw1,f,c
 20379  0163DA                     l7455:
 20380                           
 20381                           ;stkvar	_dividend @ sp[(-10)+-8]
 20382  0163DA  0EF5               	movlw	-11
 20383  0163DC  AEE3               	btfss	plusw1,7,c
 20384  0163DE  D027               	goto	l7461
 20385                           
 20386                           ;stkvar	_dividend @ sp[(-10)+-8]
 20387                           ;stkvar	_dividend @ sp[(-10)+-8]
 20388  0163E0  0EEE               	movlw	-18
 20389  0163E2  6CE3               	negf	plusw1,c
 20390  0163E4  0EEF               	movlw	-17
 20391  0163E6  1EE3               	comf	plusw1,f,c
 20392  0163E8  0EF0               	movlw	-16
 20393  0163EA  1EE3               	comf	plusw1,f,c
 20394  0163EC  0EF1               	movlw	-15
 20395  0163EE  1EE3               	comf	plusw1,f,c
 20396  0163F0  0EF2               	movlw	-14
 20397  0163F2  1EE3               	comf	plusw1,f,c
 20398  0163F4  0EF3               	movlw	-13
 20399  0163F6  1EE3               	comf	plusw1,f,c
 20400  0163F8  0EF4               	movlw	-12
 20401  0163FA  1EE3               	comf	plusw1,f,c
 20402  0163FC  0EF5               	movlw	-11
 20403  0163FE  1EE3               	comf	plusw1,f,c
 20404  016400  E314               	bnc	u5840
 20405  016402  0EEF               	movlw	-17
 20406  016404  2AE3               	incf	plusw1,f,c
 20407  016406  E311               	bnc	u5840
 20408  016408  0EF0               	movlw	-16
 20409  01640A  2AE3               	incf	plusw1,f,c
 20410  01640C  E30E               	bnc	u5840
 20411  01640E  0EF1               	movlw	-15
 20412  016410  2AE3               	incf	plusw1,f,c
 20413  016412  E30B               	bnc	u5840
 20414  016414  0EF2               	movlw	-14
 20415  016416  2AE3               	incf	plusw1,f,c
 20416  016418  E308               	bnc	u5840
 20417  01641A  0EF3               	movlw	-13
 20418  01641C  2AE3               	incf	plusw1,f,c
 20419  01641E  E305               	bnc	u5840
 20420  016420  0EF4               	movlw	-12
 20421  016422  2AE3               	incf	plusw1,f,c
 20422  016424  E302               	bnc	u5840
 20423  016426  0EF5               	movlw	-11
 20424  016428  2AE3               	incf	plusw1,f,c
 20425  01642A                     u5840:
 20426                           
 20427                           ;stkvar	_sign @ sp[(-10)+8]
 20428  01642A  0EFE               	movlw	-2
 20429  01642C  70E3               	btg	plusw1,0,c
 20430  01642E                     l7461:
 20431                           
 20432                           ;stkvar	_quotient @ sp[(-10)+0]
 20433  01642E  0E07               	movlw	7
 20434  016430  6E01               	movwf	btemp^0,c
 20435  016432  0EF6               	movlw	-10
 20436  016434                     u5851:
 20437  016434  6AE3               	clrf	plusw1,c
 20438  016436  2AE8               	incf	wreg,f,c
 20439  016438  0601               	decf	btemp^0,f,c
 20440  01643A  E2FC               	bc	u5851
 20441                           
 20442                           ;stkvar	_divisor @ sp[(-10)+-16]
 20443  01643C  0EE6               	movlw	-26
 20444  01643E  50E3               	movf	plusw1,w,c
 20445  016440  E116               	bnz	u5860
 20446  016442  0EE7               	movlw	-25
 20447  016444  50E3               	movf	plusw1,w,c
 20448  016446  E113               	bnz	u5860
 20449  016448  0EE8               	movlw	-24
 20450  01644A  50E3               	movf	plusw1,w,c
 20451  01644C  E110               	bnz	u5860
 20452  01644E  0EE9               	movlw	-23
 20453  016450  50E3               	movf	plusw1,w,c
 20454  016452  E10D               	bnz	u5860
 20455  016454  0EEA               	movlw	-22
 20456  016456  50E3               	movf	plusw1,w,c
 20457  016458  E10A               	bnz	u5860
 20458  01645A  0EEB               	movlw	-21
 20459  01645C  50E3               	movf	plusw1,w,c
 20460  01645E  E107               	bnz	u5860
 20461  016460  0EEC               	movlw	-20
 20462  016462  50E3               	movf	plusw1,w,c
 20463  016464  E104               	bnz	u5860
 20464  016466  0EED               	movlw	-19
 20465  016468  50E3               	movf	plusw1,w,c
 20466  01646A  B4D8               	btfsc	status,2,c
 20467  01646C  D088               	goto	u5890
 20468  01646E                     u5860:
 20469                           
 20470                           ;stkvar	_counter @ sp[(-10)+9]
 20471  01646E  0EFF               	movlw	-1
 20472  016470  6AE3               	clrf	plusw1,c
 20473  016472  D012               	goto	L23
 20474  016474                     l7467:
 20475                           
 20476                           ;stkvar	_divisor @ sp[(-10)+-16]
 20477  016474  90D8               	bcf	status,0,c
 20478  016476  0EE6               	movlw	-26
 20479  016478  36E3               	rlcf	plusw1,f,c
 20480  01647A  0EE7               	movlw	-25
 20481  01647C  36E3               	rlcf	plusw1,f,c
 20482  01647E  0EE8               	movlw	-24
 20483  016480  36E3               	rlcf	plusw1,f,c
 20484  016482  0EE9               	movlw	-23
 20485  016484  36E3               	rlcf	plusw1,f,c
 20486  016486  0EEA               	movlw	-22
 20487  016488  36E3               	rlcf	plusw1,f,c
 20488  01648A  0EEB               	movlw	-21
 20489  01648C  36E3               	rlcf	plusw1,f,c
 20490  01648E  0EEC               	movlw	-20
 20491  016490  36E3               	rlcf	plusw1,f,c
 20492  016492  0EED               	movlw	-19
 20493  016494  36E3               	rlcf	plusw1,f,c
 20494                           
 20495                           ;stkvar	_counter @ sp[(-10)+9]
 20496  016496  0EFF               	movlw	-1
 20497  016498                     L23:
 20498  016498  2AE3               	incf	plusw1,f,c
 20499                           
 20500                           ;stkvar	_divisor @ sp[(-10)+-16]
 20501  01649A  0EED               	movlw	-19
 20502  01649C  AEE3               	btfss	plusw1,7,c
 20503  01649E  D7EA               	goto	l7467
 20504  0164A0                     u5870:
 20505                           
 20506                           ;stkvar	_quotient @ sp[(-10)+0]
 20507  0164A0  90D8               	bcf	status,0,c
 20508  0164A2  0EF6               	movlw	-10
 20509  0164A4  36E3               	rlcf	plusw1,f,c
 20510  0164A6  0EF7               	movlw	-9
 20511  0164A8  36E3               	rlcf	plusw1,f,c
 20512  0164AA  0EF8               	movlw	-8
 20513  0164AC  36E3               	rlcf	plusw1,f,c
 20514  0164AE  0EF9               	movlw	-7
 20515  0164B0  36E3               	rlcf	plusw1,f,c
 20516  0164B2  0EFA               	movlw	-6
 20517  0164B4  36E3               	rlcf	plusw1,f,c
 20518  0164B6  0EFB               	movlw	-5
 20519  0164B8  36E3               	rlcf	plusw1,f,c
 20520  0164BA  0EFC               	movlw	-4
 20521  0164BC  36E3               	rlcf	plusw1,f,c
 20522  0164BE  0EFD               	movlw	-3
 20523  0164C0  36E3               	rlcf	plusw1,f,c
 20524                           
 20525                           ;stkvar	_divisor @ sp[(-10)+-16]
 20526                           ;stkvar	_dividend @ sp[(-10)+-8]
 20527  0164C2  50E1               	movf	fsr1l,w,c
 20528  0164C4  0FEE               	addlw	-18
 20529  0164C6  6ED9               	movwf	fsr2l,c
 20530  0164C8  50E2               	movf	fsr1h,w,c
 20531  0164CA  6EDA               	movwf	fsr2h,c
 20532  0164CC  0EFF               	movlw	255
 20533  0164CE  22DA               	addwfc	fsr2h,f,c
 20534  0164D0  0EE6               	movlw	-26
 20535  0164D2  50E3               	movf	plusw1,w,c
 20536  0164D4  5CDE               	subwf	postinc2,w,c
 20537  0164D6  0EE7               	movlw	-25
 20538  0164D8  50E3               	movf	plusw1,w,c
 20539  0164DA  58DE               	subwfb	postinc2,w,c
 20540  0164DC  0EE8               	movlw	-24
 20541  0164DE  50E3               	movf	plusw1,w,c
 20542  0164E0  58DE               	subwfb	postinc2,w,c
 20543  0164E2  0EE9               	movlw	-23
 20544  0164E4  50E3               	movf	plusw1,w,c
 20545  0164E6  58DE               	subwfb	postinc2,w,c
 20546  0164E8  0EEA               	movlw	-22
 20547  0164EA  50E3               	movf	plusw1,w,c
 20548  0164EC  58DE               	subwfb	postinc2,w,c
 20549  0164EE  0EEB               	movlw	-21
 20550  0164F0  50E3               	movf	plusw1,w,c
 20551  0164F2  58DE               	subwfb	postinc2,w,c
 20552  0164F4  0EEC               	movlw	-20
 20553  0164F6  50E3               	movf	plusw1,w,c
 20554  0164F8  58DE               	subwfb	postinc2,w,c
 20555  0164FA  0EED               	movlw	-19
 20556  0164FC  50E3               	movf	plusw1,w,c
 20557  0164FE  58DE               	subwfb	postinc2,w,c
 20558  016500  A0D8               	btfss	status,0,c
 20559  016502  D021               	goto	l7479
 20560                           
 20561                           ;stkvar	_divisor @ sp[(-10)+-16]
 20562                           ;stkvar	_dividend @ sp[(-10)+-8]
 20563  016504  50E1               	movf	fsr1l,w,c
 20564  016506  0FEE               	addlw	-18
 20565  016508  6ED9               	movwf	fsr2l,c
 20566  01650A  50E2               	movf	fsr1h,w,c
 20567  01650C  6EDA               	movwf	fsr2h,c
 20568  01650E  0EFF               	movlw	255
 20569  016510  22DA               	addwfc	fsr2h,f,c
 20570  016512  0EE6               	movlw	-26
 20571  016514  50E3               	movf	plusw1,w,c
 20572  016516  5EDE               	subwf	postinc2,f,c
 20573  016518  0EE7               	movlw	-25
 20574  01651A  50E3               	movf	plusw1,w,c
 20575  01651C  5ADE               	subwfb	postinc2,f,c
 20576  01651E  0EE8               	movlw	-24
 20577  016520  50E3               	movf	plusw1,w,c
 20578  016522  5ADE               	subwfb	postinc2,f,c
 20579  016524  0EE9               	movlw	-23
 20580  016526  50E3               	movf	plusw1,w,c
 20581  016528  5ADE               	subwfb	postinc2,f,c
 20582  01652A  0EEA               	movlw	-22
 20583  01652C  50E3               	movf	plusw1,w,c
 20584  01652E  5ADE               	subwfb	postinc2,f,c
 20585  016530  0EEB               	movlw	-21
 20586  016532  50E3               	movf	plusw1,w,c
 20587  016534  5ADE               	subwfb	postinc2,f,c
 20588  016536  0EEC               	movlw	-20
 20589  016538  50E3               	movf	plusw1,w,c
 20590  01653A  5ADE               	subwfb	postinc2,f,c
 20591  01653C  0EED               	movlw	-19
 20592  01653E  50E3               	movf	plusw1,w,c
 20593  016540  5ADE               	subwfb	postinc2,f,c
 20594                           
 20595                           ;stkvar	_quotient @ sp[(-10)+0]
 20596  016542  0EF6               	movlw	-10
 20597  016544  80E3               	bsf	plusw1,0,c
 20598  016546                     l7479:
 20599                           
 20600                           ;stkvar	_divisor @ sp[(-10)+-16]
 20601  016546  90D8               	bcf	status,0,c
 20602  016548  0EED               	movlw	-19
 20603  01654A  32E3               	rrcf	plusw1,f,c
 20604  01654C  0EEC               	movlw	-20
 20605  01654E  32E3               	rrcf	plusw1,f,c
 20606  016550  0EEB               	movlw	-21
 20607  016552  32E3               	rrcf	plusw1,f,c
 20608  016554  0EEA               	movlw	-22
 20609  016556  32E3               	rrcf	plusw1,f,c
 20610  016558  0EE9               	movlw	-23
 20611  01655A  32E3               	rrcf	plusw1,f,c
 20612  01655C  0EE8               	movlw	-24
 20613  01655E  32E3               	rrcf	plusw1,f,c
 20614  016560  0EE7               	movlw	-25
 20615  016562  32E3               	rrcf	plusw1,f,c
 20616  016564  0EE6               	movlw	-26
 20617  016566  32E3               	rrcf	plusw1,f,c
 20618                           
 20619                           ;stkvar	_counter @ sp[(-10)+9]
 20620  016568  0EFF               	movlw	-1
 20621  01656A  50E3               	movf	plusw1,w,c
 20622  01656C  6E01               	movwf	btemp^0,c
 20623  01656E  0E01               	movlw	1
 20624  016570  5E01               	subwf	btemp^0,f,c
 20625  016572  0EFF               	movlw	-1
 20626  016574  0060  F007  FFE3   	movff	btemp,plusw1
 20627  01657A  A4D8               	btfss	status,2,c
 20628  01657C  D791               	goto	u5870
 20629  01657E                     u5890:
 20630                           
 20631                           ;stkvar	_sign @ sp[(-10)+8]
 20632  01657E  0EFE               	movlw	-2
 20633  016580  50E3               	movf	plusw1,w,c
 20634  016582  B4D8               	btfsc	status,2,c
 20635  016584  D025               	goto	u5910
 20636                           
 20637                           ;stkvar	_quotient @ sp[(-10)+0]
 20638                           ;stkvar	_quotient @ sp[(-10)+0]
 20639  016586  0EF6               	movlw	-10
 20640  016588  6CE3               	negf	plusw1,c
 20641  01658A  0EF7               	movlw	-9
 20642  01658C  1EE3               	comf	plusw1,f,c
 20643  01658E  0EF8               	movlw	-8
 20644  016590  1EE3               	comf	plusw1,f,c
 20645  016592  0EF9               	movlw	-7
 20646  016594  1EE3               	comf	plusw1,f,c
 20647  016596  0EFA               	movlw	-6
 20648  016598  1EE3               	comf	plusw1,f,c
 20649  01659A  0EFB               	movlw	-5
 20650  01659C  1EE3               	comf	plusw1,f,c
 20651  01659E  0EFC               	movlw	-4
 20652  0165A0  1EE3               	comf	plusw1,f,c
 20653  0165A2  0EFD               	movlw	-3
 20654  0165A4  1EE3               	comf	plusw1,f,c
 20655  0165A6  E314               	bnc	u5910
 20656  0165A8  0EF7               	movlw	-9
 20657  0165AA  2AE3               	incf	plusw1,f,c
 20658  0165AC  E311               	bnc	u5910
 20659  0165AE  0EF8               	movlw	-8
 20660  0165B0  2AE3               	incf	plusw1,f,c
 20661  0165B2  E30E               	bnc	u5910
 20662  0165B4  0EF9               	movlw	-7
 20663  0165B6  2AE3               	incf	plusw1,f,c
 20664  0165B8  E30B               	bnc	u5910
 20665  0165BA  0EFA               	movlw	-6
 20666  0165BC  2AE3               	incf	plusw1,f,c
 20667  0165BE  E308               	bnc	u5910
 20668  0165C0  0EFB               	movlw	-5
 20669  0165C2  2AE3               	incf	plusw1,f,c
 20670  0165C4  E305               	bnc	u5910
 20671  0165C6  0EFC               	movlw	-4
 20672  0165C8  2AE3               	incf	plusw1,f,c
 20673  0165CA  E302               	bnc	u5910
 20674  0165CC  0EFD               	movlw	-3
 20675  0165CE  2AE3               	incf	plusw1,f,c
 20676  0165D0                     u5910:
 20677                           
 20678                           ;stkvar	_quotient @ sp[(-10)+0]
 20679  0165D0  0EF6               	movlw	246
 20680  0165D2  24E1               	addwf	fsr1l,w,c
 20681  0165D4  6ED9               	movwf	fsr2l,c
 20682  0165D6  0EFF               	movlw	255
 20683  0165D8  20E2               	addwfc	fsr1h,w,c
 20684  0165DA  6EDA               	movwf	fsr2h,c
 20685                           
 20686                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20687  0165DC  0E08               	movlw	8
 20688  0165DE  6E01               	movwf	btemp^0,c
 20689  0165E0  0EEE               	movlw	-18
 20690  0165E2                     us592999:
 20691  0165E2  006F FF7B FFE3     	movff	postinc2,plusw1
 20692  0165E8  28E8               	incf	wreg,w,c
 20693  0165EA  2E01               	decfsz	btemp^0,f,c
 20694  0165EC  D7FA               	bra	us592999
 20695                           
 20696                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20697  0165EE  0EF6               	movlw	246
 20698  0165F0  26E1               	addwf	fsr1l,f,c
 20699  0165F2  0EFF               	movlw	255
 20700  0165F4  22E2               	addwfc	fsr1h,f,c
 20701  0165F6  0012               	return		;funcret
 20702  0165F8                     __end_of___aodiv:
 20703                           	opt callstack 0
 20704                           
 20705 ;; *************** function _ctoa *****************
 20706 ;; Defined at:
 20707 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20708 ;; Parameters:    Size  Location     Type
 20709 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20710 ;;		 -> f(6), NULL(0), 
 20711 ;;  c               1  [STACK] unsigned char 
 20712 ;; Auto vars:     Size  Location     Type
 20713 ;;  w               2  [STACK] int 
 20714 ;;  l               2    0        int 
 20715 ;; Return value:  Size  Location     Type
 20716 ;;                  2  [STACK] int 
 20717 ;; Registers used:
 20718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20719 ;; Tracked objects:
 20720 ;;		On entry : 0/0
 20721 ;;		On exit  : 0/0
 20722 ;;		Unchanged: 0/0
 20723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20728 ;;Total ram usage:        0 bytes
 20729 ;; Hardware stack levels used:    1
 20730 ;; Hardware stack levels required when called:   20
 20731 ;; This function calls:
 20732 ;;		_pad
 20733 ;; This function is called by:
 20734 ;;		_vfpfcnvrt
 20735 ;; This function uses a reentrant model
 20736 ;;
 20737                           
 20738                           	psect	text70
 20739  019408                     __ptext70:
 20740                           	opt callstack 0
 20741  019408                     _ctoa:
 20742                           	opt callstack 0
 20743                           
 20744                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20745  019408  52E6               	movf	postinc1,f,c
 20746  01940A  52E6               	movf	postinc1,f,c
 20747                           
 20748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20749                           
 20750                           ;incstack = 0
 20751 ;; hardware stack exceeded
 20752  01940C  5021               	movf	_width^0,w,c
 20753  01940E  1022               	iorwf	(_width+1)^0,w,c
 20754  019410  A4D8               	btfss	status,2,c
 20755  019412  D009               	goto	l10835
 20756                           
 20757                           ;stkvar	_w @ sp[(-2)+0]
 20758  019414  0EFE               	movlw	-2
 20759  019416  0060  F087  FFE3   	movff	_width,plusw1
 20760  01941C  0EFF               	movlw	-1
 20761  01941E  0060  F08B  FFE3   	movff	_width+1,plusw1
 20762  019424  D016               	goto	l10837
 20763  019426                     l10835:
 20764  019426  0EFF               	movlw	255
 20765  019428  6E0B               	movwf	(btemp+10)^0,c
 20766  01942A  0EFF               	movlw	255
 20767  01942C  6E0C               	movwf	(btemp+11)^0,c
 20768  01942E  0060  F084  F009   	movff	_width,btemp+8
 20769  019434  0060  F088  F00A   	movff	_width+1,btemp+9
 20770  01943A  500B               	movf	(btemp+10)^0,w,c
 20771  01943C  2609               	addwf	(btemp+8)^0,f,c
 20772  01943E  500C               	movf	(btemp+11)^0,w,c
 20773  019440  220A               	addwfc	(btemp+9)^0,f,c
 20774                           
 20775                           ;stkvar	_w @ sp[(-2)+0]
 20776  019442  0EFE               	movlw	-2
 20777  019444  0060  F027  FFE3   	movff	btemp+8,plusw1
 20778  01944A  0EFF               	movlw	-1
 20779  01944C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20780  019452                     l10837:
 20781                           
 20782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20783                           ;stkvar	_c @ sp[(-2)+-3]
 20784  019452  0EFB               	movlw	-5
 20785  019454  006F FF8C  F394    	movff	plusw1,_dbuf
 20786                           
 20787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20788  01945A  0103               	movlb	3	; () banked
 20789  01945C  6B95               	clrf	(_dbuf+1)& (0+255),b
 20790                           
 20791                           ; BSR set to: 3
 20792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20793                           ;stkvar	_w @ sp[(-2)+0]
 20794  01945E  0EFE               	movlw	-2
 20795  019460  006F FF8F FFE6     	movff	plusw1,postinc1
 20796  019466  006F FF8F FFE6     	movff	plusw1,postinc1
 20797  01946C  0E94               	movlw	low _dbuf
 20798  01946E  6EE6               	movwf	postinc1,c
 20799  019470  0E03               	movlw	high _dbuf
 20800  019472  6EE6               	movwf	postinc1,c
 20801                           
 20802                           ;stkvar	_fp @ sp[(-6)+-2]
 20803  019474  0EF8               	movlw	-8
 20804  019476  006F FF8F FFE6     	movff	plusw1,postinc1
 20805  01947C  006F FF8F FFE6     	movff	plusw1,postinc1
 20806  019482  EC3D  F0C2         	call	_pad	;wreg free
 20807                           
 20808                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20809  019486  0EFB               	movlw	251
 20810  019488  26E1               	addwf	fsr1l,f,c
 20811  01948A  0EFF               	movlw	255
 20812  01948C  22E2               	addwfc	fsr1h,f,c
 20813  01948E  0012               	return		;funcret
 20814  019490                     __end_of_ctoa:
 20815                           	opt callstack 0
 20816                           
 20817 ;; *************** function _pad *****************
 20818 ;; Defined at:
 20819 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20820 ;; Parameters:    Size  Location     Type
 20821 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20822 ;;		 -> f(6), NULL(0), 
 20823 ;;  buf             2  [STACK] PTR unsigned char 
 20824 ;;		 -> dbuf(80), 
 20825 ;;  p               2  [STACK] int 
 20826 ;; Auto vars:     Size  Location     Type
 20827 ;;  w               2  [STACK] int 
 20828 ;;  i               2  [STACK] int 
 20829 ;; Return value:  Size  Location     Type
 20830 ;;                  2  [STACK] int 
 20831 ;; Registers used:
 20832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20833 ;; Tracked objects:
 20834 ;;		On entry : 0/3
 20835 ;;		On exit  : 0/0
 20836 ;;		Unchanged: 0/0
 20837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20842 ;;Total ram usage:        0 bytes
 20843 ;; Hardware stack levels used:    1
 20844 ;; Hardware stack levels required when called:   19
 20845 ;; This function calls:
 20846 ;;		_fputc
 20847 ;;		_fputs
 20848 ;;		_strlen
 20849 ;; This function is called by:
 20850 ;;		_ctoa
 20851 ;;		_dtoa
 20852 ;;		_efgtoa
 20853 ;;		_utoa
 20854 ;;		_xtoa
 20855 ;; This function uses a reentrant model
 20856 ;;
 20857                           
 20858                           	psect	text71
 20859  01847A                     __ptext71:
 20860                           	opt callstack 0
 20861  01847A                     _pad:
 20862                           	opt callstack 0
 20863                           
 20864                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20865  01847A  52E6               	movf	postinc1,f,c
 20866  01847C  52E6               	movf	postinc1,f,c
 20867  01847E  52E6               	movf	postinc1,f,c
 20868  018480  52E6               	movf	postinc1,f,c
 20869                           
 20870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20871                           
 20872                           ;incstack = 0
 20873 ;; hardware stack exceeded
 20874  018482  A025               	btfss	_flags^0,0,c
 20875  018484  D010               	goto	l10757
 20876                           
 20877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20878                           ;stkvar	_fp @ sp[(-4)+-2]
 20879  018486  0EFA               	movlw	-6
 20880  018488  006F FF8F FFE6     	movff	plusw1,postinc1
 20881  01848E  006F FF8F FFE6     	movff	plusw1,postinc1
 20882                           
 20883                           ;stkvar	_buf @ sp[(-6)+-4]
 20884  018494  0EF6               	movlw	-10
 20885  018496  006F FF8F FFE6     	movff	plusw1,postinc1
 20886  01849C  006F FF8F FFE6     	movff	plusw1,postinc1
 20887  0184A2  EC93  F0C8         	call	_fputs	;wreg free
 20888  0184A6                     l10757:
 20889                           
 20890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20891                           ;stkvar	_p @ sp[(-4)+-6]
 20892  0184A6  0EF7               	movlw	-9
 20893  0184A8  BEE3               	btfsc	plusw1,7,c
 20894  0184AA  D011               	goto	l10761
 20895                           
 20896                           ;stkvar	_p @ sp[(-4)+-6]
 20897                           ;stkvar	_w @ sp[(-4)+0]
 20898  0184AC  0EF6               	movlw	-10
 20899  0184AE  006F FF8C  F001    	movff	plusw1,btemp
 20900  0184B4  0EFC               	movlw	-4
 20901  0184B6  0060  F007  FFE3   	movff	btemp,plusw1
 20902  0184BC  0EF7               	movlw	-9
 20903  0184BE  006F FF8C  F001    	movff	plusw1,btemp
 20904  0184C4  0EFD               	movlw	-3
 20905  0184C6  0060  F007  FFE3   	movff	btemp,plusw1
 20906  0184CC  D004               	goto	l2001
 20907  0184CE                     l10761:
 20908                           
 20909                           ;stkvar	_w @ sp[(-4)+0]
 20910  0184CE  0EFC               	movlw	-4
 20911  0184D0  6AE3               	clrf	plusw1,c
 20912  0184D2  0EFD               	movlw	-3
 20913  0184D4  6AE3               	clrf	plusw1,c
 20914  0184D6                     l2001:
 20915                           
 20916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20917                           ;stkvar	_i @ sp[(-4)+2]
 20918  0184D6  0EFE               	movlw	-2
 20919  0184D8  6AE3               	clrf	plusw1,c
 20920  0184DA  0EFF               	movlw	-1
 20921  0184DC  6AE3               	clrf	plusw1,c
 20922                           
 20923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20924  0184DE  D01E               	goto	l10767
 20925  0184E0                     l10763:
 20926                           
 20927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20928                           ;stkvar	_fp @ sp[(-4)+-2]
 20929  0184E0  0EFA               	movlw	-6
 20930  0184E2  006F FF8F FFE6     	movff	plusw1,postinc1
 20931  0184E8  006F FF8F FFE6     	movff	plusw1,postinc1
 20932  0184EE  0E20               	movlw	32
 20933  0184F0  6EE6               	movwf	postinc1,c
 20934  0184F2  0E00               	movlw	0
 20935  0184F4  6EE6               	movwf	postinc1,c
 20936  0184F6  EC1F  F0C1         	call	_fputc	;wreg free
 20937                           
 20938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20939                           ;stkvar	_i @ sp[(-4)+2]
 20940  0184FA  0EFE               	movlw	-2
 20941  0184FC  50E3               	movf	plusw1,w,c
 20942  0184FE  0F01               	addlw	1
 20943  018500  6E01               	movwf	btemp^0,c
 20944  018502  0EFE               	movlw	-2
 20945  018504  0060  F007  FFE3   	movff	btemp,plusw1
 20946  01850A  6A01               	clrf	btemp^0,c
 20947  01850C  0EFF               	movlw	-1
 20948  01850E  50E3               	movf	plusw1,w,c
 20949  018510  2001               	addwfc	btemp^0,w,c
 20950  018512  6E01               	movwf	btemp^0,c
 20951  018514  0EFF               	movlw	-1
 20952  018516  0060  F007  FFE3   	movff	btemp,plusw1
 20953  01851C                     l10767:
 20954                           
 20955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20956                           ;stkvar	_w @ sp[(-4)+0]
 20957                           ;stkvar	_i @ sp[(-4)+2]
 20958  01851C  50E1               	movf	fsr1l,w,c
 20959  01851E  0FFE               	addlw	-2
 20960  018520  6ED9               	movwf	fsr2l,c
 20961  018522  50E2               	movf	fsr1h,w,c
 20962  018524  6EDA               	movwf	fsr2h,c
 20963  018526  0EFF               	movlw	255
 20964  018528  22DA               	addwfc	fsr2h,f,c
 20965  01852A  0EFC               	movlw	-4
 20966  01852C  50E3               	movf	plusw1,w,c
 20967  01852E  5CDE               	subwf	postinc2,w,c
 20968  018530  50DE               	movf	postinc2,w,c
 20969  018532  0A80               	xorlw	128
 20970  018534  6E01               	movwf	btemp^0,c
 20971  018536  0EFD               	movlw	-3
 20972  018538  50E3               	movf	plusw1,w,c
 20973  01853A  0A80               	xorlw	128
 20974  01853C  5801               	subwfb	btemp^0,w,c
 20975  01853E  A0D8               	btfss	status,0,c
 20976  018540  D7CF               	goto	l10763
 20977                           
 20978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20979  018542  B025               	btfsc	_flags^0,0,c
 20980  018544  D010               	goto	l10771
 20981                           
 20982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20983                           ;stkvar	_fp @ sp[(-4)+-2]
 20984  018546  0EFA               	movlw	-6
 20985  018548  006F FF8F FFE6     	movff	plusw1,postinc1
 20986  01854E  006F FF8F FFE6     	movff	plusw1,postinc1
 20987                           
 20988                           ;stkvar	_buf @ sp[(-6)+-4]
 20989  018554  0EF6               	movlw	-10
 20990  018556  006F FF8F FFE6     	movff	plusw1,postinc1
 20991  01855C  006F FF8F FFE6     	movff	plusw1,postinc1
 20992  018562  EC93  F0C8         	call	_fputs	;wreg free
 20993  018566                     l10771:
 20994                           
 20995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20996                           ;stkvar	_w @ sp[(-4)+0]
 20997                           ;stkvar	_buf @ sp[(-4)+-4]
 20998  018566  0EF8               	movlw	-8
 20999  018568  006F FF8F FFE6     	movff	plusw1,postinc1
 21000  01856E  006F FF8F FFE6     	movff	plusw1,postinc1
 21001  018574  EC42  F0C8         	call	_strlen	;wreg free
 21002  018578  0EFC               	movlw	-4
 21003  01857A  50E3               	movf	plusw1,w,c
 21004  01857C  2601               	addwf	btemp^0,f,c
 21005  01857E  0EFD               	movlw	-3
 21006  018580  50E3               	movf	plusw1,w,c
 21007  018582  2202               	addwfc	(btemp+1)^0,f,c
 21008                           
 21009                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21010  018584  0EF6               	movlw	246
 21011  018586  26E1               	addwf	fsr1l,f,c
 21012  018588  0EFF               	movlw	255
 21013  01858A  22E2               	addwfc	fsr1h,f,c
 21014  01858C  0012               	return		;funcret
 21015  01858E                     __end_of_pad:
 21016                           	opt callstack 0
 21017                           
 21018 ;; *************** function _strlen *****************
 21019 ;; Defined at:
 21020 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21021 ;; Parameters:    Size  Location     Type
 21022 ;;  s               2  [STACK] PTR const unsigned char 
 21023 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21024 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 21025 ;;		 -> T(144), port_data(512), STR_7(4), STR_3(4), 
 21026 ;;		 -> V(188), 
 21027 ;; Auto vars:     Size  Location     Type
 21028 ;;  a               2  [STACK] PTR const unsigned char 
 21029 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21030 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 21031 ;;		 -> T(144), port_data(512), STR_7(4), STR_3(4), 
 21032 ;;		 -> V(188), 
 21033 ;; Return value:  Size  Location     Type
 21034 ;;                  2  [STACK] unsigned int 
 21035 ;; Registers used:
 21036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21037 ;; Tracked objects:
 21038 ;;		On entry : 0/0
 21039 ;;		On exit  : 0/0
 21040 ;;		Unchanged: 0/0
 21041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21046 ;;Total ram usage:        0 bytes
 21047 ;; Hardware stack levels used:    1
 21048 ;; Hardware stack levels required when called:   15
 21049 ;; This function calls:
 21050 ;;		Nothing
 21051 ;; This function is called by:
 21052 ;;		_eaDogM_WriteString
 21053 ;;		_calc_bsoc
 21054 ;;		_pad
 21055 ;;		_stoa
 21056 ;; This function uses a reentrant model
 21057 ;;
 21058                           
 21059                           	psect	text72
 21060  019084                     __ptext72:
 21061                           	opt callstack 0
 21062  019084                     _strlen:
 21063                           	opt callstack 0
 21064                           
 21065                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21066  019084  52E6               	movf	postinc1,f,c
 21067  019086  52E6               	movf	postinc1,f,c
 21068                           
 21069                           ;stkvar	_s @ sp[(-2)+-2]
 21070                           
 21071                           ;incstack = 0
 21072 ;; hardware stack exceeded
 21073  019088  0EFC               	movlw	-4
 21074  01908A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21075  019090  0EFD               	movlw	-3
 21076  019092  006F FF8C  F00C    	movff	plusw1,btemp+11
 21077                           
 21078                           ;stkvar	_a @ sp[(-2)+0]
 21079  019098  0EFF               	movlw	-1
 21080  01909A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21081  0190A0  0EFE               	movlw	-2
 21082  0190A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21083  0190A8  D011               	goto	l7073
 21084  0190AA                     l7071:
 21085                           
 21086                           ;stkvar	_s @ sp[(-2)+-2]
 21087  0190AA  0EFC               	movlw	-4
 21088  0190AC  50E3               	movf	plusw1,w,c
 21089  0190AE  0F01               	addlw	1
 21090  0190B0  6E01               	movwf	btemp^0,c
 21091  0190B2  0EFC               	movlw	-4
 21092  0190B4  0060  F007  FFE3   	movff	btemp,plusw1
 21093  0190BA  6A01               	clrf	btemp^0,c
 21094  0190BC  0EFD               	movlw	-3
 21095  0190BE  50E3               	movf	plusw1,w,c
 21096  0190C0  2001               	addwfc	btemp^0,w,c
 21097  0190C2  6E01               	movwf	btemp^0,c
 21098  0190C4  0EFD               	movlw	-3
 21099  0190C6  0060  F007  FFE3   	movff	btemp,plusw1
 21100  0190CC                     l7073:
 21101                           
 21102                           ;stkvar	_s @ sp[(-2)+-2]
 21103  0190CC  0EFC               	movlw	-4
 21104  0190CE  006F FF8F FFF6     	movff	plusw1,tblptrl
 21105  0190D4  0EFD               	movlw	-3
 21106  0190D6  006F FF8F FFF7     	movff	plusw1,tblptrh
 21107  0190DC  0E00               	movlw	low (__mediumconst shr (0+16))
 21108  0190DE  6EF8               	movwf	tblptru,c
 21109  0190E0  0E1F               	movlw	(high __ramtop+-1)
 21110  0190E2  64F7               	cpfsgt	tblptrh,c
 21111  0190E4  D003               	bra	u4987
 21112  0190E6  0008               	tblrd		*
 21113  0190E8  50F5               	movf	tablat,w,c
 21114  0190EA  D007               	bra	u4980
 21115  0190EC                     u4987:
 21116  0190EC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21117  0190F2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21118  0190F8  50EF               	movf	indf0,w,c
 21119  0190FA                     u4980:
 21120  0190FA  0900               	iorlw	0
 21121  0190FC  A4D8               	btfss	status,2,c
 21122  0190FE  D7D5               	goto	l7071
 21123                           
 21124                           ;stkvar	_a @ sp[(-2)+0]
 21125                           ;stkvar	_s @ sp[(-2)+-2]
 21126  019100  0EFC               	movlw	-4
 21127  019102  006F FF8C  F001    	movff	plusw1,btemp
 21128  019108  0EFD               	movlw	-3
 21129  01910A  006F FF8C  F002    	movff	plusw1,btemp+1
 21130  019110  0EFE               	movlw	-2
 21131  019112  50E3               	movf	plusw1,w,c
 21132  019114  5E01               	subwf	btemp^0,f,c
 21133  019116  0EFF               	movlw	-1
 21134  019118  50E3               	movf	plusw1,w,c
 21135  01911A  5A02               	subwfb	(btemp+1)^0,f,c
 21136                           
 21137                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21138  01911C  52E5               	movf	postdec1,f,c
 21139  01911E  52E5               	movf	postdec1,f,c
 21140  019120  52E5               	movf	postdec1,f,c
 21141  019122  52E5               	movf	postdec1,f,c
 21142  019124  0012               	return		;funcret
 21143  019126                     __end_of_strlen:
 21144                           	opt callstack 0
 21145                           
 21146 ;; *************** function _fputs *****************
 21147 ;; Defined at:
 21148 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21149 ;; Parameters:    Size  Location     Type
 21150 ;;  s               2  [STACK] PTR const unsigned char 
 21151 ;;		 -> dbuf(80), 
 21152 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21153 ;;		 -> f(6), NULL(0), 
 21154 ;; Auto vars:     Size  Location     Type
 21155 ;;  i               2  [STACK] int 
 21156 ;;  c               1  [STACK] unsigned char 
 21157 ;; Return value:  Size  Location     Type
 21158 ;;                  2  [STACK] int 
 21159 ;; Registers used:
 21160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21161 ;; Tracked objects:
 21162 ;;		On entry : 0/3
 21163 ;;		On exit  : 0/0
 21164 ;;		Unchanged: 0/0
 21165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21170 ;;Total ram usage:        0 bytes
 21171 ;; Hardware stack levels used:    1
 21172 ;; Hardware stack levels required when called:   18
 21173 ;; This function calls:
 21174 ;;		_fputc
 21175 ;; This function is called by:
 21176 ;;		_pad
 21177 ;; This function uses a reentrant model
 21178 ;;
 21179                           
 21180                           	psect	text73
 21181  019126                     __ptext73:
 21182                           	opt callstack 0
 21183  019126                     _fputs:
 21184                           	opt callstack 0
 21185                           
 21186                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21187  019126  52E6               	movf	postinc1,f,c
 21188  019128  52E6               	movf	postinc1,f,c
 21189  01912A  52E6               	movf	postinc1,f,c
 21190                           
 21191                           ;stkvar	_i @ sp[(-3)+0]
 21192                           
 21193                           ;incstack = 0
 21194 ;; hardware stack exceeded
 21195  01912C  0EFD               	movlw	-3
 21196  01912E  6AE3               	clrf	plusw1,c
 21197  019130  0EFE               	movlw	-2
 21198  019132  6AE3               	clrf	plusw1,c
 21199  019134  D01F               	goto	l10751
 21200  019136                     l10747:
 21201                           
 21202                           ;stkvar	_fp @ sp[(-3)+-4]
 21203  019136  0EF9               	movlw	-7
 21204  019138  006F FF8F FFE6     	movff	plusw1,postinc1
 21205  01913E  006F FF8F FFE6     	movff	plusw1,postinc1
 21206                           
 21207                           ;stkvar	_c @ sp[(-5)+2]
 21208  019144  0EFD               	movlw	-3
 21209  019146  50E3               	movf	plusw1,w,c
 21210  019148  6EE6               	movwf	postinc1,c
 21211  01914A  0E00               	movlw	0
 21212  01914C  6EE6               	movwf	postinc1,c
 21213  01914E  EC1F  F0C1         	call	_fputc	;wreg free
 21214                           
 21215                           ;stkvar	_i @ sp[(-3)+0]
 21216  019152  0EFD               	movlw	-3
 21217  019154  50E3               	movf	plusw1,w,c
 21218  019156  0F01               	addlw	1
 21219  019158  6E01               	movwf	btemp^0,c
 21220  01915A  0EFD               	movlw	-3
 21221  01915C  0060  F007  FFE3   	movff	btemp,plusw1
 21222  019162  6A01               	clrf	btemp^0,c
 21223  019164  0EFE               	movlw	-2
 21224  019166  50E3               	movf	plusw1,w,c
 21225  019168  2001               	addwfc	btemp^0,w,c
 21226  01916A  6E01               	movwf	btemp^0,c
 21227  01916C  0EFE               	movlw	-2
 21228  01916E  0060  F007  FFE3   	movff	btemp,plusw1
 21229  019174                     l10751:
 21230                           
 21231                           ;stkvar	_i @ sp[(-3)+0]
 21232  019174  0EFD               	movlw	-3
 21233  019176  006F FF8C  F00B    	movff	plusw1,btemp+10
 21234  01917C  0EFE               	movlw	-2
 21235  01917E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21236                           
 21237                           ;stkvar	_s @ sp[(-3)+-2]
 21238  019184  0EFB               	movlw	-5
 21239  019186  006F FF8C  F009    	movff	plusw1,btemp+8
 21240  01918C  0EFC               	movlw	-4
 21241  01918E  006F FF8C  F00A    	movff	plusw1,btemp+9
 21242  019194  500B               	movf	(btemp+10)^0,w,c
 21243  019196  2409               	addwf	(btemp+8)^0,w,c
 21244  019198  6ED9               	movwf	fsr2l,c
 21245  01919A  500C               	movf	(btemp+11)^0,w,c
 21246  01919C  200A               	addwfc	(btemp+9)^0,w,c
 21247  01919E  6EDA               	movwf	fsr2h,c
 21248  0191A0  50DF               	movf	indf2,w,c
 21249  0191A2  6E0C               	movwf	(btemp+11)^0,c
 21250                           
 21251                           ;stkvar	_c @ sp[(-3)+2]
 21252  0191A4  0EFF               	movlw	-1
 21253  0191A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21254  0191AC  0EFF               	movlw	-1
 21255  0191AE  50E3               	movf	plusw1,w,c
 21256  0191B0  A4D8               	btfss	status,2,c
 21257  0191B2  D7C1               	goto	l10747
 21258                           
 21259                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21260  0191B4  0EF9               	movlw	249
 21261  0191B6  26E1               	addwf	fsr1l,f,c
 21262  0191B8  0EFF               	movlw	255
 21263  0191BA  22E2               	addwfc	fsr1h,f,c
 21264  0191BC  0012               	return		;funcret
 21265  0191BE                     __end_of_fputs:
 21266                           	opt callstack 0
 21267                           
 21268 ;; *************** function _fputc *****************
 21269 ;; Defined at:
 21270 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21271 ;; Parameters:    Size  Location     Type
 21272 ;;  c               2  [STACK] int 
 21273 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21274 ;;		 -> f(6), NULL(0), 
 21275 ;; Auto vars:     Size  Location     Type
 21276 ;;		None
 21277 ;; Return value:  Size  Location     Type
 21278 ;;                  2  [STACK] int 
 21279 ;; Registers used:
 21280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21281 ;; Tracked objects:
 21282 ;;		On entry : 0/0
 21283 ;;		On exit  : 0/0
 21284 ;;		Unchanged: 0/0
 21285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21290 ;;Total ram usage:        0 bytes
 21291 ;; Hardware stack levels used:    1
 21292 ;; Hardware stack levels required when called:   17
 21293 ;; This function calls:
 21294 ;;		_putch
 21295 ;; This function is called by:
 21296 ;;		_pad
 21297 ;;		_stoa
 21298 ;;		_vfpfcnvrt
 21299 ;;		_fputs
 21300 ;; This function uses a reentrant model
 21301 ;;
 21302                           
 21303                           	psect	text74
 21304  01823E                     __ptext74:
 21305                           	opt callstack 0
 21306  01823E                     _fputc:
 21307                           	opt callstack 0
 21308                           
 21309                           ;stkvar	_fp @ sp[(0)+-4]
 21310                           
 21311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21312                           ;incstack = 0
 21313 ;; hardware stack exceeded
 21314  01823E  0EFC               	movlw	-4
 21315  018240  006F FF8C  F001    	movff	plusw1,btemp
 21316  018246  0EFD               	movlw	-3
 21317  018248  50E3               	movf	plusw1,w,c
 21318  01824A  1001               	iorwf	btemp^0,w,c
 21319  01824C  B4D8               	btfsc	status,2,c
 21320  01824E  D009               	goto	u9870
 21321                           
 21322                           ;stkvar	_fp @ sp[(0)+-4]
 21323  018250  0EFC               	movlw	-4
 21324  018252  006F FF8C  F001    	movff	plusw1,btemp
 21325  018258  0EFD               	movlw	-3
 21326  01825A  50E3               	movf	plusw1,w,c
 21327  01825C  1001               	iorwf	btemp^0,w,c
 21328  01825E  A4D8               	btfss	status,2,c
 21329  018260  D006               	goto	l10735
 21330  018262                     u9870:
 21331                           
 21332                           ;stkvar	_c @ sp[(0)+-2]
 21333  018262  0EFE               	movlw	-2
 21334  018264  50E3               	movf	plusw1,w,c
 21335  018266  6EE6               	movwf	postinc1,c
 21336  018268  EC86  F0D3         	call	_putch	;wreg free
 21337  01826C  D075               	goto	l3042
 21338  01826E                     l10735:
 21339                           
 21340                           ;stkvar	_fp @ sp[(0)+-4]
 21341  01826E  0EFC               	movlw	-4
 21342  018270  006F FF8C  F00B    	movff	plusw1,btemp+10
 21343  018276  0EFD               	movlw	-3
 21344  018278  006F FF8C  F00C    	movff	plusw1,btemp+11
 21345  01827E  0E04               	movlw	4
 21346  018280  240B               	addwf	(btemp+10)^0,w,c
 21347  018282  6ED9               	movwf	fsr2l,c
 21348  018284  0E00               	movlw	0
 21349  018286  200C               	addwfc	(btemp+11)^0,w,c
 21350  018288  6EDA               	movwf	fsr2h,c
 21351  01828A  50DE               	movf	postinc2,w,c
 21352  01828C  10DE               	iorwf	postinc2,w,c
 21353  01828E  B4D8               	btfsc	status,2,c
 21354  018290  D026               	goto	u9890
 21355                           
 21356                           ;stkvar	_fp @ sp[(0)+-4]
 21357  018292  0EFC               	movlw	-4
 21358  018294  006F FF8C  F00B    	movff	plusw1,btemp+10
 21359  01829A  0EFD               	movlw	-3
 21360  01829C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21361  0182A2  0E04               	movlw	4
 21362  0182A4  240B               	addwf	(btemp+10)^0,w,c
 21363  0182A6  6ED9               	movwf	fsr2l,c
 21364  0182A8  0E00               	movlw	0
 21365  0182AA  200C               	addwfc	(btemp+11)^0,w,c
 21366  0182AC  6EDA               	movwf	fsr2h,c
 21367                           
 21368                           ;stkvar	_fp @ sp[(0)+-4]
 21369  0182AE  0EFC               	movlw	-4
 21370  0182B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21371  0182B6  0EFD               	movlw	-3
 21372  0182B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21373  0182BE  0E02               	movlw	2
 21374  0182C0  240B               	addwf	(btemp+10)^0,w,c
 21375  0182C2  6EE9               	movwf	fsr0l,c
 21376  0182C4  0E00               	movlw	0
 21377  0182C6  200C               	addwfc	(btemp+11)^0,w,c
 21378  0182C8  6EEA               	movwf	fsr0h,c
 21379  0182CA  50DE               	movf	postinc2,w,c
 21380  0182CC  5CEE               	subwf	postinc0,w,c
 21381  0182CE  50EE               	movf	postinc0,w,c
 21382  0182D0  0A80               	xorlw	128
 21383  0182D2  6E01               	movwf	btemp^0,c
 21384  0182D4  50DE               	movf	postinc2,w,c
 21385  0182D6  0A80               	xorlw	128
 21386  0182D8  5801               	subwfb	btemp^0,w,c
 21387  0182DA  B0D8               	btfsc	status,0,c
 21388  0182DC  D03D               	goto	l3042
 21389  0182DE                     u9890:
 21390                           
 21391                           ;stkvar	_c @ sp[(0)+-2]
 21392                           ;stkvar	_fp @ sp[(0)+-4]
 21393  0182DE  0EFC               	movlw	-4
 21394  0182E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21395  0182E6  0EFD               	movlw	-3
 21396  0182E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21397  0182EE  0E02               	movlw	2
 21398  0182F0  240B               	addwf	(btemp+10)^0,w,c
 21399  0182F2  6ED9               	movwf	fsr2l,c
 21400  0182F4  0E00               	movlw	0
 21401  0182F6  200C               	addwfc	(btemp+11)^0,w,c
 21402  0182F8  6EDA               	movwf	fsr2h,c
 21403  0182FA  006F FF78  F00B    	movff	postinc2,btemp+10
 21404  018300  006F FF74  F00C    	movff	postdec2,btemp+11
 21405                           
 21406                           ;stkvar	_fp @ sp[(0)+-4]
 21407  018306  0EFC               	movlw	-4
 21408  018308  006F FF8F FFD9     	movff	plusw1,fsr2l
 21409  01830E  0EFD               	movlw	-3
 21410  018310  006F FF8F FFDA     	movff	plusw1,fsr2h
 21411  018316  006F FF78  F009    	movff	postinc2,btemp+8
 21412  01831C  006F FF74  F00A    	movff	postdec2,btemp+9
 21413  018322  500B               	movf	(btemp+10)^0,w,c
 21414  018324  2409               	addwf	(btemp+8)^0,w,c
 21415  018326  6ED9               	movwf	fsr2l,c
 21416  018328  500C               	movf	(btemp+11)^0,w,c
 21417  01832A  200A               	addwfc	(btemp+9)^0,w,c
 21418  01832C  6EDA               	movwf	fsr2h,c
 21419  01832E  0EFE               	movlw	-2
 21420  018330  006F FF8F FFDF     	movff	plusw1,indf2
 21421                           
 21422                           ;stkvar	_fp @ sp[(0)+-4]
 21423  018336  0EFC               	movlw	-4
 21424  018338  006F FF8C  F00B    	movff	plusw1,btemp+10
 21425  01833E  0EFD               	movlw	-3
 21426  018340  006F FF8C  F00C    	movff	plusw1,btemp+11
 21427  018346  0E02               	movlw	2
 21428  018348  240B               	addwf	(btemp+10)^0,w,c
 21429  01834A  6ED9               	movwf	fsr2l,c
 21430  01834C  0E00               	movlw	0
 21431  01834E  200C               	addwfc	(btemp+11)^0,w,c
 21432  018350  6EDA               	movwf	fsr2h,c
 21433  018352  2ADE               	incf	postinc2,f,c
 21434  018354  0E00               	movlw	0
 21435  018356  22DD               	addwfc	postdec2,f,c
 21436  018358                     l3042:
 21437                           
 21438                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21439  018358  52E5               	movf	postdec1,f,c
 21440  01835A  52E5               	movf	postdec1,f,c
 21441  01835C  52E5               	movf	postdec1,f,c
 21442  01835E  52E5               	movf	postdec1,f,c
 21443  018360  0012               	return		;funcret
 21444  018362                     __end_of_fputc:
 21445                           	opt callstack 0
 21446                           
 21447 ;; *************** function _putch *****************
 21448 ;; Defined at:
 21449 ;;		line 170 in file "eadog.c"
 21450 ;; Parameters:    Size  Location     Type
 21451 ;;  c               1  [STACK] unsigned char 
 21452 ;; Auto vars:     Size  Location     Type
 21453 ;;		None
 21454 ;; Return value:  Size  Location     Type
 21455 ;;                  1  [STACK] void 
 21456 ;; Registers used:
 21457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21458 ;; Tracked objects:
 21459 ;;		On entry : 0/0
 21460 ;;		On exit  : 0/0
 21461 ;;		Unchanged: 0/0
 21462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21467 ;;Total ram usage:        0 bytes
 21468 ;; Hardware stack levels used:    1
 21469 ;; Hardware stack levels required when called:   16
 21470 ;; This function calls:
 21471 ;;		_ringBufS_put_dma
 21472 ;; This function is called by:
 21473 ;;		_fputc
 21474 ;; This function uses a reentrant model
 21475 ;;
 21476                           
 21477                           	psect	text75
 21478  01A70C                     __ptext75:
 21479                           	opt callstack 0
 21480  01A70C                     _putch:
 21481                           	opt callstack 0
 21482                           
 21483                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21484                           ;stkvar	_c @ sp[(0)+-1]
 21485                           
 21486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21487                           ;incstack = 0
 21488 ;; hardware stack exceeded
 21489  01A70C  0EFF               	movlw	-1
 21490  01A70E  50E3               	movf	plusw1,w,c
 21491  01A710  6EE6               	movwf	postinc1,c
 21492  01A712  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 21493  01A718  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 21494  01A71E  EC9A  F0C7         	call	_ringBufS_put_dma	;wreg free
 21495                           
 21496                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21497  01A722  52E5               	movf	postdec1,f,c
 21498  01A724  0012               	return		;funcret
 21499  01A726                     __end_of_putch:
 21500                           	opt callstack 0
 21501                           
 21502 ;; *************** function _ringBufS_put_dma *****************
 21503 ;; Defined at:
 21504 ;;		line 67 in file "ringbufs.c"
 21505 ;; Parameters:    Size  Location     Type
 21506 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21507 ;;		 -> ring_buf1(67), 
 21508 ;;  c               1  [STACK] const unsigned char 
 21509 ;; Auto vars:     Size  Location     Type
 21510 ;;		None
 21511 ;; Return value:  Size  Location     Type
 21512 ;;                  1  [STACK] void 
 21513 ;; Registers used:
 21514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21515 ;; Tracked objects:
 21516 ;;		On entry : 0/0
 21517 ;;		On exit  : 0/0
 21518 ;;		Unchanged: 0/0
 21519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21524 ;;Total ram usage:        0 bytes
 21525 ;; Hardware stack levels used:    1
 21526 ;; Hardware stack levels required when called:   15
 21527 ;; This function calls:
 21528 ;;		Nothing
 21529 ;; This function is called by:
 21530 ;;		_putch
 21531 ;; This function uses a reentrant model
 21532 ;;
 21533                           
 21534                           	psect	text76
 21535  018F34                     __ptext76:
 21536                           	opt callstack 0
 21537  018F34                     _ringBufS_put_dma:
 21538                           	opt callstack 0
 21539                           
 21540                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21541                           ;stkvar	__this @ sp[(0)+-2]
 21542                           
 21543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21544                           ;incstack = 0
 21545 ;; hardware stack exceeded
 21546  018F34  0EFE               	movlw	-2
 21547  018F36  006F FF8C  F00B    	movff	plusw1,btemp+10
 21548  018F3C  0EFF               	movlw	-1
 21549  018F3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21550  018F44  0E42               	movlw	66
 21551  018F46  240B               	addwf	(btemp+10)^0,w,c
 21552  018F48  6ED9               	movwf	fsr2l,c
 21553  018F4A  0E00               	movlw	0
 21554  018F4C  200C               	addwfc	(btemp+11)^0,w,c
 21555  018F4E  6EDA               	movwf	fsr2h,c
 21556  018F50  0E40               	movlw	64
 21557  018F52  60DF               	cpfslt	indf2,c
 21558  018F54  D040               	goto	l1554
 21559                           
 21560                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21561                           ;stkvar	_c @ sp[(0)+-3]
 21562                           ;stkvar	__this @ sp[(0)+-2]
 21563  018F56  0EFE               	movlw	-2
 21564  018F58  006F FF8C  F00B    	movff	plusw1,btemp+10
 21565  018F5E  0EFF               	movlw	-1
 21566  018F60  006F FF8C  F00C    	movff	plusw1,btemp+11
 21567  018F66  0E40               	movlw	64
 21568  018F68  240B               	addwf	(btemp+10)^0,w,c
 21569  018F6A  6ED9               	movwf	fsr2l,c
 21570  018F6C  0E00               	movlw	0
 21571  018F6E  200C               	addwfc	(btemp+11)^0,w,c
 21572  018F70  6EDA               	movwf	fsr2h,c
 21573  018F72  50DF               	movf	indf2,w,c
 21574  018F74  6E0C               	movwf	(btemp+11)^0,c
 21575                           
 21576                           ;stkvar	__this @ sp[(0)+-2]
 21577  018F76  0EFE               	movlw	-2
 21578  018F78  006F FF8C  F009    	movff	plusw1,btemp+8
 21579  018F7E  0EFF               	movlw	-1
 21580  018F80  006F FF8C  F00A    	movff	plusw1,btemp+9
 21581  018F86  500C               	movf	(btemp+11)^0,w,c
 21582  018F88  2409               	addwf	(btemp+8)^0,w,c
 21583  018F8A  6ED9               	movwf	fsr2l,c
 21584  018F8C  0E00               	movlw	0
 21585  018F8E  200A               	addwfc	(btemp+9)^0,w,c
 21586  018F90  6EDA               	movwf	fsr2h,c
 21587  018F92  0EFD               	movlw	-3
 21588  018F94  006F FF8F FFDF     	movff	plusw1,indf2
 21589                           
 21590                           ;ringbufs.c: 71:   ++_this->head;
 21591                           ;stkvar	__this @ sp[(0)+-2]
 21592  018F9A  0EFE               	movlw	-2
 21593  018F9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21594  018FA2  0EFF               	movlw	-1
 21595  018FA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21596  018FAA  0E40               	movlw	64
 21597  018FAC  240B               	addwf	(btemp+10)^0,w,c
 21598  018FAE  6ED9               	movwf	fsr2l,c
 21599  018FB0  0E00               	movlw	0
 21600  018FB2  200C               	addwfc	(btemp+11)^0,w,c
 21601  018FB4  6EDA               	movwf	fsr2h,c
 21602  018FB6  2ADF               	incf	indf2,f,c
 21603                           
 21604                           ;ringbufs.c: 72:   ++_this->count;
 21605                           ;stkvar	__this @ sp[(0)+-2]
 21606  018FB8  0EFE               	movlw	-2
 21607  018FBA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21608  018FC0  0EFF               	movlw	-1
 21609  018FC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21610  018FC8  0E42               	movlw	66
 21611  018FCA  240B               	addwf	(btemp+10)^0,w,c
 21612  018FCC  6ED9               	movwf	fsr2l,c
 21613  018FCE  0E00               	movlw	0
 21614  018FD0  200C               	addwfc	(btemp+11)^0,w,c
 21615  018FD2  6EDA               	movwf	fsr2h,c
 21616  018FD4  2ADF               	incf	indf2,f,c
 21617  018FD6                     l1554:
 21618                           
 21619                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21620  018FD6  52E5               	movf	postdec1,f,c
 21621  018FD8  52E5               	movf	postdec1,f,c
 21622  018FDA  52E5               	movf	postdec1,f,c
 21623  018FDC  0012               	return		;funcret
 21624  018FDE                     __end_of_ringBufS_put_dma:
 21625                           	opt callstack 0
 21626                           
 21627 ;; *************** function _atoi *****************
 21628 ;; Defined at:
 21629 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21630 ;; Parameters:    Size  Location     Type
 21631 ;;  s               2  [STACK] PTR const unsigned char 
 21632 ;;		 -> STR_46(79), STR_44(3), STR_43(3), STR_42(19), 
 21633 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
 21634 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
 21635 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
 21636 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
 21637 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
 21638 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
 21639 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
 21640 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
 21641 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 21642 ;;		 -> STR_1(17), 
 21643 ;; Auto vars:     Size  Location     Type
 21644 ;;  n               2  [STACK] int 
 21645 ;;  neg             2  [STACK] int 
 21646 ;; Return value:  Size  Location     Type
 21647 ;;                  2  [STACK] int 
 21648 ;; Registers used:
 21649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21650 ;; Tracked objects:
 21651 ;;		On entry : 0/0
 21652 ;;		On exit  : 0/0
 21653 ;;		Unchanged: 0/0
 21654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21659 ;;Total ram usage:        0 bytes
 21660 ;; Hardware stack levels used:    1
 21661 ;; Hardware stack levels required when called:   16
 21662 ;; This function calls:
 21663 ;;		_isdigit
 21664 ;;		_isspace
 21665 ;; This function is called by:
 21666 ;;		_vfpfcnvrt
 21667 ;; This function uses a reentrant model
 21668 ;;
 21669                           
 21670                           	psect	text77
 21671  0165F8                     __ptext77:
 21672                           	opt callstack 0
 21673  0165F8                     _atoi:
 21674                           	opt callstack 0
 21675                           
 21676                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21677  0165F8  0E09               	movlw	9
 21678  0165FA  26E1               	addwf	fsr1l,f,c
 21679  0165FC  0E00               	movlw	0
 21680  0165FE  22E2               	addwfc	fsr1h,f,c
 21681                           
 21682                           ;stkvar	_n @ sp[(-9)+5]
 21683                           
 21684                           ;incstack = 0
 21685 ;; hardware stack exceeded
 21686  016600  0EFC               	movlw	-4
 21687  016602  6AE3               	clrf	plusw1,c
 21688  016604  0EFD               	movlw	-3
 21689  016606  6AE3               	clrf	plusw1,c
 21690                           
 21691                           ;stkvar	_neg @ sp[(-9)+7]
 21692  016608  0EFE               	movlw	-2
 21693  01660A  6AE3               	clrf	plusw1,c
 21694  01660C  0EFF               	movlw	-1
 21695  01660E  6AE3               	clrf	plusw1,c
 21696  016610  D011               	goto	l8681
 21697  016612                     l8679:
 21698                           
 21699                           ;stkvar	_s @ sp[(-9)+-2]
 21700  016612  0EF5               	movlw	-11
 21701  016614  50E3               	movf	plusw1,w,c
 21702  016616  0F01               	addlw	1
 21703  016618  6E01               	movwf	btemp^0,c
 21704  01661A  0EF5               	movlw	-11
 21705  01661C  0060  F007  FFE3   	movff	btemp,plusw1
 21706  016622  6A01               	clrf	btemp^0,c
 21707  016624  0EF6               	movlw	-10
 21708  016626  50E3               	movf	plusw1,w,c
 21709  016628  2001               	addwfc	btemp^0,w,c
 21710  01662A  6E01               	movwf	btemp^0,c
 21711  01662C  0EF6               	movlw	-10
 21712  01662E  0060  F007  FFE3   	movff	btemp,plusw1
 21713  016634                     l8681:
 21714                           
 21715                           ;stkvar	_atoi$5718 @ sp[(-9)+4]
 21716  016634  0EFB               	movlw	-5
 21717  016636  6AE3               	clrf	plusw1,c
 21718  016638  2AE3               	incf	plusw1,f,c
 21719                           
 21720                           ;stkvar	_s @ sp[(-9)+-2]
 21721  01663A  50E1               	movf	fsr1l,w,c
 21722  01663C  0FF5               	addlw	-11
 21723  01663E  6ED9               	movwf	fsr2l,c
 21724  016640  50E2               	movf	fsr1h,w,c
 21725  016642  6EDA               	movwf	fsr2h,c
 21726  016644  0EFF               	movlw	255
 21727  016646  22DA               	addwfc	fsr2h,f,c
 21728  016648  006F FF7B FFF6     	movff	postinc2,tblptrl
 21729  01664E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21730  016654                     	if	0	;tblptru may be non-zero
 21731  016654                     	endif
 21732  016654                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21733  016654  0E00               	movlw	low (__mediumconst shr (0+16))
 21734  016656  6EF8               	movwf	tblptru,c
 21735  016658                     	endif
 21736  016658  0008               	tblrd		*
 21737  01665A  50F5               	movf	tablat,w,c
 21738  01665C  0A20               	xorlw	32
 21739  01665E  B4D8               	btfsc	status,2,c
 21740  016660  D023               	goto	l8689
 21741  016662  0EF7               	movlw	247
 21742  016664  6E0B               	movwf	(btemp+10)^0,c
 21743  016666  0EFF               	movlw	255
 21744  016668  6E0C               	movwf	(btemp+11)^0,c
 21745                           
 21746                           ;stkvar	_s @ sp[(-9)+-2]
 21747  01666A  50E1               	movf	fsr1l,w,c
 21748  01666C  0FF5               	addlw	-11
 21749  01666E  6ED9               	movwf	fsr2l,c
 21750  016670  50E2               	movf	fsr1h,w,c
 21751  016672  6EDA               	movwf	fsr2h,c
 21752  016674  0EFF               	movlw	255
 21753  016676  22DA               	addwfc	fsr2h,f,c
 21754  016678  006F FF7B FFF6     	movff	postinc2,tblptrl
 21755  01667E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21756  016684                     	if	0	;tblptru may be non-zero
 21757  016684                     	endif
 21758  016684                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21759  016684  0E00               	movlw	low (__mediumconst shr (0+16))
 21760  016686  6EF8               	movwf	tblptru,c
 21761  016688                     	endif
 21762  016688  0008               	tblrd		*
 21763  01668A  50F5               	movf	tablat,w,c
 21764  01668C  6E09               	movwf	(btemp+8)^0,c
 21765  01668E  6A0A               	clrf	(btemp+9)^0,c
 21766  016690  500B               	movf	(btemp+10)^0,w,c
 21767  016692  2609               	addwf	(btemp+8)^0,f,c
 21768  016694  500C               	movf	(btemp+11)^0,w,c
 21769  016696  220A               	addwfc	(btemp+9)^0,f,c
 21770  016698  500A               	movf	(btemp+9)^0,w,c
 21771  01669A  E104               	bnz	u8090
 21772  01669C  0E05               	movlw	5
 21773  01669E  5C09               	subwf	(btemp+8)^0,w,c
 21774  0166A0  A0D8               	btfss	status,0,c
 21775  0166A2  D002               	goto	l8689
 21776  0166A4                     u8090:
 21777                           
 21778                           ;stkvar	_atoi$5718 @ sp[(-9)+4]
 21779  0166A4  0EFB               	movlw	-5
 21780  0166A6  6AE3               	clrf	plusw1,c
 21781  0166A8                     l8689:
 21782                           
 21783                           ;stkvar	_atoi$5718 @ sp[(-9)+4]
 21784  0166A8  0EFB               	movlw	-5
 21785  0166AA  50E3               	movf	plusw1,w,c
 21786  0166AC  6E0B               	movwf	(btemp+10)^0,c
 21787  0166AE  6A0C               	clrf	(btemp+11)^0,c
 21788                           
 21789                           ;stkvar	_atoi$5717 @ sp[(-9)+2]
 21790  0166B0  0EF9               	movlw	-7
 21791  0166B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21792  0166B8  0EFA               	movlw	-6
 21793  0166BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 21794                           
 21795                           ;stkvar	_atoi$5717 @ sp[(-9)+2]
 21796  0166C0  0EF9               	movlw	-7
 21797  0166C2  006F FF8C  F001    	movff	plusw1,btemp
 21798  0166C8  0EFA               	movlw	-6
 21799  0166CA  50E3               	movf	plusw1,w,c
 21800  0166CC  1001               	iorwf	btemp^0,w,c
 21801  0166CE  B4D8               	btfsc	status,2,c
 21802  0166D0  D01F               	goto	l8699
 21803  0166D2  D79F               	goto	l8679
 21804  0166D4                     l8695:
 21805  0166D4  0E01               	movlw	1
 21806  0166D6  6E0B               	movwf	(btemp+10)^0,c
 21807  0166D8  0E00               	movlw	0
 21808  0166DA  6E0C               	movwf	(btemp+11)^0,c
 21809                           
 21810                           ;stkvar	_neg @ sp[(-9)+7]
 21811  0166DC  0EFE               	movlw	-2
 21812  0166DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21813  0166E4  0EFF               	movlw	-1
 21814  0166E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21815  0166EC                     l8697:
 21816                           
 21817                           ;stkvar	_s @ sp[(-9)+-2]
 21818  0166EC  0EF5               	movlw	-11
 21819  0166EE  50E3               	movf	plusw1,w,c
 21820  0166F0  0F01               	addlw	1
 21821  0166F2  6E01               	movwf	btemp^0,c
 21822  0166F4  0EF5               	movlw	-11
 21823  0166F6  0060  F007  FFE3   	movff	btemp,plusw1
 21824  0166FC  6A01               	clrf	btemp^0,c
 21825  0166FE  0EF6               	movlw	-10
 21826  016700  50E3               	movf	plusw1,w,c
 21827  016702  2001               	addwfc	btemp^0,w,c
 21828  016704  6E01               	movwf	btemp^0,c
 21829  016706  0EF6               	movlw	-10
 21830  016708  0060  F007  FFE3   	movff	btemp,plusw1
 21831  01670E  D053               	goto	l8705
 21832  016710                     l8699:
 21833                           
 21834                           ;stkvar	_s @ sp[(-9)+-2]
 21835  016710  50E1               	movf	fsr1l,w,c
 21836  016712  0FF5               	addlw	-11
 21837  016714  6ED9               	movwf	fsr2l,c
 21838  016716  50E2               	movf	fsr1h,w,c
 21839  016718  6EDA               	movwf	fsr2h,c
 21840  01671A  0EFF               	movlw	255
 21841  01671C  22DA               	addwfc	fsr2h,f,c
 21842  01671E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21843  016724  006F FF77 FFF7     	movff	postdec2,tblptrh
 21844  01672A                     	if	0	;tblptru may be non-zero
 21845  01672A                     	endif
 21846  01672A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21847  01672A  0E00               	movlw	low (__mediumconst shr (0+16))
 21848  01672C  6EF8               	movwf	tblptru,c
 21849  01672E                     	endif
 21850  01672E  0008               	tblrd		*
 21851  016730  50F5               	movf	tablat,w,c
 21852  016732  6E0B               	movwf	(btemp+10)^0,c
 21853  016734  6A0C               	clrf	(btemp+11)^0,c
 21854                           
 21855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21856                           ; Switch size 1, requested type "simple"
 21857                           ; Number of cases is 1, Range of values is 0 to 0
 21858                           ; switch strategies available:
 21859                           ; Name         Instructions Cycles
 21860                           ; simple_byte            4     3 (average)
 21861                           ;	Chosen strategy is simple_byte
 21862  016736  500C               	movf	(btemp+11)^0,w,c
 21863  016738  0A00               	xorlw	0	; case 0
 21864  01673A  A4D8               	btfss	status,2,c
 21865  01673C  D03C               	goto	l8705
 21866                           
 21867                           ; Switch size 1, requested type "simple"
 21868                           ; Number of cases is 2, Range of values is 43 to 45
 21869                           ; switch strategies available:
 21870                           ; Name         Instructions Cycles
 21871                           ; simple_byte            7     4 (average)
 21872                           ;	Chosen strategy is simple_byte
 21873  01673E  500B               	movf	(btemp+10)^0,w,c
 21874  016740  0A2B               	xorlw	43	; case 43
 21875  016742  B4D8               	btfsc	status,2,c
 21876  016744  D7D3               	goto	l8697
 21877  016746  0A06               	xorlw	6	; case 45
 21878  016748  B4D8               	btfsc	status,2,c
 21879  01674A  D7C4               	goto	l8695
 21880  01674C  D034               	goto	l8705
 21881  01674E                     l8701:
 21882                           
 21883                           ;stkvar	_n @ sp[(-9)+5]
 21884  01674E  0EFC               	movlw	-4
 21885  016750  006F FF8C  F00B    	movff	plusw1,btemp+10
 21886  016756  0EFD               	movlw	-3
 21887  016758  006F FF8C  F00C    	movff	plusw1,btemp+11
 21888  01675E  0E0A               	movlw	10
 21889  016760  020B               	mulwf	(btemp+10)^0,c
 21890  016762  006F FFCC  F009    	movff	prodl,btemp+8
 21891  016768  006F FFD0  F00A    	movff	prodh,btemp+9
 21892  01676E  020C               	mulwf	(btemp+11)^0,c
 21893  016770  50F3               	movf	prodl,w,c
 21894  016772  260A               	addwf	(btemp+9)^0,f,c
 21895                           
 21896                           ;stkvar	_s @ sp[(-9)+-2]
 21897  016774  50E1               	movf	fsr1l,w,c
 21898  016776  0FF5               	addlw	-11
 21899  016778  6ED9               	movwf	fsr2l,c
 21900  01677A  50E2               	movf	fsr1h,w,c
 21901  01677C  6EDA               	movwf	fsr2h,c
 21902  01677E  0EFF               	movlw	255
 21903  016780  22DA               	addwfc	fsr2h,f,c
 21904  016782  006F FF7B FFF6     	movff	postinc2,tblptrl
 21905  016788  006F FF77 FFF7     	movff	postdec2,tblptrh
 21906  01678E                     	if	0	;tblptru may be non-zero
 21907  01678E                     	endif
 21908  01678E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21909  01678E  0E00               	movlw	low (__mediumconst shr (0+16))
 21910  016790  6EF8               	movwf	tblptru,c
 21911  016792                     	endif
 21912  016792  0008               	tblrd		*
 21913  016794  50F5               	movf	tablat,w,c
 21914  016796  5E09               	subwf	(btemp+8)^0,f,c
 21915  016798  0E00               	movlw	0
 21916  01679A  5A0A               	subwfb	(btemp+9)^0,f,c
 21917  01679C  0E30               	movlw	48
 21918  01679E  2609               	addwf	(btemp+8)^0,f,c
 21919  0167A0  0E00               	movlw	0
 21920  0167A2  220A               	addwfc	(btemp+9)^0,f,c
 21921                           
 21922                           ;stkvar	_n @ sp[(-9)+5]
 21923  0167A4  0EFC               	movlw	-4
 21924  0167A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 21925  0167AC  0EFD               	movlw	-3
 21926  0167AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21927  0167B4  D79B               	goto	l8697
 21928  0167B6                     l8705:
 21929  0167B6  0ED0               	movlw	208
 21930  0167B8  6E0B               	movwf	(btemp+10)^0,c
 21931  0167BA  0EFF               	movlw	255
 21932  0167BC  6E0C               	movwf	(btemp+11)^0,c
 21933                           
 21934                           ;stkvar	_s @ sp[(-9)+-2]
 21935  0167BE  50E1               	movf	fsr1l,w,c
 21936  0167C0  0FF5               	addlw	-11
 21937  0167C2  6ED9               	movwf	fsr2l,c
 21938  0167C4  50E2               	movf	fsr1h,w,c
 21939  0167C6  6EDA               	movwf	fsr2h,c
 21940  0167C8  0EFF               	movlw	255
 21941  0167CA  22DA               	addwfc	fsr2h,f,c
 21942  0167CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 21943  0167D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 21944  0167D8                     	if	0	;tblptru may be non-zero
 21945  0167D8                     	endif
 21946  0167D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21947  0167D8  0E00               	movlw	low (__mediumconst shr (0+16))
 21948  0167DA  6EF8               	movwf	tblptru,c
 21949  0167DC                     	endif
 21950  0167DC  0008               	tblrd		*
 21951  0167DE  50F5               	movf	tablat,w,c
 21952  0167E0  6E09               	movwf	(btemp+8)^0,c
 21953  0167E2  6A0A               	clrf	(btemp+9)^0,c
 21954  0167E4  500B               	movf	(btemp+10)^0,w,c
 21955  0167E6  2609               	addwf	(btemp+8)^0,f,c
 21956  0167E8  500C               	movf	(btemp+11)^0,w,c
 21957  0167EA  220A               	addwfc	(btemp+9)^0,f,c
 21958  0167EC  500A               	movf	(btemp+9)^0,w,c
 21959  0167EE  E106               	bnz	u8110
 21960  0167F0  0E0A               	movlw	10
 21961  0167F2  5C09               	subwf	(btemp+8)^0,w,c
 21962  0167F4  B0D8               	btfsc	status,0,c
 21963  0167F6  D002               	goto	u8110
 21964  0167F8  0E01               	movlw	1
 21965  0167FA  D001               	goto	u8120
 21966  0167FC                     u8110:
 21967  0167FC  0E00               	movlw	0
 21968  0167FE                     u8120:
 21969  0167FE  6E0B               	movwf	(btemp+10)^0,c
 21970  016800  6A0C               	clrf	(btemp+11)^0,c
 21971                           
 21972                           ;stkvar	_atoi$5719 @ sp[(-9)+0]
 21973  016802  0EF7               	movlw	-9
 21974  016804  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21975  01680A  0EF8               	movlw	-8
 21976  01680C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21977                           
 21978                           ;stkvar	_atoi$5719 @ sp[(-9)+0]
 21979  016812  0EF7               	movlw	-9
 21980  016814  006F FF8C  F001    	movff	plusw1,btemp
 21981  01681A  0EF8               	movlw	-8
 21982  01681C  50E3               	movf	plusw1,w,c
 21983  01681E  1001               	iorwf	btemp^0,w,c
 21984  016820  A4D8               	btfss	status,2,c
 21985  016822  D795               	goto	l8701
 21986                           
 21987                           ;stkvar	_neg @ sp[(-9)+7]
 21988  016824  0EFE               	movlw	-2
 21989  016826  006F FF8C  F001    	movff	plusw1,btemp
 21990  01682C  0EFF               	movlw	-1
 21991  01682E  50E3               	movf	plusw1,w,c
 21992  016830  1001               	iorwf	btemp^0,w,c
 21993  016832  A4D8               	btfss	status,2,c
 21994  016834  D00E               	goto	l8715
 21995                           
 21996                           ;stkvar	_n @ sp[(-9)+5]
 21997  016836  0EFC               	movlw	-4
 21998  016838  006F FF8C  F001    	movff	plusw1,btemp
 21999  01683E  1E01               	comf	btemp^0,f,c
 22000  016840  0EFD               	movlw	-3
 22001  016842  006F FF8C  F002    	movff	plusw1,btemp+1
 22002  016848  1E02               	comf	(btemp+1)^0,f,c
 22003  01684A  2A01               	incf	btemp^0,f,c
 22004  01684C  B4D8               	btfsc	status,2,c
 22005  01684E  2A02               	incf	(btemp+1)^0,f,c
 22006  016850  D008               	goto	l2978
 22007  016852                     l8715:
 22008                           
 22009                           ;stkvar	_n @ sp[(-9)+5]
 22010  016852  0EFC               	movlw	-4
 22011  016854  006F FF8C  F001    	movff	plusw1,btemp
 22012  01685A  0EFD               	movlw	-3
 22013  01685C  006F FF8C  F002    	movff	plusw1,btemp+1
 22014  016862                     l2978:
 22015                           
 22016                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22017  016862  0EF5               	movlw	245
 22018  016864  26E1               	addwf	fsr1l,f,c
 22019  016866  0EFF               	movlw	255
 22020  016868  22E2               	addwfc	fsr1h,f,c
 22021  01686A  0012               	return		;funcret
 22022  01686C                     __end_of_atoi:
 22023                           	opt callstack 0
 22024                           
 22025 ;; *************** function _isspace *****************
 22026 ;; Defined at:
 22027 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22028 ;; Parameters:    Size  Location     Type
 22029 ;;  c               2  [STACK] int 
 22030 ;; Auto vars:     Size  Location     Type
 22031 ;;		None
 22032 ;; Return value:  Size  Location     Type
 22033 ;;                  2  [STACK] int 
 22034 ;; Registers used:
 22035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22036 ;; Tracked objects:
 22037 ;;		On entry : 0/0
 22038 ;;		On exit  : 0/0
 22039 ;;		Unchanged: 0/0
 22040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22045 ;;Total ram usage:        0 bytes
 22046 ;; Hardware stack levels used:    1
 22047 ;; Hardware stack levels required when called:   15
 22048 ;; This function calls:
 22049 ;;		Nothing
 22050 ;; This function is called by:
 22051 ;;		_atoi
 22052 ;; This function uses a reentrant model
 22053 ;;
 22054                           
 22055                           	psect	text78
 22056  019AA4                     __ptext78:
 22057                           	opt callstack 0
 22058  019AA4                     _isspace:
 22059                           	opt callstack 0
 22060                           
 22061                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22062  019AA4  52E6               	movf	postinc1,f,c
 22063                           
 22064                           ;stkvar	_isspace$5757 @ sp[(-1)+0]
 22065                           
 22066                           ;incstack = 0
 22067 ;; hardware stack exceeded
 22068  019AA6  0EFF               	movlw	-1
 22069  019AA8  6AE3               	clrf	plusw1,c
 22070  019AAA  2AE3               	incf	plusw1,f,c
 22071                           
 22072                           ;stkvar	_c @ sp[(-1)+-2]
 22073  019AAC  0EFD               	movlw	-3
 22074  019AAE  006F FF8C  F001    	movff	plusw1,btemp
 22075  019AB4  0E20               	movlw	32
 22076  019AB6  1801               	xorwf	btemp^0,w,c
 22077  019AB8  E104               	bnz	u6940
 22078  019ABA  0EFE               	movlw	-2
 22079  019ABC  50E3               	movf	plusw1,w,c
 22080  019ABE  B4D8               	btfsc	status,2,c
 22081  019AC0  D012               	goto	l8073
 22082  019AC2                     u6940:
 22083                           
 22084                           ;stkvar	_c @ sp[(-1)+-2]
 22085  019AC2  0EFD               	movlw	-3
 22086  019AC4  50E3               	movf	plusw1,w,c
 22087  019AC6  0FF7               	addlw	247
 22088  019AC8  6E0B               	movwf	(btemp+10)^0,c
 22089  019ACA  0EFE               	movlw	-2
 22090  019ACC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22091  019AD2  0EFF               	movlw	255
 22092  019AD4  220C               	addwfc	(btemp+11)^0,f,c
 22093  019AD6  500C               	movf	(btemp+11)^0,w,c
 22094  019AD8  E104               	bnz	u6950
 22095  019ADA  0E05               	movlw	5
 22096  019ADC  5C0B               	subwf	(btemp+10)^0,w,c
 22097  019ADE  A0D8               	btfss	status,0,c
 22098  019AE0  D002               	goto	l8073
 22099  019AE2                     u6950:
 22100                           
 22101                           ;stkvar	_isspace$5757 @ sp[(-1)+0]
 22102  019AE2  0EFF               	movlw	-1
 22103  019AE4  6AE3               	clrf	plusw1,c
 22104  019AE6                     l8073:
 22105                           
 22106                           ;stkvar	_isspace$5757 @ sp[(-1)+0]
 22107  019AE6  0EFF               	movlw	-1
 22108  019AE8  50E3               	movf	plusw1,w,c
 22109  019AEA  6E01               	movwf	btemp^0,c
 22110  019AEC  6A02               	clrf	(btemp+1)^0,c
 22111                           
 22112                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22113  019AEE  52E5               	movf	postdec1,f,c
 22114  019AF0  52E5               	movf	postdec1,f,c
 22115  019AF2  52E5               	movf	postdec1,f,c
 22116  019AF4  0012               	return		;funcret
 22117  019AF6                     __end_of_isspace:
 22118                           	opt callstack 0
 22119                           
 22120 ;; *************** function _isdigit *****************
 22121 ;; Defined at:
 22122 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22123 ;; Parameters:    Size  Location     Type
 22124 ;;  c               2  [STACK] int 
 22125 ;; Auto vars:     Size  Location     Type
 22126 ;;		None
 22127 ;; Return value:  Size  Location     Type
 22128 ;;                  2  [STACK] int 
 22129 ;; Registers used:
 22130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22131 ;; Tracked objects:
 22132 ;;		On entry : 0/0
 22133 ;;		On exit  : 0/0
 22134 ;;		Unchanged: 0/0
 22135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22140 ;;Total ram usage:        0 bytes
 22141 ;; Hardware stack levels used:    1
 22142 ;; Hardware stack levels required when called:   15
 22143 ;; This function calls:
 22144 ;;		Nothing
 22145 ;; This function is called by:
 22146 ;;		_vfpfcnvrt
 22147 ;;		_atoi
 22148 ;; This function uses a reentrant model
 22149 ;;
 22150                           
 22151                           	psect	text79
 22152  01A11A                     __ptext79:
 22153                           	opt callstack 0
 22154  01A11A                     _isdigit:
 22155                           	opt callstack 0
 22156                           
 22157                           ;stkvar	_c @ sp[(0)+-2]
 22158                           
 22159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22160                           ;incstack = 0
 22161 ;; hardware stack exceeded
 22162  01A11A  0EFE               	movlw	-2
 22163  01A11C  50E3               	movf	plusw1,w,c
 22164  01A11E  0FD0               	addlw	208
 22165  01A120  6E0B               	movwf	(btemp+10)^0,c
 22166  01A122  0EFF               	movlw	-1
 22167  01A124  006F FF8C  F00C    	movff	plusw1,btemp+11
 22168  01A12A  0EFF               	movlw	255
 22169  01A12C  220C               	addwfc	(btemp+11)^0,f,c
 22170  01A12E  500C               	movf	(btemp+11)^0,w,c
 22171  01A130  E106               	bnz	u5790
 22172  01A132  0E0A               	movlw	10
 22173  01A134  5C0B               	subwf	(btemp+10)^0,w,c
 22174  01A136  B0D8               	btfsc	status,0,c
 22175  01A138  D002               	goto	u5790
 22176  01A13A  0E01               	movlw	1
 22177  01A13C  D001               	goto	u5800
 22178  01A13E                     u5790:
 22179  01A13E  0E00               	movlw	0
 22180  01A140                     u5800:
 22181  01A140  6E01               	movwf	btemp^0,c
 22182  01A142  6A02               	clrf	(btemp+1)^0,c
 22183                           
 22184                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22185  01A144  52E5               	movf	postdec1,f,c
 22186  01A146  52E5               	movf	postdec1,f,c
 22187  01A148  0012               	return		;funcret
 22188  01A14A                     __end_of_isdigit:
 22189                           	opt callstack 0
 22190                           
 22191 ;; *************** function _set_vterm *****************
 22192 ;; Defined at:
 22193 ;;		line 107 in file "mconfig.c"
 22194 ;; Parameters:    Size  Location     Type
 22195 ;;  vterm           1  [STACK] const unsigned char 
 22196 ;; Auto vars:     Size  Location     Type
 22197 ;;		None
 22198 ;; Return value:  Size  Location     Type
 22199 ;;                  1  [STACK] unsigned char 
 22200 ;; Registers used:
 22201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22202 ;; Tracked objects:
 22203 ;;		On entry : 0/2
 22204 ;;		On exit  : 0/0
 22205 ;;		Unchanged: 0/0
 22206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22211 ;;Total ram usage:        0 bytes
 22212 ;; Hardware stack levels used:    1
 22213 ;; Hardware stack levels required when called:   15
 22214 ;; This function calls:
 22215 ;;		Nothing
 22216 ;; This function is called by:
 22217 ;;		_main
 22218 ;;		_check_help
 22219 ;; This function uses a reentrant model
 22220 ;;
 22221                           
 22222                           	psect	text80
 22223  01A696                     __ptext80:
 22224                           	opt callstack 0
 22225  01A696                     _set_vterm:
 22226                           	opt callstack 15
 22227                           
 22228                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22229                           ;stkvar	_vterm @ sp[(0)+-1]
 22230                           
 22231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22232                           ;incstack = 0
 22233  01A696  0EFF               	movlw	-1
 22234  01A698  006F FF8C  F00C    	movff	plusw1,btemp+11
 22235  01A69E  0E03               	movlw	3
 22236  01A6A0  160C               	andwf	(btemp+11)^0,f,c
 22237  01A6A2  EE22  F11F         	lfsr	2,_D+288
 22238  01A6A6  50DF               	movf	223,w,c
 22239  01A6A8  180C               	xorwf	(btemp+11)^0,w,c
 22240  01A6AA  0BFE               	andlw	-2
 22241  01A6AC  180C               	xorwf	(btemp+11)^0,w,c
 22242  01A6AE  6EDF               	movwf	223,c
 22243                           
 22244                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22245  01A6B0  52E5               	movf	postdec1,f,c
 22246  01A6B2  0012               	return		;funcret
 22247  01A6B4                     __end_of_set_vterm:
 22248                           	opt callstack 0
 22249                           
 22250 ;; *************** function _set_temp_display_help *****************
 22251 ;; Defined at:
 22252 ;;		line 211 in file "mconfig.c"
 22253 ;; Parameters:    Size  Location     Type
 22254 ;;  new_response    1  [STACK] const enum E16509
 22255 ;; Auto vars:     Size  Location     Type
 22256 ;;		None
 22257 ;; Return value:  Size  Location     Type
 22258 ;;                  1  [STACK] enum E16509
 22259 ;; Registers used:
 22260 ;;		wreg, fsr1l, fsr1h
 22261 ;; Tracked objects:
 22262 ;;		On entry : 0/2
 22263 ;;		On exit  : 3F/2
 22264 ;;		Unchanged: 0/0
 22265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22270 ;;Total ram usage:        0 bytes
 22271 ;; Hardware stack levels used:    1
 22272 ;; Hardware stack levels required when called:   15
 22273 ;; This function calls:
 22274 ;;		Nothing
 22275 ;; This function is called by:
 22276 ;;		_check_help
 22277 ;; This function uses a reentrant model
 22278 ;;
 22279                           
 22280                           	psect	text81
 22281  01A7DA                     __ptext81:
 22282                           	opt callstack 0
 22283  01A7DA                     _set_temp_display_help:
 22284                           	opt callstack 14
 22285                           
 22286                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22287                           
 22288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22289                           ;incstack = 0
 22290  01A7DA  0102               	movlb	2	; () banked
 22291  01A7DC  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22292                           
 22293                           ; BSR set to: 2
 22294                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22295                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22296  01A7DE  0EFF               	movlw	-1
 22297  01A7E0  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22298                           
 22299                           ; BSR set to: 2
 22300                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22301  01A7E6  52E5               	movf	postdec1,f,c
 22302  01A7E8  0012               	return		;funcret
 22303  01A7EA                     __end_of_set_temp_display_help:
 22304                           	opt callstack 0
 22305                           
 22306 ;; *************** function _set_display_info *****************
 22307 ;; Defined at:
 22308 ;;		line 200 in file "mconfig.c"
 22309 ;; Parameters:    Size  Location     Type
 22310 ;;  new_response    1  [STACK] const enum E16509
 22311 ;; Auto vars:     Size  Location     Type
 22312 ;;		None
 22313 ;; Return value:  Size  Location     Type
 22314 ;;                  1  [STACK] enum E16994
 22315 ;; Registers used:
 22316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22317 ;; Tracked objects:
 22318 ;;		On entry : 0/1
 22319 ;;		On exit  : 0/0
 22320 ;;		Unchanged: 0/0
 22321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22326 ;;Total ram usage:        0 bytes
 22327 ;; Hardware stack levels used:    1
 22328 ;; Hardware stack levels required when called:   16
 22329 ;; This function calls:
 22330 ;;		_TimerDone
 22331 ;; This function is called by:
 22332 ;;		_main
 22333 ;;		_check_help
 22334 ;; This function uses a reentrant model
 22335 ;;
 22336                           
 22337                           	psect	text82
 22338  01A6B4                     __ptext82:
 22339                           	opt callstack 0
 22340  01A6B4                     _set_display_info:
 22341                           	opt callstack 14
 22342                           
 22343                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22344                           
 22345                           ; BSR set to: 2
 22346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22347                           ;incstack = 0
 22348  01A6B4  0E07               	movlw	7
 22349  01A6B6  6EE6               	movwf	postinc1,c
 22350  01A6B8  EC65  F0D1         	call	_TimerDone	;wreg free
 22351  01A6BC  5001               	movf	btemp^0,w,c
 22352  01A6BE  B4D8               	btfsc	status,2,c
 22353  01A6C0  D006               	goto	l1689
 22354                           
 22355                           ;mconfig.c: 205:   old_info = V.response.info;
 22356  01A6C2  0102               	movlb	2	; () banked
 22357  01A6C4  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 22358                           
 22359                           ; BSR set to: 2
 22360                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22361                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22362  01A6C6  0EFF               	movlw	-1
 22363  01A6C8  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 22364  01A6CE                     l1689:
 22365                           
 22366                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22367  01A6CE  52E5               	movf	postdec1,f,c
 22368  01A6D0  0012               	return		;funcret
 22369  01A6D2                     __end_of_set_display_info:
 22370                           	opt callstack 0
 22371                           
 22372 ;; *************** function _mode_lamp_dim *****************
 22373 ;; Defined at:
 22374 ;;		line 13 in file "mconfig.c"
 22375 ;; Parameters:    Size  Location     Type
 22376 ;;  level           2  [STACK] const unsigned short 
 22377 ;; Auto vars:     Size  Location     Type
 22378 ;;		None
 22379 ;; Return value:  Size  Location     Type
 22380 ;;                  1  [STACK] void 
 22381 ;; Registers used:
 22382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22383 ;; Tracked objects:
 22384 ;;		On entry : 0/2
 22385 ;;		On exit  : 0/0
 22386 ;;		Unchanged: 0/0
 22387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22392 ;;Total ram usage:        0 bytes
 22393 ;; Hardware stack levels used:    1
 22394 ;; Hardware stack levels required when called:   16
 22395 ;; This function calls:
 22396 ;;		_PWM8_LoadDutyValue
 22397 ;; This function is called by:
 22398 ;;		_main
 22399 ;;		_check_help
 22400 ;; This function uses a reentrant model
 22401 ;;
 22402                           
 22403                           	psect	text83
 22404  01A742                     __ptext83:
 22405                           	opt callstack 0
 22406  01A742                     _mode_lamp_dim:
 22407                           	opt callstack 14
 22408                           
 22409                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22410                           ;stkvar	_level @ sp[(0)+-2]
 22411                           
 22412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22413                           ;incstack = 0
 22414  01A742  0EFE               	movlw	-2
 22415  01A744  006F FF8F FFE6     	movff	plusw1,postinc1
 22416  01A74A  006F FF8F FFE6     	movff	plusw1,postinc1
 22417  01A750  ECE5  F0CE         	call	_PWM8_LoadDutyValue	;wreg free
 22418                           
 22419                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22420  01A754  52E5               	movf	postdec1,f,c
 22421  01A756  52E5               	movf	postdec1,f,c
 22422  01A758  0012               	return		;funcret
 22423  01A75A                     __end_of_mode_lamp_dim:
 22424                           	opt callstack 0
 22425                           
 22426 ;; *************** function _mode_lamp_bright *****************
 22427 ;; Defined at:
 22428 ;;		line 18 in file "mconfig.c"
 22429 ;; Parameters:    Size  Location     Type
 22430 ;;		None
 22431 ;; Auto vars:     Size  Location     Type
 22432 ;;		None
 22433 ;; Return value:  Size  Location     Type
 22434 ;;                  1  [STACK] void 
 22435 ;; Registers used:
 22436 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22437 ;; Tracked objects:
 22438 ;;		On entry : 0/0
 22439 ;;		On exit  : 0/0
 22440 ;;		Unchanged: 0/0
 22441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22446 ;;Total ram usage:        0 bytes
 22447 ;; Hardware stack levels used:    1
 22448 ;; Hardware stack levels required when called:   16
 22449 ;; This function calls:
 22450 ;;		_PWM8_LoadDutyValue
 22451 ;; This function is called by:
 22452 ;;		_check_help
 22453 ;; This function uses a reentrant model
 22454 ;;
 22455                           
 22456                           	psect	text84
 22457  01A7F8                     __ptext84:
 22458                           	opt callstack 0
 22459  01A7F8                     _mode_lamp_bright:
 22460                           	opt callstack 13
 22461                           
 22462                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22463                           
 22464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22465                           ;incstack = 0
 22466  01A7F8  0E2C               	movlw	44
 22467  01A7FA  6EE6               	movwf	postinc1,c
 22468  01A7FC  0E01               	movlw	1
 22469  01A7FE  6EE6               	movwf	postinc1,c
 22470  01A800  ECE5  F0CE         	call	_PWM8_LoadDutyValue	;wreg free
 22471                           
 22472                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22473  01A804  0012               	return		;funcret
 22474  01A806                     __end_of_mode_lamp_bright:
 22475                           	opt callstack 0
 22476                           
 22477 ;; *************** function _PWM8_LoadDutyValue *****************
 22478 ;; Defined at:
 22479 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22480 ;; Parameters:    Size  Location     Type
 22481 ;;  dutyValue       2  [STACK] unsigned short 
 22482 ;; Auto vars:     Size  Location     Type
 22483 ;;		None
 22484 ;; Return value:  Size  Location     Type
 22485 ;;                  1  [STACK] void 
 22486 ;; Registers used:
 22487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22488 ;; Tracked objects:
 22489 ;;		On entry : 0/2
 22490 ;;		On exit  : 0/0
 22491 ;;		Unchanged: 0/0
 22492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22497 ;;Total ram usage:        0 bytes
 22498 ;; Hardware stack levels used:    1
 22499 ;; Hardware stack levels required when called:   15
 22500 ;; This function calls:
 22501 ;;		Nothing
 22502 ;; This function is called by:
 22503 ;;		_mode_lamp_dim
 22504 ;;		_mode_lamp_bright
 22505 ;; This function uses a reentrant model
 22506 ;;
 22507                           
 22508                           	psect	text85
 22509  019DCA                     __ptext85:
 22510                           	opt callstack 0
 22511  019DCA                     _PWM8_LoadDutyValue:
 22512                           	opt callstack 14
 22513                           
 22514                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22515                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22516                           
 22517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22518                           ;incstack = 0
 22519  019DCA  0EFE               	movlw	-2
 22520  019DCC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22521  019DD2  0EFF               	movlw	-1
 22522  019DD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22523  019DDA  90D8               	bcf	status,0,c
 22524  019DDC  320C               	rrcf	(btemp+11)^0,f,c
 22525  019DDE  320B               	rrcf	(btemp+10)^0,f,c
 22526  019DE0  90D8               	bcf	status,0,c
 22527  019DE2  320C               	rrcf	(btemp+11)^0,f,c
 22528  019DE4  320B               	rrcf	(btemp+10)^0,f,c
 22529  019DE6  500B               	movf	(btemp+10)^0,w,c
 22530  019DE8  6E61               	movwf	97,c	;volatile
 22531                           
 22532                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22533                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22534  019DEA  0EFE               	movlw	-2
 22535  019DEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22536  019DF2  0E03               	movlw	3
 22537  019DF4  160C               	andwf	(btemp+11)^0,f,c
 22538  019DF6  0E06               	movlw	6
 22539  019DF8  6E01               	movwf	btemp^0,c
 22540  019DFA                     u8595:
 22541  019DFA  90D8               	bcf	status,0,c
 22542  019DFC  360C               	rlcf	(btemp+11)^0,f,c
 22543  019DFE  2E01               	decfsz	btemp^0,f,c
 22544  019E00  D7FC               	goto	u8595
 22545  019E02  500C               	movf	(btemp+11)^0,w,c
 22546  019E04  6E60               	movwf	96,c	;volatile
 22547                           
 22548                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22549  019E06  52E5               	movf	postdec1,f,c
 22550  019E08  52E5               	movf	postdec1,f,c
 22551  019E0A  0012               	return		;funcret
 22552  019E0C                     __end_of_PWM8_LoadDutyValue:
 22553                           	opt callstack 0
 22554                           
 22555 ;; *************** function _help_button *****************
 22556 ;; Defined at:
 22557 ;;		line 26 in file "mconfig.c"
 22558 ;; Parameters:    Size  Location     Type
 22559 ;;		None
 22560 ;; Auto vars:     Size  Location     Type
 22561 ;;		None
 22562 ;; Return value:  Size  Location     Type
 22563 ;;                  1  [STACK] _Bool 
 22564 ;; Registers used:
 22565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22566 ;; Tracked objects:
 22567 ;;		On entry : 0/2
 22568 ;;		On exit  : 0/0
 22569 ;;		Unchanged: 0/0
 22570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22575 ;;Total ram usage:        0 bytes
 22576 ;; Hardware stack levels used:    1
 22577 ;; Hardware stack levels required when called:   16
 22578 ;; This function calls:
 22579 ;;		_StartTimer
 22580 ;;		_TimerDone
 22581 ;; This function is called by:
 22582 ;;		_check_help
 22583 ;; This function uses a reentrant model
 22584 ;;
 22585                           
 22586                           	psect	text86
 22587  019F4A                     __ptext86:
 22588                           	opt callstack 0
 22589  019F4A                     _help_button:
 22590                           	opt callstack 13
 22591                           
 22592                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22593                           
 22594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22595                           ;incstack = 0
 22596  019F4A  B0CB               	btfsc	203,0,c	;volatile
 22597  019F4C  D00C               	goto	l1632
 22598                           
 22599                           ;mconfig.c: 29:   V.help = 1;
 22600  019F4E  0102               	movlb	2	; () banked
 22601  019F50  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22602                           
 22603                           ; BSR set to: 2
 22604                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22605  019F52  0E08               	movlw	8
 22606  019F54  6EE6               	movwf	postinc1,c
 22607  019F56  EC65  F0D1         	call	_TimerDone	;wreg free
 22608  019F5A  5001               	movf	btemp^0,w,c
 22609  019F5C  B4D8               	btfsc	status,2,c
 22610  019F5E  D003               	goto	l1632
 22611                           
 22612                           ;mconfig.c: 31:    return 1;
 22613  019F60  0E01               	movlw	1
 22614  019F62  6E01               	movwf	btemp^0,c
 22615  019F64  0012               	return	
 22616  019F66                     l1632:
 22617                           
 22618                           ;mconfig.c: 34:  if (!V.help)
 22619  019F66  0102               	movlb	2	; () banked
 22620  019F68  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22621  019F6A  D008               	goto	l9677
 22622                           
 22623                           ; BSR set to: 2
 22624                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22625  019F6C  0E2C               	movlw	44
 22626  019F6E  6EE6               	movwf	postinc1,c
 22627  019F70  0E01               	movlw	1
 22628  019F72  6EE6               	movwf	postinc1,c
 22629  019F74  0E08               	movlw	8
 22630  019F76  6EE6               	movwf	postinc1,c
 22631  019F78  EC06  F0CF         	call	_StartTimer	;wreg free
 22632  019F7C                     l9677:
 22633                           
 22634                           ;mconfig.c: 37:  return 0;
 22635  019F7C  0E00               	movlw	0
 22636  019F7E  6E01               	movwf	btemp^0,c
 22637                           
 22638                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22639  019F80  0012               	return		;funcret
 22640  019F82                     __end_of_help_button:
 22641                           	opt callstack 0
 22642                           
 22643 ;; *************** function _TimerDone *****************
 22644 ;; Defined at:
 22645 ;;		line 20 in file "timers.c"
 22646 ;; Parameters:    Size  Location     Type
 22647 ;;  timer           1  [STACK] const unsigned char 
 22648 ;; Auto vars:     Size  Location     Type
 22649 ;;		None
 22650 ;; Return value:  Size  Location     Type
 22651 ;;                  1  [STACK] _Bool 
 22652 ;; Registers used:
 22653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22654 ;; Tracked objects:
 22655 ;;		On entry : 0/1
 22656 ;;		On exit  : 0/0
 22657 ;;		Unchanged: 0/0
 22658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22663 ;;Total ram usage:        0 bytes
 22664 ;; Hardware stack levels used:    1
 22665 ;; Hardware stack levels required when called:   15
 22666 ;; This function calls:
 22667 ;;		Nothing
 22668 ;; This function is called by:
 22669 ;;		_main
 22670 ;;		_WaitMs
 22671 ;;		_help_button
 22672 ;;		_check_help
 22673 ;;		_set_display_info
 22674 ;; This function uses a reentrant model
 22675 ;;
 22676                           
 22677                           	psect	text87
 22678  01A2CA                     __ptext87:
 22679                           	opt callstack 0
 22680  01A2CA                     _TimerDone:
 22681                           	opt callstack 14
 22682                           
 22683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22684                           ;incstack = 0
 22685  01A2CA  0004               	clrwdt		;# 
 22686                           
 22687                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22688                           ;stkvar	_timer @ sp[(0)+-1]
 22689  01A2CC  0EFF               	movlw	-1
 22690  01A2CE  50E3               	movf	plusw1,w,c
 22691  01A2D0  0D02               	mullw	2
 22692  01A2D2  0EDA               	movlw	low _tickCount
 22693  01A2D4  24F3               	addwf	243,w,c
 22694  01A2D6  6ED9               	movwf	fsr2l,c
 22695  01A2D8  0E01               	movlw	high _tickCount
 22696  01A2DA  20F4               	addwfc	prodh,w,c
 22697  01A2DC  6EDA               	movwf	fsr2h,c
 22698  01A2DE  50DE               	movf	postinc2,w,c
 22699  01A2E0  10DE               	iorwf	postinc2,w,c
 22700  01A2E2  A4D8               	btfss	status,2,c
 22701  01A2E4  D002               	goto	l8981
 22702                           
 22703                           ;timers.c: 24:   return 1;
 22704  01A2E6  0E01               	movlw	1
 22705  01A2E8  D001               	goto	L24
 22706  01A2EA                     l8981:
 22707                           
 22708                           ;timers.c: 26:  return 0;
 22709  01A2EA  0E00               	movlw	0
 22710  01A2EC                     L24:
 22711  01A2EC  6E01               	movwf	btemp^0,c
 22712                           
 22713                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22714  01A2EE  52E5               	movf	postdec1,f,c
 22715  01A2F0  0012               	return		;funcret
 22716  01A2F2                     __end_of_TimerDone:
 22717                           	opt callstack 0
 22718                           
 22719 ;; *************** function _StartTimer *****************
 22720 ;; Defined at:
 22721 ;;		line 12 in file "timers.c"
 22722 ;; Parameters:    Size  Location     Type
 22723 ;;  timer           1  [STACK] const unsigned char 
 22724 ;;  count           2  [STACK] const unsigned short 
 22725 ;; Auto vars:     Size  Location     Type
 22726 ;;		None
 22727 ;; Return value:  Size  Location     Type
 22728 ;;                  1  [STACK] void 
 22729 ;; Registers used:
 22730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22731 ;; Tracked objects:
 22732 ;;		On entry : 0/0
 22733 ;;		On exit  : 0/0
 22734 ;;		Unchanged: 0/0
 22735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22740 ;;Total ram usage:        0 bytes
 22741 ;; Hardware stack levels used:    1
 22742 ;; Hardware stack levels required when called:   15
 22743 ;; This function calls:
 22744 ;;		Nothing
 22745 ;; This function is called by:
 22746 ;;		_main
 22747 ;;		_WaitMs
 22748 ;;		_help_button
 22749 ;;		_check_help
 22750 ;;		_calc_bsoc
 22751 ;; This function uses a reentrant model
 22752 ;;
 22753                           
 22754                           	psect	text88
 22755  019E0C                     __ptext88:
 22756                           	opt callstack 0
 22757  019E0C                     _StartTimer:
 22758                           	opt callstack 0
 22759                           
 22760                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22761                           ;stkvar	_count @ sp[(0)+-3]
 22762                           
 22763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22764                           ;incstack = 0
 22765 ;; hardware stack exceeded
 22766  019E0C  0EFD               	movlw	-3
 22767  019E0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22768  019E14  0EFE               	movlw	-2
 22769  019E16  006F FF8C  F00C    	movff	plusw1,btemp+11
 22770  019E1C  90D8               	bcf	status,0,c
 22771  019E1E  340B               	rlcf	(btemp+10)^0,w,c
 22772  019E20  6E09               	movwf	(btemp+8)^0,c
 22773  019E22  340C               	rlcf	(btemp+11)^0,w,c
 22774  019E24  6E0A               	movwf	(btemp+9)^0,c
 22775                           
 22776                           ;stkvar	_timer @ sp[(0)+-1]
 22777  019E26  0EFF               	movlw	-1
 22778  019E28  50E3               	movf	plusw1,w,c
 22779  019E2A  0D02               	mullw	2
 22780  019E2C  0EDA               	movlw	low _tickCount
 22781  019E2E  24F3               	addwf	243,w,c
 22782  019E30  6ED9               	movwf	fsr2l,c
 22783  019E32  0E01               	movlw	high _tickCount
 22784  019E34  20F4               	addwfc	prodh,w,c
 22785  019E36  6EDA               	movwf	fsr2h,c
 22786  019E38  0060  F027  FFDE   	movff	btemp+8,postinc2
 22787  019E3E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 22788                           
 22789                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22790  019E44  52E5               	movf	postdec1,f,c
 22791  019E46  52E5               	movf	postdec1,f,c
 22792  019E48  52E5               	movf	postdec1,f,c
 22793  019E4A  0012               	return		;funcret
 22794  019E4C                     __end_of_StartTimer:
 22795                           	opt callstack 0
 22796                           
 22797 ;; *************** function _display_info *****************
 22798 ;; Defined at:
 22799 ;;		line 190 in file "mconfig.c"
 22800 ;; Parameters:    Size  Location     Type
 22801 ;;		None
 22802 ;; Auto vars:     Size  Location     Type
 22803 ;;		None
 22804 ;; Return value:  Size  Location     Type
 22805 ;;                  1  [STACK] enum E16509
 22806 ;; Registers used:
 22807 ;;		btemp
 22808 ;; Tracked objects:
 22809 ;;		On entry : 0/2
 22810 ;;		On exit  : 0/0
 22811 ;;		Unchanged: 0/0
 22812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22817 ;;Total ram usage:        0 bytes
 22818 ;; Hardware stack levels used:    1
 22819 ;; Hardware stack levels required when called:   15
 22820 ;; This function calls:
 22821 ;;		Nothing
 22822 ;; This function is called by:
 22823 ;;		_check_help
 22824 ;; This function uses a reentrant model
 22825 ;;
 22826                           
 22827                           	psect	text89
 22828  01A866                     __ptext89:
 22829                           	opt callstack 0
 22830  01A866                     _display_info:
 22831                           	opt callstack 14
 22832                           
 22833                           ;mconfig.c: 192:  return V.response.info;
 22834                           
 22835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22836                           ;incstack = 0
 22837  01A866  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 22838                           
 22839                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22840  01A86C  0012               	return		;funcret
 22841  01A86E                     __end_of_display_info:
 22842                           	opt callstack 0
 22843                           
 22844 ;; *************** function _display_help *****************
 22845 ;; Defined at:
 22846 ;;		line 195 in file "mconfig.c"
 22847 ;; Parameters:    Size  Location     Type
 22848 ;;		None
 22849 ;; Auto vars:     Size  Location     Type
 22850 ;;		None
 22851 ;; Return value:  Size  Location     Type
 22852 ;;                  1  [STACK] enum E16509
 22853 ;; Registers used:
 22854 ;;		btemp
 22855 ;; Tracked objects:
 22856 ;;		On entry : 3F/2
 22857 ;;		On exit  : 0/0
 22858 ;;		Unchanged: 0/0
 22859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22864 ;;Total ram usage:        0 bytes
 22865 ;; Hardware stack levels used:    1
 22866 ;; Hardware stack levels required when called:   15
 22867 ;; This function calls:
 22868 ;;		Nothing
 22869 ;; This function is called by:
 22870 ;;		_check_help
 22871 ;; This function uses a reentrant model
 22872 ;;
 22873                           
 22874                           	psect	text90
 22875  01A86E                     __ptext90:
 22876                           	opt callstack 0
 22877  01A86E                     _display_help:
 22878                           	opt callstack 14
 22879                           
 22880                           ;mconfig.c: 197:  return V.response.help_temp;
 22881                           
 22882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22883                           ;incstack = 0
 22884  01A86E  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 22885                           
 22886                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22887  01A874  0012               	return		;funcret
 22888  01A876                     __end_of_display_help:
 22889                           	opt callstack 0
 22890                           
 22891 ;; *************** function _check_enter_button *****************
 22892 ;; Defined at:
 22893 ;;		line 42 in file "hid.c"
 22894 ;; Parameters:    Size  Location     Type
 22895 ;;  h               1  [STACK] PTR struct H_data
 22896 ;;		 -> H(7), 
 22897 ;; Auto vars:     Size  Location     Type
 22898 ;;		None
 22899 ;; Return value:  Size  Location     Type
 22900 ;;                  1  [STACK] _Bool 
 22901 ;; Registers used:
 22902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22903 ;; Tracked objects:
 22904 ;;		On entry : 0/1
 22905 ;;		On exit  : 0/0
 22906 ;;		Unchanged: 0/0
 22907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22912 ;;Total ram usage:        0 bytes
 22913 ;; Hardware stack levels used:    1
 22914 ;; Hardware stack levels required when called:   15
 22915 ;; This function calls:
 22916 ;;		Nothing
 22917 ;; This function is called by:
 22918 ;;		_main
 22919 ;; This function uses a reentrant model
 22920 ;;
 22921                           
 22922                           	psect	text91
 22923  019E4C                     __ptext91:
 22924                           	opt callstack 0
 22925  019E4C                     _check_enter_button:
 22926                           	opt callstack 15
 22927                           
 22928                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22929                           ;stkvar	_h @ sp[(0)+-1]
 22930                           
 22931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22932                           ;incstack = 0
 22933  019E4C  0EFF               	movlw	-1
 22934  019E4E  50E3               	movf	plusw1,w,c
 22935  019E50  6ED9               	movwf	fsr2l,c
 22936  019E52  6ADA               	clrf	fsr2h,c
 22937  019E54  0E04               	movlw	4
 22938  019E56  26D9               	addwf	fsr2l,f,c
 22939  019E58  50DF               	movf	indf2,w,c
 22940  019E5A  A4D8               	btfss	status,2,c
 22941  019E5C  D013               	goto	l10249
 22942                           
 22943                           ;stkvar	_h @ sp[(0)+-1]
 22944  019E5E  0EFF               	movlw	-1
 22945  019E60  50E3               	movf	plusw1,w,c
 22946  019E62  6ED9               	movwf	fsr2l,c
 22947  019E64  6ADA               	clrf	fsr2h,c
 22948  019E66  0E05               	movlw	5
 22949  019E68  26D9               	addwf	fsr2l,f,c
 22950  019E6A  50DF               	movf	indf2,w,c
 22951  019E6C  A4D8               	btfss	status,2,c
 22952  019E6E  D00A               	goto	l10249
 22953                           
 22954                           ;hid.c: 45:   h->wait_enter = 1;
 22955                           ;stkvar	_h @ sp[(0)+-1]
 22956  019E70  0EFF               	movlw	-1
 22957  019E72  50E3               	movf	plusw1,w,c
 22958  019E74  6ED9               	movwf	fsr2l,c
 22959  019E76  6ADA               	clrf	fsr2h,c
 22960  019E78  0E04               	movlw	4
 22961  019E7A  26D9               	addwf	fsr2l,f,c
 22962  019E7C  0E01               	movlw	1
 22963  019E7E  6EDF               	movwf	indf2,c
 22964                           
 22965                           ;hid.c: 46:   return 1;
 22966  019E80  0E01               	movlw	1
 22967  019E82  D001               	goto	L25
 22968  019E84                     l10249:
 22969                           
 22970                           ;hid.c: 48:  return 0;
 22971  019E84  0E00               	movlw	0
 22972  019E86                     L25:
 22973  019E86  6E01               	movwf	btemp^0,c
 22974                           
 22975                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 22976  019E88  52E5               	movf	postdec1,f,c
 22977  019E8A  0012               	return		;funcret
 22978  019E8C                     __end_of_check_enter_button:
 22979                           	opt callstack 0
 22980                           
 22981 ;; *************** function _check_adc_scan *****************
 22982 ;; Defined at:
 22983 ;;		line 56 in file "daq.c"
 22984 ;; Parameters:    Size  Location     Type
 22985 ;;		None
 22986 ;; Auto vars:     Size  Location     Type
 22987 ;;		None
 22988 ;; Return value:  Size  Location     Type
 22989 ;;                  1  [STACK] _Bool 
 22990 ;; Registers used:
 22991 ;;		btemp
 22992 ;; Tracked objects:
 22993 ;;		On entry : 0/1
 22994 ;;		On exit  : 0/0
 22995 ;;		Unchanged: 0/0
 22996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23001 ;;Total ram usage:        0 bytes
 23002 ;; Hardware stack levels used:    1
 23003 ;; Hardware stack levels required when called:   15
 23004 ;; This function calls:
 23005 ;;		Nothing
 23006 ;; This function is called by:
 23007 ;;		_main
 23008 ;; This function uses a reentrant model
 23009 ;;
 23010                           
 23011                           	psect	text92
 23012  01A876                     __ptext92:
 23013                           	opt callstack 0
 23014  01A876                     _check_adc_scan:
 23015                           	opt callstack 15
 23016                           
 23017                           ;daq.c: 58:  return R.done;
 23018                           
 23019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23020                           ;incstack = 0
 23021  01A876  0060  F3C8  F001   	movff	_R+39,btemp	;volatile
 23022                           
 23023                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23024  01A87C  0012               	return		;funcret
 23025  01A87E                     __end_of_check_adc_scan:
 23026                           	opt callstack 0
 23027                           
 23028 ;; *************** function _calc_model_data *****************
 23029 ;; Defined at:
 23030 ;;		line 56 in file "mbmc.c"
 23031 ;; Parameters:    Size  Location     Type
 23032 ;;		None
 23033 ;; Auto vars:     Size  Location     Type
 23034 ;;		None
 23035 ;; Return value:  Size  Location     Type
 23036 ;;                  1  [STACK] void 
 23037 ;; Registers used:
 23038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23039 ;; Tracked objects:
 23040 ;;		On entry : 0/1
 23041 ;;		On exit  : 3F/1
 23042 ;;		Unchanged: 0/0
 23043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23048 ;;Total ram usage:        0 bytes
 23049 ;; Hardware stack levels used:    1
 23050 ;; Hardware stack levels required when called:   18
 23051 ;; This function calls:
 23052 ;;		___fladd
 23053 ;;		___flmul
 23054 ;;		___flsub
 23055 ;;		_lp_filter
 23056 ;;		_start_bsoc
 23057 ;;		_stop_bsoc
 23058 ;; This function is called by:
 23059 ;;		_main
 23060 ;; This function uses a reentrant model
 23061 ;;
 23062                           
 23063                           	psect	text93
 23064  015DE0                     __ptext93:
 23065                           	opt callstack 0
 23066  015DE0                     _calc_model_data:
 23067                           	opt callstack 12
 23068                           
 23069                           ;mbmc.c: 58:  stop_bsoc();
 23070                           
 23071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23072                           ;incstack = 0
 23073  015DE0  EC4C  F0D4         	call	_stop_bsoc	;wreg free
 23074                           
 23075                           ; BSR set to: 57
 23076                           ;mbmc.c: 60:  if (!V.calib) {
 23077  015DE4  0102               	movlb	2	; () banked
 23078  015DE6  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 23079  015DE8  A4D8               	btfss	status,2,c
 23080  015DEA  D161               	goto	l10149
 23081                           
 23082                           ; BSR set to: 2
 23083                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 23084  015DEC  C100  F144         	movff	_C,_C+68	;volatile
 23085  015DF0  C101  F145         	movff	_C+1,_C+69	;volatile
 23086  015DF4  C102  F146         	movff	_C+2,_C+70	;volatile
 23087  015DF8  C103  F147         	movff	_C+3,_C+71	;volatile
 23088                           
 23089                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 23090  015DFC  C104  F148         	movff	_C+4,_C+72	;volatile
 23091  015E00  C105  F149         	movff	_C+5,_C+73	;volatile
 23092  015E04  C106  F14A         	movff	_C+6,_C+74	;volatile
 23093  015E08  C107  F14B         	movff	_C+7,_C+75	;volatile
 23094                           
 23095                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 23096  015E0C  C110  F154         	movff	_C+16,_C+84	;volatile
 23097  015E10  C111  F155         	movff	_C+17,_C+85	;volatile
 23098  015E14  C112  F156         	movff	_C+18,_C+86	;volatile
 23099  015E18  C113  F157         	movff	_C+19,_C+87	;volatile
 23100                           
 23101                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 23102  015E1C  C114  F150         	movff	_C+20,_C+80	;volatile
 23103  015E20  C115  F151         	movff	_C+21,_C+81	;volatile
 23104  015E24  C116  F152         	movff	_C+22,_C+82	;volatile
 23105  015E28  C117  F153         	movff	_C+23,_C+83	;volatile
 23106                           
 23107                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 23108  015E2C  C130  F164         	movff	_C+48,_C+100	;volatile
 23109  015E30  C131  F165         	movff	_C+49,_C+101	;volatile
 23110  015E34  C132  F166         	movff	_C+50,_C+102	;volatile
 23111  015E38  C133  F167         	movff	_C+51,_C+103	;volatile
 23112                           
 23113                           ; BSR set to: 2
 23114                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 23115  015E3C  0E01               	movlw	1
 23116  015E3E  6EE6               	movwf	postinc1,c
 23117  015E40  0E10               	movlw	16
 23118  015E42  6EE6               	movwf	postinc1,c
 23119  015E44  0060  F403  FFE6   	movff	_C,postinc1
 23120  015E4A  0060  F407  FFE6   	movff	_C+1,postinc1
 23121  015E50  0060  F40B  FFE6   	movff	_C+2,postinc1
 23122  015E56  0060  F40F  FFE6   	movff	_C+3,postinc1
 23123  015E5C  0060  F413  FFE6   	movff	_C+4,postinc1
 23124  015E62  0060  F417  FFE6   	movff	_C+5,postinc1
 23125  015E68  0060  F41B  FFE6   	movff	_C+6,postinc1
 23126  015E6E  0060  F41F  FFE6   	movff	_C+7,postinc1
 23127  015E74  EC37  F0CE         	call	___flsub	;wreg free
 23128  015E78  0060  F007  FFE6   	movff	btemp,postinc1
 23129  015E7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23130  015E84  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23131  015E8A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23132  015E90  EC71  F0B9         	call	_lp_filter	;wreg free
 23133  015E94  0060  F004  F140   	movff	btemp,_C+64	;volatile
 23134  015E9A  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 23135  015EA0  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 23136  015EA6  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 23137                           
 23138                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 23139  015EAC  0E01               	movlw	1
 23140  015EAE  6EE6               	movwf	postinc1,c
 23141  015EB0  0E11               	movlw	17
 23142  015EB2  6EE6               	movwf	postinc1,c
 23143  015EB4  0060  F553  FFE6   	movff	_C+84,postinc1
 23144  015EBA  0060  F557  FFE6   	movff	_C+85,postinc1
 23145  015EC0  0060  F55B  FFE6   	movff	_C+86,postinc1
 23146  015EC6  0060  F55F  FFE6   	movff	_C+87,postinc1
 23147  015ECC  0060  F503  FFE6   	movff	_C+64,postinc1
 23148  015ED2  0060  F507  FFE6   	movff	_C+65,postinc1
 23149  015ED8  0060  F50B  FFE6   	movff	_C+66,postinc1
 23150  015EDE  0060  F50F  FFE6   	movff	_C+67,postinc1
 23151  015EE4  EC53  F095         	call	___flmul	;wreg free
 23152  015EE8  0060  F007  FFE6   	movff	btemp,postinc1
 23153  015EEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23154  015EF4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23155  015EFA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23156  015F00  EC71  F0B9         	call	_lp_filter	;wreg free
 23157  015F04  0060  F004  F168   	movff	btemp,_C+104	;volatile
 23158  015F0A  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 23159  015F10  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 23160  015F16  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 23161                           
 23162                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 23163  015F1C  0E01               	movlw	1
 23164  015F1E  6EE6               	movwf	postinc1,c
 23165  015F20  0E12               	movlw	18
 23166  015F22  6EE6               	movwf	postinc1,c
 23167  015F24  0060  F543  FFE6   	movff	_C+80,postinc1
 23168  015F2A  0060  F547  FFE6   	movff	_C+81,postinc1
 23169  015F30  0060  F54B  FFE6   	movff	_C+82,postinc1
 23170  015F36  0060  F54F  FFE6   	movff	_C+83,postinc1
 23171  015F3C  0060  F523  FFE6   	movff	_C+72,postinc1
 23172  015F42  0060  F527  FFE6   	movff	_C+73,postinc1
 23173  015F48  0060  F52B  FFE6   	movff	_C+74,postinc1
 23174  015F4E  0060  F52F  FFE6   	movff	_C+75,postinc1
 23175  015F54  EC53  F095         	call	___flmul	;wreg free
 23176  015F58  0060  F007  FFE6   	movff	btemp,postinc1
 23177  015F5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23178  015F64  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23179  015F6A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23180  015F70  EC71  F0B9         	call	_lp_filter	;wreg free
 23181  015F74  0060  F004  F170   	movff	btemp,_C+112	;volatile
 23182  015F7A  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 23183  015F80  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 23184  015F86  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 23185                           
 23186                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 23187  015F8C  0E01               	movlw	1
 23188  015F8E  6EE6               	movwf	postinc1,c
 23189  015F90  0E13               	movlw	19
 23190  015F92  6EE6               	movwf	postinc1,c
 23191  015F94  0E00               	movlw	0
 23192  015F96  6EE6               	movwf	postinc1,c
 23193  015F98  0E00               	movlw	0
 23194  015F9A  6EE6               	movwf	postinc1,c
 23195  015F9C  0E60               	movlw	96
 23196  015F9E  6EE6               	movwf	postinc1,c
 23197  015FA0  0EC1               	movlw	193
 23198  015FA2  6EE6               	movwf	postinc1,c
 23199  015FA4  0060  F593  FFE6   	movff	_C+100,postinc1
 23200  015FAA  0060  F597  FFE6   	movff	_C+101,postinc1
 23201  015FB0  0060  F59B  FFE6   	movff	_C+102,postinc1
 23202  015FB6  0060  F59F  FFE6   	movff	_C+103,postinc1
 23203  015FBC  0060  F503  FFE6   	movff	_C+64,postinc1
 23204  015FC2  0060  F507  FFE6   	movff	_C+65,postinc1
 23205  015FC8  0060  F50B  FFE6   	movff	_C+66,postinc1
 23206  015FCE  0060  F50F  FFE6   	movff	_C+67,postinc1
 23207  015FD4  EC53  F095         	call	___flmul	;wreg free
 23208  015FD8  0060  F007  FFE6   	movff	btemp,postinc1
 23209  015FDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23210  015FE4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23211  015FEA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23212  015FF0  EC68  F099         	call	___fladd	;wreg free
 23213  015FF4  0060  F007  FFE6   	movff	btemp,postinc1
 23214  015FFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23215  016000  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23216  016006  0060  F013  FFE6   	movff	btemp+3,postinc1
 23217  01600C  EC71  F0B9         	call	_lp_filter	;wreg free
 23218  016010  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 23219  016016  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 23220  01601C  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 23221  016022  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 23222                           
 23223                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 23224  016028  0E01               	movlw	1
 23225  01602A  6EE6               	movwf	postinc1,c
 23226  01602C  0E14               	movlw	20
 23227  01602E  6EE6               	movwf	postinc1,c
 23228  016030  0060  F553  FFE6   	movff	_C+84,postinc1
 23229  016036  0060  F557  FFE6   	movff	_C+85,postinc1
 23230  01603C  0060  F55B  FFE6   	movff	_C+86,postinc1
 23231  016042  0060  F55F  FFE6   	movff	_C+87,postinc1
 23232  016048  0060  F513  FFE6   	movff	_C+68,postinc1
 23233  01604E  0060  F517  FFE6   	movff	_C+69,postinc1
 23234  016054  0060  F51B  FFE6   	movff	_C+70,postinc1
 23235  01605A  0060  F51F  FFE6   	movff	_C+71,postinc1
 23236  016060  EC53  F095         	call	___flmul	;wreg free
 23237  016064  0060  F007  FFE6   	movff	btemp,postinc1
 23238  01606A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23239  016070  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23240  016076  0060  F013  FFE6   	movff	btemp+3,postinc1
 23241  01607C  EC71  F0B9         	call	_lp_filter	;wreg free
 23242  016080  0060  F004  F174   	movff	btemp,_C+116	;volatile
 23243  016086  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 23244  01608C  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 23245  016092  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 23246                           
 23247                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 23248  016098  0101               	movlb	1	; () banked
 23249  01609A  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 23250  01609C  D008               	goto	l10149
 23251                           
 23252                           ; BSR set to: 1
 23253                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 23254  01609E  0E17               	movlw	23
 23255  0160A0  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 23256  0160A2  0EB7               	movlw	183
 23257  0160A4  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 23258  0160A6  0ED1               	movlw	209
 23259  0160A8  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 23260  0160AA  0E38               	movlw	56
 23261  0160AC  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 23262  0160AE                     l10149:
 23263                           
 23264                           ;mbmc.c: 77:  start_bsoc();
 23265  0160AE  ECFC  F0D2         	call	_start_bsoc	;wreg free
 23266                           
 23267                           ; BSR set to: 57
 23268                           ;mbmc.c: 78:  C.update = 1;
 23269  0160B2  0E01               	movlw	1
 23270  0160B4  0101               	movlb	1	; () banked
 23271  0160B6  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 23272                           
 23273                           ; BSR set to: 1
 23274                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23275  0160B8  0012               	return		;funcret
 23276  0160BA                     __end_of_calc_model_data:
 23277                           	opt callstack 0
 23278                           
 23279 ;; *************** function _stop_bsoc *****************
 23280 ;; Defined at:
 23281 ;;		line 107 in file "bsoc.c"
 23282 ;; Parameters:    Size  Location     Type
 23283 ;;		None
 23284 ;; Auto vars:     Size  Location     Type
 23285 ;;		None
 23286 ;; Return value:  Size  Location     Type
 23287 ;;                  1  [STACK] void 
 23288 ;; Registers used:
 23289 ;;		None
 23290 ;; Tracked objects:
 23291 ;;		On entry : 0/1
 23292 ;;		On exit  : 3F/39
 23293 ;;		Unchanged: 0/0
 23294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23299 ;;Total ram usage:        0 bytes
 23300 ;; Hardware stack levels used:    1
 23301 ;; Hardware stack levels required when called:   15
 23302 ;; This function calls:
 23303 ;;		Nothing
 23304 ;; This function is called by:
 23305 ;;		_calc_model_data
 23306 ;; This function uses a reentrant model
 23307 ;;
 23308                           
 23309                           	psect	text94
 23310  01A898                     __ptext94:
 23311                           	opt callstack 0
 23312  01A898                     _stop_bsoc:
 23313                           	opt callstack 14
 23314                           
 23315                           ;bsoc.c: 110:  PIE6bits.TMR3IE = 0;
 23316                           
 23317                           ; BSR set to: 1
 23318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23319                           ;incstack = 0
 23320  01A898  0139               	movlb	57	; () banked
 23321  01A89A  9D96               	bcf	150,6,b	;volatile
 23322                           
 23323                           ; BSR set to: 57
 23324                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 23325  01A89C  0012               	return		;funcret
 23326  01A89E                     __end_of_stop_bsoc:
 23327                           	opt callstack 0
 23328                           
 23329 ;; *************** function _start_bsoc *****************
 23330 ;; Defined at:
 23331 ;;		line 98 in file "bsoc.c"
 23332 ;; Parameters:    Size  Location     Type
 23333 ;;		None
 23334 ;; Auto vars:     Size  Location     Type
 23335 ;;		None
 23336 ;; Return value:  Size  Location     Type
 23337 ;;                  1  [STACK] void 
 23338 ;; Registers used:
 23339 ;;		wreg, status,2, status,0, btemp+11
 23340 ;; Tracked objects:
 23341 ;;		On entry : 3C/2
 23342 ;;		On exit  : 3F/39
 23343 ;;		Unchanged: 0/0
 23344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23349 ;;Total ram usage:        0 bytes
 23350 ;; Hardware stack levels used:    1
 23351 ;; Hardware stack levels required when called:   15
 23352 ;; This function calls:
 23353 ;;		Nothing
 23354 ;; This function is called by:
 23355 ;;		_calc_model_data
 23356 ;; This function uses a reentrant model
 23357 ;;
 23358                           
 23359                           	psect	text95
 23360  01A5F8                     __ptext95:
 23361                           	opt callstack 0
 23362  01A5F8                     _start_bsoc:
 23363                           	opt callstack 14
 23364                           
 23365                           ;bsoc.c: 101:  PIE6bits.TMR3IE = 1;
 23366                           
 23367                           ; BSR set to: 57
 23368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23369                           ;incstack = 0
 23370  01A5F8  0139               	movlb	57	; () banked
 23371  01A5FA  8D96               	bsf	150,6,b	;volatile
 23372                           
 23373                           ; BSR set to: 57
 23374  01A5FC  A4BE               	btfss	190,2,c	;volatile
 23375  01A5FE  D002               	goto	u9030
 23376  01A600  0E01               	movlw	1
 23377  01A602  D001               	goto	u9036
 23378  01A604                     u9030:
 23379  01A604  0E00               	movlw	0
 23380  01A606                     u9036:
 23381  01A606  0AFF               	xorlw	255
 23382  01A608  6E0C               	movwf	(btemp+11)^0,c
 23383  01A60A  460C               	rlncf	(btemp+11)^0,f,c
 23384  01A60C  460C               	rlncf	(btemp+11)^0,f,c
 23385  01A60E  50BE               	movf	190,w,c	;volatile
 23386  01A610  180C               	xorwf	(btemp+11)^0,w,c
 23387  01A612  0BFB               	andlw	-5
 23388  01A614  180C               	xorwf	(btemp+11)^0,w,c
 23389  01A616  6EBE               	movwf	190,c	;volatile
 23390                           
 23391                           ; BSR set to: 57
 23392                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23393  01A618  0012               	return		;funcret
 23394  01A61A                     __end_of_start_bsoc:
 23395                           	opt callstack 0
 23396                           
 23397 ;; *************** function _lp_filter *****************
 23398 ;; Defined at:
 23399 ;;		line 18 in file "mbmc.c"
 23400 ;; Parameters:    Size  Location     Type
 23401 ;;  new             4  [STACK] const float 
 23402 ;;  bn              1  [STACK] const unsigned char 
 23403 ;;  slow            1  [STACK] const char 
 23404 ;; Auto vars:     Size  Location     Type
 23405 ;;  lp_speed        4  [STACK] float 
 23406 ;; Return value:  Size  Location     Type
 23407 ;;                  4  [STACK] float 
 23408 ;; Registers used:
 23409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23410 ;; Tracked objects:
 23411 ;;		On entry : 0/2
 23412 ;;		On exit  : 0/0
 23413 ;;		Unchanged: 0/0
 23414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23419 ;;Total ram usage:        0 bytes
 23420 ;; Hardware stack levels used:    1
 23421 ;; Hardware stack levels required when called:   17
 23422 ;; This function calls:
 23423 ;;		___fladd
 23424 ;;		___flmul
 23425 ;;		___flsub
 23426 ;; This function is called by:
 23427 ;;		_main
 23428 ;;		_convert_adc_data
 23429 ;;		_calc_model_data
 23430 ;; This function uses a reentrant model
 23431 ;;
 23432                           
 23433                           	psect	text96
 23434  0172E2                     __ptext96:
 23435                           	opt callstack 0
 23436  0172E2                     _lp_filter:
 23437                           	opt callstack 0
 23438                           
 23439                           ; BSR set to: 57
 23440                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23441  0172E2  52E6               	movf	postinc1,f,c
 23442  0172E4  52E6               	movf	postinc1,f,c
 23443  0172E6  52E6               	movf	postinc1,f,c
 23444  0172E8  52E6               	movf	postinc1,f,c
 23445                           
 23446                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 23447                           ;stkvar	_bn @ sp[(-4)+-5]
 23448                           
 23449                           ;incstack = 0
 23450  0172EA  0EF7               	movlw	-9
 23451  0172EC  006F FF8C  F001    	movff	plusw1,btemp
 23452  0172F2  0E14               	movlw	20
 23453  0172F4  6401               	cpfsgt	btemp^0,c
 23454  0172F6  D011               	goto	l9631
 23455  0172F8                     u8850:
 23456                           
 23457                           ;mbmc.c: 24:   return new;
 23458                           ;stkvar	_new @ sp[(-4)+-4]
 23459  0172F8  0EF8               	movlw	-8
 23460  0172FA  006F FF8C  F001    	movff	plusw1,btemp
 23461  017300  0EF9               	movlw	-7
 23462  017302  006F FF8C  F002    	movff	plusw1,btemp+1
 23463  017308  0EFA               	movlw	-6
 23464  01730A  006F FF8C  F003    	movff	plusw1,btemp+2
 23465  017310  0EFB               	movlw	-5
 23466  017312  006F FF8C  F004    	movff	plusw1,btemp+3
 23467  017318  D0BD               	goto	l1780
 23468  01731A                     l9631:
 23469                           
 23470                           ;mbmc.c: 26:  if (slow == (-1)) {
 23471                           ;stkvar	_slow @ sp[(-4)+-6]
 23472  01731A  0EF6               	movlw	-10
 23473  01731C  28E3               	incf	plusw1,w,c
 23474  01731E  A4D8               	btfss	status,2,c
 23475  017320  D012               	goto	l9639
 23476                           
 23477                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 23478                           ;stkvar	_bn @ sp[(-4)+-5]
 23479  017322  0EF7               	movlw	-9
 23480  017324  50E3               	movf	plusw1,w,c
 23481  017326  0D04               	mullw	4
 23482  017328  0E00               	movlw	low lp_filter@smooth
 23483  01732A  24F3               	addwf	243,w,c
 23484  01732C  6ED9               	movwf	fsr2l,c
 23485  01732E  0E03               	movlw	high lp_filter@smooth
 23486  017330  20F4               	addwfc	prodh,w,c
 23487  017332  6EDA               	movwf	fsr2h,c
 23488  017334  0E00               	movlw	0
 23489  017336  6EDE               	movwf	postinc2,c
 23490  017338  0E00               	movlw	0
 23491  01733A  6EDE               	movwf	postinc2,c
 23492  01733C  0E00               	movlw	0
 23493  01733E  6EDE               	movwf	postinc2,c
 23494  017340  0E00               	movlw	0
 23495  017342  6EDD               	movwf	postdec2,c
 23496  017344  D7D9               	goto	u8850
 23497  017346                     l9639:
 23498                           
 23499                           ;mbmc.c: 31:  if (slow) {
 23500                           ;stkvar	_slow @ sp[(-4)+-6]
 23501  017346  0EF6               	movlw	-10
 23502  017348  50E3               	movf	plusw1,w,c
 23503  01734A  B4D8               	btfsc	status,2,c
 23504  01734C  D006               	goto	l9643
 23505                           
 23506                           ;mbmc.c: 32:   lp_speed = 0.033;
 23507  01734E  0E02               	movlw	2
 23508  017350  6E09               	movwf	(btemp+8)^0,c
 23509  017352  0E2B               	movlw	43
 23510  017354  6E0A               	movwf	(btemp+9)^0,c
 23511  017356  0E07               	movlw	7
 23512  017358  D005               	goto	L26
 23513  01735A                     l9643:
 23514                           
 23515                           ;mbmc.c: 34:   lp_speed = 0.066;
 23516  01735A  0E02               	movlw	2
 23517  01735C  6E09               	movwf	(btemp+8)^0,c
 23518  01735E  0E2B               	movlw	43
 23519  017360  6E0A               	movwf	(btemp+9)^0,c
 23520  017362  0E87               	movlw	135
 23521  017364                     L26:
 23522  017364  6E0B               	movwf	(btemp+10)^0,c
 23523  017366  0E3D               	movlw	61
 23524  017368  6E0C               	movwf	(btemp+11)^0,c
 23525                           
 23526                           ;stkvar	_lp_speed @ sp[(-4)+0]
 23527  01736A  0EFC               	movlw	-4
 23528  01736C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23529  017372  0EFD               	movlw	-3
 23530  017374  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23531  01737A  0EFE               	movlw	-2
 23532  01737C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23533  017382  0EFF               	movlw	-1
 23534  017384  0060  F033  FFE3   	movff	btemp+11,plusw1
 23535                           
 23536                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 23537                           ;stkvar	_bn @ sp[(-4)+-5]
 23538  01738A  0EF7               	movlw	-9
 23539  01738C  50E3               	movf	plusw1,w,c
 23540  01738E  0D04               	mullw	4
 23541  017390  0E00               	movlw	low lp_filter@smooth
 23542  017392  24F3               	addwf	243,w,c
 23543  017394  6ED9               	movwf	fsr2l,c
 23544  017396  0E03               	movlw	high lp_filter@smooth
 23545  017398  20F4               	addwfc	prodh,w,c
 23546  01739A  6EDA               	movwf	fsr2h,c
 23547  01739C  006F FF7B FFE6     	movff	postinc2,postinc1
 23548  0173A2  006F FF7B FFE6     	movff	postinc2,postinc1
 23549  0173A8  006F FF7B FFE6     	movff	postinc2,postinc1
 23550  0173AE  006F FF7B FFE6     	movff	postinc2,postinc1
 23551                           
 23552                           ;stkvar	_lp_speed @ sp[(-8)+0]
 23553  0173B4  0EF8               	movlw	-8
 23554  0173B6  006F FF8F FFE6     	movff	plusw1,postinc1
 23555  0173BC  006F FF8F FFE6     	movff	plusw1,postinc1
 23556  0173C2  006F FF8F FFE6     	movff	plusw1,postinc1
 23557  0173C8  006F FF8F FFE6     	movff	plusw1,postinc1
 23558                           
 23559                           ;stkvar	_bn @ sp[(-12)+-5]
 23560  0173CE  0EEF               	movlw	-17
 23561  0173D0  50E3               	movf	plusw1,w,c
 23562  0173D2  0D04               	mullw	4
 23563  0173D4  0E00               	movlw	low lp_filter@smooth
 23564  0173D6  24F3               	addwf	243,w,c
 23565  0173D8  6ED9               	movwf	fsr2l,c
 23566  0173DA  0E03               	movlw	high lp_filter@smooth
 23567  0173DC  20F4               	addwfc	prodh,w,c
 23568  0173DE  6EDA               	movwf	fsr2h,c
 23569  0173E0  006F FF7B FFE6     	movff	postinc2,postinc1
 23570  0173E6  006F FF7B FFE6     	movff	postinc2,postinc1
 23571  0173EC  006F FF7B FFE6     	movff	postinc2,postinc1
 23572  0173F2  006F FF7B FFE6     	movff	postinc2,postinc1
 23573                           
 23574                           ;stkvar	_new @ sp[(-16)+-4]
 23575  0173F8  0EEC               	movlw	-20
 23576  0173FA  006F FF8F FFE6     	movff	plusw1,postinc1
 23577  017400  006F FF8F FFE6     	movff	plusw1,postinc1
 23578  017406  006F FF8F FFE6     	movff	plusw1,postinc1
 23579  01740C  006F FF8F FFE6     	movff	plusw1,postinc1
 23580  017412  EC37  F0CE         	call	___flsub	;wreg free
 23581  017416  0060  F007  FFE6   	movff	btemp,postinc1
 23582  01741C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23583  017422  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23584  017428  0060  F013  FFE6   	movff	btemp+3,postinc1
 23585  01742E  EC53  F095         	call	___flmul	;wreg free
 23586  017432  0060  F007  FFE6   	movff	btemp,postinc1
 23587  017438  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23588  01743E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23589  017444  0060  F013  FFE6   	movff	btemp+3,postinc1
 23590  01744A  EC68  F099         	call	___fladd	;wreg free
 23591                           
 23592                           ;stkvar	_bn @ sp[(-4)+-5]
 23593  01744E  0EF7               	movlw	-9
 23594  017450  50E3               	movf	plusw1,w,c
 23595  017452  0D04               	mullw	4
 23596  017454  0E00               	movlw	low lp_filter@smooth
 23597  017456  24F3               	addwf	243,w,c
 23598  017458  6ED9               	movwf	fsr2l,c
 23599  01745A  0E03               	movlw	high lp_filter@smooth
 23600  01745C  20F4               	addwfc	prodh,w,c
 23601  01745E  6EDA               	movwf	fsr2h,c
 23602  017460  0060  F007  FFDE   	movff	btemp,postinc2
 23603  017466  0060  F00B  FFDE   	movff	btemp+1,postinc2
 23604  01746C  0060  F00F  FFDE   	movff	btemp+2,postinc2
 23605  017472  0060  F013  FFDD   	movff	btemp+3,postdec2
 23606  017478  52DD               	movf	postdec2,f,c
 23607  01747A  52DD               	movf	postdec2,f,c
 23608  01747C  006F FF78  F001    	movff	postinc2,btemp
 23609  017482  006F FF78  F002    	movff	postinc2,btemp+1
 23610  017488  006F FF78  F003    	movff	postinc2,btemp+2
 23611  01748E  006F FF78  F004    	movff	postinc2,btemp+3
 23612  017494                     l1780:
 23613                           
 23614                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 23615  017494  0EF6               	movlw	246
 23616  017496  26E1               	addwf	fsr1l,f,c
 23617  017498  0EFF               	movlw	255
 23618  01749A  22E2               	addwfc	fsr1h,f,c
 23619  01749C  0012               	return		;funcret
 23620  01749E                     __end_of_lp_filter:
 23621                           	opt callstack 0
 23622                           
 23623 ;; *************** function ___flsub *****************
 23624 ;; Defined at:
 23625 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 23626 ;; Parameters:    Size  Location     Type
 23627 ;;  b               4  [STACK] float 
 23628 ;;  a               4  [STACK] float 
 23629 ;; Auto vars:     Size  Location     Type
 23630 ;;		None
 23631 ;; Return value:  Size  Location     Type
 23632 ;;                  4  [STACK] float 
 23633 ;; Registers used:
 23634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23635 ;; Tracked objects:
 23636 ;;		On entry : 0/1
 23637 ;;		On exit  : 0/0
 23638 ;;		Unchanged: 0/0
 23639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23644 ;;Total ram usage:        0 bytes
 23645 ;; Hardware stack levels used:    1
 23646 ;; Hardware stack levels required when called:   16
 23647 ;; This function calls:
 23648 ;;		___fladd
 23649 ;; This function is called by:
 23650 ;;		_conv_raw_result
 23651 ;;		_lp_filter
 23652 ;;		_calc_model_data
 23653 ;;		_efgtoa
 23654 ;; This function uses a reentrant model
 23655 ;;
 23656                           
 23657                           	psect	text97
 23658  019C6E                     __ptext97:
 23659                           	opt callstack 0
 23660  019C6E                     ___flsub:
 23661                           	opt callstack 0
 23662                           
 23663                           ;stkvar	_a @ sp[(0)+-8]
 23664                           
 23665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23666                           ;incstack = 0
 23667 ;; hardware stack exceeded
 23668  019C6E  0EFB               	movlw	-5
 23669  019C70  7EE3               	btg	plusw1,7,c
 23670                           
 23671                           ;stkvar	_a @ sp[(0)+-8]
 23672  019C72  0EF8               	movlw	-8
 23673  019C74  006F FF8F FFE6     	movff	plusw1,postinc1
 23674  019C7A  006F FF8F FFE6     	movff	plusw1,postinc1
 23675  019C80  006F FF8F FFE6     	movff	plusw1,postinc1
 23676  019C86  006F FF8F FFE6     	movff	plusw1,postinc1
 23677                           
 23678                           ;stkvar	_b @ sp[(-4)+-4]
 23679  019C8C  0EF8               	movlw	-8
 23680  019C8E  006F FF8F FFE6     	movff	plusw1,postinc1
 23681  019C94  006F FF8F FFE6     	movff	plusw1,postinc1
 23682  019C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 23683  019CA0  006F FF8F FFE6     	movff	plusw1,postinc1
 23684  019CA6  EC68  F099         	call	___fladd	;wreg free
 23685                           
 23686                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 23687  019CAA  0EF8               	movlw	248
 23688  019CAC  26E1               	addwf	fsr1l,f,c
 23689  019CAE  0EFF               	movlw	255
 23690  019CB0  22E2               	addwfc	fsr1h,f,c
 23691  019CB2  0012               	return		;funcret
 23692  019CB4                     __end_of___flsub:
 23693                           	opt callstack 0
 23694                           
 23695 ;; *************** function ___fladd *****************
 23696 ;; Defined at:
 23697 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 23698 ;; Parameters:    Size  Location     Type
 23699 ;;  b               4  [STACK] float 
 23700 ;;  a               4  [STACK] float 
 23701 ;; Auto vars:     Size  Location     Type
 23702 ;;  grs             1  [STACK] unsigned char 
 23703 ;;  bexp            1  [STACK] unsigned char 
 23704 ;;  aexp            1  [STACK] unsigned char 
 23705 ;;  signs           1  [STACK] unsigned char 
 23706 ;; Return value:  Size  Location     Type
 23707 ;;                  4  [STACK] unsigned char 
 23708 ;; Registers used:
 23709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23710 ;; Tracked objects:
 23711 ;;		On entry : 0/0
 23712 ;;		On exit  : 0/0
 23713 ;;		Unchanged: 0/0
 23714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23719 ;;Total ram usage:        0 bytes
 23720 ;; Hardware stack levels used:    1
 23721 ;; Hardware stack levels required when called:   15
 23722 ;; This function calls:
 23723 ;;		Nothing
 23724 ;; This function is called by:
 23725 ;;		_lp_filter
 23726 ;;		_calc_model_data
 23727 ;;		_calc_bsoc
 23728 ;;		_efgtoa
 23729 ;;		___flsub
 23730 ;; This function uses a reentrant model
 23731 ;;
 23732                           
 23733                           	psect	text98
 23734  0132D0                     __ptext98:
 23735                           	opt callstack 0
 23736  0132D0                     ___fladd:
 23737                           	opt callstack 0
 23738                           
 23739                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23740  0132D0  52E6               	movf	postinc1,f,c
 23741  0132D2  52E6               	movf	postinc1,f,c
 23742  0132D4  52E6               	movf	postinc1,f,c
 23743  0132D6  52E6               	movf	postinc1,f,c
 23744                           
 23745                           ;stkvar	_b @ sp[(-4)+-4]
 23746                           
 23747                           ;incstack = 0
 23748 ;; hardware stack exceeded
 23749  0132D8  0EFB               	movlw	251
 23750  0132DA  24E1               	addwf	fsr1l,w,c
 23751  0132DC  6ED9               	movwf	fsr2l,c
 23752  0132DE  0EFF               	movlw	255
 23753  0132E0  20E2               	addwfc	fsr1h,w,c
 23754  0132E2  6EDA               	movwf	fsr2h,c
 23755  0132E4  50DF               	movf	indf2,w,c
 23756  0132E6  6E0C               	movwf	(btemp+11)^0,c
 23757  0132E8  0E80               	movlw	128
 23758  0132EA  160C               	andwf	(btemp+11)^0,f,c
 23759                           
 23760                           ;stkvar	_signs @ sp[(-4)+3]
 23761  0132EC  0EFF               	movlw	-1
 23762  0132EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 23763                           
 23764                           ;stkvar	_b @ sp[(-4)+-4]
 23765  0132F4  0EFB               	movlw	251
 23766  0132F6  24E1               	addwf	fsr1l,w,c
 23767  0132F8  6ED9               	movwf	fsr2l,c
 23768  0132FA  0EFF               	movlw	255
 23769  0132FC  20E2               	addwfc	fsr1h,w,c
 23770  0132FE  6EDA               	movwf	fsr2h,c
 23771  013300  50DF               	movf	indf2,w,c
 23772  013302  6E0C               	movwf	(btemp+11)^0,c
 23773  013304  90D8               	bcf	status,0,c
 23774  013306  340C               	rlcf	(btemp+11)^0,w,c
 23775  013308  6E0B               	movwf	(btemp+10)^0,c
 23776                           
 23777                           ;stkvar	_bexp @ sp[(-4)+1]
 23778  01330A  0EFD               	movlw	-3
 23779  01330C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23780                           
 23781                           ;stkvar	_b @ sp[(-4)+-4]
 23782  013312  0EFA               	movlw	250
 23783  013314  24E1               	addwf	fsr1l,w,c
 23784  013316  6ED9               	movwf	fsr2l,c
 23785  013318  0EFF               	movlw	255
 23786  01331A  20E2               	addwfc	fsr1h,w,c
 23787  01331C  6EDA               	movwf	fsr2h,c
 23788  01331E  AEDF               	btfss	indf2,7,c
 23789  013320  D002               	goto	l7099
 23790                           
 23791                           ;stkvar	_bexp @ sp[(-4)+1]
 23792  013322  0EFD               	movlw	-3
 23793  013324  80E3               	bsf	plusw1,0,c
 23794  013326                     l7099:
 23795                           
 23796                           ;stkvar	_bexp @ sp[(-4)+1]
 23797  013326  0EFD               	movlw	-3
 23798  013328  50E3               	movf	plusw1,w,c
 23799  01332A  B4D8               	btfsc	status,2,c
 23800  01332C  D027               	goto	l7109
 23801                           
 23802                           ;stkvar	_bexp @ sp[(-4)+1]
 23803  01332E  0EFD               	movlw	-3
 23804  013330  28E3               	incf	plusw1,w,c
 23805  013332  A4D8               	btfss	status,2,c
 23806  013334  D018               	goto	l7105
 23807  013336  0E00               	movlw	0
 23808  013338  6E09               	movwf	(btemp+8)^0,c
 23809  01333A  0E00               	movlw	0
 23810  01333C  6E0A               	movwf	(btemp+9)^0,c
 23811  01333E  0E00               	movlw	0
 23812  013340  6E0B               	movwf	(btemp+10)^0,c
 23813  013342  0E00               	movlw	0
 23814  013344  6E0C               	movwf	(btemp+11)^0,c
 23815                           
 23816                           ;stkvar	_b @ sp[(-4)+-4]
 23817  013346  0EF8               	movlw	-8
 23818  013348  0060  F027  FFE3   	movff	btemp+8,plusw1
 23819  01334E  0EF9               	movlw	-7
 23820  013350  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23821  013356  0EFA               	movlw	-6
 23822  013358  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23823  01335E  0EFB               	movlw	-5
 23824  013360  0060  F033  FFE3   	movff	btemp+11,plusw1
 23825  013366                     l7105:
 23826                           
 23827                           ;stkvar	_b @ sp[(-4)+-4]
 23828  013366  0EFA               	movlw	-6
 23829  013368  8EE3               	bsf	plusw1,7,c
 23830                           
 23831                           ;stkvar	_b @ sp[(-4)+-4]
 23832  01336A  0EFB               	movlw	251
 23833  01336C  24E1               	addwf	fsr1l,w,c
 23834  01336E  6ED9               	movwf	fsr2l,c
 23835  013370  0EFF               	movlw	255
 23836  013372  20E2               	addwfc	fsr1h,w,c
 23837  013374  6EDA               	movwf	fsr2h,c
 23838  013376  0E00               	movlw	0
 23839  013378  6EDF               	movwf	indf2,c
 23840  01337A  D018               	goto	l7111
 23841  01337C                     l7109:
 23842  01337C  0E00               	movlw	0
 23843  01337E  6E09               	movwf	(btemp+8)^0,c
 23844  013380  0E00               	movlw	0
 23845  013382  6E0A               	movwf	(btemp+9)^0,c
 23846  013384  0E00               	movlw	0
 23847  013386  6E0B               	movwf	(btemp+10)^0,c
 23848  013388  0E00               	movlw	0
 23849  01338A  6E0C               	movwf	(btemp+11)^0,c
 23850                           
 23851                           ;stkvar	_b @ sp[(-4)+-4]
 23852  01338C  0EF8               	movlw	-8
 23853  01338E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23854  013394  0EF9               	movlw	-7
 23855  013396  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23856  01339C  0EFA               	movlw	-6
 23857  01339E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23858  0133A4  0EFB               	movlw	-5
 23859  0133A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 23860  0133AC                     l7111:
 23861                           
 23862                           ;stkvar	_a @ sp[(-4)+-8]
 23863  0133AC  0EF7               	movlw	247
 23864  0133AE  24E1               	addwf	fsr1l,w,c
 23865  0133B0  6ED9               	movwf	fsr2l,c
 23866  0133B2  0EFF               	movlw	255
 23867  0133B4  20E2               	addwfc	fsr1h,w,c
 23868  0133B6  6EDA               	movwf	fsr2h,c
 23869  0133B8  50DF               	movf	indf2,w,c
 23870  0133BA  6E0C               	movwf	(btemp+11)^0,c
 23871  0133BC  0E80               	movlw	128
 23872  0133BE  160C               	andwf	(btemp+11)^0,f,c
 23873                           
 23874                           ;stkvar	_aexp @ sp[(-4)+2]
 23875  0133C0  0EFE               	movlw	-2
 23876  0133C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 23877                           
 23878                           ;stkvar	_signs @ sp[(-4)+3]
 23879                           ;stkvar	_aexp @ sp[(-4)+2]
 23880  0133C8  50E1               	movf	fsr1l,w,c
 23881  0133CA  0FFE               	addlw	-2
 23882  0133CC  6ED9               	movwf	fsr2l,c
 23883  0133CE  50E2               	movf	fsr1h,w,c
 23884  0133D0  6EDA               	movwf	fsr2h,c
 23885  0133D2  0EFF               	movlw	255
 23886  0133D4  22DA               	addwfc	fsr2h,f,c
 23887  0133D6  0EFF               	movlw	-1
 23888  0133D8  50E3               	movf	plusw1,w,c
 23889  0133DA  18DE               	xorwf	postinc2,w,c
 23890  0133DC  B4D8               	btfsc	status,2,c
 23891  0133DE  D002               	goto	l7117
 23892                           
 23893                           ;stkvar	_signs @ sp[(-4)+3]
 23894  0133E0  0EFF               	movlw	-1
 23895  0133E2  8CE3               	bsf	plusw1,6,c
 23896  0133E4                     l7117:
 23897                           
 23898                           ;stkvar	_a @ sp[(-4)+-8]
 23899  0133E4  0EF7               	movlw	247
 23900  0133E6  24E1               	addwf	fsr1l,w,c
 23901  0133E8  6ED9               	movwf	fsr2l,c
 23902  0133EA  0EFF               	movlw	255
 23903  0133EC  20E2               	addwfc	fsr1h,w,c
 23904  0133EE  6EDA               	movwf	fsr2h,c
 23905  0133F0  50DF               	movf	indf2,w,c
 23906  0133F2  6E0C               	movwf	(btemp+11)^0,c
 23907  0133F4  90D8               	bcf	status,0,c
 23908  0133F6  340C               	rlcf	(btemp+11)^0,w,c
 23909  0133F8  6E0B               	movwf	(btemp+10)^0,c
 23910                           
 23911                           ;stkvar	_aexp @ sp[(-4)+2]
 23912  0133FA  0EFE               	movlw	-2
 23913  0133FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23914                           
 23915                           ;stkvar	_a @ sp[(-4)+-8]
 23916  013402  0EF6               	movlw	246
 23917  013404  24E1               	addwf	fsr1l,w,c
 23918  013406  6ED9               	movwf	fsr2l,c
 23919  013408  0EFF               	movlw	255
 23920  01340A  20E2               	addwfc	fsr1h,w,c
 23921  01340C  6EDA               	movwf	fsr2h,c
 23922  01340E  AEDF               	btfss	indf2,7,c
 23923  013410  D002               	goto	l7123
 23924                           
 23925                           ;stkvar	_aexp @ sp[(-4)+2]
 23926  013412  0EFE               	movlw	-2
 23927  013414  80E3               	bsf	plusw1,0,c
 23928  013416                     l7123:
 23929                           
 23930                           ;stkvar	_aexp @ sp[(-4)+2]
 23931  013416  0EFE               	movlw	-2
 23932  013418  50E3               	movf	plusw1,w,c
 23933  01341A  B4D8               	btfsc	status,2,c
 23934  01341C  D027               	goto	l7133
 23935                           
 23936                           ;stkvar	_aexp @ sp[(-4)+2]
 23937  01341E  0EFE               	movlw	-2
 23938  013420  28E3               	incf	plusw1,w,c
 23939  013422  A4D8               	btfss	status,2,c
 23940  013424  D018               	goto	l7129
 23941  013426  0E00               	movlw	0
 23942  013428  6E09               	movwf	(btemp+8)^0,c
 23943  01342A  0E00               	movlw	0
 23944  01342C  6E0A               	movwf	(btemp+9)^0,c
 23945  01342E  0E00               	movlw	0
 23946  013430  6E0B               	movwf	(btemp+10)^0,c
 23947  013432  0E00               	movlw	0
 23948  013434  6E0C               	movwf	(btemp+11)^0,c
 23949                           
 23950                           ;stkvar	_a @ sp[(-4)+-8]
 23951  013436  0EF4               	movlw	-12
 23952  013438  0060  F027  FFE3   	movff	btemp+8,plusw1
 23953  01343E  0EF5               	movlw	-11
 23954  013440  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23955  013446  0EF6               	movlw	-10
 23956  013448  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23957  01344E  0EF7               	movlw	-9
 23958  013450  0060  F033  FFE3   	movff	btemp+11,plusw1
 23959  013456                     l7129:
 23960                           
 23961                           ;stkvar	_a @ sp[(-4)+-8]
 23962  013456  0EF6               	movlw	-10
 23963  013458  8EE3               	bsf	plusw1,7,c
 23964                           
 23965                           ;stkvar	_a @ sp[(-4)+-8]
 23966  01345A  0EF7               	movlw	247
 23967  01345C  24E1               	addwf	fsr1l,w,c
 23968  01345E  6ED9               	movwf	fsr2l,c
 23969  013460  0EFF               	movlw	255
 23970  013462  20E2               	addwfc	fsr1h,w,c
 23971  013464  6EDA               	movwf	fsr2h,c
 23972  013466  0E00               	movlw	0
 23973  013468  6EDF               	movwf	indf2,c
 23974  01346A  D018               	goto	l7135
 23975  01346C                     l7133:
 23976  01346C  0E00               	movlw	0
 23977  01346E  6E09               	movwf	(btemp+8)^0,c
 23978  013470  0E00               	movlw	0
 23979  013472  6E0A               	movwf	(btemp+9)^0,c
 23980  013474  0E00               	movlw	0
 23981  013476  6E0B               	movwf	(btemp+10)^0,c
 23982  013478  0E00               	movlw	0
 23983  01347A  6E0C               	movwf	(btemp+11)^0,c
 23984                           
 23985                           ;stkvar	_a @ sp[(-4)+-8]
 23986  01347C  0EF4               	movlw	-12
 23987  01347E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23988  013484  0EF5               	movlw	-11
 23989  013486  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23990  01348C  0EF6               	movlw	-10
 23991  01348E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23992  013494  0EF7               	movlw	-9
 23993  013496  0060  F033  FFE3   	movff	btemp+11,plusw1
 23994  01349C                     l7135:
 23995                           
 23996                           ;stkvar	_bexp @ sp[(-4)+1]
 23997                           ;stkvar	_aexp @ sp[(-4)+2]
 23998  01349C  50E1               	movf	fsr1l,w,c
 23999  01349E  0FFE               	addlw	-2
 24000  0134A0  6ED9               	movwf	fsr2l,c
 24001  0134A2  50E2               	movf	fsr1h,w,c
 24002  0134A4  6EDA               	movwf	fsr2h,c
 24003  0134A6  0EFF               	movlw	255
 24004  0134A8  22DA               	addwfc	fsr2h,f,c
 24005  0134AA  0EFD               	movlw	-3
 24006  0134AC  50E3               	movf	plusw1,w,c
 24007  0134AE  5CDE               	subwf	postinc2,w,c
 24008  0134B0  B0D8               	btfsc	status,0,c
 24009  0134B2  D0A4               	goto	l7171
 24010                           
 24011                           ;stkvar	_signs @ sp[(-4)+3]
 24012  0134B4  0EFF               	movlw	-1
 24013  0134B6  ACE3               	btfss	plusw1,6,c
 24014  0134B8  D002               	goto	l7141
 24015                           
 24016                           ;stkvar	_signs @ sp[(-4)+3]
 24017  0134BA  0EFF               	movlw	-1
 24018  0134BC  7EE3               	btg	plusw1,7,c
 24019  0134BE                     l7141:
 24020                           
 24021                           ;stkvar	_bexp @ sp[(-4)+1]
 24022                           ;stkvar	_grs @ sp[(-4)+0]
 24023  0134BE  0EFD               	movlw	-3
 24024  0134C0  006F FF8C  F001    	movff	plusw1,btemp
 24025  0134C6  0EFC               	movlw	-4
 24026  0134C8  0060  F007  FFE3   	movff	btemp,plusw1
 24027                           
 24028                           ;stkvar	_aexp @ sp[(-4)+2]
 24029                           ;stkvar	_bexp @ sp[(-4)+1]
 24030  0134CE  0EFE               	movlw	-2
 24031  0134D0  006F FF8C  F001    	movff	plusw1,btemp
 24032  0134D6  0EFD               	movlw	-3
 24033  0134D8  0060  F007  FFE3   	movff	btemp,plusw1
 24034                           
 24035                           ;stkvar	_grs @ sp[(-4)+0]
 24036                           ;stkvar	_aexp @ sp[(-4)+2]
 24037  0134DE  0EFC               	movlw	-4
 24038  0134E0  006F FF8C  F001    	movff	plusw1,btemp
 24039  0134E6  0EFE               	movlw	-2
 24040  0134E8  0060  F007  FFE3   	movff	btemp,plusw1
 24041                           
 24042                           ;stkvar	_b @ sp[(-4)+-4]
 24043                           ;stkvar	_grs @ sp[(-4)+0]
 24044  0134EE  0EF8               	movlw	-8
 24045  0134F0  006F FF8C  F001    	movff	plusw1,btemp
 24046  0134F6  0EFC               	movlw	-4
 24047  0134F8  0060  F007  FFE3   	movff	btemp,plusw1
 24048                           
 24049                           ;stkvar	_a @ sp[(-4)+-8]
 24050                           ;stkvar	_b @ sp[(-4)+-4]
 24051  0134FE  0EF4               	movlw	-12
 24052  013500  006F FF8C  F001    	movff	plusw1,btemp
 24053  013506  0EF8               	movlw	-8
 24054  013508  0060  F007  FFE3   	movff	btemp,plusw1
 24055                           
 24056                           ;stkvar	_grs @ sp[(-4)+0]
 24057                           ;stkvar	_a @ sp[(-4)+-8]
 24058  01350E  0EFC               	movlw	-4
 24059  013510  006F FF8C  F001    	movff	plusw1,btemp
 24060  013516  0EF4               	movlw	-12
 24061  013518  0060  F007  FFE3   	movff	btemp,plusw1
 24062                           
 24063                           ;stkvar	_b @ sp[(-4)+-4]
 24064  01351E  0EF9               	movlw	249
 24065  013520  24E1               	addwf	fsr1l,w,c
 24066  013522  6ED9               	movwf	fsr2l,c
 24067  013524  0EFF               	movlw	255
 24068  013526  20E2               	addwfc	fsr1h,w,c
 24069  013528  6EDA               	movwf	fsr2h,c
 24070  01352A  50DF               	movf	indf2,w,c
 24071  01352C  6E0C               	movwf	(btemp+11)^0,c
 24072                           
 24073                           ;stkvar	_grs @ sp[(-4)+0]
 24074  01352E  0EFC               	movlw	-4
 24075  013530  0060  F033  FFE3   	movff	btemp+11,plusw1
 24076                           
 24077                           ;stkvar	_a @ sp[(-4)+-8]
 24078  013536  0EF5               	movlw	245
 24079  013538  24E1               	addwf	fsr1l,w,c
 24080  01353A  6ED9               	movwf	fsr2l,c
 24081  01353C  0EFF               	movlw	255
 24082  01353E  20E2               	addwfc	fsr1h,w,c
 24083  013540  6EDA               	movwf	fsr2h,c
 24084                           
 24085                           ;stkvar	_b @ sp[(-4)+-4]
 24086  013542  0EF9               	movlw	249
 24087  013544  24E1               	addwf	fsr1l,w,c
 24088  013546  6EE9               	movwf	fsr0l,c
 24089  013548  0EFF               	movlw	255
 24090  01354A  20E2               	addwfc	fsr1h,w,c
 24091  01354C  6EEA               	movwf	fsr0h,c
 24092  01354E  006F FF7F FFEF     	movff	indf2,indf0
 24093                           
 24094                           ;stkvar	_grs @ sp[(-4)+0]
 24095                           ;stkvar	_a @ sp[(-4)+-8]
 24096  013554  0EF5               	movlw	245
 24097  013556  24E1               	addwf	fsr1l,w,c
 24098  013558  6ED9               	movwf	fsr2l,c
 24099  01355A  0EFF               	movlw	255
 24100  01355C  20E2               	addwfc	fsr1h,w,c
 24101  01355E  6EDA               	movwf	fsr2h,c
 24102  013560  0EFC               	movlw	-4
 24103  013562  006F FF8F FFDF     	movff	plusw1,indf2
 24104                           
 24105                           ;stkvar	_b @ sp[(-4)+-4]
 24106  013568  0EFA               	movlw	250
 24107  01356A  24E1               	addwf	fsr1l,w,c
 24108  01356C  6ED9               	movwf	fsr2l,c
 24109  01356E  0EFF               	movlw	255
 24110  013570  20E2               	addwfc	fsr1h,w,c
 24111  013572  6EDA               	movwf	fsr2h,c
 24112  013574  50DF               	movf	indf2,w,c
 24113  013576  6E0C               	movwf	(btemp+11)^0,c
 24114                           
 24115                           ;stkvar	_grs @ sp[(-4)+0]
 24116  013578  0EFC               	movlw	-4
 24117  01357A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24118                           
 24119                           ;stkvar	_a @ sp[(-4)+-8]
 24120  013580  0EF6               	movlw	246
 24121  013582  24E1               	addwf	fsr1l,w,c
 24122  013584  6ED9               	movwf	fsr2l,c
 24123  013586  0EFF               	movlw	255
 24124  013588  20E2               	addwfc	fsr1h,w,c
 24125  01358A  6EDA               	movwf	fsr2h,c
 24126                           
 24127                           ;stkvar	_b @ sp[(-4)+-4]
 24128  01358C  0EFA               	movlw	250
 24129  01358E  24E1               	addwf	fsr1l,w,c
 24130  013590  6EE9               	movwf	fsr0l,c
 24131  013592  0EFF               	movlw	255
 24132  013594  20E2               	addwfc	fsr1h,w,c
 24133  013596  6EEA               	movwf	fsr0h,c
 24134  013598  006F FF7F FFEF     	movff	indf2,indf0
 24135                           
 24136                           ;stkvar	_grs @ sp[(-4)+0]
 24137                           ;stkvar	_a @ sp[(-4)+-8]
 24138  01359E  0EF6               	movlw	246
 24139  0135A0  24E1               	addwf	fsr1l,w,c
 24140  0135A2  6ED9               	movwf	fsr2l,c
 24141  0135A4  0EFF               	movlw	255
 24142  0135A6  20E2               	addwfc	fsr1h,w,c
 24143  0135A8  6EDA               	movwf	fsr2h,c
 24144  0135AA  0EFC               	movlw	-4
 24145  0135AC  006F FF8F FFDF     	movff	plusw1,indf2
 24146                           
 24147                           ;stkvar	_b @ sp[(-4)+-4]
 24148  0135B2  0EFB               	movlw	251
 24149  0135B4  24E1               	addwf	fsr1l,w,c
 24150  0135B6  6ED9               	movwf	fsr2l,c
 24151  0135B8  0EFF               	movlw	255
 24152  0135BA  20E2               	addwfc	fsr1h,w,c
 24153  0135BC  6EDA               	movwf	fsr2h,c
 24154  0135BE  50DF               	movf	indf2,w,c
 24155  0135C0  6E0C               	movwf	(btemp+11)^0,c
 24156                           
 24157                           ;stkvar	_grs @ sp[(-4)+0]
 24158  0135C2  0EFC               	movlw	-4
 24159  0135C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24160                           
 24161                           ;stkvar	_a @ sp[(-4)+-8]
 24162  0135CA  0EF7               	movlw	247
 24163  0135CC  24E1               	addwf	fsr1l,w,c
 24164  0135CE  6ED9               	movwf	fsr2l,c
 24165  0135D0  0EFF               	movlw	255
 24166  0135D2  20E2               	addwfc	fsr1h,w,c
 24167  0135D4  6EDA               	movwf	fsr2h,c
 24168                           
 24169                           ;stkvar	_b @ sp[(-4)+-4]
 24170  0135D6  0EFB               	movlw	251
 24171  0135D8  24E1               	addwf	fsr1l,w,c
 24172  0135DA  6EE9               	movwf	fsr0l,c
 24173  0135DC  0EFF               	movlw	255
 24174  0135DE  20E2               	addwfc	fsr1h,w,c
 24175  0135E0  6EEA               	movwf	fsr0h,c
 24176  0135E2  006F FF7F FFEF     	movff	indf2,indf0
 24177                           
 24178                           ;stkvar	_grs @ sp[(-4)+0]
 24179                           ;stkvar	_a @ sp[(-4)+-8]
 24180  0135E8  0EF7               	movlw	247
 24181  0135EA  24E1               	addwf	fsr1l,w,c
 24182  0135EC  6ED9               	movwf	fsr2l,c
 24183  0135EE  0EFF               	movlw	255
 24184  0135F0  20E2               	addwfc	fsr1h,w,c
 24185  0135F2  6EDA               	movwf	fsr2h,c
 24186  0135F4  0EFC               	movlw	-4
 24187  0135F6  006F FF8F FFDF     	movff	plusw1,indf2
 24188  0135FC                     l7171:
 24189                           
 24190                           ;stkvar	_grs @ sp[(-4)+0]
 24191  0135FC  0EFC               	movlw	-4
 24192  0135FE  6AE3               	clrf	plusw1,c
 24193                           
 24194                           ;stkvar	_aexp @ sp[(-4)+2]
 24195  013600  0EFE               	movlw	-2
 24196  013602  50E3               	movf	plusw1,w,c
 24197  013604  6E0B               	movwf	(btemp+10)^0,c
 24198  013606  6A0C               	clrf	(btemp+11)^0,c
 24199                           
 24200                           ;stkvar	_bexp @ sp[(-4)+1]
 24201  013608  0EFD               	movlw	-3
 24202  01360A  50E3               	movf	plusw1,w,c
 24203  01360C  5E0B               	subwf	(btemp+10)^0,f,c
 24204  01360E  0E00               	movlw	0
 24205  013610  5A0C               	subwfb	(btemp+11)^0,f,c
 24206  013612  BE0C               	btfsc	(btemp+11)^0,7,c
 24207  013614  D062               	goto	l7195
 24208  013616  500C               	movf	(btemp+11)^0,w,c
 24209  013618  E104               	bnz	u5120
 24210  01361A  0E1A               	movlw	26
 24211  01361C  5C0B               	subwf	(btemp+10)^0,w,c
 24212  01361E  A0D8               	btfss	status,0,c
 24213  013620  D05C               	goto	l7195
 24214  013622                     u5120:
 24215                           
 24216                           ;stkvar	_b @ sp[(-4)+-4]
 24217  013622  0EF8               	movlw	-8
 24218  013624  50E3               	movf	plusw1,w,c
 24219  013626  E10A               	bnz	u5131
 24220  013628  0EF9               	movlw	-7
 24221  01362A  50E3               	movf	plusw1,w,c
 24222  01362C  E107               	bnz	u5131
 24223  01362E  0EFA               	movlw	-6
 24224  013630  50E3               	movf	plusw1,w,c
 24225  013632  E104               	bnz	u5131
 24226  013634  0EFB               	movlw	-5
 24227  013636  50E3               	movf	plusw1,w,c
 24228  013638  B4D8               	btfsc	status,2,c
 24229  01363A  D003               	goto	u5130
 24230  01363C                     u5131:
 24231  01363C  6A0C               	clrf	(btemp+11)^0,c
 24232  01363E  2A0C               	incf	(btemp+11)^0,f,c
 24233  013640  D001               	goto	u5148
 24234  013642                     u5130:
 24235  013642  6A0C               	clrf	(btemp+11)^0,c
 24236  013644                     u5148:
 24237                           
 24238                           ;stkvar	_grs @ sp[(-4)+0]
 24239  013644  0EFC               	movlw	-4
 24240  013646  0060  F033  FFE3   	movff	btemp+11,plusw1
 24241                           
 24242                           ;stkvar	_b @ sp[(-4)+-4]
 24243  01364C  0EF8               	movlw	-8
 24244  01364E  6AE3               	clrf	plusw1,c
 24245  013650  0EF9               	movlw	-7
 24246  013652  6AE3               	clrf	plusw1,c
 24247  013654  0EFA               	movlw	-6
 24248  013656  6AE3               	clrf	plusw1,c
 24249  013658  0EFB               	movlw	-5
 24250  01365A  6AE3               	clrf	plusw1,c
 24251                           
 24252                           ;stkvar	_aexp @ sp[(-4)+2]
 24253                           ;stkvar	_bexp @ sp[(-4)+1]
 24254  01365C  0EFE               	movlw	-2
 24255  01365E  006F FF8C  F001    	movff	plusw1,btemp
 24256  013664  0EFD               	movlw	-3
 24257  013666  0060  F007  FFE3   	movff	btemp,plusw1
 24258  01366C  D042               	goto	u5180
 24259  01366E                     l7181:
 24260                           
 24261                           ;stkvar	_grs @ sp[(-4)+0]
 24262  01366E  0EFC               	movlw	-4
 24263  013670  A0E3               	btfss	plusw1,0,c
 24264  013672  D00D               	goto	l7185
 24265                           
 24266                           ;stkvar	_grs @ sp[(-4)+0]
 24267  013674  0EFC               	movlw	-4
 24268  013676  006F FF8C  F00C    	movff	plusw1,btemp+11
 24269  01367C  90D8               	bcf	status,0,c
 24270  01367E  320C               	rrcf	(btemp+11)^0,f,c
 24271  013680  0E01               	movlw	1
 24272  013682  120C               	iorwf	(btemp+11)^0,f,c
 24273                           
 24274                           ;stkvar	_grs @ sp[(-4)+0]
 24275  013684  0EFC               	movlw	-4
 24276  013686  0060  F033  FFE3   	movff	btemp+11,plusw1
 24277  01368C  D009               	goto	l7187
 24278  01368E                     l7185:
 24279                           
 24280                           ;stkvar	_grs @ sp[(-4)+0]
 24281  01368E  50E1               	movf	fsr1l,w,c
 24282  013690  0FFC               	addlw	-4
 24283  013692  6ED9               	movwf	fsr2l,c
 24284  013694  50E2               	movf	fsr1h,w,c
 24285  013696  6EDA               	movwf	fsr2h,c
 24286  013698  0EFF               	movlw	255
 24287  01369A  22DA               	addwfc	fsr2h,f,c
 24288  01369C  90D8               	bcf	status,0,c
 24289  01369E  32DF               	rrcf	indf2,f,c
 24290  0136A0                     l7187:
 24291                           
 24292                           ;stkvar	_b @ sp[(-4)+-4]
 24293  0136A0  0EF8               	movlw	-8
 24294  0136A2  A0E3               	btfss	plusw1,0,c
 24295  0136A4  D002               	goto	l7191
 24296                           
 24297                           ;stkvar	_grs @ sp[(-4)+0]
 24298  0136A6  0EFC               	movlw	-4
 24299  0136A8  8EE3               	bsf	plusw1,7,c
 24300  0136AA                     l7191:
 24301  0136AA  0E01               	movlw	1
 24302  0136AC  6E0C               	movwf	(btemp+11)^0,c
 24303                           
 24304                           ;stkvar	_b @ sp[(-4)+-4]
 24305  0136AE  50E1               	movf	fsr1l,w,c
 24306  0136B0  0FF8               	addlw	-8
 24307  0136B2  6ED9               	movwf	fsr2l,c
 24308  0136B4  50E2               	movf	fsr1h,w,c
 24309  0136B6  6EDA               	movwf	fsr2h,c
 24310  0136B8  0EFF               	movlw	255
 24311  0136BA  22DA               	addwfc	fsr2h,f,c
 24312  0136BC  280C               	incf	(btemp+11)^0,w,c
 24313  0136BE  52DE               	movf	postinc2,f,c
 24314  0136C0  D008               	goto	u5170
 24315  0136C2                     u5175:
 24316  0136C2  52DE               	movf	postinc2,f,c
 24317  0136C4  90D8               	bcf	status,0,c
 24318  0136C6  BEDC               	btfsc	preinc2,7,c
 24319  0136C8  80D8               	bsf	status,0,c
 24320  0136CA  32DD               	rrcf	postdec2,f,c
 24321  0136CC  32DD               	rrcf	postdec2,f,c
 24322  0136CE  32DD               	rrcf	postdec2,f,c
 24323  0136D0  32DE               	rrcf	postinc2,f,c
 24324  0136D2                     u5170:
 24325  0136D2  2EE8               	decfsz	wreg,f,c
 24326  0136D4  D7F6               	goto	u5175
 24327                           
 24328                           ;stkvar	_bexp @ sp[(-4)+1]
 24329  0136D6  0EFD               	movlw	-3
 24330  0136D8  2AE3               	incf	plusw1,f,c
 24331  0136DA                     l7195:
 24332                           
 24333                           ;stkvar	_aexp @ sp[(-4)+2]
 24334                           ;stkvar	_bexp @ sp[(-4)+1]
 24335  0136DA  50E1               	movf	fsr1l,w,c
 24336  0136DC  0FFD               	addlw	-3
 24337  0136DE  6ED9               	movwf	fsr2l,c
 24338  0136E0  50E2               	movf	fsr1h,w,c
 24339  0136E2  6EDA               	movwf	fsr2h,c
 24340  0136E4  0EFF               	movlw	255
 24341  0136E6  22DA               	addwfc	fsr2h,f,c
 24342  0136E8  0EFE               	movlw	-2
 24343  0136EA  50E3               	movf	plusw1,w,c
 24344  0136EC  5CDE               	subwf	postinc2,w,c
 24345  0136EE  A0D8               	btfss	status,0,c
 24346  0136F0  D7BE               	goto	l7181
 24347  0136F2                     u5180:
 24348                           
 24349                           ;stkvar	_signs @ sp[(-4)+3]
 24350  0136F2  0EFF               	movlw	-1
 24351  0136F4  BCE3               	btfsc	plusw1,6,c
 24352  0136F6  D066               	goto	l7223
 24353                           
 24354                           ;stkvar	_bexp @ sp[(-4)+1]
 24355  0136F8  0EFD               	movlw	-3
 24356  0136FA  50E3               	movf	plusw1,w,c
 24357  0136FC  B4D8               	btfsc	status,2,c
 24358  0136FE  D0F2               	goto	u5280
 24359                           
 24360                           ;stkvar	_a @ sp[(-4)+-8]
 24361                           ;stkvar	_b @ sp[(-4)+-4]
 24362  013700  0EF8               	movlw	-8
 24363  013702  50E3               	movf	plusw1,w,c
 24364  013704  6E01               	movwf	btemp^0,c
 24365  013706  0EF4               	movlw	-12
 24366  013708  50E3               	movf	plusw1,w,c
 24367  01370A  2601               	addwf	btemp^0,f,c
 24368  01370C  0EF8               	movlw	-8
 24369  01370E  0060  F007  FFE3   	movff	btemp,plusw1
 24370  013714  0EF9               	movlw	-7
 24371  013716  50E3               	movf	plusw1,w,c
 24372  013718  6E01               	movwf	btemp^0,c
 24373  01371A  0EF5               	movlw	-11
 24374  01371C  50E3               	movf	plusw1,w,c
 24375  01371E  2201               	addwfc	btemp^0,f,c
 24376  013720  0EF9               	movlw	-7
 24377  013722  0060  F007  FFE3   	movff	btemp,plusw1
 24378  013728  0EFA               	movlw	-6
 24379  01372A  50E3               	movf	plusw1,w,c
 24380  01372C  6E01               	movwf	btemp^0,c
 24381  01372E  0EF6               	movlw	-10
 24382  013730  50E3               	movf	plusw1,w,c
 24383  013732  2201               	addwfc	btemp^0,f,c
 24384  013734  0EFA               	movlw	-6
 24385  013736  0060  F007  FFE3   	movff	btemp,plusw1
 24386  01373C  0EFB               	movlw	-5
 24387  01373E  50E3               	movf	plusw1,w,c
 24388  013740  6E01               	movwf	btemp^0,c
 24389  013742  0EF7               	movlw	-9
 24390  013744  50E3               	movf	plusw1,w,c
 24391  013746  2201               	addwfc	btemp^0,f,c
 24392  013748  0EFB               	movlw	-5
 24393  01374A  0060  F007  FFE3   	movff	btemp,plusw1
 24394                           
 24395                           ;stkvar	_b @ sp[(-4)+-4]
 24396  013750  0EFB               	movlw	-5
 24397  013752  A0E3               	btfss	plusw1,0,c
 24398  013754  D101               	goto	u5320
 24399                           
 24400                           ;stkvar	_grs @ sp[(-4)+0]
 24401  013756  0EFC               	movlw	-4
 24402  013758  A0E3               	btfss	plusw1,0,c
 24403  01375A  D00D               	goto	l7213
 24404                           
 24405                           ;stkvar	_grs @ sp[(-4)+0]
 24406  01375C  0EFC               	movlw	-4
 24407  01375E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24408  013764  90D8               	bcf	status,0,c
 24409  013766  320C               	rrcf	(btemp+11)^0,f,c
 24410  013768  0E01               	movlw	1
 24411  01376A  120C               	iorwf	(btemp+11)^0,f,c
 24412                           
 24413                           ;stkvar	_grs @ sp[(-4)+0]
 24414  01376C  0EFC               	movlw	-4
 24415  01376E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24416  013774  D009               	goto	l7215
 24417  013776                     l7213:
 24418                           
 24419                           ;stkvar	_grs @ sp[(-4)+0]
 24420  013776  50E1               	movf	fsr1l,w,c
 24421  013778  0FFC               	addlw	-4
 24422  01377A  6ED9               	movwf	fsr2l,c
 24423  01377C  50E2               	movf	fsr1h,w,c
 24424  01377E  6EDA               	movwf	fsr2h,c
 24425  013780  0EFF               	movlw	255
 24426  013782  22DA               	addwfc	fsr2h,f,c
 24427  013784  90D8               	bcf	status,0,c
 24428  013786  32DF               	rrcf	indf2,f,c
 24429  013788                     l7215:
 24430                           
 24431                           ;stkvar	_b @ sp[(-4)+-4]
 24432  013788  0EF8               	movlw	-8
 24433  01378A  A0E3               	btfss	plusw1,0,c
 24434  01378C  D002               	goto	l7219
 24435                           
 24436                           ;stkvar	_grs @ sp[(-4)+0]
 24437  01378E  0EFC               	movlw	-4
 24438  013790  8EE3               	bsf	plusw1,7,c
 24439  013792                     l7219:
 24440  013792  0E01               	movlw	1
 24441  013794  6E0C               	movwf	(btemp+11)^0,c
 24442                           
 24443                           ;stkvar	_b @ sp[(-4)+-4]
 24444  013796  50E1               	movf	fsr1l,w,c
 24445  013798  0FF8               	addlw	-8
 24446  01379A  6ED9               	movwf	fsr2l,c
 24447  01379C  50E2               	movf	fsr1h,w,c
 24448  01379E  6EDA               	movwf	fsr2h,c
 24449  0137A0  0EFF               	movlw	255
 24450  0137A2  22DA               	addwfc	fsr2h,f,c
 24451  0137A4  280C               	incf	(btemp+11)^0,w,c
 24452  0137A6  52DE               	movf	postinc2,f,c
 24453  0137A8  D008               	goto	u5240
 24454  0137AA                     u5245:
 24455  0137AA  52DE               	movf	postinc2,f,c
 24456  0137AC  90D8               	bcf	status,0,c
 24457  0137AE  BEDC               	btfsc	preinc2,7,c
 24458  0137B0  80D8               	bsf	status,0,c
 24459  0137B2  32DD               	rrcf	postdec2,f,c
 24460  0137B4  32DD               	rrcf	postdec2,f,c
 24461  0137B6  32DD               	rrcf	postdec2,f,c
 24462  0137B8  32DE               	rrcf	postinc2,f,c
 24463  0137BA                     u5240:
 24464  0137BA  2EE8               	decfsz	wreg,f,c
 24465  0137BC  D7F6               	goto	u5245
 24466                           
 24467                           ;stkvar	_bexp @ sp[(-4)+1]
 24468  0137BE  0EFD               	movlw	-3
 24469  0137C0  2AE3               	incf	plusw1,f,c
 24470  0137C2  D0CA               	goto	u5320
 24471  0137C4                     l7223:
 24472                           
 24473                           ;stkvar	_a @ sp[(-4)+-8]
 24474                           ;stkvar	_b @ sp[(-4)+-4]
 24475  0137C4  50E1               	movf	fsr1l,w,c
 24476  0137C6  0FF8               	addlw	-8
 24477  0137C8  6ED9               	movwf	fsr2l,c
 24478  0137CA  50E2               	movf	fsr1h,w,c
 24479  0137CC  6EDA               	movwf	fsr2h,c
 24480  0137CE  0EFF               	movlw	255
 24481  0137D0  22DA               	addwfc	fsr2h,f,c
 24482  0137D2  0EF4               	movlw	-12
 24483  0137D4  50E3               	movf	plusw1,w,c
 24484  0137D6  5CDE               	subwf	postinc2,w,c
 24485  0137D8  0EF5               	movlw	-11
 24486  0137DA  50E3               	movf	plusw1,w,c
 24487  0137DC  58DE               	subwfb	postinc2,w,c
 24488  0137DE  0EF6               	movlw	-10
 24489  0137E0  50E3               	movf	plusw1,w,c
 24490  0137E2  58DE               	subwfb	postinc2,w,c
 24491  0137E4  50DE               	movf	postinc2,w,c
 24492  0137E6  0A80               	xorlw	128
 24493  0137E8  6E01               	movwf	btemp^0,c
 24494  0137EA  0EF7               	movlw	-9
 24495  0137EC  50E3               	movf	plusw1,w,c
 24496  0137EE  0A80               	xorlw	128
 24497  0137F0  5801               	subwfb	btemp^0,w,c
 24498  0137F2  B0D8               	btfsc	status,0,c
 24499  0137F4  D053               	goto	l7235
 24500                           
 24501                           ;stkvar	_b @ sp[(-4)+-4]
 24502                           ;stkvar	_a @ sp[(-4)+-8]
 24503  0137F6  0EF4               	movlw	-12
 24504  0137F8  006F FF8C  F009    	movff	plusw1,btemp+8
 24505  0137FE  0EF5               	movlw	-11
 24506  013800  006F FF8C  F00A    	movff	plusw1,btemp+9
 24507  013806  0EF6               	movlw	-10
 24508  013808  006F FF8C  F00B    	movff	plusw1,btemp+10
 24509  01380E  0EF7               	movlw	-9
 24510  013810  006F FF8C  F00C    	movff	plusw1,btemp+11
 24511  013816  0EF8               	movlw	-8
 24512  013818  50E3               	movf	plusw1,w,c
 24513  01381A  5E09               	subwf	(btemp+8)^0,f,c
 24514  01381C  0EF9               	movlw	-7
 24515  01381E  50E3               	movf	plusw1,w,c
 24516  013820  5A0A               	subwfb	(btemp+9)^0,f,c
 24517  013822  0EFA               	movlw	-6
 24518  013824  50E3               	movf	plusw1,w,c
 24519  013826  5A0B               	subwfb	(btemp+10)^0,f,c
 24520  013828  0EFB               	movlw	-5
 24521  01382A  50E3               	movf	plusw1,w,c
 24522  01382C  5A0C               	subwfb	(btemp+11)^0,f,c
 24523  01382E  0EFF               	movlw	255
 24524  013830  2409               	addwf	(btemp+8)^0,w,c
 24525  013832  6E05               	movwf	(btemp+4)^0,c
 24526  013834  0EFF               	movlw	255
 24527  013836  200A               	addwfc	(btemp+9)^0,w,c
 24528  013838  6E06               	movwf	(btemp+5)^0,c
 24529  01383A  0EFF               	movlw	255
 24530  01383C  200B               	addwfc	(btemp+10)^0,w,c
 24531  01383E  6E07               	movwf	(btemp+6)^0,c
 24532  013840  0EFF               	movlw	255
 24533  013842  200C               	addwfc	(btemp+11)^0,w,c
 24534  013844  6E08               	movwf	(btemp+7)^0,c
 24535                           
 24536                           ;stkvar	_b @ sp[(-4)+-4]
 24537  013846  0EF8               	movlw	-8
 24538  013848  0060  F017  FFE3   	movff	btemp+4,plusw1
 24539  01384E  0EF9               	movlw	-7
 24540  013850  0060  F01B  FFE3   	movff	btemp+5,plusw1
 24541  013856  0EFA               	movlw	-6
 24542  013858  0060  F01F  FFE3   	movff	btemp+6,plusw1
 24543  01385E  0EFB               	movlw	-5
 24544  013860  0060  F023  FFE3   	movff	btemp+7,plusw1
 24545                           
 24546                           ;stkvar	_signs @ sp[(-4)+3]
 24547  013866  0EFF               	movlw	-1
 24548  013868  7EE3               	btg	plusw1,7,c
 24549                           
 24550                           ;stkvar	_grs @ sp[(-4)+0]
 24551  01386A  0EFC               	movlw	-4
 24552  01386C  50E3               	movf	plusw1,w,c
 24553  01386E  0800               	sublw	0
 24554  013870  6E0C               	movwf	(btemp+11)^0,c
 24555                           
 24556                           ;stkvar	_grs @ sp[(-4)+0]
 24557  013872  0EFC               	movlw	-4
 24558  013874  0060  F033  FFE3   	movff	btemp+11,plusw1
 24559                           
 24560                           ;stkvar	_grs @ sp[(-4)+0]
 24561  01387A  0EFC               	movlw	-4
 24562  01387C  50E3               	movf	plusw1,w,c
 24563  01387E  A4D8               	btfss	status,2,c
 24564  013880  D020               	goto	l7237
 24565                           
 24566                           ;stkvar	_b @ sp[(-4)+-4]
 24567  013882  50E1               	movf	fsr1l,w,c
 24568  013884  0FF8               	addlw	-8
 24569  013886  6ED9               	movwf	fsr2l,c
 24570  013888  50E2               	movf	fsr1h,w,c
 24571  01388A  6EDA               	movwf	fsr2h,c
 24572  01388C  0EFF               	movlw	255
 24573  01388E  22DA               	addwfc	fsr2h,f,c
 24574  013890  2ADE               	incf	postinc2,f,c
 24575  013892  0E00               	movlw	0
 24576  013894  22DE               	addwfc	postinc2,f,c
 24577  013896  22DE               	addwfc	postinc2,f,c
 24578  013898  22DE               	addwfc	postinc2,f,c
 24579  01389A  D013               	goto	l7237
 24580  01389C                     l7235:
 24581                           
 24582                           ;stkvar	_a @ sp[(-4)+-8]
 24583                           ;stkvar	_b @ sp[(-4)+-4]
 24584  01389C  50E1               	movf	fsr1l,w,c
 24585  01389E  0FF8               	addlw	-8
 24586  0138A0  6ED9               	movwf	fsr2l,c
 24587  0138A2  50E2               	movf	fsr1h,w,c
 24588  0138A4  6EDA               	movwf	fsr2h,c
 24589  0138A6  0EFF               	movlw	255
 24590  0138A8  22DA               	addwfc	fsr2h,f,c
 24591  0138AA  0EF4               	movlw	-12
 24592  0138AC  50E3               	movf	plusw1,w,c
 24593  0138AE  5EDE               	subwf	postinc2,f,c
 24594  0138B0  0EF5               	movlw	-11
 24595  0138B2  50E3               	movf	plusw1,w,c
 24596  0138B4  5ADE               	subwfb	postinc2,f,c
 24597  0138B6  0EF6               	movlw	-10
 24598  0138B8  50E3               	movf	plusw1,w,c
 24599  0138BA  5ADE               	subwfb	postinc2,f,c
 24600  0138BC  0EF7               	movlw	-9
 24601  0138BE  50E3               	movf	plusw1,w,c
 24602  0138C0  5ADE               	subwfb	postinc2,f,c
 24603  0138C2                     l7237:
 24604                           
 24605                           ;stkvar	_b @ sp[(-4)+-4]
 24606  0138C2  0EF8               	movlw	-8
 24607  0138C4  50E3               	movf	plusw1,w,c
 24608  0138C6  E145               	bnz	l7259
 24609  0138C8  0EF9               	movlw	-7
 24610  0138CA  50E3               	movf	plusw1,w,c
 24611  0138CC  E142               	bnz	l7259
 24612  0138CE  0EFA               	movlw	-6
 24613  0138D0  50E3               	movf	plusw1,w,c
 24614  0138D2  E13F               	bnz	l7259
 24615  0138D4  0EFB               	movlw	-5
 24616  0138D6  50E3               	movf	plusw1,w,c
 24617  0138D8  A4D8               	btfss	status,2,c
 24618  0138DA  D03B               	goto	l7259
 24619                           
 24620                           ;stkvar	_grs @ sp[(-4)+0]
 24621  0138DC  0EFC               	movlw	-4
 24622  0138DE  50E3               	movf	plusw1,w,c
 24623  0138E0  A4D8               	btfss	status,2,c
 24624  0138E2  D037               	goto	l7259
 24625  0138E4                     u5280:
 24626  0138E4  0E00               	movlw	0
 24627  0138E6  6E01               	movwf	btemp^0,c
 24628  0138E8  0E00               	movlw	0
 24629  0138EA  6E02               	movwf	(btemp+1)^0,c
 24630  0138EC  0E00               	movlw	0
 24631  0138EE  6E03               	movwf	(btemp+2)^0,c
 24632  0138F0  0E00               	movlw	0
 24633  0138F2  6E04               	movwf	(btemp+3)^0,c
 24634  0138F4  D0C6               	goto	l2795
 24635  0138F6                     l7245:
 24636                           
 24637                           ;stkvar	_b @ sp[(-4)+-4]
 24638  0138F6  90D8               	bcf	status,0,c
 24639  0138F8  0EF8               	movlw	-8
 24640  0138FA  36E3               	rlcf	plusw1,f,c
 24641  0138FC  0EF9               	movlw	-7
 24642  0138FE  36E3               	rlcf	plusw1,f,c
 24643  013900  0EFA               	movlw	-6
 24644  013902  36E3               	rlcf	plusw1,f,c
 24645  013904  0EFB               	movlw	-5
 24646  013906  36E3               	rlcf	plusw1,f,c
 24647                           
 24648                           ;stkvar	_grs @ sp[(-4)+0]
 24649  013908  0EFC               	movlw	-4
 24650  01390A  AEE3               	btfss	plusw1,7,c
 24651  01390C  D002               	goto	l2807
 24652                           
 24653                           ;stkvar	_b @ sp[(-4)+-4]
 24654  01390E  0EF8               	movlw	-8
 24655  013910  80E3               	bsf	plusw1,0,c
 24656  013912                     l2807:
 24657                           
 24658                           ;stkvar	_grs @ sp[(-4)+0]
 24659  013912  0EFC               	movlw	-4
 24660  013914  A0E3               	btfss	plusw1,0,c
 24661  013916  D00E               	goto	l7253
 24662                           
 24663                           ;stkvar	_grs @ sp[(-4)+0]
 24664  013918  0EFC               	movlw	-4
 24665  01391A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24666  013920  90D8               	bcf	status,0,c
 24667  013922  340C               	rlcf	(btemp+11)^0,w,c
 24668  013924  6E0B               	movwf	(btemp+10)^0,c
 24669  013926  0E01               	movlw	1
 24670  013928  120B               	iorwf	(btemp+10)^0,f,c
 24671                           
 24672                           ;stkvar	_grs @ sp[(-4)+0]
 24673  01392A  0EFC               	movlw	-4
 24674  01392C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24675  013932  D009               	goto	l7255
 24676  013934                     l7253:
 24677                           
 24678                           ;stkvar	_grs @ sp[(-4)+0]
 24679  013934  50E1               	movf	fsr1l,w,c
 24680  013936  0FFC               	addlw	-4
 24681  013938  6ED9               	movwf	fsr2l,c
 24682  01393A  50E2               	movf	fsr1h,w,c
 24683  01393C  6EDA               	movwf	fsr2h,c
 24684  01393E  0EFF               	movlw	255
 24685  013940  22DA               	addwfc	fsr2h,f,c
 24686  013942  90D8               	bcf	status,0,c
 24687  013944  36DF               	rlcf	indf2,f,c
 24688  013946                     l7255:
 24689                           
 24690                           ;stkvar	_bexp @ sp[(-4)+1]
 24691  013946  0EFD               	movlw	-3
 24692  013948  50E3               	movf	plusw1,w,c
 24693  01394A  B4D8               	btfsc	status,2,c
 24694  01394C  D002               	goto	l7259
 24695                           
 24696                           ;stkvar	_bexp @ sp[(-4)+1]
 24697  01394E  0EFD               	movlw	-3
 24698  013950  06E3               	decf	plusw1,f,c
 24699  013952                     l7259:
 24700                           
 24701                           ;stkvar	_b @ sp[(-4)+-4]
 24702  013952  0EFA               	movlw	-6
 24703  013954  AEE3               	btfss	plusw1,7,c
 24704  013956  D7CF               	goto	l7245
 24705  013958                     u5320:
 24706                           
 24707                           ;stkvar	_aexp @ sp[(-4)+2]
 24708  013958  0EFE               	movlw	-2
 24709  01395A  6AE3               	clrf	plusw1,c
 24710                           
 24711                           ;stkvar	_grs @ sp[(-4)+0]
 24712  01395C  0EFC               	movlw	-4
 24713  01395E  AEE3               	btfss	plusw1,7,c
 24714  013960  D00F               	goto	l7273
 24715                           
 24716                           ;stkvar	_grs @ sp[(-4)+0]
 24717  013962  0EFC               	movlw	-4
 24718  013964  006F FF8C  F00C    	movff	plusw1,btemp+11
 24719  01396A  0E7F               	movlw	127
 24720  01396C  160C               	andwf	(btemp+11)^0,f,c
 24721  01396E  B4D8               	btfsc	status,2,c
 24722  013970  D004               	goto	l7269
 24723  013972                     u5340:
 24724                           
 24725                           ;stkvar	_aexp @ sp[(-4)+2]
 24726  013972  0EFE               	movlw	-2
 24727  013974  6AE3               	clrf	plusw1,c
 24728  013976  2AE3               	incf	plusw1,f,c
 24729  013978  D003               	goto	l7273
 24730  01397A                     l7269:
 24731                           
 24732                           ;stkvar	_b @ sp[(-4)+-4]
 24733  01397A  0EF8               	movlw	-8
 24734  01397C  B0E3               	btfsc	plusw1,0,c
 24735  01397E  D7F9               	goto	u5340
 24736  013980                     l7273:
 24737                           
 24738                           ;stkvar	_aexp @ sp[(-4)+2]
 24739  013980  0EFE               	movlw	-2
 24740  013982  50E3               	movf	plusw1,w,c
 24741  013984  B4D8               	btfsc	status,2,c
 24742  013986  D02B               	goto	l7285
 24743                           
 24744                           ;stkvar	_b @ sp[(-4)+-4]
 24745  013988  50E1               	movf	fsr1l,w,c
 24746  01398A  0FF8               	addlw	-8
 24747  01398C  6ED9               	movwf	fsr2l,c
 24748  01398E  50E2               	movf	fsr1h,w,c
 24749  013990  6EDA               	movwf	fsr2h,c
 24750  013992  0EFF               	movlw	255
 24751  013994  22DA               	addwfc	fsr2h,f,c
 24752  013996  2ADE               	incf	postinc2,f,c
 24753  013998  0E00               	movlw	0
 24754  01399A  22DE               	addwfc	postinc2,f,c
 24755  01399C  22DE               	addwfc	postinc2,f,c
 24756  01399E  22DE               	addwfc	postinc2,f,c
 24757                           
 24758                           ;stkvar	_b @ sp[(-4)+-4]
 24759  0139A0  0EFB               	movlw	-5
 24760  0139A2  A0E3               	btfss	plusw1,0,c
 24761  0139A4  D01C               	goto	l7285
 24762  0139A6  0E01               	movlw	1
 24763  0139A8  6E0C               	movwf	(btemp+11)^0,c
 24764                           
 24765                           ;stkvar	_b @ sp[(-4)+-4]
 24766  0139AA  50E1               	movf	fsr1l,w,c
 24767  0139AC  0FF8               	addlw	-8
 24768  0139AE  6ED9               	movwf	fsr2l,c
 24769  0139B0  50E2               	movf	fsr1h,w,c
 24770  0139B2  6EDA               	movwf	fsr2h,c
 24771  0139B4  0EFF               	movlw	255
 24772  0139B6  22DA               	addwfc	fsr2h,f,c
 24773  0139B8  280C               	incf	(btemp+11)^0,w,c
 24774  0139BA  52DE               	movf	postinc2,f,c
 24775  0139BC  D008               	goto	u5380
 24776  0139BE                     u5385:
 24777  0139BE  52DE               	movf	postinc2,f,c
 24778  0139C0  90D8               	bcf	status,0,c
 24779  0139C2  BEDC               	btfsc	preinc2,7,c
 24780  0139C4  80D8               	bsf	status,0,c
 24781  0139C6  32DD               	rrcf	postdec2,f,c
 24782  0139C8  32DD               	rrcf	postdec2,f,c
 24783  0139CA  32DD               	rrcf	postdec2,f,c
 24784  0139CC  32DE               	rrcf	postinc2,f,c
 24785  0139CE                     u5380:
 24786  0139CE  2EE8               	decfsz	wreg,f,c
 24787  0139D0  D7F6               	goto	u5385
 24788                           
 24789                           ;stkvar	_bexp @ sp[(-4)+1]
 24790  0139D2  0EFD               	movlw	-3
 24791  0139D4  28E3               	incf	plusw1,w,c
 24792  0139D6  B4D8               	btfsc	status,2,c
 24793  0139D8  D002               	goto	l7285
 24794                           
 24795                           ;stkvar	_bexp @ sp[(-4)+1]
 24796  0139DA  0EFD               	movlw	-3
 24797  0139DC  2AE3               	incf	plusw1,f,c
 24798  0139DE                     l7285:
 24799                           
 24800                           ;stkvar	_bexp @ sp[(-4)+1]
 24801  0139DE  0EFD               	movlw	-3
 24802  0139E0  28E3               	incf	plusw1,w,c
 24803  0139E2  B4D8               	btfsc	status,2,c
 24804  0139E4  D004               	goto	u5410
 24805                           
 24806                           ;stkvar	_bexp @ sp[(-4)+1]
 24807  0139E6  0EFD               	movlw	-3
 24808  0139E8  50E3               	movf	plusw1,w,c
 24809  0139EA  A4D8               	btfss	status,2,c
 24810  0139EC  D00E               	goto	l7295
 24811  0139EE                     u5410:
 24812                           
 24813                           ;stkvar	_b @ sp[(-4)+-4]
 24814  0139EE  0EF8               	movlw	-8
 24815  0139F0  6AE3               	clrf	plusw1,c
 24816  0139F2  0EF9               	movlw	-7
 24817  0139F4  6AE3               	clrf	plusw1,c
 24818  0139F6  0EFA               	movlw	-6
 24819  0139F8  6AE3               	clrf	plusw1,c
 24820  0139FA  0EFB               	movlw	-5
 24821  0139FC  6AE3               	clrf	plusw1,c
 24822                           
 24823                           ;stkvar	_bexp @ sp[(-4)+1]
 24824  0139FE  0EFD               	movlw	-3
 24825  013A00  50E3               	movf	plusw1,w,c
 24826  013A02  A4D8               	btfss	status,2,c
 24827  013A04  D002               	goto	l7295
 24828                           
 24829                           ;stkvar	_signs @ sp[(-4)+3]
 24830  013A06  0EFF               	movlw	-1
 24831  013A08  6AE3               	clrf	plusw1,c
 24832  013A0A                     l7295:
 24833                           
 24834                           ;stkvar	_bexp @ sp[(-4)+1]
 24835  013A0A  0EFD               	movlw	-3
 24836  013A0C  A0E3               	btfss	plusw1,0,c
 24837  013A0E  D009               	goto	l7299
 24838                           
 24839                           ;stkvar	_b @ sp[(-4)+-4]
 24840  013A10  0EFA               	movlw	250
 24841  013A12  24E1               	addwf	fsr1l,w,c
 24842  013A14  6ED9               	movwf	fsr2l,c
 24843  013A16  0EFF               	movlw	255
 24844  013A18  20E2               	addwfc	fsr1h,w,c
 24845  013A1A  6EDA               	movwf	fsr2h,c
 24846  013A1C  0E00               	movlw	0
 24847  013A1E  8EDB               	bsf	plusw2,7,c
 24848  013A20  D008               	goto	l7301
 24849  013A22                     l7299:
 24850                           
 24851                           ;stkvar	_b @ sp[(-4)+-4]
 24852  013A22  0EFA               	movlw	250
 24853  013A24  24E1               	addwf	fsr1l,w,c
 24854  013A26  6ED9               	movwf	fsr2l,c
 24855  013A28  0EFF               	movlw	255
 24856  013A2A  20E2               	addwfc	fsr1h,w,c
 24857  013A2C  6EDA               	movwf	fsr2h,c
 24858  013A2E  0E7F               	movlw	127
 24859  013A30  16DF               	andwf	indf2,f,c
 24860  013A32                     l7301:
 24861                           
 24862                           ;stkvar	_b @ sp[(-4)+-4]
 24863  013A32  0EFB               	movlw	251
 24864  013A34  24E1               	addwf	fsr1l,w,c
 24865  013A36  6ED9               	movwf	fsr2l,c
 24866  013A38  0EFF               	movlw	255
 24867  013A3A  20E2               	addwfc	fsr1h,w,c
 24868  013A3C  6EDA               	movwf	fsr2h,c
 24869                           
 24870                           ;stkvar	_bexp @ sp[(-4)+1]
 24871  013A3E  0EFD               	movlw	-3
 24872  013A40  006F FF8C  F00C    	movff	plusw1,btemp+11
 24873  013A46  90D8               	bcf	status,0,c
 24874  013A48  300C               	rrcf	(btemp+11)^0,w,c
 24875  013A4A  6EDF               	movwf	indf2,c
 24876                           
 24877                           ;stkvar	_signs @ sp[(-4)+3]
 24878  013A4C  0EFF               	movlw	-1
 24879  013A4E  AEE3               	btfss	plusw1,7,c
 24880  013A50  D008               	goto	l7307
 24881                           
 24882                           ;stkvar	_b @ sp[(-4)+-4]
 24883  013A52  0EFB               	movlw	251
 24884  013A54  24E1               	addwf	fsr1l,w,c
 24885  013A56  6ED9               	movwf	fsr2l,c
 24886  013A58  0EFF               	movlw	255
 24887  013A5A  20E2               	addwfc	fsr1h,w,c
 24888  013A5C  6EDA               	movwf	fsr2h,c
 24889  013A5E  0E00               	movlw	0
 24890  013A60  8EDB               	bsf	plusw2,7,c
 24891  013A62                     l7307:
 24892                           
 24893                           ;stkvar	_b @ sp[(-4)+-4]
 24894  013A62  0EF8               	movlw	-8
 24895  013A64  006F FF8C  F001    	movff	plusw1,btemp
 24896  013A6A  0EF9               	movlw	-7
 24897  013A6C  006F FF8C  F002    	movff	plusw1,btemp+1
 24898  013A72  0EFA               	movlw	-6
 24899  013A74  006F FF8C  F003    	movff	plusw1,btemp+2
 24900  013A7A  0EFB               	movlw	-5
 24901  013A7C  006F FF8C  F004    	movff	plusw1,btemp+3
 24902  013A82                     l2795:
 24903                           
 24904                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 24905  013A82  0EF4               	movlw	244
 24906  013A84  26E1               	addwf	fsr1l,f,c
 24907  013A86  0EFF               	movlw	255
 24908  013A88  22E2               	addwfc	fsr1h,f,c
 24909  013A8A  0012               	return		;funcret
 24910  013A8C                     __end_of___fladd:
 24911                           	opt callstack 0
 24912                           
 24913 ;; *************** function ___flmul *****************
 24914 ;; Defined at:
 24915 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 24916 ;; Parameters:    Size  Location     Type
 24917 ;;  b               4  [STACK] unsigned char 
 24918 ;;  a               4  [STACK] unsigned char 
 24919 ;; Auto vars:     Size  Location     Type
 24920 ;;  prod            4  [STACK] struct .
 24921 ;;  grs             4  [STACK] unsigned long 
 24922 ;;  temp            2  [STACK] struct .
 24923 ;;  bexp            1  [STACK] unsigned char 
 24924 ;;  aexp            1  [STACK] unsigned char 
 24925 ;;  sign            1  [STACK] unsigned char 
 24926 ;; Return value:  Size  Location     Type
 24927 ;;                  4  [STACK] unsigned char 
 24928 ;; Registers used:
 24929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24930 ;; Tracked objects:
 24931 ;;		On entry : 0/1
 24932 ;;		On exit  : 0/0
 24933 ;;		Unchanged: 0/0
 24934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24939 ;;Total ram usage:        0 bytes
 24940 ;; Hardware stack levels used:    1
 24941 ;; Hardware stack levels required when called:   15
 24942 ;; This function calls:
 24943 ;;		Nothing
 24944 ;; This function is called by:
 24945 ;;		_conv_raw_result
 24946 ;;		_lp_filter
 24947 ;;		_calc_model_data
 24948 ;;		_calc_bsoc
 24949 ;;		_init_bsoc
 24950 ;;		_efgtoa
 24951 ;; This function uses a reentrant model
 24952 ;;
 24953                           
 24954                           	psect	text99
 24955  012AA6                     __ptext99:
 24956                           	opt callstack 0
 24957  012AA6                     ___flmul:
 24958                           	opt callstack 0
 24959                           
 24960                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24961  012AA6  0E0D               	movlw	13
 24962  012AA8  26E1               	addwf	fsr1l,f,c
 24963  012AAA  0E00               	movlw	0
 24964  012AAC  22E2               	addwfc	fsr1h,f,c
 24965                           
 24966                           ;stkvar	_b @ sp[(-13)+-4]
 24967                           
 24968                           ;incstack = 0
 24969 ;; hardware stack exceeded
 24970  012AAE  0EF2               	movlw	242
 24971  012AB0  24E1               	addwf	fsr1l,w,c
 24972  012AB2  6ED9               	movwf	fsr2l,c
 24973  012AB4  0EFF               	movlw	255
 24974  012AB6  20E2               	addwfc	fsr1h,w,c
 24975  012AB8  6EDA               	movwf	fsr2h,c
 24976  012ABA  50DF               	movf	indf2,w,c
 24977  012ABC  6E0C               	movwf	(btemp+11)^0,c
 24978  012ABE  0E80               	movlw	128
 24979  012AC0  160C               	andwf	(btemp+11)^0,f,c
 24980                           
 24981                           ;stkvar	_sign @ sp[(-13)+12]
 24982  012AC2  0EFF               	movlw	-1
 24983  012AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24984                           
 24985                           ;stkvar	_b @ sp[(-13)+-4]
 24986  012ACA  0EF2               	movlw	242
 24987  012ACC  24E1               	addwf	fsr1l,w,c
 24988  012ACE  6ED9               	movwf	fsr2l,c
 24989  012AD0  0EFF               	movlw	255
 24990  012AD2  20E2               	addwfc	fsr1h,w,c
 24991  012AD4  6EDA               	movwf	fsr2h,c
 24992  012AD6  50DF               	movf	indf2,w,c
 24993  012AD8  6E0C               	movwf	(btemp+11)^0,c
 24994  012ADA  90D8               	bcf	status,0,c
 24995  012ADC  340C               	rlcf	(btemp+11)^0,w,c
 24996  012ADE  6E0B               	movwf	(btemp+10)^0,c
 24997                           
 24998                           ;stkvar	_bexp @ sp[(-13)+10]
 24999  012AE0  0EFD               	movlw	-3
 25000  012AE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25001                           
 25002                           ;stkvar	_b @ sp[(-13)+-4]
 25003  012AE8  0EF1               	movlw	241
 25004  012AEA  24E1               	addwf	fsr1l,w,c
 25005  012AEC  6ED9               	movwf	fsr2l,c
 25006  012AEE  0EFF               	movlw	255
 25007  012AF0  20E2               	addwfc	fsr1h,w,c
 25008  012AF2  6EDA               	movwf	fsr2h,c
 25009  012AF4  AEDF               	btfss	indf2,7,c
 25010  012AF6  D002               	goto	l7691
 25011                           
 25012                           ;stkvar	_bexp @ sp[(-13)+10]
 25013  012AF8  0EFD               	movlw	-3
 25014  012AFA  80E3               	bsf	plusw1,0,c
 25015  012AFC                     l7691:
 25016                           
 25017                           ;stkvar	_bexp @ sp[(-13)+10]
 25018  012AFC  0EFD               	movlw	-3
 25019  012AFE  50E3               	movf	plusw1,w,c
 25020  012B00  B4D8               	btfsc	status,2,c
 25021  012B02  D01F               	goto	l7699
 25022                           
 25023                           ;stkvar	_bexp @ sp[(-13)+10]
 25024  012B04  0EFD               	movlw	-3
 25025  012B06  28E3               	incf	plusw1,w,c
 25026  012B08  A4D8               	btfss	status,2,c
 25027  012B0A  D018               	goto	l7697
 25028  012B0C  0E00               	movlw	0
 25029  012B0E  6E09               	movwf	(btemp+8)^0,c
 25030  012B10  0E00               	movlw	0
 25031  012B12  6E0A               	movwf	(btemp+9)^0,c
 25032  012B14  0E00               	movlw	0
 25033  012B16  6E0B               	movwf	(btemp+10)^0,c
 25034  012B18  0E00               	movlw	0
 25035  012B1A  6E0C               	movwf	(btemp+11)^0,c
 25036                           
 25037                           ;stkvar	_b @ sp[(-13)+-4]
 25038  012B1C  0EEF               	movlw	-17
 25039  012B1E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25040  012B24  0EF0               	movlw	-16
 25041  012B26  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25042  012B2C  0EF1               	movlw	-15
 25043  012B2E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25044  012B34  0EF2               	movlw	-14
 25045  012B36  0060  F033  FFE3   	movff	btemp+11,plusw1
 25046  012B3C                     l7697:
 25047                           
 25048                           ;stkvar	_b @ sp[(-13)+-4]
 25049  012B3C  0EF1               	movlw	-15
 25050  012B3E  8EE3               	bsf	plusw1,7,c
 25051  012B40  D018               	goto	l7701
 25052  012B42                     l7699:
 25053  012B42  0E00               	movlw	0
 25054  012B44  6E09               	movwf	(btemp+8)^0,c
 25055  012B46  0E00               	movlw	0
 25056  012B48  6E0A               	movwf	(btemp+9)^0,c
 25057  012B4A  0E00               	movlw	0
 25058  012B4C  6E0B               	movwf	(btemp+10)^0,c
 25059  012B4E  0E00               	movlw	0
 25060  012B50  6E0C               	movwf	(btemp+11)^0,c
 25061                           
 25062                           ;stkvar	_b @ sp[(-13)+-4]
 25063  012B52  0EEF               	movlw	-17
 25064  012B54  0060  F027  FFE3   	movff	btemp+8,plusw1
 25065  012B5A  0EF0               	movlw	-16
 25066  012B5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25067  012B62  0EF1               	movlw	-15
 25068  012B64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25069  012B6A  0EF2               	movlw	-14
 25070  012B6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25071  012B72                     l7701:
 25072                           
 25073                           ;stkvar	_a @ sp[(-13)+-8]
 25074  012B72  0EEE               	movlw	238
 25075  012B74  24E1               	addwf	fsr1l,w,c
 25076  012B76  6ED9               	movwf	fsr2l,c
 25077  012B78  0EFF               	movlw	255
 25078  012B7A  20E2               	addwfc	fsr1h,w,c
 25079  012B7C  6EDA               	movwf	fsr2h,c
 25080  012B7E  50DF               	movf	indf2,w,c
 25081  012B80  6E0C               	movwf	(btemp+11)^0,c
 25082  012B82  0E80               	movlw	128
 25083  012B84  160C               	andwf	(btemp+11)^0,f,c
 25084                           
 25085                           ;stkvar	_sign @ sp[(-13)+12]
 25086  012B86  50E1               	movf	fsr1l,w,c
 25087  012B88  0FFF               	addlw	-1
 25088  012B8A  6ED9               	movwf	fsr2l,c
 25089  012B8C  50E2               	movf	fsr1h,w,c
 25090  012B8E  6EDA               	movwf	fsr2h,c
 25091  012B90  0EFF               	movlw	255
 25092  012B92  22DA               	addwfc	fsr2h,f,c
 25093  012B94  500C               	movf	(btemp+11)^0,w,c
 25094  012B96  1ADF               	xorwf	indf2,f,c
 25095                           
 25096                           ;stkvar	_a @ sp[(-13)+-8]
 25097  012B98  0EEE               	movlw	238
 25098  012B9A  24E1               	addwf	fsr1l,w,c
 25099  012B9C  6ED9               	movwf	fsr2l,c
 25100  012B9E  0EFF               	movlw	255
 25101  012BA0  20E2               	addwfc	fsr1h,w,c
 25102  012BA2  6EDA               	movwf	fsr2h,c
 25103  012BA4  50DF               	movf	indf2,w,c
 25104  012BA6  6E0C               	movwf	(btemp+11)^0,c
 25105  012BA8  90D8               	bcf	status,0,c
 25106  012BAA  340C               	rlcf	(btemp+11)^0,w,c
 25107  012BAC  6E0B               	movwf	(btemp+10)^0,c
 25108                           
 25109                           ;stkvar	_aexp @ sp[(-13)+11]
 25110  012BAE  0EFE               	movlw	-2
 25111  012BB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25112                           
 25113                           ;stkvar	_a @ sp[(-13)+-8]
 25114  012BB6  0EED               	movlw	237
 25115  012BB8  24E1               	addwf	fsr1l,w,c
 25116  012BBA  6ED9               	movwf	fsr2l,c
 25117  012BBC  0EFF               	movlw	255
 25118  012BBE  20E2               	addwfc	fsr1h,w,c
 25119  012BC0  6EDA               	movwf	fsr2h,c
 25120  012BC2  AEDF               	btfss	indf2,7,c
 25121  012BC4  D002               	goto	l7709
 25122                           
 25123                           ;stkvar	_aexp @ sp[(-13)+11]
 25124  012BC6  0EFE               	movlw	-2
 25125  012BC8  80E3               	bsf	plusw1,0,c
 25126  012BCA                     l7709:
 25127                           
 25128                           ;stkvar	_aexp @ sp[(-13)+11]
 25129  012BCA  0EFE               	movlw	-2
 25130  012BCC  50E3               	movf	plusw1,w,c
 25131  012BCE  B4D8               	btfsc	status,2,c
 25132  012BD0  D01F               	goto	l7717
 25133                           
 25134                           ;stkvar	_aexp @ sp[(-13)+11]
 25135  012BD2  0EFE               	movlw	-2
 25136  012BD4  28E3               	incf	plusw1,w,c
 25137  012BD6  A4D8               	btfss	status,2,c
 25138  012BD8  D018               	goto	l7715
 25139  012BDA  0E00               	movlw	0
 25140  012BDC  6E09               	movwf	(btemp+8)^0,c
 25141  012BDE  0E00               	movlw	0
 25142  012BE0  6E0A               	movwf	(btemp+9)^0,c
 25143  012BE2  0E00               	movlw	0
 25144  012BE4  6E0B               	movwf	(btemp+10)^0,c
 25145  012BE6  0E00               	movlw	0
 25146  012BE8  6E0C               	movwf	(btemp+11)^0,c
 25147                           
 25148                           ;stkvar	_a @ sp[(-13)+-8]
 25149  012BEA  0EEB               	movlw	-21
 25150  012BEC  0060  F027  FFE3   	movff	btemp+8,plusw1
 25151  012BF2  0EEC               	movlw	-20
 25152  012BF4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25153  012BFA  0EED               	movlw	-19
 25154  012BFC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25155  012C02  0EEE               	movlw	-18
 25156  012C04  0060  F033  FFE3   	movff	btemp+11,plusw1
 25157  012C0A                     l7715:
 25158                           
 25159                           ;stkvar	_a @ sp[(-13)+-8]
 25160  012C0A  0EED               	movlw	-19
 25161  012C0C  8EE3               	bsf	plusw1,7,c
 25162  012C0E  D018               	goto	l7719
 25163  012C10                     l7717:
 25164  012C10  0E00               	movlw	0
 25165  012C12  6E09               	movwf	(btemp+8)^0,c
 25166  012C14  0E00               	movlw	0
 25167  012C16  6E0A               	movwf	(btemp+9)^0,c
 25168  012C18  0E00               	movlw	0
 25169  012C1A  6E0B               	movwf	(btemp+10)^0,c
 25170  012C1C  0E00               	movlw	0
 25171  012C1E  6E0C               	movwf	(btemp+11)^0,c
 25172                           
 25173                           ;stkvar	_a @ sp[(-13)+-8]
 25174  012C20  0EEB               	movlw	-21
 25175  012C22  0060  F027  FFE3   	movff	btemp+8,plusw1
 25176  012C28  0EEC               	movlw	-20
 25177  012C2A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25178  012C30  0EED               	movlw	-19
 25179  012C32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25180  012C38  0EEE               	movlw	-18
 25181  012C3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25182  012C40                     l7719:
 25183                           
 25184                           ;stkvar	_aexp @ sp[(-13)+11]
 25185  012C40  0EFE               	movlw	-2
 25186  012C42  50E3               	movf	plusw1,w,c
 25187  012C44  B4D8               	btfsc	status,2,c
 25188  012C46  D004               	goto	u6350
 25189                           
 25190                           ;stkvar	_bexp @ sp[(-13)+10]
 25191  012C48  0EFD               	movlw	-3
 25192  012C4A  50E3               	movf	plusw1,w,c
 25193  012C4C  A4D8               	btfss	status,2,c
 25194  012C4E  D009               	goto	l7727
 25195  012C50                     u6350:
 25196  012C50  0E00               	movlw	0
 25197  012C52  6E01               	movwf	btemp^0,c
 25198  012C54  0E00               	movlw	0
 25199  012C56  6E02               	movwf	(btemp+1)^0,c
 25200  012C58  0E00               	movlw	0
 25201  012C5A  6E03               	movwf	(btemp+2)^0,c
 25202  012C5C  0E00               	movlw	0
 25203  012C5E  6E04               	movwf	(btemp+3)^0,c
 25204  012C60  D332               	goto	l2876
 25205  012C62                     l7727:
 25206                           
 25207                           ;stkvar	_b @ sp[(-13)+-4]
 25208  012C62  0EEF               	movlw	-17
 25209  012C64  006F FF8C  F00C    	movff	plusw1,btemp+11
 25210                           
 25211                           ;stkvar	_a @ sp[(-13)+-8]
 25212  012C6A  0EED               	movlw	237
 25213  012C6C  24E1               	addwf	fsr1l,w,c
 25214  012C6E  6ED9               	movwf	fsr2l,c
 25215  012C70  0EFF               	movlw	255
 25216  012C72  20E2               	addwfc	fsr1h,w,c
 25217  012C74  6EDA               	movwf	fsr2h,c
 25218  012C76  50DF               	movf	indf2,w,c
 25219  012C78  020C               	mulwf	(btemp+11)^0,c
 25220                           
 25221                           ;stkvar	_temp @ sp[(-13)+8]
 25222  012C7A  0EFB               	movlw	-5
 25223  012C7C  006F FFCF FFE3     	movff	prodl,plusw1
 25224  012C82  0EFC               	movlw	-4
 25225  012C84  006F FFD3 FFE3     	movff	prodh,plusw1
 25226                           
 25227                           ;stkvar	_temp @ sp[(-13)+8]
 25228  012C8A  0EFB               	movlw	-5
 25229  012C8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25230  012C92  0060  F030  F005   	movff	btemp+11,btemp+4
 25231  012C98  6A06               	clrf	(btemp+5)^0,c
 25232  012C9A  6A07               	clrf	(btemp+6)^0,c
 25233  012C9C  6A08               	clrf	(btemp+7)^0,c
 25234                           
 25235                           ;stkvar	_grs @ sp[(-13)+4]
 25236  012C9E  0EF7               	movlw	-9
 25237  012CA0  0060  F017  FFE3   	movff	btemp+4,plusw1
 25238  012CA6  0EF8               	movlw	-8
 25239  012CA8  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25240  012CAE  0EF9               	movlw	-7
 25241  012CB0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25242  012CB6  0EFA               	movlw	-6
 25243  012CB8  0060  F023  FFE3   	movff	btemp+7,plusw1
 25244                           
 25245                           ;stkvar	_temp @ sp[(-13)+8]
 25246  012CBE  0EFC               	movlw	252
 25247  012CC0  24E1               	addwf	fsr1l,w,c
 25248  012CC2  6ED9               	movwf	fsr2l,c
 25249  012CC4  0EFF               	movlw	255
 25250  012CC6  20E2               	addwfc	fsr1h,w,c
 25251  012CC8  6EDA               	movwf	fsr2h,c
 25252  012CCA  50DF               	movf	indf2,w,c
 25253  012CCC  6E0C               	movwf	(btemp+11)^0,c
 25254  012CCE  0060  F030  F005   	movff	btemp+11,btemp+4
 25255  012CD4  6A06               	clrf	(btemp+5)^0,c
 25256  012CD6  6A07               	clrf	(btemp+6)^0,c
 25257  012CD8  6A08               	clrf	(btemp+7)^0,c
 25258                           
 25259                           ;stkvar	_prod @ sp[(-13)+0]
 25260  012CDA  0EF3               	movlw	-13
 25261  012CDC  0060  F017  FFE3   	movff	btemp+4,plusw1
 25262  012CE2  0EF4               	movlw	-12
 25263  012CE4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25264  012CEA  0EF5               	movlw	-11
 25265  012CEC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25266  012CF2  0EF6               	movlw	-10
 25267  012CF4  0060  F023  FFE3   	movff	btemp+7,plusw1
 25268                           
 25269                           ;stkvar	_b @ sp[(-13)+-4]
 25270  012CFA  0EF0               	movlw	240
 25271  012CFC  24E1               	addwf	fsr1l,w,c
 25272  012CFE  6ED9               	movwf	fsr2l,c
 25273  012D00  0EFF               	movlw	255
 25274  012D02  20E2               	addwfc	fsr1h,w,c
 25275  012D04  6EDA               	movwf	fsr2h,c
 25276  012D06  50DF               	movf	indf2,w,c
 25277  012D08  6E0C               	movwf	(btemp+11)^0,c
 25278                           
 25279                           ;stkvar	_a @ sp[(-13)+-8]
 25280  012D0A  0EEC               	movlw	236
 25281  012D0C  24E1               	addwf	fsr1l,w,c
 25282  012D0E  6ED9               	movwf	fsr2l,c
 25283  012D10  0EFF               	movlw	255
 25284  012D12  20E2               	addwfc	fsr1h,w,c
 25285  012D14  6EDA               	movwf	fsr2h,c
 25286  012D16  50DF               	movf	indf2,w,c
 25287  012D18  020C               	mulwf	(btemp+11)^0,c
 25288                           
 25289                           ;stkvar	_temp @ sp[(-13)+8]
 25290  012D1A  0EFB               	movlw	-5
 25291  012D1C  006F FFCF FFE3     	movff	prodl,plusw1
 25292  012D22  0EFC               	movlw	-4
 25293  012D24  006F FFD3 FFE3     	movff	prodh,plusw1
 25294                           
 25295                           ;stkvar	_grs @ sp[(-13)+4]
 25296  012D2A  50E1               	movf	fsr1l,w,c
 25297  012D2C  0FF7               	addlw	-9
 25298  012D2E  6ED9               	movwf	fsr2l,c
 25299  012D30  50E2               	movf	fsr1h,w,c
 25300  012D32  6EDA               	movwf	fsr2h,c
 25301  012D34  0EFF               	movlw	255
 25302  012D36  22DA               	addwfc	fsr2h,f,c
 25303                           
 25304                           ;stkvar	_temp @ sp[(-13)+8]
 25305  012D38  0EFB               	movlw	-5
 25306  012D3A  50E3               	movf	plusw1,w,c
 25307  012D3C  26DE               	addwf	postinc2,f,c
 25308  012D3E  0E00               	movlw	0
 25309  012D40  22DE               	addwfc	postinc2,f,c
 25310  012D42  22DE               	addwfc	postinc2,f,c
 25311  012D44  22DE               	addwfc	postinc2,f,c
 25312                           
 25313                           ;stkvar	_prod @ sp[(-13)+0]
 25314  012D46  50E1               	movf	fsr1l,w,c
 25315  012D48  0FF3               	addlw	-13
 25316  012D4A  6ED9               	movwf	fsr2l,c
 25317  012D4C  50E2               	movf	fsr1h,w,c
 25318  012D4E  6EDA               	movwf	fsr2h,c
 25319  012D50  0EFF               	movlw	255
 25320  012D52  22DA               	addwfc	fsr2h,f,c
 25321                           
 25322                           ;stkvar	_temp @ sp[(-13)+8]
 25323  012D54  0EFC               	movlw	252
 25324  012D56  24E1               	addwf	fsr1l,w,c
 25325  012D58  6EE9               	movwf	fsr0l,c
 25326  012D5A  0EFF               	movlw	255
 25327  012D5C  20E2               	addwfc	fsr1h,w,c
 25328  012D5E  6EEA               	movwf	fsr0h,c
 25329  012D60  50EF               	movf	indf0,w,c
 25330  012D62  26DE               	addwf	postinc2,f,c
 25331  012D64  0E00               	movlw	0
 25332  012D66  22DE               	addwfc	postinc2,f,c
 25333  012D68  22DE               	addwfc	postinc2,f,c
 25334  012D6A  22DE               	addwfc	postinc2,f,c
 25335                           
 25336                           ;stkvar	_b @ sp[(-13)+-4]
 25337  012D6C  0EF1               	movlw	241
 25338  012D6E  24E1               	addwf	fsr1l,w,c
 25339  012D70  6ED9               	movwf	fsr2l,c
 25340  012D72  0EFF               	movlw	255
 25341  012D74  20E2               	addwfc	fsr1h,w,c
 25342  012D76  6EDA               	movwf	fsr2h,c
 25343  012D78  50DF               	movf	indf2,w,c
 25344  012D7A  6E0C               	movwf	(btemp+11)^0,c
 25345                           
 25346                           ;stkvar	_a @ sp[(-13)+-8]
 25347  012D7C  0EEB               	movlw	-21
 25348  012D7E  50E3               	movf	plusw1,w,c
 25349  012D80  020C               	mulwf	(btemp+11)^0,c
 25350                           
 25351                           ;stkvar	_temp @ sp[(-13)+8]
 25352  012D82  0EFB               	movlw	-5
 25353  012D84  006F FFCF FFE3     	movff	prodl,plusw1
 25354  012D8A  0EFC               	movlw	-4
 25355  012D8C  006F FFD3 FFE3     	movff	prodh,plusw1
 25356                           
 25357                           ;stkvar	_grs @ sp[(-13)+4]
 25358  012D92  50E1               	movf	fsr1l,w,c
 25359  012D94  0FF7               	addlw	-9
 25360  012D96  6ED9               	movwf	fsr2l,c
 25361  012D98  50E2               	movf	fsr1h,w,c
 25362  012D9A  6EDA               	movwf	fsr2h,c
 25363  012D9C  0EFF               	movlw	255
 25364  012D9E  22DA               	addwfc	fsr2h,f,c
 25365                           
 25366                           ;stkvar	_temp @ sp[(-13)+8]
 25367  012DA0  0EFB               	movlw	-5
 25368  012DA2  50E3               	movf	plusw1,w,c
 25369  012DA4  26DE               	addwf	postinc2,f,c
 25370  012DA6  0E00               	movlw	0
 25371  012DA8  22DE               	addwfc	postinc2,f,c
 25372  012DAA  22DE               	addwfc	postinc2,f,c
 25373  012DAC  22DE               	addwfc	postinc2,f,c
 25374                           
 25375                           ;stkvar	_prod @ sp[(-13)+0]
 25376  012DAE  50E1               	movf	fsr1l,w,c
 25377  012DB0  0FF3               	addlw	-13
 25378  012DB2  6ED9               	movwf	fsr2l,c
 25379  012DB4  50E2               	movf	fsr1h,w,c
 25380  012DB6  6EDA               	movwf	fsr2h,c
 25381  012DB8  0EFF               	movlw	255
 25382  012DBA  22DA               	addwfc	fsr2h,f,c
 25383                           
 25384                           ;stkvar	_temp @ sp[(-13)+8]
 25385  012DBC  0EFC               	movlw	252
 25386  012DBE  24E1               	addwf	fsr1l,w,c
 25387  012DC0  6EE9               	movwf	fsr0l,c
 25388  012DC2  0EFF               	movlw	255
 25389  012DC4  20E2               	addwfc	fsr1h,w,c
 25390  012DC6  6EEA               	movwf	fsr0h,c
 25391  012DC8  50EF               	movf	indf0,w,c
 25392  012DCA  26DE               	addwf	postinc2,f,c
 25393  012DCC  0E00               	movlw	0
 25394  012DCE  22DE               	addwfc	postinc2,f,c
 25395  012DD0  22DE               	addwfc	postinc2,f,c
 25396  012DD2  22DE               	addwfc	postinc2,f,c
 25397                           
 25398                           ;stkvar	_grs @ sp[(-13)+4]
 25399  012DD4  50E1               	movf	fsr1l,w,c
 25400  012DD6  0FF7               	addlw	-9
 25401  012DD8  6ED9               	movwf	fsr2l,c
 25402  012DDA  50E2               	movf	fsr1h,w,c
 25403  012DDC  6EDA               	movwf	fsr2h,c
 25404  012DDE  0EFF               	movlw	255
 25405  012DE0  22DA               	addwfc	fsr2h,f,c
 25406  012DE2  0E08               	movlw	8
 25407  012DE4                     u6365:
 25408  012DE4  90D8               	bcf	status,0,c
 25409  012DE6  36DE               	rlcf	postinc2,f,c
 25410  012DE8  36DE               	rlcf	postinc2,f,c
 25411  012DEA  36DE               	rlcf	postinc2,f,c
 25412  012DEC  36DD               	rlcf	postdec2,f,c
 25413  012DEE  52DD               	movf	postdec2,f,c
 25414  012DF0  52DD               	movf	postdec2,f,c
 25415  012DF2  2EE8               	decfsz	wreg,f,c
 25416  012DF4  D7F7               	goto	u6365
 25417                           
 25418                           ;stkvar	_b @ sp[(-13)+-4]
 25419  012DF6  0EF0               	movlw	240
 25420  012DF8  24E1               	addwf	fsr1l,w,c
 25421  012DFA  6ED9               	movwf	fsr2l,c
 25422  012DFC  0EFF               	movlw	255
 25423  012DFE  20E2               	addwfc	fsr1h,w,c
 25424  012E00  6EDA               	movwf	fsr2h,c
 25425  012E02  50DF               	movf	indf2,w,c
 25426  012E04  6E0C               	movwf	(btemp+11)^0,c
 25427                           
 25428                           ;stkvar	_a @ sp[(-13)+-8]
 25429  012E06  0EEB               	movlw	-21
 25430  012E08  50E3               	movf	plusw1,w,c
 25431  012E0A  020C               	mulwf	(btemp+11)^0,c
 25432                           
 25433                           ;stkvar	_temp @ sp[(-13)+8]
 25434  012E0C  0EFB               	movlw	-5
 25435  012E0E  006F FFCF FFE3     	movff	prodl,plusw1
 25436  012E14  0EFC               	movlw	-4
 25437  012E16  006F FFD3 FFE3     	movff	prodh,plusw1
 25438                           
 25439                           ;stkvar	_temp @ sp[(-13)+8]
 25440  012E1C  0EFB               	movlw	-5
 25441  012E1E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25442  012E24  0EFC               	movlw	-4
 25443  012E26  006F FF8C  F00C    	movff	plusw1,btemp+11
 25444                           
 25445                           ;stkvar	_grs @ sp[(-13)+4]
 25446  012E2C  50E1               	movf	fsr1l,w,c
 25447  012E2E  0FF7               	addlw	-9
 25448  012E30  6ED9               	movwf	fsr2l,c
 25449  012E32  50E2               	movf	fsr1h,w,c
 25450  012E34  6EDA               	movwf	fsr2h,c
 25451  012E36  0EFF               	movlw	255
 25452  012E38  22DA               	addwfc	fsr2h,f,c
 25453  012E3A  500B               	movf	(btemp+10)^0,w,c
 25454  012E3C  26DE               	addwf	postinc2,f,c
 25455  012E3E  500C               	movf	(btemp+11)^0,w,c
 25456  012E40  22DE               	addwfc	postinc2,f,c
 25457  012E42  0E00               	movlw	0
 25458  012E44  22DE               	addwfc	postinc2,f,c
 25459  012E46  22DE               	addwfc	postinc2,f,c
 25460                           
 25461                           ;stkvar	_b @ sp[(-13)+-4]
 25462  012E48  0EEF               	movlw	-17
 25463  012E4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25464                           
 25465                           ;stkvar	_a @ sp[(-13)+-8]
 25466  012E50  0EEC               	movlw	236
 25467  012E52  24E1               	addwf	fsr1l,w,c
 25468  012E54  6ED9               	movwf	fsr2l,c
 25469  012E56  0EFF               	movlw	255
 25470  012E58  20E2               	addwfc	fsr1h,w,c
 25471  012E5A  6EDA               	movwf	fsr2h,c
 25472  012E5C  50DF               	movf	indf2,w,c
 25473  012E5E  020C               	mulwf	(btemp+11)^0,c
 25474                           
 25475                           ;stkvar	_temp @ sp[(-13)+8]
 25476  012E60  0EFB               	movlw	-5
 25477  012E62  006F FFCF FFE3     	movff	prodl,plusw1
 25478  012E68  0EFC               	movlw	-4
 25479  012E6A  006F FFD3 FFE3     	movff	prodh,plusw1
 25480                           
 25481                           ;stkvar	_temp @ sp[(-13)+8]
 25482  012E70  0EFB               	movlw	-5
 25483  012E72  006F FF8C  F00B    	movff	plusw1,btemp+10
 25484  012E78  0EFC               	movlw	-4
 25485  012E7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25486                           
 25487                           ;stkvar	_grs @ sp[(-13)+4]
 25488  012E80  50E1               	movf	fsr1l,w,c
 25489  012E82  0FF7               	addlw	-9
 25490  012E84  6ED9               	movwf	fsr2l,c
 25491  012E86  50E2               	movf	fsr1h,w,c
 25492  012E88  6EDA               	movwf	fsr2h,c
 25493  012E8A  0EFF               	movlw	255
 25494  012E8C  22DA               	addwfc	fsr2h,f,c
 25495  012E8E  500B               	movf	(btemp+10)^0,w,c
 25496  012E90  26DE               	addwf	postinc2,f,c
 25497  012E92  500C               	movf	(btemp+11)^0,w,c
 25498  012E94  22DE               	addwfc	postinc2,f,c
 25499  012E96  0E00               	movlw	0
 25500  012E98  22DE               	addwfc	postinc2,f,c
 25501  012E9A  22DE               	addwfc	postinc2,f,c
 25502                           
 25503                           ;stkvar	_grs @ sp[(-13)+4]
 25504  012E9C  50E1               	movf	fsr1l,w,c
 25505  012E9E  0FF7               	addlw	-9
 25506  012EA0  6ED9               	movwf	fsr2l,c
 25507  012EA2  50E2               	movf	fsr1h,w,c
 25508  012EA4  6EDA               	movwf	fsr2h,c
 25509  012EA6  0EFF               	movlw	255
 25510  012EA8  22DA               	addwfc	fsr2h,f,c
 25511  012EAA  0E08               	movlw	8
 25512  012EAC                     u6375:
 25513  012EAC  90D8               	bcf	status,0,c
 25514  012EAE  36DE               	rlcf	postinc2,f,c
 25515  012EB0  36DE               	rlcf	postinc2,f,c
 25516  012EB2  36DE               	rlcf	postinc2,f,c
 25517  012EB4  36DD               	rlcf	postdec2,f,c
 25518  012EB6  52DD               	movf	postdec2,f,c
 25519  012EB8  52DD               	movf	postdec2,f,c
 25520  012EBA  2EE8               	decfsz	wreg,f,c
 25521  012EBC  D7F7               	goto	u6375
 25522                           
 25523                           ;stkvar	_b @ sp[(-13)+-4]
 25524  012EBE  0EEF               	movlw	-17
 25525  012EC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 25526                           
 25527                           ;stkvar	_a @ sp[(-13)+-8]
 25528  012EC6  0EEB               	movlw	-21
 25529  012EC8  50E3               	movf	plusw1,w,c
 25530  012ECA  020C               	mulwf	(btemp+11)^0,c
 25531                           
 25532                           ;stkvar	_temp @ sp[(-13)+8]
 25533  012ECC  0EFB               	movlw	-5
 25534  012ECE  006F FFCF FFE3     	movff	prodl,plusw1
 25535  012ED4  0EFC               	movlw	-4
 25536  012ED6  006F FFD3 FFE3     	movff	prodh,plusw1
 25537                           
 25538                           ;stkvar	_temp @ sp[(-13)+8]
 25539  012EDC  0EFB               	movlw	-5
 25540  012EDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 25541  012EE4  0EFC               	movlw	-4
 25542  012EE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25543                           
 25544                           ;stkvar	_grs @ sp[(-13)+4]
 25545  012EEC  50E1               	movf	fsr1l,w,c
 25546  012EEE  0FF7               	addlw	-9
 25547  012EF0  6ED9               	movwf	fsr2l,c
 25548  012EF2  50E2               	movf	fsr1h,w,c
 25549  012EF4  6EDA               	movwf	fsr2h,c
 25550  012EF6  0EFF               	movlw	255
 25551  012EF8  22DA               	addwfc	fsr2h,f,c
 25552  012EFA  500B               	movf	(btemp+10)^0,w,c
 25553  012EFC  26DE               	addwf	postinc2,f,c
 25554  012EFE  500C               	movf	(btemp+11)^0,w,c
 25555  012F00  22DE               	addwfc	postinc2,f,c
 25556  012F02  0E00               	movlw	0
 25557  012F04  22DE               	addwfc	postinc2,f,c
 25558  012F06  22DE               	addwfc	postinc2,f,c
 25559                           
 25560                           ;stkvar	_b @ sp[(-13)+-4]
 25561  012F08  0EF0               	movlw	240
 25562  012F0A  24E1               	addwf	fsr1l,w,c
 25563  012F0C  6ED9               	movwf	fsr2l,c
 25564  012F0E  0EFF               	movlw	255
 25565  012F10  20E2               	addwfc	fsr1h,w,c
 25566  012F12  6EDA               	movwf	fsr2h,c
 25567  012F14  50DF               	movf	indf2,w,c
 25568  012F16  6E0C               	movwf	(btemp+11)^0,c
 25569                           
 25570                           ;stkvar	_a @ sp[(-13)+-8]
 25571  012F18  0EED               	movlw	237
 25572  012F1A  24E1               	addwf	fsr1l,w,c
 25573  012F1C  6ED9               	movwf	fsr2l,c
 25574  012F1E  0EFF               	movlw	255
 25575  012F20  20E2               	addwfc	fsr1h,w,c
 25576  012F22  6EDA               	movwf	fsr2h,c
 25577  012F24  50DF               	movf	indf2,w,c
 25578  012F26  020C               	mulwf	(btemp+11)^0,c
 25579                           
 25580                           ;stkvar	_temp @ sp[(-13)+8]
 25581  012F28  0EFB               	movlw	-5
 25582  012F2A  006F FFCF FFE3     	movff	prodl,plusw1
 25583  012F30  0EFC               	movlw	-4
 25584  012F32  006F FFD3 FFE3     	movff	prodh,plusw1
 25585                           
 25586                           ;stkvar	_temp @ sp[(-13)+8]
 25587  012F38  0EFB               	movlw	-5
 25588  012F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25589  012F40  0EFC               	movlw	-4
 25590  012F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 25591                           
 25592                           ;stkvar	_prod @ sp[(-13)+0]
 25593  012F48  50E1               	movf	fsr1l,w,c
 25594  012F4A  0FF3               	addlw	-13
 25595  012F4C  6ED9               	movwf	fsr2l,c
 25596  012F4E  50E2               	movf	fsr1h,w,c
 25597  012F50  6EDA               	movwf	fsr2h,c
 25598  012F52  0EFF               	movlw	255
 25599  012F54  22DA               	addwfc	fsr2h,f,c
 25600  012F56  500B               	movf	(btemp+10)^0,w,c
 25601  012F58  26DE               	addwf	postinc2,f,c
 25602  012F5A  500C               	movf	(btemp+11)^0,w,c
 25603  012F5C  22DE               	addwfc	postinc2,f,c
 25604  012F5E  0E00               	movlw	0
 25605  012F60  22DE               	addwfc	postinc2,f,c
 25606  012F62  22DE               	addwfc	postinc2,f,c
 25607                           
 25608                           ;stkvar	_b @ sp[(-13)+-4]
 25609  012F64  0EF1               	movlw	241
 25610  012F66  24E1               	addwf	fsr1l,w,c
 25611  012F68  6ED9               	movwf	fsr2l,c
 25612  012F6A  0EFF               	movlw	255
 25613  012F6C  20E2               	addwfc	fsr1h,w,c
 25614  012F6E  6EDA               	movwf	fsr2h,c
 25615  012F70  50DF               	movf	indf2,w,c
 25616  012F72  6E0C               	movwf	(btemp+11)^0,c
 25617                           
 25618                           ;stkvar	_a @ sp[(-13)+-8]
 25619  012F74  0EEC               	movlw	236
 25620  012F76  24E1               	addwf	fsr1l,w,c
 25621  012F78  6ED9               	movwf	fsr2l,c
 25622  012F7A  0EFF               	movlw	255
 25623  012F7C  20E2               	addwfc	fsr1h,w,c
 25624  012F7E  6EDA               	movwf	fsr2h,c
 25625  012F80  50DF               	movf	indf2,w,c
 25626  012F82  020C               	mulwf	(btemp+11)^0,c
 25627                           
 25628                           ;stkvar	_temp @ sp[(-13)+8]
 25629  012F84  0EFB               	movlw	-5
 25630  012F86  006F FFCF FFE3     	movff	prodl,plusw1
 25631  012F8C  0EFC               	movlw	-4
 25632  012F8E  006F FFD3 FFE3     	movff	prodh,plusw1
 25633                           
 25634                           ;stkvar	_temp @ sp[(-13)+8]
 25635  012F94  0EFB               	movlw	-5
 25636  012F96  006F FF8C  F00B    	movff	plusw1,btemp+10
 25637  012F9C  0EFC               	movlw	-4
 25638  012F9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25639                           
 25640                           ;stkvar	_prod @ sp[(-13)+0]
 25641  012FA4  50E1               	movf	fsr1l,w,c
 25642  012FA6  0FF3               	addlw	-13
 25643  012FA8  6ED9               	movwf	fsr2l,c
 25644  012FAA  50E2               	movf	fsr1h,w,c
 25645  012FAC  6EDA               	movwf	fsr2h,c
 25646  012FAE  0EFF               	movlw	255
 25647  012FB0  22DA               	addwfc	fsr2h,f,c
 25648  012FB2  500B               	movf	(btemp+10)^0,w,c
 25649  012FB4  26DE               	addwf	postinc2,f,c
 25650  012FB6  500C               	movf	(btemp+11)^0,w,c
 25651  012FB8  22DE               	addwfc	postinc2,f,c
 25652  012FBA  0E00               	movlw	0
 25653  012FBC  22DE               	addwfc	postinc2,f,c
 25654  012FBE  22DE               	addwfc	postinc2,f,c
 25655                           
 25656                           ;stkvar	_b @ sp[(-13)+-4]
 25657  012FC0  0EF1               	movlw	241
 25658  012FC2  24E1               	addwf	fsr1l,w,c
 25659  012FC4  6ED9               	movwf	fsr2l,c
 25660  012FC6  0EFF               	movlw	255
 25661  012FC8  20E2               	addwfc	fsr1h,w,c
 25662  012FCA  6EDA               	movwf	fsr2h,c
 25663  012FCC  50DF               	movf	indf2,w,c
 25664  012FCE  6E0C               	movwf	(btemp+11)^0,c
 25665                           
 25666                           ;stkvar	_a @ sp[(-13)+-8]
 25667  012FD0  0EED               	movlw	237
 25668  012FD2  24E1               	addwf	fsr1l,w,c
 25669  012FD4  6ED9               	movwf	fsr2l,c
 25670  012FD6  0EFF               	movlw	255
 25671  012FD8  20E2               	addwfc	fsr1h,w,c
 25672  012FDA  6EDA               	movwf	fsr2h,c
 25673  012FDC  50DF               	movf	indf2,w,c
 25674  012FDE  020C               	mulwf	(btemp+11)^0,c
 25675                           
 25676                           ;stkvar	_temp @ sp[(-13)+8]
 25677  012FE0  0EFB               	movlw	-5
 25678  012FE2  006F FFCF FFE3     	movff	prodl,plusw1
 25679  012FE8  0EFC               	movlw	-4
 25680  012FEA  006F FFD3 FFE3     	movff	prodh,plusw1
 25681                           
 25682                           ;stkvar	_temp @ sp[(-13)+8]
 25683  012FF0  0EFB               	movlw	-5
 25684  012FF2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25685  012FF8  0EFC               	movlw	-4
 25686  012FFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25687  013000  500B               	movf	(btemp+10)^0,w,c
 25688  013002  6E05               	movwf	(btemp+4)^0,c
 25689  013004  500C               	movf	(btemp+11)^0,w,c
 25690  013006  6E06               	movwf	(btemp+5)^0,c
 25691  013008  6A07               	clrf	(btemp+6)^0,c
 25692  01300A  6A08               	clrf	(btemp+7)^0,c
 25693  01300C  0060  F01C  F008   	movff	btemp+6,btemp+7
 25694  013012  0060  F018  F007   	movff	btemp+5,btemp+6
 25695  013018  0060  F014  F006   	movff	btemp+4,btemp+5
 25696  01301E  6A05               	clrf	(btemp+4)^0,c
 25697                           
 25698                           ;stkvar	_prod @ sp[(-13)+0]
 25699  013020  50E1               	movf	fsr1l,w,c
 25700  013022  0FF3               	addlw	-13
 25701  013024  6ED9               	movwf	fsr2l,c
 25702  013026  50E2               	movf	fsr1h,w,c
 25703  013028  6EDA               	movwf	fsr2h,c
 25704  01302A  0EFF               	movlw	255
 25705  01302C  22DA               	addwfc	fsr2h,f,c
 25706  01302E  5005               	movf	(btemp+4)^0,w,c
 25707  013030  26DE               	addwf	postinc2,f,c
 25708  013032  5006               	movf	(btemp+5)^0,w,c
 25709  013034  22DE               	addwfc	postinc2,f,c
 25710  013036  5007               	movf	(btemp+6)^0,w,c
 25711  013038  22DE               	addwfc	postinc2,f,c
 25712  01303A  5008               	movf	(btemp+7)^0,w,c
 25713  01303C  22DE               	addwfc	postinc2,f,c
 25714                           
 25715                           ;stkvar	_prod @ sp[(-13)+0]
 25716  01303E  50E1               	movf	fsr1l,w,c
 25717  013040  0FF3               	addlw	-13
 25718  013042  6ED9               	movwf	fsr2l,c
 25719  013044  50E2               	movf	fsr1h,w,c
 25720  013046  6EDA               	movwf	fsr2h,c
 25721  013048  0EFF               	movlw	255
 25722  01304A  22DA               	addwfc	fsr2h,f,c
 25723                           
 25724                           ;stkvar	_grs @ sp[(-13)+4]
 25725  01304C  0EFA               	movlw	250
 25726  01304E  24E1               	addwf	fsr1l,w,c
 25727  013050  6EE9               	movwf	fsr0l,c
 25728  013052  0EFF               	movlw	255
 25729  013054  20E2               	addwfc	fsr1h,w,c
 25730  013056  6EEA               	movwf	fsr0h,c
 25731  013058  50EF               	movf	indf0,w,c
 25732  01305A  26DE               	addwf	postinc2,f,c
 25733  01305C  0E00               	movlw	0
 25734  01305E  22DE               	addwfc	postinc2,f,c
 25735  013060  22DE               	addwfc	postinc2,f,c
 25736  013062  22DE               	addwfc	postinc2,f,c
 25737                           
 25738                           ;stkvar	_grs @ sp[(-13)+4]
 25739  013064  50E1               	movf	fsr1l,w,c
 25740  013066  0FF7               	addlw	-9
 25741  013068  6ED9               	movwf	fsr2l,c
 25742  01306A  50E2               	movf	fsr1h,w,c
 25743  01306C  6EDA               	movwf	fsr2h,c
 25744  01306E  0EFF               	movlw	255
 25745  013070  22DA               	addwfc	fsr2h,f,c
 25746  013072  0E08               	movlw	8
 25747  013074                     u6385:
 25748  013074  90D8               	bcf	status,0,c
 25749  013076  36DE               	rlcf	postinc2,f,c
 25750  013078  36DE               	rlcf	postinc2,f,c
 25751  01307A  36DE               	rlcf	postinc2,f,c
 25752  01307C  36DD               	rlcf	postdec2,f,c
 25753  01307E  52DD               	movf	postdec2,f,c
 25754  013080  52DD               	movf	postdec2,f,c
 25755  013082  2EE8               	decfsz	wreg,f,c
 25756  013084  D7F7               	goto	u6385
 25757  013086  0E82               	movlw	130
 25758  013088  6E0B               	movwf	(btemp+10)^0,c
 25759  01308A  0EFF               	movlw	255
 25760  01308C  6E0C               	movwf	(btemp+11)^0,c
 25761                           
 25762                           ;stkvar	_bexp @ sp[(-13)+10]
 25763  01308E  0EFD               	movlw	-3
 25764  013090  50E3               	movf	plusw1,w,c
 25765  013092  6E09               	movwf	(btemp+8)^0,c
 25766  013094  6A0A               	clrf	(btemp+9)^0,c
 25767                           
 25768                           ;stkvar	_aexp @ sp[(-13)+11]
 25769  013096  0EFE               	movlw	-2
 25770  013098  50E3               	movf	plusw1,w,c
 25771  01309A  2609               	addwf	(btemp+8)^0,f,c
 25772  01309C  0E00               	movlw	0
 25773  01309E  220A               	addwfc	(btemp+9)^0,f,c
 25774  0130A0  500B               	movf	(btemp+10)^0,w,c
 25775  0130A2  2609               	addwf	(btemp+8)^0,f,c
 25776  0130A4  500C               	movf	(btemp+11)^0,w,c
 25777  0130A6  220A               	addwfc	(btemp+9)^0,f,c
 25778                           
 25779                           ;stkvar	_temp @ sp[(-13)+8]
 25780  0130A8  0EFB               	movlw	-5
 25781  0130AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 25782  0130B0  0EFC               	movlw	-4
 25783  0130B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25784  0130B8  D021               	goto	l7789
 25785  0130BA                     l7779:
 25786                           
 25787                           ;stkvar	_prod @ sp[(-13)+0]
 25788  0130BA  90D8               	bcf	status,0,c
 25789  0130BC  0EF3               	movlw	-13
 25790  0130BE  36E3               	rlcf	plusw1,f,c
 25791  0130C0  0EF4               	movlw	-12
 25792  0130C2  36E3               	rlcf	plusw1,f,c
 25793  0130C4  0EF5               	movlw	-11
 25794  0130C6  36E3               	rlcf	plusw1,f,c
 25795  0130C8  0EF6               	movlw	-10
 25796  0130CA  36E3               	rlcf	plusw1,f,c
 25797                           
 25798                           ;stkvar	_grs @ sp[(-13)+4]
 25799  0130CC  0EFA               	movlw	-6
 25800  0130CE  AEE3               	btfss	plusw1,7,c
 25801  0130D0  D002               	goto	l7785
 25802                           
 25803                           ;stkvar	_prod @ sp[(-13)+0]
 25804  0130D2  0EF3               	movlw	-13
 25805  0130D4  80E3               	bsf	plusw1,0,c
 25806  0130D6                     l7785:
 25807                           
 25808                           ;stkvar	_grs @ sp[(-13)+4]
 25809  0130D6  90D8               	bcf	status,0,c
 25810  0130D8  0EF7               	movlw	-9
 25811  0130DA  36E3               	rlcf	plusw1,f,c
 25812  0130DC  0EF8               	movlw	-8
 25813  0130DE  36E3               	rlcf	plusw1,f,c
 25814  0130E0  0EF9               	movlw	-7
 25815  0130E2  36E3               	rlcf	plusw1,f,c
 25816  0130E4  0EFA               	movlw	-6
 25817  0130E6  36E3               	rlcf	plusw1,f,c
 25818                           
 25819                           ;stkvar	_temp @ sp[(-13)+8]
 25820  0130E8  50E1               	movf	fsr1l,w,c
 25821  0130EA  0FFB               	addlw	-5
 25822  0130EC  6ED9               	movwf	fsr2l,c
 25823  0130EE  50E2               	movf	fsr1h,w,c
 25824  0130F0  6EDA               	movwf	fsr2h,c
 25825  0130F2  0EFF               	movlw	255
 25826  0130F4  22DA               	addwfc	fsr2h,f,c
 25827  0130F6  06DE               	decf	postinc2,f,c
 25828  0130F8  0E00               	movlw	0
 25829  0130FA  5ADD               	subwfb	postdec2,f,c
 25830  0130FC                     l7789:
 25831                           
 25832                           ;stkvar	_prod @ sp[(-13)+0]
 25833  0130FC  0EF5               	movlw	-11
 25834  0130FE  AEE3               	btfss	plusw1,7,c
 25835  013100  D7DC               	goto	l7779
 25836                           
 25837                           ;stkvar	_aexp @ sp[(-13)+11]
 25838  013102  0EFE               	movlw	-2
 25839  013104  6AE3               	clrf	plusw1,c
 25840                           
 25841                           ;stkvar	_grs @ sp[(-13)+4]
 25842  013106  0EFA               	movlw	-6
 25843  013108  AEE3               	btfss	plusw1,7,c
 25844  01310A  D020               	goto	l7803
 25845                           
 25846                           ;stkvar	_grs @ sp[(-13)+4]
 25847  01310C  50E1               	movf	fsr1l,w,c
 25848  01310E  0FF7               	addlw	-9
 25849  013110  6ED9               	movwf	fsr2l,c
 25850  013112  50E2               	movf	fsr1h,w,c
 25851  013114  6EDA               	movwf	fsr2h,c
 25852  013116  0EFF               	movlw	255
 25853  013118  22DA               	addwfc	fsr2h,f,c
 25854  01311A  0EFF               	movlw	255
 25855  01311C  14DE               	andwf	postinc2,w,c
 25856  01311E  6E09               	movwf	(btemp+8)^0,c
 25857  013120  0EFF               	movlw	255
 25858  013122  14DE               	andwf	postinc2,w,c
 25859  013124  6E0A               	movwf	(btemp+9)^0,c
 25860  013126  0EFF               	movlw	255
 25861  013128  14DE               	andwf	postinc2,w,c
 25862  01312A  6E0B               	movwf	(btemp+10)^0,c
 25863  01312C  0E7F               	movlw	127
 25864  01312E  14DE               	andwf	postinc2,w,c
 25865  013130  6E0C               	movwf	(btemp+11)^0,c
 25866  013132  5009               	movf	(btemp+8)^0,w,c
 25867  013134  100A               	iorwf	(btemp+9)^0,w,c
 25868  013136  100B               	iorwf	(btemp+10)^0,w,c
 25869  013138  100C               	iorwf	(btemp+11)^0,w,c
 25870  01313A  B4D8               	btfsc	status,2,c
 25871  01313C  D004               	goto	l7799
 25872  01313E                     u6420:
 25873                           
 25874                           ;stkvar	_aexp @ sp[(-13)+11]
 25875  01313E  0EFE               	movlw	-2
 25876  013140  6AE3               	clrf	plusw1,c
 25877  013142  2AE3               	incf	plusw1,f,c
 25878  013144  D003               	goto	l7803
 25879  013146                     l7799:
 25880                           
 25881                           ;stkvar	_prod @ sp[(-13)+0]
 25882  013146  0EF3               	movlw	-13
 25883  013148  B0E3               	btfsc	plusw1,0,c
 25884  01314A  D7F9               	goto	u6420
 25885  01314C                     l7803:
 25886                           
 25887                           ;stkvar	_aexp @ sp[(-13)+11]
 25888  01314C  0EFE               	movlw	-2
 25889  01314E  50E3               	movf	plusw1,w,c
 25890  013150  B4D8               	btfsc	status,2,c
 25891  013152  D036               	goto	l7813
 25892                           
 25893                           ;stkvar	_prod @ sp[(-13)+0]
 25894  013154  50E1               	movf	fsr1l,w,c
 25895  013156  0FF3               	addlw	-13
 25896  013158  6ED9               	movwf	fsr2l,c
 25897  01315A  50E2               	movf	fsr1h,w,c
 25898  01315C  6EDA               	movwf	fsr2h,c
 25899  01315E  0EFF               	movlw	255
 25900  013160  22DA               	addwfc	fsr2h,f,c
 25901  013162  2ADE               	incf	postinc2,f,c
 25902  013164  0E00               	movlw	0
 25903  013166  22DE               	addwfc	postinc2,f,c
 25904  013168  22DE               	addwfc	postinc2,f,c
 25905  01316A  22DE               	addwfc	postinc2,f,c
 25906                           
 25907                           ;stkvar	_prod @ sp[(-13)+0]
 25908  01316C  0EF6               	movlw	-10
 25909  01316E  A0E3               	btfss	plusw1,0,c
 25910  013170  D027               	goto	l7813
 25911  013172  0E01               	movlw	1
 25912  013174  6E0C               	movwf	(btemp+11)^0,c
 25913                           
 25914                           ;stkvar	_prod @ sp[(-13)+0]
 25915  013176  50E1               	movf	fsr1l,w,c
 25916  013178  0FF3               	addlw	-13
 25917  01317A  6ED9               	movwf	fsr2l,c
 25918  01317C  50E2               	movf	fsr1h,w,c
 25919  01317E  6EDA               	movwf	fsr2h,c
 25920  013180  0EFF               	movlw	255
 25921  013182  22DA               	addwfc	fsr2h,f,c
 25922  013184  280C               	incf	(btemp+11)^0,w,c
 25923  013186  52DE               	movf	postinc2,f,c
 25924  013188  D008               	goto	u6460
 25925  01318A                     u6465:
 25926  01318A  52DE               	movf	postinc2,f,c
 25927  01318C  90D8               	bcf	status,0,c
 25928  01318E  BEDC               	btfsc	preinc2,7,c
 25929  013190  80D8               	bsf	status,0,c
 25930  013192  32DD               	rrcf	postdec2,f,c
 25931  013194  32DD               	rrcf	postdec2,f,c
 25932  013196  32DD               	rrcf	postdec2,f,c
 25933  013198  32DE               	rrcf	postinc2,f,c
 25934  01319A                     u6460:
 25935  01319A  2EE8               	decfsz	wreg,f,c
 25936  01319C  D7F6               	goto	u6465
 25937                           
 25938                           ;stkvar	_temp @ sp[(-13)+8]
 25939  01319E  0EFB               	movlw	-5
 25940  0131A0  50E3               	movf	plusw1,w,c
 25941  0131A2  0F01               	addlw	1
 25942  0131A4  6E01               	movwf	btemp^0,c
 25943  0131A6  0EFB               	movlw	-5
 25944  0131A8  0060  F007  FFE3   	movff	btemp,plusw1
 25945  0131AE  6A01               	clrf	btemp^0,c
 25946  0131B0  0EFC               	movlw	-4
 25947  0131B2  50E3               	movf	plusw1,w,c
 25948  0131B4  2001               	addwfc	btemp^0,w,c
 25949  0131B6  6E01               	movwf	btemp^0,c
 25950  0131B8  0EFC               	movlw	-4
 25951  0131BA  0060  F007  FFE3   	movff	btemp,plusw1
 25952  0131C0                     l7813:
 25953                           
 25954                           ;stkvar	_temp @ sp[(-13)+8]
 25955  0131C0  0EFC               	movlw	-4
 25956  0131C2  BEE3               	btfsc	plusw1,7,c
 25957  0131C4  D020               	goto	l7817
 25958  0131C6  0EFC               	movlw	-4
 25959  0131C8  50E3               	movf	plusw1,w,c
 25960  0131CA  E104               	bnz	u6470
 25961  0131CC  0EFB               	movlw	-5
 25962  0131CE  28E3               	incf	plusw1,w,c
 25963  0131D0  A0D8               	btfss	status,0,c
 25964  0131D2  D019               	goto	l7817
 25965  0131D4                     u6470:
 25966  0131D4  0E00               	movlw	0
 25967  0131D6  6E09               	movwf	(btemp+8)^0,c
 25968  0131D8  0E00               	movlw	0
 25969  0131DA  6E0A               	movwf	(btemp+9)^0,c
 25970  0131DC  0E80               	movlw	128
 25971  0131DE  6E0B               	movwf	(btemp+10)^0,c
 25972  0131E0  0E7F               	movlw	127
 25973  0131E2  6E0C               	movwf	(btemp+11)^0,c
 25974                           
 25975                           ;stkvar	_prod @ sp[(-13)+0]
 25976  0131E4  0EF3               	movlw	-13
 25977  0131E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25978  0131EC  0EF4               	movlw	-12
 25979  0131EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25980  0131F4  0EF5               	movlw	-11
 25981  0131F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25982  0131FC  0EF6               	movlw	-10
 25983  0131FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25984  013204  D044               	goto	l7833
 25985  013206                     l7817:
 25986                           
 25987                           ;stkvar	_temp @ sp[(-13)+8]
 25988  013206  0EFC               	movlw	-4
 25989  013208  BEE3               	btfsc	plusw1,7,c
 25990  01320A  D007               	goto	u6480
 25991  01320C  0EFC               	movlw	-4
 25992  01320E  50E3               	movf	plusw1,w,c
 25993  013210  E10F               	bnz	l7823
 25994  013212  0EFB               	movlw	-5
 25995  013214  04E3               	decf	plusw1,w,c
 25996  013216  B0D8               	btfsc	status,0,c
 25997  013218  D00B               	goto	l7823
 25998  01321A                     u6480:
 25999                           
 26000                           ;stkvar	_prod @ sp[(-13)+0]
 26001  01321A  0EF3               	movlw	-13
 26002  01321C  6AE3               	clrf	plusw1,c
 26003  01321E  0EF4               	movlw	-12
 26004  013220  6AE3               	clrf	plusw1,c
 26005  013222  0EF5               	movlw	-11
 26006  013224  6AE3               	clrf	plusw1,c
 26007  013226  0EF6               	movlw	-10
 26008  013228  6AE3               	clrf	plusw1,c
 26009                           
 26010                           ;stkvar	_sign @ sp[(-13)+12]
 26011  01322A  0EFF               	movlw	-1
 26012  01322C  6AE3               	clrf	plusw1,c
 26013  01322E  D02F               	goto	l7833
 26014  013230                     l7823:
 26015                           
 26016                           ;stkvar	_temp @ sp[(-13)+8]
 26017                           ;stkvar	_bexp @ sp[(-13)+10]
 26018  013230  0EFB               	movlw	-5
 26019  013232  006F FF8C  F001    	movff	plusw1,btemp
 26020  013238  0EFD               	movlw	-3
 26021  01323A  0060  F007  FFE3   	movff	btemp,plusw1
 26022                           
 26023                           ;stkvar	_prod @ sp[(-13)+0]
 26024  013240  50E1               	movf	fsr1l,w,c
 26025  013242  0FF3               	addlw	-13
 26026  013244  6ED9               	movwf	fsr2l,c
 26027  013246  50E2               	movf	fsr1h,w,c
 26028  013248  6EDA               	movwf	fsr2h,c
 26029  01324A  0EFF               	movlw	255
 26030  01324C  22DA               	addwfc	fsr2h,f,c
 26031  01324E  0EFF               	movlw	255
 26032  013250  16DE               	andwf	postinc2,f,c
 26033  013252  0EFF               	movlw	255
 26034  013254  16DE               	andwf	postinc2,f,c
 26035  013256  0E7F               	movlw	127
 26036  013258  16DE               	andwf	postinc2,f,c
 26037  01325A  0E00               	movlw	0
 26038  01325C  16DE               	andwf	postinc2,f,c
 26039                           
 26040                           ;stkvar	_bexp @ sp[(-13)+10]
 26041  01325E  0EFD               	movlw	-3
 26042  013260  A0E3               	btfss	plusw1,0,c
 26043  013262  D008               	goto	l7831
 26044                           
 26045                           ;stkvar	_prod @ sp[(-13)+0]
 26046  013264  0EF5               	movlw	245
 26047  013266  24E1               	addwf	fsr1l,w,c
 26048  013268  6ED9               	movwf	fsr2l,c
 26049  01326A  0EFF               	movlw	255
 26050  01326C  20E2               	addwfc	fsr1h,w,c
 26051  01326E  6EDA               	movwf	fsr2h,c
 26052  013270  0E00               	movlw	0
 26053  013272  8EDB               	bsf	plusw2,7,c
 26054  013274                     l7831:
 26055                           
 26056                           ;stkvar	_prod @ sp[(-13)+0]
 26057  013274  0EF6               	movlw	246
 26058  013276  24E1               	addwf	fsr1l,w,c
 26059  013278  6ED9               	movwf	fsr2l,c
 26060  01327A  0EFF               	movlw	255
 26061  01327C  20E2               	addwfc	fsr1h,w,c
 26062  01327E  6EDA               	movwf	fsr2h,c
 26063                           
 26064                           ;stkvar	_bexp @ sp[(-13)+10]
 26065  013280  0EFD               	movlw	-3
 26066  013282  006F FF8C  F00C    	movff	plusw1,btemp+11
 26067  013288  90D8               	bcf	status,0,c
 26068  01328A  300C               	rrcf	(btemp+11)^0,w,c
 26069  01328C  6EDF               	movwf	indf2,c
 26070  01328E                     l7833:
 26071                           
 26072                           ;stkvar	_sign @ sp[(-13)+12]
 26073  01328E  0EFF               	movlw	-1
 26074  013290  006F FF8C  F00C    	movff	plusw1,btemp+11
 26075                           
 26076                           ;stkvar	_prod @ sp[(-13)+0]
 26077  013296  0EF6               	movlw	246
 26078  013298  24E1               	addwf	fsr1l,w,c
 26079  01329A  6ED9               	movwf	fsr2l,c
 26080  01329C  0EFF               	movlw	255
 26081  01329E  20E2               	addwfc	fsr1h,w,c
 26082  0132A0  6EDA               	movwf	fsr2h,c
 26083  0132A2  500C               	movf	(btemp+11)^0,w,c
 26084  0132A4  12DF               	iorwf	indf2,f,c
 26085                           
 26086                           ;stkvar	_prod @ sp[(-13)+0]
 26087  0132A6  0EF3               	movlw	-13
 26088  0132A8  006F FF8C  F001    	movff	plusw1,btemp
 26089  0132AE  0EF4               	movlw	-12
 26090  0132B0  006F FF8C  F002    	movff	plusw1,btemp+1
 26091  0132B6  0EF5               	movlw	-11
 26092  0132B8  006F FF8C  F003    	movff	plusw1,btemp+2
 26093  0132BE  0EF6               	movlw	-10
 26094  0132C0  006F FF8C  F004    	movff	plusw1,btemp+3
 26095  0132C6                     l2876:
 26096                           
 26097                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26098  0132C6  0EEB               	movlw	235
 26099  0132C8  26E1               	addwf	fsr1l,f,c
 26100  0132CA  0EFF               	movlw	255
 26101  0132CC  22E2               	addwfc	fsr1h,f,c
 26102  0132CE  0012               	return		;funcret
 26103  0132D0                     __end_of___flmul:
 26104                           	opt callstack 0
 26105                           
 26106 ;; *************** function _SYSTEM_Initialize *****************
 26107 ;; Defined at:
 26108 ;;		line 50 in file "mcc_generated_files/mcc.c"
 26109 ;; Parameters:    Size  Location     Type
 26110 ;;		None
 26111 ;; Auto vars:     Size  Location     Type
 26112 ;;		None
 26113 ;; Return value:  Size  Location     Type
 26114 ;;                  1  [STACK] void 
 26115 ;; Registers used:
 26116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 26117 ;; Tracked objects:
 26118 ;;		On entry : 0/0
 26119 ;;		On exit  : 3F/3C
 26120 ;;		Unchanged: 0/0
 26121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26126 ;;Total ram usage:        0 bytes
 26127 ;; Hardware stack levels used:    1
 26128 ;; Hardware stack levels required when called:   17
 26129 ;; This function calls:
 26130 ;;		_ADCC_Initialize
 26131 ;;		_CLKREF_Initialize
 26132 ;;		_DMA1_Initialize
 26133 ;;		_DMA2_Initialize
 26134 ;;		_EXT_INT_Initialize
 26135 ;;		_FVR_Initialize
 26136 ;;		_INTERRUPT_Initialize
 26137 ;;		_OSCILLATOR_Initialize
 26138 ;;		_PIN_MANAGER_Initialize
 26139 ;;		_PMD_Initialize
 26140 ;;		_PWM8_Initialize
 26141 ;;		_SPI1_Initialize
 26142 ;;		_TMR2_Initialize
 26143 ;;		_TMR3_Initialize
 26144 ;;		_TMR5_Initialize
 26145 ;;		_TMR6_Initialize
 26146 ;;		_UART1_Initialize
 26147 ;;		_UART2_Initialize
 26148 ;; This function is called by:
 26149 ;;		_main
 26150 ;; This function uses a reentrant model
 26151 ;;
 26152                           
 26153                           	psect	text100
 26154  019B96                     __ptext100:
 26155                           	opt callstack 0
 26156  019B96                     _SYSTEM_Initialize:
 26157                           	opt callstack 13
 26158                           
 26159                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 26160                           
 26161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26162                           ;incstack = 0
 26163  019B96  ECAB  F0CB         	call	_INTERRUPT_Initialize	;wreg free
 26164                           
 26165                           ; BSR set to: 57
 26166                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 26167  019B9A  ECDA  F0D3         	call	_PMD_Initialize	;wreg free
 26168                           
 26169                           ; BSR set to: 57
 26170                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 26171  019B9E  EC73  F0C9         	call	_PIN_MANAGER_Initialize	;wreg free
 26172                           
 26173                           ; BSR set to: 58
 26174                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 26175  019BA2  ECCF  F0D3         	call	_OSCILLATOR_Initialize	;wreg free
 26176                           
 26177                           ; BSR set to: 57
 26178                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 26179  019BA6  EC3F  F0D4         	call	_FVR_Initialize	;wreg free
 26180                           
 26181                           ; BSR set to: 62
 26182                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 26183  019BAA  EC40  F0CB         	call	_ADCC_Initialize	;wreg free
 26184                           
 26185                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 26186  019BAE  ECAD  F0D3         	call	_TMR2_Initialize	;wreg free
 26187                           
 26188                           ; BSR set to: 57
 26189                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 26190  019BB2  ECC4  F0D3         	call	_PWM8_Initialize	;wreg free
 26191                           
 26192                           ; BSR set to: 63
 26193                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 26194  019BB6  EC11  F0D0         	call	_EXT_INT_Initialize	;wreg free
 26195                           
 26196                           ; BSR set to: 57
 26197                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 26198  019BBA  EC00  F0D1         	call	_TMR6_Initialize	;wreg free
 26199                           
 26200                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 26201  019BBE  ECA0  F0CE         	call	_TMR3_Initialize	;wreg free
 26202                           
 26203                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 26204  019BC2  EC7D  F0CE         	call	_TMR5_Initialize	;wreg free
 26205                           
 26206                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 26207  019BC6  EC5A  F0CE         	call	_UART1_Initialize	;wreg free
 26208                           
 26209                           ; BSR set to: 57
 26210                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 26211  019BCA  EC72  F0CC         	call	_UART2_Initialize	;wreg free
 26212                           
 26213                           ; BSR set to: 57
 26214                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 26215  019BCE  ECB9  F0D3         	call	_SPI1_Initialize	;wreg free
 26216                           
 26217                           ; BSR set to: 61
 26218                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 26219  019BD2  ECCE  F0CC         	call	_DMA2_Initialize	;wreg free
 26220                           
 26221                           ; BSR set to: 59
 26222                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 26223  019BD6  EC0B  F0CB         	call	_DMA1_Initialize	;wreg free
 26224                           
 26225                           ; BSR set to: 59
 26226                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 26227  019BDA  EC13  F0D4         	call	_CLKREF_Initialize	;wreg free
 26228                           
 26229                           ; BSR set to: 60
 26230                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26231  019BDE  0012               	return		;funcret
 26232  019BE0                     __end_of_SYSTEM_Initialize:
 26233                           	opt callstack 0
 26234                           
 26235 ;; *************** function _UART2_Initialize *****************
 26236 ;; Defined at:
 26237 ;;		line 78 in file "mcc_generated_files/uart2.c"
 26238 ;; Parameters:    Size  Location     Type
 26239 ;;		None
 26240 ;; Auto vars:     Size  Location     Type
 26241 ;;		None
 26242 ;; Return value:  Size  Location     Type
 26243 ;;                  1  [STACK] void 
 26244 ;; Registers used:
 26245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26246 ;; Tracked objects:
 26247 ;;		On entry : 3F/39
 26248 ;;		On exit  : 3F/39
 26249 ;;		Unchanged: 0/0
 26250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26255 ;;Total ram usage:        0 bytes
 26256 ;; Hardware stack levels used:    1
 26257 ;; Hardware stack levels required when called:   16
 26258 ;; This function calls:
 26259 ;;		_UART2_SetRxInterruptHandler
 26260 ;;		_UART2_SetTxInterruptHandler
 26261 ;; This function is called by:
 26262 ;;		_SYSTEM_Initialize
 26263 ;; This function uses a reentrant model
 26264 ;;
 26265                           
 26266                           	psect	text101
 26267  0198E4                     __ptext101:
 26268                           	opt callstack 0
 26269  0198E4                     _UART2_Initialize:
 26270                           	opt callstack 13
 26271                           
 26272                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 26273                           
 26274                           ; BSR set to: 60
 26275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26276                           ;incstack = 0
 26277  0198E4  0139               	movlb	57	; () banked
 26278  0198E6  9596               	bcf	150,2,b	;volatile
 26279                           
 26280                           ; BSR set to: 57
 26281                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 26282  0198E8  0ED2               	movlw	low _UART2_Receive_ISR
 26283  0198EA  6EE6               	movwf	postinc1,c
 26284  0198EC  0EA6               	movlw	high _UART2_Receive_ISR
 26285  0198EE  6EE6               	movwf	postinc1,c
 26286  0198F0  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 26287  0198F2  6EE6               	movwf	postinc1,c
 26288  0198F4  EC8D  F0D1         	call	_UART2_SetRxInterruptHandler	;wreg free
 26289                           
 26290                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 26291  0198F8  0139               	movlb	57	; () banked
 26292  0198FA  9796               	bcf	150,3,b	;volatile
 26293                           
 26294                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 26295  0198FC  0ED4               	movlw	low _UART2_Transmit_ISR
 26296  0198FE  6EE6               	movwf	postinc1,c
 26297  019900  0EA1               	movlw	high _UART2_Transmit_ISR
 26298  019902  6EE6               	movwf	postinc1,c
 26299  019904  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 26300  019906  6EE6               	movwf	postinc1,c
 26301  019908  EC79  F0D1         	call	_UART2_SetTxInterruptHandler	;wreg free
 26302                           
 26303                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 26304  01990C  013D               	movlb	61	; () banked
 26305  01990E  6BD4               	clrf	212,b	;volatile
 26306                           
 26307                           ; BSR set to: 61
 26308                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 26309  019910  6BD6               	clrf	214,b	;volatile
 26310                           
 26311                           ; BSR set to: 61
 26312                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 26313  019912  6BD8               	clrf	216,b	;volatile
 26314                           
 26315                           ; BSR set to: 61
 26316                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 26317  019914  0EB0               	movlw	176
 26318  019916  6FDA               	movwf	218,b	;volatile
 26319                           
 26320                           ; BSR set to: 61
 26321                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 26322  019918  0E80               	movlw	128
 26323  01991A  6FDB               	movwf	219,b	;volatile
 26324                           
 26325                           ; BSR set to: 61
 26326                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 26327  01991C  6BDC               	clrf	220,b	;volatile
 26328                           
 26329                           ; BSR set to: 61
 26330                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 26331  01991E  0E82               	movlw	130
 26332  019920  6FDD               	movwf	221,b	;volatile
 26333                           
 26334                           ; BSR set to: 61
 26335                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 26336  019922  0E06               	movlw	6
 26337  019924  6FDE               	movwf	222,b	;volatile
 26338                           
 26339                           ; BSR set to: 61
 26340                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 26341  019926  6BDF               	clrf	223,b	;volatile
 26342                           
 26343                           ; BSR set to: 61
 26344                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 26345  019928  6BE0               	clrf	224,b	;volatile
 26346                           
 26347                           ; BSR set to: 61
 26348                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 26349  01992A  6BE1               	clrf	225,b	;volatile
 26350                           
 26351                           ; BSR set to: 61
 26352                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 26353  01992C  6BE2               	clrf	226,b	;volatile
 26354                           
 26355                           ; BSR set to: 61
 26356                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 26357  01992E  6A34               	clrf	_uart2TxHead^0,c	;volatile
 26358                           
 26359                           ; BSR set to: 61
 26360                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 26361  019930  6A33               	clrf	_uart2TxTail^0,c	;volatile
 26362                           
 26363                           ; BSR set to: 61
 26364                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 26365  019932  0E40               	movlw	64
 26366  019934  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 26367                           
 26368                           ; BSR set to: 61
 26369                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 26370  019936  6A31               	clrf	_uart2RxHead^0,c	;volatile
 26371                           
 26372                           ; BSR set to: 61
 26373                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 26374  019938  6A30               	clrf	_uart2RxTail^0,c	;volatile
 26375                           
 26376                           ; BSR set to: 61
 26377                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 26378  01993A  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 26379                           
 26380                           ; BSR set to: 61
 26381                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 26382  01993C  0139               	movlb	57	; () banked
 26383  01993E  8596               	bsf	150,2,b	;volatile
 26384                           
 26385                           ; BSR set to: 57
 26386                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26387  019940  0012               	return		;funcret
 26388  019942                     __end_of_UART2_Initialize:
 26389                           	opt callstack 0
 26390                           
 26391 ;; *************** function _UART2_SetTxInterruptHandler *****************
 26392 ;; Defined at:
 26393 ;;		line 252 in file "mcc_generated_files/uart2.c"
 26394 ;; Parameters:    Size  Location     Type
 26395 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26396 ;;		 -> UART2_Transmit_ISR(1), 
 26397 ;; Auto vars:     Size  Location     Type
 26398 ;;		None
 26399 ;; Return value:  Size  Location     Type
 26400 ;;                  1  [STACK] void 
 26401 ;; Registers used:
 26402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26403 ;; Tracked objects:
 26404 ;;		On entry : 3F/39
 26405 ;;		On exit  : 0/0
 26406 ;;		Unchanged: 0/0
 26407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26412 ;;Total ram usage:        0 bytes
 26413 ;; Hardware stack levels used:    1
 26414 ;; Hardware stack levels required when called:   15
 26415 ;; This function calls:
 26416 ;;		Nothing
 26417 ;; This function is called by:
 26418 ;;		_UART2_Initialize
 26419 ;; This function uses a reentrant model
 26420 ;;
 26421                           
 26422                           	psect	text102
 26423  01A2F2                     __ptext102:
 26424                           	opt callstack 0
 26425  01A2F2                     _UART2_SetTxInterruptHandler:
 26426                           	opt callstack 13
 26427                           
 26428                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 26429                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26430                           
 26431                           ; BSR set to: 57
 26432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26433                           ;incstack = 0
 26434  01A2F2  50E1               	movf	fsr1l,w,c
 26435  01A2F4  0FFD               	addlw	-3
 26436  01A2F6  6ED9               	movwf	fsr2l,c
 26437  01A2F8  50E2               	movf	fsr1h,w,c
 26438  01A2FA  6EDA               	movwf	fsr2h,c
 26439  01A2FC  0EFF               	movlw	255
 26440  01A2FE  22DA               	addwfc	fsr2h,f,c
 26441  01A300  006F FF78  F0BB    	movff	postinc2,_UART2_TxInterruptHandler
 26442  01A306  006F FF78  F0BC    	movff	postinc2,_UART2_TxInterruptHandler+1
 26443  01A30C  006F FF74  F0BD    	movff	postdec2,_UART2_TxInterruptHandler+2
 26444                           
 26445                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26446  01A312  52E5               	movf	postdec1,f,c
 26447  01A314  52E5               	movf	postdec1,f,c
 26448  01A316  52E5               	movf	postdec1,f,c
 26449  01A318  0012               	return		;funcret
 26450  01A31A                     __end_of_UART2_SetTxInterruptHandler:
 26451                           	opt callstack 0
 26452                           
 26453 ;; *************** function _UART2_SetRxInterruptHandler *****************
 26454 ;; Defined at:
 26455 ;;		line 248 in file "mcc_generated_files/uart2.c"
 26456 ;; Parameters:    Size  Location     Type
 26457 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26458 ;;		 -> UART2_Receive_ISR(1), 
 26459 ;; Auto vars:     Size  Location     Type
 26460 ;;		None
 26461 ;; Return value:  Size  Location     Type
 26462 ;;                  1  [STACK] void 
 26463 ;; Registers used:
 26464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26465 ;; Tracked objects:
 26466 ;;		On entry : 3F/39
 26467 ;;		On exit  : 0/0
 26468 ;;		Unchanged: 0/0
 26469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26474 ;;Total ram usage:        0 bytes
 26475 ;; Hardware stack levels used:    1
 26476 ;; Hardware stack levels required when called:   15
 26477 ;; This function calls:
 26478 ;;		Nothing
 26479 ;; This function is called by:
 26480 ;;		_UART2_Initialize
 26481 ;; This function uses a reentrant model
 26482 ;;
 26483                           
 26484                           	psect	text103
 26485  01A31A                     __ptext103:
 26486                           	opt callstack 0
 26487  01A31A                     _UART2_SetRxInterruptHandler:
 26488                           	opt callstack 13
 26489                           
 26490                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 26491                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26492                           
 26493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26494                           ;incstack = 0
 26495  01A31A  50E1               	movf	fsr1l,w,c
 26496  01A31C  0FFD               	addlw	-3
 26497  01A31E  6ED9               	movwf	fsr2l,c
 26498  01A320  50E2               	movf	fsr1h,w,c
 26499  01A322  6EDA               	movwf	fsr2h,c
 26500  01A324  0EFF               	movlw	255
 26501  01A326  22DA               	addwfc	fsr2h,f,c
 26502  01A328  006F FF78  F0BE    	movff	postinc2,_UART2_RxInterruptHandler
 26503  01A32E  006F FF78  F0BF    	movff	postinc2,_UART2_RxInterruptHandler+1
 26504  01A334  006F FF74  F0C0    	movff	postdec2,_UART2_RxInterruptHandler+2
 26505                           
 26506                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26507  01A33A  52E5               	movf	postdec1,f,c
 26508  01A33C  52E5               	movf	postdec1,f,c
 26509  01A33E  52E5               	movf	postdec1,f,c
 26510  01A340  0012               	return		;funcret
 26511  01A342                     __end_of_UART2_SetRxInterruptHandler:
 26512                           	opt callstack 0
 26513                           
 26514 ;; *************** function _UART1_Initialize *****************
 26515 ;; Defined at:
 26516 ;;		line 75 in file "mcc_generated_files/uart1.c"
 26517 ;; Parameters:    Size  Location     Type
 26518 ;;		None
 26519 ;; Auto vars:     Size  Location     Type
 26520 ;;		None
 26521 ;; Return value:  Size  Location     Type
 26522 ;;                  1  [STACK] void 
 26523 ;; Registers used:
 26524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26525 ;; Tracked objects:
 26526 ;;		On entry : 0/39
 26527 ;;		On exit  : 3F/39
 26528 ;;		Unchanged: 0/0
 26529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26534 ;;Total ram usage:        0 bytes
 26535 ;; Hardware stack levels used:    1
 26536 ;; Hardware stack levels required when called:   16
 26537 ;; This function calls:
 26538 ;;		_UART1_SetRxInterruptHandler
 26539 ;; This function is called by:
 26540 ;;		_SYSTEM_Initialize
 26541 ;; This function uses a reentrant model
 26542 ;;
 26543                           
 26544                           	psect	text104
 26545  019CB4                     __ptext104:
 26546                           	opt callstack 0
 26547  019CB4                     _UART1_Initialize:
 26548                           	opt callstack 13
 26549                           
 26550                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 26551                           
 26552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26553                           ;incstack = 0
 26554  019CB4  0139               	movlb	57	; () banked
 26555  019CB6  9793               	bcf	147,3,b	;volatile
 26556                           
 26557                           ; BSR set to: 57
 26558                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 26559  019CB8  0E3A               	movlw	low _UART1_Receive_ISR
 26560  019CBA  6EE6               	movwf	postinc1,c
 26561  019CBC  0EA6               	movlw	high _UART1_Receive_ISR
 26562  019CBE  6EE6               	movwf	postinc1,c
 26563  019CC0  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 26564  019CC2  6EE6               	movwf	postinc1,c
 26565  019CC4  ECA1  F0D1         	call	_UART1_SetRxInterruptHandler	;wreg free
 26566                           
 26567                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 26568  019CC8  013D               	movlb	61	; () banked
 26569  019CCA  6BEC               	clrf	236,b	;volatile
 26570                           
 26571                           ; BSR set to: 61
 26572                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 26573  019CCC  6BED               	clrf	237,b	;volatile
 26574                           
 26575                           ; BSR set to: 61
 26576                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 26577  019CCE  6BEE               	clrf	238,b	;volatile
 26578                           
 26579                           ; BSR set to: 61
 26580                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 26581  019CD0  6BEF               	clrf	239,b	;volatile
 26582                           
 26583                           ; BSR set to: 61
 26584                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 26585  019CD2  6BF0               	clrf	240,b	;volatile
 26586                           
 26587                           ; BSR set to: 61
 26588                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 26589  019CD4  6BF1               	clrf	241,b	;volatile
 26590                           
 26591                           ; BSR set to: 61
 26592                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 26593  019CD6  0EB0               	movlw	176
 26594  019CD8  6FF2               	movwf	242,b	;volatile
 26595                           
 26596                           ; BSR set to: 61
 26597                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 26598  019CDA  0E80               	movlw	128
 26599  019CDC  6FF3               	movwf	243,b	;volatile
 26600                           
 26601                           ; BSR set to: 61
 26602                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 26603  019CDE  6BF4               	clrf	244,b	;volatile
 26604                           
 26605                           ; BSR set to: 61
 26606                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 26607  019CE0  0E8A               	movlw	138
 26608  019CE2  6FF5               	movwf	245,b	;volatile
 26609                           
 26610                           ; BSR set to: 61
 26611                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 26612  019CE4  6BF6               	clrf	246,b	;volatile
 26613                           
 26614                           ; BSR set to: 61
 26615                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 26616  019CE6  6BF7               	clrf	247,b	;volatile
 26617                           
 26618                           ; BSR set to: 61
 26619                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 26620  019CE8  6BF8               	clrf	248,b	;volatile
 26621                           
 26622                           ; BSR set to: 61
 26623                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 26624  019CEA  6BF9               	clrf	249,b	;volatile
 26625                           
 26626                           ; BSR set to: 61
 26627                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 26628  019CEC  6BFA               	clrf	250,b	;volatile
 26629                           
 26630                           ; BSR set to: 61
 26631                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 26632  019CEE  6A37               	clrf	_uart1RxHead^0,c	;volatile
 26633                           
 26634                           ; BSR set to: 61
 26635                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 26636  019CF0  6A36               	clrf	_uart1RxTail^0,c	;volatile
 26637                           
 26638                           ; BSR set to: 61
 26639                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 26640  019CF2  6A35               	clrf	_uart1RxCount^0,c	;volatile
 26641                           
 26642                           ; BSR set to: 61
 26643                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 26644  019CF4  0139               	movlb	57	; () banked
 26645  019CF6  8793               	bsf	147,3,b	;volatile
 26646                           
 26647                           ; BSR set to: 57
 26648                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26649  019CF8  0012               	return		;funcret
 26650  019CFA                     __end_of_UART1_Initialize:
 26651                           	opt callstack 0
 26652                           
 26653 ;; *************** function _UART1_SetRxInterruptHandler *****************
 26654 ;; Defined at:
 26655 ;;		line 207 in file "mcc_generated_files/uart1.c"
 26656 ;; Parameters:    Size  Location     Type
 26657 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26658 ;;		 -> UART1_Receive_ISR(1), 
 26659 ;; Auto vars:     Size  Location     Type
 26660 ;;		None
 26661 ;; Return value:  Size  Location     Type
 26662 ;;                  1  [STACK] void 
 26663 ;; Registers used:
 26664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26665 ;; Tracked objects:
 26666 ;;		On entry : 3F/39
 26667 ;;		On exit  : 0/0
 26668 ;;		Unchanged: 0/0
 26669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26674 ;;Total ram usage:        0 bytes
 26675 ;; Hardware stack levels used:    1
 26676 ;; Hardware stack levels required when called:   15
 26677 ;; This function calls:
 26678 ;;		Nothing
 26679 ;; This function is called by:
 26680 ;;		_UART1_Initialize
 26681 ;; This function uses a reentrant model
 26682 ;;
 26683                           
 26684                           	psect	text105
 26685  01A342                     __ptext105:
 26686                           	opt callstack 0
 26687  01A342                     _UART1_SetRxInterruptHandler:
 26688                           	opt callstack 13
 26689                           
 26690                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 26691                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26692                           
 26693                           ; BSR set to: 57
 26694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26695                           ;incstack = 0
 26696  01A342  50E1               	movf	fsr1l,w,c
 26697  01A344  0FFD               	addlw	-3
 26698  01A346  6ED9               	movwf	fsr2l,c
 26699  01A348  50E2               	movf	fsr1h,w,c
 26700  01A34A  6EDA               	movwf	fsr2h,c
 26701  01A34C  0EFF               	movlw	255
 26702  01A34E  22DA               	addwfc	fsr2h,f,c
 26703  01A350  006F FF78  F0B8    	movff	postinc2,_UART1_RxInterruptHandler
 26704  01A356  006F FF78  F0B9    	movff	postinc2,_UART1_RxInterruptHandler+1
 26705  01A35C  006F FF74  F0BA    	movff	postdec2,_UART1_RxInterruptHandler+2
 26706                           
 26707                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26708  01A362  52E5               	movf	postdec1,f,c
 26709  01A364  52E5               	movf	postdec1,f,c
 26710  01A366  52E5               	movf	postdec1,f,c
 26711  01A368  0012               	return		;funcret
 26712  01A36A                     __end_of_UART1_SetRxInterruptHandler:
 26713                           	opt callstack 0
 26714                           
 26715 ;; *************** function _TMR6_Initialize *****************
 26716 ;; Defined at:
 26717 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 26718 ;; Parameters:    Size  Location     Type
 26719 ;;		None
 26720 ;; Auto vars:     Size  Location     Type
 26721 ;;		None
 26722 ;; Return value:  Size  Location     Type
 26723 ;;                  1  [STACK] void 
 26724 ;; Registers used:
 26725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26726 ;; Tracked objects:
 26727 ;;		On entry : 3F/39
 26728 ;;		On exit  : 0/0
 26729 ;;		Unchanged: 0/0
 26730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26735 ;;Total ram usage:        0 bytes
 26736 ;; Hardware stack levels used:    1
 26737 ;; Hardware stack levels required when called:   16
 26738 ;; This function calls:
 26739 ;;		_TMR6_SetInterruptHandler
 26740 ;; This function is called by:
 26741 ;;		_SYSTEM_Initialize
 26742 ;; This function uses a reentrant model
 26743 ;;
 26744                           
 26745                           	psect	text106
 26746  01A200                     __ptext106:
 26747                           	opt callstack 0
 26748  01A200                     _TMR6_Initialize:
 26749                           	opt callstack 13
 26750                           
 26751                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 26752                           
 26753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26754                           ;incstack = 0
 26755  01A200  0E01               	movlw	1
 26756  01A202  6E96               	movwf	150,c	;volatile
 26757                           
 26758                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 26759  01A204  6A95               	clrf	149,c	;volatile
 26760                           
 26761                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 26762  01A206  6A97               	clrf	151,c	;volatile
 26763                           
 26764                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 26765  01A208  0E7C               	movlw	124
 26766  01A20A  6E93               	movwf	147,c	;volatile
 26767                           
 26768                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 26769  01A20C  6A92               	clrf	146,c	;volatile
 26770                           
 26771                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 26772  01A20E  0139               	movlb	57	; () banked
 26773  01A210  91A9               	bcf	169,0,b	;volatile
 26774                           
 26775                           ; BSR set to: 57
 26776                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 26777  01A212  8199               	bsf	153,0,b	;volatile
 26778                           
 26779                           ; BSR set to: 57
 26780                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 26781  01A214  0E48               	movlw	low _TMR6_DefaultInterruptHandler
 26782  01A216  6EE6               	movwf	postinc1,c
 26783  01A218  0E9B               	movlw	high _TMR6_DefaultInterruptHandler
 26784  01A21A  6EE6               	movwf	postinc1,c
 26785  01A21C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 26786  01A21E  6EE6               	movwf	postinc1,c
 26787  01A220  ECB5  F0D1         	call	_TMR6_SetInterruptHandler	;wreg free
 26788                           
 26789                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 26790  01A224  0EE0               	movlw	224
 26791  01A226  6E94               	movwf	148,c	;volatile
 26792                           
 26793                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26794  01A228  0012               	return		;funcret
 26795  01A22A                     __end_of_TMR6_Initialize:
 26796                           	opt callstack 0
 26797                           
 26798 ;; *************** function _TMR6_SetInterruptHandler *****************
 26799 ;; Defined at:
 26800 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 26801 ;; Parameters:    Size  Location     Type
 26802 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26803 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 26804 ;; Auto vars:     Size  Location     Type
 26805 ;;		None
 26806 ;; Return value:  Size  Location     Type
 26807 ;;                  1  [STACK] void 
 26808 ;; Registers used:
 26809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26810 ;; Tracked objects:
 26811 ;;		On entry : 3F/39
 26812 ;;		On exit  : 0/0
 26813 ;;		Unchanged: 0/0
 26814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26819 ;;Total ram usage:        0 bytes
 26820 ;; Hardware stack levels used:    1
 26821 ;; Hardware stack levels required when called:   15
 26822 ;; This function calls:
 26823 ;;		Nothing
 26824 ;; This function is called by:
 26825 ;;		_TMR6_Initialize
 26826 ;; This function uses a reentrant model
 26827 ;;
 26828                           
 26829                           	psect	text107
 26830  01A36A                     __ptext107:
 26831                           	opt callstack 0
 26832  01A36A                     _TMR6_SetInterruptHandler:
 26833                           	opt callstack 13
 26834                           
 26835                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 26836                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26837                           
 26838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26839                           ;incstack = 0
 26840  01A36A  50E1               	movf	fsr1l,w,c
 26841  01A36C  0FFD               	addlw	-3
 26842  01A36E  6ED9               	movwf	fsr2l,c
 26843  01A370  50E2               	movf	fsr1h,w,c
 26844  01A372  6EDA               	movwf	fsr2h,c
 26845  01A374  0EFF               	movlw	255
 26846  01A376  22DA               	addwfc	fsr2h,f,c
 26847  01A378  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 26848  01A37E  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 26849  01A384  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 26850                           
 26851                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 26852  01A38A  52E5               	movf	postdec1,f,c
 26853  01A38C  52E5               	movf	postdec1,f,c
 26854  01A38E  52E5               	movf	postdec1,f,c
 26855  01A390  0012               	return		;funcret
 26856  01A392                     __end_of_TMR6_SetInterruptHandler:
 26857                           	opt callstack 0
 26858                           
 26859 ;; *************** function _TMR5_Initialize *****************
 26860 ;; Defined at:
 26861 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 26862 ;; Parameters:    Size  Location     Type
 26863 ;;		None
 26864 ;; Auto vars:     Size  Location     Type
 26865 ;;		None
 26866 ;; Return value:  Size  Location     Type
 26867 ;;                  1  [STACK] void 
 26868 ;; Registers used:
 26869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 26870 ;; Tracked objects:
 26871 ;;		On entry : 0/39
 26872 ;;		On exit  : 0/0
 26873 ;;		Unchanged: 0/0
 26874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26879 ;;Total ram usage:        0 bytes
 26880 ;; Hardware stack levels used:    1
 26881 ;; Hardware stack levels required when called:   16
 26882 ;; This function calls:
 26883 ;;		_TMR5_SetInterruptHandler
 26884 ;; This function is called by:
 26885 ;;		_SYSTEM_Initialize
 26886 ;; This function uses a reentrant model
 26887 ;;
 26888                           
 26889                           	psect	text108
 26890  019CFA                     __ptext108:
 26891                           	opt callstack 0
 26892  019CFA                     _TMR5_Initialize:
 26893                           	opt callstack 13
 26894                           
 26895                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 26896                           
 26897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26898                           ;incstack = 0
 26899  019CFA  6A9B               	clrf	155,c	;volatile
 26900                           
 26901                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 26902  019CFC  6A9C               	clrf	156,c	;volatile
 26903                           
 26904                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 26905  019CFE  0E01               	movlw	1
 26906  019D00  6E9D               	movwf	157,c	;volatile
 26907                           
 26908                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 26909  019D02  0E63               	movlw	99
 26910  019D04  6E99               	movwf	153,c	;volatile
 26911                           
 26912                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 26913  019D06  0EC0               	movlw	192
 26914  019D08  6E98               	movwf	152,c	;volatile
 26915                           
 26916                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 26917  019D0A  5098               	movf	152,w,c	;volatile
 26918  019D0C  006F FE64  F001    	movff	16281,btemp	;volatile
 26919  019D12  6A02               	clrf	(btemp+1)^0,c
 26920  019D14  0060  F004  F002   	movff	btemp,btemp+1
 26921  019D1A  6A01               	clrf	btemp^0,c
 26922  019D1C  1001               	iorwf	btemp^0,w,c
 26923  019D1E  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 26924  019D20  5002               	movf	(btemp+1)^0,w,c
 26925  019D22  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 26926                           
 26927                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 26928  019D24  0139               	movlb	57	; () banked
 26929  019D26  9DA8               	bcf	168,6,b	;volatile
 26930                           
 26931                           ; BSR set to: 57
 26932                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 26933  019D28  8D98               	bsf	152,6,b	;volatile
 26934                           
 26935                           ; BSR set to: 57
 26936                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 26937  019D2A  0E56               	movlw	low _TMR5_DefaultInterruptHandler
 26938  019D2C  6EE6               	movwf	postinc1,c
 26939  019D2E  0EA0               	movlw	high _TMR5_DefaultInterruptHandler
 26940  019D30  6EE6               	movwf	postinc1,c
 26941  019D32  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 26942  019D34  6EE6               	movwf	postinc1,c
 26943  019D36  ECC9  F0D1         	call	_TMR5_SetInterruptHandler	;wreg free
 26944                           
 26945                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 26946  019D3A  0E31               	movlw	49
 26947  019D3C  6E9A               	movwf	154,c	;volatile
 26948                           
 26949                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26950  019D3E  0012               	return		;funcret
 26951  019D40                     __end_of_TMR5_Initialize:
 26952                           	opt callstack 0
 26953                           
 26954 ;; *************** function _TMR5_SetInterruptHandler *****************
 26955 ;; Defined at:
 26956 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 26957 ;; Parameters:    Size  Location     Type
 26958 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26959 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 26960 ;; Auto vars:     Size  Location     Type
 26961 ;;		None
 26962 ;; Return value:  Size  Location     Type
 26963 ;;                  1  [STACK] void 
 26964 ;; Registers used:
 26965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26966 ;; Tracked objects:
 26967 ;;		On entry : 3F/39
 26968 ;;		On exit  : 0/0
 26969 ;;		Unchanged: 0/0
 26970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26975 ;;Total ram usage:        0 bytes
 26976 ;; Hardware stack levels used:    1
 26977 ;; Hardware stack levels required when called:   15
 26978 ;; This function calls:
 26979 ;;		Nothing
 26980 ;; This function is called by:
 26981 ;;		_TMR5_Initialize
 26982 ;; This function uses a reentrant model
 26983 ;;
 26984                           
 26985                           	psect	text109
 26986  01A392                     __ptext109:
 26987                           	opt callstack 0
 26988  01A392                     _TMR5_SetInterruptHandler:
 26989                           	opt callstack 13
 26990                           
 26991                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 26992                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26993                           
 26994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26995                           ;incstack = 0
 26996  01A392  50E1               	movf	fsr1l,w,c
 26997  01A394  0FFD               	addlw	-3
 26998  01A396  6ED9               	movwf	fsr2l,c
 26999  01A398  50E2               	movf	fsr1h,w,c
 27000  01A39A  6EDA               	movwf	fsr2h,c
 27001  01A39C  0EFF               	movlw	255
 27002  01A39E  22DA               	addwfc	fsr2h,f,c
 27003  01A3A0  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 27004  01A3A6  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 27005  01A3AC  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 27006                           
 27007                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27008  01A3B2  52E5               	movf	postdec1,f,c
 27009  01A3B4  52E5               	movf	postdec1,f,c
 27010  01A3B6  52E5               	movf	postdec1,f,c
 27011  01A3B8  0012               	return		;funcret
 27012  01A3BA                     __end_of_TMR5_SetInterruptHandler:
 27013                           	opt callstack 0
 27014                           
 27015 ;; *************** function _TMR3_Initialize *****************
 27016 ;; Defined at:
 27017 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 27018 ;; Parameters:    Size  Location     Type
 27019 ;;		None
 27020 ;; Auto vars:     Size  Location     Type
 27021 ;;		None
 27022 ;; Return value:  Size  Location     Type
 27023 ;;                  1  [STACK] void 
 27024 ;; Registers used:
 27025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27026 ;; Tracked objects:
 27027 ;;		On entry : 0/39
 27028 ;;		On exit  : 0/0
 27029 ;;		Unchanged: 0/0
 27030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27035 ;;Total ram usage:        0 bytes
 27036 ;; Hardware stack levels used:    1
 27037 ;; Hardware stack levels required when called:   16
 27038 ;; This function calls:
 27039 ;;		_TMR3_SetInterruptHandler
 27040 ;; This function is called by:
 27041 ;;		_SYSTEM_Initialize
 27042 ;; This function uses a reentrant model
 27043 ;;
 27044                           
 27045                           	psect	text110
 27046  019D40                     __ptext110:
 27047                           	opt callstack 0
 27048  019D40                     _TMR3_Initialize:
 27049                           	opt callstack 13
 27050                           
 27051                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 27052                           
 27053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27054                           ;incstack = 0
 27055  019D40  6AA7               	clrf	167,c	;volatile
 27056                           
 27057                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 27058  019D42  6AA8               	clrf	168,c	;volatile
 27059                           
 27060                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 27061  019D44  0E01               	movlw	1
 27062  019D46  6EA9               	movwf	169,c	;volatile
 27063                           
 27064                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 27065  019D48  0E3C               	movlw	60
 27066  019D4A  6EA5               	movwf	165,c	;volatile
 27067                           
 27068                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 27069  019D4C  0EB0               	movlw	176
 27070  019D4E  6EA4               	movwf	164,c	;volatile
 27071                           
 27072                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 27073  019D50  50A4               	movf	164,w,c	;volatile
 27074  019D52  006F FE94  F001    	movff	16293,btemp	;volatile
 27075  019D58  6A02               	clrf	(btemp+1)^0,c
 27076  019D5A  0060  F004  F002   	movff	btemp,btemp+1
 27077  019D60  6A01               	clrf	btemp^0,c
 27078  019D62  1001               	iorwf	btemp^0,w,c
 27079  019D64  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 27080  019D66  5002               	movf	(btemp+1)^0,w,c
 27081  019D68  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 27082                           
 27083                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 27084  019D6A  0139               	movlb	57	; () banked
 27085  019D6C  9DA6               	bcf	166,6,b	;volatile
 27086                           
 27087                           ; BSR set to: 57
 27088                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 27089  019D6E  8D96               	bsf	150,6,b	;volatile
 27090                           
 27091                           ; BSR set to: 57
 27092                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 27093  019D70  0EA8               	movlw	low _TMR3_DefaultInterruptHandler
 27094  019D72  6EE6               	movwf	postinc1,c
 27095  019D74  0EA8               	movlw	high _TMR3_DefaultInterruptHandler
 27096  019D76  6EE6               	movwf	postinc1,c
 27097  019D78  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 27098  019D7A  6EE6               	movwf	postinc1,c
 27099  019D7C  ECDD  F0D1         	call	_TMR3_SetInterruptHandler	;wreg free
 27100                           
 27101                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 27102  019D80  0E31               	movlw	49
 27103  019D82  6EA6               	movwf	166,c	;volatile
 27104                           
 27105                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27106  019D84  0012               	return		;funcret
 27107  019D86                     __end_of_TMR3_Initialize:
 27108                           	opt callstack 0
 27109                           
 27110 ;; *************** function _TMR3_SetInterruptHandler *****************
 27111 ;; Defined at:
 27112 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 27113 ;; Parameters:    Size  Location     Type
 27114 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27115 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 27116 ;; Auto vars:     Size  Location     Type
 27117 ;;		None
 27118 ;; Return value:  Size  Location     Type
 27119 ;;                  1  [STACK] void 
 27120 ;; Registers used:
 27121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27122 ;; Tracked objects:
 27123 ;;		On entry : 0/1
 27124 ;;		On exit  : 0/0
 27125 ;;		Unchanged: 0/0
 27126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27131 ;;Total ram usage:        0 bytes
 27132 ;; Hardware stack levels used:    1
 27133 ;; Hardware stack levels required when called:   15
 27134 ;; This function calls:
 27135 ;;		Nothing
 27136 ;; This function is called by:
 27137 ;;		_TMR3_Initialize
 27138 ;;		_init_bsoc
 27139 ;; This function uses a reentrant model
 27140 ;;
 27141                           
 27142                           	psect	text111
 27143  01A3BA                     __ptext111:
 27144                           	opt callstack 0
 27145  01A3BA                     _TMR3_SetInterruptHandler:
 27146                           	opt callstack 14
 27147                           
 27148                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 27149                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27150                           
 27151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27152                           ;incstack = 0
 27153  01A3BA  50E1               	movf	fsr1l,w,c
 27154  01A3BC  0FFD               	addlw	-3
 27155  01A3BE  6ED9               	movwf	fsr2l,c
 27156  01A3C0  50E2               	movf	fsr1h,w,c
 27157  01A3C2  6EDA               	movwf	fsr2h,c
 27158  01A3C4  0EFF               	movlw	255
 27159  01A3C6  22DA               	addwfc	fsr2h,f,c
 27160  01A3C8  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 27161  01A3CE  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 27162  01A3D4  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 27163                           
 27164                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27165  01A3DA  52E5               	movf	postdec1,f,c
 27166  01A3DC  52E5               	movf	postdec1,f,c
 27167  01A3DE  52E5               	movf	postdec1,f,c
 27168  01A3E0  0012               	return		;funcret
 27169  01A3E2                     __end_of_TMR3_SetInterruptHandler:
 27170                           	opt callstack 0
 27171                           
 27172 ;; *************** function _TMR2_Initialize *****************
 27173 ;; Defined at:
 27174 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 27175 ;; Parameters:    Size  Location     Type
 27176 ;;		None
 27177 ;; Auto vars:     Size  Location     Type
 27178 ;;		None
 27179 ;; Return value:  Size  Location     Type
 27180 ;;                  1  [STACK] void 
 27181 ;; Registers used:
 27182 ;;		wreg, status,2
 27183 ;; Tracked objects:
 27184 ;;		On entry : 0/3E
 27185 ;;		On exit  : 3F/39
 27186 ;;		Unchanged: 0/0
 27187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27192 ;;Total ram usage:        0 bytes
 27193 ;; Hardware stack levels used:    1
 27194 ;; Hardware stack levels required when called:   15
 27195 ;; This function calls:
 27196 ;;		Nothing
 27197 ;; This function is called by:
 27198 ;;		_SYSTEM_Initialize
 27199 ;; This function uses a reentrant model
 27200 ;;
 27201                           
 27202                           	psect	text112
 27203  01A75A                     __ptext112:
 27204                           	opt callstack 0
 27205  01A75A                     _TMR2_Initialize:
 27206                           	opt callstack 14
 27207                           
 27208                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 27209                           
 27210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27211                           ;incstack = 0
 27212  01A75A  0E01               	movlw	1
 27213  01A75C  6EAE               	movwf	174,c	;volatile
 27214                           
 27215                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 27216  01A75E  6AAD               	clrf	173,c	;volatile
 27217                           
 27218                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 27219  01A760  6AAF               	clrf	175,c	;volatile
 27220                           
 27221                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 27222  01A762  0E63               	movlw	99
 27223  01A764  6EAB               	movwf	171,c	;volatile
 27224                           
 27225                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 27226  01A766  6AAA               	clrf	170,c	;volatile
 27227                           
 27228                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 27229  01A768  0139               	movlb	57	; () banked
 27230  01A76A  95A4               	bcf	164,2,b	;volatile
 27231                           
 27232                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 27233  01A76C  0EC0               	movlw	192
 27234  01A76E  6EAC               	movwf	172,c	;volatile
 27235                           
 27236                           ; BSR set to: 57
 27237                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27238  01A770  0012               	return		;funcret
 27239  01A772                     __end_of_TMR2_Initialize:
 27240                           	opt callstack 0
 27241                           
 27242 ;; *************** function _SPI1_Initialize *****************
 27243 ;; Defined at:
 27244 ;;		line 64 in file "mcc_generated_files/spi1.c"
 27245 ;; Parameters:    Size  Location     Type
 27246 ;;		None
 27247 ;; Auto vars:     Size  Location     Type
 27248 ;;		None
 27249 ;; Return value:  Size  Location     Type
 27250 ;;                  1  [STACK] void 
 27251 ;; Registers used:
 27252 ;;		wreg, status,2
 27253 ;; Tracked objects:
 27254 ;;		On entry : 3F/39
 27255 ;;		On exit  : 3F/3D
 27256 ;;		Unchanged: 0/0
 27257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27262 ;;Total ram usage:        0 bytes
 27263 ;; Hardware stack levels used:    1
 27264 ;; Hardware stack levels required when called:   15
 27265 ;; This function calls:
 27266 ;;		Nothing
 27267 ;; This function is called by:
 27268 ;;		_SYSTEM_Initialize
 27269 ;; This function uses a reentrant model
 27270 ;;
 27271                           
 27272                           	psect	text113
 27273  01A772                     __ptext113:
 27274                           	opt callstack 0
 27275  01A772                     _SPI1_Initialize:
 27276                           	opt callstack 14
 27277                           
 27278                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 27279                           
 27280                           ; BSR set to: 57
 27281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27282                           ;incstack = 0
 27283  01A772  0E40               	movlw	64
 27284  01A774  013D               	movlb	61	; () banked
 27285  01A776  6F15               	movwf	21,b	;volatile
 27286                           
 27287                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 27288  01A778  0E03               	movlw	3
 27289  01A77A  6F16               	movwf	22,b	;volatile
 27290                           
 27291                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 27292  01A77C  0E4F               	movlw	79
 27293  01A77E  6F19               	movwf	25,b	;volatile
 27294                           
 27295                           ; BSR set to: 61
 27296                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 27297  01A780  6B1C               	clrf	28,b	;volatile
 27298                           
 27299                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 27300  01A782  0E83               	movlw	131
 27301  01A784  6F14               	movwf	20,b	;volatile
 27302                           
 27303                           ; BSR set to: 61
 27304                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27305  01A786  0012               	return		;funcret
 27306  01A788                     __end_of_SPI1_Initialize:
 27307                           	opt callstack 0
 27308                           
 27309 ;; *************** function _PWM8_Initialize *****************
 27310 ;; Defined at:
 27311 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 27312 ;; Parameters:    Size  Location     Type
 27313 ;;		None
 27314 ;; Auto vars:     Size  Location     Type
 27315 ;;		None
 27316 ;; Return value:  Size  Location     Type
 27317 ;;                  1  [STACK] void 
 27318 ;; Registers used:
 27319 ;;		wreg, status,2
 27320 ;; Tracked objects:
 27321 ;;		On entry : 3F/39
 27322 ;;		On exit  : 3F/3F
 27323 ;;		Unchanged: 0/0
 27324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27329 ;;Total ram usage:        0 bytes
 27330 ;; Hardware stack levels used:    1
 27331 ;; Hardware stack levels required when called:   15
 27332 ;; This function calls:
 27333 ;;		Nothing
 27334 ;; This function is called by:
 27335 ;;		_SYSTEM_Initialize
 27336 ;; This function uses a reentrant model
 27337 ;;
 27338                           
 27339                           	psect	text114
 27340  01A788                     __ptext114:
 27341                           	opt callstack 0
 27342  01A788                     _PWM8_Initialize:
 27343                           	opt callstack 14
 27344                           
 27345                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 27346                           
 27347                           ; BSR set to: 61
 27348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27349                           ;incstack = 0
 27350  01A788  0E80               	movlw	128
 27351  01A78A  6E62               	movwf	98,c	;volatile
 27352                           
 27353                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 27354  01A78C  6A61               	clrf	97,c	;volatile
 27355                           
 27356                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 27357  01A78E  0E40               	movlw	64
 27358  01A790  6E60               	movwf	96,c	;volatile
 27359                           
 27360                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 27361  01A792  013F               	movlb	63	; () banked
 27362  01A794  515F               	movf	95,w,b	;volatile
 27363  01A796  0B3F               	andlw	-193
 27364  01A798  0940               	iorlw	64
 27365  01A79A  6F5F               	movwf	95,b	;volatile
 27366                           
 27367                           ; BSR set to: 63
 27368                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27369  01A79C  0012               	return		;funcret
 27370  01A79E                     __end_of_PWM8_Initialize:
 27371                           	opt callstack 0
 27372                           
 27373 ;; *************** function _PMD_Initialize *****************
 27374 ;; Defined at:
 27375 ;;		line 90 in file "mcc_generated_files/mcc.c"
 27376 ;; Parameters:    Size  Location     Type
 27377 ;;		None
 27378 ;; Auto vars:     Size  Location     Type
 27379 ;;		None
 27380 ;; Return value:  Size  Location     Type
 27381 ;;                  1  [STACK] void 
 27382 ;; Registers used:
 27383 ;;		None
 27384 ;; Tracked objects:
 27385 ;;		On entry : 3F/39
 27386 ;;		On exit  : 3F/39
 27387 ;;		Unchanged: 0/0
 27388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27393 ;;Total ram usage:        0 bytes
 27394 ;; Hardware stack levels used:    1
 27395 ;; Hardware stack levels required when called:   15
 27396 ;; This function calls:
 27397 ;;		Nothing
 27398 ;; This function is called by:
 27399 ;;		_SYSTEM_Initialize
 27400 ;; This function uses a reentrant model
 27401 ;;
 27402                           
 27403                           	psect	text115
 27404  01A7B4                     __ptext115:
 27405                           	opt callstack 0
 27406  01A7B4                     _PMD_Initialize:
 27407                           	opt callstack 14
 27408                           
 27409                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 27410                           
 27411                           ; BSR set to: 63
 27412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27413                           ;incstack = 0
 27414  01A7B4  0139               	movlb	57	; () banked
 27415  01A7B6  6BC0               	clrf	192,b	;volatile
 27416                           
 27417                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 27418  01A7B8  6BC1               	clrf	193,b	;volatile
 27419                           
 27420                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 27421  01A7BA  6BC2               	clrf	194,b	;volatile
 27422                           
 27423                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 27424  01A7BC  6BC3               	clrf	195,b	;volatile
 27425                           
 27426                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 27427  01A7BE  6BC4               	clrf	196,b	;volatile
 27428                           
 27429                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 27430  01A7C0  6BC5               	clrf	197,b	;volatile
 27431                           
 27432                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 27433  01A7C2  6BC6               	clrf	198,b	;volatile
 27434                           
 27435                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 27436  01A7C4  6BC7               	clrf	199,b	;volatile
 27437                           
 27438                           ; BSR set to: 57
 27439                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27440  01A7C6  0012               	return		;funcret
 27441  01A7C8                     __end_of_PMD_Initialize:
 27442                           	opt callstack 0
 27443                           
 27444 ;; *************** function _PIN_MANAGER_Initialize *****************
 27445 ;; Defined at:
 27446 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 27447 ;; Parameters:    Size  Location     Type
 27448 ;;		None
 27449 ;; Auto vars:     Size  Location     Type
 27450 ;;		None
 27451 ;; Return value:  Size  Location     Type
 27452 ;;                  1  [STACK] void 
 27453 ;; Registers used:
 27454 ;;		wreg, status,2
 27455 ;; Tracked objects:
 27456 ;;		On entry : 3F/39
 27457 ;;		On exit  : 3F/3A
 27458 ;;		Unchanged: 0/0
 27459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27464 ;;Total ram usage:        0 bytes
 27465 ;; Hardware stack levels used:    1
 27466 ;; Hardware stack levels required when called:   15
 27467 ;; This function calls:
 27468 ;;		Nothing
 27469 ;; This function is called by:
 27470 ;;		_SYSTEM_Initialize
 27471 ;; This function uses a reentrant model
 27472 ;;
 27473                           
 27474                           	psect	text116
 27475  0192E6                     __ptext116:
 27476                           	opt callstack 0
 27477  0192E6                     _PIN_MANAGER_Initialize:
 27478                           	opt callstack 14
 27479                           
 27480                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 27481                           
 27482                           ; BSR set to: 57
 27483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27484                           ;incstack = 0
 27485  0192E6  0E07               	movlw	7
 27486  0192E8  6EBE               	movwf	190,c	;volatile
 27487                           
 27488                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 27489  0192EA  0E80               	movlw	128
 27490  0192EC  6EBD               	movwf	189,c	;volatile
 27491                           
 27492                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 27493  0192EE  6ABA               	clrf	186,c	;volatile
 27494                           
 27495                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 27496  0192F0  6ABF               	clrf	191,c	;volatile
 27497                           
 27498                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 27499  0192F2  6ABB               	clrf	187,c	;volatile
 27500                           
 27501                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 27502  0192F4  0E07               	movlw	7
 27503  0192F6  6EBC               	movwf	188,c	;volatile
 27504                           
 27505                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 27506  0192F8  6AC6               	clrf	198,c	;volatile
 27507                           
 27508                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 27509  0192FA  0E0F               	movlw	15
 27510  0192FC  6EC7               	movwf	199,c	;volatile
 27511                           
 27512                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 27513  0192FE  68C2               	setf	194,c	;volatile
 27514                           
 27515                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 27516  019300  0EBF               	movlw	191
 27517  019302  6EC3               	movwf	195,c	;volatile
 27518                           
 27519                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 27520  019304  0E90               	movlw	144
 27521  019306  6EC4               	movwf	196,c	;volatile
 27522                           
 27523                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 27524  019308  0E0C               	movlw	12
 27525  01930A  6EC5               	movwf	197,c	;volatile
 27526                           
 27527                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 27528  01930C  013A               	movlb	58	; () banked
 27529  01930E  6B70               	clrf	112,b	;volatile
 27530                           
 27531                           ; BSR set to: 58
 27532                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 27533  019310  6B60               	clrf	96,b	;volatile
 27534                           
 27535                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 27536  019312  0E3C               	movlw	60
 27537  019314  6F50               	movwf	80,b	;volatile
 27538                           
 27539                           ; BSR set to: 58
 27540                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 27541  019316  6B80               	clrf	128,b	;volatile
 27542                           
 27543                           ; BSR set to: 58
 27544                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 27545  019318  6B90               	clrf	144,b	;volatile
 27546                           
 27547                           ; BSR set to: 58
 27548                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 27549  01931A  6940               	setf	64,b	;volatile
 27550                           
 27551                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 27552  01931C  0E0C               	movlw	12
 27553  01931E  6F71               	movwf	113,b	;volatile
 27554                           
 27555                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 27556  019320  0E0F               	movlw	15
 27557  019322  6F91               	movwf	145,b	;volatile
 27558                           
 27559                           ; BSR set to: 58
 27560                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 27561  019324  6B81               	clrf	129,b	;volatile
 27562                           
 27563                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 27564  019326  0E83               	movlw	131
 27565  019328  6F51               	movwf	81,b	;volatile
 27566                           
 27567                           ; BSR set to: 58
 27568                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 27569  01932A  6B41               	clrf	65,b	;volatile
 27570                           
 27571                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 27572  01932C  0E97               	movlw	151
 27573  01932E  6F61               	movwf	97,b	;volatile
 27574                           
 27575                           ; BSR set to: 58
 27576                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 27577  019330  6B82               	clrf	130,b	;volatile
 27578                           
 27579                           ; BSR set to: 58
 27580                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 27581  019332  6B92               	clrf	146,b	;volatile
 27582                           
 27583                           ; BSR set to: 58
 27584                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 27585  019334  6B42               	clrf	66,b	;volatile
 27586                           
 27587                           ; BSR set to: 58
 27588                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 27589  019336  6B52               	clrf	82,b	;volatile
 27590                           
 27591                           ; BSR set to: 58
 27592                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 27593  019338  6B62               	clrf	98,b	;volatile
 27594                           
 27595                           ; BSR set to: 58
 27596                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 27597  01933A  6B72               	clrf	114,b	;volatile
 27598                           
 27599                           ; BSR set to: 58
 27600                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 27601  01933C  6943               	setf	67,b	;volatile
 27602                           
 27603                           ; BSR set to: 58
 27604                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 27605  01933E  6953               	setf	83,b	;volatile
 27606                           
 27607                           ; BSR set to: 58
 27608                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 27609  019340  6963               	setf	99,b	;volatile
 27610                           
 27611                           ; BSR set to: 58
 27612                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 27613  019342  6973               	setf	115,b	;volatile
 27614                           
 27615                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 27616  019344  0E07               	movlw	7
 27617  019346  6F83               	movwf	131,b	;volatile
 27618                           
 27619                           ; BSR set to: 58
 27620                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 27621  019348  6993               	setf	147,b	;volatile
 27622                           
 27623                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 27624  01934A  0E0F               	movlw	15
 27625  01934C  6FE8               	movwf	232,b	;volatile
 27626                           
 27627                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 27628  01934E  0E13               	movlw	19
 27629  019350  6FDE               	movwf	222,b	;volatile
 27630                           
 27631                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 27632  019352  0E16               	movlw	22
 27633  019354  6F0E               	movwf	14,b	;volatile
 27634                           
 27635                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 27636  019356  0E1E               	movlw	30
 27637  019358  6F13               	movwf	19,b	;volatile
 27638                           
 27639                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 27640  01935A  0E08               	movlw	8
 27641  01935C  6FC0               	movwf	192,b	;volatile
 27642                           
 27643                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 27644  01935E  0E10               	movlw	16
 27645  019360  6F19               	movwf	25,b	;volatile
 27646                           
 27647                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 27648  019362  0E09               	movlw	9
 27649  019364  6FC1               	movwf	193,b	;volatile
 27650                           
 27651                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 27652  019366  0E1F               	movlw	31
 27653  019368  6F15               	movwf	21,b	;volatile
 27654                           
 27655                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 27656  01936A  0E13               	movlw	19
 27657  01936C  6F16               	movwf	22,b	;volatile
 27658                           
 27659                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 27660  01936E  0E17               	movlw	23
 27661  019370  6FE5               	movwf	229,b	;volatile
 27662                           
 27663                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 27664  019372  0E14               	movlw	20
 27665  019374  6FDF               	movwf	223,b	;volatile
 27666                           
 27667                           ; BSR set to: 58
 27668                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 27669  019376  0012               	return		;funcret
 27670  019378                     __end_of_PIN_MANAGER_Initialize:
 27671                           	opt callstack 0
 27672                           
 27673 ;; *************** function _OSCILLATOR_Initialize *****************
 27674 ;; Defined at:
 27675 ;;		line 72 in file "mcc_generated_files/mcc.c"
 27676 ;; Parameters:    Size  Location     Type
 27677 ;;		None
 27678 ;; Auto vars:     Size  Location     Type
 27679 ;;		None
 27680 ;; Return value:  Size  Location     Type
 27681 ;;                  1  [STACK] void 
 27682 ;; Registers used:
 27683 ;;		wreg, status,2
 27684 ;; Tracked objects:
 27685 ;;		On entry : 3F/3A
 27686 ;;		On exit  : 3F/39
 27687 ;;		Unchanged: 0/0
 27688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27693 ;;Total ram usage:        0 bytes
 27694 ;; Hardware stack levels used:    1
 27695 ;; Hardware stack levels required when called:   15
 27696 ;; This function calls:
 27697 ;;		Nothing
 27698 ;; This function is called by:
 27699 ;;		_SYSTEM_Initialize
 27700 ;; This function uses a reentrant model
 27701 ;;
 27702                           
 27703                           	psect	text117
 27704  01A79E                     __ptext117:
 27705                           	opt callstack 0
 27706  01A79E                     _OSCILLATOR_Initialize:
 27707                           	opt callstack 14
 27708                           
 27709                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 27710                           
 27711                           ; BSR set to: 58
 27712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27713                           ;incstack = 0
 27714  01A79E  0E20               	movlw	32
 27715  01A7A0  0139               	movlb	57	; () banked
 27716  01A7A2  6FD9               	movwf	217,b	;volatile
 27717                           
 27718                           ; BSR set to: 57
 27719                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 27720  01A7A4  6BDB               	clrf	219,b	;volatile
 27721                           
 27722                           ; BSR set to: 57
 27723                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 27724  01A7A6  6BDD               	clrf	221,b	;volatile
 27725                           
 27726                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 27727  01A7A8  0E02               	movlw	2
 27728  01A7AA  6FDF               	movwf	223,b	;volatile
 27729                           
 27730                           ; BSR set to: 57
 27731                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 27732  01A7AC  6BDE               	clrf	222,b	;volatile
 27733  01A7AE                     l169:
 27734                           
 27735                           ; BSR set to: 57
 27736                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 27737  01A7AE  B1DC               	btfsc	220,0,b	;volatile
 27738  01A7B0  0012               	return	
 27739  01A7B2  D7FD               	goto	l169
 27740  01A7B4                     __end_of_OSCILLATOR_Initialize:
 27741                           	opt callstack 0
 27742                           
 27743 ;; *************** function _INTERRUPT_Initialize *****************
 27744 ;; Defined at:
 27745 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 27746 ;; Parameters:    Size  Location     Type
 27747 ;;		None
 27748 ;; Auto vars:     Size  Location     Type
 27749 ;;  state           1  [STACK] _Bool 
 27750 ;; Return value:  Size  Location     Type
 27751 ;;                  1  [STACK] void 
 27752 ;; Registers used:
 27753 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 27754 ;; Tracked objects:
 27755 ;;		On entry : 0/0
 27756 ;;		On exit  : 3F/39
 27757 ;;		Unchanged: 0/0
 27758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27763 ;;Total ram usage:        0 bytes
 27764 ;; Hardware stack levels used:    1
 27765 ;; Hardware stack levels required when called:   15
 27766 ;; This function calls:
 27767 ;;		Nothing
 27768 ;; This function is called by:
 27769 ;;		_SYSTEM_Initialize
 27770 ;; This function uses a reentrant model
 27771 ;;
 27772                           
 27773                           	psect	text118
 27774  019756                     __ptext118:
 27775                           	opt callstack 0
 27776  019756                     _INTERRUPT_Initialize:
 27777                           	opt callstack 0
 27778                           
 27779                           ; BSR set to: 57
 27780                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27781  019756  52E6               	movf	postinc1,f,c
 27782                           
 27783                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 27784                           
 27785                           ;incstack = 0
 27786  019758  8AD2               	bsf	210,5,c	;volatile
 27787                           
 27788                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 27789  01975A  AED2               	btfss	16338,7,c	;volatile
 27790  01975C  D003               	goto	u8750
 27791  01975E  6A0C               	clrf	(btemp+11)^0,c
 27792  019760  2A0C               	incf	(btemp+11)^0,f,c
 27793  019762  D001               	goto	u8768
 27794  019764                     u8750:
 27795  019764  6A0C               	clrf	(btemp+11)^0,c
 27796  019766                     u8768:
 27797                           
 27798                           ;stkvar	_state @ sp[(-1)+0]
 27799  019766  0EFF               	movlw	-1
 27800  019768  0060  F033  FFE3   	movff	btemp+11,plusw1
 27801                           
 27802                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 27803  01976E  9ED2               	bcf	16338,7,c	;volatile
 27804                           
 27805                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 27806  019770  0E55               	movlw	85
 27807  019772  6ED4               	movwf	212,c	;volatile
 27808                           
 27809                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 27810  019774  0EAA               	movlw	170
 27811  019776  6ED4               	movwf	212,c	;volatile
 27812                           
 27813                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 27814  019778  90D4               	bcf	212,0,c	;volatile
 27815                           
 27816                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 27817  01977A  0138               	movlb	56	; () banked
 27818  01977C  6B9F               	clrf	159,b	;volatile
 27819                           
 27820                           ; BSR set to: 56
 27821                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 27822  01977E  6B9E               	clrf	158,b	;volatile
 27823                           
 27824                           ; BSR set to: 56
 27825                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 27826  019780  0E08               	movlw	8
 27827  019782  6F9D               	movwf	157,b	;volatile
 27828                           
 27829                           ; BSR set to: 56
 27830                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 27831  019784  0E55               	movlw	85
 27832  019786  6ED4               	movwf	212,c	;volatile
 27833                           
 27834                           ; BSR set to: 56
 27835                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 27836  019788  0EAA               	movlw	170
 27837  01978A  6ED4               	movwf	212,c	;volatile
 27838                           
 27839                           ; BSR set to: 56
 27840                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 27841  01978C  80D4               	bsf	212,0,c	;volatile
 27842                           
 27843                           ; BSR set to: 56
 27844                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 27845                           ;stkvar	_state @ sp[(-1)+0]
 27846  01978E  0EFF               	movlw	-1
 27847  019790  B0E3               	btfsc	plusw1,0,c
 27848  019792  D002               	bra	u8775
 27849  019794  9ED2               	bcf	16338,7,c	;volatile
 27850  019796  D001               	bra	u8776
 27851  019798                     u8775:
 27852  019798  8ED2               	bsf	16338,7,c	;volatile
 27853  01979A                     u8776:
 27854                           
 27855                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 27856  01979A  0139               	movlb	57	; () banked
 27857  01979C  8782               	bsf	130,3,b	;volatile
 27858                           
 27859                           ; BSR set to: 57
 27860                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 27861  01979E  8382               	bsf	130,1,b	;volatile
 27862                           
 27863                           ; BSR set to: 57
 27864                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 27865  0197A0  8182               	bsf	130,0,b	;volatile
 27866                           
 27867                           ; BSR set to: 57
 27868                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 27869  0197A2  8582               	bsf	130,2,b	;volatile
 27870                           
 27871                           ; BSR set to: 57
 27872                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 27873  0197A4  8786               	bsf	134,3,b	;volatile
 27874                           
 27875                           ; BSR set to: 57
 27876                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 27877  0197A6  8586               	bsf	134,2,b	;volatile
 27878                           
 27879                           ; BSR set to: 57
 27880                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 27881  0197A8  8783               	bsf	131,3,b	;volatile
 27882                           
 27883                           ; BSR set to: 57
 27884                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 27885  0197AA  8181               	bsf	129,0,b	;volatile
 27886                           
 27887                           ; BSR set to: 57
 27888                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 27889  0197AC  9185               	bcf	133,0,b	;volatile
 27890                           
 27891                           ; BSR set to: 57
 27892                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 27893  0197AE  8189               	bsf	137,0,b	;volatile
 27894                           
 27895                           ; BSR set to: 57
 27896                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 27897  0197B0  9D88               	bcf	136,6,b	;volatile
 27898                           
 27899                           ; BSR set to: 57
 27900                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 27901  0197B2  9D86               	bcf	134,6,b	;volatile
 27902                           
 27903                           ; BSR set to: 57
 27904                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 27905  0197B4  8581               	bsf	129,2,b	;volatile
 27906                           
 27907                           ; BSR set to: 57
 27908                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 27909  0197B6  8781               	bsf	129,3,b	;volatile
 27910                           
 27911                           ; BSR set to: 57
 27912                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 27913  0197B8  52E5               	movf	postdec1,f,c
 27914  0197BA  0012               	return		;funcret
 27915  0197BC                     __end_of_INTERRUPT_Initialize:
 27916                           	opt callstack 0
 27917                           
 27918 ;; *************** function _FVR_Initialize *****************
 27919 ;; Defined at:
 27920 ;;		line 58 in file "mcc_generated_files/fvr.c"
 27921 ;; Parameters:    Size  Location     Type
 27922 ;;		None
 27923 ;; Auto vars:     Size  Location     Type
 27924 ;;		None
 27925 ;; Return value:  Size  Location     Type
 27926 ;;                  1  [STACK] void 
 27927 ;; Registers used:
 27928 ;;		wreg, status,2
 27929 ;; Tracked objects:
 27930 ;;		On entry : 3F/39
 27931 ;;		On exit  : 3F/3E
 27932 ;;		Unchanged: 0/0
 27933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27938 ;;Total ram usage:        0 bytes
 27939 ;; Hardware stack levels used:    1
 27940 ;; Hardware stack levels required when called:   15
 27941 ;; This function calls:
 27942 ;;		Nothing
 27943 ;; This function is called by:
 27944 ;;		_SYSTEM_Initialize
 27945 ;; This function uses a reentrant model
 27946 ;;
 27947                           
 27948                           	psect	text119
 27949  01A87E                     __ptext119:
 27950                           	opt callstack 0
 27951  01A87E                     _FVR_Initialize:
 27952                           	opt callstack 14
 27953                           
 27954                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 27955                           
 27956                           ; BSR set to: 57
 27957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27958                           ;incstack = 0
 27959  01A87E  0EAF               	movlw	175
 27960  01A880  013E               	movlb	62	; () banked
 27961  01A882  6FC1               	movwf	193,b	;volatile
 27962                           
 27963                           ; BSR set to: 62
 27964                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27965  01A884  0012               	return		;funcret
 27966  01A886                     __end_of_FVR_Initialize:
 27967                           	opt callstack 0
 27968                           
 27969 ;; *************** function _EXT_INT_Initialize *****************
 27970 ;; Defined at:
 27971 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 27972 ;; Parameters:    Size  Location     Type
 27973 ;;		None
 27974 ;; Auto vars:     Size  Location     Type
 27975 ;;		None
 27976 ;; Return value:  Size  Location     Type
 27977 ;;                  1  [STACK] void 
 27978 ;; Registers used:
 27979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27980 ;; Tracked objects:
 27981 ;;		On entry : 3F/3F
 27982 ;;		On exit  : 3F/39
 27983 ;;		Unchanged: 0/0
 27984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27989 ;;Total ram usage:        0 bytes
 27990 ;; Hardware stack levels used:    1
 27991 ;; Hardware stack levels required when called:   16
 27992 ;; This function calls:
 27993 ;;		_INT0_SetInterruptHandler
 27994 ;;		_INT1_SetInterruptHandler
 27995 ;; This function is called by:
 27996 ;;		_SYSTEM_Initialize
 27997 ;; This function uses a reentrant model
 27998 ;;
 27999                           
 28000                           	psect	text120
 28001  01A022                     __ptext120:
 28002                           	opt callstack 0
 28003  01A022                     _EXT_INT_Initialize:
 28004                           	opt callstack 13
 28005                           
 28006                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 28007                           
 28008                           ; BSR set to: 62
 28009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28010                           ;incstack = 0
 28011  01A022  0139               	movlb	57	; () banked
 28012  01A024  91A1               	bcf	161,0,b	;volatile
 28013                           
 28014                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 28015  01A026  90D2               	bcf	210,0,c	;volatile
 28016                           
 28017                           ; BSR set to: 57
 28018                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 28019  01A028  0EAA               	movlw	low _INT0_DefaultInterruptHandler
 28020  01A02A  6EE6               	movwf	postinc1,c
 28021  01A02C  0EA8               	movlw	high _INT0_DefaultInterruptHandler
 28022  01A02E  6EE6               	movwf	postinc1,c
 28023  01A030  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 28024  01A032  6EE6               	movwf	postinc1,c
 28025  01A034  EC05  F0D2         	call	_INT0_SetInterruptHandler	;wreg free
 28026                           
 28027                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 28028  01A038  0139               	movlb	57	; () banked
 28029  01A03A  8191               	bsf	145,0,b	;volatile
 28030                           
 28031                           ; BSR set to: 57
 28032                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 28033  01A03C  91A5               	bcf	165,0,b	;volatile
 28034                           
 28035                           ; BSR set to: 57
 28036                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 28037  01A03E  92D2               	bcf	210,1,c	;volatile
 28038                           
 28039                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 28040  01A040  0EA6               	movlw	low _INT1_DefaultInterruptHandler
 28041  01A042  6EE6               	movwf	postinc1,c
 28042  01A044  0EA8               	movlw	high _INT1_DefaultInterruptHandler
 28043  01A046  6EE6               	movwf	postinc1,c
 28044  01A048  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 28045  01A04A  6EE6               	movwf	postinc1,c
 28046  01A04C  ECF1  F0D1         	call	_INT1_SetInterruptHandler	;wreg free
 28047                           
 28048                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 28049  01A050  0139               	movlb	57	; () banked
 28050  01A052  8195               	bsf	149,0,b	;volatile
 28051                           
 28052                           ; BSR set to: 57
 28053                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28054  01A054  0012               	return		;funcret
 28055  01A056                     __end_of_EXT_INT_Initialize:
 28056                           	opt callstack 0
 28057                           
 28058 ;; *************** function _INT1_SetInterruptHandler *****************
 28059 ;; Defined at:
 28060 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 28061 ;; Parameters:    Size  Location     Type
 28062 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28063 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 28064 ;; Auto vars:     Size  Location     Type
 28065 ;;		None
 28066 ;; Return value:  Size  Location     Type
 28067 ;;                  1  [STACK] void 
 28068 ;; Registers used:
 28069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28070 ;; Tracked objects:
 28071 ;;		On entry : 3F/39
 28072 ;;		On exit  : 0/0
 28073 ;;		Unchanged: 0/0
 28074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28079 ;;Total ram usage:        0 bytes
 28080 ;; Hardware stack levels used:    1
 28081 ;; Hardware stack levels required when called:   15
 28082 ;; This function calls:
 28083 ;;		Nothing
 28084 ;; This function is called by:
 28085 ;;		_EXT_INT_Initialize
 28086 ;;		_start_switch_handler
 28087 ;; This function uses a reentrant model
 28088 ;;
 28089                           
 28090                           	psect	text121
 28091  01A3E2                     __ptext121:
 28092                           	opt callstack 0
 28093  01A3E2                     _INT1_SetInterruptHandler:
 28094                           	opt callstack 14
 28095                           
 28096                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 28097                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28098                           
 28099                           ; BSR set to: 57
 28100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28101                           ;incstack = 0
 28102  01A3E2  50E1               	movf	fsr1l,w,c
 28103  01A3E4  0FFD               	addlw	-3
 28104  01A3E6  6ED9               	movwf	fsr2l,c
 28105  01A3E8  50E2               	movf	fsr1h,w,c
 28106  01A3EA  6EDA               	movwf	fsr2h,c
 28107  01A3EC  0EFF               	movlw	255
 28108  01A3EE  22DA               	addwfc	fsr2h,f,c
 28109  01A3F0  006F FF78  F0C1    	movff	postinc2,_INT1_InterruptHandler
 28110  01A3F6  006F FF78  F0C2    	movff	postinc2,_INT1_InterruptHandler+1
 28111  01A3FC  006F FF74  F0C3    	movff	postdec2,_INT1_InterruptHandler+2
 28112                           
 28113                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28114  01A402  52E5               	movf	postdec1,f,c
 28115  01A404  52E5               	movf	postdec1,f,c
 28116  01A406  52E5               	movf	postdec1,f,c
 28117  01A408  0012               	return		;funcret
 28118  01A40A                     __end_of_INT1_SetInterruptHandler:
 28119                           	opt callstack 0
 28120                           
 28121 ;; *************** function _INT0_SetInterruptHandler *****************
 28122 ;; Defined at:
 28123 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 28124 ;; Parameters:    Size  Location     Type
 28125 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28126 ;;		 -> INT0_DefaultInterruptHandler(1), 
 28127 ;; Auto vars:     Size  Location     Type
 28128 ;;		None
 28129 ;; Return value:  Size  Location     Type
 28130 ;;                  1  [STACK] void 
 28131 ;; Registers used:
 28132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28133 ;; Tracked objects:
 28134 ;;		On entry : 3F/39
 28135 ;;		On exit  : 0/0
 28136 ;;		Unchanged: 0/0
 28137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28142 ;;Total ram usage:        0 bytes
 28143 ;; Hardware stack levels used:    1
 28144 ;; Hardware stack levels required when called:   15
 28145 ;; This function calls:
 28146 ;;		Nothing
 28147 ;; This function is called by:
 28148 ;;		_EXT_INT_Initialize
 28149 ;; This function uses a reentrant model
 28150 ;;
 28151                           
 28152                           	psect	text122
 28153  01A40A                     __ptext122:
 28154                           	opt callstack 0
 28155  01A40A                     _INT0_SetInterruptHandler:
 28156                           	opt callstack 13
 28157                           
 28158                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 28159                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28160                           
 28161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28162                           ;incstack = 0
 28163  01A40A  50E1               	movf	fsr1l,w,c
 28164  01A40C  0FFD               	addlw	-3
 28165  01A40E  6ED9               	movwf	fsr2l,c
 28166  01A410  50E2               	movf	fsr1h,w,c
 28167  01A412  6EDA               	movwf	fsr2h,c
 28168  01A414  0EFF               	movlw	255
 28169  01A416  22DA               	addwfc	fsr2h,f,c
 28170  01A418  006F FF78  F0C4    	movff	postinc2,_INT0_InterruptHandler
 28171  01A41E  006F FF78  F0C5    	movff	postinc2,_INT0_InterruptHandler+1
 28172  01A424  006F FF74  F0C6    	movff	postdec2,_INT0_InterruptHandler+2
 28173                           
 28174                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28175  01A42A  52E5               	movf	postdec1,f,c
 28176  01A42C  52E5               	movf	postdec1,f,c
 28177  01A42E  52E5               	movf	postdec1,f,c
 28178  01A430  0012               	return		;funcret
 28179  01A432                     __end_of_INT0_SetInterruptHandler:
 28180                           	opt callstack 0
 28181                           
 28182 ;; *************** function _DMA2_Initialize *****************
 28183 ;; Defined at:
 28184 ;;		line 61 in file "mcc_generated_files/dma2.c"
 28185 ;; Parameters:    Size  Location     Type
 28186 ;;		None
 28187 ;; Auto vars:     Size  Location     Type
 28188 ;;		None
 28189 ;; Return value:  Size  Location     Type
 28190 ;;                  1  [STACK] void 
 28191 ;; Registers used:
 28192 ;;		wreg, status,2
 28193 ;; Tracked objects:
 28194 ;;		On entry : 3F/3D
 28195 ;;		On exit  : 3F/3B
 28196 ;;		Unchanged: 0/0
 28197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28202 ;;Total ram usage:        0 bytes
 28203 ;; Hardware stack levels used:    1
 28204 ;; Hardware stack levels required when called:   15
 28205 ;; This function calls:
 28206 ;;		Nothing
 28207 ;; This function is called by:
 28208 ;;		_SYSTEM_Initialize
 28209 ;; This function uses a reentrant model
 28210 ;;
 28211                           
 28212                           	psect	text123
 28213  01999C                     __ptext123:
 28214                           	opt callstack 0
 28215  01999C                     _DMA2_Initialize:
 28216                           	opt callstack 14
 28217                           
 28218                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 28219                           
 28220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28221                           ;incstack = 0
 28222  01999C  0E00               	movlw	0
 28223  01999E  013B               	movlb	59	; () banked
 28224  0199A0  6FD9               	movwf	217,b	;volatile
 28225  0199A2  0E10               	movlw	16
 28226  0199A4  6FDA               	movwf	218,b	;volatile
 28227  0199A6  0E00               	movlw	0
 28228  0199A8  6FDB               	movwf	219,b	;volatile
 28229                           
 28230                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 28231  0199AA  0E3F               	movlw	63
 28232  0199AC  6FD1               	movwf	209,b	;volatile
 28233  0199AE  0EBB               	movlw	187
 28234  0199B0  6FD0               	movwf	208,b	;volatile
 28235                           
 28236                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 28237  0199B2  0E03               	movlw	3
 28238  0199B4  6FDD               	movwf	221,b	;volatile
 28239                           
 28240                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 28241  0199B6  0E00               	movlw	0
 28242  0199B8  6FD8               	movwf	216,b	;volatile
 28243  0199BA  0E01               	movlw	1
 28244  0199BC  6FD7               	movwf	215,b	;volatile
 28245                           
 28246                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 28247  0199BE  0E00               	movlw	0
 28248  0199C0  6FCF               	movwf	207,b	;volatile
 28249  0199C2  0E01               	movlw	1
 28250  0199C4  6FCE               	movwf	206,b	;volatile
 28251                           
 28252                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 28253  0199C6  0E1C               	movlw	28
 28254  0199C8  6FDF               	movwf	223,b	;volatile
 28255                           
 28256                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 28257  0199CA  0E3D               	movlw	61
 28258  0199CC  6FDE               	movwf	222,b	;volatile
 28259                           
 28260                           ; BSR set to: 59
 28261                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 28262  0199CE  0139               	movlb	57	; () banked
 28263  0199D0  97A5               	bcf	165,3,b	;volatile
 28264                           
 28265                           ; BSR set to: 57
 28266                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 28267  0199D2  95A5               	bcf	165,2,b	;volatile
 28268                           
 28269                           ; BSR set to: 57
 28270                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 28271  0199D4  9BA5               	bcf	165,5,b	;volatile
 28272                           
 28273                           ; BSR set to: 57
 28274                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 28275  0199D6  99A5               	bcf	165,4,b	;volatile
 28276                           
 28277                           ; BSR set to: 57
 28278                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 28279  0199D8  9795               	bcf	149,3,b	;volatile
 28280                           
 28281                           ; BSR set to: 57
 28282                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 28283  0199DA  9595               	bcf	149,2,b	;volatile
 28284                           
 28285                           ; BSR set to: 57
 28286                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 28287  0199DC  9B95               	bcf	149,5,b	;volatile
 28288                           
 28289                           ; BSR set to: 57
 28290                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 28291  0199DE  9995               	bcf	149,4,b	;volatile
 28292  0199E0  9ED2               	bcf	16338,7,c	;# 
 28293  0199E2  0139               	banksel	14831	;# 
 28294  0199E4  0E55               	movlw	85	;# 
 28295  0199E6  6FEF               	movwf	14831,b	;# 
 28296  0199E8  0EAA               	movlw	170	;# 
 28297  0199EA  6FEF               	movwf	14831,b	;# 
 28298  0199EC  81EF               	bsf	14831,0,b	;# 
 28299  0199EE  8ED2               	bsf	16338,7,c	;# 
 28300                           
 28301                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 28302  0199F0  013B               	movlb	59	; () banked
 28303  0199F2  6BDC               	clrf	220,b	;volatile
 28304                           
 28305                           ; BSR set to: 59
 28306                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28307  0199F4  0012               	return		;funcret
 28308  0199F6                     __end_of_DMA2_Initialize:
 28309                           	opt callstack 0
 28310                           
 28311 ;; *************** function _DMA1_Initialize *****************
 28312 ;; Defined at:
 28313 ;;		line 86 in file "mcc_generated_files/dma1.c"
 28314 ;; Parameters:    Size  Location     Type
 28315 ;;		None
 28316 ;; Auto vars:     Size  Location     Type
 28317 ;;		None
 28318 ;; Return value:  Size  Location     Type
 28319 ;;                  1  [STACK] void 
 28320 ;; Registers used:
 28321 ;;		wreg, status,2
 28322 ;; Tracked objects:
 28323 ;;		On entry : 3F/3B
 28324 ;;		On exit  : 3F/3B
 28325 ;;		Unchanged: 0/0
 28326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28331 ;;Total ram usage:        0 bytes
 28332 ;; Hardware stack levels used:    1
 28333 ;; Hardware stack levels required when called:   15
 28334 ;; This function calls:
 28335 ;;		Nothing
 28336 ;; This function is called by:
 28337 ;;		_SYSTEM_Initialize
 28338 ;; This function uses a reentrant model
 28339 ;;
 28340                           
 28341                           	psect	text124
 28342  019616                     __ptext124:
 28343                           	opt callstack 0
 28344  019616                     _DMA1_Initialize:
 28345                           	opt callstack 14
 28346                           
 28347                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 28348                           
 28349                           ; BSR set to: 59
 28350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28351                           ;incstack = 0
 28352  019616  0E00               	movlw	0
 28353  019618  013B               	movlb	59	; () banked
 28354  01961A  6FF9               	movwf	249,b	;volatile
 28355  01961C  0E10               	movlw	16
 28356  01961E  6FFA               	movwf	250,b	;volatile
 28357  019620  0E00               	movlw	0
 28358  019622  6FFB               	movwf	251,b	;volatile
 28359                           
 28360                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 28361  019624  0E3D               	movlw	61
 28362  019626  6FF1               	movwf	241,b	;volatile
 28363  019628  0E11               	movlw	17
 28364  01962A  6FF0               	movwf	240,b	;volatile
 28365                           
 28366                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 28367  01962C  0E03               	movlw	3
 28368  01962E  6FFD               	movwf	253,b	;volatile
 28369                           
 28370                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 28371  019630  0E00               	movlw	0
 28372  019632  6FF8               	movwf	248,b	;volatile
 28373  019634  0E01               	movlw	1
 28374  019636  6FF7               	movwf	247,b	;volatile
 28375                           
 28376                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 28377  019638  0E00               	movlw	0
 28378  01963A  6FEF               	movwf	239,b	;volatile
 28379  01963C  0E01               	movlw	1
 28380  01963E  6FEE               	movwf	238,b	;volatile
 28381                           
 28382                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 28383  019640  0E15               	movlw	21
 28384  019642  6FFF               	movwf	255,b	;volatile
 28385                           
 28386                           ; BSR set to: 59
 28387                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 28388  019644  6BFE               	clrf	254,b	;volatile
 28389                           
 28390                           ; BSR set to: 59
 28391                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 28392  019646  0139               	movlb	57	; () banked
 28393  019648  93A2               	bcf	162,1,b	;volatile
 28394                           
 28395                           ; BSR set to: 57
 28396                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 28397  01964A  91A2               	bcf	162,0,b	;volatile
 28398                           
 28399                           ; BSR set to: 57
 28400                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 28401  01964C  97A2               	bcf	162,3,b	;volatile
 28402                           
 28403                           ; BSR set to: 57
 28404                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 28405  01964E  95A2               	bcf	162,2,b	;volatile
 28406                           
 28407                           ; BSR set to: 57
 28408                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 28409  019650  8392               	bsf	146,1,b	;volatile
 28410                           
 28411                           ; BSR set to: 57
 28412                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 28413  019652  8192               	bsf	146,0,b	;volatile
 28414                           
 28415                           ; BSR set to: 57
 28416                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 28417  019654  8792               	bsf	146,3,b	;volatile
 28418                           
 28419                           ; BSR set to: 57
 28420                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 28421  019656  8592               	bsf	146,2,b	;volatile
 28422                           
 28423                           ; BSR set to: 57
 28424                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 28425  019658  6BF1               	clrf	241,b	;volatile
 28426                           
 28427                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 28428  01965A  0E01               	movlw	1
 28429  01965C  6FF2               	movwf	242,b	;volatile
 28430                           
 28431                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 28432  01965E  0E04               	movlw	4
 28433  019660  6FF3               	movwf	243,b	;volatile
 28434                           
 28435                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 28436  019662  0E02               	movlw	2
 28437  019664  6FF4               	movwf	244,b	;volatile
 28438                           
 28439                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 28440  019666  0E03               	movlw	3
 28441  019668  6FF7               	movwf	247,b	;volatile
 28442  01966A  9ED2               	bcf	16338,7,c	;# 
 28443  01966C  0139               	banksel	14831	;# 
 28444  01966E  0E55               	movlw	85	;# 
 28445  019670  6FEF               	movwf	14831,b	;# 
 28446  019672  0EAA               	movlw	170	;# 
 28447  019674  6FEF               	movwf	14831,b	;# 
 28448  019676  81EF               	bsf	14831,0,b	;# 
 28449  019678  8ED2               	bsf	16338,7,c	;# 
 28450                           
 28451                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 28452  01967A  013B               	movlb	59	; () banked
 28453  01967C  6BFC               	clrf	252,b	;volatile
 28454                           
 28455                           ; BSR set to: 59
 28456                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28457  01967E  0012               	return		;funcret
 28458  019680                     __end_of_DMA1_Initialize:
 28459                           	opt callstack 0
 28460                           
 28461 ;; *************** function _CLKREF_Initialize *****************
 28462 ;; Defined at:
 28463 ;;		line 58 in file "mcc_generated_files/clkref.c"
 28464 ;; Parameters:    Size  Location     Type
 28465 ;;		None
 28466 ;; Auto vars:     Size  Location     Type
 28467 ;;		None
 28468 ;; Return value:  Size  Location     Type
 28469 ;;                  1  [STACK] void 
 28470 ;; Registers used:
 28471 ;;		wreg, status,2
 28472 ;; Tracked objects:
 28473 ;;		On entry : 3F/3B
 28474 ;;		On exit  : 3F/3C
 28475 ;;		Unchanged: 0/0
 28476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28481 ;;Total ram usage:        0 bytes
 28482 ;; Hardware stack levels used:    1
 28483 ;; Hardware stack levels required when called:   15
 28484 ;; This function calls:
 28485 ;;		Nothing
 28486 ;; This function is called by:
 28487 ;;		_SYSTEM_Initialize
 28488 ;; This function uses a reentrant model
 28489 ;;
 28490                           
 28491                           	psect	text125
 28492  01A826                     __ptext125:
 28493                           	opt callstack 0
 28494  01A826                     _CLKREF_Initialize:
 28495                           	opt callstack 14
 28496                           
 28497                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 28498                           
 28499                           ; BSR set to: 59
 28500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28501                           ;incstack = 0
 28502  01A826  013C               	movlb	60	; () banked
 28503  01A828  6BE6               	clrf	230,b	;volatile
 28504                           
 28505                           ; BSR set to: 60
 28506                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 28507  01A82A  0E94               	movlw	148
 28508  01A82C  6FE5               	movwf	229,b	;volatile
 28509                           
 28510                           ; BSR set to: 60
 28511                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28512  01A82E  0012               	return		;funcret
 28513  01A830                     __end_of_CLKREF_Initialize:
 28514                           	opt callstack 0
 28515                           
 28516 ;; *************** function _ADCC_Initialize *****************
 28517 ;; Defined at:
 28518 ;;		line 65 in file "mcc_generated_files/adcc.c"
 28519 ;; Parameters:    Size  Location     Type
 28520 ;;		None
 28521 ;; Auto vars:     Size  Location     Type
 28522 ;;		None
 28523 ;; Return value:  Size  Location     Type
 28524 ;;                  1  [STACK] void 
 28525 ;; Registers used:
 28526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28527 ;; Tracked objects:
 28528 ;;		On entry : 3F/3E
 28529 ;;		On exit  : 0/0
 28530 ;;		Unchanged: 0/0
 28531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28536 ;;Total ram usage:        0 bytes
 28537 ;; Hardware stack levels used:    1
 28538 ;; Hardware stack levels required when called:   16
 28539 ;; This function calls:
 28540 ;;		_ADCC_SetADIInterruptHandler
 28541 ;;		_ADCC_SetADTIInterruptHandler
 28542 ;; This function is called by:
 28543 ;;		_SYSTEM_Initialize
 28544 ;; This function uses a reentrant model
 28545 ;;
 28546                           
 28547                           	psect	text126
 28548  019680                     __ptext126:
 28549                           	opt callstack 0
 28550  019680                     _ADCC_Initialize:
 28551                           	opt callstack 13
 28552                           
 28553                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 28554                           
 28555                           ; BSR set to: 60
 28556                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28557                           ;incstack = 0
 28558  019680  013E               	movlb	62	; () banked
 28559  019682  6BDE               	clrf	222,b	;volatile
 28560                           
 28561                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 28562  019684  6BDF               	clrf	223,b	;volatile
 28563                           
 28564                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 28565  019686  6BE0               	clrf	224,b	;volatile
 28566                           
 28567                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 28568  019688  6BE1               	clrf	225,b	;volatile
 28569                           
 28570                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 28571  01968A  6BE4               	clrf	228,b	;volatile
 28572                           
 28573                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 28574  01968C  6BE5               	clrf	229,b	;volatile
 28575                           
 28576                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 28577  01968E  6BEA               	clrf	234,b	;volatile
 28578                           
 28579                           ; BSR set to: 62
 28580                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 28581  019690  0E40               	movlw	64
 28582  019692  6FEC               	movwf	236,b	;volatile
 28583                           
 28584                           ; BSR set to: 62
 28585                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 28586  019694  6BF1               	clrf	241,b	;volatile
 28587                           
 28588                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 28589  019696  0E20               	movlw	32
 28590  019698  6FF3               	movwf	243,b	;volatile
 28591                           
 28592                           ; BSR set to: 62
 28593                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 28594  01969A  6BF4               	clrf	244,b	;volatile
 28595                           
 28596                           ; BSR set to: 62
 28597                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 28598  01969C  6BF5               	clrf	245,b	;volatile
 28599                           
 28600                           ; BSR set to: 62
 28601                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 28602  01969E  6BF6               	clrf	246,b	;volatile
 28603                           
 28604                           ; BSR set to: 62
 28605                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 28606  0196A0  6BF7               	clrf	247,b	;volatile
 28607                           
 28608                           ; BSR set to: 62
 28609                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 28610  0196A2  6BF9               	clrf	249,b	;volatile
 28611                           
 28612                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 28613  0196A4  0E5B               	movlw	91
 28614  0196A6  6FFA               	movwf	250,b	;volatile
 28615                           
 28616                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 28617  0196A8  0E27               	movlw	39
 28618  0196AA  6FFB               	movwf	251,b	;volatile
 28619                           
 28620                           ; BSR set to: 62
 28621                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 28622  0196AC  6BFC               	clrf	252,b	;volatile
 28623                           
 28624                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 28625  0196AE  0E02               	movlw	2
 28626  0196B0  6FFD               	movwf	253,b	;volatile
 28627                           
 28628                           ; BSR set to: 62
 28629                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 28630  0196B2  6BFE               	clrf	254,b	;volatile
 28631                           
 28632                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 28633  0196B4  0E07               	movlw	7
 28634  0196B6  6FFF               	movwf	255,b	;volatile
 28635                           
 28636                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 28637  0196B8  0E84               	movlw	132
 28638  0196BA  6FF8               	movwf	248,b	;volatile
 28639                           
 28640                           ; BSR set to: 62
 28641                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 28642  0196BC  0139               	movlb	57	; () banked
 28643  0196BE  95A1               	bcf	161,2,b	;volatile
 28644                           
 28645                           ; BSR set to: 57
 28646                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 28647  0196C0  8591               	bsf	145,2,b	;volatile
 28648                           
 28649                           ; BSR set to: 57
 28650                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 28651  0196C2  0EAC               	movlw	low _ADCC_DefaultInterruptHandler
 28652  0196C4  6EE6               	movwf	postinc1,c
 28653  0196C6  0EA8               	movlw	high _ADCC_DefaultInterruptHandler
 28654  0196C8  6EE6               	movwf	postinc1,c
 28655  0196CA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 28656  0196CC  6EE6               	movwf	postinc1,c
 28657  0196CE  EC2D  F0D2         	call	_ADCC_SetADIInterruptHandler	;wreg free
 28658                           
 28659                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 28660  0196D2  0139               	movlb	57	; () banked
 28661  0196D4  97A1               	bcf	161,3,b	;volatile
 28662                           
 28663                           ; BSR set to: 57
 28664                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 28665  0196D6  8791               	bsf	145,3,b	;volatile
 28666                           
 28667                           ; BSR set to: 57
 28668                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 28669  0196D8  0EAC               	movlw	low _ADCC_DefaultInterruptHandler
 28670  0196DA  6EE6               	movwf	postinc1,c
 28671  0196DC  0EA8               	movlw	high _ADCC_DefaultInterruptHandler
 28672  0196DE  6EE6               	movwf	postinc1,c
 28673  0196E0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 28674  0196E2  6EE6               	movwf	postinc1,c
 28675  0196E4  EC19  F0D2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 28676                           
 28677                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28678  0196E8  0012               	return		;funcret
 28679  0196EA                     __end_of_ADCC_Initialize:
 28680                           	opt callstack 0
 28681                           
 28682 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 28683 ;; Defined at:
 28684 ;;		line 336 in file "mcc_generated_files/adcc.c"
 28685 ;; Parameters:    Size  Location     Type
 28686 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28687 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 28688 ;; Auto vars:     Size  Location     Type
 28689 ;;		None
 28690 ;; Return value:  Size  Location     Type
 28691 ;;                  1  [STACK] void 
 28692 ;; Registers used:
 28693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28694 ;; Tracked objects:
 28695 ;;		On entry : 0/0
 28696 ;;		On exit  : 0/0
 28697 ;;		Unchanged: 0/0
 28698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28703 ;;Total ram usage:        0 bytes
 28704 ;; Hardware stack levels used:    1
 28705 ;; Hardware stack levels required when called:   15
 28706 ;; This function calls:
 28707 ;;		Nothing
 28708 ;; This function is called by:
 28709 ;;		_ADCC_Initialize
 28710 ;;		_start_adc_scan
 28711 ;; This function uses a reentrant model
 28712 ;;
 28713                           
 28714                           	psect	text127
 28715  01A432                     __ptext127:
 28716                           	opt callstack 0
 28717  01A432                     _ADCC_SetADTIInterruptHandler:
 28718                           	opt callstack 14
 28719                           
 28720                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 28721                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28722                           
 28723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28724                           ;incstack = 0
 28725  01A432  50E1               	movf	fsr1l,w,c
 28726  01A434  0FFD               	addlw	-3
 28727  01A436  6ED9               	movwf	fsr2l,c
 28728  01A438  50E2               	movf	fsr1h,w,c
 28729  01A43A  6EDA               	movwf	fsr2h,c
 28730  01A43C  0EFF               	movlw	255
 28731  01A43E  22DA               	addwfc	fsr2h,f,c
 28732  01A440  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 28733  01A446  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 28734  01A44C  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 28735                           
 28736                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 28737  01A452  52E5               	movf	postdec1,f,c
 28738  01A454  52E5               	movf	postdec1,f,c
 28739  01A456  52E5               	movf	postdec1,f,c
 28740  01A458  0012               	return		;funcret
 28741  01A45A                     __end_of_ADCC_SetADTIInterruptHandler:
 28742                           	opt callstack 0
 28743                           
 28744 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 28745 ;; Defined at:
 28746 ;;		line 323 in file "mcc_generated_files/adcc.c"
 28747 ;; Parameters:    Size  Location     Type
 28748 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28749 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 28750 ;; Auto vars:     Size  Location     Type
 28751 ;;		None
 28752 ;; Return value:  Size  Location     Type
 28753 ;;                  1  [STACK] void 
 28754 ;; Registers used:
 28755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28756 ;; Tracked objects:
 28757 ;;		On entry : 6/0
 28758 ;;		On exit  : 0/0
 28759 ;;		Unchanged: 0/0
 28760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28765 ;;Total ram usage:        0 bytes
 28766 ;; Hardware stack levels used:    1
 28767 ;; Hardware stack levels required when called:   15
 28768 ;; This function calls:
 28769 ;;		Nothing
 28770 ;; This function is called by:
 28771 ;;		_ADCC_Initialize
 28772 ;;		_start_adc_scan
 28773 ;; This function uses a reentrant model
 28774 ;;
 28775                           
 28776                           	psect	text128
 28777  01A45A                     __ptext128:
 28778                           	opt callstack 0
 28779  01A45A                     _ADCC_SetADIInterruptHandler:
 28780                           	opt callstack 14
 28781                           
 28782                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 28783                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28784                           
 28785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28786                           ;incstack = 0
 28787  01A45A  50E1               	movf	fsr1l,w,c
 28788  01A45C  0FFD               	addlw	-3
 28789  01A45E  6ED9               	movwf	fsr2l,c
 28790  01A460  50E2               	movf	fsr1h,w,c
 28791  01A462  6EDA               	movwf	fsr2h,c
 28792  01A464  0EFF               	movlw	255
 28793  01A466  22DA               	addwfc	fsr2h,f,c
 28794  01A468  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 28795  01A46E  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 28796  01A474  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 28797                           
 28798                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28799  01A47A  52E5               	movf	postdec1,f,c
 28800  01A47C  52E5               	movf	postdec1,f,c
 28801  01A47E  52E5               	movf	postdec1,f,c
 28802  01A480  0012               	return		;funcret
 28803  01A482                     __end_of_ADCC_SetADIInterruptHandler:
 28804                           	opt callstack 0
 28805                           
 28806 ;; *************** function _INT1_ISR *****************
 28807 ;; Defined at:
 28808 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 28809 ;; Parameters:    Size  Location     Type
 28810 ;;		None
 28811 ;; Auto vars:     Size  Location     Type
 28812 ;;		None
 28813 ;; Return value:  Size  Location     Type
 28814 ;;                  1    wreg      void 
 28815 ;; Registers used:
 28816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 28817 ;; Tracked objects:
 28818 ;;		On entry : 0/0
 28819 ;;		On exit  : 0/0
 28820 ;;		Unchanged: 0/0
 28821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28824 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28825 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28826 ;;Total ram usage:        4 bytes
 28827 ;; Hardware stack levels used:    1
 28828 ;; Hardware stack levels required when called:    5
 28829 ;; This function calls:
 28830 ;;		_INT1_CallBack
 28831 ;; This function is called by:
 28832 ;;		Interrupt level 1
 28833 ;; This function uses a non-reentrant model
 28834 ;;
 28835                           
 28836                           	psect	text129
 28837  019F0C                     __ptext129:
 28838                           	opt callstack 0
 28839  019F0C                     _INT1_ISR:
 28840                           	opt callstack 12
 28841                           
 28842                           ;incstack = 0
 28843  019F0C  006F FF60  F03E    	movff	status,??_INT1_ISR
 28844  019F12  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 28845  019F18  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 28846  019F1E  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 28847  019F24  EE16  F061         	lfsr	1,___intlo_sp
 28848                           
 28849                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 28850  019F28  0139               	movlb	57	; () banked
 28851  019F2A  91A5               	bcf	165,0,b	;volatile
 28852                           
 28853                           ; BSR set to: 57
 28854                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 28855  019F2C  ECA2  F0D2         	call	_INT1_CallBack	;wreg free
 28856  019F30  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 28857  019F36  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 28858  019F3C  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 28859  019F42  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 28860  019F48  0011               	retfie		f
 28861  019F4A                     __end_of_INT1_ISR:
 28862                           	opt callstack 0
 28863                           
 28864 ;; *************** function _INT1_CallBack *****************
 28865 ;; Defined at:
 28866 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 28867 ;; Parameters:    Size  Location     Type
 28868 ;;		None
 28869 ;; Auto vars:     Size  Location     Type
 28870 ;;		None
 28871 ;; Return value:  Size  Location     Type
 28872 ;;                  1  [STACK] void 
 28873 ;; Registers used:
 28874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 28875 ;; Tracked objects:
 28876 ;;		On entry : 3F/39
 28877 ;;		On exit  : 0/0
 28878 ;;		Unchanged: 0/0
 28879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28884 ;;Total ram usage:        0 bytes
 28885 ;; Hardware stack levels used:    1
 28886 ;; Hardware stack levels required when called:    4
 28887 ;; This function calls:
 28888 ;;		Absolute function
 28889 ;;		_INT1_DefaultInterruptHandler
 28890 ;;		_switch_handler
 28891 ;; This function is called by:
 28892 ;;		_INT1_ISR
 28893 ;; This function uses a reentrant model
 28894 ;;
 28895                           
 28896                           	psect	text130
 28897  01A544                     __ptext130:
 28898                           	opt callstack 0
 28899  01A544                     _INT1_CallBack:
 28900                           	opt callstack 12
 28901                           
 28902                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 28903                           
 28904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28905                           ;incstack = 0
 28906  01A544  0100               	movlb	0	; () banked
 28907  01A546  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 28908  01A548  11C2               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 28909  01A54A  11C3               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 28910  01A54C  B4D8               	btfsc	status,2,c
 28911  01A54E  0012               	return	
 28912                           
 28913                           ; BSR set to: 0
 28914                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 28915  01A550  D801               	call	u929_28
 28916  01A552  0012               	return	
 28917  01A554                     u929_28:
 28918  01A554  0005               	push	
 28919  01A556  6EFA               	movwf	pclath,c
 28920  01A558  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 28921  01A55A  6EFD               	movwf	tosl,c
 28922  01A55C  51C2               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 28923  01A55E  6EFE               	movwf	tosh,c
 28924  01A560  51C3               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 28925  01A562  6EFF               	movwf	tosu,c
 28926  01A564  50FA               	movf	pclath,w,c
 28927  01A566  0012               	return		;indir
 28928  01A568                     __end_of_INT1_CallBack:
 28929                           	opt callstack 0
 28930                           
 28931 ;; *************** function _INT1_DefaultInterruptHandler *****************
 28932 ;; Defined at:
 28933 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 28934 ;; Parameters:    Size  Location     Type
 28935 ;;		None
 28936 ;; Auto vars:     Size  Location     Type
 28937 ;;		None
 28938 ;; Return value:  Size  Location     Type
 28939 ;;                  1  [STACK] void 
 28940 ;; Registers used:
 28941 ;;		None
 28942 ;; Tracked objects:
 28943 ;;		On entry : 3F/0
 28944 ;;		On exit  : 0/0
 28945 ;;		Unchanged: 0/0
 28946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28951 ;;Total ram usage:        0 bytes
 28952 ;; Hardware stack levels used:    1
 28953 ;; Hardware stack levels required when called:    3
 28954 ;; This function calls:
 28955 ;;		Nothing
 28956 ;; This function is called by:
 28957 ;;		_EXT_INT_Initialize
 28958 ;;		_INT1_CallBack
 28959 ;; This function uses a reentrant model
 28960 ;;
 28961                           
 28962                           	psect	text131
 28963  01A8A6                     __ptext131:
 28964                           	opt callstack 0
 28965  01A8A6                     _INT1_DefaultInterruptHandler:
 28966                           	opt callstack 12
 28967                           
 28968                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28969                           
 28970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28971                           ;incstack = 0
 28972  01A8A6  0012               	return		;funcret
 28973  01A8A8                     __end_of_INT1_DefaultInterruptHandler:
 28974                           	opt callstack 0
 28975                           
 28976 ;; *************** function _switch_handler *****************
 28977 ;; Defined at:
 28978 ;;		line 58 in file "dio.c"
 28979 ;; Parameters:    Size  Location     Type
 28980 ;;		None
 28981 ;; Auto vars:     Size  Location     Type
 28982 ;;  i               1  [STACK] unsigned char 
 28983 ;;  sw_value        1  [STACK] unsigned char 
 28984 ;; Return value:  Size  Location     Type
 28985 ;;                  1  [STACK] void 
 28986 ;; Registers used:
 28987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 28988 ;; Tracked objects:
 28989 ;;		On entry : 3F/0
 28990 ;;		On exit  : 0/0
 28991 ;;		Unchanged: 0/0
 28992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28997 ;;Total ram usage:        0 bytes
 28998 ;; Hardware stack levels used:    1
 28999 ;; Hardware stack levels required when called:    3
 29000 ;; This function calls:
 29001 ;;		Nothing
 29002 ;; This function is called by:
 29003 ;;		_start_switch_handler
 29004 ;;		_INT1_CallBack
 29005 ;; This function uses a reentrant model
 29006 ;;
 29007                           
 29008                           	psect	text132
 29009  018116                     __ptext132:
 29010                           	opt callstack 0
 29011  018116                     _switch_handler:
 29012                           	opt callstack 0
 29013                           
 29014                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29015  018116  52E6               	movf	postinc1,f,c
 29016  018118  52E6               	movf	postinc1,f,c
 29017                           
 29018                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 29019                           ;stkvar	_i @ sp[(-2)+0]
 29020                           
 29021                           ;incstack = 0
 29022  01811A  0EFE               	movlw	-2
 29023  01811C  6AE3               	clrf	plusw1,c
 29024  01811E  9EBD               	bcf	189,7,c	;volatile
 29025                           
 29026                           ;dio.c: 72:  __nop();
 29027  018120  F000               	nop	
 29028                           
 29029                           ;dio.c: 73:  __nop();
 29030  018122  F000               	nop	
 29031                           
 29032                           ;dio.c: 74:  __nop();
 29033  018124  F000               	nop	
 29034  018126  D019               	goto	l9805
 29035  018128                     l9793:
 29036                           
 29037                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 29038  018128  A6CF               	btfss	207,3,c	;volatile
 29039  01812A  D011               	goto	u907_20
 29040  01812C  D00D               	goto	u907_21
 29041  01812E                     u904_28:
 29042                           
 29043                           ;stkvar	_sw_value @ sp[(-2)+1]
 29044  01812E  0EFF               	movlw	-1
 29045  018130  0060  F033  FFE3   	movff	btemp+11,plusw1
 29046                           
 29047                           ;dio.c: 80:    break;
 29048  018136  D027               	goto	l9807
 29049  018138                     l9795:
 29050                           
 29051                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 29052  018138  A4CF               	btfss	207,2,c	;volatile
 29053  01813A  D009               	goto	u907_20
 29054  01813C  D005               	goto	u907_21
 29055  01813E                     l9797:
 29056                           
 29057                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 29058  01813E  A2CF               	btfss	207,1,c	;volatile
 29059  018140  D006               	goto	u907_20
 29060  018142  D002               	goto	u907_21
 29061  018144                     l9799:
 29062                           
 29063                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 29064  018144  A0CF               	btfss	207,0,c	;volatile
 29065  018146  D003               	goto	u907_20
 29066  018148                     u907_21:
 29067  018148  6A0C               	clrf	(btemp+11)^0,c
 29068  01814A  2A0C               	incf	(btemp+11)^0,f,c
 29069  01814C  D7F0               	goto	u904_28
 29070  01814E                     u907_20:
 29071  01814E  6A0C               	clrf	(btemp+11)^0,c
 29072  018150  D7EE               	goto	u904_28
 29073  018152                     l9801:
 29074                           
 29075                           ;dio.c: 91:    sw_value = 1;
 29076                           ;stkvar	_sw_value @ sp[(-2)+1]
 29077  018152  0EFF               	movlw	-1
 29078  018154  6AE3               	clrf	plusw1,c
 29079  018156  2AE3               	incf	plusw1,f,c
 29080                           
 29081                           ;dio.c: 92:    break;
 29082  018158  D016               	goto	l9807
 29083  01815A                     l9805:
 29084                           
 29085                           ;stkvar	_i @ sp[(-2)+0]
 29086  01815A  0EFE               	movlw	-2
 29087  01815C  50E3               	movf	plusw1,w,c
 29088  01815E  6E0B               	movwf	(btemp+10)^0,c
 29089  018160  6A0C               	clrf	(btemp+11)^0,c
 29090                           
 29091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29092                           ; Switch size 1, requested type "simple"
 29093                           ; Number of cases is 1, Range of values is 0 to 0
 29094                           ; switch strategies available:
 29095                           ; Name         Instructions Cycles
 29096                           ; simple_byte            4     3 (average)
 29097                           ;	Chosen strategy is simple_byte
 29098  018162  500C               	movf	(btemp+11)^0,w,c
 29099  018164  0A00               	xorlw	0	; case 0
 29100  018166  A4D8               	btfss	status,2,c
 29101  018168  D7F4               	goto	l9801
 29102                           
 29103                           ; Switch size 1, requested type "simple"
 29104                           ; Number of cases is 4, Range of values is 0 to 3
 29105                           ; switch strategies available:
 29106                           ; Name         Instructions Cycles
 29107                           ; simple_byte           13     7 (average)
 29108                           ;	Chosen strategy is simple_byte
 29109  01816A  500B               	movf	(btemp+10)^0,w,c
 29110  01816C  0A00               	xorlw	0	; case 0
 29111  01816E  B4D8               	btfsc	status,2,c
 29112  018170  D7E9               	goto	l9799
 29113  018172  0A01               	xorlw	1	; case 1
 29114  018174  B4D8               	btfsc	status,2,c
 29115  018176  D7E3               	goto	l9797
 29116  018178  0A03               	xorlw	3	; case 2
 29117  01817A  B4D8               	btfsc	status,2,c
 29118  01817C  D7DD               	goto	l9795
 29119  01817E  0A01               	xorlw	1	; case 3
 29120  018180  B4D8               	btfsc	status,2,c
 29121  018182  D7D2               	goto	l9793
 29122  018184  D7E6               	goto	l9801
 29123  018186                     l9807:
 29124                           
 29125                           ;dio.c: 96:   if (sw_value) {
 29126                           ;stkvar	_sw_value @ sp[(-2)+1]
 29127  018186  0EFF               	movlw	-1
 29128  018188  50E3               	movf	plusw1,w,c
 29129  01818A  B4D8               	btfsc	status,2,c
 29130  01818C  D014               	goto	l9813
 29131                           
 29132                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 29133                           ;stkvar	_i @ sp[(-2)+0]
 29134  01818E  0EFE               	movlw	-2
 29135  018190  50E3               	movf	plusw1,w,c
 29136  018192  0D05               	mullw	5
 29137  018194  50F3               	movf	243,w,c
 29138  018196  0F60               	addlw	low _S
 29139  018198  6ED9               	movwf	fsr2l,c
 29140  01819A  6ADA               	clrf	fsr2h,c
 29141  01819C  04DE               	decf	postinc2,w,c
 29142  01819E  A4D8               	btfss	status,2,c
 29143  0181A0  D041               	goto	l9821
 29144                           
 29145                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 29146                           ;stkvar	_i @ sp[(-2)+0]
 29147  0181A2  0EFE               	movlw	-2
 29148  0181A4  50E3               	movf	plusw1,w,c
 29149  0181A6  0D05               	mullw	5
 29150  0181A8  50F3               	movf	243,w,c
 29151  0181AA  0F60               	addlw	low _S
 29152  0181AC  6ED9               	movwf	fsr2l,c
 29153  0181AE  6ADA               	clrf	fsr2h,c
 29154  0181B0  0E00               	movlw	0
 29155  0181B2  6EDF               	movwf	indf2,c
 29156  0181B4  D037               	goto	l9821
 29157  0181B6                     l9813:
 29158                           
 29159                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 29160                           ;stkvar	_i @ sp[(-2)+0]
 29161  0181B6  0EFE               	movlw	-2
 29162  0181B8  50E3               	movf	plusw1,w,c
 29163  0181BA  0D05               	mullw	5
 29164  0181BC  50F3               	movf	243,w,c
 29165  0181BE  0F60               	addlw	low _S
 29166  0181C0  6ED9               	movwf	fsr2l,c
 29167  0181C2  6ADA               	clrf	fsr2h,c
 29168  0181C4  50DF               	movf	indf2,w,c
 29169  0181C6  A4D8               	btfss	status,2,c
 29170  0181C8  D02D               	goto	l9821
 29171                           
 29172                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 29173                           ;stkvar	_i @ sp[(-2)+0]
 29174  0181CA  0EFE               	movlw	-2
 29175  0181CC  50E3               	movf	plusw1,w,c
 29176  0181CE  0D05               	mullw	5
 29177  0181D0  50F3               	movf	243,w,c
 29178  0181D2  0F60               	addlw	low _S
 29179  0181D4  6ED9               	movwf	fsr2l,c
 29180  0181D6  6ADA               	clrf	fsr2h,c
 29181  0181D8  0E01               	movlw	1
 29182  0181DA  6EDF               	movwf	indf2,c
 29183                           
 29184                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 29185  0181DC  EE20  F2B8         	lfsr	2,_V+184	;volatile
 29186                           
 29187                           ;stkvar	_i @ sp[(-2)+0]
 29188  0181E0  0EFE               	movlw	-2
 29189  0181E2  50E3               	movf	plusw1,w,c
 29190  0181E4  0D05               	mullw	5
 29191  0181E6  50F3               	movf	243,w,c
 29192  0181E8  0F61               	addlw	low (_S+1)
 29193  0181EA  6EE9               	movwf	fsr0l,c
 29194  0181EC  6AEA               	clrf	fsr0h,c
 29195  0181EE  006F FF7B FFEE     	movff	postinc2,postinc0
 29196  0181F4  006F FF7B FFEE     	movff	postinc2,postinc0
 29197  0181FA  006F FF7B FFEE     	movff	postinc2,postinc0
 29198  018200  006F FF7B FFEE     	movff	postinc2,postinc0
 29199                           
 29200                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 29201                           ;stkvar	_i @ sp[(-2)+0]
 29202  018206  0EFE               	movlw	-2
 29203  018208  006F FF8C  F00C    	movff	plusw1,btemp+11
 29204  01820E  0E01               	movlw	1
 29205  018210  6E0B               	movwf	(btemp+10)^0,c
 29206  018212  2A0C               	incf	(btemp+11)^0,f,c
 29207  018214  D002               	goto	u911_24
 29208  018216                     u911_25:
 29209  018216  90D8               	bcf	status,0,c
 29210  018218  360B               	rlcf	(btemp+10)^0,f,c
 29211  01821A                     u911_24:
 29212  01821A  2E0C               	decfsz	(btemp+11)^0,f,c
 29213  01821C  D7FC               	goto	u911_25
 29214  01821E  500B               	movf	(btemp+10)^0,w,c
 29215  018220  0100               	movlb	0	; () banked
 29216  018222  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 29217  018224                     l9821:
 29218                           
 29219                           ;dio.c: 107:  } while (++i < 4);
 29220                           ;stkvar	_i @ sp[(-2)+0]
 29221  018224  0EFE               	movlw	-2
 29222  018226  2AE3               	incf	plusw1,f,c
 29223  018228  0EFE               	movlw	-2
 29224  01822A  006F FF8C  F001    	movff	plusw1,btemp
 29225  018230  0E03               	movlw	3
 29226  018232  6401               	cpfsgt	btemp^0,c
 29227  018234  D792               	goto	l9805
 29228                           
 29229                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 29230  018236  8EBD               	bsf	189,7,c	;volatile
 29231                           
 29232                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29233  018238  52E5               	movf	postdec1,f,c
 29234  01823A  52E5               	movf	postdec1,f,c
 29235  01823C  0012               	return		;funcret
 29236  01823E                     __end_of_switch_handler:
 29237                           	opt callstack 0
 29238                           
 29239 ;; *************** function _TMR5_ISR *****************
 29240 ;; Defined at:
 29241 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 29242 ;; Parameters:    Size  Location     Type
 29243 ;;		None
 29244 ;; Auto vars:     Size  Location     Type
 29245 ;;		None
 29246 ;; Return value:  Size  Location     Type
 29247 ;;                  1    wreg      void 
 29248 ;; Registers used:
 29249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 29250 ;; Tracked objects:
 29251 ;;		On entry : 0/0
 29252 ;;		On exit  : 0/0
 29253 ;;		Unchanged: 0/0
 29254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29257 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29259 ;;Total ram usage:        4 bytes
 29260 ;; Hardware stack levels used:    1
 29261 ;; Hardware stack levels required when called:    5
 29262 ;; This function calls:
 29263 ;;		_TMR5_CallBack
 29264 ;;		_TMR5_WriteTimer
 29265 ;; This function is called by:
 29266 ;;		Interrupt level 1
 29267 ;; This function uses a non-reentrant model
 29268 ;;
 29269                           
 29270                           	psect	text133
 29271  0199F8                     __ptext133:
 29272                           	opt callstack 0
 29273  0199F8                     _TMR5_ISR:
 29274                           	opt callstack 12
 29275                           
 29276                           ;incstack = 0
 29277  0199F8  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 29278  0199FE  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 29279  019A04  EE16  F061         	lfsr	1,___intlo_sp
 29280                           
 29281                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 29282  019A08  0139               	movlb	57	; () banked
 29283  019A0A  9DA8               	bcf	168,6,b	;volatile
 29284                           
 29285                           ; BSR set to: 57
 29286                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 29287  019A0C  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 29288  019A12  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 29289  019A18  EC46  F0CF         	call	_TMR5_WriteTimer	;wreg free
 29290                           
 29291                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 29292  019A1C  0102               	movlb	2	; () banked
 29293  019A1E  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 29294  019A20  6E42               	movwf	??_TMR5_ISR^0,c
 29295  019A22  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 29296  019A24  0E05               	movlw	5
 29297  019A26  2642               	addwf	??_TMR5_ISR^0,f,c
 29298  019A28  0E00               	movlw	0
 29299  019A2A  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 29300  019A2C  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 29301  019A2E  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 29302  019A30  5042               	movf	??_TMR5_ISR^0,w,c
 29303  019A32  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 29304  019A34  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 29305  019A36  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 29306  019A38  A0D8               	btfss	status,0,c
 29307  019A3A  D004               	goto	i1l1017
 29308                           
 29309                           ; BSR set to: 2
 29310                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 29311  019A3C  ECB4  F0D2         	call	_TMR5_CallBack	;wreg free
 29312                           
 29313                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 29314  019A40  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 29315  019A42  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 29316  019A44                     i1l1017:
 29317  019A44  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 29318  019A4A  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 29319  019A50  0011               	retfie		f
 29320  019A52                     __end_of_TMR5_ISR:
 29321                           	opt callstack 0
 29322                           
 29323 ;; *************** function _TMR5_WriteTimer *****************
 29324 ;; Defined at:
 29325 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 29326 ;; Parameters:    Size  Location     Type
 29327 ;;  timerVal        2  [STACK] unsigned short 
 29328 ;; Auto vars:     Size  Location     Type
 29329 ;;		None
 29330 ;; Return value:  Size  Location     Type
 29331 ;;                  1  [STACK] void 
 29332 ;; Registers used:
 29333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29334 ;; Tracked objects:
 29335 ;;		On entry : 3F/39
 29336 ;;		On exit  : 0/0
 29337 ;;		Unchanged: 0/0
 29338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29343 ;;Total ram usage:        0 bytes
 29344 ;; Hardware stack levels used:    1
 29345 ;; Hardware stack levels required when called:    3
 29346 ;; This function calls:
 29347 ;;		Nothing
 29348 ;; This function is called by:
 29349 ;;		_TMR5_ISR
 29350 ;; This function uses a reentrant model
 29351 ;;
 29352                           
 29353                           	psect	text134
 29354  019E8C                     __ptext134:
 29355                           	opt callstack 0
 29356  019E8C                     _TMR5_WriteTimer:
 29357                           	opt callstack 13
 29358                           
 29359                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 29360                           
 29361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29362                           ;incstack = 0
 29363  019E8C  A49A               	btfss	154,2,c	;volatile
 29364  019E8E  D00F               	goto	l9987
 29365                           
 29366                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 29367  019E90  909A               	bcf	154,0,c	;volatile
 29368                           
 29369                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 29370                           ;stkvar	_timerVal @ sp[(0)+-2]
 29371  019E92  0EFF               	movlw	255
 29372  019E94  24E1               	addwf	fsr1l,w,c
 29373  019E96  6ED9               	movwf	fsr2l,c
 29374  019E98  0EFF               	movlw	255
 29375  019E9A  20E2               	addwfc	fsr1h,w,c
 29376  019E9C  6EDA               	movwf	fsr2h,c
 29377  019E9E  50DF               	movf	indf2,w,c
 29378  019EA0  6E99               	movwf	153,c	;volatile
 29379                           
 29380                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 29381                           ;stkvar	_timerVal @ sp[(0)+-2]
 29382  019EA2  0EFE               	movlw	-2
 29383  019EA4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29384                           
 29385                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 29386  019EAA  809A               	bsf	154,0,c	;volatile
 29387                           
 29388                           ;mcc_generated_files/tmr5.c: 142:  } else {
 29389  019EAC  D00C               	goto	l1000
 29390  019EAE                     l9987:
 29391                           
 29392                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 29393                           ;stkvar	_timerVal @ sp[(0)+-2]
 29394  019EAE  0EFF               	movlw	255
 29395  019EB0  24E1               	addwf	fsr1l,w,c
 29396  019EB2  6ED9               	movwf	fsr2l,c
 29397  019EB4  0EFF               	movlw	255
 29398  019EB6  20E2               	addwfc	fsr1h,w,c
 29399  019EB8  6EDA               	movwf	fsr2h,c
 29400  019EBA  50DF               	movf	indf2,w,c
 29401  019EBC  6E99               	movwf	153,c	;volatile
 29402                           
 29403                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 29404                           ;stkvar	_timerVal @ sp[(0)+-2]
 29405  019EBE  0EFE               	movlw	-2
 29406  019EC0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29407  019EC6                     l1000:
 29408                           
 29409                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29410  019EC6  52E5               	movf	postdec1,f,c
 29411  019EC8  52E5               	movf	postdec1,f,c
 29412  019ECA  0012               	return		;funcret
 29413  019ECC                     __end_of_TMR5_WriteTimer:
 29414                           	opt callstack 0
 29415                           
 29416 ;; *************** function _TMR5_CallBack *****************
 29417 ;; Defined at:
 29418 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 29419 ;; Parameters:    Size  Location     Type
 29420 ;;		None
 29421 ;; Auto vars:     Size  Location     Type
 29422 ;;		None
 29423 ;; Return value:  Size  Location     Type
 29424 ;;                  1  [STACK] void 
 29425 ;; Registers used:
 29426 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 29427 ;; Tracked objects:
 29428 ;;		On entry : 3F/2
 29429 ;;		On exit  : 0/0
 29430 ;;		Unchanged: 0/0
 29431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29436 ;;Total ram usage:        0 bytes
 29437 ;; Hardware stack levels used:    1
 29438 ;; Hardware stack levels required when called:    4
 29439 ;; This function calls:
 29440 ;;		Absolute function
 29441 ;;		_TMR5_DefaultInterruptHandler
 29442 ;; This function is called by:
 29443 ;;		_TMR5_ISR
 29444 ;; This function uses a reentrant model
 29445 ;;
 29446                           
 29447                           	psect	text135
 29448  01A568                     __ptext135:
 29449                           	opt callstack 0
 29450  01A568                     _TMR5_CallBack:
 29451                           	opt callstack 12
 29452                           
 29453                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 29454                           
 29455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29456                           ;incstack = 0
 29457  01A568  0100               	movlb	0	; () banked
 29458  01A56A  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 29459  01A56C  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 29460  01A56E  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 29461  01A570  B4D8               	btfsc	status,2,c
 29462  01A572  0012               	return	
 29463                           
 29464                           ; BSR set to: 0
 29465                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 29466  01A574  D801               	call	u938_28
 29467  01A576  0012               	return	
 29468  01A578                     u938_28:
 29469  01A578  0005               	push	
 29470  01A57A  6EFA               	movwf	pclath,c
 29471  01A57C  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 29472  01A57E  6EFD               	movwf	tosl,c
 29473  01A580  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 29474  01A582  6EFE               	movwf	tosh,c
 29475  01A584  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 29476  01A586  6EFF               	movwf	tosu,c
 29477  01A588  50FA               	movf	pclath,w,c
 29478  01A58A  0012               	return		;indir
 29479  01A58C                     __end_of_TMR5_CallBack:
 29480                           	opt callstack 0
 29481                           
 29482 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 29483 ;; Defined at:
 29484 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 29485 ;; Parameters:    Size  Location     Type
 29486 ;;		None
 29487 ;; Auto vars:     Size  Location     Type
 29488 ;;		None
 29489 ;; Return value:  Size  Location     Type
 29490 ;;                  1  [STACK] void 
 29491 ;; Registers used:
 29492 ;;		wreg, status,2, status,0, btemp+11
 29493 ;; Tracked objects:
 29494 ;;		On entry : 3F/0
 29495 ;;		On exit  : 3F/2
 29496 ;;		Unchanged: 0/0
 29497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29502 ;;Total ram usage:        0 bytes
 29503 ;; Hardware stack levels used:    1
 29504 ;; Hardware stack levels required when called:    3
 29505 ;; This function calls:
 29506 ;;		Nothing
 29507 ;; This function is called by:
 29508 ;;		_TMR5_Initialize
 29509 ;;		_TMR5_CallBack
 29510 ;; This function uses a reentrant model
 29511 ;;
 29512                           
 29513                           	psect	text136
 29514  01A056                     __ptext136:
 29515                           	opt callstack 0
 29516  01A056                     _TMR5_DefaultInterruptHandler:
 29517                           	opt callstack 12
 29518                           
 29519                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 29520                           
 29521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29522                           ;incstack = 0
 29523  01A056  A0BE               	btfss	190,0,c	;volatile
 29524  01A058  D002               	goto	u881_20
 29525  01A05A  0E01               	movlw	1
 29526  01A05C  D001               	goto	u881_26
 29527  01A05E                     u881_20:
 29528  01A05E  0E00               	movlw	0
 29529  01A060                     u881_26:
 29530  01A060  0AFF               	xorlw	255
 29531  01A062  6E0C               	movwf	(btemp+11)^0,c
 29532  01A064  50BE               	movf	190,w,c	;volatile
 29533  01A066  180C               	xorwf	(btemp+11)^0,w,c
 29534  01A068  0BFE               	andlw	-2
 29535  01A06A  180C               	xorwf	(btemp+11)^0,w,c
 29536  01A06C  6EBE               	movwf	190,c	;volatile
 29537                           
 29538                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 29539  01A06E  0E01               	movlw	1
 29540  01A070  0102               	movlb	2	; () banked
 29541  01A072  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 29542  01A074  0E00               	movlw	0
 29543  01A076  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 29544  01A078  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 29545  01A07A  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 29546                           
 29547                           ; BSR set to: 2
 29548                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 29549  01A07C  0E01               	movlw	1
 29550  01A07E  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 29551  01A080  0E00               	movlw	0
 29552  01A082  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 29553  01A084  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 29554  01A086  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 29555                           
 29556                           ; BSR set to: 2
 29557                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29558  01A088  0012               	return		;funcret
 29559  01A08A                     __end_of_TMR5_DefaultInterruptHandler:
 29560                           	opt callstack 0
 29561                           
 29562 ;; *************** function _TMR3_ISR *****************
 29563 ;; Defined at:
 29564 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 29565 ;; Parameters:    Size  Location     Type
 29566 ;;		None
 29567 ;; Auto vars:     Size  Location     Type
 29568 ;;		None
 29569 ;; Return value:  Size  Location     Type
 29570 ;;                  1    wreg      void 
 29571 ;; Registers used:
 29572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 29573 ;; Tracked objects:
 29574 ;;		On entry : 0/0
 29575 ;;		On exit  : 3F/0
 29576 ;;		Unchanged: 0/0
 29577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29580 ;;      Temps:          0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29581 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29582 ;;Total ram usage:       25 bytes
 29583 ;; Hardware stack levels used:    1
 29584 ;; Hardware stack levels required when called:   14
 29585 ;; This function calls:
 29586 ;;		_TMR3_CallBack
 29587 ;;		_TMR3_WriteTimer
 29588 ;; This function is called by:
 29589 ;;		Interrupt level 1
 29590 ;; This function uses a non-reentrant model
 29591 ;;
 29592                           
 29593                           	psect	text137
 29594  017BF8                     __ptext137:
 29595                           	opt callstack 0
 29596  017BF8                     _TMR3_ISR:
 29597                           	opt callstack 3
 29598                           
 29599                           ; BSR set to: 2
 29600                           ;incstack = 0
 29601  017BF8  006F FF60  F2BC    	movff	status,??_TMR3_ISR
 29602  017BFE  006F FFD8  F2BD    	movff	tblptrl,??_TMR3_ISR+1
 29603  017C04  006F FFDC  F2BE    	movff	tblptrh,??_TMR3_ISR+2
 29604  017C0A  006F FFE0  F2BF    	movff	tblptru,??_TMR3_ISR+3
 29605  017C10  006F FFD4  F2C0    	movff	tablat,??_TMR3_ISR+4
 29606  017C16  0060  F004  F2C1   	movff	btemp,??_TMR3_ISR+5
 29607  017C1C  0060  F008  F2C2   	movff	btemp+1,??_TMR3_ISR+6
 29608  017C22  0060  F00C  F2C3   	movff	btemp+2,??_TMR3_ISR+7
 29609  017C28  0060  F010  F2C4   	movff	btemp+3,??_TMR3_ISR+8
 29610  017C2E  0060  F014  F2C5   	movff	btemp+4,??_TMR3_ISR+9
 29611  017C34  0060  F018  F2C6   	movff	btemp+5,??_TMR3_ISR+10
 29612  017C3A  0060  F01C  F2C7   	movff	btemp+6,??_TMR3_ISR+11
 29613  017C40  0060  F020  F2C8   	movff	btemp+7,??_TMR3_ISR+12
 29614  017C46  0060  F024  F2C9   	movff	btemp+8,??_TMR3_ISR+13
 29615  017C4C  0060  F028  F2CA   	movff	btemp+9,??_TMR3_ISR+14
 29616  017C52  0060  F02C  F2CB   	movff	btemp+10,??_TMR3_ISR+15
 29617  017C58  0060  F030  F2CC   	movff	btemp+11,??_TMR3_ISR+16
 29618  017C5E  0060  F044  F2CD   	movff	btemp+16,??_TMR3_ISR+17
 29619  017C64  0060  F048  F2CE   	movff	btemp+17,??_TMR3_ISR+18
 29620  017C6A  0060  F04C  F2CF   	movff	btemp+18,??_TMR3_ISR+19
 29621  017C70  0060  F050  F2D0   	movff	btemp+19,??_TMR3_ISR+20
 29622  017C76  0060  F054  F2D1   	movff	btemp+20,??_TMR3_ISR+21
 29623  017C7C  0060  F058  F2D2   	movff	btemp+21,??_TMR3_ISR+22
 29624  017C82  0060  F05C  F2D3   	movff	btemp+22,??_TMR3_ISR+23
 29625  017C88  0060  F060  F2D4   	movff	btemp+23,??_TMR3_ISR+24
 29626  017C8E  EE16  F061         	lfsr	1,___intlo_sp
 29627                           
 29628                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 29629  017C92  0139               	movlb	57	; () banked
 29630  017C94  9DA6               	bcf	166,6,b	;volatile
 29631                           
 29632                           ; BSR set to: 57
 29633                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 29634  017C96  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 29635  017C9C  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 29636  017CA2  EC66  F0CF         	call	_TMR3_WriteTimer	;wreg free
 29637                           
 29638                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 29639  017CA6  0100               	movlb	0	; () banked
 29640  017CA8  4BC9               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 29641  017CAA  2BCA               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 29642  017CAC  51CA               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 29643  017CAE  E104               	bnz	i1u1183_20
 29644  017CB0  0E28               	movlw	40
 29645  017CB2  5DC9               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 29646  017CB4  A0D8               	btfss	status,0,c
 29647  017CB6  D005               	goto	i1l1205
 29648  017CB8                     i1u1183_20:
 29649                           
 29650                           ; BSR set to: 0
 29651                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 29652  017CB8  ECC6  F0D2         	call	_TMR3_CallBack	;wreg free
 29653                           
 29654                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 29655  017CBC  0100               	movlb	0	; () banked
 29656  017CBE  6BC9               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 29657  017CC0  6BCA               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 29658  017CC2                     i1l1205:
 29659                           
 29660                           ; BSR set to: 0
 29661  017CC2  0060  FB50  F018   	movff	??_TMR3_ISR+24,btemp+23
 29662  017CC8  0060  FB4C  F017   	movff	??_TMR3_ISR+23,btemp+22
 29663  017CCE  0060  FB48  F016   	movff	??_TMR3_ISR+22,btemp+21
 29664  017CD4  0060  FB44  F015   	movff	??_TMR3_ISR+21,btemp+20
 29665  017CDA  0060  FB40  F014   	movff	??_TMR3_ISR+20,btemp+19
 29666  017CE0  0060  FB3C  F013   	movff	??_TMR3_ISR+19,btemp+18
 29667  017CE6  0060  FB38  F012   	movff	??_TMR3_ISR+18,btemp+17
 29668  017CEC  0060  FB34  F011   	movff	??_TMR3_ISR+17,btemp+16
 29669  017CF2  0060  FB30  F00C   	movff	??_TMR3_ISR+16,btemp+11
 29670  017CF8  0060  FB2C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 29671  017CFE  0060  FB28  F00A   	movff	??_TMR3_ISR+14,btemp+9
 29672  017D04  0060  FB24  F009   	movff	??_TMR3_ISR+13,btemp+8
 29673  017D0A  0060  FB20  F008   	movff	??_TMR3_ISR+12,btemp+7
 29674  017D10  0060  FB1C  F007   	movff	??_TMR3_ISR+11,btemp+6
 29675  017D16  0060  FB18  F006   	movff	??_TMR3_ISR+10,btemp+5
 29676  017D1C  0060  FB14  F005   	movff	??_TMR3_ISR+9,btemp+4
 29677  017D22  0060  FB10  F004   	movff	??_TMR3_ISR+8,btemp+3
 29678  017D28  0060  FB0C  F003   	movff	??_TMR3_ISR+7,btemp+2
 29679  017D2E  0060  FB08  F002   	movff	??_TMR3_ISR+6,btemp+1
 29680  017D34  0060  FB04  F001   	movff	??_TMR3_ISR+5,btemp
 29681  017D3A  0060  FB03  FFF5   	movff	??_TMR3_ISR+4,tablat
 29682  017D40  0060  FAFF  FFF8   	movff	??_TMR3_ISR+3,tblptru
 29683  017D46  0060  FAFB  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 29684  017D4C  0060  FAF7  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 29685  017D52  0060  FAF3  FFD8   	movff	??_TMR3_ISR,status
 29686  017D58  0011               	retfie		f
 29687  017D5A                     __end_of_TMR3_ISR:
 29688                           	opt callstack 0
 29689                           
 29690 ;; *************** function _TMR3_WriteTimer *****************
 29691 ;; Defined at:
 29692 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 29693 ;; Parameters:    Size  Location     Type
 29694 ;;  timerVal        2  [STACK] unsigned short 
 29695 ;; Auto vars:     Size  Location     Type
 29696 ;;		None
 29697 ;; Return value:  Size  Location     Type
 29698 ;;                  1  [STACK] void 
 29699 ;; Registers used:
 29700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29701 ;; Tracked objects:
 29702 ;;		On entry : 3F/39
 29703 ;;		On exit  : 0/0
 29704 ;;		Unchanged: 0/0
 29705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29710 ;;Total ram usage:        0 bytes
 29711 ;; Hardware stack levels used:    1
 29712 ;; Hardware stack levels required when called:    3
 29713 ;; This function calls:
 29714 ;;		Nothing
 29715 ;; This function is called by:
 29716 ;;		_TMR3_ISR
 29717 ;; This function uses a reentrant model
 29718 ;;
 29719                           
 29720                           	psect	text138
 29721  019ECC                     __ptext138:
 29722                           	opt callstack 0
 29723  019ECC                     _TMR3_WriteTimer:
 29724                           	opt callstack 13
 29725                           
 29726                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 29727                           
 29728                           ; BSR set to: 0
 29729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29730                           ;incstack = 0
 29731  019ECC  A4A6               	btfss	166,2,c	;volatile
 29732  019ECE  D00F               	goto	l10005
 29733                           
 29734                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 29735  019ED0  90A6               	bcf	166,0,c	;volatile
 29736                           
 29737                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 29738                           ;stkvar	_timerVal @ sp[(0)+-2]
 29739  019ED2  0EFF               	movlw	255
 29740  019ED4  24E1               	addwf	fsr1l,w,c
 29741  019ED6  6ED9               	movwf	fsr2l,c
 29742  019ED8  0EFF               	movlw	255
 29743  019EDA  20E2               	addwfc	fsr1h,w,c
 29744  019EDC  6EDA               	movwf	fsr2h,c
 29745  019EDE  50DF               	movf	indf2,w,c
 29746  019EE0  6EA5               	movwf	165,c	;volatile
 29747                           
 29748                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 29749                           ;stkvar	_timerVal @ sp[(0)+-2]
 29750  019EE2  0EFE               	movlw	-2
 29751  019EE4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 29752                           
 29753                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 29754  019EEA  80A6               	bsf	166,0,c	;volatile
 29755                           
 29756                           ;mcc_generated_files/tmr3.c: 141:     }
 29757  019EEC  D00C               	goto	l1188
 29758  019EEE                     l10005:
 29759                           
 29760                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 29761                           ;stkvar	_timerVal @ sp[(0)+-2]
 29762  019EEE  0EFF               	movlw	255
 29763  019EF0  24E1               	addwf	fsr1l,w,c
 29764  019EF2  6ED9               	movwf	fsr2l,c
 29765  019EF4  0EFF               	movlw	255
 29766  019EF6  20E2               	addwfc	fsr1h,w,c
 29767  019EF8  6EDA               	movwf	fsr2h,c
 29768  019EFA  50DF               	movf	indf2,w,c
 29769  019EFC  6EA5               	movwf	165,c	;volatile
 29770                           
 29771                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 29772                           ;stkvar	_timerVal @ sp[(0)+-2]
 29773  019EFE  0EFE               	movlw	-2
 29774  019F00  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 29775  019F06                     l1188:
 29776                           
 29777                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29778  019F06  52E5               	movf	postdec1,f,c
 29779  019F08  52E5               	movf	postdec1,f,c
 29780  019F0A  0012               	return		;funcret
 29781  019F0C                     __end_of_TMR3_WriteTimer:
 29782                           	opt callstack 0
 29783                           
 29784 ;; *************** function _TMR3_CallBack *****************
 29785 ;; Defined at:
 29786 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 29787 ;; Parameters:    Size  Location     Type
 29788 ;;		None
 29789 ;; Auto vars:     Size  Location     Type
 29790 ;;		None
 29791 ;; Return value:  Size  Location     Type
 29792 ;;                  1  [STACK] void 
 29793 ;; Registers used:
 29794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 29795 ;; Tracked objects:
 29796 ;;		On entry : 3F/0
 29797 ;;		On exit  : 0/0
 29798 ;;		Unchanged: 0/0
 29799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29804 ;;Total ram usage:        0 bytes
 29805 ;; Hardware stack levels used:    1
 29806 ;; Hardware stack levels required when called:   13
 29807 ;; This function calls:
 29808 ;;		Absolute function
 29809 ;;		_TMR3_DefaultInterruptHandler
 29810 ;;		_calc_bsoc
 29811 ;; This function is called by:
 29812 ;;		_TMR3_ISR
 29813 ;; This function uses a reentrant model
 29814 ;;
 29815                           
 29816                           	psect	text139
 29817  01A58C                     __ptext139:
 29818                           	opt callstack 0
 29819  01A58C                     _TMR3_CallBack:
 29820                           	opt callstack 3
 29821                           
 29822                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 29823                           
 29824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29825                           ;incstack = 0
 29826  01A58C  0100               	movlb	0	; () banked
 29827  01A58E  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 29828  01A590  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 29829  01A592  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 29830  01A594  B4D8               	btfsc	status,2,c
 29831  01A596  0012               	return	
 29832                           
 29833                           ; BSR set to: 0
 29834                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 29835  01A598  D801               	call	u1158_28
 29836  01A59A  0012               	return	
 29837  01A59C                     u1158_28:
 29838  01A59C  0005               	push	
 29839  01A59E  6EFA               	movwf	pclath,c
 29840  01A5A0  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 29841  01A5A2  6EFD               	movwf	tosl,c
 29842  01A5A4  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 29843  01A5A6  6EFE               	movwf	tosh,c
 29844  01A5A8  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 29845  01A5AA  6EFF               	movwf	tosu,c
 29846  01A5AC  50FA               	movf	pclath,w,c
 29847  01A5AE  0012               	return		;indir
 29848  01A5B0                     __end_of_TMR3_CallBack:
 29849                           	opt callstack 0
 29850                           
 29851 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 29852 ;; Defined at:
 29853 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 29854 ;; Parameters:    Size  Location     Type
 29855 ;;		None
 29856 ;; Auto vars:     Size  Location     Type
 29857 ;;		None
 29858 ;; Return value:  Size  Location     Type
 29859 ;;                  1  [STACK] void 
 29860 ;; Registers used:
 29861 ;;		None
 29862 ;; Tracked objects:
 29863 ;;		On entry : 3F/0
 29864 ;;		On exit  : 0/0
 29865 ;;		Unchanged: 0/0
 29866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29871 ;;Total ram usage:        0 bytes
 29872 ;; Hardware stack levels used:    1
 29873 ;; Hardware stack levels required when called:    3
 29874 ;; This function calls:
 29875 ;;		Nothing
 29876 ;; This function is called by:
 29877 ;;		_TMR3_Initialize
 29878 ;;		_TMR3_CallBack
 29879 ;; This function uses a reentrant model
 29880 ;;
 29881                           
 29882                           	psect	text140
 29883  01A8A8                     __ptext140:
 29884                           	opt callstack 0
 29885  01A8A8                     _TMR3_DefaultInterruptHandler:
 29886                           	opt callstack 12
 29887                           
 29888                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29889                           
 29890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29891                           ;incstack = 0
 29892  01A8A8  0012               	return		;funcret
 29893  01A8AA                     __end_of_TMR3_DefaultInterruptHandler:
 29894                           	opt callstack 0
 29895                           
 29896 ;; *************** function _calc_bsoc *****************
 29897 ;; Defined at:
 29898 ;;		line 39 in file "bsoc.c"
 29899 ;; Parameters:    Size  Location     Type
 29900 ;;		None
 29901 ;; Auto vars:     Size  Location     Type
 29902 ;;  log_ptr         2  [STACK] PTR unsigned char 
 29903 ;;		 -> port_data(512), 
 29904 ;;  temp            2  [STACK] unsigned short 
 29905 ;; Return value:  Size  Location     Type
 29906 ;;                  1  [STACK] void 
 29907 ;; Registers used:
 29908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 29909 ;; Tracked objects:
 29910 ;;		On entry : 3F/0
 29911 ;;		On exit  : 3F/1
 29912 ;;		Unchanged: 0/0
 29913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29918 ;;Total ram usage:        0 bytes
 29919 ;; Hardware stack levels used:    1
 29920 ;; Hardware stack levels required when called:   12
 29921 ;; This function calls:
 29922 ;;		_StartTimer
 29923 ;;		_Volts_to_SOC
 29924 ;;		___fladd
 29925 ;;		___fldiv
 29926 ;;		___flge
 29927 ;;		___flmul
 29928 ;;		___flneg
 29929 ;;		___fltol
 29930 ;;		___xxtofl
 29931 ;;		_port_data_dma_ptr
 29932 ;;		_send_port_data_dma
 29933 ;;		_sprintf
 29934 ;;		_strlen
 29935 ;; This function is called by:
 29936 ;;		_init_bsoc
 29937 ;;		_TMR3_CallBack
 29938 ;; This function uses a reentrant model
 29939 ;;
 29940                           
 29941                           	psect	text141
 29942  013A8C                     __ptext141:
 29943                           	opt callstack 0
 29944  013A8C                     _calc_bsoc:
 29945                           	opt callstack 0
 29946                           
 29947                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29948  013A8C  52E6               	movf	postinc1,f,c
 29949  013A8E  52E6               	movf	postinc1,f,c
 29950  013A90  52E6               	movf	postinc1,f,c
 29951  013A92  52E6               	movf	postinc1,f,c
 29952                           
 29953                           ;incstack = 0
 29954                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  uint16_t temp;;bsoc.c: 44:  do { LATEbits.
      +                          LATE1 = 1; } while(0);
 29955  013A94  82BE               	bsf	190,1,c	;volatile
 29956                           
 29957                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 29958  013A96  0E00               	movlw	0
 29959  013A98  6EE6               	movwf	postinc1,c
 29960  013A9A  0E00               	movlw	0
 29961  013A9C  6EE6               	movwf	postinc1,c
 29962  013A9E  0E61               	movlw	97
 29963  013AA0  6EE6               	movwf	postinc1,c
 29964  013AA2  0E45               	movlw	69
 29965  013AA4  6EE6               	movwf	postinc1,c
 29966  013AA6  0060  F513  FFE6   	movff	_C+68,postinc1
 29967  013AAC  0060  F517  FFE6   	movff	_C+69,postinc1
 29968  013AB2  0060  F51B  FFE6   	movff	_C+70,postinc1
 29969  013AB8  0060  F51F  FFE6   	movff	_C+71,postinc1
 29970  013ABE  ECF4  F0A0         	call	___fldiv	;wreg free
 29971  013AC2  0060  F007  FFE6   	movff	btemp,postinc1
 29972  013AC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29973  013ACE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29974  013AD4  0060  F013  FFE6   	movff	btemp+3,postinc1
 29975  013ADA  0060  F603  FFE6   	movff	_C+128,postinc1
 29976  013AE0  0060  F607  FFE6   	movff	_C+129,postinc1
 29977  013AE6  0060  F60B  FFE6   	movff	_C+130,postinc1
 29978  013AEC  0060  F60F  FFE6   	movff	_C+131,postinc1
 29979  013AF2  EC68  F099         	call	___fladd	;wreg free
 29980  013AF6  0060  F004  F180   	movff	btemp,_C+128	;volatile
 29981  013AFC  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
 29982  013B02  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
 29983  013B08  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
 29984                           
 29985                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 29986  013B0E  0060  F603  FFE6   	movff	_C+128,postinc1
 29987  013B14  0060  F607  FFE6   	movff	_C+129,postinc1
 29988  013B1A  0060  F60B  FFE6   	movff	_C+130,postinc1
 29989  013B20  0060  F60F  FFE6   	movff	_C+131,postinc1
 29990  013B26  0060  F5F3  FFE6   	movff	_C+124,postinc1
 29991  013B2C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 29992  013B32  0060  F5FB  FFE6   	movff	_C+126,postinc1
 29993  013B38  0060  F5FF  FFE6   	movff	_C+127,postinc1
 29994  013B3E  EC4B  F0BD         	call	___flge	;wreg free
 29995  013B42  B001               	btfsc	btemp& (0+255),0,c
 29996  013B44  D008               	goto	l11827
 29997                           
 29998                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 29999  013B46  C17C  F180         	movff	_C+124,_C+128	;volatile
 30000  013B4A  C17D  F181         	movff	_C+125,_C+129	;volatile
 30001  013B4E  C17E  F182         	movff	_C+126,_C+130	;volatile
 30002  013B52  C17F  F183         	movff	_C+127,_C+131	;volatile
 30003  013B56                     l11827:
 30004                           
 30005                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 30006  013B56  0ECD               	movlw	205
 30007  013B58  6EE6               	movwf	postinc1,c
 30008  013B5A  0ECC               	movlw	204
 30009  013B5C  6EE6               	movwf	postinc1,c
 30010  013B5E  0ECC               	movlw	204
 30011  013B60  6EE6               	movwf	postinc1,c
 30012  013B62  0E3D               	movlw	61
 30013  013B64  6EE6               	movwf	postinc1,c
 30014  013B66  0060  F603  FFE6   	movff	_C+128,postinc1
 30015  013B6C  0060  F607  FFE6   	movff	_C+129,postinc1
 30016  013B72  0060  F60B  FFE6   	movff	_C+130,postinc1
 30017  013B78  0060  F60F  FFE6   	movff	_C+131,postinc1
 30018  013B7E  EC4B  F0BD         	call	___flge	;wreg free
 30019  013B82  B001               	btfsc	btemp& (0+255),0,c
 30020  013B84  D009               	goto	l11831
 30021                           
 30022                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 30023  013B86  0ECD               	movlw	205
 30024  013B88  0101               	movlb	1	; () banked
 30025  013B8A  6F80               	movwf	(_C+128)& (0+255),b	;volatile
 30026  013B8C  0ECC               	movlw	204
 30027  013B8E  6F81               	movwf	(_C+129)& (0+255),b	;volatile
 30028  013B90  0ECC               	movlw	204
 30029  013B92  6F82               	movwf	(_C+130)& (0+255),b	;volatile
 30030  013B94  0E3D               	movlw	61
 30031  013B96  6F83               	movwf	(_C+131)& (0+255),b	;volatile
 30032  013B98                     l11831:
 30033                           
 30034                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 30035  013B98  0E00               	movlw	0
 30036  013B9A  6EE6               	movwf	postinc1,c
 30037  013B9C  0E00               	movlw	0
 30038  013B9E  6EE6               	movwf	postinc1,c
 30039  013BA0  0E61               	movlw	97
 30040  013BA2  6EE6               	movwf	postinc1,c
 30041  013BA4  0E45               	movlw	69
 30042  013BA6  6EE6               	movwf	postinc1,c
 30043  013BA8  0060  F523  FFE6   	movff	_C+72,postinc1
 30044  013BAE  0060  F527  FFE6   	movff	_C+73,postinc1
 30045  013BB4  0060  F52B  FFE6   	movff	_C+74,postinc1
 30046  013BBA  0060  F52F  FFE6   	movff	_C+75,postinc1
 30047  013BC0  ECF4  F0A0         	call	___fldiv	;wreg free
 30048  013BC4  0060  F007  FFE6   	movff	btemp,postinc1
 30049  013BCA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30050  013BD0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30051  013BD6  0060  F013  FFE6   	movff	btemp+3,postinc1
 30052  013BDC  0060  F613  FFE6   	movff	_C+132,postinc1
 30053  013BE2  0060  F617  FFE6   	movff	_C+133,postinc1
 30054  013BE8  0060  F61B  FFE6   	movff	_C+134,postinc1
 30055  013BEE  0060  F61F  FFE6   	movff	_C+135,postinc1
 30056  013BF4  EC68  F099         	call	___fladd	;wreg free
 30057  013BF8  0060  F004  F184   	movff	btemp,_C+132	;volatile
 30058  013BFE  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
 30059  013C04  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
 30060  013C0A  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
 30061                           
 30062                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 30063  013C10  0E00               	movlw	0
 30064  013C12  6EE6               	movwf	postinc1,c
 30065  013C14  0E00               	movlw	0
 30066  013C16  6EE6               	movwf	postinc1,c
 30067  013C18  0E61               	movlw	97
 30068  013C1A  6EE6               	movwf	postinc1,c
 30069  013C1C  0E45               	movlw	69
 30070  013C1E  6EE6               	movwf	postinc1,c
 30071  013C20  0060  F5C3  FFE6   	movff	_C+112,postinc1
 30072  013C26  0060  F5C7  FFE6   	movff	_C+113,postinc1
 30073  013C2C  0060  F5CB  FFE6   	movff	_C+114,postinc1
 30074  013C32  0060  F5CF  FFE6   	movff	_C+115,postinc1
 30075  013C38  ECF4  F0A0         	call	___fldiv	;wreg free
 30076  013C3C  0060  F007  FFE6   	movff	btemp,postinc1
 30077  013C42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30078  013C48  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30079  013C4E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30080  013C54  0060  F653  FFE6   	movff	_C+148,postinc1
 30081  013C5A  0060  F657  FFE6   	movff	_C+149,postinc1
 30082  013C60  0060  F65B  FFE6   	movff	_C+150,postinc1
 30083  013C66  0060  F65F  FFE6   	movff	_C+151,postinc1
 30084  013C6C  EC68  F099         	call	___fladd	;wreg free
 30085  013C70  0060  F004  F194   	movff	btemp,_C+148	;volatile
 30086  013C76  0060  F008  F195   	movff	btemp+1,_C+149	;volatile
 30087  013C7C  0060  F00C  F196   	movff	btemp+2,_C+150	;volatile
 30088  013C82  0060  F010  F197   	movff	btemp+3,_C+151	;volatile
 30089                           
 30090                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 30091  013C88  0E00               	movlw	0
 30092  013C8A  6EE6               	movwf	postinc1,c
 30093  013C8C  0E00               	movlw	0
 30094  013C8E  6EE6               	movwf	postinc1,c
 30095  013C90  0E61               	movlw	97
 30096  013C92  6EE6               	movwf	postinc1,c
 30097  013C94  0E45               	movlw	69
 30098  013C96  6EE6               	movwf	postinc1,c
 30099  013C98  0060  F5B3  FFE6   	movff	_C+108,postinc1
 30100  013C9E  0060  F5B7  FFE6   	movff	_C+109,postinc1
 30101  013CA4  0060  F5BB  FFE6   	movff	_C+110,postinc1
 30102  013CAA  0060  F5BF  FFE6   	movff	_C+111,postinc1
 30103  013CB0  ECF4  F0A0         	call	___fldiv	;wreg free
 30104  013CB4  0060  F007  FFE6   	movff	btemp,postinc1
 30105  013CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30106  013CC0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30107  013CC6  0060  F013  FFE6   	movff	btemp+3,postinc1
 30108  013CCC  0060  F663  FFE6   	movff	_C+152,postinc1
 30109  013CD2  0060  F667  FFE6   	movff	_C+153,postinc1
 30110  013CD8  0060  F66B  FFE6   	movff	_C+154,postinc1
 30111  013CDE  0060  F66F  FFE6   	movff	_C+155,postinc1
 30112  013CE4  EC68  F099         	call	___fladd	;wreg free
 30113  013CE8  0060  F004  F198   	movff	btemp,_C+152	;volatile
 30114  013CEE  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 30115  013CF4  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 30116  013CFA  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 30117                           
 30118                           ;bsoc.c: 55:  if (C.p_bat > 0.0)
 30119  013D00  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30120  013D06  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30121  013D0C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30122  013D12  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30123  013D18  0E00               	movlw	0
 30124  013D1A  6EE6               	movwf	postinc1,c
 30125  013D1C  0E00               	movlw	0
 30126  013D1E  6EE6               	movwf	postinc1,c
 30127  013D20  0E00               	movlw	0
 30128  013D22  6EE6               	movwf	postinc1,c
 30129  013D24  0E00               	movlw	0
 30130  013D26  6EE6               	movwf	postinc1,c
 30131  013D28  EC4B  F0BD         	call	___flge	;wreg free
 30132  013D2C  B001               	btfsc	btemp& (0+255),0,c
 30133  013D2E  D03C               	goto	l11841
 30134                           
 30135                           ;bsoc.c: 56:   C.bkwi += (C.p_bat / 3600.0);
 30136  013D30  0E00               	movlw	0
 30137  013D32  6EE6               	movwf	postinc1,c
 30138  013D34  0E00               	movlw	0
 30139  013D36  6EE6               	movwf	postinc1,c
 30140  013D38  0E61               	movlw	97
 30141  013D3A  6EE6               	movwf	postinc1,c
 30142  013D3C  0E45               	movlw	69
 30143  013D3E  6EE6               	movwf	postinc1,c
 30144  013D40  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30145  013D46  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30146  013D4C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30147  013D52  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30148  013D58  ECF4  F0A0         	call	___fldiv	;wreg free
 30149  013D5C  0060  F007  FFE6   	movff	btemp,postinc1
 30150  013D62  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30151  013D68  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30152  013D6E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30153  013D74  0060  F633  FFE6   	movff	_C+140,postinc1
 30154  013D7A  0060  F637  FFE6   	movff	_C+141,postinc1
 30155  013D80  0060  F63B  FFE6   	movff	_C+142,postinc1
 30156  013D86  0060  F63F  FFE6   	movff	_C+143,postinc1
 30157  013D8C  EC68  F099         	call	___fladd	;wreg free
 30158  013D90  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 30159  013D96  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 30160  013D9C  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 30161  013DA2  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 30162  013DA8                     l11841:
 30163                           
 30164                           ;bsoc.c: 57:  if (C.p_bat < 0.0)
 30165  013DA8  0101               	movlb	1	; () banked
 30166  013DAA  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 30167  013DAC  D03C               	goto	l11845
 30168                           
 30169                           ; BSR set to: 1
 30170                           ;bsoc.c: 58:   C.bkwo += (C.p_bat / 3600.0);
 30171  013DAE  0E00               	movlw	0
 30172  013DB0  6EE6               	movwf	postinc1,c
 30173  013DB2  0E00               	movlw	0
 30174  013DB4  6EE6               	movwf	postinc1,c
 30175  013DB6  0E61               	movlw	97
 30176  013DB8  6EE6               	movwf	postinc1,c
 30177  013DBA  0E45               	movlw	69
 30178  013DBC  6EE6               	movwf	postinc1,c
 30179  013DBE  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30180  013DC4  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30181  013DCA  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30182  013DD0  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30183  013DD6  ECF4  F0A0         	call	___fldiv	;wreg free
 30184  013DDA  0060  F007  FFE6   	movff	btemp,postinc1
 30185  013DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30186  013DE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30187  013DEC  0060  F013  FFE6   	movff	btemp+3,postinc1
 30188  013DF2  0060  F643  FFE6   	movff	_C+144,postinc1
 30189  013DF8  0060  F647  FFE6   	movff	_C+145,postinc1
 30190  013DFE  0060  F64B  FFE6   	movff	_C+146,postinc1
 30191  013E04  0060  F64F  FFE6   	movff	_C+147,postinc1
 30192  013E0A  EC68  F099         	call	___fladd	;wreg free
 30193  013E0E  0060  F004  F190   	movff	btemp,_C+144	;volatile
 30194  013E14  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 30195  013E1A  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 30196  013E20  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 30197  013E26                     l11845:
 30198                           
 30199                           ;bsoc.c: 60:  temp = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 30200  013E26  0E00               	movlw	0
 30201  013E28  6EE6               	movwf	postinc1,c
 30202  013E2A  0E00               	movlw	0
 30203  013E2C  6EE6               	movwf	postinc1,c
 30204  013E2E  0EC8               	movlw	200
 30205  013E30  6EE6               	movwf	postinc1,c
 30206  013E32  0E42               	movlw	66
 30207  013E34  6EE6               	movwf	postinc1,c
 30208  013E36  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30209  013E3C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30210  013E42  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30211  013E48  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30212  013E4E  0060  F603  FFE6   	movff	_C+128,postinc1
 30213  013E54  0060  F607  FFE6   	movff	_C+129,postinc1
 30214  013E5A  0060  F60B  FFE6   	movff	_C+130,postinc1
 30215  013E60  0060  F60F  FFE6   	movff	_C+131,postinc1
 30216  013E66  ECF4  F0A0         	call	___fldiv	;wreg free
 30217  013E6A  0060  F007  FFE6   	movff	btemp,postinc1
 30218  013E70  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30219  013E76  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30220  013E7C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30221  013E82  EC53  F095         	call	___flmul	;wreg free
 30222  013E86  0060  F007  FFE6   	movff	btemp,postinc1
 30223  013E8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30224  013E92  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30225  013E98  0060  F013  FFE6   	movff	btemp+3,postinc1
 30226  013E9E  ECDA  F0BB         	call	___fltol	;wreg free
 30227  013EA2  0060  F004  F00B   	movff	btemp,btemp+10
 30228  013EA8  0060  F008  F00C   	movff	btemp+1,btemp+11
 30229  013EAE  0E01               	movlw	1
 30230  013EB0  260B               	addwf	(btemp+10)^0,f,c
 30231  013EB2  0E00               	movlw	0
 30232  013EB4  220C               	addwfc	(btemp+11)^0,f,c
 30233                           
 30234                           ;stkvar	_temp @ sp[(-4)+2]
 30235  013EB6  0EFE               	movlw	-2
 30236  013EB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30237  013EBE  0EFF               	movlw	-1
 30238  013EC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30239                           
 30240                           ;bsoc.c: 61:  C.soc = (Volts_to_SOC((uint32_t) C.v_bat * 1000.0) + temp) / 2;
 30241                           ;stkvar	_temp @ sp[(-4)+2]
 30242  013EC6  0E00               	movlw	0
 30243  013EC8  6EE6               	movwf	postinc1,c
 30244  013ECA  0E00               	movlw	0
 30245  013ECC  6EE6               	movwf	postinc1,c
 30246  013ECE  0E7A               	movlw	122
 30247  013ED0  6EE6               	movwf	postinc1,c
 30248  013ED2  0E44               	movlw	68
 30249  013ED4  6EE6               	movwf	postinc1,c
 30250  013ED6  0060  F553  FFE6   	movff	_C+84,postinc1
 30251  013EDC  0060  F557  FFE6   	movff	_C+85,postinc1
 30252  013EE2  0060  F55B  FFE6   	movff	_C+86,postinc1
 30253  013EE8  0060  F55F  FFE6   	movff	_C+87,postinc1
 30254  013EEE  ECDA  F0BB         	call	___fltol	;wreg free
 30255  013EF2  0060  F007  FFE6   	movff	btemp,postinc1
 30256  013EF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30257  013EFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30258  013F04  0060  F013  FFE6   	movff	btemp+3,postinc1
 30259  013F0A  0E00               	movlw	0
 30260  013F0C  6EE6               	movwf	postinc1,c
 30261  013F0E  EC6F  F0B7         	call	___xxtofl	;wreg free
 30262  013F12  0060  F007  FFE6   	movff	btemp,postinc1
 30263  013F18  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30264  013F1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30265  013F24  0060  F013  FFE6   	movff	btemp+3,postinc1
 30266  013F2A  EC53  F095         	call	___flmul	;wreg free
 30267  013F2E  0060  F007  FFE6   	movff	btemp,postinc1
 30268  013F34  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30269  013F3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30270  013F40  0060  F013  FFE6   	movff	btemp+3,postinc1
 30271  013F46  ECDA  F0BB         	call	___fltol	;wreg free
 30272  013F4A  0060  F007  FFE6   	movff	btemp,postinc1
 30273  013F50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30274  013F56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30275  013F5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30276  013F62  ECDF  F0C8         	call	_Volts_to_SOC	;wreg free
 30277  013F66  0EFE               	movlw	-2
 30278  013F68  50E3               	movf	plusw1,w,c
 30279  013F6A  2601               	addwf	btemp^0,f,c
 30280  013F6C  0EFF               	movlw	-1
 30281  013F6E  50E3               	movf	plusw1,w,c
 30282  013F70  2202               	addwfc	(btemp+1)^0,f,c
 30283  013F72  90D8               	bcf	status,0,c
 30284  013F74  3002               	rrcf	(btemp+1)^0,w,c
 30285  013F76  6E0C               	movwf	(btemp+11)^0,c
 30286  013F78  3001               	rrcf	btemp^0,w,c
 30287  013F7A  6E0B               	movwf	(btemp+10)^0,c
 30288  013F7C  0060  F02C  F19E   	movff	btemp+10,_C+158	;volatile
 30289  013F82  0060  F030  F19F   	movff	btemp+11,_C+159	;volatile
 30290                           
 30291                           ;bsoc.c: 62:  if (C.soc > 100)
 30292  013F88  0101               	movlb	1	; () banked
 30293  013F8A  519F               	movf	(_C+159)& (0+255),w,b	;volatile
 30294  013F8C  E104               	bnz	u1151_20
 30295  013F8E  0E65               	movlw	101
 30296  013F90  5D9E               	subwf	(_C+158)& (0+255),w,b	;volatile
 30297  013F92  A0D8               	btfss	status,0,c
 30298  013F94  D004               	goto	l11853
 30299  013F96                     u1151_20:
 30300                           
 30301                           ; BSR set to: 1
 30302                           ;bsoc.c: 63:   C.soc = 100;
 30303  013F96  0E00               	movlw	0
 30304  013F98  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
 30305  013F9A  0E64               	movlw	100
 30306  013F9C  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
 30307  013F9E                     l11853:
 30308                           
 30309                           ; BSR set to: 1
 30310                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 30311  013F9E  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 30312  013FA0  D043               	goto	l11857
 30313                           
 30314                           ; BSR set to: 1
 30315                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 30316  013FA2  0060  F513  FFE6   	movff	_C+68,postinc1
 30317  013FA8  0060  F517  FFE6   	movff	_C+69,postinc1
 30318  013FAE  0060  F51B  FFE6   	movff	_C+70,postinc1
 30319  013FB4  0060  F51F  FFE6   	movff	_C+71,postinc1
 30320  013FBA  0060  F603  FFE6   	movff	_C+128,postinc1
 30321  013FC0  0060  F607  FFE6   	movff	_C+129,postinc1
 30322  013FC6  0060  F60B  FFE6   	movff	_C+130,postinc1
 30323  013FCC  0060  F60F  FFE6   	movff	_C+131,postinc1
 30324  013FD2  ECF4  F0A0         	call	___fldiv	;wreg free
 30325  013FD6  0060  F007  FFE6   	movff	btemp,postinc1
 30326  013FDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30327  013FE2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30328  013FE8  0060  F013  FFE6   	movff	btemp+3,postinc1
 30329  013FEE  ECF0  F0CD         	call	___flneg	;wreg free
 30330  013FF2  0060  F007  FFE6   	movff	btemp,postinc1
 30331  013FF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30332  013FFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30333  014004  0060  F013  FFE6   	movff	btemp+3,postinc1
 30334  01400A  ECDA  F0BB         	call	___fltol	;wreg free
 30335  01400E  0060  F004  F00B   	movff	btemp,btemp+10
 30336  014014  0060  F008  F00C   	movff	btemp+1,btemp+11
 30337  01401A  0060  F02C  F19C   	movff	btemp+10,_C+156	;volatile
 30338  014020  0060  F030  F19D   	movff	btemp+11,_C+157	;volatile
 30339                           
 30340                           ;bsoc.c: 67:  } else {
 30341  014026  D004               	goto	l11859
 30342  014028                     l11857:
 30343                           
 30344                           ; BSR set to: 1
 30345                           ;bsoc.c: 68:   C.runtime = 120;
 30346  014028  0E00               	movlw	0
 30347  01402A  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 30348  01402C  0E78               	movlw	120
 30349  01402E  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 30350  014030                     l11859:
 30351                           
 30352                           ;bsoc.c: 70:  if (C.runtime > 120)
 30353  014030  0101               	movlb	1	; () banked
 30354  014032  519D               	movf	(_C+157)& (0+255),w,b	;volatile
 30355  014034  E104               	bnz	u1153_20
 30356  014036  0E79               	movlw	121
 30357  014038  5D9C               	subwf	(_C+156)& (0+255),w,b	;volatile
 30358  01403A  A0D8               	btfss	status,0,c
 30359  01403C  D004               	goto	l11863
 30360  01403E                     u1153_20:
 30361                           
 30362                           ; BSR set to: 1
 30363                           ;bsoc.c: 71:   C.runtime = 120;
 30364  01403E  0E00               	movlw	0
 30365  014040  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 30366  014042  0E78               	movlw	120
 30367  014044  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 30368  014046                     l11863:
 30369                           
 30370                           ; BSR set to: 1
 30371                           ;bsoc.c: 73:  V.lowint_count++;
 30372  014046  0E01               	movlw	1
 30373  014048  0102               	movlb	2	; () banked
 30374  01404A  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 30375  01404C  0E00               	movlw	0
 30376  01404E  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 30377  014050  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 30378  014052  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 30379                           
 30380                           ; BSR set to: 2
 30381                           ;bsoc.c: 74:  log_ptr = port_data_dma_ptr();
 30382  014054  EC18  F0D4         	call	_port_data_dma_ptr	;wreg free
 30383                           
 30384                           ;stkvar	_log_ptr @ sp[(-4)+0]
 30385  014058  0EFD               	movlw	-3
 30386  01405A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30387  014060  0EFC               	movlw	-4
 30388  014062  0060  F007  FFE3   	movff	btemp,plusw1
 30389                           
 30390                           ;bsoc.c: 75:  sprintf((char*) log_ptr, " %lu,%4.3f,%4.3f,%4.3f,%4.3f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d\r\n",
 30391  014068  0060  F673  FFE6   	movff	_C+156,postinc1
 30392  01406E  0060  F677  FFE6   	movff	_C+157,postinc1
 30393  014074  0060  F67B  FFE6   	movff	_C+158,postinc1
 30394  01407A  0060  F67F  FFE6   	movff	_C+159,postinc1
 30395  014080  0060  F613  FFE6   	movff	_C+132,postinc1
 30396  014086  0060  F617  FFE6   	movff	_C+133,postinc1
 30397  01408C  0060  F61B  FFE6   	movff	_C+134,postinc1
 30398  014092  0060  F61F  FFE6   	movff	_C+135,postinc1
 30399  014098  0060  F603  FFE6   	movff	_C+128,postinc1
 30400  01409E  0060  F607  FFE6   	movff	_C+129,postinc1
 30401  0140A4  0060  F60B  FFE6   	movff	_C+130,postinc1
 30402  0140AA  0060  F60F  FFE6   	movff	_C+131,postinc1
 30403  0140B0  0060  F5B3  FFE6   	movff	_C+108,postinc1
 30404  0140B6  0060  F5B7  FFE6   	movff	_C+109,postinc1
 30405  0140BC  0060  F5BB  FFE6   	movff	_C+110,postinc1
 30406  0140C2  0060  F5BF  FFE6   	movff	_C+111,postinc1
 30407  0140C8  0060  F5A3  FFE6   	movff	_C+104,postinc1
 30408  0140CE  0060  F5A7  FFE6   	movff	_C+105,postinc1
 30409  0140D4  0060  F5AB  FFE6   	movff	_C+106,postinc1
 30410  0140DA  0060  F5AF  FFE6   	movff	_C+107,postinc1
 30411  0140E0  0060  F5C3  FFE6   	movff	_C+112,postinc1
 30412  0140E6  0060  F5C7  FFE6   	movff	_C+113,postinc1
 30413  0140EC  0060  F5CB  FFE6   	movff	_C+114,postinc1
 30414  0140F2  0060  F5CF  FFE6   	movff	_C+115,postinc1
 30415  0140F8  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30416  0140FE  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30417  014104  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30418  01410A  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30419  014110  0060  F593  FFE6   	movff	_C+100,postinc1
 30420  014116  0060  F597  FFE6   	movff	_C+101,postinc1
 30421  01411C  0060  F59B  FFE6   	movff	_C+102,postinc1
 30422  014122  0060  F59F  FFE6   	movff	_C+103,postinc1
 30423  014128  0060  F533  FFE6   	movff	_C+76,postinc1
 30424  01412E  0060  F537  FFE6   	movff	_C+77,postinc1
 30425  014134  0060  F53B  FFE6   	movff	_C+78,postinc1
 30426  01413A  0060  F53F  FFE6   	movff	_C+79,postinc1
 30427  014140  0060  F543  FFE6   	movff	_C+80,postinc1
 30428  014146  0060  F547  FFE6   	movff	_C+81,postinc1
 30429  01414C  0060  F54B  FFE6   	movff	_C+82,postinc1
 30430  014152  0060  F54F  FFE6   	movff	_C+83,postinc1
 30431  014158  0060  F553  FFE6   	movff	_C+84,postinc1
 30432  01415E  0060  F557  FFE6   	movff	_C+85,postinc1
 30433  014164  0060  F55B  FFE6   	movff	_C+86,postinc1
 30434  01416A  0060  F55F  FFE6   	movff	_C+87,postinc1
 30435  014170  0060  FA07  FFE6   	movff	_V+129,postinc1
 30436  014176  0060  FA0B  FFE6   	movff	_V+130,postinc1
 30437  01417C  0060  FA0F  FFE6   	movff	_V+131,postinc1
 30438  014182  0060  FA13  FFE6   	movff	_V+132,postinc1
 30439  014188  0EE5               	movlw	low STR_46
 30440  01418A  6EE6               	movwf	postinc1,c
 30441  01418C  0EFD               	movlw	high STR_46
 30442  01418E  6EE6               	movwf	postinc1,c
 30443                           
 30444                           ;stkvar	_log_ptr @ sp[(-54)+0]
 30445  014190  0ECA               	movlw	-54
 30446  014192  006F FF8F FFE6     	movff	plusw1,postinc1
 30447  014198  006F FF8F FFE6     	movff	plusw1,postinc1
 30448  01419E  0E34               	movlw	52
 30449  0141A0  6EE6               	movwf	postinc1,c
 30450  0141A2  ECD6  F0C3         	call	_sprintf	;wreg free
 30451                           
 30452                           ; BSR set to: 0
 30453                           ;bsoc.c: 80:  StartTimer(TMR_DISPLAY, 125);
 30454  0141A6  0E7D               	movlw	125
 30455  0141A8  6EE6               	movwf	postinc1,c
 30456  0141AA  0E00               	movlw	0
 30457  0141AC  6EE6               	movwf	postinc1,c
 30458  0141AE  0E0A               	movlw	10
 30459  0141B0  6EE6               	movwf	postinc1,c
 30460  0141B2  EC06  F0CF         	call	_StartTimer	;wreg free
 30461                           
 30462                           ;bsoc.c: 81:  send_port_data_dma(strlen((char*) log_ptr));
 30463                           ;stkvar	_log_ptr @ sp[(-4)+0]
 30464  0141B6  0EFC               	movlw	-4
 30465  0141B8  006F FF8F FFE6     	movff	plusw1,postinc1
 30466  0141BE  006F FF8F FFE6     	movff	plusw1,postinc1
 30467  0141C4  EC42  F0C8         	call	_strlen	;wreg free
 30468  0141C8  0060  F007  FFE6   	movff	btemp,postinc1
 30469  0141CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30470  0141D4  EC7B  F0CD         	call	_send_port_data_dma	;wreg free
 30471                           
 30472                           ; BSR set to: 59
 30473                           ;bsoc.c: 82:  C.update = 0;
 30474  0141D8  0101               	movlb	1	; () banked
 30475  0141DA  6BA0               	clrf	(_C+160)& (0+255),b	;volatile
 30476                           
 30477                           ; BSR set to: 1
 30478  0141DC  92BE               	bcf	190,1,c	;volatile
 30479                           
 30480                           ; BSR set to: 1
 30481                           ; _calc_bsoc: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 30482  0141DE  52E5               	movf	postdec1,f,c
 30483  0141E0  52E5               	movf	postdec1,f,c
 30484  0141E2  52E5               	movf	postdec1,f,c
 30485  0141E4  52E5               	movf	postdec1,f,c
 30486  0141E6  0012               	return		;funcret
 30487  0141E8                     __end_of_calc_bsoc:
 30488                           	opt callstack 0
 30489                           
 30490 ;; *************** function _send_port_data_dma *****************
 30491 ;; Defined at:
 30492 ;;		line 258 in file "eadog.c"
 30493 ;; Parameters:    Size  Location     Type
 30494 ;;  dsize           2  [STACK] unsigned short 
 30495 ;; Auto vars:     Size  Location     Type
 30496 ;;		None
 30497 ;; Return value:  Size  Location     Type
 30498 ;;                  1  [STACK] void 
 30499 ;; Registers used:
 30500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 30501 ;; Tracked objects:
 30502 ;;		On entry : 0/0
 30503 ;;		On exit  : 3F/3B
 30504 ;;		Unchanged: 0/0
 30505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30510 ;;Total ram usage:        0 bytes
 30511 ;; Hardware stack levels used:    1
 30512 ;; Hardware stack levels required when called:    3
 30513 ;; This function calls:
 30514 ;;		Nothing
 30515 ;; This function is called by:
 30516 ;;		_calc_bsoc
 30517 ;; This function uses a reentrant model
 30518 ;;
 30519                           
 30520                           	psect	text142
 30521  019AF6                     __ptext142:
 30522                           	opt callstack 0
 30523  019AF6                     _send_port_data_dma:
 30524                           	opt callstack 11
 30525                           
 30526                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 30527                           ;stkvar	_dsize @ sp[(0)+-2]
 30528                           
 30529                           ; BSR set to: 1
 30530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30531                           ;incstack = 0
 30532  019AF6  0EFE               	movlw	-2
 30533  019AF8  04E3               	decf	plusw1,w,c
 30534  019AFA  0EFF               	movlw	-1
 30535  019AFC  006F FF8C  F001    	movff	plusw1,btemp
 30536  019B02  0E02               	movlw	2
 30537  019B04  5A01               	subwfb	btemp^0,f,c
 30538  019B06  A0D8               	btfss	status,0,c
 30539  019B08  D00C               	goto	l9113
 30540                           
 30541                           ;eadog.c: 261:   dsize = 512;
 30542  019B0A  0E00               	movlw	0
 30543  019B0C  6E0B               	movwf	(btemp+10)^0,c
 30544  019B0E  0E02               	movlw	2
 30545  019B10  6E0C               	movwf	(btemp+11)^0,c
 30546                           
 30547                           ;stkvar	_dsize @ sp[(0)+-2]
 30548  019B12  0EFE               	movlw	-2
 30549  019B14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30550  019B1A  0EFF               	movlw	-1
 30551  019B1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30552  019B22                     l9113:
 30553                           
 30554                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 30555  019B22  013B               	movlb	59	; () banked
 30556  019B24  9FDC               	bcf	220,7,b	;volatile
 30557                           
 30558                           ; BSR set to: 59
 30559                           ;eadog.c: 264:  DMA2SSZ = dsize;
 30560                           ;stkvar	_dsize @ sp[(0)+-2]
 30561  019B26  0EFE               	movlw	-2
 30562  019B28  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 30563  019B2E  0EFF               	movlw	-1
 30564  019B30  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 30565                           
 30566                           ; BSR set to: 59
 30567                           ;eadog.c: 265:  DMA2DSZ = 1;
 30568  019B36  0E00               	movlw	0
 30569  019B38  6FCF               	movwf	207,b	;volatile
 30570  019B3A  0E01               	movlw	1
 30571  019B3C  6FCE               	movwf	206,b	;volatile
 30572                           
 30573                           ; BSR set to: 59
 30574                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 30575  019B3E  8FDC               	bsf	220,7,b	;volatile
 30576                           
 30577                           ; BSR set to: 59
 30578                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 30579  019B40  8DDC               	bsf	220,6,b	;volatile
 30580                           
 30581                           ; BSR set to: 59
 30582                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 30583  019B42  52E5               	movf	postdec1,f,c
 30584  019B44  52E5               	movf	postdec1,f,c
 30585  019B46  0012               	return		;funcret
 30586  019B48                     __end_of_send_port_data_dma:
 30587                           	opt callstack 0
 30588                           
 30589 ;; *************** function _port_data_dma_ptr *****************
 30590 ;; Defined at:
 30591 ;;		line 273 in file "eadog.c"
 30592 ;; Parameters:    Size  Location     Type
 30593 ;;		None
 30594 ;; Auto vars:     Size  Location     Type
 30595 ;;		None
 30596 ;; Return value:  Size  Location     Type
 30597 ;;                  2  [STACK] PTR unsigned char 
 30598 ;; Registers used:
 30599 ;;		wreg, status,2, status,0, btemp, btemp+1
 30600 ;; Tracked objects:
 30601 ;;		On entry : 3F/2
 30602 ;;		On exit  : 0/0
 30603 ;;		Unchanged: 0/0
 30604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30609 ;;Total ram usage:        0 bytes
 30610 ;; Hardware stack levels used:    1
 30611 ;; Hardware stack levels required when called:    3
 30612 ;; This function calls:
 30613 ;;		Nothing
 30614 ;; This function is called by:
 30615 ;;		_calc_bsoc
 30616 ;; This function uses a reentrant model
 30617 ;;
 30618                           
 30619                           	psect	text143
 30620  01A830                     __ptext143:
 30621                           	opt callstack 0
 30622  01A830                     _port_data_dma_ptr:
 30623                           	opt callstack 11
 30624                           
 30625                           ;eadog.c: 275:  return port_data;
 30626                           
 30627                           ; BSR set to: 59
 30628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30629                           ;incstack = 0
 30630  01A830  0EFF               	movlw	low _port_data
 30631  01A832  6E01               	movwf	btemp^0,c
 30632  01A834  0E05               	movlw	high _port_data
 30633  01A836  6E02               	movwf	(btemp+1)^0,c
 30634                           
 30635                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30636  01A838  0012               	return		;funcret
 30637  01A83A                     __end_of_port_data_dma_ptr:
 30638                           	opt callstack 0
 30639                           
 30640 ;; *************** function _INT0_ISR *****************
 30641 ;; Defined at:
 30642 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 30643 ;; Parameters:    Size  Location     Type
 30644 ;;		None
 30645 ;; Auto vars:     Size  Location     Type
 30646 ;;		None
 30647 ;; Return value:  Size  Location     Type
 30648 ;;                  1    wreg      void 
 30649 ;; Registers used:
 30650 ;;		wreg, status,2, status,0, pclath, tosl
 30651 ;; Tracked objects:
 30652 ;;		On entry : 0/0
 30653 ;;		On exit  : 0/0
 30654 ;;		Unchanged: 0/0
 30655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30660 ;;Total ram usage:        0 bytes
 30661 ;; Hardware stack levels used:    1
 30662 ;; Hardware stack levels required when called:    2
 30663 ;; This function calls:
 30664 ;;		_INT0_CallBack
 30665 ;; This function is called by:
 30666 ;;		Interrupt level 2
 30667 ;; This function uses a non-reentrant model
 30668 ;;
 30669                           
 30670                           	psect	text144
 30671  01A808                     __ptext144:
 30672                           	opt callstack 0
 30673  01A808                     _INT0_ISR:
 30674                           	opt callstack 3
 30675                           
 30676                           ;incstack = 0
 30677  01A808  EE14  F0C2         	lfsr	1,___inthi_sp
 30678                           
 30679                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 30680  01A80C  0139               	movlb	57	; () banked
 30681  01A80E  91A1               	bcf	161,0,b	;volatile
 30682                           
 30683                           ; BSR set to: 57
 30684                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 30685  01A810  ECD8  F0D2         	call	_INT0_CallBack	;wreg free
 30686  01A814  0011               	retfie		f
 30687  01A816                     __end_of_INT0_ISR:
 30688                           	opt callstack 0
 30689                           
 30690 ;; *************** function _INT0_CallBack *****************
 30691 ;; Defined at:
 30692 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 30693 ;; Parameters:    Size  Location     Type
 30694 ;;		None
 30695 ;; Auto vars:     Size  Location     Type
 30696 ;;		None
 30697 ;; Return value:  Size  Location     Type
 30698 ;;                  1  [STACK] void 
 30699 ;; Registers used:
 30700 ;;		wreg, status,2, status,0, pclath, tosl
 30701 ;; Tracked objects:
 30702 ;;		On entry : 3F/39
 30703 ;;		On exit  : 0/0
 30704 ;;		Unchanged: 0/0
 30705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30710 ;;Total ram usage:        0 bytes
 30711 ;; Hardware stack levels used:    1
 30712 ;; Hardware stack levels required when called:    1
 30713 ;; This function calls:
 30714 ;;		Absolute function
 30715 ;;		_INT0_DefaultInterruptHandler
 30716 ;; This function is called by:
 30717 ;;		_INT0_ISR
 30718 ;; This function uses a reentrant model
 30719 ;;
 30720                           
 30721                           	psect	text145
 30722  01A5B0                     __ptext145:
 30723                           	opt callstack 0
 30724  01A5B0                     _INT0_CallBack:
 30725                           	opt callstack 3
 30726                           
 30727                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 30728                           
 30729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30730                           ;incstack = 0
 30731  01A5B0  0100               	movlb	0	; () banked
 30732  01A5B2  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 30733  01A5B4  11C5               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 30734  01A5B6  11C6               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 30735  01A5B8  B4D8               	btfsc	status,2,c
 30736  01A5BA  0012               	return	
 30737                           
 30738                           ; BSR set to: 0
 30739                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 30740  01A5BC  D801               	call	u927_48
 30741  01A5BE  0012               	return	
 30742  01A5C0                     u927_48:
 30743  01A5C0  0005               	push	
 30744  01A5C2  6EFA               	movwf	pclath,c
 30745  01A5C4  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 30746  01A5C6  6EFD               	movwf	tosl,c
 30747  01A5C8  51C5               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 30748  01A5CA  6EFE               	movwf	tosh,c
 30749  01A5CC  51C6               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 30750  01A5CE  6EFF               	movwf	tosu,c
 30751  01A5D0  50FA               	movf	pclath,w,c
 30752  01A5D2  0012               	return		;indir
 30753  01A5D4                     __end_of_INT0_CallBack:
 30754                           	opt callstack 0
 30755                           
 30756 ;; *************** function _INT0_DefaultInterruptHandler *****************
 30757 ;; Defined at:
 30758 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 30759 ;; Parameters:    Size  Location     Type
 30760 ;;		None
 30761 ;; Auto vars:     Size  Location     Type
 30762 ;;		None
 30763 ;; Return value:  Size  Location     Type
 30764 ;;                  1  [STACK] void 
 30765 ;; Registers used:
 30766 ;;		None
 30767 ;; Tracked objects:
 30768 ;;		On entry : 3F/0
 30769 ;;		On exit  : 0/0
 30770 ;;		Unchanged: 0/0
 30771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30776 ;;Total ram usage:        0 bytes
 30777 ;; Hardware stack levels used:    1
 30778 ;; This function calls:
 30779 ;;		Nothing
 30780 ;; This function is called by:
 30781 ;;		_EXT_INT_Initialize
 30782 ;;		_INT0_CallBack
 30783 ;; This function uses a reentrant model
 30784 ;;
 30785                           
 30786                           	psect	text146
 30787  01A8AA                     __ptext146:
 30788                           	opt callstack 0
 30789  01A8AA                     _INT0_DefaultInterruptHandler:
 30790                           	opt callstack 3
 30791                           
 30792                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30793                           
 30794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30795                           ;incstack = 0
 30796  01A8AA  0012               	return		;funcret
 30797  01A8AC                     __end_of_INT0_DefaultInterruptHandler:
 30798                           	opt callstack 0
 30799                           
 30800 ;; *************** function _Default_ISR *****************
 30801 ;; Defined at:
 30802 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 30803 ;; Parameters:    Size  Location     Type
 30804 ;;		None
 30805 ;; Auto vars:     Size  Location     Type
 30806 ;;		None
 30807 ;; Return value:  Size  Location     Type
 30808 ;;                  1    wreg      void 
 30809 ;; Registers used:
 30810 ;;		None
 30811 ;; Tracked objects:
 30812 ;;		On entry : 0/0
 30813 ;;		On exit  : 0/0
 30814 ;;		Unchanged: 0/0
 30815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30820 ;;Total ram usage:        0 bytes
 30821 ;; Hardware stack levels used:    1
 30822 ;; This function calls:
 30823 ;;		Nothing
 30824 ;; This function is called by:
 30825 ;;		Interrupt level 2
 30826 ;; This function uses a non-reentrant model
 30827 ;;
 30828                           
 30829                           	psect	text147
 30830  01A8A0                     __ptext147:
 30831                           	opt callstack 0
 30832  01A8A0                     _Default_ISR:
 30833                           	opt callstack 5
 30834                           
 30835                           ;incstack = 0
 30836  01A8A0  EE14  F0C2         	lfsr	1,___inthi_sp
 30837  01A8A4  0011               	retfie		f
 30838  01A8A6                     __end_of_Default_ISR:
 30839                           	opt callstack 0
 30840                           
 30841 ;; *************** function _ADCC_ISR *****************
 30842 ;; Defined at:
 30843 ;;		line 314 in file "mcc_generated_files/adcc.c"
 30844 ;; Parameters:    Size  Location     Type
 30845 ;;		None
 30846 ;; Auto vars:     Size  Location     Type
 30847 ;;		None
 30848 ;; Return value:  Size  Location     Type
 30849 ;;                  1    wreg      void 
 30850 ;; Registers used:
 30851 ;;		wreg, status,2, status,0, pclath, tosl
 30852 ;; Tracked objects:
 30853 ;;		On entry : 0/0
 30854 ;;		On exit  : 0/0
 30855 ;;		Unchanged: 0/0
 30856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30861 ;;Total ram usage:        0 bytes
 30862 ;; Hardware stack levels used:    1
 30863 ;; Hardware stack levels required when called:    1
 30864 ;; This function calls:
 30865 ;;		Absolute function
 30866 ;;		_ADCC_DefaultInterruptHandler
 30867 ;;		_adc_int_handler
 30868 ;; This function is called by:
 30869 ;;		Interrupt level 2
 30870 ;; This function uses a non-reentrant model
 30871 ;;
 30872                           
 30873                           	psect	text148
 30874  01A1A8                     __ptext148:
 30875                           	opt callstack 0
 30876  01A1A8                     _ADCC_ISR:
 30877                           	opt callstack 4
 30878                           
 30879                           ;incstack = 0
 30880  01A1A8  EE14  F0C2         	lfsr	1,___inthi_sp
 30881                           
 30882                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 30883  01A1AC  0139               	movlb	57	; () banked
 30884  01A1AE  95A1               	bcf	161,2,b	;volatile
 30885                           
 30886                           ; BSR set to: 57
 30887                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 30888  01A1B0  0100               	movlb	0	; () banked
 30889  01A1B2  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 30890  01A1B4  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 30891  01A1B6  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 30892  01A1B8  B4D8               	btfsc	status,2,c
 30893  01A1BA  0011               	retfie		f
 30894                           
 30895                           ; BSR set to: 0
 30896                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 30897  01A1BC  D801               	call	i2u963_48
 30898  01A1BE  0011               	retfie		f
 30899  01A1C0                     i2u963_48:
 30900  01A1C0  0005               	push	
 30901  01A1C2  6EFA               	movwf	pclath,c
 30902  01A1C4  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 30903  01A1C6  6EFD               	movwf	tosl,c
 30904  01A1C8  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 30905  01A1CA  6EFE               	movwf	tosh,c
 30906  01A1CC  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 30907  01A1CE  6EFF               	movwf	tosu,c
 30908  01A1D0  50FA               	movf	pclath,w,c
 30909  01A1D2  0012               	return		;indir
 30910  01A1D4                     __end_of_ADCC_ISR:
 30911                           	opt callstack 0
 30912                           
 30913 ;; *************** function _adc_int_t_handler *****************
 30914 ;; Defined at:
 30915 ;;		line 128 in file "daq.c"
 30916 ;; Parameters:    Size  Location     Type
 30917 ;;		None
 30918 ;; Auto vars:     Size  Location     Type
 30919 ;;		None
 30920 ;; Return value:  Size  Location     Type
 30921 ;;                  1  [STACK] void 
 30922 ;; Registers used:
 30923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 30924 ;; Tracked objects:
 30925 ;;		On entry : 3F/0
 30926 ;;		On exit  : 1/0
 30927 ;;		Unchanged: 0/0
 30928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30933 ;;Total ram usage:        0 bytes
 30934 ;; Hardware stack levels used:    1
 30935 ;; Hardware stack levels required when called:    1
 30936 ;; This function calls:
 30937 ;;		_ADCC_DischargeSampleCapacitor
 30938 ;;		_ADCC_StartConversion
 30939 ;; This function is called by:
 30940 ;;		_start_adc_scan
 30941 ;;		_ADCC_ThresholdISR
 30942 ;; This function uses a reentrant model
 30943 ;;
 30944                           
 30945                           	psect	text149
 30946  019598                     __ptext149:
 30947                           	opt callstack 0
 30948  019598                     _adc_int_t_handler:
 30949                           	opt callstack 3
 30950                           
 30951                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 30952                           
 30953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30954                           ;incstack = 0
 30955  019598  013E               	movlb	62	; () banked
 30956  01959A  51E6               	movf	230,w,b	;volatile
 30957  01959C  006F FB9C  F001    	movff	16103,btemp	;volatile
 30958  0195A2  6A02               	clrf	(btemp+1)^0,c
 30959  0195A4  0060  F004  F002   	movff	btemp,btemp+1
 30960  0195AA  6A01               	clrf	btemp^0,c
 30961  0195AC  2601               	addwf	btemp^0,f,c
 30962  0195AE  0E00               	movlw	0
 30963  0195B0  2202               	addwfc	(btemp+1)^0,f,c
 30964  0195B2  0100               	movlb	0	; () banked
 30965  0195B4  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 30966  0195B6  0D02               	mullw	2
 30967  0195B8  50F3               	movf	243,w,c
 30968  0195BA  0FCB               	addlw	low _R
 30969  0195BC  6ED9               	movwf	fsr2l,c
 30970  0195BE  6ADA               	clrf	fsr2h,c
 30971  0195C0  0060  F007  FFDE   	movff	btemp,postinc2
 30972  0195C6  0060  F00B  FFDD   	movff	btemp+1,postdec2
 30973  0195CC                     l10255:
 30974                           
 30975                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 30976  0195CC  0100               	movlb	0	; () banked
 30977  0195CE  2BEF               	incf	(_R+36)& (0+255),f,b	;volatile
 30978  0195D0  0E0D               	movlw	13
 30979  0195D2  65EF               	cpfsgt	(_R+36)& (0+255),b	;volatile
 30980  0195D4  D003               	goto	l10261
 30981                           
 30982                           ; BSR set to: 0
 30983                           ;daq.c: 136:    R.done = 1;
 30984  0195D6  0E01               	movlw	1
 30985  0195D8  6FF2               	movwf	(_R+39)& (0+255),b	;volatile
 30986  0195DA  0012               	return	
 30987  0195DC                     l10261:
 30988                           
 30989                           ; BSR set to: 0
 30990                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 30991  0195DC  0060  F3BC  F00C   	movff	_R+36,btemp+11	;volatile
 30992  0195E2  EE20  F0F0         	lfsr	2,_R+37	;volatile
 30993  0195E6  006F FF78  F009    	movff	postinc2,btemp+8
 30994  0195EC  006F FF74  F00A    	movff	postdec2,btemp+9
 30995  0195F2  2A0C               	incf	(btemp+11)^0,f,c
 30996  0195F4  D003               	goto	u960_44
 30997  0195F6                     u960_45:
 30998  0195F6  90D8               	bcf	status,0,c
 30999  0195F8  320A               	rrcf	(btemp+9)^0,f,c
 31000  0195FA  3209               	rrcf	(btemp+8)^0,f,c
 31001  0195FC                     u960_44:
 31002  0195FC  2E0C               	decfsz	(btemp+11)^0,f,c
 31003  0195FE  D7FB               	goto	u960_45
 31004  019600  A009               	btfss	(btemp+8)^0,0,c
 31005  019602  D7E4               	goto	l10255
 31006                           
 31007                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 31008  019604  EC2F  F0D4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 31009                           
 31010                           ; BSR set to: 62
 31011                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 31012  019608  0100               	movlb	0	; () banked
 31013  01960A  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 31014  01960C  0B0F               	andlw	15
 31015  01960E  6EE6               	movwf	postinc1,c
 31016  019610  ECE4  F0D3         	call	_ADCC_StartConversion	;wreg free
 31017                           
 31018                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31019  019614  0012               	return		;funcret
 31020  019616                     __end_of_adc_int_t_handler:
 31021                           	opt callstack 0
 31022                           
 31023 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 31024 ;; Defined at:
 31025 ;;		line 339 in file "mcc_generated_files/adcc.c"
 31026 ;; Parameters:    Size  Location     Type
 31027 ;;		None
 31028 ;; Auto vars:     Size  Location     Type
 31029 ;;		None
 31030 ;; Return value:  Size  Location     Type
 31031 ;;                  1  [STACK] void 
 31032 ;; Registers used:
 31033 ;;		None
 31034 ;; Tracked objects:
 31035 ;;		On entry : 3F/0
 31036 ;;		On exit  : 0/0
 31037 ;;		Unchanged: 0/0
 31038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31043 ;;Total ram usage:        0 bytes
 31044 ;; Hardware stack levels used:    1
 31045 ;; This function calls:
 31046 ;;		Nothing
 31047 ;; This function is called by:
 31048 ;;		_ADCC_Initialize
 31049 ;;		_ADCC_ISR
 31050 ;;		_ADCC_ThresholdISR
 31051 ;; This function uses a reentrant model
 31052 ;;
 31053                           
 31054                           	psect	text150
 31055  01A8AC                     __ptext150:
 31056                           	opt callstack 0
 31057  01A8AC                     _ADCC_DefaultInterruptHandler:
 31058                           	opt callstack 4
 31059                           
 31060                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31061                           
 31062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31063                           ;incstack = 0
 31064  01A8AC  0012               	return		;funcret
 31065  01A8AE                     __end_of_ADCC_DefaultInterruptHandler:
 31066                           	opt callstack 0
 31067                           
 31068 ;; *************** function _adc_int_handler *****************
 31069 ;; Defined at:
 31070 ;;		line 118 in file "daq.c"
 31071 ;; Parameters:    Size  Location     Type
 31072 ;;		None
 31073 ;; Auto vars:     Size  Location     Type
 31074 ;;		None
 31075 ;; Return value:  Size  Location     Type
 31076 ;;                  1  [STACK] void 
 31077 ;; Registers used:
 31078 ;;		None
 31079 ;; Tracked objects:
 31080 ;;		On entry : 3F/0
 31081 ;;		On exit  : 0/0
 31082 ;;		Unchanged: 0/0
 31083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31088 ;;Total ram usage:        0 bytes
 31089 ;; Hardware stack levels used:    1
 31090 ;; This function calls:
 31091 ;;		Nothing
 31092 ;; This function is called by:
 31093 ;;		_start_adc_scan
 31094 ;;		_ADCC_ISR
 31095 ;; This function uses a reentrant model
 31096 ;;
 31097                           
 31098                           	psect	text151
 31099  01A8AE                     __ptext151:
 31100                           	opt callstack 0
 31101  01A8AE                     _adc_int_handler:
 31102                           	opt callstack 4
 31103                           
 31104                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31105                           
 31106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31107                           ;incstack = 0
 31108  01A8AE  0012               	return		;funcret
 31109  01A8B0                     __end_of_adc_int_handler:
 31110                           	opt callstack 0
 31111                           
 31112 ;; *************** function _ADCC_ThresholdISR *****************
 31113 ;; Defined at:
 31114 ;;		line 327 in file "mcc_generated_files/adcc.c"
 31115 ;; Parameters:    Size  Location     Type
 31116 ;;		None
 31117 ;; Auto vars:     Size  Location     Type
 31118 ;;		None
 31119 ;; Return value:  Size  Location     Type
 31120 ;;                  1    wreg      void 
 31121 ;; Registers used:
 31122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 31123 ;; Tracked objects:
 31124 ;;		On entry : 0/0
 31125 ;;		On exit  : 0/0
 31126 ;;		Unchanged: 0/0
 31127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31130 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31131 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31132 ;;Total ram usage:        5 bytes
 31133 ;; Hardware stack levels used:    1
 31134 ;; Hardware stack levels required when called:    2
 31135 ;; This function calls:
 31136 ;;		Absolute function
 31137 ;;		_ADCC_DefaultInterruptHandler
 31138 ;;		_adc_int_t_handler
 31139 ;; This function is called by:
 31140 ;;		Interrupt level 2
 31141 ;; This function uses a non-reentrant model
 31142 ;;
 31143                           
 31144                           	psect	text152
 31145  0196EC                     __ptext152:
 31146                           	opt callstack 0
 31147  0196EC                     _ADCC_ThresholdISR:
 31148                           	opt callstack 3
 31149                           
 31150                           ;incstack = 0
 31151  0196EC  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 31152  0196F2  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 31153  0196F8  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 31154  0196FE  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 31155  019704  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 31156  01970A  EE14  F0C2         	lfsr	1,___inthi_sp
 31157                           
 31158                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 31159  01970E  0139               	movlb	57	; () banked
 31160  019710  97A1               	bcf	161,3,b	;volatile
 31161                           
 31162                           ; BSR set to: 57
 31163                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 31164  019712  0100               	movlb	0	; () banked
 31165  019714  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31166  019716  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31167  019718  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31168  01971A  B4D8               	btfsc	status,2,c
 31169  01971C  D00C               	goto	i2u965_49
 31170                           
 31171                           ; BSR set to: 0
 31172                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 31173  01971E  D801               	call	i2u965_48
 31174  019720  D00A               	goto	i2u965_49
 31175  019722                     i2u965_48:
 31176  019722  0005               	push	
 31177  019724  6EFA               	movwf	pclath,c
 31178  019726  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31179  019728  6EFD               	movwf	tosl,c
 31180  01972A  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31181  01972C  6EFE               	movwf	tosh,c
 31182  01972E  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31183  019730  6EFF               	movwf	tosu,c
 31184  019732  50FA               	movf	pclath,w,c
 31185  019734  0012               	return		;indir
 31186  019736                     i2u965_49:
 31187  019736  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 31188  01973C  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 31189  019742  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 31190  019748  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 31191  01974E  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 31192  019754  0011               	retfie		f
 31193  019756                     __end_of_ADCC_ThresholdISR:
 31194                           	opt callstack 0
 31195                           
 31196 ;; *************** function _UART1_rx_vect_isr *****************
 31197 ;; Defined at:
 31198 ;;		line 181 in file "mcc_generated_files/uart1.c"
 31199 ;; Parameters:    Size  Location     Type
 31200 ;;		None
 31201 ;; Auto vars:     Size  Location     Type
 31202 ;;		None
 31203 ;; Return value:  Size  Location     Type
 31204 ;;                  1    wreg      void 
 31205 ;; Registers used:
 31206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31207 ;; Tracked objects:
 31208 ;;		On entry : 0/0
 31209 ;;		On exit  : 0/0
 31210 ;;		Unchanged: 0/0
 31211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31216 ;;Total ram usage:        0 bytes
 31217 ;; Hardware stack levels used:    1
 31218 ;; Hardware stack levels required when called:    1
 31219 ;; This function calls:
 31220 ;;		Absolute function
 31221 ;;		_UART1_Receive_ISR
 31222 ;; This function is called by:
 31223 ;;		Interrupt level 2
 31224 ;; This function uses a non-reentrant model
 31225 ;;
 31226                           
 31227                           	psect	text153
 31228  01A484                     __ptext153:
 31229                           	opt callstack 0
 31230  01A484                     _UART1_rx_vect_isr:
 31231                           	opt callstack 4
 31232                           
 31233                           ;incstack = 0
 31234  01A484  EE14  F0C2         	lfsr	1,___inthi_sp
 31235                           
 31236                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 31237  01A488  0100               	movlb	0	; () banked
 31238  01A48A  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31239  01A48C  11B9               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31240  01A48E  11BA               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31241  01A490  B4D8               	btfsc	status,2,c
 31242  01A492  0011               	retfie		f
 31243                           
 31244                           ; BSR set to: 0
 31245                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 31246  01A494  D801               	call	i2u1168_48
 31247  01A496  0011               	retfie		f
 31248  01A498                     i2u1168_48:
 31249  01A498  0005               	push	
 31250  01A49A  6EFA               	movwf	pclath,c
 31251  01A49C  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31252  01A49E  6EFD               	movwf	tosl,c
 31253  01A4A0  51B9               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31254  01A4A2  6EFE               	movwf	tosh,c
 31255  01A4A4  51BA               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31256  01A4A6  6EFF               	movwf	tosu,c
 31257  01A4A8  50FA               	movf	pclath,w,c
 31258  01A4AA  0012               	return		;indir
 31259  01A4AC                     __end_of_UART1_rx_vect_isr:
 31260                           	opt callstack 0
 31261                           
 31262 ;; *************** function _UART1_Receive_ISR *****************
 31263 ;; Defined at:
 31264 ;;		line 192 in file "mcc_generated_files/uart1.c"
 31265 ;; Parameters:    Size  Location     Type
 31266 ;;		None
 31267 ;; Auto vars:     Size  Location     Type
 31268 ;;		None
 31269 ;; Return value:  Size  Location     Type
 31270 ;;                  1  [STACK] void 
 31271 ;; Registers used:
 31272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31273 ;; Tracked objects:
 31274 ;;		On entry : 3F/0
 31275 ;;		On exit  : 0/0
 31276 ;;		Unchanged: 0/0
 31277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31282 ;;Total ram usage:        0 bytes
 31283 ;; Hardware stack levels used:    1
 31284 ;; This function calls:
 31285 ;;		Nothing
 31286 ;; This function is called by:
 31287 ;;		_UART1_Initialize
 31288 ;;		_UART1_rx_vect_isr
 31289 ;; This function uses a reentrant model
 31290 ;;
 31291                           
 31292                           	psect	text154
 31293  01A63A                     __ptext154:
 31294                           	opt callstack 0
 31295  01A63A                     _UART1_Receive_ISR:
 31296                           	opt callstack 4
 31297                           
 31298                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 31299                           
 31300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31301                           ;incstack = 0
 31302  01A63A  0EF2               	movlw	low _uart1RxBuffer
 31303  01A63C  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 31304  01A63E  6ED9               	movwf	fsr2l,c
 31305  01A640  6ADA               	clrf	fsr2h,c
 31306  01A642  0E01               	movlw	high _uart1RxBuffer
 31307  01A644  22DA               	addwfc	fsr2h,f,c
 31308  01A646  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 31309  01A64C  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 31310                           
 31311                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 31312  01A64E  0E07               	movlw	7
 31313  01A650  6437               	cpfsgt	_uart1RxHead^0,c
 31314  01A652  D001               	goto	l11921
 31315                           
 31316                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 31317  01A654  6A37               	clrf	_uart1RxHead^0,c	;volatile
 31318  01A656                     l11921:
 31319                           
 31320                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 31321  01A656  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 31322                           
 31323                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31324  01A658  0012               	return		;funcret
 31325  01A65A                     __end_of_UART1_Receive_ISR:
 31326                           	opt callstack 0
 31327                           
 31328 ;; *************** function _UART2_tx_vect_isr *****************
 31329 ;; Defined at:
 31330 ;;		line 195 in file "mcc_generated_files/uart2.c"
 31331 ;; Parameters:    Size  Location     Type
 31332 ;;		None
 31333 ;; Auto vars:     Size  Location     Type
 31334 ;;		None
 31335 ;; Return value:  Size  Location     Type
 31336 ;;                  1    wreg      void 
 31337 ;; Registers used:
 31338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31339 ;; Tracked objects:
 31340 ;;		On entry : 0/0
 31341 ;;		On exit  : 0/0
 31342 ;;		Unchanged: 0/0
 31343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31348 ;;Total ram usage:        0 bytes
 31349 ;; Hardware stack levels used:    1
 31350 ;; Hardware stack levels required when called:    1
 31351 ;; This function calls:
 31352 ;;		Absolute function
 31353 ;;		_UART2_Transmit_ISR
 31354 ;; This function is called by:
 31355 ;;		Interrupt level 2
 31356 ;; This function uses a non-reentrant model
 31357 ;;
 31358                           
 31359                           	psect	text155
 31360  01A4AC                     __ptext155:
 31361                           	opt callstack 0
 31362  01A4AC                     _UART2_tx_vect_isr:
 31363                           	opt callstack 4
 31364                           
 31365                           ;incstack = 0
 31366  01A4AC  EE14  F0C2         	lfsr	1,___inthi_sp
 31367                           
 31368                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 31369  01A4B0  0100               	movlb	0	; () banked
 31370  01A4B2  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31371  01A4B4  11BC               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31372  01A4B6  11BD               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31373  01A4B8  B4D8               	btfsc	status,2,c
 31374  01A4BA  0011               	retfie		f
 31375                           
 31376                           ; BSR set to: 0
 31377                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 31378  01A4BC  D801               	call	i2u1170_48
 31379  01A4BE  0011               	retfie		f
 31380  01A4C0                     i2u1170_48:
 31381  01A4C0  0005               	push	
 31382  01A4C2  6EFA               	movwf	pclath,c
 31383  01A4C4  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31384  01A4C6  6EFD               	movwf	tosl,c
 31385  01A4C8  51BC               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31386  01A4CA  6EFE               	movwf	tosh,c
 31387  01A4CC  51BD               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31388  01A4CE  6EFF               	movwf	tosu,c
 31389  01A4D0  50FA               	movf	pclath,w,c
 31390  01A4D2  0012               	return		;indir
 31391  01A4D4                     __end_of_UART2_tx_vect_isr:
 31392                           	opt callstack 0
 31393                           
 31394 ;; *************** function _UART2_Transmit_ISR *****************
 31395 ;; Defined at:
 31396 ;;		line 213 in file "mcc_generated_files/uart2.c"
 31397 ;; Parameters:    Size  Location     Type
 31398 ;;		None
 31399 ;; Auto vars:     Size  Location     Type
 31400 ;;		None
 31401 ;; Return value:  Size  Location     Type
 31402 ;;                  1  [STACK] void 
 31403 ;; Registers used:
 31404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31405 ;; Tracked objects:
 31406 ;;		On entry : 3F/0
 31407 ;;		On exit  : 3B/39
 31408 ;;		Unchanged: 0/0
 31409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31414 ;;Total ram usage:        0 bytes
 31415 ;; Hardware stack levels used:    1
 31416 ;; This function calls:
 31417 ;;		Nothing
 31418 ;; This function is called by:
 31419 ;;		_UART2_Initialize
 31420 ;;		_UART2_tx_vect_isr
 31421 ;; This function uses a reentrant model
 31422 ;;
 31423                           
 31424                           	psect	text156
 31425  01A1D4                     __ptext156:
 31426                           	opt callstack 0
 31427  01A1D4                     _UART2_Transmit_ISR:
 31428                           	opt callstack 4
 31429                           
 31430                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 31431                           
 31432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31433                           ;incstack = 0
 31434  01A1D4  0E40               	movlw	64
 31435  01A1D6  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 31436  01A1D8  D010               	goto	l673
 31437                           
 31438                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 31439  01A1DA  0E54               	movlw	low _uart2TxBuffer
 31440  01A1DC  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 31441  01A1DE  6ED9               	movwf	fsr2l,c
 31442  01A1E0  6ADA               	clrf	fsr2h,c
 31443  01A1E2  0E03               	movlw	high _uart2TxBuffer
 31444  01A1E4  22DA               	addwfc	fsr2h,f,c
 31445  01A1E6  50DF               	movf	indf2,w,c
 31446  01A1E8  013D               	movlb	61	; () banked
 31447  01A1EA  6FD2               	movwf	210,b	;volatile
 31448                           
 31449                           ; BSR set to: 61
 31450  01A1EC  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 31451                           
 31452                           ; BSR set to: 61
 31453                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 31454  01A1EE  0E3F               	movlw	63
 31455  01A1F0  6433               	cpfsgt	_uart2TxTail^0,c
 31456  01A1F2  D001               	goto	l11933
 31457                           
 31458                           ; BSR set to: 61
 31459                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 31460  01A1F4  6A33               	clrf	_uart2TxTail^0,c	;volatile
 31461  01A1F6                     l11933:
 31462                           
 31463                           ; BSR set to: 61
 31464                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 31465  01A1F6  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 31466                           
 31467                           ;mcc_generated_files/uart2.c: 224:     }
 31468  01A1F8  0012               	return	
 31469  01A1FA                     l673:
 31470                           
 31471                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 31472  01A1FA  0139               	movlb	57	; () banked
 31473  01A1FC  9796               	bcf	150,3,b	;volatile
 31474                           
 31475                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31476  01A1FE  0012               	return		;funcret
 31477  01A200                     __end_of_UART2_Transmit_ISR:
 31478                           	opt callstack 0
 31479                           
 31480 ;; *************** function _UART2_rx_vect_isr *****************
 31481 ;; Defined at:
 31482 ;;		line 203 in file "mcc_generated_files/uart2.c"
 31483 ;; Parameters:    Size  Location     Type
 31484 ;;		None
 31485 ;; Auto vars:     Size  Location     Type
 31486 ;;		None
 31487 ;; Return value:  Size  Location     Type
 31488 ;;                  1    wreg      void 
 31489 ;; Registers used:
 31490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31491 ;; Tracked objects:
 31492 ;;		On entry : 0/0
 31493 ;;		On exit  : 0/0
 31494 ;;		Unchanged: 0/0
 31495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31500 ;;Total ram usage:        0 bytes
 31501 ;; Hardware stack levels used:    1
 31502 ;; Hardware stack levels required when called:    1
 31503 ;; This function calls:
 31504 ;;		Absolute function
 31505 ;;		_UART2_Receive_ISR
 31506 ;; This function is called by:
 31507 ;;		Interrupt level 2
 31508 ;; This function uses a non-reentrant model
 31509 ;;
 31510                           
 31511                           	psect	text157
 31512  01A4D4                     __ptext157:
 31513                           	opt callstack 0
 31514  01A4D4                     _UART2_rx_vect_isr:
 31515                           	opt callstack 4
 31516                           
 31517                           ;incstack = 0
 31518  01A4D4  EE14  F0C2         	lfsr	1,___inthi_sp
 31519                           
 31520                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 31521  01A4D8  0100               	movlb	0	; () banked
 31522  01A4DA  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 31523  01A4DC  11BF               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 31524  01A4DE  11C0               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 31525  01A4E0  B4D8               	btfsc	status,2,c
 31526  01A4E2  0011               	retfie		f
 31527                           
 31528                           ; BSR set to: 0
 31529                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 31530  01A4E4  D801               	call	i2u971_48
 31531  01A4E6  0011               	retfie		f
 31532  01A4E8                     i2u971_48:
 31533  01A4E8  0005               	push	
 31534  01A4EA  6EFA               	movwf	pclath,c
 31535  01A4EC  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 31536  01A4EE  6EFD               	movwf	tosl,c
 31537  01A4F0  51BF               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 31538  01A4F2  6EFE               	movwf	tosh,c
 31539  01A4F4  51C0               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 31540  01A4F6  6EFF               	movwf	tosu,c
 31541  01A4F8  50FA               	movf	pclath,w,c
 31542  01A4FA  0012               	return		;indir
 31543  01A4FC                     __end_of_UART2_rx_vect_isr:
 31544                           	opt callstack 0
 31545                           
 31546 ;; *************** function _UART2_Receive_ISR *****************
 31547 ;; Defined at:
 31548 ;;		line 233 in file "mcc_generated_files/uart2.c"
 31549 ;; Parameters:    Size  Location     Type
 31550 ;;		None
 31551 ;; Auto vars:     Size  Location     Type
 31552 ;;		None
 31553 ;; Return value:  Size  Location     Type
 31554 ;;                  1  [STACK] void 
 31555 ;; Registers used:
 31556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31557 ;; Tracked objects:
 31558 ;;		On entry : 3F/0
 31559 ;;		On exit  : 0/0
 31560 ;;		Unchanged: 0/0
 31561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31566 ;;Total ram usage:        0 bytes
 31567 ;; Hardware stack levels used:    1
 31568 ;; This function calls:
 31569 ;;		Nothing
 31570 ;; This function is called by:
 31571 ;;		_UART2_Initialize
 31572 ;;		_UART2_rx_vect_isr
 31573 ;; This function uses a reentrant model
 31574 ;;
 31575                           
 31576                           	psect	text158
 31577  01A6D2                     __ptext158:
 31578                           	opt callstack 0
 31579  01A6D2                     _UART2_Receive_ISR:
 31580                           	opt callstack 4
 31581                           
 31582                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 31583                           
 31584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31585                           ;incstack = 0
 31586  01A6D2  0E00               	movlw	low _uart2RxBuffer
 31587  01A6D4  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 31588  01A6D6  6ED9               	movwf	fsr2l,c
 31589  01A6D8  6ADA               	clrf	fsr2h,c
 31590  01A6DA  0E05               	movlw	high _uart2RxBuffer
 31591  01A6DC  22DA               	addwfc	fsr2h,f,c
 31592  01A6DE  006F F743 FFDF     	movff	15824,indf2	;volatile
 31593  01A6E4  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 31594                           
 31595                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 31596  01A6E6  2831               	incf	_uart2RxHead^0,w,c
 31597  01A6E8  B4D8               	btfsc	status,2,c
 31598                           
 31599                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 31600  01A6EA  6A31               	clrf	_uart2RxHead^0,c	;volatile
 31601                           
 31602                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 31603  01A6EC  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 31604                           
 31605                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31606  01A6EE  0012               	return		;funcret
 31607  01A6F0                     __end_of_UART2_Receive_ISR:
 31608                           	opt callstack 0
 31609                           
 31610 ;; *************** function _TMR6_ISR *****************
 31611 ;; Defined at:
 31612 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 31613 ;; Parameters:    Size  Location     Type
 31614 ;;		None
 31615 ;; Auto vars:     Size  Location     Type
 31616 ;;		None
 31617 ;; Return value:  Size  Location     Type
 31618 ;;                  1    wreg      void 
 31619 ;; Registers used:
 31620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 31621 ;; Tracked objects:
 31622 ;;		On entry : 0/0
 31623 ;;		On exit  : 0/0
 31624 ;;		Unchanged: 0/0
 31625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31630 ;;Total ram usage:        1 bytes
 31631 ;; Hardware stack levels used:    1
 31632 ;; Hardware stack levels required when called:    2
 31633 ;; This function calls:
 31634 ;;		_TMR6_CallBack
 31635 ;; This function is called by:
 31636 ;;		Interrupt level 2
 31637 ;; This function uses a non-reentrant model
 31638 ;;
 31639                           
 31640                           	psect	text159
 31641  01A728                     __ptext159:
 31642                           	opt callstack 0
 31643  01A728                     _TMR6_ISR:
 31644                           	opt callstack 3
 31645                           
 31646                           ;incstack = 0
 31647  01A728  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 31648  01A72E  EE14  F0C2         	lfsr	1,___inthi_sp
 31649                           
 31650                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 31651  01A732  0139               	movlb	57	; () banked
 31652  01A734  91A9               	bcf	169,0,b	;volatile
 31653                           
 31654                           ; BSR set to: 57
 31655                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 31656  01A736  ECEA  F0D2         	call	_TMR6_CallBack	;wreg free
 31657  01A73A  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 31658  01A740  0011               	retfie		f
 31659  01A742                     __end_of_TMR6_ISR:
 31660                           	opt callstack 0
 31661                           
 31662 ;; *************** function _TMR6_CallBack *****************
 31663 ;; Defined at:
 31664 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31665 ;; Parameters:    Size  Location     Type
 31666 ;;		None
 31667 ;; Auto vars:     Size  Location     Type
 31668 ;;		None
 31669 ;; Return value:  Size  Location     Type
 31670 ;;                  1  [STACK] void 
 31671 ;; Registers used:
 31672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 31673 ;; Tracked objects:
 31674 ;;		On entry : 3F/39
 31675 ;;		On exit  : 0/0
 31676 ;;		Unchanged: 0/0
 31677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31682 ;;Total ram usage:        0 bytes
 31683 ;; Hardware stack levels used:    1
 31684 ;; Hardware stack levels required when called:    1
 31685 ;; This function calls:
 31686 ;;		Absolute function
 31687 ;;		_TMR6_DefaultInterruptHandler
 31688 ;; This function is called by:
 31689 ;;		_TMR6_ISR
 31690 ;; This function uses a reentrant model
 31691 ;;
 31692                           
 31693                           	psect	text160
 31694  01A5D4                     __ptext160:
 31695                           	opt callstack 0
 31696  01A5D4                     _TMR6_CallBack:
 31697                           	opt callstack 3
 31698                           
 31699                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 31700                           
 31701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31702                           ;incstack = 0
 31703  01A5D4  0100               	movlb	0	; () banked
 31704  01A5D6  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31705  01A5D8  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31706  01A5DA  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31707  01A5DC  B4D8               	btfsc	status,2,c
 31708  01A5DE  0012               	return	
 31709                           
 31710                           ; BSR set to: 0
 31711                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 31712  01A5E0  D801               	call	u935_48
 31713  01A5E2  0012               	return	
 31714  01A5E4                     u935_48:
 31715  01A5E4  0005               	push	
 31716  01A5E6  6EFA               	movwf	pclath,c
 31717  01A5E8  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31718  01A5EA  6EFD               	movwf	tosl,c
 31719  01A5EC  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31720  01A5EE  6EFE               	movwf	tosh,c
 31721  01A5F0  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31722  01A5F2  6EFF               	movwf	tosu,c
 31723  01A5F4  50FA               	movf	pclath,w,c
 31724  01A5F6  0012               	return		;indir
 31725  01A5F8                     __end_of_TMR6_CallBack:
 31726                           	opt callstack 0
 31727                           
 31728 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 31729 ;; Defined at:
 31730 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 31731 ;; Parameters:    Size  Location     Type
 31732 ;;		None
 31733 ;; Auto vars:     Size  Location     Type
 31734 ;;  i               1  [STACK] unsigned char 
 31735 ;; Return value:  Size  Location     Type
 31736 ;;                  1  [STACK] void 
 31737 ;; Registers used:
 31738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 31739 ;; Tracked objects:
 31740 ;;		On entry : 3F/0
 31741 ;;		On exit  : 0/0
 31742 ;;		Unchanged: 0/0
 31743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31748 ;;Total ram usage:        0 bytes
 31749 ;; Hardware stack levels used:    1
 31750 ;; This function calls:
 31751 ;;		Nothing
 31752 ;; This function is called by:
 31753 ;;		_TMR6_Initialize
 31754 ;;		_TMR6_CallBack
 31755 ;; This function uses a reentrant model
 31756 ;;
 31757                           
 31758                           	psect	text161
 31759  019B48                     __ptext161:
 31760                           	opt callstack 0
 31761  019B48                     _TMR6_DefaultInterruptHandler:
 31762                           	opt callstack 0
 31763                           
 31764                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31765  019B48  52E6               	movf	postinc1,f,c
 31766                           
 31767                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 31768                           ;stkvar	_i @ sp[(-1)+0]
 31769                           
 31770                           ;incstack = 0
 31771  019B4A  0EFF               	movlw	-1
 31772  019B4C  6AE3               	clrf	plusw1,c
 31773  019B4E                     l9573:
 31774                           
 31775                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 31776                           ;stkvar	_i @ sp[(-1)+0]
 31777  019B4E  0EFF               	movlw	-1
 31778  019B50  50E3               	movf	plusw1,w,c
 31779  019B52  0D02               	mullw	2
 31780  019B54  0EDA               	movlw	low _tickCount
 31781  019B56  24F3               	addwf	243,w,c
 31782  019B58  6ED9               	movwf	fsr2l,c
 31783  019B5A  0E01               	movlw	high _tickCount
 31784  019B5C  20F4               	addwfc	prodh,w,c
 31785  019B5E  6EDA               	movwf	fsr2h,c
 31786  019B60  50DE               	movf	postinc2,w,c
 31787  019B62  10DE               	iorwf	postinc2,w,c
 31788  019B64  B4D8               	btfsc	status,2,c
 31789  019B66  D00C               	goto	l9577
 31790                           
 31791                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 31792                           ;stkvar	_i @ sp[(-1)+0]
 31793  019B68  0EFF               	movlw	-1
 31794  019B6A  50E3               	movf	plusw1,w,c
 31795  019B6C  0D02               	mullw	2
 31796  019B6E  0EDA               	movlw	low _tickCount
 31797  019B70  24F3               	addwf	243,w,c
 31798  019B72  6ED9               	movwf	fsr2l,c
 31799  019B74  0E01               	movlw	high _tickCount
 31800  019B76  20F4               	addwfc	prodh,w,c
 31801  019B78  6EDA               	movwf	fsr2h,c
 31802  019B7A  06DE               	decf	postinc2,f,c
 31803  019B7C  0E00               	movlw	0
 31804  019B7E  5ADD               	subwfb	postdec2,f,c
 31805  019B80                     l9577:
 31806                           
 31807                           ;mcc_generated_files/tmr6.c: 207:  }
 31808                           ;stkvar	_i @ sp[(-1)+0]
 31809  019B80  0EFF               	movlw	-1
 31810  019B82  2AE3               	incf	plusw1,f,c
 31811                           
 31812                           ;stkvar	_i @ sp[(-1)+0]
 31813  019B84  0EFF               	movlw	-1
 31814  019B86  006F FF8C  F001    	movff	plusw1,btemp
 31815  019B8C  0E0B               	movlw	11
 31816  019B8E  6401               	cpfsgt	btemp^0,c
 31817  019B90  D7DE               	goto	l9573
 31818                           
 31819                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31820  019B92  52E5               	movf	postdec1,f,c
 31821  019B94  0012               	return		;funcret
 31822  019B96                     __end_of_TMR6_DefaultInterruptHandler:
 31823                           	opt callstack 0
 31824                           
 31825 ;; *************** function _DMA1_DMASCNT_ISR *****************
 31826 ;; Defined at:
 31827 ;;		line 126 in file "mcc_generated_files/dma1.c"
 31828 ;; Parameters:    Size  Location     Type
 31829 ;;		None
 31830 ;; Auto vars:     Size  Location     Type
 31831 ;;		None
 31832 ;; Return value:  Size  Location     Type
 31833 ;;                  1    wreg      void 
 31834 ;; Registers used:
 31835 ;;		None
 31836 ;; Tracked objects:
 31837 ;;		On entry : 0/0
 31838 ;;		On exit  : 3F/0
 31839 ;;		Unchanged: 0/0
 31840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31845 ;;Total ram usage:        0 bytes
 31846 ;; Hardware stack levels used:    1
 31847 ;; This function calls:
 31848 ;;		Nothing
 31849 ;; This function is called by:
 31850 ;;		Interrupt level 2
 31851 ;; This function uses a non-reentrant model
 31852 ;;
 31853                           
 31854                           	psect	text162
 31855  01A818                     __ptext162:
 31856                           	opt callstack 0
 31857  01A818                     _DMA1_DMASCNT_ISR:
 31858                           	opt callstack 5
 31859                           
 31860                           ;incstack = 0
 31861  01A818  EE14  F0C2         	lfsr	1,___inthi_sp
 31862                           
 31863                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 31864  01A81C  0139               	movlb	57	; () banked
 31865  01A81E  91A2               	bcf	162,0,b	;volatile
 31866                           
 31867                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 31868  01A820  0100               	movlb	0	; () banked
 31869  01A822  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 31870                           
 31871                           ; BSR set to: 0
 31872  01A824  0011               	retfie		f
 31873  01A826                     __end_of_DMA1_DMASCNT_ISR:
 31874                           	opt callstack 0
 31875                           
 31876 ;; *************** function _DMA1_DMADCNT_ISR *****************
 31877 ;; Defined at:
 31878 ;;		line 134 in file "mcc_generated_files/dma1.c"
 31879 ;; Parameters:    Size  Location     Type
 31880 ;;		None
 31881 ;; Auto vars:     Size  Location     Type
 31882 ;;		None
 31883 ;; Return value:  Size  Location     Type
 31884 ;;                  1    wreg      void 
 31885 ;; Registers used:
 31886 ;;		None
 31887 ;; Tracked objects:
 31888 ;;		On entry : 0/0
 31889 ;;		On exit  : 3F/39
 31890 ;;		Unchanged: 0/0
 31891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31896 ;;Total ram usage:        0 bytes
 31897 ;; Hardware stack levels used:    1
 31898 ;; This function calls:
 31899 ;;		Nothing
 31900 ;; This function is called by:
 31901 ;;		Interrupt level 2
 31902 ;; This function uses a non-reentrant model
 31903 ;;
 31904                           
 31905                           	psect	text163
 31906  01A83C                     __ptext163:
 31907                           	opt callstack 0
 31908  01A83C                     _DMA1_DMADCNT_ISR:
 31909                           	opt callstack 5
 31910                           
 31911                           ; BSR set to: 0
 31912                           ;incstack = 0
 31913  01A83C  EE14  F0C2         	lfsr	1,___inthi_sp
 31914                           
 31915                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 31916  01A840  0139               	movlb	57	; () banked
 31917  01A842  93A2               	bcf	162,1,b	;volatile
 31918                           
 31919                           ; BSR set to: 57
 31920  01A844  0011               	retfie		f
 31921  01A846                     __end_of_DMA1_DMADCNT_ISR:
 31922                           	opt callstack 0
 31923                           
 31924 ;; *************** function _DMA1_DMAA_ISR *****************
 31925 ;; Defined at:
 31926 ;;		line 144 in file "mcc_generated_files/dma1.c"
 31927 ;; Parameters:    Size  Location     Type
 31928 ;;		None
 31929 ;; Auto vars:     Size  Location     Type
 31930 ;;		None
 31931 ;; Return value:  Size  Location     Type
 31932 ;;                  1    wreg      void 
 31933 ;; Registers used:
 31934 ;;		None
 31935 ;; Tracked objects:
 31936 ;;		On entry : 0/0
 31937 ;;		On exit  : 3F/39
 31938 ;;		Unchanged: 0/0
 31939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31944 ;;Total ram usage:        0 bytes
 31945 ;; Hardware stack levels used:    1
 31946 ;; This function calls:
 31947 ;;		Nothing
 31948 ;; This function is called by:
 31949 ;;		Interrupt level 2
 31950 ;; This function uses a non-reentrant model
 31951 ;;
 31952                           
 31953                           	psect	text164
 31954  01A848                     __ptext164:
 31955                           	opt callstack 0
 31956  01A848                     _DMA1_DMAA_ISR:
 31957                           	opt callstack 5
 31958                           
 31959                           ; BSR set to: 57
 31960                           ;incstack = 0
 31961  01A848  EE14  F0C2         	lfsr	1,___inthi_sp
 31962                           
 31963                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 31964  01A84C  0139               	movlb	57	; () banked
 31965  01A84E  97A2               	bcf	162,3,b	;volatile
 31966                           
 31967                           ; BSR set to: 57
 31968  01A850  0011               	retfie		f
 31969  01A852                     __end_of_DMA1_DMAA_ISR:
 31970                           	opt callstack 0
 31971                           
 31972 ;; *************** function _DMA1_DMAOR_ISR *****************
 31973 ;; Defined at:
 31974 ;;		line 155 in file "mcc_generated_files/dma1.c"
 31975 ;; Parameters:    Size  Location     Type
 31976 ;;		None
 31977 ;; Auto vars:     Size  Location     Type
 31978 ;;		None
 31979 ;; Return value:  Size  Location     Type
 31980 ;;                  1    wreg      void 
 31981 ;; Registers used:
 31982 ;;		None
 31983 ;; Tracked objects:
 31984 ;;		On entry : 0/0
 31985 ;;		On exit  : 3F/39
 31986 ;;		Unchanged: 0/0
 31987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31992 ;;Total ram usage:        0 bytes
 31993 ;; Hardware stack levels used:    1
 31994 ;; This function calls:
 31995 ;;		Nothing
 31996 ;; This function is called by:
 31997 ;;		Interrupt level 2
 31998 ;; This function uses a non-reentrant model
 31999 ;;
 32000                           
 32001                           	psect	text165
 32002  01A854                     __ptext165:
 32003                           	opt callstack 0
 32004  01A854                     _DMA1_DMAOR_ISR:
 32005                           	opt callstack 5
 32006                           
 32007                           ; BSR set to: 57
 32008                           ;incstack = 0
 32009  01A854  EE14  F0C2         	lfsr	1,___inthi_sp
 32010                           
 32011                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 32012  01A858  0139               	movlb	57	; () banked
 32013  01A85A  95A2               	bcf	162,2,b	;volatile
 32014                           
 32015                           ; BSR set to: 57
 32016  01A85C  0011               	retfie		f
 32017  01A85E                     __end_of_DMA1_DMAOR_ISR:
 32018                           	opt callstack 0
 32019                           
 32020                           ;
 32021                           ; Interrupt Vector Table @ 0x8
 32022                           ;
 32023                           
 32024                           	psect	ivt0x8
 32025  000008                     __pivt0x8:
 32026                           	opt callstack 0
 32027  000008                     ivt0x8_base:
 32028                           	opt callstack 0
 32029                           
 32030                           ; Vector 0 : SWINT
 32031  000008  6A28               	dw	_Default_ISR shr (0+2)
 32032                           
 32033                           ; Vector 1 : HLVD
 32034  00000A  6A28               	dw	_Default_ISR shr (0+2)
 32035                           
 32036                           ; Vector 2 : OSF
 32037  00000C  6A28               	dw	_Default_ISR shr (0+2)
 32038                           
 32039                           ; Vector 3 : CSW
 32040  00000E  6A28               	dw	_Default_ISR shr (0+2)
 32041                           
 32042                           ; Vector 4 : NVM
 32043  000010  6A28               	dw	_Default_ISR shr (0+2)
 32044                           
 32045                           ; Vector 5 : SCAN
 32046  000012  6A28               	dw	_Default_ISR shr (0+2)
 32047                           
 32048                           ; Vector 6 : CRC
 32049  000014  6A28               	dw	_Default_ISR shr (0+2)
 32050                           
 32051                           ; Vector 7 : IOC
 32052  000016  6A28               	dw	_Default_ISR shr (0+2)
 32053                           
 32054                           ; Vector 8 : INT0
 32055  000018  6A02               	dw	_INT0_ISR shr (0+2)
 32056                           
 32057                           ; Vector 9 : ZCD
 32058  00001A  6A28               	dw	_Default_ISR shr (0+2)
 32059                           
 32060                           ; Vector 10 : AD
 32061  00001C  686A               	dw	_ADCC_ISR shr (0+2)
 32062                           
 32063                           ; Vector 11 : ADT
 32064  00001E  65BB               	dw	_ADCC_ThresholdISR shr (0+2)
 32065                           
 32066                           ; Vector 12 : CMP1
 32067  000020  6A28               	dw	_Default_ISR shr (0+2)
 32068                           
 32069                           ; Vector 13 : SMT1
 32070  000022  6A28               	dw	_Default_ISR shr (0+2)
 32071                           
 32072                           ; Vector 14 : SMT1PRA
 32073  000024  6A28               	dw	_Default_ISR shr (0+2)
 32074                           
 32075                           ; Vector 15 : SMT1PRW
 32076  000026  6A28               	dw	_Default_ISR shr (0+2)
 32077                           
 32078                           ; Vector 16 : DMA1SCNT
 32079  000028  6A06               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 32080                           
 32081                           ; Vector 17 : DMA1DCNT
 32082  00002A  6A0F               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 32083                           
 32084                           ; Vector 18 : DMA1OR
 32085  00002C  6A15               	dw	_DMA1_DMAOR_ISR shr (0+2)
 32086                           
 32087                           ; Vector 19 : DMA1A
 32088  00002E  6A12               	dw	_DMA1_DMAA_ISR shr (0+2)
 32089                           
 32090                           ; Vector 20 : SPI1RX
 32091  000030  6A28               	dw	_Default_ISR shr (0+2)
 32092                           
 32093                           ; Vector 21 : SPI1TX
 32094  000032  6A28               	dw	_Default_ISR shr (0+2)
 32095                           
 32096                           ; Vector 22 : SPI1
 32097  000034  6A28               	dw	_Default_ISR shr (0+2)
 32098                           
 32099                           ; Vector 23 : I2C1RX
 32100  000036  6A28               	dw	_Default_ISR shr (0+2)
 32101                           
 32102                           ; Vector 24 : I2C1TX
 32103  000038  6A28               	dw	_Default_ISR shr (0+2)
 32104                           
 32105                           ; Vector 25 : I2C1
 32106  00003A  6A28               	dw	_Default_ISR shr (0+2)
 32107                           
 32108                           ; Vector 26 : I2C1E
 32109  00003C  6A28               	dw	_Default_ISR shr (0+2)
 32110                           
 32111                           ; Vector 27 : U1RX
 32112  00003E  6921               	dw	_UART1_rx_vect_isr shr (0+2)
 32113                           
 32114                           ; Vector 28 : U1TX
 32115  000040  6A28               	dw	_Default_ISR shr (0+2)
 32116                           
 32117                           ; Vector 29 : U1E
 32118  000042  6A28               	dw	_Default_ISR shr (0+2)
 32119                           
 32120                           ; Vector 30 : U1
 32121  000044  6A28               	dw	_Default_ISR shr (0+2)
 32122                           
 32123                           ; Vector 31 : TMR0
 32124  000046  6A28               	dw	_Default_ISR shr (0+2)
 32125                           
 32126                           ; Vector 32 : TMR1
 32127  000048  6A28               	dw	_Default_ISR shr (0+2)
 32128                           
 32129                           ; Vector 33 : TMR1G
 32130  00004A  6A28               	dw	_Default_ISR shr (0+2)
 32131                           
 32132                           ; Vector 34 : TMR2
 32133  00004C  6A28               	dw	_Default_ISR shr (0+2)
 32134                           
 32135                           ; Vector 35 : CCP1
 32136  00004E  6A28               	dw	_Default_ISR shr (0+2)
 32137                           
 32138                           ; Vector 36 : Undefined
 32139  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 32140                           
 32141                           ; Vector 37 : NCO1
 32142  000052  6A28               	dw	_Default_ISR shr (0+2)
 32143                           
 32144                           ; Vector 38 : CWG1
 32145  000054  6A28               	dw	_Default_ISR shr (0+2)
 32146                           
 32147                           ; Vector 39 : CLC1
 32148  000056  6A28               	dw	_Default_ISR shr (0+2)
 32149                           
 32150                           ; Vector 40 : INT1
 32151  000058  67C3               	dw	_INT1_ISR shr (0+2)
 32152                           
 32153                           ; Vector 41 : CMP2
 32154  00005A  6A28               	dw	_Default_ISR shr (0+2)
 32155                           
 32156                           ; Vector 42 : DMA2SCNT
 32157  00005C  6A28               	dw	_Default_ISR shr (0+2)
 32158                           
 32159                           ; Vector 43 : DMA2DCNT
 32160  00005E  6A28               	dw	_Default_ISR shr (0+2)
 32161                           
 32162                           ; Vector 44 : DMA2OR
 32163  000060  6A28               	dw	_Default_ISR shr (0+2)
 32164                           
 32165                           ; Vector 45 : DMA2A
 32166  000062  6A28               	dw	_Default_ISR shr (0+2)
 32167                           
 32168                           ; Vector 46 : I2C2RX
 32169  000064  6A28               	dw	_Default_ISR shr (0+2)
 32170                           
 32171                           ; Vector 47 : I2C2TX
 32172  000066  6A28               	dw	_Default_ISR shr (0+2)
 32173                           
 32174                           ; Vector 48 : I2C2
 32175  000068  6A28               	dw	_Default_ISR shr (0+2)
 32176                           
 32177                           ; Vector 49 : I2C2E
 32178  00006A  6A28               	dw	_Default_ISR shr (0+2)
 32179                           
 32180                           ; Vector 50 : U2RX
 32181  00006C  6935               	dw	_UART2_rx_vect_isr shr (0+2)
 32182                           
 32183                           ; Vector 51 : U2TX
 32184  00006E  692B               	dw	_UART2_tx_vect_isr shr (0+2)
 32185                           
 32186                           ; Vector 52 : U2E
 32187  000070  6A28               	dw	_Default_ISR shr (0+2)
 32188                           
 32189                           ; Vector 53 : U2
 32190  000072  6A28               	dw	_Default_ISR shr (0+2)
 32191                           
 32192                           ; Vector 54 : TMR3
 32193  000074  5EFE               	dw	_TMR3_ISR shr (0+2)
 32194                           
 32195                           ; Vector 55 : TMR3G
 32196  000076  6A28               	dw	_Default_ISR shr (0+2)
 32197                           
 32198                           ; Vector 56 : TMR4
 32199  000078  6A28               	dw	_Default_ISR shr (0+2)
 32200                           
 32201                           ; Vector 57 : CCP2
 32202  00007A  6A28               	dw	_Default_ISR shr (0+2)
 32203                           
 32204                           ; Vector 58 : Undefined
 32205  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 32206                           
 32207                           ; Vector 59 : CWG2
 32208  00007E  6A28               	dw	_Default_ISR shr (0+2)
 32209                           
 32210                           ; Vector 60 : CLC2
 32211  000080  6A28               	dw	_Default_ISR shr (0+2)
 32212                           
 32213                           ; Vector 61 : INT2
 32214  000082  6A28               	dw	_Default_ISR shr (0+2)
 32215                           
 32216                           ; Vector 62 : Undefined
 32217  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 32218                           
 32219                           ; Vector 63 : Undefined
 32220  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 32221                           
 32222                           ; Vector 64 : Undefined
 32223  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 32224                           
 32225                           ; Vector 65 : Undefined
 32226  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 32227                           
 32228                           ; Vector 66 : Undefined
 32229  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 32230                           
 32231                           ; Vector 67 : Undefined
 32232  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 32233                           
 32234                           ; Vector 68 : Undefined
 32235  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 32236                           
 32237                           ; Vector 69 : Undefined
 32238  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 32239                           
 32240                           ; Vector 70 : TMR5
 32241  000094  667E               	dw	_TMR5_ISR shr (0+2)
 32242                           
 32243                           ; Vector 71 : TMR5G
 32244  000096  6A28               	dw	_Default_ISR shr (0+2)
 32245                           
 32246                           ; Vector 72 : TMR6
 32247  000098  69CA               	dw	_TMR6_ISR shr (0+2)
 32248                           
 32249                           ; Vector 73 : CCP3
 32250  00009A  6A28               	dw	_Default_ISR shr (0+2)
 32251                           
 32252                           ; Vector 74 : CWG3
 32253  00009C  6A28               	dw	_Default_ISR shr (0+2)
 32254                           
 32255                           ; Vector 75 : CLC3
 32256  00009E  6A28               	dw	_Default_ISR shr (0+2)
 32257                           
 32258                           ; Vector 76 : Undefined
 32259  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 32260                           
 32261                           ; Vector 77 : Undefined
 32262  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 32263                           
 32264                           ; Vector 78 : Undefined
 32265  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 32266                           
 32267                           ; Vector 79 : Undefined
 32268  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 32269                           
 32270                           ; Vector 80 : CCP4
 32271  0000A8  6A28               	dw	_Default_ISR shr (0+2)
 32272                           
 32273                           ; Vector 81 : CLC4
 32274  0000AA  6A28               	dw	_Default_ISR shr (0+2)
 32275  0000AC                     ivt0x8_undefint:
 32276                           	opt callstack 0
 32277  0000AC  00FF               	reset	
 32278                           
 32279                           	psect	text166
 32280  000000                     __ptext166:
 32281                           	opt callstack 0
 32282                           
 32283                           	psect	rparam
 32284  0000                     
 32285                           	psect	temp
 32286  000001                     btemp:
 32287                           	opt callstack 0
 32288  000001                     	ds	32
 32289  0000                     wtemp0	set	btemp
 32290  0000                     wtemp1	set	btemp+2
 32291  0000                     wtemp2	set	btemp+4
 32292  0000                     wtemp3	set	btemp+6
 32293  0000                     wtemp4	set	btemp+8
 32294  0000                     wtemp5	set	btemp+10
 32295  0000                     wtemp8	set	btemp+1
 32296  0000                     ttemp0	set	btemp
 32297  0000                     ttemp1	set	btemp+3
 32298  0000                     ttemp2	set	btemp+6
 32299  0000                     ttemp3	set	btemp+9
 32300  0000                     ttemp5	set	btemp+1
 32301  0000                     ttemp6	set	btemp+4
 32302  0000                     ttemp7	set	btemp+8
 32303  0000                     ltemp0	set	btemp
 32304  0000                     ltemp1	set	btemp+4
 32305  0000                     ltemp2	set	btemp+8
 32306  0000                     lltemp0	set	btemp
 32307  0000                     lltemp1	set	btemp+8
 32308  0000                     lltemp2	set	btemp+16
 32309  0000                     lltemp3	set	btemp+24
 32310                           tosu	equ	0x3FFF
 32311                           tosh	equ	0x3FFE
 32312                           tosl	equ	0x3FFD
 32313                           stkptr	equ	0x3FFC
 32314                           pclatu	equ	0x3FFB
 32315                           pclath	equ	0x3FFA
 32316                           pcl	equ	0x3FF9
 32317                           tblptru	equ	0x3FF8
 32318                           tblptrh	equ	0x3FF7
 32319                           tblptrl	equ	0x3FF6
 32320                           tablat	equ	0x3FF5
 32321                           prodh	equ	0x3FF4
 32322                           prodl	equ	0x3FF3
 32323                           indf0	equ	0x3FEF
 32324                           postinc0	equ	0x3FEE
 32325                           postdec0	equ	0x3FED
 32326                           preinc0	equ	0x3FEC
 32327                           plusw0	equ	0x3FEB
 32328                           fsr0h	equ	0x3FEA
 32329                           fsr0l	equ	0x3FE9
 32330                           wreg	equ	0x3FE8
 32331                           indf1	equ	0x3FE7
 32332                           postinc1	equ	0x3FE6
 32333                           postdec1	equ	0x3FE5
 32334                           preinc1	equ	0x3FE4
 32335                           plusw1	equ	0x3FE3
 32336                           fsr1h	equ	0x3FE2
 32337                           fsr1l	equ	0x3FE1
 32338                           bsr	equ	0x3FE0
 32339                           indf2	equ	0x3FDF
 32340                           postinc2	equ	0x3FDE
 32341                           postdec2	equ	0x3FDD
 32342                           preinc2	equ	0x3FDC
 32343                           plusw2	equ	0x3FDB
 32344                           fsr2h	equ	0x3FDA
 32345                           fsr2l	equ	0x3FD9
 32346                           status	equ	0x3FD8


Data Sizes:
    Strings     538
    Constant    372
    Data        965
    BSS         1077
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     154
    BANK1           256      0     250
    BANK2           256     25     221
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_83(CODE[1]), STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_80(CODE[3]), STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), 
		 -> STR_61(CODE[3]), STR_57(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_80(CODE[3]), STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), 
		 -> STR_61(CODE[3]), STR_57(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), 
		 -> STR_20(CODE[19]), STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), 
		 -> STR_20(CODE[19]), STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), 
		 -> STR_20(CODE[19]), STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5785_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 79
		 -> STR_46(CODE[79]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4381tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  349956
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31208
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186304
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92899
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62850
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62568
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31177
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35811
                                              0 BANK2     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35721
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           4     4      0   35721
                         _StartTimer
                       _Volts_to_SOC
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       _Volts_to_SOC
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       ___xxtofl
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     19      DD       9       86.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4FF      58        0.0%
DATA                 0      0     821       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec  9 03:39:29 2019

                     _SPI1_Exchange8bit A65A                __end_of_set_display_info A6D2  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 00A5  
                                     _R 00CB                                       _S 0060  
                                     _T FD41                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler A3BA            __end_of_start_switch_handler A63A  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FDD1                  __end_of_FVR_Initialize A886  
                           __CFG_LVP$ON 000000                                     l169 A7AE  
                                   l807 A668                                     l673 A1FA  
                                   _GIE 01FE97                                     _abs 9C28  
                                   _pad 847A                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize A75A                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack A5B0                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0096                           _INT1_CallBack A544  
                          __CFG_ZCD$OFF 000000                                    l1000 9EC6  
                                  l2001 84D6                                    l2021 4CEC  
                                  l2101 0B1A                                    l1316 2416  
                                  l1308 224E                                    l1333 2A6A  
                                  l1414 994C                                    l1326 24B4  
                                  l1318 241C                                    l2160 57F8  
                                  l1328 257A                                    l2057 123A  
                                  l2225 21E6                                    l1329 2688  
                                  l3042 8358                                    l2139 61A4  
                       _timer3ReloadVal 0027                                    l1188 9F06  
                                  l2086 066A                                    l2175 50D2  
                                  l1632 9F66                                    l2521 7B1A  
                                  l1641 6D7E                                    l1554 8FD6  
                                  l1642 6EDA                                    l3324 958E  
                                  l2517 8D0A                                    l3309 6CC2  
                                  l1573 9F9A                                    l1558 92DE  
                                  l2528 7BEE                                    l3337 950A  
                                  l1649 869A                                    l1737 4C08  
                                  l2555 791C                                    l1780 7494  
                  _ADCC_StartConversion A7C8                                    l2807 3912  
                                  l2840 4758                                    l1689 A6CE  
                                  l1857 9404                                    l1866 89B4  
                                  l2916 70D8                                    l7111 33AC  
                                  l7105 3366                                    l8001 7888  
                                  l2795 3A82                                    l7123 3416  
                                  l2947 9C68                                    l8011 78CA  
                                  l8003 78A4                                    l2939 762A  
                                  l2876 32C6                                    l7301 3A32  
                                  l7213 3776                                    l7141 34BE  
                                  l7133 346C                                    l7117 33E4  
                                  l7109 337C                                    l7215 3788  
                                  l7223 37C4                                    l7135 349C  
                                  l7071 90AA                                    l7129 3456  
                                  l7073 90CC                                    l8009 78B4  
                                  l8025 7682                                    l2978 6862  
                                  l7307 3A62                                    l7235 389C  
                                  l7219 3792                                    l7171 35FC  
                                  l7411 5684                                    l7253 3934  
                                  l7245 38F6                                    l7237 38C2  
                                  l7181 366E                                    l7341 9C58  
                                  l7421 578A                                    l7413 56D4  
                                  l8037 7754                                    l7255 3946  
                                  l7191 36AA                                    l9113 9B22  
                                  l7273 3980                                    l7185 368E  
                                  l8073 9AE6                                    l7417 571C  
                                  l8057 7F8E                                    l8049 7EE2  
                                  l9201 70B8                                    l9105 A2B4  
                                  l7259 3952                                    l7187 36A0  
                                  l7195 36DA                                    l7099 3326  
                                  l7515 69FE                                    l7507 6952  
                                  l7355 75C8                                    l7701 2B72  
                                  l7285 39DE                                    l7269 397A  
                                  l7461 642E                                    l7621 4592  
                                  l7613 4560                                    l7605 44FA  
                                  l7541 427E                                    l7365 7622  
                                  l9141 91CE                                    l7295 3A0A  
                                  l7455 63DA                                    l7631 45D4  
                                  l7607 450C                                    l7615 4564  
                                  l7535 423E                                    l7359 75CC  
                                  l7383 957E                                    l7439 94FA  
                                  l7641 461E                                    l7561 435C  
                                  l7545 4294                                    l9073 9FA4  
                                  l9145 9236                                    l9137 91C6  
                                  l7803 314C                                    l7715 2C0A  
                                  l7299 3A22                                    l7467 6474  
                                  l7627 45AE                                    l7555 431C  
                                  l7547 42C4                                    l9171 6FB8  
                                  l7813 31C0                                    l7717 2C10  
                                  l7709 2BCA                                    l8701 674E  
                                  l7661 46D4                                    l7645 4624  
                                  l7573 43E0                                    l7565 4372  
                                  l7397 5566                                    l9181 7022  
                                  l9173 6FD6                                    l9149 923A  
                                  l7831 3274                                    l7823 3230  
                                  l7727 2C62                                    l7719 2C40  
                                  l7479 6546                                    l7903 8394  
                                  l7655 4698                                    l7567 43A2  
                                  l9191 7056                                    l9183 7038  
                                  l9167 6F94                                    l9159 6F28  
                                  l7833 328E                                    l7817 3206  
                                  l8705 67B6                                    l7673 472C  
                                  l9169 6FA2                                    l7691 2AFC  
                                  l8715 6852                                    l7499 68CA  
                                  l7907 83AC                                    l7675 473C  
                                  l7667 4704                                    l7587 4434  
                                  l7579 441A                                    l8731 6B34  
                                  l9179 7004                                    l7853 7D7E  
                                  l7925 8460                                    l7917 842C  
                                  l7597 44C4                                    l7941 8D08  
                                  l7933 8C92                                    l8733 6BA0  
                                  l9631 731A                                    l9801 8152  
                                  l7785 30D6                                    l7697 2B3C  
                                  l8681 6634                                    l7865 7DB4  
                                  l7937 8CD4                                    l9713 4764  
                                  l7779 30BA                                    l7699 2B42  
                                  l9643 735A                                    l7859 7D94  
                                  l7955 7B68                                    l9573 9B4E  
                                  l9821 8224                                    l9813 81B6  
                                  l9805 815A                                    l7789 30FC  
                                  l7949 7AD8                                    l9741 49BE  
                                  l9733 498C                                    l9807 8186  
                                  l7799 3146                                    l9639 7346  
                                  l8695 66D4                                    l8679 6612  
                                  l7887 7E8E                                    l7879 7E5A  
                                  l7967 7BEC                                    l7959 7BB6  
                                  l7975 9BFE                                    l9719 4794  
                                  l9577 9B80                                    l8697 66EC  
                                  l8689 66A8                                    l7985 7806  
                                  l9753 4B3A                                    l9745 4A5A  
                                  l9729 48B2                                    l9833 93BE  
                                  l8699 6710                                    l7899 8382  
                                  l8981 A2EA                                    l9677 9F7C  
                                  l9759 4BD6                                    l9767 4BE8  
                                  STR_1 FF53                                    STR_2 FFA5  
                                  l9793 8128                                    STR_3 FFE3  
                                  STR_4 FF42                                    l9795 8138  
                                  STR_5 FF64                                    STR_6 FFA5  
                                  l9797 813E                                    STR_7 FFE3  
                                  STR_8 FF31                                    l9799 8144  
                                  STR_9 FF86                                    l9987 9EAE  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  u5010 A10E                                    _T2PR 003FAB  
                                  u5020 A110                                    u5120 3622  
                                  u6000 6A36                                    u5130 3642  
                                  u5131 363C                                    u6020 6A88  
                                  u5320 3958                                    u5240 37BA  
                                  u6200 4616                                    u5410 39EE  
                                  u5170 36D2                                    _T6PR 003F93  
                                  u5340 3972                                    u5180 36F2  
                                  u5148 3644                                    _PMD0 0039C0  
                                  u5245 37AA                                    _PMD1 0039C1  
                                  u5510 9C3C                                    _PMD2 0039C2  
                                  u5175 36C2                                    _PMD3 0039C3  
                                  u5280 38E4                                    u6240 4672  
                                  u6160 458C                                    u5520 754C  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u6250 46AC                                    u5610 953C  
                                  u5450 A0DE                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u6420 313E  
                                  u5380 39CE                                    u6260 46E8  
                                  u5620 953E                                    u5460 A0E0  
                                  u6245 4662                                    u5525 7542  
                                  u6350 2C50                                    u8110 67FC  
                                  u5710 5702                                    u5800 A140  
                                  u8120 67FE                                    u6600 83D8  
                                  u5640 54FE                                    u8200 6C68  
                                  u5385 39BE                                    u6530 7DE0  
                                  u5570 761A                                    u5650 554A  
                                  u8210 6C96                                    u5715 56F8  
                                  u6460 319A                                    u5820 63D4  
                                  u6620 844C                                    u5580 761C  
                                  u5740 9DBE                                    u9020 4A9E  
                                  u6365 2DE4                                    u5565 75FC  
                                  u5645 54F4                                    u8205 6C62  
                                  u6470 31D4                                    u9030 A604  
                                  u5910 65D0                                    u6550 7E7A  
                                  u5750 9DC0                                    u9014 4A96  
                                  u6375 2EAC                                    u8207 6C54  
                                  u9015 4A90                                    u6480 321A  
                                  u5840 642A                                    u6720 9BFA  
                                  u6800 78D2                                    u8160 6BCE  
                                  u5760 94B8                                    u6465 318A  
                                  u6385 3074                                    u8217 6C88  
                                  u8090 66A4                                    u6730 77E6  
                                  u5690 562A                                    u5770 94BA  
                                  u5851 6434                                    u5675 5584  
                                  u9036 A606                                    u4980 90FA  
                                  u5860 646E                                    u5940 68C4  
                                  u6660 8D04                                    u6820 78FC  
                                  u6740 77FA                                    u5676 558A  
                                  u6900 7F0E                                    u9140 93AA  
                                  u5677 5598                                    u5790 A13E  
                                  u5870 64A0                                    u6750 7834  
                                  u6735 77DC                                    u5695 5620  
                                  u8167 6BC0                                    u6831 7642  
                                  u5960 691A                                    u6840 767C  
                                  u6920 7FC6                                    u5890 657E  
                                  u5970 694C                                    u6850 76AE  
                                  u9170 93F0                                    u4987 90EC  
                                  u6755 782A                                    u6940 9AC2  
                                  u5980 697E                                    u6950 9AE2  
                                  u6870 778C                                    u8710 704C  
                                  u9158 93AC                                    u6890 7EDC  
                                  u9188 93F2                                    u8750 9764  
                                  u8850 72F8                                    u8914 477E  
                                  _PLLR 01CEE0                                    u8595 9DFA  
                                  u8915 4778                                    u8934 47AE  
                                  u8775 9798                                    u8935 47A8  
                                  u8776 979A                                    u8768 9766  
                                  u8954 47D0                                    u8955 47CA  
                                  u9870 8262                                    u9950 8C3E  
                                  u8974 49A6                                    u8975 49A0  
                                  u9890 82DE                                    u8994 4A74  
                                  u8995 4A6E                                    u9957 8C30  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR A1D4                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0394                                    _cp_h FDE1  
                                  _cp_l FDDD                                    _atoi 65F8  
                                  _ctoa 9408                                    _main 21F0  
                                  _dtoa 4C0E                                    _nanf 9820  
                                  _seed 02D5                                    _prec 0023  
                                  _nout 00C7                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 60BA                                    btemp 0001  
                                  _utoa 57B4                                    _xtoa 508E  
                __end_of_check_adc_scan A87E                           ___fpclassifyf 749E  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit A678               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 9D40                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr A484                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0038                        __end_of_INT0_ISR A816  
                      __end_of_INT1_ISR 9F4A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 8FDE           __end_of_OSCILLATOR_Initialize A7B4  
                                 l10005 9EEE                                   l11011 057C  
                                 l10131 8E14                                   l11013 058E  
                                 l11103 0C32                                   l11007 0554  
                                 l10127 8DD6                                   l11203 119A  
                                 l11115 0CBA                                   l11123 0D24  
                                 l11131 0D90                                   l11027 05F6  
                                 l11019 0594                                   l10155 88C2  
                                 l10261 95DC                                   l10149 60AE  
                                 l11045 06B8                                   l11029 0602  
                                 l12101 2230                                   l10255 95CC  
                                 l11151 0F3A                                   l11055 077A  
                                 l11223 6126                                   l12031 6D4E  
                                 l10167 891E                                   l12103 2238  
                                 l10249 9E84                                   l11065 0926  
                                 l11049 06F0                                   l11321 50FC  
                                 l10177 898E                                   l11139 0EA2  
                                 l11243 6216                                   l11315 50C2  
                                 l12107 2256                                   l11165 0FD6  
                                 l11261 6338                                   l11253 62D0  
                                 l11501 1A7A                                   l11413 1326  
                                 l12045 6E76                                   l12109 2268  
                                 l11167 0FF0                                   l11087 0B12  
                                 l11079 0A48                                   l11247 6246  
                                 l11239 61DA                                   l11351 528E  
                                 l11335 5198                                   l11327 5138  
                                 l11415 1360                                   l12231 29E4  
                                 l12207 2944                                   l12215 298E  
                                 l11177 1092                                   l11089 0B34  
                                 l11257 62FC                                   l11521 1BDA  
                                 l11417 1376                                   l12233 29FC  
                                 l12225 29D2                                   l12209 296E  
                                 l12161 244E                                   l11187 10E2  
                                 l11283 5844                                   l11275 57E8  
                                 l11531 1C88                                   l11435 14A8  
                                 l10803 5B8C                                   l12243 2A40  
                                 l11293 5A3A                                   l11541 1DAA  
                                 l11437 14E2                                   l12253 2A94  
                                 l12181 24A6                                   l12173 2482  
                                 l10735 826E                                   l10751 9174  
                                 l10903 5008                                   l11375 53FE  
                                 l11359 5314                                   l11551 1E60  
                                 l11455 165C                                   l11439 14F8  
                                 l10823 5D62                                   l10815 5CB4  
                                 l12239 2A1A                                   l12159 2420  
                                 l10761 84CE                                   l10921 00AC  
                                 l11473 17E0                                   l11465 16F4  
                                 l10809 5C4A                                   l12193 2766  
                                 l10747 9136                                   l10771 8566  
                                 l10763 84E0                                   l10835 9426  
                                 l10907 5044                                   l11651 8EF6  
                                 l11635 9036                                   l10757 84A6  
                                 l10837 9452                                   l10861 4CDC  
                                 l10933 00F0                                   l10941 0146  
                                 l11565 1FDC                                   l11477 1834  
                                 l12197 27C8                                   PRLOCK 0039EF  
                                 l11831 3B98                                   l10767 851C  
                                 l10951 01EA                                   l11921 A656  
                                 l11841 3DA8                                   l10873 4D44  
                                 l10777 8BC4                                   l10953 0216  
                                 l11585 216E                                   l11497 1A46  
                                 l11489 198E                                   l11649 8EB4  
                                 l11827 3B56                                   l10883 4F56  
                                 l10955 022C                                   l11579 2114  
                                 l11595 2192                                   l11933 A1F6  
                                 l11853 3F9E                                   l11845 3E26  
                                 l10869 4D26                                   l11589 2172  
                                 l11863 4046                                   l10991 0470  
                                 l10959 0258                                   l11775 85B2  
                                 l11857 4028                                   l10985 0396  
                                 l10969 02FC                                   l10977 032A  
                                 l11859 4030                                   l10995 04D2  
                                 l10989 0406                         __end_of___aodiv 65F8  
                          _Volts_to_SOC 91BE                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 3A8C  
                                 _ADCLK 003EFF                         __end_of___aomod 6AAC  
                                 _ADPCH 003EF1                         __end_of___fldiv 4762  
                                 _ADREF 003EFD                         __end_of___awdiv 7EA8  
                       __end_of___flneg 9C28                                   STR_11 FF75  
                                 STR_12 FEAC                                   STR_20 FE99  
                                 STR_21 FF86                                   STR_13 FED2  
                                 STR_30 FE73                                   STR_22 FF86  
                                 STR_14 FEBF                                   STR_23 FF75  
                                 STR_31 FFC0                                   STR_15 FF1E  
                                 STR_32 FFC0                                   STR_24 FFFC  
                                 STR_16 FEF8                                   STR_25 FFF9  
                                 STR_33 FF96                                   STR_17 FF0B  
                         __CFG_WDTE$OFF 000000                                   STR_34 FF96  
                                 STR_18 FEE5                                   STR_35 FF96  
                                 STR_51 FFD7                                   STR_27 FFB4  
                                 STR_19 FE4C                                   STR_52 FFDF  
                                 STR_28 FFCA                                   STR_36 FE34  
                       __end_of___awmod 847A                                   STR_45 FE33  
                                 STR_61 FFF0                                   STR_29 FE73  
                                 STR_38 FE86                                   STR_46 FDE5  
                                 STR_71 FFF3                                   STR_55 FFEA  
                                 STR_47 FFD3                                   STR_39 FE60  
                                 STR_80 FFE7                                   STR_64 FFED  
                                 STR_48 FFDB                                   _ADRPT 003EEC  
                                 STR_57 FFEA                                   STR_66 FFED  
                                 STR_74 FFF6                                   STR_59 FFF0  
                                 STR_76 FFF6                                   STR_69 FFF3  
                                 STR_78 FFE7                         __end_of___flmul 32D0  
                       __end_of___flsub 9CB4                         __end_of___fltol 7926  
                                 u10100 4CC2                                   u10020 5DD6  
                                 u10120 4D12                                   u11000 5246  
                                 u10130 4F6A                                   u10050 4C3E  
                                 u10060 4C40                                   u10300 02A6  
                                 u11020 5310                                   u10141 4F9A  
                                 u10150 4FB0                                   u10310 02A8  
                                 u10230 00DA                                   u11030 5330  
                                 u10151 4FAE                                   u10160 4FC4  
                                 u10080 4CB0                                   u11200 1542  
                                 u11041 5360                                   u11025 52F2  
                                 u10170 4FC8                                   u10410 05C6  
                                 u11050 5376                                   u11210 1568  
                                 u11051 5374                                   u10260 0194  
                                 u11060 538A                                   u11140 13BE  
                                 u10190 4FDE                                   u10350 050E  
                                 u10270 0196                                   u11070 538E  
                                 u11310 1B34                                   u11150 13C0  
                                 u10520 0A18                                   u11400 2064  
                                 u11320 1B36                                   u11160 13E6  
                                 u10450 0648                         __end_of___lodiv 77B4  
                                 u10700 116E                                   u10620 0EE4  
                                 u10380 0562                                   u11260 1748  
                                 u11420 9016                                   u10710 1170  
                                 u11190 1540                                   u11280 18BC  
                                 _U1P1H 003DED                                   u10820 635E  
                                 u10900 5AAA                                   u11380 1EB4  
                                 _U1P2H 003DEF                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u10680 10B8                                   u10840 57CE  
                                 u10920 50A8                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11650 6EC6  
                                 _U1P3L 003DF0                                   u10780 623C  
                                 u11660 6EC8                                   u10790 6282  
                                 u10950 5190                                   _U2P1L 003DD4  
                                 u10871 5A7C                                   u10880 5A92  
                                 u10960 51E4                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10881 5A90  
                                 u10890 5AA6                                   u10970 51E6  
                                 _U2P3L 003DD8                                   u10797 6274  
                                 u10990 5244                                   _T5CLK 003F9D  
                       __end_of___lomod 7FE8                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00B2                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003D                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR A8A0  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 7D5A                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 9A52  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR A742  
                          _DMA1CON1bits 003BFD                                   _flags 0025  
              __size_of_calc_model_data 02DA                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 823E  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 9DCA  
                                 _fputs 9126                         __end_of_isdigit A14A  
                       __end_of_ivln2_h FDDD                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand 9FEE                                   _width 0021  
                                 _putch A70C                         __end_of_islower A0EA  
                       __end_of_isspace 9AF6                _INT1_SetInterruptHandler A3E2  
                       __end_of_isupper A11A                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler A36A  
           _UART1_SetRxInterruptHandler A342                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 88B6                         __end_of_tolower 9598  
                       __end_of_strncmp 6CCC                         __end_of_toupper 9514  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr A4AC  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 9CFA  
                 __end_of_ringBufS_init A2A2                         __initialization 869E  
                     _UART2_rx_vect_isr A4D4                            __end_of_cp_h FDE5  
                          __end_of_cp_l FDE1                            __end_of_atoi 686C  
                          __end_of_ctoa 9490                            __end_of_main 2AA6  
                          __end_of_dtoa 508E                            __end_of_nanf 9882  
                          __end_of_stoa 6378                            __end_of_utoa 5AF4  
                          __end_of_xtoa 5448                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0038                 __end_of_TMR2_Initialize A772  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 9E8C  
              _TMR5_SetInterruptHandler A392                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
                     _port_data_dma_ptr A830                     ??_UART2_rx_vect_isr 003D  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize A200  
                       _PWM8_Initialize A788                        _UART1_Initialize 9CB4  
                     _UART2_tx_vect_isr A4AC                      _UART2_Transmit_ISR A1D4  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 97BC  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 9DCA  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0038                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 9A44                                  _RB6PPS 003A0E  
                                i1l1205 7CC2                    _start_switch_handler A61A  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 9D86                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright A7F8  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u911_24 821A                                  u911_25 8216  
                                u904_28 812E                                  u907_20 814E  
                                u907_21 8148                                  u935_48 A5E4  
                                u927_48 A5C0                                  u960_44 95FC  
                                u881_20 A05E                                  u960_45 95F6  
                                u881_26 A060                                  u929_28 A554  
                                u938_28 A578                    __size_of_hid_display 0102  
                      __end_of___xxtofl 70E2   __end_of_ADCC_DischargeSampleCapacitor A866  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor A85E  
              __end_of_send_lcd_cmd_dma 9AA4                         _TMR3_WriteTimer 9ECC  
                   ??_UART2_tx_vect_isr 003D               __end_of_UART2_rx_vect_isr A4FC  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize A826  
                      _UART2_Initialize 98E4                                  _WaitMs 9F82  
                       _conv_raw_result 4762                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 7A96  
                                ___fleq 8C50                       _ADCC_ThresholdISR 96EC  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 9254  
                                _efgtoa 0000                                  _floorf 5448  
                    ?_ADCC_ThresholdISR 0038                                  _memset 5AF4  
                  __size_of_help_button 0038                                  clear_0 8732  
                                clear_1 8746                                  clear_2 8758  
                                clear_3 8764                                  clear_4 8770  
                                clear_5 877C                                  clear_6 8788  
                                clear_7 8794               __end_of_port_data_dma_ptr A83A  
                                _printf 9882                      _eaDogM_WriteString 8FDE  
                                _strcpy 8B7C                               ?_ADCC_ISR 0038  
                                _strlen 9084                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize 9680  
                        _PMD_Initialize A7B4               __end_of_UART2_tx_vect_isr A4D4  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan 9820  
                          __mediumconst FC70                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 999C                        __end_of_vfprintf 8F34  
                            _StartTimer 9E0C           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 9D40                       _SYSTEM_Initialize 9B96  
                            __accesstop 0060                 __end_of__initialization 87A6  
                             ?_INT0_ISR 0038                               ?_INT1_ISR 0038  
                  __end_of_display_help A876                    __end_of_display_info A86E  
             __end_of_CLKREF_Initialize A830                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 9E8C  
                 _set_temp_display_help A7DA                        _clear_hid_pflags A520  
                 __end_of_TMR3_CallBack A5B0               __end_of_ADCC_ThresholdISR 9756  
                    __size_of_calc_bsoc 075C                  __end_of_ringBufS_flush 92E6  
                        __pcstackCOMRAM 0038                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 A14A  
                          __pidataBANK1 8AA2                            __pidataBANK2 8D14  
           __size_of_send_port_data_dma 0052                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8362  
                         __end_of_fputs 91BE                           __end_of_srand A022  
                 __end_of_TMR5_CallBack A58C                           __end_of_putch A726  
               __end_of_PWM8_Initialize A79E                 __end_of_TMR6_Initialize A22A  
                     _adc_int_t_handler 9598                  __end_of_PMD_Initialize A7C8  
                            __end_of_bp FDD9                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack A5F8             __size_of_EXT_INT_Initialize 0034  
                         _DMA1_DMAA_ISR A848                   TMR3_ISR@CountCallBack 00C9  
                        _clear_adc_scan A886                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00BE  
             __end_of_SYSTEM_Initialize 9BE0                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer 9F0C  
                            __pbssBANK0 0060                              __pbssBANK1 01DA  
                            __pbssBANK2 02D5                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 6CCC                 __end_of_conv_raw_result 4C0E  
                 _INT0_InterruptHandler 00C4                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone A2F2  
                      _DMA1_DMADCNT_ISR A83C                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma A08A  
                 __end_of_wait_lcd_done A70C        __end_of_TMR3_SetInterruptHandler A3E2  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler A392  
                            ??_TMR3_ISR 02BC                 __end_of_ADCC_Initialize 96EA  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 9616  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler A45A  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler A432  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR A63A  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan A88C                                 u1151_20 3F96  
                        ?_DMA1_DMAA_ISR 0038                        _DMA1_DMASCNT_ISR A818  
                               u1153_20 403E                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 u1158_28 A59C  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 41E8                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch A2A2                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 9ECC                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim A742                                 __Lparam 0000  
              __end_of_UART1_Initialize 9CFA                       __end_of_hid_input 9408  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 6378  
                               ___fladd 32D0                                 ___aomod 686C  
                               ___fldiv 41E8                                 ___awdiv 7D5A  
                               ___flneg 9BE0                                 ___awmod 8362  
                               ___flmul 2AA6                                 ___flsub 9C6E  
                               ___fltol 77B4                                 ___lodiv 7634  
                               ___lomod 7EA8               __end_of_UART1_Receive_ISR A65A  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 8AA2                                 __pcinit 869E  
              __end_of_mode_lamp_bright A806                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand A7EA  
                               __ramtop 2000                                 __ptext0 21F0  
                               __ptext1 A4FC                                 __ptext2 A61A  
                               __ptext3 97BC                                 __ptext4 A7C8  
                               __ptext5 A85E                                 __ptext6 9FEE  
                               __ptext7 A08A                                 __ptext8 89B8  
                               __ptext9 A22A                       _UART2_Receive_ISR A6D2  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                               us603999 6A9A                   _OSCILLATOR_Initialize A79E  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 7A96                                 _isalpha 9D86  
                               _isdigit A11A                                 us592999 65E2  
                               _ivln2_h FDD9                                 us693999 7FD8  
                             _T3CONbits 003FA6                                 us688999 779E  
                               _mode_sw 002E                       __end_of_lp_filter 749E  
                               _islower A0BA                                 _isspace 9AA4  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 9942                                 _isupper A0EA  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 87AC  
                               _tolower 9514                   __size_of_display_help 0008  
                               _utctime 009D                   __size_of_display_info 0008  
                               _strncmp 6AAC                                 _toupper 9490  
                  end_of_initialization 87A6               __size_of_convert_adc_data 00B8  
                    _check_enter_button 9E4C                               i1u1183_20 7CB8  
   __end_of_UART2_SetRxInterruptHandler A342             _UART2_SetRxInterruptHandler A31A  
                             i2u1170_48 A4C0                               i2u1168_48 A498  
                     __end_of_set_vterm A6B4                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd A898  
             __end_of_UART2_Receive_ISR A6F0                          wdtdelay@dcount 00A1  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 003E  
                 _INT1_InterruptHandler 00C1                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc A89E                _TMR3_SetInterruptHandler A3BA  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler A36A  
                          _display_help A86E                   _TMR5_InterruptHandler 00AC  
                          _display_info A866    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags A544                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler A482             _ADCC_SetADIInterruptHandler A45A  
                            _update_lcd 858E                         _calc_model_data 5DE0  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc A4FC                         _DMA1_Initialize 9616  
                            _start_bsoc A5F8                         _SPI1_Initialize A772  
                 __end_of_get_vterm_ptr A1A8                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 9FB8  
          __end_of_INTERRUPT_Initialize 97BC                              _vterm_dump 7FE8  
                        __end_of___flge 7BF8                          __end_of___fleq 8D14  
  __end_of_INT0_DefaultInterruptHandler A8AC   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler A8AA              __size_of_UART1_Receive_ISR 0020  
                       _DMA2_Initialize 999C                           __pidataBIGRAM 70E2  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 57B4  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0095  
                        __end_of_memset 5DE0                          __end_of_printf 98E4  
              __end_of_DMA1_DMADCNT_ISR A846             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack A5D4                          __end_of_strcpy 8C50  
                        __end_of_strlen 9126                     start_initialization 869E  
  __end_of_TMR5_DefaultInterruptHandler A08A   __size_of_TMR5_DefaultInterruptHandler 0034  
          _TMR5_DefaultInterruptHandler A056         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 9C6E                   __end_of_INT1_CallBack A568  
             __size_of_set_display_info 001E                             __end_of_pad 858E  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd A27A  
                        _switch_handler 8116           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 01F2  
                 __end_of___fpclassifyf 7634                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR A826                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR A854                     __end_of_hid_display 89B8  
            __end_of_send_port_data_dma 9B48                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone A2CA                           _ringBufS_init A27A  
                           __pdataBANK0 00CB                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize A056  
               __end_of_calc_model_data 60BA                     __end_of_help_button 9F82  
       __end_of_eaDogM_WriteStringAtPos 9FEE                     __end_of_BVSOC_TABLE FD41  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize 9680  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler A432  
                         __pcstackBANK2 02BC                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 823E  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize A788  
              _UART1_RxInterruptHandler 00B8                _UART2_TxInterruptHandler 00BB  
                             __end_of_T FDD1                        _convert_adc_data 8DD0  
                             _calc_bsoc 3A8C               __size_of_ringBufS_put_dma 00AA  
                          _init_display 89B8                  __end_of_DMA1_DMAOR_ISR A85E  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00AF  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 99F6  
                _PIN_MANAGER_Initialize 92E6                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set A892                           __pmediumconst FC70  
                             __ptext100 9B96                               __ptext101 98E4  
                             __ptext110 9D40                               __ptext102 A2F2  
                             __ptext111 A3BA                               __ptext103 A31A  
                             __ptext120 A022                               __ptext112 A75A  
                             __ptext104 9CB4                               __ptext121 A3E2  
                             __ptext113 A772                               __ptext105 A342  
                             __ptext130 A544                               __ptext122 A40A  
                             __ptext114 A788                               __ptext106 A200  
                             __ptext131 A8A6                               __ptext123 999C  
                             __ptext115 A7B4                               __ptext107 A36A  
                             __ptext140 A8A8                               __ptext132 8116  
                             __ptext124 9616                               __ptext116 92E6  
                             __ptext108 9CFA                               __ptext141 3A8C  
                             __ptext133 99F8                               __ptext125 A826  
                             __ptext117 A79E                               __ptext109 A392  
                             __ptext150 A8AC                               __ptext142 9AF6  
                             __ptext134 9E8C                               __ptext126 9680  
                             __ptext118 9756                               __ptext151 A8AE  
                             __ptext143 A830                               __ptext135 A568  
                             __ptext127 A432                               __ptext119 A87E  
                             __ptext160 A5D4                               __ptext152 96EC  
                             __ptext144 A808                               __ptext136 A056  
                             __ptext128 A45A                               __ptext161 9B48  
                             __ptext153 A484                               __ptext145 A5B0  
                             __ptext137 7BF8                               __ptext129 9F0C  
                             __ptext162 A818                               __ptext154 A63A  
                             __ptext146 A8AA                               __ptext138 9ECC  
                             __ptext163 A83C                               __ptext155 A4AC  
                             __ptext147 A8A0                               __ptext139 A58C  
                             __ptext164 A848                               __ptext156 A1D4  
                             __ptext148 A1A8                               __ptext165 A854  
                             __ptext157 A4D4                               __ptext149 9598  
                             __ptext166 0000                               __ptext158 A6D2  
                             __ptext159 A728                               _hid_input 9378  
                    __end_of_StartTimer 9E4C                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR A1A8  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 7926                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 72E2  
                           _hid_display 88B6                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 9756  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0038                                _INT0_ISR A808  
                              _INT1_ISR 9F0C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01DA                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack A58C                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u971_48 A4E8  
                              i2u963_48 A1C0                __size_of_TMR5_Initialize 0046  
                              i2u965_48 9722                                i2u965_49 9736  
                             _set_vterm A696                     __size_of_update_lcd 0110  
                           _help_button 9F4A                                _TMR3_ISR 7BF8  
                           _BVSOC_TABLE FC71                                _TMR5_ISR 99F8  
                              _TMR6_ISR A728                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack A568                              _ADCON0bits 003EF8  
                    __end_of_check_help 6EDE                               _start_lcd A892  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack A5D4                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc A898  
                      _set_display_info A6B4                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 86B2                               copy_data1 86D8  
                             copy_data2 86FA                               copy_data3 871C  
              _INT0_SetInterruptHandler A40A                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler A31A             _UART2_SetTxInterruptHandler A2F2  
                          _uart1RxCount 0035                            _uart2RxCount 002F  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done A6F0                            _send_lcd_cmd A252  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler A8AE  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                      __end_of_get_switch A2CA  
                 __end_of_DMA1_DMAA_ISR A852                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 6EDE                       ?_DMA1_DMADCNT_ISR 0038  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand A7F8                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 003E                                __ptext10 A252  
                              __ptext11 A65A                                __ptext20 4762  
                              __ptext12 A27A                                __ptext21 9820  
                              __ptext13 7926                                __ptext30 9F82  
                              __ptext22 A678                                __ptext14 91BE  
                              __ptext31 858E                                __ptext23 6EDE  
                              __ptext15 88B6                                __ptext40 5AF4  
                              __ptext32 9FB8                                __ptext24 A520  
                              __ptext16 9378                                __ptext41 9882  
                              __ptext33 9A52                                __ptext25 A886  
                              __ptext17 A2A2                                __ptext50 7634  
                              __ptext42 8E88                                __ptext34 A6F0  
                              __ptext26 6CCC                                __ptext18 A7EA  
                              __ptext51 6AAC                                __ptext43 1244  
                              __ptext35 9942                                __ptext27 7FE8  
                              __ptext19 8DD0                                __ptext60 9BE0  
                              __ptext52 60BA                                __ptext44 508E  
                              __ptext36 8FDE                                __ptext28 87AC  
                              __ptext61 7A96                                __ptext53 0000  
                              __ptext45 9490                                __ptext37 A88C  
                              __ptext29 A17A                                __ptext70 9408  
                              __ptext62 8C50                                __ptext54 9514  
                              __ptext46 A0BA                                __ptext38 A892  
                              __ptext71 847A                                __ptext63 41E8  
                              __ptext55 A0EA                                __ptext47 9D86  
                              __ptext39 9254                                __ptext80 A696  
                              __ptext72 9084                                __ptext64 8362  
                              __ptext56 8B7C                                __ptext48 57B4  
                              __ptext81 A7DA                                __ptext73 9126  
                              __ptext65 7D5A                                __ptext57 5448  
                              __ptext49 7EA8                                __ptext90 A86E  
                              __ptext82 A6B4                                __ptext74 823E  
                              __ptext66 4C0E                                __ptext58 749E  
                              __ptext91 9E4C                                __ptext83 A742  
                              __ptext75 A70C                                __ptext67 9C28  
                              __ptext59 77B4                                __ptext92 A876  
                              __ptext84 A7F8                                __ptext76 8F34  
                              __ptext68 686C                                __ptext93 5DE0  
                              __ptext85 9DCA                                __ptext77 65F8  
                              __ptext69 6378                                __ptext94 A898  
                              __ptext86 9F4A                                __ptext78 9AA4  
                              __ptext95 A5F8                                __ptext87 A2CA  
                              __ptext79 A11A                                __ptext96 72E2  
                              __ptext88 9E0C                                __ptext97 9C6E  
                              __ptext89 A866                                __ptext98 32D0  
                              __ptext99 2AA6                        __size_of_isupper 0030  
                              us1004999 4C28                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1073999 60CC  
                              us1085999 581A                                us1094999 510E  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 8F34                    __end_of_Volts_to_SOC 9254  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 08B6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0038                   __end_of_init_port_dma A0BA  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00B5                               stoa@F1166 01D3  
                    ??_DMA1_DMASCNT_ISR 003E            __end_of_ADCC_StartConversion A7DA  
                              _spi_link 0089                                _wdtdelay 9942  
            __end_of_UART2_Transmit_ISR A200                                _vfprintf 8E88  
              __end_of_convert_adc_data 8E88              __end_of_PWM8_LoadDutyValue 9E0C  
  __end_of_TMR3_DefaultInterruptHandler A8AA   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler A8A8    __end_of_INT1_DefaultInterruptHandler A8A8  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler A8A6  
                    _send_port_data_dma 9AF6                           ??_Default_ISR 0038  
                           _uart1RxHead 0037                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0031                             _uart1RxTail 0036  
                        _get_raw_result A678                             _uart2TxHead 0034  
                           _uart2RxTail 0030                             _uart2TxTail 0033  
                          _wait_lcd_set A88C                        Volts_to_SOC@slot 002D  
                    _EXT_INT_Initialize A022    __end_of_TMR6_DefaultInterruptHandler 9B96  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler 9B48  
  __end_of_ADCC_DefaultInterruptHandler A8AE   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler A8AC                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long A22A  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help A7EA  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 9084  
                 __end_of_mode_lamp_dim A75A                 __end_of_adc_int_handler A8B0  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 869E                  _uart2TxBufferRemaining 0032  
                    __end_of_static_soc A520                      __end_of_start_bsoc A61A  
                        _FVR_Initialize A87E                  __end_of_get_raw_result A696  
                      _send_lcd_cmd_dma 9A52                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0029        __end_of_INT1_SetInterruptHandler A40A  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 003E  
             __end_of_send_lcd_cmd_long A252                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR A8A6          __end_of_PIN_MANAGER_Initialize 9378  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 8116  
               _eaDogM_WriteStringAtPos 9FB8                           _get_vterm_ptr A17A  
                        _check_adc_scan A876               __size_of_UART2_Initialize 005E  
