

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 14 23:44:28 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=4,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=4,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=4,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=4,class=CODE,delta=1
   195                           	psect	text170,global,reloc=4,class=CODE,delta=1
   196                           	psect	text171,global,reloc=4,class=CODE,delta=1
   197                           	psect	text172,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text173,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_esr_temp	offset	0
   240 ;;_i_esr	offset	4
   241 ;;_shape	offset	6
   242 ;;_k	offset	7
   243 ;;_j	offset	8
   244 ;;_i	offset	9
   245 ;;_inp_index	offset	10
   246 ;;_mode	offset	11
   247 ;;_i_ror	offset	12
   248 ;;_s	offset=-2 (param)
   249 ;;_c	offset	0
   250 ;;_shape	offset=-1 (param)
   251 ;;_reset	offset=-2 (param)
   252 ;;_cmd	offset=-1 (param)
   253 ;;_cmd	offset=-1 (param)
   254 ;;_data	offset=-1 (param)
   255 ;;__this	offset=-2 (param)
   256 ;;_cvoltage	offset=-4 (param)
   257 ;;_h	offset=-1 (param)
   258 ;;_h	offset=-1 (param)
   259 ;;_i	offset=-1 (param)
   260 ;;_fsm	offset=-1 (param)
   261 ;;_channel	offset=-1 (param)
   262 ;;_mode	offset=-1 (param)
   263 ;;_mode	offset=-1 (param)
   264 ;;_cmd	offset=-1 (param)
   265 ;;_i	offset	0
   266 ;;_h	offset=-1 (param)
   267 ;;_flipper	offset=-1 (param)
   268 ;;_f	offset	0
   269 ;;_ap	offset	6
   270 ;;_s	offset=-3 (param)
   271 ;;_fmt	offset=-5 (param)
   272 ;;_line	offset=-1 (param)
   273 ;;_vterm	offset=-2 (param)
   274 ;;_numMilliseconds	offset=-2 (param)
   275 ;;_vterm	offset=-1 (param)
   276 ;;_r	offset=-1 (param)
   277 ;;_c	offset=-2 (param)
   278 ;;_strPtr	offset=-4 (param)
   279 ;;_strPtr	offset=-1 (param)
   280 ;;_delay	offset=-4 (param)
   281 ;;_strPtr	offset=-2 (param)
   282 ;;__this	offset=-2 (param)
   283 ;;_clearBuffer	offset=-3 (param)
   284 ;;_s	offset	0
   285 ;;_k	offset	2
   286 ;;_dest	offset=-2 (param)
   287 ;;_c	offset=-4 (param)
   288 ;;_n	offset=-6 (param)
   289 ;;_ap	offset	0
   290 ;;_fmt	offset=-3 (param)
   291 ;;_cfmt	offset	0
   292 ;;_fp	offset=-2 (param)
   293 ;;_fmt	offset=-4 (param)
   294 ;;_ap	offset=-6 (param)
   295 ;;_vfpfcnvrt$5387	offset	0
   296 ;;_vfpfcnvrt$5398	offset	2
   297 ;;_vfpfcnvrt$5386	offset	4
   298 ;;_llu	offset	6
   299 ;;_ll	offset	14
   300 ;;_f	offset	22
   301 ;;_ct	offset	26
   302 ;;_cp	offset	29
   303 ;;_c	offset	31
   304 ;;_fp	offset=-2 (param)
   305 ;;_fmt	offset=-4 (param)
   306 ;;_ap	offset=-6 (param)
   307 ;;_xtoa$5372	offset	0
   308 ;;_xtoa$5371	offset	2
   309 ;;_n	offset	4
   310 ;;_c	offset	12
   311 ;;_i	offset	14
   312 ;;_w	offset	16
   313 ;;_p	offset	18
   314 ;;_fp	offset=-2 (param)
   315 ;;_d	offset=-10 (param)
   316 ;;_x	offset=-11 (param)
   317 ;;_toupper$6178	offset	0
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_c	offset=-2 (param)
   321 ;;_n	offset	0
   322 ;;_i	offset	8
   323 ;;_w	offset	10
   324 ;;_p	offset	12
   325 ;;_fp	offset=-2 (param)
   326 ;;_d	offset=-10 (param)
   327 ;;_counter	offset	0
   328 ;;_dividend	offset=-8 (param)
   329 ;;_divisor	offset=-16 (param)
   330 ;;_quotient	offset	0
   331 ;;_counter	offset	8
   332 ;;_dividend	offset=-8 (param)
   333 ;;_divisor	offset=-16 (param)
   334 ;;_r	offset	0
   335 ;;_l	offset	2
   336 ;;__l	offset=-2 (param)
   337 ;;__r	offset=-4 (param)
   338 ;;_n	offset=-6 (param)
   339 ;;_nuls	offset	0
   340 ;;_l	offset	7
   341 ;;_p	offset	9
   342 ;;_cp	offset	11
   343 ;;_w	offset	13
   344 ;;_i	offset	15
   345 ;;_fp	offset=-2 (param)
   346 ;;_s	offset=-4 (param)
   347 ;;_efgtoa$5344	offset	0
   348 ;;_efgtoa$5343	offset	2
   349 ;;_efgtoa$5342	offset	4
   350 ;;_efgtoa$5338	offset	6
   351 ;;_efgtoa$5334	offset	8
   352 ;;_efgtoa$5333	offset	10
   353 ;;_u	offset	12
   354 ;;_g	offset	16
   355 ;;_l	offset	20
   356 ;;_h	offset	24
   357 ;;_ou	offset	28
   358 ;;_n	offset	32
   359 ;;_e	offset	34
   360 ;;_i	offset	36
   361 ;;_w	offset	38
   362 ;;_p	offset	40
   363 ;;_sign	offset	42
   364 ;;_d	offset	44
   365 ;;_ne	offset	46
   366 ;;_m	offset	48
   367 ;;_pp	offset	50
   368 ;;_t	offset	52
   369 ;;_mode	offset	54
   370 ;;_nmode	offset	55
   371 ;;_fp	offset=-2 (param)
   372 ;;_f	offset=-6 (param)
   373 ;;_c	offset=-7 (param)
   374 ;;_tolower$6163	offset	0
   375 ;;_c	offset=-2 (param)
   376 ;;_c	offset=-2 (param)
   377 ;;_d	offset	0
   378 ;;_s	offset	2
   379 ;;_dest	offset=-2 (param)
   380 ;;_src	offset=-4 (param)
   381 ;;_u	offset	0
   382 ;;_m	offset	4
   383 ;;_e	offset	8
   384 ;;_x	offset=-4 (param)
   385 ;;_u	offset	0
   386 ;;_e	offset	4
   387 ;;_x	offset=-4 (param)
   388 ;;_exp1	offset	0
   389 ;;_sign1	offset	1
   390 ;;_f1	offset=-4 (param)
   391 ;;_f1	offset=-4 (param)
   392 ;;_ff1	offset=-4 (param)
   393 ;;_ff2	offset=-8 (param)
   394 ;;_sign	offset	0
   395 ;;_counter	offset	1
   396 ;;_dividend	offset=-2 (param)
   397 ;;_divisor	offset=-4 (param)
   398 ;;_quotient	offset	0
   399 ;;_sign	offset	2
   400 ;;_counter	offset	3
   401 ;;_dividend	offset=-2 (param)
   402 ;;_divisor	offset=-4 (param)
   403 ;;_dtoa$5310	offset	0
   404 ;;_n	offset	2
   405 ;;_i	offset	10
   406 ;;_s	offset	12
   407 ;;_w	offset	14
   408 ;;_p	offset	16
   409 ;;_fp	offset=-2 (param)
   410 ;;_d	offset=-10 (param)
   411 ;;_a	offset=-2 (param)
   412 ;;_sign	offset	0
   413 ;;_counter	offset	1
   414 ;;_dividend	offset=-8 (param)
   415 ;;_divisor	offset=-16 (param)
   416 ;;_quotient	offset	0
   417 ;;_sign	offset	8
   418 ;;_counter	offset	9
   419 ;;_dividend	offset=-8 (param)
   420 ;;_divisor	offset=-16 (param)
   421 ;;_w	offset	0
   422 ;;_fp	offset=-2 (param)
   423 ;;_c	offset=-3 (param)
   424 ;;_w	offset	0
   425 ;;_i	offset	2
   426 ;;_fp	offset=-2 (param)
   427 ;;_buf	offset=-4 (param)
   428 ;;_p	offset=-6 (param)
   429 ;;_a	offset	0
   430 ;;_s	offset=-2 (param)
   431 ;;_i	offset	0
   432 ;;_c	offset	2
   433 ;;_s	offset=-2 (param)
   434 ;;_fp	offset=-4 (param)
   435 ;;_c	offset=-2 (param)
   436 ;;_fp	offset=-4 (param)
   437 ;;_c	offset=-1 (param)
   438 ;;__this	offset=-2 (param)
   439 ;;_c	offset=-3 (param)
   440 ;;_atoi$5894	offset	0
   441 ;;_atoi$5892	offset	2
   442 ;;_atoi$5893	offset	4
   443 ;;_n	offset	5
   444 ;;_neg	offset	7
   445 ;;_s	offset=-2 (param)
   446 ;;_isspace$5943	offset	0
   447 ;;_c	offset=-2 (param)
   448 ;;_c	offset=-2 (param)
   449 ;;_vterm	offset=-1 (param)
   450 ;;_new_response_info	offset=-1 (param)
   451 ;;_new_response_info	offset=-1 (param)
   452 ;;_level	offset=-2 (param)
   453 ;;_dutyValue	offset=-2 (param)
   454 ;;_timer	offset=-1 (param)
   455 ;;_timer	offset=-1 (param)
   456 ;;_count	offset=-3 (param)
   457 ;;_h	offset=-1 (param)
   458 ;;_u	offset	0
   459 ;;_x	offset=-4 (param)
   460 ;;_chan	offset=-1 (param)
   461 ;;_to_what	offset=-2 (param)
   462 ;;_u	offset	0
   463 ;;_s	offset=-2 (param)
   464 ;;_index	offset=-1 (param)
   465 ;;_arg	offset	0
   466 ;;_exp	offset	4
   467 ;;_sign	offset=-1 (param)
   468 ;;_val	offset=-5 (param)
   469 ;;_grs	offset	0
   470 ;;_rem	offset	4
   471 ;;_new_exp	offset	8
   472 ;;_aexp	offset	10
   473 ;;_bexp	offset	11
   474 ;;_sign	offset	12
   475 ;;_b	offset=-4 (param)
   476 ;;_a	offset=-8 (param)
   477 ;;_ff1	offset=-4 (param)
   478 ;;_ff2	offset=-8 (param)
   479 ;;_lp_speed	offset	0
   480 ;;_new	offset=-4 (param)
   481 ;;_bn	offset=-5 (param)
   482 ;;_slow	offset=-6 (param)
   483 ;;_b	offset=-4 (param)
   484 ;;_a	offset=-8 (param)
   485 ;;_grs	offset	0
   486 ;;_bexp	offset	1
   487 ;;_aexp	offset	2
   488 ;;_signs	offset	3
   489 ;;_b	offset=-4 (param)
   490 ;;_a	offset=-8 (param)
   491 ;;_prod	offset	0
   492 ;;_grs	offset	4
   493 ;;_temp	offset	8
   494 ;;_bexp	offset	10
   495 ;;_aexp	offset	11
   496 ;;_sign	offset	12
   497 ;;_b	offset=-4 (param)
   498 ;;_a	offset=-8 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_state	offset	0
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_i	offset	0
   511 ;;_sw_value	offset	1
   512 ;;_timerVal	offset=-2 (param)
   513 ;;_timerVal	offset=-2 (param)
   514 ;;_log_ptr	offset	0
   515 ;;_f	offset	0
   516 ;;_ap	offset	6
   517 ;;_s	offset=-3 (param)
   518 ;;_fmt	offset=-5 (param)
   519 ;;_cfmt	offset	0
   520 ;;_fp	offset=-2 (param)
   521 ;;_fmt	offset=-4 (param)
   522 ;;_ap	offset=-6 (param)
   523 ;;_vfpfcnvrt$5387	offset	0
   524 ;;_vfpfcnvrt$5398	offset	2
   525 ;;_vfpfcnvrt$5386	offset	4
   526 ;;_llu	offset	6
   527 ;;_ll	offset	14
   528 ;;_f	offset	22
   529 ;;_ct	offset	26
   530 ;;_cp	offset	29
   531 ;;_c	offset	31
   532 ;;_fp	offset=-2 (param)
   533 ;;_fmt	offset=-4 (param)
   534 ;;_ap	offset=-6 (param)
   535 ;;_xtoa$5372	offset	0
   536 ;;_xtoa$5371	offset	2
   537 ;;_n	offset	4
   538 ;;_c	offset	12
   539 ;;_i	offset	14
   540 ;;_w	offset	16
   541 ;;_p	offset	18
   542 ;;_fp	offset=-2 (param)
   543 ;;_d	offset=-10 (param)
   544 ;;_x	offset=-11 (param)
   545 ;;_toupper$6178	offset	0
   546 ;;_c	offset=-2 (param)
   547 ;;_c	offset=-2 (param)
   548 ;;_c	offset=-2 (param)
   549 ;;_n	offset	0
   550 ;;_i	offset	8
   551 ;;_w	offset	10
   552 ;;_p	offset	12
   553 ;;_fp	offset=-2 (param)
   554 ;;_d	offset=-10 (param)
   555 ;;_counter	offset	0
   556 ;;_dividend	offset=-8 (param)
   557 ;;_divisor	offset=-16 (param)
   558 ;;_quotient	offset	0
   559 ;;_counter	offset	8
   560 ;;_dividend	offset=-8 (param)
   561 ;;_divisor	offset=-16 (param)
   562 ;;_r	offset	0
   563 ;;_l	offset	2
   564 ;;__l	offset=-2 (param)
   565 ;;__r	offset=-4 (param)
   566 ;;_n	offset=-6 (param)
   567 ;;_nuls	offset	0
   568 ;;_l	offset	7
   569 ;;_p	offset	9
   570 ;;_cp	offset	11
   571 ;;_w	offset	13
   572 ;;_i	offset	15
   573 ;;_fp	offset=-2 (param)
   574 ;;_s	offset=-4 (param)
   575 ;;_efgtoa$5344	offset	0
   576 ;;_efgtoa$5343	offset	2
   577 ;;_efgtoa$5342	offset	4
   578 ;;_efgtoa$5338	offset	6
   579 ;;_efgtoa$5334	offset	8
   580 ;;_efgtoa$5333	offset	10
   581 ;;_u	offset	12
   582 ;;_g	offset	16
   583 ;;_l	offset	20
   584 ;;_h	offset	24
   585 ;;_ou	offset	28
   586 ;;_n	offset	32
   587 ;;_e	offset	34
   588 ;;_i	offset	36
   589 ;;_w	offset	38
   590 ;;_p	offset	40
   591 ;;_sign	offset	42
   592 ;;_d	offset	44
   593 ;;_ne	offset	46
   594 ;;_m	offset	48
   595 ;;_pp	offset	50
   596 ;;_t	offset	52
   597 ;;_mode	offset	54
   598 ;;_nmode	offset	55
   599 ;;_fp	offset=-2 (param)
   600 ;;_f	offset=-6 (param)
   601 ;;_c	offset=-7 (param)
   602 ;;_tolower$6163	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_d	offset	0
   606 ;;_s	offset	2
   607 ;;_dest	offset=-2 (param)
   608 ;;_src	offset=-4 (param)
   609 ;;_u	offset	0
   610 ;;_m	offset	4
   611 ;;_e	offset	8
   612 ;;_x	offset=-4 (param)
   613 ;;_u	offset	0
   614 ;;_e	offset	4
   615 ;;_x	offset=-4 (param)
   616 ;;_exp1	offset	0
   617 ;;_sign1	offset	1
   618 ;;_f1	offset=-4 (param)
   619 ;;_b	offset=-4 (param)
   620 ;;_a	offset=-8 (param)
   621 ;;_grs	offset	0
   622 ;;_bexp	offset	1
   623 ;;_aexp	offset	2
   624 ;;_signs	offset	3
   625 ;;_b	offset=-4 (param)
   626 ;;_a	offset=-8 (param)
   627 ;;_f1	offset=-4 (param)
   628 ;;_prod	offset	0
   629 ;;_grs	offset	4
   630 ;;_temp	offset	8
   631 ;;_bexp	offset	10
   632 ;;_aexp	offset	11
   633 ;;_sign	offset	12
   634 ;;_b	offset=-4 (param)
   635 ;;_a	offset=-8 (param)
   636 ;;_ff1	offset=-4 (param)
   637 ;;_ff2	offset=-8 (param)
   638 ;;_ff1	offset=-4 (param)
   639 ;;_ff2	offset=-8 (param)
   640 ;;_grs	offset	0
   641 ;;_rem	offset	4
   642 ;;_new_exp	offset	8
   643 ;;_aexp	offset	10
   644 ;;_bexp	offset	11
   645 ;;_sign	offset	12
   646 ;;_b	offset=-4 (param)
   647 ;;_a	offset=-8 (param)
   648 ;;_sign	offset	0
   649 ;;_counter	offset	1
   650 ;;_dividend	offset=-2 (param)
   651 ;;_divisor	offset=-4 (param)
   652 ;;_quotient	offset	0
   653 ;;_sign	offset	2
   654 ;;_counter	offset	3
   655 ;;_dividend	offset=-2 (param)
   656 ;;_divisor	offset=-4 (param)
   657 ;;_dtoa$5310	offset	0
   658 ;;_n	offset	2
   659 ;;_i	offset	10
   660 ;;_s	offset	12
   661 ;;_w	offset	14
   662 ;;_p	offset	16
   663 ;;_fp	offset=-2 (param)
   664 ;;_d	offset=-10 (param)
   665 ;;_a	offset=-2 (param)
   666 ;;_sign	offset	0
   667 ;;_counter	offset	1
   668 ;;_dividend	offset=-8 (param)
   669 ;;_divisor	offset=-16 (param)
   670 ;;_quotient	offset	0
   671 ;;_sign	offset	8
   672 ;;_counter	offset	9
   673 ;;_dividend	offset=-8 (param)
   674 ;;_divisor	offset=-16 (param)
   675 ;;_w	offset	0
   676 ;;_fp	offset=-2 (param)
   677 ;;_c	offset=-3 (param)
   678 ;;_w	offset	0
   679 ;;_i	offset	2
   680 ;;_fp	offset=-2 (param)
   681 ;;_buf	offset=-4 (param)
   682 ;;_p	offset=-6 (param)
   683 ;;_a	offset	0
   684 ;;_s	offset=-2 (param)
   685 ;;_i	offset	0
   686 ;;_c	offset	2
   687 ;;_s	offset=-2 (param)
   688 ;;_fp	offset=-4 (param)
   689 ;;_c	offset=-2 (param)
   690 ;;_fp	offset=-4 (param)
   691 ;;_c	offset=-1 (param)
   692 ;;__this	offset=-2 (param)
   693 ;;_c	offset=-3 (param)
   694 ;;_atoi$5894	offset	0
   695 ;;_atoi$5892	offset	2
   696 ;;_atoi$5893	offset	4
   697 ;;_n	offset	5
   698 ;;_neg	offset	7
   699 ;;_s	offset=-2 (param)
   700 ;;_isspace$5943	offset	0
   701 ;;_c	offset=-2 (param)
   702 ;;_c	offset=-2 (param)
   703 ;;_dsize	offset=-2 (param)
   704 ;;_u	offset	0
   705 ;;_x	offset=-4 (param)
   706 ;;_timer	offset=-1 (param)
   707 ;;_count	offset=-3 (param)
   708 ;;_channel	offset=-1 (param)
   709 ;;_i	offset	0
   710                           
   711                           	psect	idataBIGRAM
   712  017BB8                     __pidataBIGRAM:
   713                           	opt callstack 0
   714                           
   715                           ;initializer for _port_data
   716  017BB8  FF                 	db	255
   717  017BB9  00                 	db	0
   718  017BBA  FF                 	db	255
   719  017BBB  00                 	db	0
   720  017BBC  FF                 	db	255
   721  017BBD  00                 	db	0
   722  017BBE  FF                 	db	255
   723  017BBF  00                 	db	0
   724  017BC0  FF                 	db	255
   725  017BC1  00                 	db	0
   726  017BC2  FF                 	db	255
   727  017BC3  00                 	db	0
   728  017BC4  FF                 	db	255
   729  017BC5  00                 	db	0
   730  017BC6  FF                 	db	255
   731  017BC7  00                 	db	0
   732  017BC8  00                 	db	0
   733  017BC9  00                 	db	0
   734  017BCA  00                 	db	0
   735  017BCB  00                 	db	0
   736  017BCC  00                 	db	0
   737  017BCD  00                 	db	0
   738  017BCE  00                 	db	0
   739  017BCF  00                 	db	0
   740  017BD0  00                 	db	0
   741  017BD1  00                 	db	0
   742  017BD2  00                 	db	0
   743  017BD3  00                 	db	0
   744  017BD4  00                 	db	0
   745  017BD5  00                 	db	0
   746  017BD6  00                 	db	0
   747  017BD7  00                 	db	0
   748  017BD8  00                 	db	0
   749  017BD9  00                 	db	0
   750  017BDA  00                 	db	0
   751  017BDB  00                 	db	0
   752  017BDC  00                 	db	0
   753  017BDD  00                 	db	0
   754  017BDE  00                 	db	0
   755  017BDF  00                 	db	0
   756  017BE0  00                 	db	0
   757  017BE1  00                 	db	0
   758  017BE2  00                 	db	0
   759  017BE3  00                 	db	0
   760  017BE4  00                 	db	0
   761  017BE5  00                 	db	0
   762  017BE6  00                 	db	0
   763  017BE7  00                 	db	0
   764  017BE8  00                 	db	0
   765  017BE9  00                 	db	0
   766  017BEA  00                 	db	0
   767  017BEB  00                 	db	0
   768  017BEC  00                 	db	0
   769  017BED  00                 	db	0
   770  017BEE  00                 	db	0
   771  017BEF  00                 	db	0
   772  017BF0  00                 	db	0
   773  017BF1  00                 	db	0
   774  017BF2  00                 	db	0
   775  017BF3  00                 	db	0
   776  017BF4  00                 	db	0
   777  017BF5  00                 	db	0
   778  017BF6  00                 	db	0
   779  017BF7  00                 	db	0
   780  017BF8  00                 	db	0
   781  017BF9  00                 	db	0
   782  017BFA  00                 	db	0
   783  017BFB  00                 	db	0
   784  017BFC  00                 	db	0
   785  017BFD  00                 	db	0
   786  017BFE  00                 	db	0
   787  017BFF  00                 	db	0
   788  017C00  00                 	db	0
   789  017C01  00                 	db	0
   790  017C02  00                 	db	0
   791  017C03  00                 	db	0
   792  017C04  00                 	db	0
   793  017C05  00                 	db	0
   794  017C06  00                 	db	0
   795  017C07  00                 	db	0
   796  017C08  00                 	db	0
   797  017C09  00                 	db	0
   798  017C0A  00                 	db	0
   799  017C0B  00                 	db	0
   800  017C0C  00                 	db	0
   801  017C0D  00                 	db	0
   802  017C0E  00                 	db	0
   803  017C0F  00                 	db	0
   804  017C10  00                 	db	0
   805  017C11  00                 	db	0
   806  017C12  00                 	db	0
   807  017C13  00                 	db	0
   808  017C14  00                 	db	0
   809  017C15  00                 	db	0
   810  017C16  00                 	db	0
   811  017C17  00                 	db	0
   812  017C18  00                 	db	0
   813  017C19  00                 	db	0
   814  017C1A  00                 	db	0
   815  017C1B  00                 	db	0
   816  017C1C  00                 	db	0
   817  017C1D  00                 	db	0
   818  017C1E  00                 	db	0
   819  017C1F  00                 	db	0
   820  017C20  00                 	db	0
   821  017C21  00                 	db	0
   822  017C22  00                 	db	0
   823  017C23  00                 	db	0
   824  017C24  00                 	db	0
   825  017C25  00                 	db	0
   826  017C26  00                 	db	0
   827  017C27  00                 	db	0
   828  017C28  00                 	db	0
   829  017C29  00                 	db	0
   830  017C2A  00                 	db	0
   831  017C2B  00                 	db	0
   832  017C2C  00                 	db	0
   833  017C2D  00                 	db	0
   834  017C2E  00                 	db	0
   835  017C2F  00                 	db	0
   836  017C30  00                 	db	0
   837  017C31  00                 	db	0
   838  017C32  00                 	db	0
   839  017C33  00                 	db	0
   840  017C34  00                 	db	0
   841  017C35  00                 	db	0
   842  017C36  00                 	db	0
   843  017C37  00                 	db	0
   844  017C38  00                 	db	0
   845  017C39  00                 	db	0
   846  017C3A  00                 	db	0
   847  017C3B  00                 	db	0
   848  017C3C  00                 	db	0
   849  017C3D  00                 	db	0
   850  017C3E  00                 	db	0
   851  017C3F  00                 	db	0
   852  017C40  00                 	db	0
   853  017C41  00                 	db	0
   854  017C42  00                 	db	0
   855  017C43  00                 	db	0
   856  017C44  00                 	db	0
   857  017C45  00                 	db	0
   858  017C46  00                 	db	0
   859  017C47  00                 	db	0
   860  017C48  00                 	db	0
   861  017C49  00                 	db	0
   862  017C4A  00                 	db	0
   863  017C4B  00                 	db	0
   864  017C4C  00                 	db	0
   865  017C4D  00                 	db	0
   866  017C4E  00                 	db	0
   867  017C4F  00                 	db	0
   868  017C50  00                 	db	0
   869  017C51  00                 	db	0
   870  017C52  00                 	db	0
   871  017C53  00                 	db	0
   872  017C54  00                 	db	0
   873  017C55  00                 	db	0
   874  017C56  00                 	db	0
   875  017C57  00                 	db	0
   876  017C58  00                 	db	0
   877  017C59  00                 	db	0
   878  017C5A  00                 	db	0
   879  017C5B  00                 	db	0
   880  017C5C  00                 	db	0
   881  017C5D  00                 	db	0
   882  017C5E  00                 	db	0
   883  017C5F  00                 	db	0
   884  017C60  00                 	db	0
   885  017C61  00                 	db	0
   886  017C62  00                 	db	0
   887  017C63  00                 	db	0
   888  017C64  00                 	db	0
   889  017C65  00                 	db	0
   890  017C66  00                 	db	0
   891  017C67  00                 	db	0
   892  017C68  00                 	db	0
   893  017C69  00                 	db	0
   894  017C6A  00                 	db	0
   895  017C6B  00                 	db	0
   896  017C6C  00                 	db	0
   897  017C6D  00                 	db	0
   898  017C6E  00                 	db	0
   899  017C6F  00                 	db	0
   900  017C70  00                 	db	0
   901  017C71  00                 	db	0
   902  017C72  00                 	db	0
   903  017C73  00                 	db	0
   904  017C74  00                 	db	0
   905  017C75  00                 	db	0
   906  017C76  00                 	db	0
   907  017C77  00                 	db	0
   908  017C78  00                 	db	0
   909  017C79  00                 	db	0
   910  017C7A  00                 	db	0
   911  017C7B  00                 	db	0
   912  017C7C  00                 	db	0
   913  017C7D  00                 	db	0
   914  017C7E  00                 	db	0
   915  017C7F  00                 	db	0
   916  017C80  00                 	db	0
   917  017C81  00                 	db	0
   918  017C82  00                 	db	0
   919  017C83  00                 	db	0
   920  017C84  00                 	db	0
   921  017C85  00                 	db	0
   922  017C86  00                 	db	0
   923  017C87  00                 	db	0
   924  017C88  00                 	db	0
   925  017C89  00                 	db	0
   926  017C8A  00                 	db	0
   927  017C8B  00                 	db	0
   928  017C8C  00                 	db	0
   929  017C8D  00                 	db	0
   930  017C8E  00                 	db	0
   931  017C8F  00                 	db	0
   932  017C90  00                 	db	0
   933  017C91  00                 	db	0
   934  017C92  00                 	db	0
   935  017C93  00                 	db	0
   936  017C94  00                 	db	0
   937  017C95  00                 	db	0
   938  017C96  00                 	db	0
   939  017C97  00                 	db	0
   940  017C98  00                 	db	0
   941  017C99  00                 	db	0
   942  017C9A  00                 	db	0
   943  017C9B  00                 	db	0
   944  017C9C  00                 	db	0
   945  017C9D  00                 	db	0
   946  017C9E  00                 	db	0
   947  017C9F  00                 	db	0
   948  017CA0  00                 	db	0
   949  017CA1  00                 	db	0
   950  017CA2  00                 	db	0
   951  017CA3  00                 	db	0
   952  017CA4  00                 	db	0
   953  017CA5  00                 	db	0
   954  017CA6  00                 	db	0
   955  017CA7  00                 	db	0
   956  017CA8  00                 	db	0
   957  017CA9  00                 	db	0
   958  017CAA  00                 	db	0
   959  017CAB  00                 	db	0
   960  017CAC  00                 	db	0
   961  017CAD  00                 	db	0
   962  017CAE  00                 	db	0
   963  017CAF  00                 	db	0
   964  017CB0  00                 	db	0
   965  017CB1  00                 	db	0
   966  017CB2  00                 	db	0
   967  017CB3  00                 	db	0
   968  017CB4  00                 	db	0
   969  017CB5  00                 	db	0
   970  017CB6  00                 	db	0
   971  017CB7  00                 	db	0
   972  017CB8  00                 	db	0
   973  017CB9  00                 	db	0
   974  017CBA  00                 	db	0
   975  017CBB  00                 	db	0
   976  017CBC  00                 	db	0
   977  017CBD  00                 	db	0
   978  017CBE  00                 	db	0
   979  017CBF  00                 	db	0
   980  017CC0  00                 	db	0
   981  017CC1  00                 	db	0
   982  017CC2  00                 	db	0
   983  017CC3  00                 	db	0
   984  017CC4  00                 	db	0
   985  017CC5  00                 	db	0
   986  017CC6  00                 	db	0
   987  017CC7  00                 	db	0
   988  017CC8  00                 	db	0
   989  017CC9  00                 	db	0
   990  017CCA  00                 	db	0
   991  017CCB  00                 	db	0
   992  017CCC  00                 	db	0
   993  017CCD  00                 	db	0
   994  017CCE  00                 	db	0
   995  017CCF  00                 	db	0
   996  017CD0  00                 	db	0
   997  017CD1  00                 	db	0
   998  017CD2  00                 	db	0
   999  017CD3  00                 	db	0
  1000  017CD4  00                 	db	0
  1001  017CD5  00                 	db	0
  1002  017CD6  00                 	db	0
  1003  017CD7  00                 	db	0
  1004  017CD8  00                 	db	0
  1005  017CD9  00                 	db	0
  1006  017CDA  00                 	db	0
  1007  017CDB  00                 	db	0
  1008  017CDC  00                 	db	0
  1009  017CDD  00                 	db	0
  1010  017CDE  00                 	db	0
  1011  017CDF  00                 	db	0
  1012  017CE0  00                 	db	0
  1013  017CE1  00                 	db	0
  1014  017CE2  00                 	db	0
  1015  017CE3  00                 	db	0
  1016  017CE4  00                 	db	0
  1017  017CE5  00                 	db	0
  1018  017CE6  00                 	db	0
  1019  017CE7  00                 	db	0
  1020  017CE8  00                 	db	0
  1021  017CE9  00                 	db	0
  1022  017CEA  00                 	db	0
  1023  017CEB  00                 	db	0
  1024  017CEC  00                 	db	0
  1025  017CED  00                 	db	0
  1026  017CEE  00                 	db	0
  1027  017CEF  00                 	db	0
  1028  017CF0  00                 	db	0
  1029  017CF1  00                 	db	0
  1030  017CF2  00                 	db	0
  1031  017CF3  00                 	db	0
  1032  017CF4  00                 	db	0
  1033  017CF5  00                 	db	0
  1034  017CF6  00                 	db	0
  1035  017CF7  00                 	db	0
  1036  017CF8  00                 	db	0
  1037  017CF9  00                 	db	0
  1038  017CFA  00                 	db	0
  1039  017CFB  00                 	db	0
  1040  017CFC  00                 	db	0
  1041  017CFD  00                 	db	0
  1042  017CFE  00                 	db	0
  1043  017CFF  00                 	db	0
  1044  017D00  00                 	db	0
  1045  017D01  00                 	db	0
  1046  017D02  00                 	db	0
  1047  017D03  00                 	db	0
  1048  017D04  00                 	db	0
  1049  017D05  00                 	db	0
  1050  017D06  00                 	db	0
  1051  017D07  00                 	db	0
  1052  017D08  00                 	db	0
  1053  017D09  00                 	db	0
  1054  017D0A  00                 	db	0
  1055  017D0B  00                 	db	0
  1056  017D0C  00                 	db	0
  1057  017D0D  00                 	db	0
  1058  017D0E  00                 	db	0
  1059  017D0F  00                 	db	0
  1060  017D10  00                 	db	0
  1061  017D11  00                 	db	0
  1062  017D12  00                 	db	0
  1063  017D13  00                 	db	0
  1064  017D14  00                 	db	0
  1065  017D15  00                 	db	0
  1066  017D16  00                 	db	0
  1067  017D17  00                 	db	0
  1068  017D18  00                 	db	0
  1069  017D19  00                 	db	0
  1070  017D1A  00                 	db	0
  1071  017D1B  00                 	db	0
  1072  017D1C  00                 	db	0
  1073  017D1D  00                 	db	0
  1074  017D1E  00                 	db	0
  1075  017D1F  00                 	db	0
  1076  017D20  00                 	db	0
  1077  017D21  00                 	db	0
  1078  017D22  00                 	db	0
  1079  017D23  00                 	db	0
  1080  017D24  00                 	db	0
  1081  017D25  00                 	db	0
  1082  017D26  00                 	db	0
  1083  017D27  00                 	db	0
  1084  017D28  00                 	db	0
  1085  017D29  00                 	db	0
  1086  017D2A  00                 	db	0
  1087  017D2B  00                 	db	0
  1088  017D2C  00                 	db	0
  1089  017D2D  00                 	db	0
  1090  017D2E  00                 	db	0
  1091  017D2F  00                 	db	0
  1092  017D30  00                 	db	0
  1093  017D31  00                 	db	0
  1094  017D32  00                 	db	0
  1095  017D33  00                 	db	0
  1096  017D34  00                 	db	0
  1097  017D35  00                 	db	0
  1098  017D36  00                 	db	0
  1099  017D37  00                 	db	0
  1100  017D38  00                 	db	0
  1101  017D39  00                 	db	0
  1102  017D3A  00                 	db	0
  1103  017D3B  00                 	db	0
  1104  017D3C  00                 	db	0
  1105  017D3D  00                 	db	0
  1106  017D3E  00                 	db	0
  1107  017D3F  00                 	db	0
  1108  017D40  00                 	db	0
  1109  017D41  00                 	db	0
  1110  017D42  00                 	db	0
  1111  017D43  00                 	db	0
  1112  017D44  00                 	db	0
  1113  017D45  00                 	db	0
  1114  017D46  00                 	db	0
  1115  017D47  00                 	db	0
  1116  017D48  00                 	db	0
  1117  017D49  00                 	db	0
  1118  017D4A  00                 	db	0
  1119  017D4B  00                 	db	0
  1120  017D4C  00                 	db	0
  1121  017D4D  00                 	db	0
  1122  017D4E  00                 	db	0
  1123  017D4F  00                 	db	0
  1124  017D50  00                 	db	0
  1125  017D51  00                 	db	0
  1126  017D52  00                 	db	0
  1127  017D53  00                 	db	0
  1128  017D54  00                 	db	0
  1129  017D55  00                 	db	0
  1130  017D56  00                 	db	0
  1131  017D57  00                 	db	0
  1132  017D58  00                 	db	0
  1133  017D59  00                 	db	0
  1134  017D5A  00                 	db	0
  1135  017D5B  00                 	db	0
  1136  017D5C  00                 	db	0
  1137  017D5D  00                 	db	0
  1138  017D5E  00                 	db	0
  1139  017D5F  00                 	db	0
  1140  017D60  00                 	db	0
  1141  017D61  00                 	db	0
  1142  017D62  00                 	db	0
  1143  017D63  00                 	db	0
  1144  017D64  00                 	db	0
  1145  017D65  00                 	db	0
  1146  017D66  00                 	db	0
  1147  017D67  00                 	db	0
  1148  017D68  00                 	db	0
  1149  017D69  00                 	db	0
  1150  017D6A  00                 	db	0
  1151  017D6B  00                 	db	0
  1152  017D6C  00                 	db	0
  1153  017D6D  00                 	db	0
  1154  017D6E  00                 	db	0
  1155  017D6F  00                 	db	0
  1156  017D70  00                 	db	0
  1157  017D71  00                 	db	0
  1158  017D72  00                 	db	0
  1159  017D73  00                 	db	0
  1160  017D74  00                 	db	0
  1161  017D75  00                 	db	0
  1162  017D76  00                 	db	0
  1163  017D77  00                 	db	0
  1164  017D78  00                 	db	0
  1165  017D79  00                 	db	0
  1166  017D7A  00                 	db	0
  1167  017D7B  00                 	db	0
  1168  017D7C  00                 	db	0
  1169  017D7D  00                 	db	0
  1170  017D7E  00                 	db	0
  1171  017D7F  00                 	db	0
  1172  017D80  00                 	db	0
  1173  017D81  00                 	db	0
  1174  017D82  00                 	db	0
  1175  017D83  00                 	db	0
  1176  017D84  00                 	db	0
  1177  017D85  00                 	db	0
  1178  017D86  00                 	db	0
  1179  017D87  00                 	db	0
  1180  017D88  00                 	db	0
  1181  017D89  00                 	db	0
  1182  017D8A  00                 	db	0
  1183  017D8B  00                 	db	0
  1184  017D8C  00                 	db	0
  1185  017D8D  00                 	db	0
  1186  017D8E  00                 	db	0
  1187  017D8F  00                 	db	0
  1188  017D90  00                 	db	0
  1189  017D91  00                 	db	0
  1190  017D92  00                 	db	0
  1191  017D93  00                 	db	0
  1192  017D94  00                 	db	0
  1193  017D95  00                 	db	0
  1194  017D96  00                 	db	0
  1195  017D97  00                 	db	0
  1196  017D98  00                 	db	0
  1197  017D99  00                 	db	0
  1198  017D9A  00                 	db	0
  1199  017D9B  00                 	db	0
  1200  017D9C  00                 	db	0
  1201  017D9D  00                 	db	0
  1202  017D9E  00                 	db	0
  1203  017D9F  00                 	db	0
  1204  017DA0  00                 	db	0
  1205  017DA1  00                 	db	0
  1206  017DA2  00                 	db	0
  1207  017DA3  00                 	db	0
  1208  017DA4  00                 	db	0
  1209  017DA5  00                 	db	0
  1210  017DA6  00                 	db	0
  1211  017DA7  00                 	db	0
  1212  017DA8  00                 	db	0
  1213  017DA9  00                 	db	0
  1214  017DAA  00                 	db	0
  1215  017DAB  00                 	db	0
  1216  017DAC  00                 	db	0
  1217  017DAD  00                 	db	0
  1218  017DAE  00                 	db	0
  1219  017DAF  00                 	db	0
  1220  017DB0  00                 	db	0
  1221  017DB1  00                 	db	0
  1222  017DB2  00                 	db	0
  1223  017DB3  00                 	db	0
  1224  017DB4  00                 	db	0
  1225  017DB5  00                 	db	0
  1226  017DB6  00                 	db	0
  1227  017DB7  00                 	db	0
  1228                           
  1229                           	psect	idataBANK0
  1230  01ADCC                     __pidataBANK0:
  1231                           	opt callstack 0
  1232                           
  1233                           ;initializer for _R
  1234  01ADCC  0000               	dw	0
  1235  01ADCE  0000               	dw	0
  1236  01ADD0  0000               	dw	0
  1237  01ADD2  0000               	dw	0
  1238  01ADD4  0000               	dw	0
  1239  01ADD6  0000               	dw	0
  1240  01ADD8  0000               	dw	0
  1241  01ADDA  0000               	dw	0
  1242  01ADDC  0000               	dw	0
  1243  01ADDE  0000               	dw	0
  1244  01ADE0  0000               	dw	0
  1245  01ADE2  0000               	dw	0
  1246  01ADE4  0000               	dw	0
  1247  01ADE6  0000               	dw	0
  1248  01ADE8  0000               	dw	0
  1249  01ADEA  0000               	dw	0
  1250  01ADEC  0F67               	dw	3943
  1251  01ADEE  0F8F               	dw	3983
  1252  01ADF0  00                 	db	0
  1253  01ADF1  0000               	dw	0
  1254  01ADF3  00                 	db	0
  1255                           
  1256                           ;initializer for stoa@F1166
  1257  01ADF4  28                 	db	40
  1258  01ADF5  6E                 	db	110
  1259  01ADF6  75                 	db	117
  1260  01ADF7  6C                 	db	108
  1261  01ADF8  6C                 	db	108
  1262  01ADF9  29                 	db	41
  1263  01ADFA  00                 	db	0
  1264                           
  1265                           ;initializer for _H
  1266  01ADFB  00                 	db	0
  1267  01ADFC  00                 	db	0
  1268  01ADFD  01                 	db	1
  1269  01ADFE  00                 	db	0
  1270  01ADFF  01                 	db	1
  1271  01AE00  00                 	db	0
  1272  01AE01  00                 	db	0
  1273                           
  1274                           	psect	idataBANK1
  1275  019618                     __pidataBANK1:
  1276                           	opt callstack 0
  1277                           
  1278                           ;initializer for _C
  1279  019618  0000               	dw	0
  1280  01961A  0000               	dw	0
  1281  01961C  0000               	dw	0
  1282  01961E  0000               	dw	0
  1283  019620  0000               	dw	0
  1284  019622  0000               	dw	0
  1285  019624  0000               	dw	0
  1286  019626  0000               	dw	0
  1287  019628  0000               	dw	0
  1288  01962A  0000               	dw	0
  1289  01962C  0000               	dw	0
  1290  01962E  0000               	dw	0
  1291  019630  0000               	dw	0
  1292  019632  0000               	dw	0
  1293  019634  0000               	dw	0
  1294  019636  0000               	dw	0
  1295  019638  0000               	dw	0
  1296  01963A  0000               	dw	0
  1297  01963C  0000               	dw	0
  1298  01963E  0000               	dw	0
  1299  019640  0000               	dw	0
  1300  019642  0000               	dw	0
  1301  019644  0000               	dw	0
  1302  019646  0000               	dw	0
  1303  019648  0000               	dw	0
  1304  01964A  0000               	dw	0
  1305  01964C  0000               	dw	0
  1306  01964E  0000               	dw	0
  1307  019650  0000               	dw	0
  1308  019652  0000               	dw	0
  1309  019654  0000               	dw	0
  1310  019656  0000               	dw	0
  1311  019658  0000               	dw	0
  1312  01965A  0000               	dw	0
  1313  01965C  0000               	dw	0
  1314  01965E  0000               	dw	0
  1315  019660  0000               	dw	0
  1316  019662  0000               	dw	0
  1317  019664  0000               	dw	0
  1318  019666  0000               	dw	0
  1319  019668  0000               	dw	0
  1320  01966A  0000               	dw	0
  1321  01966C  0000               	dw	0
  1322  01966E  0000               	dw	0
  1323  019670  0000               	dw	0
  1324  019672  0000               	dw	0
  1325  019674  0000               	dw	0
  1326  019676  0000               	dw	0
  1327  019678  0000               	dw	0
  1328  01967A  0000               	dw	0
  1329  01967C  0000               	dw	0
  1330  01967E  0000               	dw	0
  1331  019680  0000               	dw	0
  1332  019682  0000               	dw	0
  1333  019684  0000               	dw	0
  1334  019686  0000               	dw	0
  1335  019688  0000               	dw	0
  1336  01968A  0000               	dw	0
  1337  01968C  0000               	dw	0
  1338  01968E  0000               	dw	0
  1339  019690  0000               	dw	0
  1340  019692  0000               	dw	0
  1341  019694  0000               	dw	0
  1342  019696  0000               	dw	0
  1343  019698  0000               	dw	0
  1344  01969A  0000               	dw	0
  1345  01969C  0000               	dw	0
  1346  01969E  0000               	dw	0
  1347  0196A0  0000               	dw	0
  1348  0196A2  42FA               	dw	17146
  1349  0196A4  00                 	db	0
  1350  0196A5  00                 	db	0
  1351  0196A6  00                 	db	0
  1352  0196A7  00                 	db	0
  1353  0196A8  00                 	db	0
  1354  0196A9  00                 	db	0
  1355  0196AA  00                 	db	0
  1356  0196AB  00                 	db	0
  1357  0196AC  00                 	db	0
  1358  0196AD  00                 	db	0
  1359  0196AE  00                 	db	0
  1360  0196AF  00                 	db	0
  1361  0196B0  00                 	db	0
  1362  0196B1  00                 	db	0
  1363  0196B2  00                 	db	0
  1364  0196B3  00                 	db	0
  1365  0196B4  00                 	db	0
  1366  0196B5  00                 	db	0
  1367  0196B6  00                 	db	0
  1368  0196B7  00                 	db	0
  1369  0196B8  00                 	db	0
  1370  0196B9  00                 	db	0
  1371  0196BA  00                 	db	0
  1372  0196BB  00                 	db	0
  1373  0196BC  00                 	db	0
  1374  0196BD  00                 	db	0
  1375  0196BE  00                 	db	0
  1376  0196BF  00                 	db	0
  1377  0196C0  00                 	db	0
  1378  0196C1  00                 	db	0
  1379  0196C2  00                 	db	0
  1380  0196C3  00                 	db	0
  1381  0196C4  00                 	db	0
  1382  0196C5  00                 	db	0
  1383  0196C6  00                 	db	0
  1384  0196C7  00                 	db	0
  1385  0196C8  00                 	db	0
  1386  0196C9  00                 	db	0
  1387  0196CA  00                 	db	0
  1388  0196CB  00                 	db	0
  1389  0196CC  00                 	db	0
  1390  0196CD  00                 	db	0
  1391  0196CE  00                 	db	0
  1392  0196CF  00                 	db	0
  1393  0196D0  00                 	db	0
  1394  0196D1  00                 	db	0
  1395  0196D2  00                 	db	0
  1396  0196D3  00                 	db	0
  1397  0196D4  00                 	db	0
  1398  0196D5  00                 	db	0
  1399  0196D6  00                 	db	0
  1400  0196D7  00                 	db	0
  1401  0196D8  00                 	db	0
  1402  0196D9  00                 	db	0
  1403  0196DA  00                 	db	0
  1404  0196DB  00                 	db	0
  1405  0196DC  00                 	db	0
  1406  0196DD  00                 	db	0
  1407  0196DE  00                 	db	0
  1408  0196DF  00                 	db	0
  1409  0196E0  00                 	db	0
  1410  0196E1  00                 	db	0
  1411  0196E2  00                 	db	0
  1412  0196E3  00                 	db	0
  1413  0196E4  00                 	db	0
  1414  0196E5  00                 	db	0
  1415  0196E6  00                 	db	0
  1416  0196E7  00                 	db	0
  1417  0196E8  00                 	db	0
  1418  0196E9  00                 	db	0
  1419  0196EA  00                 	db	0
  1420  0196EB  00                 	db	0
  1421  0196EC  00                 	db	0
  1422  0196ED  00                 	db	0
  1423  0196EE  00                 	db	0
  1424  0196EF  00                 	db	0
  1425  0196F0  00                 	db	0
  1426  0196F1  00                 	db	0
  1427  0196F2  00                 	db	0
  1428  0196F3  00                 	db	0
  1429  0196F4  00                 	db	0
  1430  0196F5  00                 	db	0
  1431  0196F6  00                 	db	0
  1432  0196F7  00                 	db	0
  1433  0196F8  00                 	db	0
  1434  0196F9  00                 	db	0
  1435  0196FA  00                 	db	0
  1436  0196FB  00                 	db	0
  1437  0196FC  00                 	db	0
  1438  0196FD  00                 	db	0
  1439  0196FE  00                 	db	0
  1440  0196FF  00                 	db	0
  1441  019700  00                 	db	0
  1442  019701  00                 	db	0
  1443  019702  00                 	db	0
  1444  019703  00                 	db	0
  1445  019704  00                 	db	0
  1446  019705  00                 	db	0
  1447  019706  00                 	db	0
  1448  019707  00                 	db	0
  1449  019708  00                 	db	0
  1450  019709  00                 	db	0
  1451  01970A  00                 	db	0
  1452  01970B  00                 	db	0
  1453  01970C  00                 	db	0
  1454  01970D  00                 	db	0
  1455  01970E  00                 	db	0
  1456                           
  1457                           	psect	idataBANK2
  1458  019A78                     __pidataBANK2:
  1459                           	opt callstack 0
  1460                           
  1461                           ;initializer for _V
  1462  019A78  00                 	db	0
  1463  019A79  00                 	db	0
  1464  019A7A  00                 	db	0
  1465  019A7B  00                 	db	0
  1466  019A7C  00                 	db	0
  1467  019A7D  00                 	db	0
  1468  019A7E  00                 	db	0
  1469  019A7F  00                 	db	0
  1470  019A80  00                 	db	0
  1471  019A81  00                 	db	0
  1472  019A82  00                 	db	0
  1473  019A83  00                 	db	0
  1474  019A84  00                 	db	0
  1475  019A85  00                 	db	0
  1476  019A86  00                 	db	0
  1477  019A87  00                 	db	0
  1478  019A88  00                 	db	0
  1479  019A89  00                 	db	0
  1480  019A8A  00                 	db	0
  1481  019A8B  00                 	db	0
  1482  019A8C  00                 	db	0
  1483  019A8D  00                 	db	0
  1484  019A8E  00                 	db	0
  1485  019A8F  00                 	db	0
  1486  019A90  00                 	db	0
  1487  019A91  00                 	db	0
  1488  019A92  00                 	db	0
  1489  019A93  00                 	db	0
  1490  019A94  00                 	db	0
  1491  019A95  00                 	db	0
  1492  019A96  00                 	db	0
  1493  019A97  00                 	db	0
  1494  019A98  00                 	db	0
  1495  019A99  00                 	db	0
  1496  019A9A  00                 	db	0
  1497  019A9B  00                 	db	0
  1498  019A9C  00                 	db	0
  1499  019A9D  00                 	db	0
  1500  019A9E  00                 	db	0
  1501  019A9F  00                 	db	0
  1502  019AA0  00                 	db	0
  1503  019AA1  00                 	db	0
  1504  019AA2  00                 	db	0
  1505  019AA3  00                 	db	0
  1506  019AA4  00                 	db	0
  1507  019AA5  00                 	db	0
  1508  019AA6  00                 	db	0
  1509  019AA7  00                 	db	0
  1510  019AA8  00                 	db	0
  1511  019AA9  00                 	db	0
  1512  019AAA  00                 	db	0
  1513  019AAB  00                 	db	0
  1514  019AAC  00                 	db	0
  1515  019AAD  00                 	db	0
  1516  019AAE  00                 	db	0
  1517  019AAF  00                 	db	0
  1518  019AB0  00                 	db	0
  1519  019AB1  00                 	db	0
  1520  019AB2  00                 	db	0
  1521  019AB3  00                 	db	0
  1522  019AB4  00                 	db	0
  1523  019AB5  00                 	db	0
  1524  019AB6  00                 	db	0
  1525  019AB7  00                 	db	0
  1526  019AB8  00                 	db	0
  1527  019AB9  00                 	db	0
  1528  019ABA  00                 	db	0
  1529  019ABB  00                 	db	0
  1530  019ABC  00                 	db	0
  1531  019ABD  00                 	db	0
  1532  019ABE  00                 	db	0
  1533  019ABF  00                 	db	0
  1534  019AC0  00                 	db	0
  1535  019AC1  00                 	db	0
  1536  019AC2  00                 	db	0
  1537  019AC3  00                 	db	0
  1538  019AC4  00                 	db	0
  1539  019AC5  00                 	db	0
  1540  019AC6  00                 	db	0
  1541  019AC7  00                 	db	0
  1542  019AC8  00                 	db	0
  1543  019AC9  00                 	db	0
  1544  019ACA  00                 	db	0
  1545  019ACB  00                 	db	0
  1546  019ACC  00                 	db	0
  1547  019ACD  00                 	db	0
  1548  019ACE  00                 	db	0
  1549  019ACF  00                 	db	0
  1550  019AD0  00                 	db	0
  1551  019AD1  00                 	db	0
  1552  019AD2  00                 	db	0
  1553  019AD3  00                 	db	0
  1554  019AD4  00                 	db	0
  1555  019AD5  00                 	db	0
  1556  019AD6  00                 	db	0
  1557  019AD7  00                 	db	0
  1558  019AD8  00                 	db	0
  1559  019AD9  00                 	db	0
  1560  019ADA  00                 	db	0
  1561  019ADB  00                 	db	0
  1562  019ADC  00                 	db	0
  1563  019ADD  00                 	db	0
  1564  019ADE  00                 	db	0
  1565  019ADF  00                 	db	0
  1566  019AE0  00                 	db	0
  1567  019AE1  00                 	db	0
  1568  019AE2  00                 	db	0
  1569  019AE3  00                 	db	0
  1570  019AE4  00                 	db	0
  1571  019AE5  00                 	db	0
  1572  019AE6  00                 	db	0
  1573  019AE7  00                 	db	0
  1574  019AE8  00                 	db	0
  1575  019AE9  00                 	db	0
  1576  019AEA  00                 	db	0
  1577  019AEB  00                 	db	0
  1578  019AEC  00                 	db	0
  1579  019AED  00                 	db	0
  1580  019AEE  00                 	db	0
  1581  019AEF  00                 	db	0
  1582  019AF0  00                 	db	0
  1583  019AF1  00                 	db	0
  1584  019AF2  00                 	db	0
  1585  019AF3  00                 	db	0
  1586  019AF4  00                 	db	0
  1587  019AF5  00                 	db	0
  1588  019AF6  00                 	db	0
  1589  019AF7  00                 	db	0
  1590  019AF8  00                 	db	0
  1591  019AF9  0000               	dw	0
  1592  019AFB  0000               	dw	0
  1593  019AFD  0000               	dw	0
  1594  019AFF  0000               	dw	0
  1595  019B01  00                 	db	0
  1596  019B02  00                 	db	0
  1597  019B03  00                 	db	0
  1598  019B04  00                 	db	0
  1599  019B05  00                 	db	0
  1600  019B06  00                 	db	0
  1601  019B07  0000               	dw	0
  1602  019B09  0000               	dw	0
  1603  019B0B  0000               	dw	0
  1604  019B0D  0000               	dw	0
  1605  019B0F  0000               	dw	0
  1606  019B11  0000               	dw	0
  1607  019B13  00                 	db	0
  1608  019B14  00                 	db	0
  1609  019B15  00                 	db	0
  1610  019B16  00                 	db	0
  1611  019B17  00                 	db	0
  1612  019B18  00                 	db	0
  1613  019B19  00                 	db	0
  1614  019B1A  00                 	db	0
  1615  019B1B  00                 	db	0
  1616  019B1C  00                 	db	0
  1617  019B1D  00                 	db	0
  1618  019B1E  0000               	dw	0
  1619  019B20  0000               	dw	0
  1620  019B22  2D                 	db	45
  1621  019B23  00                 	db	0
  1622  019B24  00                 	db	0
  1623  019B25  0000               	dw	0
  1624  019B27  0000               	dw	0
  1625  019B29  0000               	dw	0
  1626  019B2B  0000               	dw	0
  1627  019B2D  0000               	dw	0
  1628  019B2F  0000               	dw	0
  1629  019B31  0000               	dw	0
  1630  019B33  0000               	dw	0
  1631                           
  1632                           	psect	mediumconst
  1633  00FA7A                     __pmediumconst:
  1634                           	opt callstack 0
  1635  00FA7A  00                 	db	0
  1636  00FA7B                     _BVSOC_TABLE:
  1637                           	opt callstack 0
  1638  00FA7B  59D8               	dw	23000
  1639  00FA7D  0000               	dw	0
  1640  00FA7F  0005               	dw	5
  1641  00FA81  0000               	dw	0
  1642  00FA83  5B68               	dw	23400
  1643  00FA85  0000               	dw	0
  1644  00FA87  000A               	dw	10
  1645  00FA89  0000               	dw	0
  1646  00FA8B  5C30               	dw	23600
  1647  00FA8D  0000               	dw	0
  1648  00FA8F  0014               	dw	20
  1649  00FA91  0000               	dw	0
  1650  00FA93  5E38               	dw	24120
  1651  00FA95  0000               	dw	0
  1652  00FA97  0019               	dw	25
  1653  00FA99  0000               	dw	0
  1654  00FA9B  5E88               	dw	24200
  1655  00FA9D  0000               	dw	0
  1656  00FA9F  001E               	dw	30
  1657  00FAA1  0000               	dw	0
  1658  00FAA3  5F78               	dw	24440
  1659  00FAA5  0000               	dw	0
  1660  00FAA7  0028               	dw	40
  1661  00FAA9  0000               	dw	0
  1662  00FAAB  5FDC               	dw	24540
  1663  00FAAD  0000               	dw	0
  1664  00FAAF  002D               	dw	45
  1665  00FAB1  0000               	dw	0
  1666  00FAB3  6018               	dw	24600
  1667  00FAB5  0000               	dw	0
  1668  00FAB7  0032               	dw	50
  1669  00FAB9  0000               	dw	0
  1670  00FABB  6046               	dw	24646
  1671  00FABD  0000               	dw	0
  1672  00FABF  0035               	dw	53
  1673  00FAC1  0000               	dw	0
  1674  00FAC3  607C               	dw	24700
  1675  00FAC5  0000               	dw	0
  1676  00FAC7  0037               	dw	55
  1677  00FAC9  0000               	dw	0
  1678  00FACB  60AE               	dw	24750
  1679  00FACD  0000               	dw	0
  1680  00FACF  0039               	dw	57
  1681  00FAD1  0000               	dw	0
  1682  00FAD3  60E0               	dw	24800
  1683  00FAD5  0000               	dw	0
  1684  00FAD7  003C               	dw	60
  1685  00FAD9  0000               	dw	0
  1686  00FADB  6112               	dw	24850
  1687  00FADD  0000               	dw	0
  1688  00FADF  003F               	dw	63
  1689  00FAE1  0000               	dw	0
  1690  00FAE3  615D               	dw	24925
  1691  00FAE5  0000               	dw	0
  1692  00FAE7  0043               	dw	67
  1693  00FAE9  0000               	dw	0
  1694  00FAEB  61A8               	dw	25000
  1695  00FAED  0000               	dw	0
  1696  00FAEF  0046               	dw	70
  1697  00FAF1  0000               	dw	0
  1698  00FAF3  61BC               	dw	25020
  1699  00FAF5  0000               	dw	0
  1700  00FAF7  0048               	dw	72
  1701  00FAF9  0000               	dw	0
  1702  00FAFB  61D0               	dw	25040
  1703  00FAFD  0000               	dw	0
  1704  00FAFF  004B               	dw	75
  1705  00FB01  0000               	dw	0
  1706  00FB03  61DA               	dw	25050
  1707  00FB05  0000               	dw	0
  1708  00FB07  0050               	dw	80
  1709  00FB09  0000               	dw	0
  1710  00FB0B  61E4               	dw	25060
  1711  00FB0D  0000               	dw	0
  1712  00FB0F  0055               	dw	85
  1713  00FB11  0000               	dw	0
  1714  00FB13  61F8               	dw	25080
  1715  00FB15  0000               	dw	0
  1716  00FB17  005A               	dw	90
  1717  00FB19  0000               	dw	0
  1718  00FB1B  6208               	dw	25096
  1719  00FB1D  0000               	dw	0
  1720  00FB1F  005C               	dw	92
  1721  00FB21  0000               	dw	0
  1722  00FB23  6222               	dw	25122
  1723  00FB25  0000               	dw	0
  1724  00FB27  005D               	dw	93
  1725  00FB29  0000               	dw	0
  1726  00FB2B  6234               	dw	25140
  1727  00FB2D  0000               	dw	0
  1728  00FB2F  005F               	dw	95
  1729  00FB31  0000               	dw	0
  1730  00FB33  6248               	dw	25160
  1731  00FB35  0000               	dw	0
  1732  00FB37  0061               	dw	97
  1733  00FB39  0000               	dw	0
  1734  00FB3B  625C               	dw	25180
  1735  00FB3D  0000               	dw	0
  1736  00FB3F  0064               	dw	100
  1737  00FB41  0000               	dw	0
  1738  00FB43  6784               	dw	26500
  1739  00FB45  0000               	dw	0
  1740  00FB47  0062               	dw	98
  1741  00FB49  0000               	dw	0
  1742  00FB4B                     __end_of_BVSOC_TABLE:
  1743                           	opt callstack 0
  1744  00FB4B                     _T:
  1745                           	opt callstack 0
  1746  00FB4B  63                 	db	99
  1747  00FB4C  6F                 	db	111
  1748  00FB4D  6D                 	db	109
  1749  00FB4E  6D                 	db	109
  1750  00FB4F  61                 	db	97
  1751  00FB50  6E                 	db	110
  1752  00FB51  64                 	db	100
  1753  00FB52  73                 	db	115
  1754  00FB53  20                 	db	32
  1755  00FB54  31                 	db	49
  1756  00FB55  00                 	db	0
  1757  00FB56  00                 	db	0
  1758  00FB57  00                 	db	0
  1759  00FB58  00                 	db	0
  1760  00FB59  00                 	db	0
  1761  00FB5A  00                 	db	0
  1762  00FB5B  00                 	db	0
  1763  00FB5C  00                 	db	0
  1764  00FB5D  64                 	db	100
  1765  00FB5E  69                 	db	105
  1766  00FB5F  73                 	db	115
  1767  00FB60  70                 	db	112
  1768  00FB61  6C                 	db	108
  1769  00FB62  61                 	db	97
  1770  00FB63  79                 	db	121
  1771  00FB64  73                 	db	115
  1772  00FB65  20                 	db	32
  1773  00FB66  31                 	db	49
  1774  00FB67  00                 	db	0
  1775  00FB68  00                 	db	0
  1776  00FB69  00                 	db	0
  1777  00FB6A  00                 	db	0
  1778  00FB6B  00                 	db	0
  1779  00FB6C  00                 	db	0
  1780  00FB6D  00                 	db	0
  1781  00FB6E  00                 	db	0
  1782  00FB6F  63                 	db	99
  1783  00FB70  6F                 	db	111
  1784  00FB71  6D                 	db	109
  1785  00FB72  6D                 	db	109
  1786  00FB73  61                 	db	97
  1787  00FB74  6E                 	db	110
  1788  00FB75  64                 	db	100
  1789  00FB76  73                 	db	115
  1790  00FB77  20                 	db	32
  1791  00FB78  32                 	db	50
  1792  00FB79  00                 	db	0
  1793  00FB7A  00                 	db	0
  1794  00FB7B  00                 	db	0
  1795  00FB7C  00                 	db	0
  1796  00FB7D  00                 	db	0
  1797  00FB7E  00                 	db	0
  1798  00FB7F  00                 	db	0
  1799  00FB80  00                 	db	0
  1800  00FB81  64                 	db	100
  1801  00FB82  69                 	db	105
  1802  00FB83  73                 	db	115
  1803  00FB84  70                 	db	112
  1804  00FB85  6C                 	db	108
  1805  00FB86  61                 	db	97
  1806  00FB87  79                 	db	121
  1807  00FB88  73                 	db	115
  1808  00FB89  20                 	db	32
  1809  00FB8A  32                 	db	50
  1810  00FB8B  00                 	db	0
  1811  00FB8C  00                 	db	0
  1812  00FB8D  00                 	db	0
  1813  00FB8E  00                 	db	0
  1814  00FB8F  00                 	db	0
  1815  00FB90  00                 	db	0
  1816  00FB91  00                 	db	0
  1817  00FB92  00                 	db	0
  1818  00FB93  63                 	db	99
  1819  00FB94  6F                 	db	111
  1820  00FB95  6D                 	db	109
  1821  00FB96  6D                 	db	109
  1822  00FB97  61                 	db	97
  1823  00FB98  6E                 	db	110
  1824  00FB99  64                 	db	100
  1825  00FB9A  73                 	db	115
  1826  00FB9B  20                 	db	32
  1827  00FB9C  33                 	db	51
  1828  00FB9D  00                 	db	0
  1829  00FB9E  00                 	db	0
  1830  00FB9F  00                 	db	0
  1831  00FBA0  00                 	db	0
  1832  00FBA1  00                 	db	0
  1833  00FBA2  00                 	db	0
  1834  00FBA3  00                 	db	0
  1835  00FBA4  00                 	db	0
  1836  00FBA5  64                 	db	100
  1837  00FBA6  69                 	db	105
  1838  00FBA7  73                 	db	115
  1839  00FBA8  70                 	db	112
  1840  00FBA9  6C                 	db	108
  1841  00FBAA  61                 	db	97
  1842  00FBAB  79                 	db	121
  1843  00FBAC  73                 	db	115
  1844  00FBAD  20                 	db	32
  1845  00FBAE  33                 	db	51
  1846  00FBAF  00                 	db	0
  1847  00FBB0  00                 	db	0
  1848  00FBB1  00                 	db	0
  1849  00FBB2  00                 	db	0
  1850  00FBB3  00                 	db	0
  1851  00FBB4  00                 	db	0
  1852  00FBB5  00                 	db	0
  1853  00FBB6  00                 	db	0
  1854  00FBB7  63                 	db	99
  1855  00FBB8  6F                 	db	111
  1856  00FBB9  6D                 	db	109
  1857  00FBBA  6D                 	db	109
  1858  00FBBB  61                 	db	97
  1859  00FBBC  6E                 	db	110
  1860  00FBBD  64                 	db	100
  1861  00FBBE  73                 	db	115
  1862  00FBBF  20                 	db	32
  1863  00FBC0  34                 	db	52
  1864  00FBC1  00                 	db	0
  1865  00FBC2  00                 	db	0
  1866  00FBC3  00                 	db	0
  1867  00FBC4  00                 	db	0
  1868  00FBC5  00                 	db	0
  1869  00FBC6  00                 	db	0
  1870  00FBC7  00                 	db	0
  1871  00FBC8  00                 	db	0
  1872  00FBC9  64                 	db	100
  1873  00FBCA  69                 	db	105
  1874  00FBCB  73                 	db	115
  1875  00FBCC  70                 	db	112
  1876  00FBCD  6C                 	db	108
  1877  00FBCE  61                 	db	97
  1878  00FBCF  79                 	db	121
  1879  00FBD0  73                 	db	115
  1880  00FBD1  20                 	db	32
  1881  00FBD2  34                 	db	52
  1882  00FBD3  00                 	db	0
  1883  00FBD4  00                 	db	0
  1884  00FBD5  00                 	db	0
  1885  00FBD6  00                 	db	0
  1886  00FBD7  00                 	db	0
  1887  00FBD8  00                 	db	0
  1888  00FBD9  00                 	db	0
  1889  00FBDA  00                 	db	0
  1890  00FBDB                     __end_of_T:
  1891                           	opt callstack 0
  1892  00FBDB                     _spin:
  1893                           	opt callstack 0
  1894  00FBDB  7C                 	db	124
  1895  00FBDC  7C                 	db	124
  1896  00FBDD  2F                 	db	47
  1897  00FBDE  2F                 	db	47
  1898  00FBDF  2D                 	db	45
  1899  00FBE0  2D                 	db	45
  1900  00FBE1  00                 	db	0
  1901  00FBE2  00                 	db	0
  1902  00FBE3  00                 	db	0
  1903  00FBE4  00                 	db	0
  1904  00FBE5  00                 	db	0
  1905  00FBE6  00                 	db	0
  1906  00FBE7  00                 	db	0
  1907  00FBE8  00                 	db	0
  1908  00FBE9  00                 	db	0
  1909  00FBEA  00                 	db	0
  1910  00FBEB  00                 	db	0
  1911  00FBEC  00                 	db	0
  1912  00FBED  00                 	db	0
  1913  00FBEE  00                 	db	0
  1914  00FBEF  7C                 	db	124
  1915  00FBF0  7C                 	db	124
  1916  00FBF1  2F                 	db	47
  1917  00FBF2  2F                 	db	47
  1918  00FBF3  2D                 	db	45
  1919  00FBF4  2D                 	db	45
  1920  00FBF5  5C                 	db	92
  1921  00FBF6  5C                 	db	92
  1922  00FBF7  00                 	db	0
  1923  00FBF8  00                 	db	0
  1924  00FBF9  00                 	db	0
  1925  00FBFA  00                 	db	0
  1926  00FBFB  00                 	db	0
  1927  00FBFC  00                 	db	0
  1928  00FBFD  00                 	db	0
  1929  00FBFE  00                 	db	0
  1930  00FBFF  00                 	db	0
  1931  00FC00  00                 	db	0
  1932  00FC01  00                 	db	0
  1933  00FC02  00                 	db	0
  1934  00FC03  4F                 	db	79
  1935  00FC04  4F                 	db	79
  1936  00FC05  4F                 	db	79
  1937  00FC06  4F                 	db	79
  1938  00FC07  4F                 	db	79
  1939  00FC08  4F                 	db	79
  1940  00FC09  2D                 	db	45
  1941  00FC0A  2D                 	db	45
  1942  00FC0B  5F                 	db	95
  1943  00FC0C  5F                 	db	95
  1944  00FC0D  2D                 	db	45
  1945  00FC0E  00                 	db	0
  1946  00FC0F  00                 	db	0
  1947  00FC10  00                 	db	0
  1948  00FC11  00                 	db	0
  1949  00FC12  00                 	db	0
  1950  00FC13  00                 	db	0
  1951  00FC14  00                 	db	0
  1952  00FC15  00                 	db	0
  1953  00FC16  00                 	db	0
  1954  00FC17  76                 	db	118
  1955  00FC18  76                 	db	118
  1956  00FC19  3C                 	db	60
  1957  00FC1A  3C                 	db	60
  1958  00FC1B  5E                 	db	94
  1959  00FC1C  5E                 	db	94
  1960  00FC1D  3E                 	db	62
  1961  00FC1E  3E                 	db	62
  1962  00FC1F  00                 	db	0
  1963  00FC20  00                 	db	0
  1964  00FC21  00                 	db	0
  1965  00FC22  00                 	db	0
  1966  00FC23  00                 	db	0
  1967  00FC24  00                 	db	0
  1968  00FC25  00                 	db	0
  1969  00FC26  00                 	db	0
  1970  00FC27  00                 	db	0
  1971  00FC28  00                 	db	0
  1972  00FC29  00                 	db	0
  1973  00FC2A  00                 	db	0
  1974  00FC2B  2E                 	db	46
  1975  00FC2C  2E                 	db	46
  1976  00FC2D  2A                 	db	42
  1977  00FC2E  2A                 	db	42
  1978  00FC2F  78                 	db	120
  1979  00FC30  23                 	db	35
  1980  00FC31  78                 	db	120
  1981  00FC32  23                 	db	35
  1982  00FC33  58                 	db	88
  1983  00FC34  58                 	db	88
  1984  00FC35  7C                 	db	124
  1985  00FC36  7C                 	db	124
  1986  00FC37  2D                 	db	45
  1987  00FC38  2D                 	db	45
  1988  00FC39  00                 	db	0
  1989  00FC3A  00                 	db	0
  1990  00FC3B  00                 	db	0
  1991  00FC3C  00                 	db	0
  1992  00FC3D  00                 	db	0
  1993  00FC3E  00                 	db	0
  1994  00FC3F  2E                 	db	46
  1995  00FC40  2E                 	db	46
  1996  00FC41  6F                 	db	111
  1997  00FC42  6F                 	db	111
  1998  00FC43  4F                 	db	79
  1999  00FC44  4F                 	db	79
  2000  00FC45  6F                 	db	111
  2001  00FC46  6F                 	db	111
  2002  00FC47  00                 	db	0
  2003  00FC48  00                 	db	0
  2004  00FC49  00                 	db	0
  2005  00FC4A  00                 	db	0
  2006  00FC4B  00                 	db	0
  2007  00FC4C  00                 	db	0
  2008  00FC4D  00                 	db	0
  2009  00FC4E  00                 	db	0
  2010  00FC4F  00                 	db	0
  2011  00FC50  00                 	db	0
  2012  00FC51  00                 	db	0
  2013  00FC52  00                 	db	0
  2014  00FC53                     __end_of_spin:
  2015                           	opt callstack 0
  2016  00FC53  0000               	dw	0
  2017  00FC55  3F80               	dw	16256
  2018  00FC57  0000               	dw	0
  2019  00FC59  3FC0               	dw	16320
  2020  00FC5B                     __end_of_bp:
  2021                           	opt callstack 0
  2022  00FC5B  AA00               	dw	43520
  2023  00FC5D  3FB8               	dw	16312
  2024  00FC5F                     __end_of_ivln2_h:
  2025                           	opt callstack 0
  2026  00FC5F  23C6               	dw	9158
  2027  00FC61  B8F6               	dw	47350
  2028  00FC63                     __end_of_cp_l:
  2029                           	opt callstack 0
  2030  00FC63  4000               	dw	16384
  2031  00FC65  3F76               	dw	16246
  2032  00FC67                     __end_of_cp_h:
  2033                           	opt callstack 0
  2034  0000                     _IVTADL	set	14493
  2035  0000                     _IVTADH	set	14494
  2036  0000                     _IVTADU	set	14495
  2037  0000                     _PIR6bits	set	14758
  2038  0000                     _PIR4bits	set	14756
  2039  0000                     _PIE8bits	set	14744
  2040  0000                     _PIR8bits	set	14760
  2041  0000                     _SCANPR	set	14839
  2042  0000                     _DMA2PR	set	14836
  2043  0000                     _DMA1PR	set	14835
  2044  0000                     _MAINPR	set	14834
  2045  0000                     _ISRPR	set	14833
  2046  0000                     _PIE2bits	set	14738
  2047  0000                     _PIR2bits	set	14754
  2048  0000                     _PIE9bits	set	14745
  2049  0000                     _PIR9bits	set	14761
  2050  0000                     _PIE6bits	set	14742
  2051  0000                     _PIE3bits	set	14739
  2052  0000                     _PMD7	set	14791
  2053  0000                     _PMD6	set	14790
  2054  0000                     _PMD5	set	14789
  2055  0000                     _PMD4	set	14788
  2056  0000                     _PMD3	set	14787
  2057  0000                     _PMD2	set	14786
  2058  0000                     _PMD1	set	14785
  2059  0000                     _PMD0	set	14784
  2060  0000                     _OSCTUNE	set	14814
  2061  0000                     _OSCFRQ	set	14815
  2062  0000                     _OSCEN	set	14813
  2063  0000                     _OSCCON3	set	14811
  2064  0000                     _OSCCON1	set	14809
  2065  0000                     _IPR8bits	set	14728
  2066  0000                     _IPR9bits	set	14729
  2067  0000                     _IPR5bits	set	14725
  2068  0000                     _IPR1bits	set	14721
  2069  0000                     _IPR3bits	set	14723
  2070  0000                     _IPR6bits	set	14726
  2071  0000                     _IPR2bits	set	14722
  2072  0000                     _PIE5bits	set	14741
  2073  0000                     _PIE1bits	set	14737
  2074  0000                     _PIR5bits	set	14757
  2075  0000                     _PIR1bits	set	14753
  2076  0000                     _PLLR	set	118496
  2077  0000                     _SPI1SDIPPS	set	15071
  2078  0000                     _U1RXPPS	set	15077
  2079  0000                     _RC6PPS	set	14870
  2080  0000                     _RC5PPS	set	14869
  2081  0000                     _INT1PPS	set	15041
  2082  0000                     _RD1PPS	set	14873
  2083  0000                     _INT0PPS	set	15040
  2084  0000                     _RC3PPS	set	14867
  2085  0000                     _RB6PPS	set	14862
  2086  0000                     _SPI1SCKPPS	set	15070
  2087  0000                     _U2RXPPS	set	15080
  2088  0000                     _SLRCONF	set	14995
  2089  0000                     _SLRCONE	set	14979
  2090  0000                     _SLRCOND	set	14963
  2091  0000                     _SLRCONC	set	14947
  2092  0000                     _SLRCONB	set	14931
  2093  0000                     _SLRCONA	set	14915
  2094  0000                     _ODCOND	set	14962
  2095  0000                     _ODCONC	set	14946
  2096  0000                     _ODCONB	set	14930
  2097  0000                     _ODCONA	set	14914
  2098  0000                     _ODCONF	set	14994
  2099  0000                     _ODCONE	set	14978
  2100  0000                     _WPUC	set	14945
  2101  0000                     _WPUA	set	14913
  2102  0000                     _WPUB	set	14929
  2103  0000                     _WPUE	set	14977
  2104  0000                     _WPUF	set	14993
  2105  0000                     _WPUD	set	14961
  2106  0000                     _ANSELA	set	14912
  2107  0000                     _ANSELF	set	14992
  2108  0000                     _ANSELE	set	14976
  2109  0000                     _ANSELB	set	14928
  2110  0000                     _ANSELC	set	14944
  2111  0000                     _ANSELD	set	14960
  2112  0000                     _DMA2SSA	set	15321
  2113  0000                     _DMA1SSA	set	15353
  2114  0000                     _DMA2DSZ	set	15310
  2115  0000                     _DMA2SSZ	set	15319
  2116  0000                     _DMA2DSA	set	15312
  2117  0000                     _DMA1DSZ	set	15342
  2118  0000                     _DMA1SSZ	set	15351
  2119  0000                     _DMA1DSA	set	15344
  2120  0000                     _DMA2CON0bits	set	15324
  2121  0000                     _DMA2CON1bits	set	15325
  2122  0000                     _DMA1CON0bits	set	15356
  2123  0000                     _DMA1CON1bits	set	15357
  2124  0000                     _DMA2CON0	set	15324
  2125  0000                     _DMA2AIRQ	set	15326
  2126  0000                     _DMA2SIRQ	set	15327
  2127  0000                     _DMA2CON1	set	15325
  2128  0000                     _DMA1CON0	set	15356
  2129  0000                     _DMA1AIRQ	set	15358
  2130  0000                     _DMA1SIRQ	set	15359
  2131  0000                     _DMA1CON1	set	15357
  2132  0000                     _CLKRCON	set	15589
  2133  0000                     _CLKRCLK	set	15590
  2134  0000                     _SPI1INTFbits	set	15642
  2135  0000                     _SPI1RXB	set	15632
  2136  0000                     _SPI1TXB	set	15633
  2137  0000                     _SPI1TCNTL	set	15634
  2138  0000                     _SPI1CON0	set	15636
  2139  0000                     _SPI1CLK	set	15644
  2140  0000                     _SPI1BAUD	set	15641
  2141  0000                     _SPI1CON2	set	15638
  2142  0000                     _SPI1CON1	set	15637
  2143  0000                     _U2RXB	set	15824
  2144  0000                     _U2TXB	set	15826
  2145  0000                     _U2ERRIE	set	15842
  2146  0000                     _U2ERRIR	set	15841
  2147  0000                     _U2UIR	set	15840
  2148  0000                     _U2FIFO	set	15839
  2149  0000                     _U2BRGH	set	15838
  2150  0000                     _U2BRGL	set	15837
  2151  0000                     _U2CON2	set	15836
  2152  0000                     _U2CON1	set	15835
  2153  0000                     _U2CON0	set	15834
  2154  0000                     _U2P3L	set	15832
  2155  0000                     _U2P2L	set	15830
  2156  0000                     _U2P1L	set	15828
  2157  0000                     _U1RXB	set	15848
  2158  0000                     _U1ERRIE	set	15866
  2159  0000                     _U1ERRIR	set	15865
  2160  0000                     _U1UIR	set	15864
  2161  0000                     _U1FIFO	set	15863
  2162  0000                     _U1BRGH	set	15862
  2163  0000                     _U1BRGL	set	15861
  2164  0000                     _U1CON2	set	15860
  2165  0000                     _U1CON1	set	15859
  2166  0000                     _U1CON0	set	15858
  2167  0000                     _U1P3H	set	15857
  2168  0000                     _U1P3L	set	15856
  2169  0000                     _U1P2H	set	15855
  2170  0000                     _U1P2L	set	15854
  2171  0000                     _U1P1H	set	15853
  2172  0000                     _U1P1L	set	15852
  2173  0000                     _FVRCON	set	16065
  2174  0000                     _ADFLTRL	set	16102
  2175  0000                     _ADFLTRH	set	16103
  2176  0000                     _ADCON0bits	set	16120
  2177  0000                     _ADCON0	set	16120
  2178  0000                     _ADCLK	set	16127
  2179  0000                     _ADACT	set	16126
  2180  0000                     _ADREF	set	16125
  2181  0000                     _ADSTAT	set	16124
  2182  0000                     _ADCON3	set	16123
  2183  0000                     _ADCON2	set	16122
  2184  0000                     _ADCON1	set	16121
  2185  0000                     _ADPREH	set	16119
  2186  0000                     _ADPREL	set	16118
  2187  0000                     _ADCAP	set	16117
  2188  0000                     _ADACQH	set	16116
  2189  0000                     _ADACQL	set	16115
  2190  0000                     _ADPCH	set	16113
  2191  0000                     _ADRPT	set	16108
  2192  0000                     _ADACCU	set	16106
  2193  0000                     _ADSTPTH	set	16101
  2194  0000                     _ADSTPTL	set	16100
  2195  0000                     _ADUTHH	set	16097
  2196  0000                     _ADUTHL	set	16096
  2197  0000                     _ADLTHH	set	16095
  2198  0000                     _ADLTHL	set	16094
  2199  0000                     _CCPTMRS1bits	set	16223
  2200  0000                     _PORTFbits	set	16335
  2201  0000                     _LATCbits	set	16316
  2202  0000                     _LATDbits	set	16317
  2203  0000                     _PORTBbits	set	16331
  2204  0000                     _T3CONbits	set	16294
  2205  0000                     _T3CON	set	16294
  2206  0000                     _TMR3L	set	16292
  2207  0000                     _TMR3H	set	16293
  2208  0000                     _T3CLK	set	16297
  2209  0000                     _T3GATE	set	16296
  2210  0000                     _T3GCON	set	16295
  2211  0000                     _T2CON	set	16300
  2212  0000                     _T2TMR	set	16298
  2213  0000                     _T2PR	set	16299
  2214  0000                     _T2RST	set	16303
  2215  0000                     _T2HLT	set	16301
  2216  0000                     _T2CLKCON	set	16302
  2217  0000                     _PWM8DCL	set	16224
  2218  0000                     _PWM8DCH	set	16225
  2219  0000                     _PWM8CON	set	16226
  2220  0000                     _LATEbits	set	16318
  2221  0000                     _T5CONbits	set	16282
  2222  0000                     _T5CON	set	16282
  2223  0000                     _TMR5L	set	16280
  2224  0000                     _TMR5H	set	16281
  2225  0000                     _T5CLK	set	16285
  2226  0000                     _T5GATE	set	16284
  2227  0000                     _T5GCON	set	16283
  2228  0000                     _T6CON	set	16276
  2229  0000                     _T6TMR	set	16274
  2230  0000                     _T6PR	set	16275
  2231  0000                     _T6RST	set	16279
  2232  0000                     _T6HLT	set	16277
  2233  0000                     _T6CLKCON	set	16278
  2234  0000                     _TRISD	set	16325
  2235  0000                     _TRISC	set	16324
  2236  0000                     _TRISB	set	16323
  2237  0000                     _TRISA	set	16322
  2238  0000                     _TRISF	set	16327
  2239  0000                     _TRISE	set	16326
  2240  0000                     _LATC	set	16316
  2241  0000                     _LATB	set	16315
  2242  0000                     _LATF	set	16319
  2243  0000                     _LATA	set	16314
  2244  0000                     _LATD	set	16317
  2245  0000                     _LATE	set	16318
  2246  0000                     _IVTLOCKbits	set	16340
  2247  0000                     _IVTLOCK	set	16340
  2248  0000                     _INTCON0bits	set	16338
  2249  0000                     _GIE	set	130711
  2250  00FC67                     STR_65:
  2251                           
  2252                           ; BSR set to: 57
  2253  00FC67  20                 	db	32
  2254  00FC68  25                 	db	37
  2255  00FC69  6C                 	db	108	;'l'
  2256  00FC6A  75                 	db	117	;'u'
  2257  00FC6B  2C                 	db	44
  2258  00FC6C  25                 	db	37
  2259  00FC6D  34                 	db	52	;'4'
  2260  00FC6E  2E                 	db	46
  2261  00FC6F  34                 	db	52	;'4'
  2262  00FC70  66                 	db	102	;'f'
  2263  00FC71  2C                 	db	44
  2264  00FC72  25                 	db	37
  2265  00FC73  34                 	db	52	;'4'
  2266  00FC74  2E                 	db	46
  2267  00FC75  34                 	db	52	;'4'
  2268  00FC76  66                 	db	102	;'f'
  2269  00FC77  2C                 	db	44
  2270  00FC78  25                 	db	37
  2271  00FC79  34                 	db	52	;'4'
  2272  00FC7A  2E                 	db	46
  2273  00FC7B  34                 	db	52	;'4'
  2274  00FC7C  66                 	db	102	;'f'
  2275  00FC7D  2C                 	db	44
  2276  00FC7E  25                 	db	37
  2277  00FC7F  34                 	db	52	;'4'
  2278  00FC80  2E                 	db	46
  2279  00FC81  34                 	db	52	;'4'
  2280  00FC82  66                 	db	102	;'f'
  2281  00FC83  2C                 	db	44
  2282  00FC84  25                 	db	37
  2283  00FC85  34                 	db	52	;'4'
  2284  00FC86  2E                 	db	46
  2285  00FC87  33                 	db	51	;'3'
  2286  00FC88  66                 	db	102	;'f'
  2287  00FC89  2C                 	db	44
  2288  00FC8A  25                 	db	37
  2289  00FC8B  34                 	db	52	;'4'
  2290  00FC8C  2E                 	db	46
  2291  00FC8D  33                 	db	51	;'3'
  2292  00FC8E  66                 	db	102	;'f'
  2293  00FC8F  2C                 	db	44
  2294  00FC90  25                 	db	37
  2295  00FC91  34                 	db	52	;'4'
  2296  00FC92  2E                 	db	46
  2297  00FC93  33                 	db	51	;'3'
  2298  00FC94  66                 	db	102	;'f'
  2299  00FC95  2C                 	db	44
  2300  00FC96  25                 	db	37
  2301  00FC97  34                 	db	52	;'4'
  2302  00FC98  2E                 	db	46
  2303  00FC99  33                 	db	51	;'3'
  2304  00FC9A  66                 	db	102	;'f'
  2305  00FC9B  2C                 	db	44
  2306  00FC9C  25                 	db	37
  2307  00FC9D  34                 	db	52	;'4'
  2308  00FC9E  2E                 	db	46
  2309  00FC9F  33                 	db	51	;'3'
  2310  00FCA0  66                 	db	102	;'f'
  2311  00FCA1  2C                 	db	44
  2312  00FCA2  25                 	db	37
  2313  00FCA3  34                 	db	52	;'4'
  2314  00FCA4  2E                 	db	46
  2315  00FCA5  33                 	db	51	;'3'
  2316  00FCA6  66                 	db	102	;'f'
  2317  00FCA7  2C                 	db	44
  2318  00FCA8  25                 	db	37
  2319  00FCA9  34                 	db	52	;'4'
  2320  00FCAA  2E                 	db	46
  2321  00FCAB  33                 	db	51	;'3'
  2322  00FCAC  64                 	db	100	;'d'
  2323  00FCAD  2C                 	db	44
  2324  00FCAE  25                 	db	37
  2325  00FCAF  34                 	db	52	;'4'
  2326  00FCB0  2E                 	db	46
  2327  00FCB1  33                 	db	51	;'3'
  2328  00FCB2  64                 	db	100	;'d'
  2329  00FCB3  2C                 	db	44
  2330  00FCB4  25                 	db	37
  2331  00FCB5  32                 	db	50	;'2'
  2332  00FCB6  2E                 	db	46
  2333  00FCB7  36                 	db	54	;'6'
  2334  00FCB8  66                 	db	102	;'f'
  2335  00FCB9  0D                 	db	13
  2336  00FCBA  0A                 	db	10
  2337  00FCBB  00                 	db	0
  2338  00FCBC                     STR_17:
  2339                           
  2340                           ; BSR set to: 57
  2341  00FCBC  52                 	db	82	;'R'
  2342  00FCBD  31                 	db	49	;'1'
  2343  00FCBE  20                 	db	32
  2344  00FCBF  25                 	db	37
  2345  00FCC0  32                 	db	50	;'2'
  2346  00FCC1  2E                 	db	46
  2347  00FCC2  33                 	db	51	;'3'
  2348  00FCC3  66                 	db	102	;'f'
  2349  00FCC4  20                 	db	32
  2350  00FCC5  25                 	db	37
  2351  00FCC6  33                 	db	51	;'3'
  2352  00FCC7  2E                 	db	46
  2353  00FCC8  34                 	db	52	;'4'
  2354  00FCC9  66                 	db	102	;'f'
  2355  00FCCA  20                 	db	32
  2356  00FCCB  20                 	db	32
  2357  00FCCC  20                 	db	32
  2358  00FCCD  20                 	db	32
  2359  00FCCE  20                 	db	32
  2360  00FCCF  20                 	db	32
  2361  00FCD0  20                 	db	32
  2362  00FCD1  20                 	db	32
  2363  00FCD2  20                 	db	32
  2364  00FCD3  20                 	db	32
  2365  00FCD4  20                 	db	32
  2366  00FCD5  00                 	db	0
  2367  00FCD6                     STR_18:
  2368                           
  2369                           ; BSR set to: 57
  2370  00FCD6  52                 	db	82	;'R'
  2371  00FCD7  32                 	db	50	;'2'
  2372  00FCD8  20                 	db	32
  2373  00FCD9  25                 	db	37
  2374  00FCDA  32                 	db	50	;'2'
  2375  00FCDB  2E                 	db	46
  2376  00FCDC  33                 	db	51	;'3'
  2377  00FCDD  66                 	db	102	;'f'
  2378  00FCDE  20                 	db	32
  2379  00FCDF  25                 	db	37
  2380  00FCE0  33                 	db	51	;'3'
  2381  00FCE1  2E                 	db	46
  2382  00FCE2  34                 	db	52	;'4'
  2383  00FCE3  66                 	db	102	;'f'
  2384  00FCE4  20                 	db	32
  2385  00FCE5  20                 	db	32
  2386  00FCE6  20                 	db	32
  2387  00FCE7  20                 	db	32
  2388  00FCE8  20                 	db	32
  2389  00FCE9  20                 	db	32
  2390  00FCEA  20                 	db	32
  2391  00FCEB  20                 	db	32
  2392  00FCEC  20                 	db	32
  2393  00FCED  20                 	db	32
  2394  00FCEE  20                 	db	32
  2395  00FCEF  00                 	db	0
  2396  00FCF0                     
  2397                           ; BSR set to: 57
  2398  00FCF0  20                 	db	32
  2399  00FCF1  4D                 	db	77	;'M'
  2400  00FCF2  65                 	db	101	;'e'
  2401  00FCF3  73                 	db	115	;'s'
  2402  00FCF4  67                 	db	103	;'g'
  2403  00FCF5  20                 	db	32
  2404  00FCF6  25                 	db	37
  2405  00FCF7  64                 	db	100	;'d'
  2406  00FCF8  20                 	db	32
  2407  00FCF9  53                 	db	83	;'S'
  2408  00FCFA  74                 	db	116	;'t'
  2409  00FCFB  61                 	db	97	;'a'
  2410  00FCFC  63                 	db	99	;'c'
  2411  00FCFD  6B                 	db	107	;'k'
  2412  00FCFE  20                 	db	32
  2413  00FCFF  25                 	db	37
  2414  00FD00  64                 	db	100	;'d'
  2415  00FD01  20                 	db	32
  2416  00FD02  20                 	db	32
  2417  00FD03  20                 	db	32
  2418  00FD04  20                 	db	32
  2419  00FD05  20                 	db	32
  2420  00FD06  20                 	db	32
  2421  00FD07  00                 	db	0
  2422  00FD08                     STR_9:
  2423                           
  2424                           ; BSR set to: 57
  2425  00FD08  53                 	db	83	;'S'
  2426  00FD09  20                 	db	32
  2427  00FD0A  53                 	db	83	;'S'
  2428  00FD0B  25                 	db	37
  2429  00FD0C  63                 	db	99	;'c'
  2430  00FD0D  43                 	db	67	;'C'
  2431  00FD0E  20                 	db	32
  2432  00FD0F  25                 	db	37
  2433  00FD10  64                 	db	100	;'d'
  2434  00FD11  20                 	db	32
  2435  00FD12  25                 	db	37
  2436  00FD13  32                 	db	50	;'2'
  2437  00FD14  2E                 	db	46
  2438  00FD15  34                 	db	52	;'4'
  2439  00FD16  66                 	db	102	;'f'
  2440  00FD17  20                 	db	32
  2441  00FD18  20                 	db	32
  2442  00FD19  20                 	db	32
  2443  00FD1A  20                 	db	32
  2444  00FD1B  20                 	db	32
  2445  00FD1C  20                 	db	32
  2446  00FD1D  20                 	db	32
  2447  00FD1E  00                 	db	0
  2448  00FD1F                     STR_16:
  2449                           
  2450                           ; BSR set to: 57
  2451  00FD1F  45                 	db	69	;'E'
  2452  00FD20  53                 	db	83	;'S'
  2453  00FD21  52                 	db	82	;'R'
  2454  00FD22  20                 	db	32
  2455  00FD23  20                 	db	32
  2456  00FD24  25                 	db	37
  2457  00FD25  32                 	db	50	;'2'
  2458  00FD26  2E                 	db	46
  2459  00FD27  36                 	db	54	;'6'
  2460  00FD28  66                 	db	102	;'f'
  2461  00FD29  20                 	db	32
  2462  00FD2A  20                 	db	32
  2463  00FD2B  20                 	db	32
  2464  00FD2C  20                 	db	32
  2465  00FD2D  20                 	db	32
  2466  00FD2E  20                 	db	32
  2467  00FD2F  20                 	db	32
  2468  00FD30  20                 	db	32
  2469  00FD31  20                 	db	32
  2470  00FD32  20                 	db	32
  2471  00FD33  20                 	db	32
  2472  00FD34  00                 	db	0
  2473  00FD35                     STR_10:
  2474                           
  2475                           ; BSR set to: 57
  2476  00FD35  53                 	db	83	;'S'
  2477  00FD36  74                 	db	116	;'t'
  2478  00FD37  61                 	db	97	;'a'
  2479  00FD38  74                 	db	116	;'t'
  2480  00FD39  69                 	db	105	;'i'
  2481  00FD3A  63                 	db	99	;'c'
  2482  00FD3B  20                 	db	32
  2483  00FD3C  53                 	db	83	;'S'
  2484  00FD3D  4F                 	db	79	;'O'
  2485  00FD3E  43                 	db	67	;'C'
  2486  00FD3F  20                 	db	32
  2487  00FD40  25                 	db	37
  2488  00FD41  64                 	db	100	;'d'
  2489  00FD42  20                 	db	32
  2490  00FD43  20                 	db	32
  2491  00FD44  20                 	db	32
  2492  00FD45  20                 	db	32
  2493  00FD46  20                 	db	32
  2494  00FD47  20                 	db	32
  2495  00FD48  20                 	db	32
  2496  00FD49  20                 	db	32
  2497  00FD4A  00                 	db	0
  2498  00FD4B                     STR_11:
  2499                           
  2500                           ; BSR set to: 57
  2501  00FD4B  42                 	db	66	;'B'
  2502  00FD4C  61                 	db	97	;'a'
  2503  00FD4D  74                 	db	116	;'t'
  2504  00FD4E  74                 	db	116	;'t'
  2505  00FD4F  65                 	db	101	;'e'
  2506  00FD50  72                 	db	114	;'r'
  2507  00FD51  79                 	db	121	;'y'
  2508  00FD52  20                 	db	32
  2509  00FD53  41                 	db	65	;'A'
  2510  00FD54  68                 	db	104	;'h'
  2511  00FD55  20                 	db	32
  2512  00FD56  25                 	db	37
  2513  00FD57  33                 	db	51	;'3'
  2514  00FD58  2E                 	db	46
  2515  00FD59  32                 	db	50	;'2'
  2516  00FD5A  66                 	db	102	;'f'
  2517  00FD5B  20                 	db	32
  2518  00FD5C  20                 	db	32
  2519  00FD5D  20                 	db	32
  2520  00FD5E  20                 	db	32
  2521  00FD5F  20                 	db	32
  2522  00FD60  00                 	db	0
  2523  00FD61                     STR_15:
  2524                           
  2525                           ; BSR set to: 57
  2526  00FD61  43                 	db	67	;'C'
  2527  00FD62  68                 	db	104	;'h'
  2528  00FD63  65                 	db	101	;'e'
  2529  00FD64  63                 	db	99	;'c'
  2530  00FD65  6B                 	db	107	;'k'
  2531  00FD66  69                 	db	105	;'i'
  2532  00FD67  6E                 	db	110	;'n'
  2533  00FD68  67                 	db	103	;'g'
  2534  00FD69  20                 	db	32
  2535  00FD6A  25                 	db	37
  2536  00FD6B  63                 	db	99	;'c'
  2537  00FD6C  20                 	db	32
  2538  00FD6D  25                 	db	37
  2539  00FD6E  63                 	db	99	;'c'
  2540  00FD6F  20                 	db	32
  2541  00FD70  20                 	db	32
  2542  00FD71  20                 	db	32
  2543  00FD72  20                 	db	32
  2544  00FD73  20                 	db	32
  2545  00FD74  20                 	db	32
  2546  00FD75  00                 	db	0
  2547  00FD76                     STR_37:
  2548                           
  2549                           ; BSR set to: 57
  2550  00FD76  45                 	db	69	;'E'
  2551  00FD77  53                 	db	83	;'S'
  2552  00FD78  52                 	db	82	;'R'
  2553  00FD79  20                 	db	32
  2554  00FD7A  20                 	db	32
  2555  00FD7B  25                 	db	37
  2556  00FD7C  32                 	db	50	;'2'
  2557  00FD7D  2E                 	db	46
  2558  00FD7E  36                 	db	54	;'6'
  2559  00FD7F  66                 	db	102	;'f'
  2560  00FD80  20                 	db	32
  2561  00FD81  20                 	db	32
  2562  00FD82  20                 	db	32
  2563  00FD83  20                 	db	32
  2564  00FD84  20                 	db	32
  2565  00FD85  20                 	db	32
  2566  00FD86  20                 	db	32
  2567  00FD87  20                 	db	32
  2568  00FD88  20                 	db	32
  2569  00FD89  00                 	db	0
  2570  00FD8A                     STR_36:
  2571                           
  2572                           ; BSR set to: 57
  2573  00FD8A  53                 	db	83	;'S'
  2574  00FD8B  25                 	db	37
  2575  00FD8C  63                 	db	99	;'c'
  2576  00FD8D  43                 	db	67	;'C'
  2577  00FD8E  20                 	db	32
  2578  00FD8F  25                 	db	37
  2579  00FD90  64                 	db	100	;'d'
  2580  00FD91  20                 	db	32
  2581  00FD92  52                 	db	82	;'R'
  2582  00FD93  55                 	db	85	;'U'
  2583  00FD94  4E                 	db	78	;'N'
  2584  00FD95  20                 	db	32
  2585  00FD96  25                 	db	37
  2586  00FD97  64                 	db	100	;'d'
  2587  00FD98  20                 	db	32
  2588  00FD99  20                 	db	32
  2589  00FD9A  20                 	db	32
  2590  00FD9B  20                 	db	32
  2591  00FD9C  20                 	db	32
  2592  00FD9D  00                 	db	0
  2593  00FD9E                     STR_34:
  2594                           
  2595                           ; BSR set to: 57
  2596  00FD9E  42                 	db	66	;'B'
  2597  00FD9F  41                 	db	65	;'A'
  2598  00FDA0  54                 	db	84	;'T'
  2599  00FDA1  54                 	db	84	;'T'
  2600  00FDA2  20                 	db	32
  2601  00FDA3  50                 	db	80	;'P'
  2602  00FDA4  57                 	db	87	;'W'
  2603  00FDA5  52                 	db	82	;'R'
  2604  00FDA6  20                 	db	32
  2605  00FDA7  25                 	db	37
  2606  00FDA8  33                 	db	51	;'3'
  2607  00FDA9  2E                 	db	46
  2608  00FDAA  32                 	db	50	;'2'
  2609  00FDAB  66                 	db	102	;'f'
  2610  00FDAC  20                 	db	32
  2611  00FDAD  20                 	db	32
  2612  00FDAE  20                 	db	32
  2613  00FDAF  20                 	db	32
  2614  00FDB0  20                 	db	32
  2615  00FDB1  00                 	db	0
  2616  00FDB2                     STR_38:
  2617                           
  2618                           ; BSR set to: 57
  2619  00FDB2  52                 	db	82	;'R'
  2620  00FDB3  31                 	db	49	;'1'
  2621  00FDB4  20                 	db	32
  2622  00FDB5  25                 	db	37
  2623  00FDB6  32                 	db	50	;'2'
  2624  00FDB7  2E                 	db	46
  2625  00FDB8  33                 	db	51	;'3'
  2626  00FDB9  66                 	db	102	;'f'
  2627  00FDBA  20                 	db	32
  2628  00FDBB  25                 	db	37
  2629  00FDBC  33                 	db	51	;'3'
  2630  00FDBD  2E                 	db	46
  2631  00FDBE  34                 	db	52	;'4'
  2632  00FDBF  66                 	db	102	;'f'
  2633  00FDC0  20                 	db	32
  2634  00FDC1  20                 	db	32
  2635  00FDC2  20                 	db	32
  2636  00FDC3  20                 	db	32
  2637  00FDC4  20                 	db	32
  2638  00FDC5  00                 	db	0
  2639  00FDC6                     STR_39:
  2640                           
  2641                           ; BSR set to: 57
  2642  00FDC6  52                 	db	82	;'R'
  2643  00FDC7  32                 	db	50	;'2'
  2644  00FDC8  20                 	db	32
  2645  00FDC9  25                 	db	37
  2646  00FDCA  32                 	db	50	;'2'
  2647  00FDCB  2E                 	db	46
  2648  00FDCC  33                 	db	51	;'3'
  2649  00FDCD  66                 	db	102	;'f'
  2650  00FDCE  20                 	db	32
  2651  00FDCF  25                 	db	37
  2652  00FDD0  33                 	db	51	;'3'
  2653  00FDD1  2E                 	db	46
  2654  00FDD2  34                 	db	52	;'4'
  2655  00FDD3  66                 	db	102	;'f'
  2656  00FDD4  20                 	db	32
  2657  00FDD5  20                 	db	32
  2658  00FDD6  20                 	db	32
  2659  00FDD7  20                 	db	32
  2660  00FDD8  20                 	db	32
  2661  00FDD9  00                 	db	0
  2662  00FDDA                     STR_35:
  2663                           
  2664                           ; BSR set to: 57
  2665  00FDDA  42                 	db	66	;'B'
  2666  00FDDB  41                 	db	65	;'A'
  2667  00FDDC  48                 	db	72	;'H'
  2668  00FDDD  20                 	db	32
  2669  00FDDE  25                 	db	37
  2670  00FDDF  33                 	db	51	;'3'
  2671  00FDE0  2E                 	db	46
  2672  00FDE1  32                 	db	50	;'2'
  2673  00FDE2  66                 	db	102	;'f'
  2674  00FDE3  20                 	db	32
  2675  00FDE4  50                 	db	80	;'P'
  2676  00FDE5  25                 	db	37
  2677  00FDE6  33                 	db	51	;'3'
  2678  00FDE7  2E                 	db	46
  2679  00FDE8  32                 	db	50	;'2'
  2680  00FDE9  66                 	db	102	;'f'
  2681  00FDEA  20                 	db	32
  2682  00FDEB  20                 	db	32
  2683  00FDEC  20                 	db	32
  2684  00FDED  00                 	db	0
  2685  00FDEE                     STR_58:
  2686                           
  2687                           ; BSR set to: 57
  2688  00FDEE  20                 	db	32
  2689  00FDEF  20                 	db	32
  2690  00FDF0  20                 	db	32
  2691  00FDF1  20                 	db	32
  2692  00FDF2  20                 	db	32
  2693  00FDF3  20                 	db	32
  2694  00FDF4  20                 	db	32
  2695  00FDF5  20                 	db	32
  2696  00FDF6  20                 	db	32
  2697  00FDF7  20                 	db	32
  2698  00FDF8  20                 	db	32
  2699  00FDF9  20                 	db	32
  2700  00FDFA  20                 	db	32
  2701  00FDFB  20                 	db	32
  2702  00FDFC  20                 	db	32
  2703  00FDFD  20                 	db	32
  2704  00FDFE  20                 	db	32
  2705  00FDFF  20                 	db	32
  2706  00FE00  00                 	db	0
  2707  00FE01                     STR_48:
  2708                           
  2709                           ; BSR set to: 57
  2710  00FE01  48                 	db	72	;'H'
  2711  00FE02  45                 	db	69	;'E'
  2712  00FE03  4C                 	db	76	;'L'
  2713  00FE04  50                 	db	80	;'P'
  2714  00FE05  20                 	db	32
  2715  00FE06  25                 	db	37
  2716  00FE07  73                 	db	115	;'s'
  2717  00FE08  20                 	db	32
  2718  00FE09  20                 	db	32
  2719  00FE0A  20                 	db	32
  2720  00FE0B  20                 	db	32
  2721  00FE0C  20                 	db	32
  2722  00FE0D  20                 	db	32
  2723  00FE0E  20                 	db	32
  2724  00FE0F  20                 	db	32
  2725  00FE10  20                 	db	32
  2726  00FE11  20                 	db	32
  2727  00FE12  20                 	db	32
  2728  00FE13  00                 	db	0
  2729  00FE14                     
  2730                           ; BSR set to: 57
  2731  00FE14  44                 	db	68	;'D'
  2732  00FE15  49                 	db	73	;'I'
  2733  00FE16  53                 	db	83	;'S'
  2734  00FE17  50                 	db	80	;'P'
  2735  00FE18  4C                 	db	76	;'L'
  2736  00FE19  41                 	db	65	;'A'
  2737  00FE1A  59                 	db	89	;'Y'
  2738  00FE1B  20                 	db	32
  2739  00FE1C  25                 	db	37
  2740  00FE1D  73                 	db	115	;'s'
  2741  00FE1E  20                 	db	32
  2742  00FE1F  20                 	db	32
  2743  00FE20  20                 	db	32
  2744  00FE21  20                 	db	32
  2745  00FE22  20                 	db	32
  2746  00FE23  20                 	db	32
  2747  00FE24  20                 	db	32
  2748  00FE25  20                 	db	32
  2749  00FE26  00                 	db	0
  2750  00FE27                     STR_31:
  2751                           
  2752                           ; BSR set to: 57
  2753  00FE27  42                 	db	66	;'B'
  2754  00FE28  41                 	db	65	;'A'
  2755  00FE29  54                 	db	84	;'T'
  2756  00FE2A  20                 	db	32
  2757  00FE2B  49                 	db	73	;'I'
  2758  00FE2C  57                 	db	87	;'W'
  2759  00FE2D  48                 	db	72	;'H'
  2760  00FE2E  20                 	db	32
  2761  00FE2F  25                 	db	37
  2762  00FE30  34                 	db	52	;'4'
  2763  00FE31  2E                 	db	46
  2764  00FE32  31                 	db	49	;'1'
  2765  00FE33  66                 	db	102	;'f'
  2766  00FE34  20                 	db	32
  2767  00FE35  20                 	db	32
  2768  00FE36  20                 	db	32
  2769  00FE37  20                 	db	32
  2770  00FE38  20                 	db	32
  2771  00FE39  00                 	db	0
  2772  00FE3A                     STR_32:
  2773                           
  2774                           ; BSR set to: 57
  2775  00FE3A  42                 	db	66	;'B'
  2776  00FE3B  41                 	db	65	;'A'
  2777  00FE3C  54                 	db	84	;'T'
  2778  00FE3D  20                 	db	32
  2779  00FE3E  4F                 	db	79	;'O'
  2780  00FE3F  57                 	db	87	;'W'
  2781  00FE40  48                 	db	72	;'H'
  2782  00FE41  20                 	db	32
  2783  00FE42  25                 	db	37
  2784  00FE43  34                 	db	52	;'4'
  2785  00FE44  2E                 	db	46
  2786  00FE45  31                 	db	49	;'1'
  2787  00FE46  66                 	db	102	;'f'
  2788  00FE47  20                 	db	32
  2789  00FE48  20                 	db	32
  2790  00FE49  20                 	db	32
  2791  00FE4A  20                 	db	32
  2792  00FE4B  20                 	db	32
  2793  00FE4C  00                 	db	0
  2794  00FE4D                     STR_33:
  2795                           
  2796                           ; BSR set to: 57
  2797  00FE4D  42                 	db	66	;'B'
  2798  00FE4E  41                 	db	65	;'A'
  2799  00FE4F  54                 	db	84	;'T'
  2800  00FE50  20                 	db	32
  2801  00FE51  54                 	db	84	;'T'
  2802  00FE52  57                 	db	87	;'W'
  2803  00FE53  48                 	db	72	;'H'
  2804  00FE54  20                 	db	32
  2805  00FE55  25                 	db	37
  2806  00FE56  34                 	db	52	;'4'
  2807  00FE57  2E                 	db	46
  2808  00FE58  31                 	db	49	;'1'
  2809  00FE59  66                 	db	102	;'f'
  2810  00FE5A  20                 	db	32
  2811  00FE5B  20                 	db	32
  2812  00FE5C  20                 	db	32
  2813  00FE5D  20                 	db	32
  2814  00FE5E  20                 	db	32
  2815  00FE5F  00                 	db	0
  2816  00FE60                     STR_25:
  2817                           
  2818                           ; BSR set to: 57
  2819  00FE60  50                 	db	80	;'P'
  2820  00FE61  56                 	db	86	;'V'
  2821  00FE62  20                 	db	32
  2822  00FE63  20                 	db	32
  2823  00FE64  20                 	db	32
  2824  00FE65  57                 	db	87	;'W'
  2825  00FE66  48                 	db	72	;'H'
  2826  00FE67  20                 	db	32
  2827  00FE68  25                 	db	37
  2828  00FE69  33                 	db	51	;'3'
  2829  00FE6A  2E                 	db	46
  2830  00FE6B  32                 	db	50	;'2'
  2831  00FE6C  66                 	db	102	;'f'
  2832  00FE6D  20                 	db	32
  2833  00FE6E  20                 	db	32
  2834  00FE6F  20                 	db	32
  2835  00FE70  20                 	db	32
  2836  00FE71  20                 	db	32
  2837  00FE72  00                 	db	0
  2838  00FE73                     STR_27:
  2839                           
  2840                           ; BSR set to: 57
  2841  00FE73  49                 	db	73	;'I'
  2842  00FE74  4E                 	db	78	;'N'
  2843  00FE75  56                 	db	86	;'V'
  2844  00FE76  20                 	db	32
  2845  00FE77  20                 	db	32
  2846  00FE78  57                 	db	87	;'W'
  2847  00FE79  48                 	db	72	;'H'
  2848  00FE7A  20                 	db	32
  2849  00FE7B  25                 	db	37
  2850  00FE7C  33                 	db	51	;'3'
  2851  00FE7D  2E                 	db	46
  2852  00FE7E  32                 	db	50	;'2'
  2853  00FE7F  66                 	db	102	;'f'
  2854  00FE80  20                 	db	32
  2855  00FE81  20                 	db	32
  2856  00FE82  20                 	db	32
  2857  00FE83  20                 	db	32
  2858  00FE84  20                 	db	32
  2859  00FE85  00                 	db	0
  2860  00FE86                     STR_26:
  2861                           
  2862                           ; BSR set to: 57
  2863  00FE86  4C                 	db	76	;'L'
  2864  00FE87  4F                 	db	79	;'O'
  2865  00FE88  41                 	db	65	;'A'
  2866  00FE89  44                 	db	68	;'D'
  2867  00FE8A  20                 	db	32
  2868  00FE8B  57                 	db	87	;'W'
  2869  00FE8C  48                 	db	72	;'H'
  2870  00FE8D  20                 	db	32
  2871  00FE8E  25                 	db	37
  2872  00FE8F  33                 	db	51	;'3'
  2873  00FE90  2E                 	db	46
  2874  00FE91  32                 	db	50	;'2'
  2875  00FE92  66                 	db	102	;'f'
  2876  00FE93  20                 	db	32
  2877  00FE94  20                 	db	32
  2878  00FE95  20                 	db	32
  2879  00FE96  20                 	db	32
  2880  00FE97  20                 	db	32
  2881  00FE98  00                 	db	0
  2882  00FE99                     STR_22:
  2883                           
  2884                           ; BSR set to: 57
  2885  00FE99  50                 	db	80	;'P'
  2886  00FE9A  56                 	db	86	;'V'
  2887  00FE9B  20                 	db	32
  2888  00FE9C  20                 	db	32
  2889  00FE9D  20                 	db	32
  2890  00FE9E  50                 	db	80	;'P'
  2891  00FE9F  57                 	db	87	;'W'
  2892  00FEA0  52                 	db	82	;'R'
  2893  00FEA1  20                 	db	32
  2894  00FEA2  25                 	db	37
  2895  00FEA3  33                 	db	51	;'3'
  2896  00FEA4  2E                 	db	46
  2897  00FEA5  32                 	db	50	;'2'
  2898  00FEA6  66                 	db	102	;'f'
  2899  00FEA7  20                 	db	32
  2900  00FEA8  20                 	db	32
  2901  00FEA9  20                 	db	32
  2902  00FEAA  20                 	db	32
  2903  00FEAB  00                 	db	0
  2904  00FEAC                     STR_24:
  2905                           
  2906                           ; BSR set to: 57
  2907  00FEAC  49                 	db	73	;'I'
  2908  00FEAD  4E                 	db	78	;'N'
  2909  00FEAE  56                 	db	86	;'V'
  2910  00FEAF  20                 	db	32
  2911  00FEB0  20                 	db	32
  2912  00FEB1  50                 	db	80	;'P'
  2913  00FEB2  57                 	db	87	;'W'
  2914  00FEB3  52                 	db	82	;'R'
  2915  00FEB4  20                 	db	32
  2916  00FEB5  25                 	db	37
  2917  00FEB6  33                 	db	51	;'3'
  2918  00FEB7  2E                 	db	46
  2919  00FEB8  32                 	db	50	;'2'
  2920  00FEB9  66                 	db	102	;'f'
  2921  00FEBA  20                 	db	32
  2922  00FEBB  20                 	db	32
  2923  00FEBC  20                 	db	32
  2924  00FEBD  20                 	db	32
  2925  00FEBE  00                 	db	0
  2926  00FEBF                     STR_23:
  2927                           
  2928                           ; BSR set to: 57
  2929  00FEBF  4C                 	db	76	;'L'
  2930  00FEC0  4F                 	db	79	;'O'
  2931  00FEC1  41                 	db	65	;'A'
  2932  00FEC2  44                 	db	68	;'D'
  2933  00FEC3  20                 	db	32
  2934  00FEC4  50                 	db	80	;'P'
  2935  00FEC5  57                 	db	87	;'W'
  2936  00FEC6  52                 	db	82	;'R'
  2937  00FEC7  20                 	db	32
  2938  00FEC8  25                 	db	37
  2939  00FEC9  33                 	db	51	;'3'
  2940  00FECA  2E                 	db	46
  2941  00FECB  32                 	db	50	;'2'
  2942  00FECC  66                 	db	102	;'f'
  2943  00FECD  20                 	db	32
  2944  00FECE  20                 	db	32
  2945  00FECF  20                 	db	32
  2946  00FED0  20                 	db	32
  2947  00FED1  00                 	db	0
  2948  00FED2                     STR_29:
  2949                           
  2950                           ; BSR set to: 57
  2951  00FED2  42                 	db	66	;'B'
  2952  00FED3  56                 	db	86	;'V'
  2953  00FED4  20                 	db	32
  2954  00FED5  25                 	db	37
  2955  00FED6  32                 	db	50	;'2'
  2956  00FED7  2E                 	db	46
  2957  00FED8  32                 	db	50	;'2'
  2958  00FED9  66                 	db	102	;'f'
  2959  00FEDA  20                 	db	32
  2960  00FEDB  42                 	db	66	;'B'
  2961  00FEDC  41                 	db	65	;'A'
  2962  00FEDD  20                 	db	32
  2963  00FEDE  25                 	db	37
  2964  00FEDF  32                 	db	50	;'2'
  2965  00FEE0  2E                 	db	46
  2966  00FEE1  32                 	db	50	;'2'
  2967  00FEE2  66                 	db	102	;'f'
  2968  00FEE3  20                 	db	32
  2969  00FEE4  00                 	db	0
  2970  00FEE5                     STR_30:
  2971                           
  2972                           ; BSR set to: 57
  2973  00FEE5  43                 	db	67	;'C'
  2974  00FEE6  56                 	db	86	;'V'
  2975  00FEE7  20                 	db	32
  2976  00FEE8  25                 	db	37
  2977  00FEE9  32                 	db	50	;'2'
  2978  00FEEA  2E                 	db	46
  2979  00FEEB  32                 	db	50	;'2'
  2980  00FEEC  66                 	db	102	;'f'
  2981  00FEED  20                 	db	32
  2982  00FEEE  4C                 	db	76	;'L'
  2983  00FEEF  41                 	db	65	;'A'
  2984  00FEF0  20                 	db	32
  2985  00FEF1  25                 	db	37
  2986  00FEF2  32                 	db	50	;'2'
  2987  00FEF3  2E                 	db	46
  2988  00FEF4  32                 	db	50	;'2'
  2989  00FEF5  66                 	db	102	;'f'
  2990  00FEF6  20                 	db	32
  2991  00FEF7  00                 	db	0
  2992  00FEF8                     STR_28:
  2993                           
  2994                           ; BSR set to: 57
  2995  00FEF8  50                 	db	80	;'P'
  2996  00FEF9  56                 	db	86	;'V'
  2997  00FEFA  20                 	db	32
  2998  00FEFB  25                 	db	37
  2999  00FEFC  32                 	db	50	;'2'
  3000  00FEFD  2E                 	db	46
  3001  00FEFE  32                 	db	50	;'2'
  3002  00FEFF  66                 	db	102	;'f'
  3003  00FF00  20                 	db	32
  3004  00FF01  50                 	db	80	;'P'
  3005  00FF02  41                 	db	65	;'A'
  3006  00FF03  20                 	db	32
  3007  00FF04  25                 	db	37
  3008  00FF05  32                 	db	50	;'2'
  3009  00FF06  2E                 	db	46
  3010  00FF07  32                 	db	50	;'2'
  3011  00FF08  66                 	db	102	;'f'
  3012  00FF09  20                 	db	32
  3013  00FF0A  00                 	db	0
  3014  00FF0B                     STR_8:
  3015                           
  3016                           ; BSR set to: 57
  3017  00FF0B  42                 	db	66	;'B'
  3018  00FF0C  56                 	db	86	;'V'
  3019  00FF0D  20                 	db	32
  3020  00FF0E  25                 	db	37
  3021  00FF0F  32                 	db	50	;'2'
  3022  00FF10  2E                 	db	46
  3023  00FF11  34                 	db	52	;'4'
  3024  00FF12  66                 	db	102	;'f'
  3025  00FF13  20                 	db	32
  3026  00FF14  20                 	db	32
  3027  00FF15  20                 	db	32
  3028  00FF16  20                 	db	32
  3029  00FF17  20                 	db	32
  3030  00FF18  20                 	db	32
  3031  00FF19  20                 	db	32
  3032  00FF1A  20                 	db	32
  3033  00FF1B  20                 	db	32
  3034  00FF1C  00                 	db	0
  3035  00FF1D                     STR_4:
  3036                           
  3037                           ; BSR set to: 57
  3038  00FF1D  20                 	db	32
  3039  00FF1E  4E                 	db	78	;'N'
  3040  00FF1F  53                 	db	83	;'S'
  3041  00FF20  41                 	db	65	;'A'
  3042  00FF21  53                 	db	83	;'S'
  3043  00FF22  50                 	db	80	;'P'
  3044  00FF23  4F                 	db	79	;'O'
  3045  00FF24  4F                 	db	79	;'O'
  3046  00FF25  4B                 	db	75	;'K'
  3047  00FF26  20                 	db	32
  3048  00FF27  20                 	db	32
  3049  00FF28  20                 	db	32
  3050  00FF29  20                 	db	32
  3051  00FF2A  20                 	db	32
  3052  00FF2B  20                 	db	32
  3053  00FF2C  20                 	db	32
  3054  00FF2D  00                 	db	0
  3055  00FF2E                     STR_12:
  3056                           
  3057                           ; BSR set to: 57
  3058  00FF2E  42                 	db	66	;'B'
  3059  00FF2F  61                 	db	97	;'a'
  3060  00FF30  74                 	db	116	;'t'
  3061  00FF31  74                 	db	116	;'t'
  3062  00FF32  65                 	db	101	;'e'
  3063  00FF33  72                 	db	114	;'r'
  3064  00FF34  79                 	db	121	;'y'
  3065  00FF35  20                 	db	32
  3066  00FF36  45                 	db	69	;'E'
  3067  00FF37  53                 	db	83	;'S'
  3068  00FF38  52                 	db	82	;'R'
  3069  00FF39  20                 	db	32
  3070  00FF3A  20                 	db	32
  3071  00FF3B  20                 	db	32
  3072  00FF3C  20                 	db	32
  3073  00FF3D  20                 	db	32
  3074  00FF3E  00                 	db	0
  3075  00FF3F                     STR_13:
  3076                           
  3077                           ; BSR set to: 57
  3078  00FF3F  43                 	db	67	;'C'
  3079  00FF40  61                 	db	97	;'a'
  3080  00FF41  6C                 	db	108	;'l'
  3081  00FF42  63                 	db	99	;'c'
  3082  00FF43  75                 	db	117	;'u'
  3083  00FF44  6C                 	db	108	;'l'
  3084  00FF45  61                 	db	97	;'a'
  3085  00FF46  74                 	db	116	;'t'
  3086  00FF47  69                 	db	105	;'i'
  3087  00FF48  6F                 	db	111	;'o'
  3088  00FF49  6E                 	db	110	;'n'
  3089  00FF4A  20                 	db	32
  3090  00FF4B  20                 	db	32
  3091  00FF4C  20                 	db	32
  3092  00FF4D  20                 	db	32
  3093  00FF4E  20                 	db	32
  3094  00FF4F  00                 	db	0
  3095  00FF50                     STR_1:
  3096                           
  3097                           ; BSR set to: 57
  3098  00FF50  20                 	db	32
  3099  00FF51  4D                 	db	77	;'M'
  3100  00FF52  42                 	db	66	;'B'
  3101  00FF53  4D                 	db	77	;'M'
  3102  00FF54  43                 	db	67	;'C'
  3103  00FF55  20                 	db	32
  3104  00FF56  53                 	db	83	;'S'
  3105  00FF57  4F                 	db	79	;'O'
  3106  00FF58  4C                 	db	76	;'L'
  3107  00FF59  41                 	db	65	;'A'
  3108  00FF5A  52                 	db	82	;'R'
  3109  00FF5B  4D                 	db	77	;'M'
  3110  00FF5C  4F                 	db	79	;'O'
  3111  00FF5D  4E                 	db	78	;'N'
  3112  00FF5E  20                 	db	32
  3113  00FF5F  20                 	db	32
  3114  00FF60  00                 	db	0
  3115  00FF61                     STR_21:
  3116                           
  3117                           ; BSR set to: 57
  3118  00FF61  25                 	db	37
  3119  00FF62  64                 	db	100	;'d'
  3120  00FF63  20                 	db	32
  3121  00FF64  25                 	db	37
  3122  00FF65  32                 	db	50	;'2'
  3123  00FF66  2E                 	db	46
  3124  00FF67  34                 	db	52	;'4'
  3125  00FF68  66                 	db	102	;'f'
  3126  00FF69  2C                 	db	44
  3127  00FF6A  20                 	db	32
  3128  00FF6B  25                 	db	37
  3129  00FF6C  64                 	db	100	;'d'
  3130  00FF6D  20                 	db	32
  3131  00FF6E  20                 	db	32
  3132  00FF6F  20                 	db	32
  3133  00FF70  23                 	db	35
  3134  00FF71  00                 	db	0
  3135  00FF72                     STR_14:
  3136                           
  3137                           ; BSR set to: 57
  3138  00FF72  43                 	db	67	;'C'
  3139  00FF73  68                 	db	104	;'h'
  3140  00FF74  65                 	db	101	;'e'
  3141  00FF75  63                 	db	99	;'c'
  3142  00FF76  6B                 	db	107	;'k'
  3143  00FF77  20                 	db	32
  3144  00FF78  33                 	db	51	;'3'
  3145  00FF79  30                 	db	48	;'0'
  3146  00FF7A  20                 	db	32
  3147  00FF7B  73                 	db	115	;'s'
  3148  00FF7C  65                 	db	101	;'e'
  3149  00FF7D  63                 	db	99	;'c'
  3150  00FF7E  6F                 	db	111	;'o'
  3151  00FF7F  6E                 	db	110	;'n'
  3152  00FF80  64                 	db	100	;'d'
  3153  00FF81  73                 	db	115	;'s'
  3154  00FF82  00                 	db	0
  3155  00FF83                     STR_19:
  3156                           
  3157                           ; BSR set to: 57
  3158  00FF83  25                 	db	37
  3159  00FF84  64                 	db	100	;'d'
  3160  00FF85  20                 	db	32
  3161  00FF86  25                 	db	37
  3162  00FF87  32                 	db	50	;'2'
  3163  00FF88  2E                 	db	46
  3164  00FF89  34                 	db	52	;'4'
  3165  00FF8A  66                 	db	102	;'f'
  3166  00FF8B  20                 	db	32
  3167  00FF8C  20                 	db	32
  3168  00FF8D  20                 	db	32
  3169  00FF8E  25                 	db	37
  3170  00FF8F  64                 	db	100	;'d'
  3171  00FF90  20                 	db	32
  3172  00FF91  20                 	db	32
  3173  00FF92  00                 	db	0
  3174  00FF93                     STR_52:
  3175                           
  3176                           ; BSR set to: 57
  3177  00FF93  76                 	db	118	;'v'
  3178  00FF94  74                 	db	116	;'t'
  3179  00FF95  65                 	db	101	;'e'
  3180  00FF96  72                 	db	114	;'r'
  3181  00FF97  6D                 	db	109	;'m'
  3182  00FF98  20                 	db	32
  3183  00FF99  25                 	db	37
  3184  00FF9A  78                 	db	120	;'x'
  3185  00FF9B  3A                 	db	58	;':'
  3186  00FF9C  25                 	db	37
  3187  00FF9D  78                 	db	120	;'x'
  3188  00FF9E  20                 	db	32
  3189  00FF9F  20                 	db	32
  3190  00FFA0  20                 	db	32
  3191  00FFA1  00                 	db	0
  3192  00FFA2                     STR_2:
  3193                           
  3194                           ; BSR set to: 57
  3195  00FFA2  20                 	db	32
  3196  00FFA3  56                 	db	86	;'V'
  3197  00FFA4  65                 	db	101	;'e'
  3198  00FFA5  72                 	db	114	;'r'
  3199  00FFA6  73                 	db	115	;'s'
  3200  00FFA7  69                 	db	105	;'i'
  3201  00FFA8  6F                 	db	111	;'o'
  3202  00FFA9  6E                 	db	110	;'n'
  3203  00FFAA  20                 	db	32
  3204  00FFAB  25                 	db	37
  3205  00FFAC  73                 	db	115	;'s'
  3206  00FFAD  20                 	db	32
  3207  00FFAE  20                 	db	32
  3208  00FFAF  20                 	db	32
  3209  00FFB0  00                 	db	0
  3210  00FFB1                     STR_46:
  3211                           
  3212                           ; BSR set to: 57
  3213  00FFB1  44                 	db	68	;'D'
  3214  00FFB2  65                 	db	101	;'e'
  3215  00FFB3  63                 	db	99	;'c'
  3216  00FFB4  20                 	db	32
  3217  00FFB5  31                 	db	49	;'1'
  3218  00FFB6  34                 	db	52	;'4'
  3219  00FFB7  20                 	db	32
  3220  00FFB8  32                 	db	50	;'2'
  3221  00FFB9  30                 	db	48	;'0'
  3222  00FFBA  31                 	db	49	;'1'
  3223  00FFBB  39                 	db	57	;'9'
  3224  00FFBC  00                 	db	0
  3225  00FFBD                     STR_50:
  3226                           
  3227                           ; BSR set to: 57
  3228  00FFBD  25                 	db	37
  3229  00FFBE  73                 	db	115	;'s'
  3230  00FFBF  20                 	db	32
  3231  00FFC0  20                 	db	32
  3232  00FFC1  20                 	db	32
  3233  00FFC2  20                 	db	32
  3234  00FFC3  20                 	db	32
  3235  00FFC4  20                 	db	32
  3236  00FFC5  20                 	db	32
  3237  00FFC6  00                 	db	0
  3238  00FFC7                     STR_47:
  3239                           
  3240                           ; BSR set to: 57
  3241  00FFC7  31                 	db	49	;'1'
  3242  00FFC8  30                 	db	48	;'0'
  3243  00FFC9  3A                 	db	58	;':'
  3244  00FFCA  34                 	db	52	;'4'
  3245  00FFCB  36                 	db	54	;'6'
  3246  00FFCC  3A                 	db	58	;':'
  3247  00FFCD  30                 	db	48	;'0'
  3248  00FFCE  34                 	db	52	;'4'
  3249  00FFCF  00                 	db	0
  3250  00FFD0                     STR_3:
  3251                           
  3252                           ; BSR set to: 57
  3253  00FFD0  31                 	db	49	;'1'
  3254  00FFD1  2E                 	db	46
  3255  00FFD2  30                 	db	48	;'0'
  3256  00FFD3  30                 	db	48	;'0'
  3257  00FFD4  35                 	db	53	;'5'
  3258  00FFD5  00                 	db	0
  3259  00FFD6                     STR_66:
  3260                           
  3261                           ; BSR set to: 57
  3262  00FFD6  49                 	db	73	;'I'
  3263  00FFD7  4E                 	db	78	;'N'
  3264  00FFD8  46                 	db	70	;'F'
  3265  00FFD9  00                 	db	0
  3266  00FFDA                     STR_70:
  3267                           
  3268                           ; BSR set to: 57
  3269  00FFDA  4E                 	db	78	;'N'
  3270  00FFDB  41                 	db	65	;'A'
  3271  00FFDC  4E                 	db	78	;'N'
  3272  00FFDD  00                 	db	0
  3273  00FFDE                     STR_67:
  3274                           
  3275                           ; BSR set to: 57
  3276  00FFDE  69                 	db	105	;'i'
  3277  00FFDF  6E                 	db	110	;'n'
  3278  00FFE0  66                 	db	102	;'f'
  3279  00FFE1  00                 	db	0
  3280  00FFE2                     STR_71:
  3281                           
  3282                           ; BSR set to: 57
  3283  00FFE2  6E                 	db	110	;'n'
  3284  00FFE3  61                 	db	97	;'a'
  3285  00FFE4  6E                 	db	110	;'n'
  3286  00FFE5  00                 	db	0
  3287  00FFE6                     STR_97:
  3288                           
  3289                           ; BSR set to: 57
  3290  00FFE6  6C                 	db	108	;'l'
  3291  00FFE7  58                 	db	88	;'X'
  3292  00FFE8  00                 	db	0
  3293  00FFE9                     STR_74:
  3294                           
  3295                           ; BSR set to: 57
  3296  00FFE9  6C                 	db	108	;'l'
  3297  00FFEA  64                 	db	100	;'d'
  3298  00FFEB  00                 	db	0
  3299  00FFEC                     STR_83:
  3300                           
  3301                           ; BSR set to: 57
  3302  00FFEC  6C                 	db	108	;'l'
  3303  00FFED  66                 	db	102	;'f'
  3304  00FFEE  00                 	db	0
  3305  00FFEF                     STR_78:
  3306                           
  3307                           ; BSR set to: 57
  3308  00FFEF  6C                 	db	108	;'l'
  3309  00FFF0  69                 	db	105	;'i'
  3310  00FFF1  00                 	db	0
  3311  00FFF2                     STR_88:
  3312                           
  3313                           ; BSR set to: 57
  3314  00FFF2  6C                 	db	108	;'l'
  3315  00FFF3  75                 	db	117	;'u'
  3316  00FFF4  00                 	db	0
  3317  00FFF5                     STR_93:
  3318                           
  3319                           ; BSR set to: 57
  3320  00FFF5  6C                 	db	108	;'l'
  3321  00FFF6  78                 	db	120	;'x'
  3322  00FFF7  00                 	db	0
  3323  00FFF8                     STR_44:
  3324                           
  3325                           ; BSR set to: 57
  3326  00FFF8  25                 	db	37
  3327  00FFF9  63                 	db	99	;'c'
  3328  00FFFA  00                 	db	0
  3329  00FFFB                     STR_43:
  3330                           
  3331                           ; BSR set to: 57
  3332  00FFFB  25                 	db	37
  3333  00FFFC  73                 	db	115	;'s'
  3334  00FFFD  00                 	db	0
  3335  0000                     
  3336                           ; #config settings
  3337  00FFFE  00                 	db	0	; dummy byte at the end
  3338  0000                     
  3339                           	psect	cinit
  3340  0192FE                     __pcinit:
  3341                           	opt callstack 0
  3342  0192FE                     start_initialization:
  3343                           	opt callstack 0
  3344  0192FE                     __initialization:
  3345                           	opt callstack 0
  3346                           
  3347                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3348                           ; load TBLPTR registers with __pidataBIGRAM
  3349  0192FE  0EB8               	movlw	low __pidataBIGRAM
  3350  019300  6EF6               	movwf	tblptrl,c
  3351  019302  0E7B               	movlw	high __pidataBIGRAM
  3352  019304  6EF7               	movwf	tblptrh,c
  3353  019306  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3354  019308  6EF8               	movwf	tblptru,c
  3355  01930A  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3356  01930E  EE20 F200          	lfsr	2,512
  3357  019312                     copy_data0:
  3358  019312  0009               	tblrd		*+
  3359  019314  006F FFD7 FFEE     	movff	tablat,postinc0
  3360  01931A  50DD               	movf	postdec2,w,c
  3361  01931C  50D9               	movf	fsr2l,w,c
  3362  01931E  E1F9               	bnz	copy_data0
  3363  019320  50DA               	movf	fsr2h,w,c
  3364  019322  E1F7               	bnz	copy_data0
  3365                           
  3366                           ; Initialize objects allocated to BANK2 (189 bytes)
  3367                           ; load TBLPTR registers with __pidataBANK2
  3368  019324  0E78               	movlw	low __pidataBANK2
  3369  019326  6EF6               	movwf	tblptrl,c
  3370  019328  0E9A               	movlw	high __pidataBANK2
  3371  01932A  6EF7               	movwf	tblptrh,c
  3372  01932C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3373  01932E  6EF8               	movwf	tblptru,c
  3374  019330  EE00  F200         	lfsr	0,__pdataBANK2
  3375  019334  EE20 F0BD          	lfsr	2,189
  3376  019338                     copy_data1:
  3377  019338  0009               	tblrd		*+
  3378  01933A  006F FFD7 FFEE     	movff	tablat,postinc0
  3379  019340  50DD               	movf	postdec2,w,c
  3380  019342  50D9               	movf	fsr2l,w,c
  3381  019344  E1F9               	bnz	copy_data1
  3382                           
  3383                           ; Initialize objects allocated to BANK1 (247 bytes)
  3384                           ; load TBLPTR registers with __pidataBANK1
  3385  019346  0E18               	movlw	low __pidataBANK1
  3386  019348  6EF6               	movwf	tblptrl,c
  3387  01934A  0E96               	movlw	high __pidataBANK1
  3388  01934C  6EF7               	movwf	tblptrh,c
  3389  01934E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3390  019350  6EF8               	movwf	tblptru,c
  3391  019352  EE00  F100         	lfsr	0,__pdataBANK1
  3392  019356  EE20 F0F7          	lfsr	2,247
  3393  01935A                     copy_data2:
  3394  01935A  0009               	tblrd		*+
  3395  01935C  006F FFD7 FFEE     	movff	tablat,postinc0
  3396  019362  50DD               	movf	postdec2,w,c
  3397  019364  50D9               	movf	fsr2l,w,c
  3398  019366  E1F9               	bnz	copy_data2
  3399                           
  3400                           ; Initialize objects allocated to BANK0 (54 bytes)
  3401                           ; load TBLPTR registers with __pidataBANK0
  3402  019368  0ECC               	movlw	low __pidataBANK0
  3403  01936A  6EF6               	movwf	tblptrl,c
  3404  01936C  0EAD               	movlw	high __pidataBANK0
  3405  01936E  6EF7               	movwf	tblptrh,c
  3406  019370  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3407  019372  6EF8               	movwf	tblptru,c
  3408  019374  EE00  F0C4         	lfsr	0,__pdataBANK0
  3409  019378  EE20 F036          	lfsr	2,54
  3410  01937C                     copy_data3:
  3411  01937C  0009               	tblrd		*+
  3412  01937E  006F FFD7 FFEE     	movff	tablat,postinc0
  3413  019384  50DD               	movf	postdec2,w,c
  3414  019386  50D9               	movf	fsr2l,w,c
  3415  019388  E1F9               	bnz	copy_data3
  3416                           
  3417                           ; Clear objects allocated to BIGRAM (290 bytes)
  3418  01938A  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3419  01938E  EE20 F122          	lfsr	2,290
  3420  019392                     clear_0:
  3421  019392  6AEE               	clrf	postinc0,c
  3422  019394  50DD               	movf	postdec2,w,c
  3423  019396  50D9               	movf	fsr2l,w,c
  3424  019398  E1FC               	bnz	clear_0
  3425  01939A  50DA               	movf	fsr2h,w,c
  3426  01939C  E1FA               	bnz	clear_0
  3427                           
  3428                           ; Clear objects allocated to BANK5 (255 bytes)
  3429  01939E  EE01  F100         	lfsr	0,__pbssBANK5
  3430  0193A2  EE20 F0FF          	lfsr	2,255
  3431  0193A6                     clear_1:
  3432  0193A6  6AEE               	clrf	postinc0,c
  3433  0193A8  50DD               	movf	postdec2,w,c
  3434  0193AA  50D9               	movf	fsr2l,w,c
  3435  0193AC  E1FC               	bnz	clear_1
  3436  0193AE  50DA               	movf	fsr2h,w,c
  3437  0193B0  E1FA               	bnz	clear_1
  3438                           
  3439                           ; Clear objects allocated to BANK4 (134 bytes)
  3440  0193B2  EE01  F000         	lfsr	0,__pbssBANK4
  3441  0193B6  0E86               	movlw	134
  3442  0193B8                     clear_2:
  3443  0193B8  6AEE               	clrf	postinc0,c
  3444  0193BA  06E8               	decf	wreg,f,c
  3445  0193BC  E1FD               	bnz	clear_2
  3446                           
  3447                           ; Clear objects allocated to BANK3 (228 bytes)
  3448  0193BE  EE00  F300         	lfsr	0,__pbssBANK3
  3449  0193C2  0EE4               	movlw	228
  3450  0193C4                     clear_3:
  3451  0193C4  6AEE               	clrf	postinc0,c
  3452  0193C6  06E8               	decf	wreg,f,c
  3453  0193C8  E1FD               	bnz	clear_3
  3454                           
  3455                           ; Clear objects allocated to BANK2 (67 bytes)
  3456  0193CA  EE00  F2BD         	lfsr	0,__pbssBANK2
  3457  0193CE  0E43               	movlw	67
  3458  0193D0                     clear_4:
  3459  0193D0  6AEE               	clrf	postinc0,c
  3460  0193D2  06E8               	decf	wreg,f,c
  3461  0193D4  E1FD               	bnz	clear_4
  3462                           
  3463                           ; Clear objects allocated to BANK1 (8 bytes)
  3464  0193D6  EE00  F1F7         	lfsr	0,__pbssBANK1
  3465  0193DA  0E08               	movlw	8
  3466  0193DC                     clear_5:
  3467  0193DC  6AEE               	clrf	postinc0,c
  3468  0193DE  06E8               	decf	wreg,f,c
  3469  0193E0  E1FD               	bnz	clear_5
  3470                           
  3471                           ; Clear objects allocated to BANK0 (100 bytes)
  3472  0193E2  EE00  F060         	lfsr	0,__pbssBANK0
  3473  0193E6  0E64               	movlw	100
  3474  0193E8                     clear_6:
  3475  0193E8  6AEE               	clrf	postinc0,c
  3476  0193EA  06E8               	decf	wreg,f,c
  3477  0193EC  E1FD               	bnz	clear_6
  3478                           
  3479                           ; Clear objects allocated to COMRAM (24 bytes)
  3480  0193EE  EE00  F021         	lfsr	0,__pbssCOMRAM
  3481  0193F2  0E18               	movlw	24
  3482  0193F4                     clear_7:
  3483  0193F4  6AEE               	clrf	postinc0,c
  3484  0193F6  06E8               	decf	wreg,f,c
  3485  0193F8  E1FD               	bnz	clear_7
  3486                           
  3487                           ;
  3488                           ; Setup IVTBASE
  3489                           ;
  3490  0193FA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3491  0193FC  6ED5               	movwf	213,c
  3492  0193FE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3493  019400  6ED6               	movwf	214,c
  3494  019402  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3495  019404  6ED7               	movwf	215,c
  3496  019406                     end_of_initialization:
  3497                           	opt callstack 0
  3498  019406                     __end_of__initialization:
  3499                           	opt callstack 0
  3500  019406  0100               	movlb	0
  3501  019408  EF22  F089         	goto	_main	;jump to C main() function
  3502                           
  3503                           	psect	bssCOMRAM
  3504  000021                     __pbssCOMRAM:
  3505                           	opt callstack 0
  3506  000021                     _width:
  3507                           	opt callstack 0
  3508  000021                     	ds	2
  3509  000023                     _prec:
  3510                           	opt callstack 0
  3511  000023                     	ds	2
  3512  000025                     _flags:
  3513                           	opt callstack 0
  3514  000025                     	ds	2
  3515  000027                     _timer3ReloadVal:
  3516                           	opt callstack 0
  3517  000027                     	ds	2
  3518  000029                     TMR5_ISR@CountCallBack:
  3519                           	opt callstack 0
  3520  000029                     	ds	2
  3521  00002B                     _timer5ReloadVal:
  3522                           	opt callstack 0
  3523  00002B                     	ds	2
  3524  00002D                     esr_check@esr_state:
  3525                           	opt callstack 0
  3526  00002D                     	ds	1
  3527  00002E                     Volts_to_SOC@slot:
  3528                           	opt callstack 0
  3529  00002E                     	ds	1
  3530  00002F                     _mode_sw:
  3531                           	opt callstack 0
  3532  00002F                     	ds	1
  3533  000030                     _uart2RxCount:
  3534                           	opt callstack 0
  3535  000030                     	ds	1
  3536  000031                     _uart2RxTail:
  3537                           	opt callstack 0
  3538  000031                     	ds	1
  3539  000032                     _uart2RxHead:
  3540                           	opt callstack 0
  3541  000032                     	ds	1
  3542  000033                     _uart2TxBufferRemaining:
  3543                           	opt callstack 0
  3544  000033                     	ds	1
  3545  000034                     _uart2TxTail:
  3546                           	opt callstack 0
  3547  000034                     	ds	1
  3548  000035                     _uart2TxHead:
  3549                           	opt callstack 0
  3550  000035                     	ds	1
  3551  000036                     _uart1RxCount:
  3552                           	opt callstack 0
  3553  000036                     	ds	1
  3554  000037                     _uart1RxTail:
  3555                           	opt callstack 0
  3556  000037                     	ds	1
  3557  000038                     _uart1RxHead:
  3558                           	opt callstack 0
  3559  000038                     	ds	1
  3560                           
  3561                           	psect	bssBANK0
  3562  000060                     __pbssBANK0:
  3563                           	opt callstack 0
  3564  000060                     _spi_link:
  3565                           	opt callstack 0
  3566  000060                     	ds	12
  3567  00006C                     _uart1RxBuffer:
  3568                           	opt callstack 0
  3569  00006C                     	ds	8
  3570  000074                     spinners@s:
  3571                           	opt callstack 0
  3572  000074                     	ds	6
  3573  00007A                     floorf@F524:
  3574                           	opt callstack 0
  3575  00007A                     	ds	4
  3576  00007E                     fabsf@F463:
  3577                           	opt callstack 0
  3578  00007E                     	ds	4
  3579  000082                     ___fpclassifyf@F463:
  3580                           	opt callstack 0
  3581  000082                     	ds	4
  3582  000086                     calc_ror_data@bcror:
  3583                           	opt callstack 0
  3584  000086                     	ds	4
  3585  00008A                     calc_ror_data@bvror:
  3586                           	opt callstack 0
  3587  00008A                     	ds	4
  3588  00008E                     calc_model_data@bcror:
  3589                           	opt callstack 0
  3590  00008E                     	ds	4
  3591  000092                     calc_model_data@bvror:
  3592                           	opt callstack 0
  3593  000092                     	ds	4
  3594  000096                     _utctime:
  3595                           	opt callstack 0
  3596  000096                     	ds	4
  3597  00009A                     wdtdelay@dcount:
  3598                           	opt callstack 0
  3599  00009A                     	ds	4
  3600  00009E                     _P:
  3601                           	opt callstack 0
  3602  00009E                     	ds	4
  3603  0000A2                     _TMR3_InterruptHandler:
  3604                           	opt callstack 0
  3605  0000A2                     	ds	3
  3606  0000A5                     _TMR5_InterruptHandler:
  3607                           	opt callstack 0
  3608  0000A5                     	ds	3
  3609  0000A8                     _TMR6_InterruptHandler:
  3610                           	opt callstack 0
  3611  0000A8                     	ds	3
  3612  0000AB                     _ADCC_ADTI_InterruptHandler:
  3613                           	opt callstack 0
  3614  0000AB                     	ds	3
  3615  0000AE                     _ADCC_ADI_InterruptHandler:
  3616                           	opt callstack 0
  3617  0000AE                     	ds	3
  3618  0000B1                     _UART1_RxInterruptHandler:
  3619                           	opt callstack 0
  3620  0000B1                     	ds	3
  3621  0000B4                     _UART2_TxInterruptHandler:
  3622                           	opt callstack 0
  3623  0000B4                     	ds	3
  3624  0000B7                     _UART2_RxInterruptHandler:
  3625                           	opt callstack 0
  3626  0000B7                     	ds	3
  3627  0000BA                     _INT1_InterruptHandler:
  3628                           	opt callstack 0
  3629  0000BA                     	ds	3
  3630  0000BD                     _INT0_InterruptHandler:
  3631                           	opt callstack 0
  3632  0000BD                     	ds	3
  3633  0000C0                     _nout:
  3634                           	opt callstack 0
  3635  0000C0                     	ds	2
  3636  0000C2                     TMR3_ISR@CountCallBack:
  3637                           	opt callstack 0
  3638  0000C2                     	ds	2
  3639                           
  3640                           	psect	dataBANK0
  3641  0000C4                     __pdataBANK0:
  3642                           	opt callstack 0
  3643  0000C4                     _R:
  3644                           	opt callstack 0
  3645  0000C4                     	ds	40
  3646  0000EC                     stoa@F1166:
  3647                           	opt callstack 0
  3648  0000EC                     	ds	7
  3649  0000F3                     _H:
  3650                           	opt callstack 0
  3651  0000F3                     	ds	7
  3652                           
  3653                           	psect	bssBANK1
  3654  0001F7                     __pbssBANK1:
  3655                           	opt callstack 0
  3656  0001F7                     _seed:
  3657                           	opt callstack 0
  3658  0001F7                     	ds	8
  3659                           
  3660                           	psect	dataBANK1
  3661  000100                     __pdataBANK1:
  3662                           	opt callstack 0
  3663  000100                     _C:
  3664                           	opt callstack 0
  3665  000100                     	ds	247
  3666                           
  3667                           	psect	bssBANK2
  3668  0002BD                     __pbssBANK2:
  3669                           	opt callstack 0
  3670  0002BD                     _S:
  3671                           	opt callstack 0
  3672  0002BD                     	ds	41
  3673  0002E6                     _tickCount:
  3674                           	opt callstack 0
  3675  0002E6                     	ds	26
  3676                           
  3677                           	psect	dataBANK2
  3678  000200                     __pdataBANK2:
  3679                           	opt callstack 0
  3680  000200                     _V:
  3681                           	opt callstack 0
  3682  000200                     	ds	189
  3683                           
  3684                           	psect	bssBANK3
  3685  000300                     __pbssBANK3:
  3686                           	opt callstack 0
  3687  000300                     lp_filter@smooth:
  3688                           	opt callstack 0
  3689  000300                     	ds	84
  3690  000354                     _uart2TxBuffer:
  3691                           	opt callstack 0
  3692  000354                     	ds	64
  3693  000394                     _dbuf:
  3694                           	opt callstack 0
  3695  000394                     	ds	80
  3696                           
  3697                           	psect	bssBANK4
  3698  000400                     __pbssBANK4:
  3699                           	opt callstack 0
  3700  000400                     _ring_buf2:
  3701                           	opt callstack 0
  3702  000400                     	ds	67
  3703  000443                     _ring_buf1:
  3704                           	opt callstack 0
  3705  000443                     	ds	67
  3706                           
  3707                           	psect	bssBANK5
  3708  000500                     __pbssBANK5:
  3709                           	opt callstack 0
  3710  000500                     _uart2RxBuffer:
  3711                           	opt callstack 0
  3712  000500                     	ds	255
  3713                           
  3714                           	psect	bssBIGRAM
  3715  0007FF                     __pbssBIGRAM:
  3716                           	opt callstack 0
  3717  0007FF                     _D:
  3718                           	opt callstack 0
  3719  0007FF                     	ds	290
  3720                           
  3721                           	psect	dataBIGRAM
  3722  0005FF                     __pdataBIGRAM:
  3723                           	opt callstack 0
  3724  0005FF                     _port_data:
  3725                           	opt callstack 0
  3726  0005FF                     	ds	512
  3727                           
  3728                           	psect	cstackBANK3
  3729  0003E4                     __pcstackBANK3:
  3730                           	opt callstack 0
  3731  0003E4                     ??_TMR3_ISR:
  3732                           
  3733                           ; 1 bytes @ 0x0
  3734  0003E4                     	ds	25
  3735                           
  3736                           	psect	cstackCOMRAM
  3737  000039                     __pcstackCOMRAM:
  3738                           	opt callstack 0
  3739  000039                     ??_ADCC_ThresholdISR:
  3740  000039                     
  3741                           ; 1 bytes @ 0x0
  3742  000039                     	ds	5
  3743  00003E                     ??_TMR6_ISR:
  3744                           
  3745                           ; 1 bytes @ 0x5
  3746  00003E                     	ds	1
  3747  00003F                     ??_INT1_ISR:
  3748  00003F                     
  3749                           ; 1 bytes @ 0x6
  3750  00003F                     	ds	4
  3751  000043                     ??_TMR5_ISR:
  3752                           
  3753                           ; 1 bytes @ 0xA
  3754  000043                     	ds	4
  3755                           
  3756 ;;
  3757 ;;Main: autosize = 13, tempsize = 0, incstack = 0, save=0
  3758 ;;
  3759 ;; *************** function _main *****************
  3760 ;; Defined at:
  3761 ;;		line 175 in file "main.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  esr_temp        4  [STACK] float 
  3766 ;;  i_esr           2  [STACK] unsigned short 
  3767 ;;  shape           1  [STACK] unsigned char 
  3768 ;;  k               1  [STACK] unsigned char 
  3769 ;;  j               1  [STACK] unsigned char 
  3770 ;;  i               1  [STACK] unsigned char 
  3771 ;;  inp_index       1  [STACK] unsigned char 
  3772 ;;  mode            1  [STACK] enum E17013
  3773 ;;  i_ror           1  [STACK] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1  [STACK] void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3787 ;;Total ram usage:        0 bytes
  3788 ;; Hardware stack levels required when called:   28
  3789 ;; This function calls:
  3790 ;;		_SYSTEM_Initialize
  3791 ;;		_StartTimer
  3792 ;;		_TimerDone
  3793 ;;		_WaitMs
  3794 ;;		___fladd
  3795 ;;		___flge
  3796 ;;		___fltol
  3797 ;;		_calc_model_data
  3798 ;;		_calc_ror_data
  3799 ;;		_check_adc_scan
  3800 ;;		_check_enter_button
  3801 ;;		_check_help
  3802 ;;		_clear_adc_scan
  3803 ;;		_clear_hid_pflags
  3804 ;;		_conv_raw_result
  3805 ;;		_convert_adc_data
  3806 ;;		_eaDogM_WriteCommand
  3807 ;;		_esr_check
  3808 ;;		_fabsf
  3809 ;;		_get_raw_result
  3810 ;;		_get_switch
  3811 ;;		_get_vterm_ptr
  3812 ;;		_hid_display
  3813 ;;		_init_bsoc
  3814 ;;		_init_display
  3815 ;;		_init_port_dma
  3816 ;;		_lp_filter
  3817 ;;		_mode_lamp_dim
  3818 ;;		_set_display_info
  3819 ;;		_set_load_relay_one
  3820 ;;		_set_load_relay_two
  3821 ;;		_set_vterm
  3822 ;;		_spinners
  3823 ;;		_sprintf
  3824 ;;		_srand
  3825 ;;		_start_adc_scan
  3826 ;;		_start_switch_handler
  3827 ;;		_static_soc
  3828 ;;		_update_lcd
  3829 ;; This function is called by:
  3830 ;;		Startup code after reset
  3831 ;; This function uses a reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text0
  3835  011244                     __ptext0:
  3836                           	opt callstack 0
  3837  011244                     _main:
  3838                           	opt callstack 0
  3839                           
  3840                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3841  011244  0E0D               	movlw	13
  3842  011246  26E1               	addwf	fsr1l,f,c
  3843  011248  0E00               	movlw	0
  3844  01124A  22E2               	addwfc	fsr1h,f,c
  3845                           
  3846                           ;main.c: 177:  UI_STATES mode;;main.c: 178:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3847                           ;stkvar	_inp_index @ sp[(-13)+10]
  3848                           
  3849                           ;incstack = 0
  3850  01124C  0EFD               	movlw	-3
  3851  01124E  6AE3               	clrf	plusw1,c
  3852                           
  3853                           ;stkvar	_i @ sp[(-13)+9]
  3854  011250  0EFC               	movlw	-4
  3855  011252  6AE3               	clrf	plusw1,c
  3856                           
  3857                           ;stkvar	_j @ sp[(-13)+8]
  3858  011254  0EFB               	movlw	-5
  3859  011256  6AE3               	clrf	plusw1,c
  3860  011258  2AE3               	incf	plusw1,f,c
  3861                           
  3862                           ;stkvar	_k @ sp[(-13)+7]
  3863  01125A  0EFA               	movlw	-6
  3864  01125C  6AE3               	clrf	plusw1,c
  3865  01125E  82E3               	bsf	plusw1,1,c
  3866                           
  3867                           ;main.c: 181:  SYSTEM_Initialize();
  3868  011260  ECD3  F0D4         	call	_SYSTEM_Initialize	;wreg free
  3869                           
  3870                           ; BSR set to: 60
  3871                           ;main.c: 184:  (INTCON0bits.GIEH = 1);
  3872  011264  8ED2               	bsf	210,7,c	;volatile
  3873                           
  3874                           ; BSR set to: 60
  3875                           ;main.c: 187:  (INTCON0bits.GIEL = 1);
  3876  011266  8CD2               	bsf	210,6,c	;volatile
  3877                           
  3878                           ; BSR set to: 60
  3879                           ;main.c: 189:  V.ui_state = UI_STATE_INIT;
  3880  011268  0102               	movlb	2	; () banked
  3881  01126A  6B00               	clrf	_V& (0+255),b	;volatile
  3882                           
  3883                           ; BSR set to: 2
  3884                           ;main.c: 194:  WaitMs(300);
  3885  01126C  0E2C               	movlw	44
  3886  01126E  6EE6               	movwf	postinc1,c
  3887  011270  0E01               	movlw	1
  3888  011272  6EE6               	movwf	postinc1,c
  3889  011274  EC01  F0D7         	call	_WaitMs	;wreg free
  3890                           
  3891                           ;main.c: 195:  if (PORTBbits.RB0) {
  3892  011278  A0CB               	btfss	203,0,c	;volatile
  3893  01127A  D004               	goto	l12564
  3894                           
  3895                           ;main.c: 196:   mode = UI_STATE_HOST;
  3896                           ;stkvar	_mode @ sp[(-13)+11]
  3897  01127C  0EFE               	movlw	-2
  3898  01127E  6AE3               	clrf	plusw1,c
  3899  011280  2AE3               	incf	plusw1,f,c
  3900                           
  3901                           ;main.c: 197:  } else {
  3902  011282  D004               	goto	l12566
  3903  011284                     l12564:
  3904                           
  3905                           ;main.c: 198:   mode = UI_STATE_LOG;
  3906                           ;stkvar	_mode @ sp[(-13)+11]
  3907  011284  0EFE               	movlw	-2
  3908  011286  6AE3               	clrf	plusw1,c
  3909  011288  80E3               	bsf	plusw1,0,c
  3910  01128A  82E3               	bsf	plusw1,1,c	;indir
  3911  01128C                     l12566:
  3912                           
  3913                           ;main.c: 201:  if (mode == UI_STATE_HOST) {
  3914                           ;stkvar	_mode @ sp[(-13)+11]
  3915  01128C  0EFE               	movlw	-2
  3916  01128E  04E3               	decf	plusw1,w,c
  3917  011290  A4D8               	btfss	status,2,c
  3918  011292  D007               	goto	l1322
  3919                           
  3920                           ;main.c: 202:   do { LATDbits.LATD0 = 1; } while(0);
  3921  011294  80BD               	bsf	189,0,c	;volatile
  3922                           
  3923                           ;main.c: 203:   V.mode_pwm = 70;
  3924  011296  0E00               	movlw	0
  3925  011298  0102               	movlb	2	; () banked
  3926  01129A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3927  01129C  0E46               	movlw	70
  3928  01129E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3929                           
  3930                           ;main.c: 204:  } else {
  3931  0112A0  D004               	goto	l12570
  3932  0112A2                     l1322:
  3933  0112A2  90BD               	bcf	189,0,c	;volatile
  3934                           
  3935                           ;main.c: 206:   V.mode_pwm = 0;
  3936  0112A4  0102               	movlb	2	; () banked
  3937  0112A6  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3938  0112A8  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3939  0112AA                     l12570:
  3940                           
  3941                           ; BSR set to: 2
  3942                           ;main.c: 208:  mode_lamp_dim(V.mode_pwm);
  3943  0112AA  0060  FA57  FFE6   	movff	_V+149,postinc1
  3944  0112B0  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3945  0112B6  ECC9  F0DA         	call	_mode_lamp_dim	;wreg free
  3946  0112BA  D311               	goto	l12690
  3947  0112BC                     l12572:
  3948                           
  3949                           ; BSR set to: 2
  3950                           ;main.c: 216:    init_port_dma();
  3951  0112BC  EC85  F0D7         	call	_init_port_dma	;wreg free
  3952                           
  3953                           ; BSR set to: 59
  3954                           ;main.c: 218:    init_display();
  3955  0112C0  EC88  F0CB         	call	_init_display	;wreg free
  3956                           
  3957                           ; BSR set to: 61
  3958                           ;main.c: 219:    eaDogM_WriteCommand(0b00001100);
  3959  0112C4  0E0C               	movlw	12
  3960  0112C6  6EE6               	movwf	postinc1,c
  3961  0112C8  EC2D  F0DB         	call	_eaDogM_WriteCommand	;wreg free
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;main.c: 223:    set_load_relay_one(1);
  3965  0112CC  0E01               	movlw	1
  3966  0112CE  6EE6               	movwf	postinc1,c
  3967  0112D0  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  3968                           
  3969                           ;main.c: 224:    set_load_relay_two(1);
  3970  0112D4  0E01               	movlw	1
  3971  0112D6  6EE6               	movwf	postinc1,c
  3972  0112D8  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  3973                           
  3974                           ;main.c: 226:    V.ui_state = mode;
  3975                           ;stkvar	_mode @ sp[(-13)+11]
  3976  0112DC  0EFE               	movlw	-2
  3977  0112DE  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3978                           
  3979                           ;main.c: 227:    srand(1957);
  3980  0112E4  0EA5               	movlw	165
  3981  0112E6  6EE6               	movwf	postinc1,c
  3982  0112E8  0E07               	movlw	7
  3983  0112EA  6EE6               	movwf	postinc1,c
  3984  0112EC  EC37  F0D7         	call	_srand	;wreg free
  3985                           
  3986                           ; BSR set to: 1
  3987                           ;main.c: 228:    set_vterm(0);
  3988  0112F0  0E00               	movlw	0
  3989  0112F2  6EE6               	movwf	postinc1,c
  3990  0112F4  EC56  F0DA         	call	_set_vterm	;wreg free
  3991                           
  3992                           ;main.c: 229:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3993  0112F8  0E50               	movlw	low STR_1
  3994  0112FA  6EE6               	movwf	postinc1,c
  3995  0112FC  0EFF               	movlw	high STR_1
  3996  0112FE  6EE6               	movwf	postinc1,c
  3997  011300  0E00               	movlw	0
  3998  011302  6EE6               	movwf	postinc1,c
  3999  011304  0E00               	movlw	0
  4000  011306  6EE6               	movwf	postinc1,c
  4001  011308  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4002  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4003  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4004  011318  0E04               	movlw	4
  4005  01131A  6EE6               	movwf	postinc1,c
  4006  01131C  EC06  F0CA         	call	_sprintf	;wreg free
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;main.c: 230:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.005");
  4010  011320  0ED0               	movlw	low STR_3
  4011  011322  6EE6               	movwf	postinc1,c
  4012  011324  0EFF               	movlw	high STR_3
  4013  011326  6EE6               	movwf	postinc1,c
  4014  011328  0EA2               	movlw	low STR_2
  4015  01132A  6EE6               	movwf	postinc1,c
  4016  01132C  0EFF               	movlw	high STR_2
  4017  01132E  6EE6               	movwf	postinc1,c
  4018  011330  0E00               	movlw	0
  4019  011332  6EE6               	movwf	postinc1,c
  4020  011334  0E01               	movlw	1
  4021  011336  6EE6               	movwf	postinc1,c
  4022  011338  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4023  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4024  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4025  011348  0E06               	movlw	6
  4026  01134A  6EE6               	movwf	postinc1,c
  4027  01134C  EC06  F0CA         	call	_sprintf	;wreg free
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;main.c: 231:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4031  011350  0E1D               	movlw	low STR_4
  4032  011352  6EE6               	movwf	postinc1,c
  4033  011354  0EFF               	movlw	high STR_4
  4034  011356  6EE6               	movwf	postinc1,c
  4035  011358  0E00               	movlw	0
  4036  01135A  6EE6               	movwf	postinc1,c
  4037  01135C  0E02               	movlw	2
  4038  01135E  6EE6               	movwf	postinc1,c
  4039  011360  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4040  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4041  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4042  011370  0E04               	movlw	4
  4043  011372  6EE6               	movwf	postinc1,c
  4044  011374  EC06  F0CA         	call	_sprintf	;wreg free
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;main.c: 232:    sprintf(get_vterm_ptr(0, 2), "                ");
  4048  011378  0EF0               	movlw	low (STR_58+2)
  4049  01137A  6EE6               	movwf	postinc1,c
  4050  01137C  0EFD               	movlw	high (STR_58+2)
  4051  01137E  6EE6               	movwf	postinc1,c
  4052  011380  0E02               	movlw	2
  4053  011382  6EE6               	movwf	postinc1,c
  4054  011384  0E00               	movlw	0
  4055  011386  6EE6               	movwf	postinc1,c
  4056  011388  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4057  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4058  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4059  011398  0E04               	movlw	4
  4060  01139A  6EE6               	movwf	postinc1,c
  4061  01139C  EC06  F0CA         	call	_sprintf	;wreg free
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;main.c: 233:    sprintf(get_vterm_ptr(1, 2), "                ");
  4065  0113A0  0EF0               	movlw	low (STR_58+2)
  4066  0113A2  6EE6               	movwf	postinc1,c
  4067  0113A4  0EFD               	movlw	high (STR_58+2)
  4068  0113A6  6EE6               	movwf	postinc1,c
  4069  0113A8  0E02               	movlw	2
  4070  0113AA  6EE6               	movwf	postinc1,c
  4071  0113AC  0E01               	movlw	1
  4072  0113AE  6EE6               	movwf	postinc1,c
  4073  0113B0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4074  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4075  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4076  0113C0  0E04               	movlw	4
  4077  0113C2  6EE6               	movwf	postinc1,c
  4078  0113C4  EC06  F0CA         	call	_sprintf	;wreg free
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 234:    sprintf(get_vterm_ptr(2, 2), "                ");
  4082  0113C8  0EF0               	movlw	low (STR_58+2)
  4083  0113CA  6EE6               	movwf	postinc1,c
  4084  0113CC  0EFD               	movlw	high (STR_58+2)
  4085  0113CE  6EE6               	movwf	postinc1,c
  4086  0113D0  0E02               	movlw	2
  4087  0113D2  6EE6               	movwf	postinc1,c
  4088  0113D4  0E02               	movlw	2
  4089  0113D6  6EE6               	movwf	postinc1,c
  4090  0113D8  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4091  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4092  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4093  0113E8  0E04               	movlw	4
  4094  0113EA  6EE6               	movwf	postinc1,c
  4095  0113EC  EC06  F0CA         	call	_sprintf	;wreg free
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;main.c: 235:    update_lcd(0);
  4099  0113F0  0E00               	movlw	0
  4100  0113F2  6EE6               	movwf	postinc1,c
  4101  0113F4  ECF7  F0C8         	call	_update_lcd	;wreg free
  4102                           
  4103                           ;main.c: 236:    WaitMs(1000);
  4104  0113F8  0EE8               	movlw	232
  4105  0113FA  6EE6               	movwf	postinc1,c
  4106  0113FC  0E03               	movlw	3
  4107  0113FE  6EE6               	movwf	postinc1,c
  4108  011400  EC01  F0D7         	call	_WaitMs	;wreg free
  4109                           
  4110                           ;main.c: 237:    StartTimer(TMR_DISPLAY, 250);
  4111  011404  0EFA               	movlw	250
  4112  011406  6EE6               	movwf	postinc1,c
  4113  011408  0E00               	movlw	0
  4114  01140A  6EE6               	movwf	postinc1,c
  4115  01140C  0E0A               	movlw	10
  4116  01140E  6EE6               	movwf	postinc1,c
  4117  011410  EC0E  F0D6         	call	_StartTimer	;wreg free
  4118                           
  4119                           ;main.c: 238:    StartTimer(TMR_ADC, 200);
  4120  011414  0EC8               	movlw	200
  4121  011416  6EE6               	movwf	postinc1,c
  4122  011418  0E00               	movlw	0
  4123  01141A  6EE6               	movwf	postinc1,c
  4124  01141C  0E01               	movlw	1
  4125  01141E  6EE6               	movwf	postinc1,c
  4126  011420  EC0E  F0D6         	call	_StartTimer	;wreg free
  4127                           
  4128                           ;main.c: 239:    StartTimer(TMR_INFO, 3000);
  4129  011424  0EB8               	movlw	184
  4130  011426  6EE6               	movwf	postinc1,c
  4131  011428  0E0B               	movlw	11
  4132  01142A  6EE6               	movwf	postinc1,c
  4133  01142C  0E07               	movlw	7
  4134  01142E  6EE6               	movwf	postinc1,c
  4135  011430  EC0E  F0D6         	call	_StartTimer	;wreg free
  4136                           
  4137                           ;main.c: 240:    StartTimer(TMR_FLIPPER, 1500);
  4138  011434  0EDC               	movlw	220
  4139  011436  6EE6               	movwf	postinc1,c
  4140  011438  0E05               	movlw	5
  4141  01143A  6EE6               	movwf	postinc1,c
  4142  01143C  0E0B               	movlw	11
  4143  01143E  6EE6               	movwf	postinc1,c
  4144  011440  EC0E  F0D6         	call	_StartTimer	;wreg free
  4145                           
  4146                           ;main.c: 241:    StartTimer(TMR_HELPDIS, 3000);
  4147  011444  0EB8               	movlw	184
  4148  011446  6EE6               	movwf	postinc1,c
  4149  011448  0E0B               	movlw	11
  4150  01144A  6EE6               	movwf	postinc1,c
  4151  01144C  0E09               	movlw	9
  4152  01144E  6EE6               	movwf	postinc1,c
  4153  011450  EC0E  F0D6         	call	_StartTimer	;wreg free
  4154                           
  4155                           ;main.c: 243:    start_adc_scan();
  4156  011454  ECE6  F0D2         	call	_start_adc_scan	;wreg free
  4157                           
  4158                           ;main.c: 244:    start_switch_handler();
  4159  011458  EC37  F0DA         	call	_start_switch_handler	;wreg free
  4160                           
  4161                           ; BSR set to: 57
  4162                           ;main.c: 245:    WaitMs(1000);
  4163  01145C  0EE8               	movlw	232
  4164  01145E  6EE6               	movwf	postinc1,c
  4165  011460  0E03               	movlw	3
  4166  011462  6EE6               	movwf	postinc1,c
  4167  011464  EC01  F0D7         	call	_WaitMs	;wreg free
  4168                           
  4169                           ;main.c: 250:    i_ror = 1;
  4170                           ;stkvar	_i_ror @ sp[(-13)+12]
  4171  011468  0EFF               	movlw	-1
  4172  01146A  6AE3               	clrf	plusw1,c
  4173  01146C  2AE3               	incf	plusw1,f,c
  4174  01146E                     l12622:
  4175                           
  4176                           ;main.c: 252:     calc_ror_data();
  4177  01146E  EC45  F0C1         	call	_calc_ror_data	;wreg free
  4178                           
  4179                           ;main.c: 253:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4180  011472  0E00               	movlw	0
  4181  011474  6EE6               	movwf	postinc1,c
  4182  011476  0E04               	movlw	4
  4183  011478  6EE6               	movwf	postinc1,c
  4184  01147A  EC58  F0A7         	call	_conv_raw_result	;wreg free
  4185  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4186  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4187  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4188  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4189  011496  0E0B               	movlw	low STR_8
  4190  011498  6EE6               	movwf	postinc1,c
  4191  01149A  0EFF               	movlw	high STR_8
  4192  01149C  6EE6               	movwf	postinc1,c
  4193  01149E  0E00               	movlw	0
  4194  0114A0  6EE6               	movwf	postinc1,c
  4195  0114A2  0E01               	movlw	1
  4196  0114A4  6EE6               	movwf	postinc1,c
  4197  0114A6  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4198  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4199  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4200  0114B6  0E08               	movlw	8
  4201  0114B8  6EE6               	movwf	postinc1,c
  4202  0114BA  EC06  F0CA         	call	_sprintf	;wreg free
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;main.c: 254:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4206  0114BE  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4207  0114C4  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4208  0114CA  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4209  0114D0  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4210                           
  4211                           ;stkvar	_i_ror @ sp[(-17)+12]
  4212  0114D6  0EFB               	movlw	-5
  4213  0114D8  50E3               	movf	plusw1,w,c
  4214  0114DA  6EE6               	movwf	postinc1,c
  4215  0114DC  0E00               	movlw	0
  4216  0114DE  6EE6               	movwf	postinc1,c
  4217  0114E0  0E00               	movlw	0
  4218  0114E2  6EE6               	movwf	postinc1,c
  4219  0114E4  0E05               	movlw	5
  4220  0114E6  6EE6               	movwf	postinc1,c
  4221  0114E8  ECFD  F0CB         	call	_spinners	;wreg free
  4222  0114EC  5001               	movf	btemp^0,w,c
  4223  0114EE  6EE6               	movwf	postinc1,c
  4224  0114F0  0E00               	movlw	0
  4225  0114F2  6EE6               	movwf	postinc1,c
  4226  0114F4  0E08               	movlw	low STR_9
  4227  0114F6  6EE6               	movwf	postinc1,c
  4228  0114F8  0EFD               	movlw	high STR_9
  4229  0114FA  6EE6               	movwf	postinc1,c
  4230  0114FC  0E00               	movlw	0
  4231  0114FE  6EE6               	movwf	postinc1,c
  4232  011500  0E02               	movlw	2
  4233  011502  6EE6               	movwf	postinc1,c
  4234  011504  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4235  011508  0060  F007  FFE6   	movff	btemp,postinc1
  4236  01150E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4237  011514  0E0C               	movlw	12
  4238  011516  6EE6               	movwf	postinc1,c
  4239  011518  EC06  F0CA         	call	_sprintf	;wreg free
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;main.c: 255:     update_lcd(0);
  4243  01151C  0E00               	movlw	0
  4244  01151E  6EE6               	movwf	postinc1,c
  4245  011520  ECF7  F0C8         	call	_update_lcd	;wreg free
  4246                           
  4247                           ;main.c: 256:     WaitMs(2000);
  4248  011524  0ED0               	movlw	208
  4249  011526  6EE6               	movwf	postinc1,c
  4250  011528  0E07               	movlw	7
  4251  01152A  6EE6               	movwf	postinc1,c
  4252  01152C  EC01  F0D7         	call	_WaitMs	;wreg free
  4253                           
  4254                           ;main.c: 257:     clear_adc_scan();
  4255  011530  EC7B  F0DB         	call	_clear_adc_scan	;wreg free
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;main.c: 258:     start_adc_scan();
  4259  011534  ECE6  F0D2         	call	_start_adc_scan	;wreg free
  4260                           
  4261                           ;main.c: 259:     WaitMs(500);
  4262  011538  0EF4               	movlw	244
  4263  01153A  6EE6               	movwf	postinc1,c
  4264  01153C  0E01               	movlw	1
  4265  01153E  6EE6               	movwf	postinc1,c
  4266  011540  EC01  F0D7         	call	_WaitMs	;wreg free
  4267                           
  4268                           ;main.c: 260:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4269                           ;stkvar	_i_ror @ sp[(-13)+12]
  4270  011544  0EFF               	movlw	-1
  4271  011546  006F FF8C  F00C    	movff	plusw1,btemp+11
  4272  01154C  2A0C               	incf	(btemp+11)^0,f,c
  4273  01154E  0060  F033  FFE3   	movff	btemp+11,plusw1
  4274  011554  060C               	decf	(btemp+11)^0,f,c
  4275  011556  0E1E               	movlw	30
  4276  011558  600C               	cpfslt	(btemp+11)^0,c
  4277  01155A  D018               	goto	u12090
  4278  01155C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4279  011562  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4280  011568  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4281  01156E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4282  011574  0E42               	movlw	66
  4283  011576  6EE6               	movwf	postinc1,c
  4284  011578  0E60               	movlw	96
  4285  01157A  6EE6               	movwf	postinc1,c
  4286  01157C  0E65               	movlw	101
  4287  01157E  6EE6               	movwf	postinc1,c
  4288  011580  0E3C               	movlw	60
  4289  011582  6EE6               	movwf	postinc1,c
  4290  011584  EC70  F0C3         	call	___flge	;wreg free
  4291  011588  A001               	btfss	btemp& (0+255),0,c
  4292  01158A  D771               	goto	l12622
  4293  01158C                     u12090:
  4294                           
  4295                           ;main.c: 262:    static_soc();
  4296  01158C  ECA8  F0D9         	call	_static_soc	;wreg free
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;main.c: 263:    init_bsoc();
  4300  011590  ECB8  F0C2         	call	_init_bsoc	;wreg free
  4301                           
  4302                           ;main.c: 264:    set_load_relay_one(0);
  4303  011594  0E00               	movlw	0
  4304  011596  6EE6               	movwf	postinc1,c
  4305  011598  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  4306                           
  4307                           ;main.c: 265:    set_load_relay_two(0);
  4308  01159C  0E00               	movlw	0
  4309  01159E  6EE6               	movwf	postinc1,c
  4310  0115A0  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  4311                           
  4312                           ;main.c: 266:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4313  0115A4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  4314  0115AA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  4315  0115B0  0E35               	movlw	low STR_10
  4316  0115B2  6EE6               	movwf	postinc1,c
  4317  0115B4  0EFD               	movlw	high STR_10
  4318  0115B6  6EE6               	movwf	postinc1,c
  4319  0115B8  0E00               	movlw	0
  4320  0115BA  6EE6               	movwf	postinc1,c
  4321  0115BC  0E00               	movlw	0
  4322  0115BE  6EE6               	movwf	postinc1,c
  4323  0115C0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4324  0115C4  0060  F007  FFE6   	movff	btemp,postinc1
  4325  0115CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4326  0115D0  0E06               	movlw	6
  4327  0115D2  6EE6               	movwf	postinc1,c
  4328  0115D4  EC06  F0CA         	call	_sprintf	;wreg free
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;main.c: 267:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4332  0115D8  0060  F633  FFE6   	movff	_C+140,postinc1
  4333  0115DE  0060  F637  FFE6   	movff	_C+141,postinc1
  4334  0115E4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4335  0115EA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4336  0115F0  0E4B               	movlw	low STR_11
  4337  0115F2  6EE6               	movwf	postinc1,c
  4338  0115F4  0EFD               	movlw	high STR_11
  4339  0115F6  6EE6               	movwf	postinc1,c
  4340  0115F8  0E00               	movlw	0
  4341  0115FA  6EE6               	movwf	postinc1,c
  4342  0115FC  0E01               	movlw	1
  4343  0115FE  6EE6               	movwf	postinc1,c
  4344  011600  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4345  011604  0060  F007  FFE6   	movff	btemp,postinc1
  4346  01160A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4347  011610  0E08               	movlw	8
  4348  011612  6EE6               	movwf	postinc1,c
  4349  011614  EC06  F0CA         	call	_sprintf	;wreg free
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;main.c: 268:    update_lcd(0);
  4353  011618  0E00               	movlw	0
  4354  01161A  6EE6               	movwf	postinc1,c
  4355  01161C  ECF7  F0C8         	call	_update_lcd	;wreg free
  4356                           
  4357                           ;main.c: 269:    WaitMs(2000);
  4358  011620  0ED0               	movlw	208
  4359  011622  6EE6               	movwf	postinc1,c
  4360  011624  0E07               	movlw	7
  4361  011626  6EE6               	movwf	postinc1,c
  4362  011628  EC01  F0D7         	call	_WaitMs	;wreg free
  4363                           
  4364                           ;main.c: 270:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4365  01162C  0E2E               	movlw	low STR_12
  4366  01162E  6EE6               	movwf	postinc1,c
  4367  011630  0EFF               	movlw	high STR_12
  4368  011632  6EE6               	movwf	postinc1,c
  4369  011634  0E00               	movlw	0
  4370  011636  6EE6               	movwf	postinc1,c
  4371  011638  0E00               	movlw	0
  4372  01163A  6EE6               	movwf	postinc1,c
  4373  01163C  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4374  011640  0060  F007  FFE6   	movff	btemp,postinc1
  4375  011646  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4376  01164C  0E04               	movlw	4
  4377  01164E  6EE6               	movwf	postinc1,c
  4378  011650  EC06  F0CA         	call	_sprintf	;wreg free
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;main.c: 271:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4382  011654  0E3F               	movlw	low STR_13
  4383  011656  6EE6               	movwf	postinc1,c
  4384  011658  0EFF               	movlw	high STR_13
  4385  01165A  6EE6               	movwf	postinc1,c
  4386  01165C  0E00               	movlw	0
  4387  01165E  6EE6               	movwf	postinc1,c
  4388  011660  0E01               	movlw	1
  4389  011662  6EE6               	movwf	postinc1,c
  4390  011664  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4391  011668  0060  F007  FFE6   	movff	btemp,postinc1
  4392  01166E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4393  011674  0E04               	movlw	4
  4394  011676  6EE6               	movwf	postinc1,c
  4395  011678  EC06  F0CA         	call	_sprintf	;wreg free
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;main.c: 272:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4399  01167C  0E72               	movlw	low STR_14
  4400  01167E  6EE6               	movwf	postinc1,c
  4401  011680  0EFF               	movlw	high STR_14
  4402  011682  6EE6               	movwf	postinc1,c
  4403  011684  0E00               	movlw	0
  4404  011686  6EE6               	movwf	postinc1,c
  4405  011688  0E02               	movlw	2
  4406  01168A  6EE6               	movwf	postinc1,c
  4407  01168C  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4408  011690  0060  F007  FFE6   	movff	btemp,postinc1
  4409  011696  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4410  01169C  0E04               	movlw	4
  4411  01169E  6EE6               	movwf	postinc1,c
  4412  0116A0  EC06  F0CA         	call	_sprintf	;wreg free
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;main.c: 273:    update_lcd(0);
  4416  0116A4  0E00               	movlw	0
  4417  0116A6  6EE6               	movwf	postinc1,c
  4418  0116A8  ECF7  F0C8         	call	_update_lcd	;wreg free
  4419                           
  4420                           ;main.c: 274:    uint16_t i_esr = 1;
  4421  0116AC  0E01               	movlw	1
  4422  0116AE  6E0B               	movwf	(btemp+10)^0,c
  4423  0116B0  0E00               	movlw	0
  4424  0116B2  6E0C               	movwf	(btemp+11)^0,c
  4425                           
  4426                           ;stkvar	_i_esr @ sp[(-13)+4]
  4427  0116B4  0EF7               	movlw	-9
  4428  0116B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4429  0116BC  0EF8               	movlw	-8
  4430  0116BE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4431                           
  4432                           ;main.c: 276:    float esr_temp;;main.c: 277:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4433  0116C4  D06D               	goto	l12682
  4434  0116C6                     l12670:
  4435                           
  4436                           ;main.c: 278:     WaitMs(110);
  4437  0116C6  0E6E               	movlw	110
  4438  0116C8  6EE6               	movwf	postinc1,c
  4439  0116CA  0E00               	movlw	0
  4440  0116CC  6EE6               	movwf	postinc1,c
  4441  0116CE  EC01  F0D7         	call	_WaitMs	;wreg free
  4442                           
  4443                           ;main.c: 279:     shape = (uint8_t) fabsf(esr_temp);
  4444                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4445  0116D2  0EF3               	movlw	-13
  4446  0116D4  006F FF8F FFE6     	movff	plusw1,postinc1
  4447  0116DA  006F FF8F FFE6     	movff	plusw1,postinc1
  4448  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  4449  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  4450  0116EC  ECF7  F0CD         	call	_fabsf	;wreg free
  4451  0116F0  0060  F007  FFE6   	movff	btemp,postinc1
  4452  0116F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4453  0116FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4454  011702  0060  F013  FFE6   	movff	btemp+3,postinc1
  4455  011708  ECFF  F0C1         	call	___fltol	;wreg free
  4456  01170C  0060  F004  F00C   	movff	btemp,btemp+11
  4457                           
  4458                           ;stkvar	_shape @ sp[(-13)+6]
  4459  011712  0EF9               	movlw	-7
  4460  011714  0060  F033  FFE3   	movff	btemp+11,plusw1
  4461                           
  4462                           ;main.c: 280:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4463  01171A  0E00               	movlw	0
  4464  01171C  6EE6               	movwf	postinc1,c
  4465                           
  4466                           ;stkvar	_shape @ sp[(-14)+6]
  4467  01171E  0EF8               	movlw	-8
  4468  011720  50E3               	movf	plusw1,w,c
  4469  011722  6EE6               	movwf	postinc1,c
  4470  011724  ECFD  F0CB         	call	_spinners	;wreg free
  4471  011728  5001               	movf	btemp^0,w,c
  4472  01172A  6EE6               	movwf	postinc1,c
  4473  01172C  0E00               	movlw	0
  4474  01172E  6EE6               	movwf	postinc1,c
  4475  011730  0E00               	movlw	0
  4476  011732  6EE6               	movwf	postinc1,c
  4477  011734  0E00               	movlw	0
  4478  011736  6EE6               	movwf	postinc1,c
  4479  011738  ECFD  F0CB         	call	_spinners	;wreg free
  4480  01173C  5001               	movf	btemp^0,w,c
  4481  01173E  6EE6               	movwf	postinc1,c
  4482  011740  0E00               	movlw	0
  4483  011742  6EE6               	movwf	postinc1,c
  4484  011744  0E61               	movlw	low STR_15
  4485  011746  6EE6               	movwf	postinc1,c
  4486  011748  0EFD               	movlw	high STR_15
  4487  01174A  6EE6               	movwf	postinc1,c
  4488  01174C  0E00               	movlw	0
  4489  01174E  6EE6               	movwf	postinc1,c
  4490  011750  0E02               	movlw	2
  4491  011752  6EE6               	movwf	postinc1,c
  4492  011754  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4493  011758  0060  F007  FFE6   	movff	btemp,postinc1
  4494  01175E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4495  011764  0E08               	movlw	8
  4496  011766  6EE6               	movwf	postinc1,c
  4497  011768  EC06  F0CA         	call	_sprintf	;wreg free
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;main.c: 281:     update_lcd(0);
  4501  01176C  0E00               	movlw	0
  4502  01176E  6EE6               	movwf	postinc1,c
  4503  011770  ECF7  F0C8         	call	_update_lcd	;wreg free
  4504                           
  4505                           ;main.c: 283:     if (i_esr++ > 512)
  4506                           ;stkvar	_i_esr @ sp[(-13)+4]
  4507  011774  50E1               	movf	fsr1l,w,c
  4508  011776  0FF7               	addlw	-9
  4509  011778  6ED9               	movwf	fsr2l,c
  4510  01177A  50E2               	movf	fsr1h,w,c
  4511  01177C  6EDA               	movwf	fsr2h,c
  4512  01177E  0EFF               	movlw	255
  4513  011780  22DA               	addwfc	fsr2h,f,c
  4514  011782  006F FF7C  F00B    	movff	indf2,btemp+10
  4515  011788  0E01               	movlw	1
  4516  01178A  26DE               	addwf	postinc2,f,c
  4517  01178C  006F FF7C  F00C    	movff	indf2,btemp+11
  4518  011792  0E00               	movlw	0
  4519  011794  22DD               	addwfc	postdec2,f,c
  4520  011796  040B               	decf	(btemp+10)^0,w,c
  4521  011798  0E02               	movlw	2
  4522  01179A  580C               	subwfb	(btemp+11)^0,w,c
  4523  01179C  B0D8               	btfsc	status,0,c
  4524  01179E  D017               	goto	u12110
  4525  0117A0                     l12682:
  4526                           
  4527                           ;main.c: 277:    while ((esr_temp = esr_check(0)) < 0.0) {
  4528  0117A0  0E00               	movlw	0
  4529  0117A2  6EE6               	movwf	postinc1,c
  4530  0117A4  EC68  F0B4         	call	_esr_check	;wreg free
  4531                           
  4532                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4533  0117A8  0EF3               	movlw	-13
  4534  0117AA  0060  F007  FFE3   	movff	btemp,plusw1
  4535  0117B0  0EF4               	movlw	-12
  4536  0117B2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4537  0117B8  0EF5               	movlw	-11
  4538  0117BA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4539  0117C0  0EF6               	movlw	-10
  4540  0117C2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4541  0117C8  0EF6               	movlw	-10
  4542  0117CA  BEE3               	btfsc	plusw1,7,c
  4543  0117CC  D77C               	goto	l12670
  4544  0117CE                     u12110:
  4545                           
  4546                           ;main.c: 286:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4547  0117CE  0060  F613  FFE6   	movff	_C+132,postinc1
  4548  0117D4  0060  F617  FFE6   	movff	_C+133,postinc1
  4549  0117DA  0060  F61B  FFE6   	movff	_C+134,postinc1
  4550  0117E0  0060  F61F  FFE6   	movff	_C+135,postinc1
  4551  0117E6  0E1F               	movlw	low STR_16
  4552  0117E8  6EE6               	movwf	postinc1,c
  4553  0117EA  0EFD               	movlw	high STR_16
  4554  0117EC  6EE6               	movwf	postinc1,c
  4555  0117EE  0E00               	movlw	0
  4556  0117F0  6EE6               	movwf	postinc1,c
  4557  0117F2  0E00               	movlw	0
  4558  0117F4  6EE6               	movwf	postinc1,c
  4559  0117F6  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4560  0117FA  0060  F007  FFE6   	movff	btemp,postinc1
  4561  011800  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4562  011806  0E08               	movlw	8
  4563  011808  6EE6               	movwf	postinc1,c
  4564  01180A  EC06  F0CA         	call	_sprintf	;wreg free
  4565                           
  4566                           ;main.c: 287:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4567  01180E  0060  F78F  FFE6   	movff	_C+227,postinc1
  4568  011814  0060  F793  FFE6   	movff	_C+228,postinc1
  4569  01181A  0060  F797  FFE6   	movff	_C+229,postinc1
  4570  011820  0060  F79B  FFE6   	movff	_C+230,postinc1
  4571  011826  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4572  01182C  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4573  011832  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4574  011838  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4575  01183E  0EBC               	movlw	low STR_17
  4576  011840  6EE6               	movwf	postinc1,c
  4577  011842  0EFC               	movlw	high STR_17
  4578  011844  6EE6               	movwf	postinc1,c
  4579  011846  0E00               	movlw	0
  4580  011848  6EE6               	movwf	postinc1,c
  4581  01184A  0E01               	movlw	1
  4582  01184C  6EE6               	movwf	postinc1,c
  4583  01184E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4584  011852  0060  F007  FFE6   	movff	btemp,postinc1
  4585  011858  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4586  01185E  0E0C               	movlw	12
  4587  011860  6EE6               	movwf	postinc1,c
  4588  011862  EC06  F0CA         	call	_sprintf	;wreg free
  4589                           
  4590                           ;main.c: 288:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4591  011866  0060  F79F  FFE6   	movff	_C+231,postinc1
  4592  01186C  0060  F7A3  FFE6   	movff	_C+232,postinc1
  4593  011872  0060  F7A7  FFE6   	movff	_C+233,postinc1
  4594  011878  0060  F7AB  FFE6   	movff	_C+234,postinc1
  4595  01187E  0060  F7CF  FFE6   	movff	_C+243,postinc1
  4596  011884  0060  F7D3  FFE6   	movff	_C+244,postinc1
  4597  01188A  0060  F7D7  FFE6   	movff	_C+245,postinc1
  4598  011890  0060  F7DB  FFE6   	movff	_C+246,postinc1
  4599  011896  0ED6               	movlw	low STR_18
  4600  011898  6EE6               	movwf	postinc1,c
  4601  01189A  0EFC               	movlw	high STR_18
  4602  01189C  6EE6               	movwf	postinc1,c
  4603  01189E  0E00               	movlw	0
  4604  0118A0  6EE6               	movwf	postinc1,c
  4605  0118A2  0E02               	movlw	2
  4606  0118A4  6EE6               	movwf	postinc1,c
  4607  0118A6  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4608  0118AA  0060  F007  FFE6   	movff	btemp,postinc1
  4609  0118B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4610  0118B6  0E0C               	movlw	12
  4611  0118B8  6EE6               	movwf	postinc1,c
  4612  0118BA  EC06  F0CA         	call	_sprintf	;wreg free
  4613                           
  4614                           ;main.c: 289:    update_lcd(0);
  4615  0118BE  0E00               	movlw	0
  4616  0118C0  6EE6               	movwf	postinc1,c
  4617  0118C2  ECF7  F0C8         	call	_update_lcd	;wreg free
  4618                           
  4619                           ;main.c: 290:    WaitMs(5000);
  4620  0118C6  0E88               	movlw	136
  4621  0118C8  6EE6               	movwf	postinc1,c
  4622  0118CA  0E13               	movlw	19
  4623  0118CC  6EE6               	movwf	postinc1,c
  4624  0118CE  EC01  F0D7         	call	_WaitMs	;wreg free
  4625                           
  4626                           ;main.c: 291:    break;
  4627  0118D2  D01C               	goto	l12692
  4628  0118D4                     l1338:
  4629                           
  4630                           ; BSR set to: 2
  4631                           ;main.c: 297:    P.SYSTEM_STABLE = 1;
  4632  0118D4  0100               	movlb	0	; () banked
  4633  0118D6  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4634                           
  4635                           ;main.c: 298:    break;
  4636  0118D8  D019               	goto	l12692
  4637  0118DA                     l1340:
  4638                           
  4639                           ; BSR set to: 2
  4640                           ;main.c: 301:    V.ui_state = UI_STATE_INIT;
  4641  0118DA  6B00               	clrf	_V& (0+255),b	;volatile
  4642                           
  4643                           ;main.c: 302:    break;
  4644  0118DC  D017               	goto	l12692
  4645  0118DE                     l12690:
  4646  0118DE  0102               	movlb	2	; () banked
  4647  0118E0  5100               	movf	_V& (0+255),w,b	;volatile
  4648  0118E2  6E0B               	movwf	(btemp+10)^0,c
  4649  0118E4  6A0C               	clrf	(btemp+11)^0,c
  4650                           
  4651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4652                           ; Switch size 1, requested type "simple"
  4653                           ; Number of cases is 1, Range of values is 0 to 0
  4654                           ; switch strategies available:
  4655                           ; Name         Instructions Cycles
  4656                           ; simple_byte            4     3 (average)
  4657                           ;	Chosen strategy is simple_byte
  4658  0118E6  500C               	movf	(btemp+11)^0,w,c
  4659  0118E8  0A00               	xorlw	0	; case 0
  4660  0118EA  A4D8               	btfss	status,2,c
  4661  0118EC  D7F6               	goto	l1340
  4662                           
  4663                           ; BSR set to: 2
  4664                           ; Switch size 1, requested type "simple"
  4665                           ; Number of cases is 5, Range of values is 0 to 5
  4666                           ; switch strategies available:
  4667                           ; Name         Instructions Cycles
  4668                           ; simple_byte           16     9 (average)
  4669                           ;	Chosen strategy is simple_byte
  4670  0118EE  500B               	movf	(btemp+10)^0,w,c
  4671  0118F0  0A00               	xorlw	0	; case 0
  4672  0118F2  B4D8               	btfsc	status,2,c
  4673  0118F4  D4E3               	goto	l12572
  4674  0118F6  0A01               	xorlw	1	; case 1
  4675  0118F8  B4D8               	btfsc	status,2,c
  4676  0118FA  D008               	goto	l12692
  4677  0118FC  0A02               	xorlw	2	; case 3
  4678  0118FE  B4D8               	btfsc	status,2,c
  4679  011900  D005               	goto	l12692
  4680  011902  0A07               	xorlw	7	; case 4
  4681  011904  B4D8               	btfsc	status,2,c
  4682  011906  D7E6               	goto	l1338
  4683  011908  0A01               	xorlw	1	; case 5
  4684  01190A  D7E7               	goto	l1340
  4685  01190C                     l12692:
  4686                           
  4687                           ;main.c: 305:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4688  01190C  0E01               	movlw	1
  4689  01190E  6EE6               	movwf	postinc1,c
  4690  011910  EC8F  F0D8         	call	_TimerDone	;wreg free
  4691  011914  5001               	movf	btemp^0,w,c
  4692  011916  B4D8               	btfsc	status,2,c
  4693  011918  D013               	goto	l12704
  4694  01191A  EC6B  F0DB         	call	_check_adc_scan	;wreg free
  4695  01191E  5001               	movf	btemp^0,w,c
  4696  011920  B4D8               	btfsc	status,2,c
  4697  011922  D00E               	goto	l12704
  4698                           
  4699                           ;main.c: 309:    convert_adc_data();
  4700  011924  EC9B  F0CD         	call	_convert_adc_data	;wreg free
  4701                           
  4702                           ;main.c: 313:    clear_adc_scan();
  4703  011928  EC7B  F0DB         	call	_clear_adc_scan	;wreg free
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;main.c: 314:    start_adc_scan();
  4707  01192C  ECE6  F0D2         	call	_start_adc_scan	;wreg free
  4708                           
  4709                           ;main.c: 315:    StartTimer(TMR_ADC, 200);
  4710  011930  0EC8               	movlw	200
  4711  011932  6EE6               	movwf	postinc1,c
  4712  011934  0E00               	movlw	0
  4713  011936  6EE6               	movwf	postinc1,c
  4714  011938  0E01               	movlw	1
  4715  01193A  6EE6               	movwf	postinc1,c
  4716  01193C  EC0E  F0D6         	call	_StartTimer	;wreg free
  4717  011940                     l12704:
  4718                           
  4719                           ;main.c: 322:   if (TimerDone(TMR_DISPLAY)) {
  4720                           
  4721                           ;main.c: 318:   if (V.ticks) {
  4722  011940  0E0A               	movlw	10
  4723  011942  6EE6               	movwf	postinc1,c
  4724  011944  EC8F  F0D8         	call	_TimerDone	;wreg free
  4725  011948  5001               	movf	btemp^0,w,c
  4726  01194A  B4D8               	btfsc	status,2,c
  4727  01194C  EFAA  F090         	goto	l12754
  4728                           
  4729                           ;main.c: 323:    if (TimerDone(TMR_HELPDIS)) {
  4730  011950  0E09               	movlw	9
  4731  011952  6EE6               	movwf	postinc1,c
  4732  011954  EC8F  F0D8         	call	_TimerDone	;wreg free
  4733  011958  5001               	movf	btemp^0,w,c
  4734  01195A  B4D8               	btfsc	status,2,c
  4735  01195C  D004               	goto	l12712
  4736                           
  4737                           ;main.c: 324:     set_display_info(DIS_STR);
  4738  01195E  0E00               	movlw	0
  4739  011960  6EE6               	movwf	postinc1,c
  4740  011962  EC65  F0DA         	call	_set_display_info	;wreg free
  4741  011966                     l12712:
  4742                           
  4743                           ;main.c: 326:    calc_model_data();
  4744  011966  ECCB  F0AD         	call	_calc_model_data	;wreg free
  4745                           
  4746                           ; BSR set to: 1
  4747                           ;main.c: 333:     hid_display(&H);
  4748                           
  4749                           ;main.c: 328:    if (0) {
  4750  01196A  0EF3               	movlw	_H& (0+255)
  4751  01196C  6EE6               	movwf	postinc1,c
  4752  01196E  EC8B  F0CA         	call	_hid_display	;wreg free
  4753                           
  4754                           ;main.c: 334:     switch (H.hid_display) {
  4755  011972  D3A4               	goto	l12738
  4756  011974                     l1348:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;main.c: 336:      V.calib = 0;
  4760  011974  0102               	movlb	2	; () banked
  4761  011976  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4762                           
  4763                           ; BSR set to: 2
  4764                           ;main.c: 337:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4765  011978  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4766  01197E  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4767  011984  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4768  01198A  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4769  011990  0E99               	movlw	low STR_22
  4770  011992  6EE6               	movwf	postinc1,c
  4771  011994  0EFE               	movlw	high STR_22
  4772  011996  6EE6               	movwf	postinc1,c
  4773  011998  0E00               	movlw	0
  4774  01199A  6EE6               	movwf	postinc1,c
  4775  01199C  0E00               	movlw	0
  4776  01199E  6EE6               	movwf	postinc1,c
  4777  0119A0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4778  0119A4  0060  F007  FFE6   	movff	btemp,postinc1
  4779  0119AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4780  0119B0  0E08               	movlw	8
  4781  0119B2  6EE6               	movwf	postinc1,c
  4782  0119B4  EC06  F0CA         	call	_sprintf	;wreg free
  4783                           
  4784                           ;main.c: 338:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4785  0119B8  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4786  0119BE  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4787  0119C4  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4788  0119CA  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4789  0119D0  0EBF               	movlw	low STR_23
  4790  0119D2  6EE6               	movwf	postinc1,c
  4791  0119D4  0EFE               	movlw	high STR_23
  4792  0119D6  6EE6               	movwf	postinc1,c
  4793  0119D8  0E00               	movlw	0
  4794  0119DA  6EE6               	movwf	postinc1,c
  4795  0119DC  0E01               	movlw	1
  4796  0119DE  6EE6               	movwf	postinc1,c
  4797  0119E0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4798  0119E4  0060  F007  FFE6   	movff	btemp,postinc1
  4799  0119EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4800  0119F0  0E08               	movlw	8
  4801  0119F2  6EE6               	movwf	postinc1,c
  4802  0119F4  EC06  F0CA         	call	_sprintf	;wreg free
  4803                           
  4804                           ;main.c: 339:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4805  0119F8  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4806  0119FE  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4807  011A04  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4808  011A0A  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4809  011A10  0EAC               	movlw	low STR_24
  4810  011A12  6EE6               	movwf	postinc1,c
  4811  011A14  0EFE               	movlw	high STR_24
  4812  011A16  6EE6               	movwf	postinc1,c
  4813  011A18  0E00               	movlw	0
  4814  011A1A  6EE6               	movwf	postinc1,c
  4815  011A1C  0E02               	movlw	2
  4816  011A1E  6EE6               	movwf	postinc1,c
  4817  011A20  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4818  011A24  0060  F007  FFE6   	movff	btemp,postinc1
  4819  011A2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4820  011A30  0E08               	movlw	8
  4821  011A32  6EE6               	movwf	postinc1,c
  4822  011A34  EC06  F0CA         	call	_sprintf	;wreg free
  4823                           
  4824                           ;main.c: 341:      sprintf(get_vterm_ptr(0, 1), "PV   WH %3.2f     ", C.pvkw);
  4825  011A38  0060  F683  FFE6   	movff	_C+160,postinc1
  4826  011A3E  0060  F687  FFE6   	movff	_C+161,postinc1
  4827  011A44  0060  F68B  FFE6   	movff	_C+162,postinc1
  4828  011A4A  0060  F68F  FFE6   	movff	_C+163,postinc1
  4829  011A50  0E60               	movlw	low STR_25
  4830  011A52  6EE6               	movwf	postinc1,c
  4831  011A54  0EFE               	movlw	high STR_25
  4832  011A56  6EE6               	movwf	postinc1,c
  4833  011A58  0E01               	movlw	1
  4834  011A5A  6EE6               	movwf	postinc1,c
  4835  011A5C  0E00               	movlw	0
  4836  011A5E  6EE6               	movwf	postinc1,c
  4837  011A60  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4838  011A64  0060  F007  FFE6   	movff	btemp,postinc1
  4839  011A6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4840  011A70  0E08               	movlw	8
  4841  011A72  6EE6               	movwf	postinc1,c
  4842  011A74  EC06  F0CA         	call	_sprintf	;wreg free
  4843                           
  4844                           ;main.c: 342:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4845  011A78  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4846  011A7E  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4847  011A84  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4848  011A8A  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4849  011A90  0E86               	movlw	low STR_26
  4850  011A92  6EE6               	movwf	postinc1,c
  4851  011A94  0EFE               	movlw	high STR_26
  4852  011A96  6EE6               	movwf	postinc1,c
  4853  011A98  0E01               	movlw	1
  4854  011A9A  6EE6               	movwf	postinc1,c
  4855  011A9C  0E01               	movlw	1
  4856  011A9E  6EE6               	movwf	postinc1,c
  4857  011AA0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4858  011AA4  0060  F007  FFE6   	movff	btemp,postinc1
  4859  011AAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4860  011AB0  0E08               	movlw	8
  4861  011AB2  6EE6               	movwf	postinc1,c
  4862  011AB4  EC06  F0CA         	call	_sprintf	;wreg free
  4863                           
  4864                           ;main.c: 343:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4865  011AB8  0060  F693  FFE6   	movff	_C+164,postinc1
  4866  011ABE  0060  F697  FFE6   	movff	_C+165,postinc1
  4867  011AC4  0060  F69B  FFE6   	movff	_C+166,postinc1
  4868  011ACA  0060  F69F  FFE6   	movff	_C+167,postinc1
  4869  011AD0  0E73               	movlw	low STR_27
  4870  011AD2  6EE6               	movwf	postinc1,c
  4871  011AD4  0EFE               	movlw	high STR_27
  4872  011AD6  6EE6               	movwf	postinc1,c
  4873  011AD8  0E01               	movlw	1
  4874  011ADA  6EE6               	movwf	postinc1,c
  4875  011ADC  0E02               	movlw	2
  4876  011ADE  6EE6               	movwf	postinc1,c
  4877  011AE0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4878  011AE4  0060  F007  FFE6   	movff	btemp,postinc1
  4879  011AEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4880  011AF0  0E08               	movlw	8
  4881  011AF2  6EE6               	movwf	postinc1,c
  4882  011AF4  EC06  F0CA         	call	_sprintf	;wreg free
  4883                           
  4884                           ;main.c: 344:      break;
  4885  011AF8  D2F6               	goto	l12740
  4886  011AFA                     l1350:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;main.c: 346:      V.calib = 0;
  4890  011AFA  0102               	movlb	2	; () banked
  4891  011AFC  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4892                           
  4893                           ; BSR set to: 2
  4894                           ;main.c: 347:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4895  011AFE  0060  F413  FFE6   	movff	_C+4,postinc1
  4896  011B04  0060  F417  FFE6   	movff	_C+5,postinc1
  4897  011B0A  0060  F41B  FFE6   	movff	_C+6,postinc1
  4898  011B10  0060  F41F  FFE6   	movff	_C+7,postinc1
  4899  011B16  0060  F453  FFE6   	movff	_C+20,postinc1
  4900  011B1C  0060  F457  FFE6   	movff	_C+21,postinc1
  4901  011B22  0060  F45B  FFE6   	movff	_C+22,postinc1
  4902  011B28  0060  F45F  FFE6   	movff	_C+23,postinc1
  4903  011B2E  0EF8               	movlw	low STR_28
  4904  011B30  6EE6               	movwf	postinc1,c
  4905  011B32  0EFE               	movlw	high STR_28
  4906  011B34  6EE6               	movwf	postinc1,c
  4907  011B36  0E00               	movlw	0
  4908  011B38  6EE6               	movwf	postinc1,c
  4909  011B3A  0E00               	movlw	0
  4910  011B3C  6EE6               	movwf	postinc1,c
  4911  011B3E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4912  011B42  0060  F007  FFE6   	movff	btemp,postinc1
  4913  011B48  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4914  011B4E  0E0C               	movlw	12
  4915  011B50  6EE6               	movwf	postinc1,c
  4916  011B52  EC06  F0CA         	call	_sprintf	;wreg free
  4917                           
  4918                           ;main.c: 348:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4919  011B56  0060  F403  FFE6   	movff	_C,postinc1
  4920  011B5C  0060  F407  FFE6   	movff	_C+1,postinc1
  4921  011B62  0060  F40B  FFE6   	movff	_C+2,postinc1
  4922  011B68  0060  F40F  FFE6   	movff	_C+3,postinc1
  4923  011B6E  0060  F443  FFE6   	movff	_C+16,postinc1
  4924  011B74  0060  F447  FFE6   	movff	_C+17,postinc1
  4925  011B7A  0060  F44B  FFE6   	movff	_C+18,postinc1
  4926  011B80  0060  F44F  FFE6   	movff	_C+19,postinc1
  4927  011B86  0ED2               	movlw	low STR_29
  4928  011B88  6EE6               	movwf	postinc1,c
  4929  011B8A  0EFE               	movlw	high STR_29
  4930  011B8C  6EE6               	movwf	postinc1,c
  4931  011B8E  0E00               	movlw	0
  4932  011B90  6EE6               	movwf	postinc1,c
  4933  011B92  0E01               	movlw	1
  4934  011B94  6EE6               	movwf	postinc1,c
  4935  011B96  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4936  011B9A  0060  F007  FFE6   	movff	btemp,postinc1
  4937  011BA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4938  011BA6  0E0C               	movlw	12
  4939  011BA8  6EE6               	movwf	postinc1,c
  4940  011BAA  EC06  F0CA         	call	_sprintf	;wreg free
  4941                           
  4942                           ;main.c: 349:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4943  011BAE  0060  F503  FFE6   	movff	_C+64,postinc1
  4944  011BB4  0060  F507  FFE6   	movff	_C+65,postinc1
  4945  011BBA  0060  F50B  FFE6   	movff	_C+66,postinc1
  4946  011BC0  0060  F50F  FFE6   	movff	_C+67,postinc1
  4947  011BC6  0060  F423  FFE6   	movff	_C+8,postinc1
  4948  011BCC  0060  F427  FFE6   	movff	_C+9,postinc1
  4949  011BD2  0060  F42B  FFE6   	movff	_C+10,postinc1
  4950  011BD8  0060  F42F  FFE6   	movff	_C+11,postinc1
  4951  011BDE  0EE5               	movlw	low STR_30
  4952  011BE0  6EE6               	movwf	postinc1,c
  4953  011BE2  0EFE               	movlw	high STR_30
  4954  011BE4  6EE6               	movwf	postinc1,c
  4955  011BE6  0E00               	movlw	0
  4956  011BE8  6EE6               	movwf	postinc1,c
  4957  011BEA  0E02               	movlw	2
  4958  011BEC  6EE6               	movwf	postinc1,c
  4959  011BEE  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4960  011BF2  0060  F007  FFE6   	movff	btemp,postinc1
  4961  011BF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4962  011BFE  0E0C               	movlw	12
  4963  011C00  6EE6               	movwf	postinc1,c
  4964  011C02  EC06  F0CA         	call	_sprintf	;wreg free
  4965                           
  4966                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  4967  011C06  0060  F663  FFE6   	movff	_C+152,postinc1
  4968  011C0C  0060  F667  FFE6   	movff	_C+153,postinc1
  4969  011C12  0060  F66B  FFE6   	movff	_C+154,postinc1
  4970  011C18  0060  F66F  FFE6   	movff	_C+155,postinc1
  4971  011C1E  0E27               	movlw	low STR_31
  4972  011C20  6EE6               	movwf	postinc1,c
  4973  011C22  0EFE               	movlw	high STR_31
  4974  011C24  6EE6               	movwf	postinc1,c
  4975  011C26  0E01               	movlw	1
  4976  011C28  6EE6               	movwf	postinc1,c
  4977  011C2A  0E00               	movlw	0
  4978  011C2C  6EE6               	movwf	postinc1,c
  4979  011C2E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4980  011C32  0060  F007  FFE6   	movff	btemp,postinc1
  4981  011C38  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4982  011C3E  0E08               	movlw	8
  4983  011C40  6EE6               	movwf	postinc1,c
  4984  011C42  EC06  F0CA         	call	_sprintf	;wreg free
  4985                           
  4986                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  4987  011C46  0060  F673  FFE6   	movff	_C+156,postinc1
  4988  011C4C  0060  F677  FFE6   	movff	_C+157,postinc1
  4989  011C52  0060  F67B  FFE6   	movff	_C+158,postinc1
  4990  011C58  0060  F67F  FFE6   	movff	_C+159,postinc1
  4991  011C5E  0E3A               	movlw	low STR_32
  4992  011C60  6EE6               	movwf	postinc1,c
  4993  011C62  0EFE               	movlw	high STR_32
  4994  011C64  6EE6               	movwf	postinc1,c
  4995  011C66  0E01               	movlw	1
  4996  011C68  6EE6               	movwf	postinc1,c
  4997  011C6A  0E01               	movlw	1
  4998  011C6C  6EE6               	movwf	postinc1,c
  4999  011C6E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5000  011C72  0060  F007  FFE6   	movff	btemp,postinc1
  5001  011C78  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5002  011C7E  0E08               	movlw	8
  5003  011C80  6EE6               	movwf	postinc1,c
  5004  011C82  EC06  F0CA         	call	_sprintf	;wreg free
  5005                           
  5006                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5007  011C86  0060  F673  FFE6   	movff	_C+156,postinc1
  5008  011C8C  0060  F677  FFE6   	movff	_C+157,postinc1
  5009  011C92  0060  F67B  FFE6   	movff	_C+158,postinc1
  5010  011C98  0060  F67F  FFE6   	movff	_C+159,postinc1
  5011  011C9E  0060  F663  FFE6   	movff	_C+152,postinc1
  5012  011CA4  0060  F667  FFE6   	movff	_C+153,postinc1
  5013  011CAA  0060  F66B  FFE6   	movff	_C+154,postinc1
  5014  011CB0  0060  F66F  FFE6   	movff	_C+155,postinc1
  5015  011CB6  EC24  F09D         	call	___fladd	;wreg free
  5016  011CBA  0060  F007  FFE6   	movff	btemp,postinc1
  5017  011CC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5018  011CC6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5019  011CCC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5020  011CD2  0E4D               	movlw	low STR_33
  5021  011CD4  6EE6               	movwf	postinc1,c
  5022  011CD6  0EFE               	movlw	high STR_33
  5023  011CD8  6EE6               	movwf	postinc1,c
  5024  011CDA  0E01               	movlw	1
  5025  011CDC  6EE6               	movwf	postinc1,c
  5026  011CDE  0E02               	movlw	2
  5027  011CE0  6EE6               	movwf	postinc1,c
  5028  011CE2  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5029  011CE6  0060  F007  FFE6   	movff	btemp,postinc1
  5030  011CEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5031  011CF2  0E08               	movlw	8
  5032  011CF4  6EE6               	movwf	postinc1,c
  5033  011CF6  EC06  F0CA         	call	_sprintf	;wreg free
  5034                           
  5035                           ;main.c: 354:      break;
  5036  011CFA  D1F5               	goto	l12740
  5037  011CFC                     l1351:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;main.c: 356:      V.calib = 0;
  5041  011CFC  0102               	movlb	2	; () banked
  5042  011CFE  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5043                           
  5044                           ; BSR set to: 2
  5045                           ;main.c: 357:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5046  011D00  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5047  011D06  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5048  011D0C  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5049  011D12  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5050  011D18  0E9E               	movlw	low STR_34
  5051  011D1A  6EE6               	movwf	postinc1,c
  5052  011D1C  0EFD               	movlw	high STR_34
  5053  011D1E  6EE6               	movwf	postinc1,c
  5054  011D20  0E00               	movlw	0
  5055  011D22  6EE6               	movwf	postinc1,c
  5056  011D24  0E00               	movlw	0
  5057  011D26  6EE6               	movwf	postinc1,c
  5058  011D28  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5059  011D2C  0060  F007  FFE6   	movff	btemp,postinc1
  5060  011D32  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5061  011D38  0E08               	movlw	8
  5062  011D3A  6EE6               	movwf	postinc1,c
  5063  011D3C  EC06  F0CA         	call	_sprintf	;wreg free
  5064                           
  5065                           ;main.c: 358:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5066  011D40  0060  F643  FFE6   	movff	_C+144,postinc1
  5067  011D46  0060  F647  FFE6   	movff	_C+145,postinc1
  5068  011D4C  0060  F64B  FFE6   	movff	_C+146,postinc1
  5069  011D52  0060  F64F  FFE6   	movff	_C+147,postinc1
  5070  011D58  0060  F633  FFE6   	movff	_C+140,postinc1
  5071  011D5E  0060  F637  FFE6   	movff	_C+141,postinc1
  5072  011D64  0060  F63B  FFE6   	movff	_C+142,postinc1
  5073  011D6A  0060  F63F  FFE6   	movff	_C+143,postinc1
  5074  011D70  0EDA               	movlw	low STR_35
  5075  011D72  6EE6               	movwf	postinc1,c
  5076  011D74  0EFD               	movlw	high STR_35
  5077  011D76  6EE6               	movwf	postinc1,c
  5078  011D78  0E00               	movlw	0
  5079  011D7A  6EE6               	movwf	postinc1,c
  5080  011D7C  0E01               	movlw	1
  5081  011D7E  6EE6               	movwf	postinc1,c
  5082  011D80  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5083  011D84  0060  F007  FFE6   	movff	btemp,postinc1
  5084  011D8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5085  011D90  0E0C               	movlw	12
  5086  011D92  6EE6               	movwf	postinc1,c
  5087  011D94  EC06  F0CA         	call	_sprintf	;wreg free
  5088                           
  5089                           ;main.c: 359:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5090  011D98  0060  F6B3  FFE6   	movff	_C+172,postinc1
  5091  011D9E  0060  F6B7  FFE6   	movff	_C+173,postinc1
  5092  011DA4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  5093  011DAA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  5094  011DB0  0E00               	movlw	0
  5095  011DB2  6EE6               	movwf	postinc1,c
  5096  011DB4  0E05               	movlw	5
  5097  011DB6  6EE6               	movwf	postinc1,c
  5098  011DB8  ECFD  F0CB         	call	_spinners	;wreg free
  5099  011DBC  5001               	movf	btemp^0,w,c
  5100  011DBE  6EE6               	movwf	postinc1,c
  5101  011DC0  0E00               	movlw	0
  5102  011DC2  6EE6               	movwf	postinc1,c
  5103  011DC4  0E8A               	movlw	low STR_36
  5104  011DC6  6EE6               	movwf	postinc1,c
  5105  011DC8  0EFD               	movlw	high STR_36
  5106  011DCA  6EE6               	movwf	postinc1,c
  5107  011DCC  0E00               	movlw	0
  5108  011DCE  6EE6               	movwf	postinc1,c
  5109  011DD0  0E02               	movlw	2
  5110  011DD2  6EE6               	movwf	postinc1,c
  5111  011DD4  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5112  011DD8  0060  F007  FFE6   	movff	btemp,postinc1
  5113  011DDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5114  011DE4  0E0A               	movlw	10
  5115  011DE6  6EE6               	movwf	postinc1,c
  5116  011DE8  EC06  F0CA         	call	_sprintf	;wreg free
  5117                           
  5118                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5119  011DEC  0060  F613  FFE6   	movff	_C+132,postinc1
  5120  011DF2  0060  F617  FFE6   	movff	_C+133,postinc1
  5121  011DF8  0060  F61B  FFE6   	movff	_C+134,postinc1
  5122  011DFE  0060  F61F  FFE6   	movff	_C+135,postinc1
  5123  011E04  0E76               	movlw	low STR_37
  5124  011E06  6EE6               	movwf	postinc1,c
  5125  011E08  0EFD               	movlw	high STR_37
  5126  011E0A  6EE6               	movwf	postinc1,c
  5127  011E0C  0E01               	movlw	1
  5128  011E0E  6EE6               	movwf	postinc1,c
  5129  011E10  0E00               	movlw	0
  5130  011E12  6EE6               	movwf	postinc1,c
  5131  011E14  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5132  011E18  0060  F007  FFE6   	movff	btemp,postinc1
  5133  011E1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5134  011E24  0E08               	movlw	8
  5135  011E26  6EE6               	movwf	postinc1,c
  5136  011E28  EC06  F0CA         	call	_sprintf	;wreg free
  5137                           
  5138                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5139  011E2C  0060  F78F  FFE6   	movff	_C+227,postinc1
  5140  011E32  0060  F793  FFE6   	movff	_C+228,postinc1
  5141  011E38  0060  F797  FFE6   	movff	_C+229,postinc1
  5142  011E3E  0060  F79B  FFE6   	movff	_C+230,postinc1
  5143  011E44  0060  F7BF  FFE6   	movff	_C+239,postinc1
  5144  011E4A  0060  F7C3  FFE6   	movff	_C+240,postinc1
  5145  011E50  0060  F7C7  FFE6   	movff	_C+241,postinc1
  5146  011E56  0060  F7CB  FFE6   	movff	_C+242,postinc1
  5147  011E5C  0EB2               	movlw	low STR_38
  5148  011E5E  6EE6               	movwf	postinc1,c
  5149  011E60  0EFD               	movlw	high STR_38
  5150  011E62  6EE6               	movwf	postinc1,c
  5151  011E64  0E01               	movlw	1
  5152  011E66  6EE6               	movwf	postinc1,c
  5153  011E68  0E01               	movlw	1
  5154  011E6A  6EE6               	movwf	postinc1,c
  5155  011E6C  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5156  011E70  0060  F007  FFE6   	movff	btemp,postinc1
  5157  011E76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5158  011E7C  0E0C               	movlw	12
  5159  011E7E  6EE6               	movwf	postinc1,c
  5160  011E80  EC06  F0CA         	call	_sprintf	;wreg free
  5161                           
  5162                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5163  011E84  0060  F79F  FFE6   	movff	_C+231,postinc1
  5164  011E8A  0060  F7A3  FFE6   	movff	_C+232,postinc1
  5165  011E90  0060  F7A7  FFE6   	movff	_C+233,postinc1
  5166  011E96  0060  F7AB  FFE6   	movff	_C+234,postinc1
  5167  011E9C  0060  F7CF  FFE6   	movff	_C+243,postinc1
  5168  011EA2  0060  F7D3  FFE6   	movff	_C+244,postinc1
  5169  011EA8  0060  F7D7  FFE6   	movff	_C+245,postinc1
  5170  011EAE  0060  F7DB  FFE6   	movff	_C+246,postinc1
  5171  011EB4  0EC6               	movlw	low STR_39
  5172  011EB6  6EE6               	movwf	postinc1,c
  5173  011EB8  0EFD               	movlw	high STR_39
  5174  011EBA  6EE6               	movwf	postinc1,c
  5175  011EBC  0E01               	movlw	1
  5176  011EBE  6EE6               	movwf	postinc1,c
  5177  011EC0  0E02               	movlw	2
  5178  011EC2  6EE6               	movwf	postinc1,c
  5179  011EC4  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5180  011EC8  0060  F007  FFE6   	movff	btemp,postinc1
  5181  011ECE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5182  011ED4  0E0C               	movlw	12
  5183  011ED6  6EE6               	movwf	postinc1,c
  5184  011ED8  EC06  F0CA         	call	_sprintf	;wreg free
  5185                           
  5186                           ;main.c: 364:      break;
  5187  011EDC  D104               	goto	l12740
  5188  011EDE                     l12724:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;main.c: 366:      if (!V.calib) {
  5192  011EDE  0102               	movlb	2	; () banked
  5193  011EE0  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  5194  011EE2  A4D8               	btfss	status,2,c
  5195  011EE4  D02D               	goto	l12728
  5196                           
  5197                           ; BSR set to: 2
  5198                           ;main.c: 367:       lp_filter(0.0, i, -1);
  5199  011EE6  0EFF               	movlw	255
  5200  011EE8  6EE6               	movwf	postinc1,c
  5201                           
  5202                           ;stkvar	_i @ sp[(-14)+9]
  5203  011EEA  0EFB               	movlw	-5
  5204  011EEC  50E3               	movf	plusw1,w,c
  5205  011EEE  6EE6               	movwf	postinc1,c
  5206  011EF0  0E00               	movlw	0
  5207  011EF2  6EE6               	movwf	postinc1,c
  5208  011EF4  0E00               	movlw	0
  5209  011EF6  6EE6               	movwf	postinc1,c
  5210  011EF8  0E00               	movlw	0
  5211  011EFA  6EE6               	movwf	postinc1,c
  5212  011EFC  0E00               	movlw	0
  5213  011EFE  6EE6               	movwf	postinc1,c
  5214  011F00  ECDC  F0BE         	call	_lp_filter	;wreg free
  5215                           
  5216                           ;main.c: 368:       lp_filter(0.0, j, -1);
  5217  011F04  0EFF               	movlw	255
  5218  011F06  6EE6               	movwf	postinc1,c
  5219                           
  5220                           ;stkvar	_j @ sp[(-14)+8]
  5221  011F08  0EFA               	movlw	-6
  5222  011F0A  50E3               	movf	plusw1,w,c
  5223  011F0C  6EE6               	movwf	postinc1,c
  5224  011F0E  0E00               	movlw	0
  5225  011F10  6EE6               	movwf	postinc1,c
  5226  011F12  0E00               	movlw	0
  5227  011F14  6EE6               	movwf	postinc1,c
  5228  011F16  0E00               	movlw	0
  5229  011F18  6EE6               	movwf	postinc1,c
  5230  011F1A  0E00               	movlw	0
  5231  011F1C  6EE6               	movwf	postinc1,c
  5232  011F1E  ECDC  F0BE         	call	_lp_filter	;wreg free
  5233                           
  5234                           ;main.c: 369:       lp_filter(0.0, k, -1);
  5235  011F22  0EFF               	movlw	255
  5236  011F24  6EE6               	movwf	postinc1,c
  5237                           
  5238                           ;stkvar	_k @ sp[(-14)+7]
  5239  011F26  0EF9               	movlw	-7
  5240  011F28  50E3               	movf	plusw1,w,c
  5241  011F2A  6EE6               	movwf	postinc1,c
  5242  011F2C  0E00               	movlw	0
  5243  011F2E  6EE6               	movwf	postinc1,c
  5244  011F30  0E00               	movlw	0
  5245  011F32  6EE6               	movwf	postinc1,c
  5246  011F34  0E00               	movlw	0
  5247  011F36  6EE6               	movwf	postinc1,c
  5248  011F38  0E00               	movlw	0
  5249  011F3A  6EE6               	movwf	postinc1,c
  5250  011F3C  ECDC  F0BE         	call	_lp_filter	;wreg free
  5251  011F40                     l12728:
  5252                           
  5253                           ;main.c: 371:      V.calib = 1;
  5254  011F40  0E01               	movlw	1
  5255  011F42  0102               	movlb	2	; () banked
  5256  011F44  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  5257                           
  5258                           ; BSR set to: 2
  5259                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5260  011F46  0E02               	movlw	2
  5261  011F48  6EE6               	movwf	postinc1,c
  5262  011F4A  ECFC  F0D7         	call	_get_switch	;wreg free
  5263  011F4E  5001               	movf	btemp^0,w,c
  5264  011F50  6EE6               	movwf	postinc1,c
  5265  011F52  0E00               	movlw	0
  5266  011F54  6EE6               	movwf	postinc1,c
  5267                           
  5268                           ;stkvar	_i @ sp[(-15)+9]
  5269  011F56  0EFA               	movlw	-6
  5270  011F58  50E3               	movf	plusw1,w,c
  5271  011F5A  0D04               	mullw	4
  5272  011F5C  0E00               	movlw	low _C
  5273  011F5E  24F3               	addwf	243,w,c
  5274  011F60  6ED9               	movwf	fsr2l,c
  5275  011F62  0E01               	movlw	high _C
  5276  011F64  20F4               	addwfc	prodh,w,c
  5277  011F66  6EDA               	movwf	fsr2h,c
  5278  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5279  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5280  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5281  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5282                           
  5283                           ;stkvar	_i @ sp[(-19)+9]
  5284  011F80  0EF6               	movlw	-10
  5285  011F82  50E3               	movf	plusw1,w,c
  5286  011F84  6EE6               	movwf	postinc1,c
  5287  011F86  EC74  F0DA         	call	_get_raw_result	;wreg free
  5288  011F8A  0060  F007  FFE6   	movff	btemp,postinc1
  5289  011F90  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5290  011F96  0E83               	movlw	low STR_19
  5291  011F98  6EE6               	movwf	postinc1,c
  5292  011F9A  0EFF               	movlw	high STR_19
  5293  011F9C  6EE6               	movwf	postinc1,c
  5294  011F9E  0E00               	movlw	0
  5295  011FA0  6EE6               	movwf	postinc1,c
  5296  011FA2  0E00               	movlw	0
  5297  011FA4  6EE6               	movwf	postinc1,c
  5298  011FA6  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5299  011FAA  0060  F007  FFE6   	movff	btemp,postinc1
  5300  011FB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5301  011FB6  0E0C               	movlw	12
  5302  011FB8  6EE6               	movwf	postinc1,c
  5303  011FBA  EC06  F0CA         	call	_sprintf	;wreg free
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5307  011FBE  0E03               	movlw	3
  5308  011FC0  6EE6               	movwf	postinc1,c
  5309  011FC2  ECFC  F0D7         	call	_get_switch	;wreg free
  5310  011FC6  5001               	movf	btemp^0,w,c
  5311  011FC8  6EE6               	movwf	postinc1,c
  5312  011FCA  0E00               	movlw	0
  5313  011FCC  6EE6               	movwf	postinc1,c
  5314                           
  5315                           ;stkvar	_j @ sp[(-15)+8]
  5316  011FCE  0EF9               	movlw	-7
  5317  011FD0  50E3               	movf	plusw1,w,c
  5318  011FD2  0D04               	mullw	4
  5319  011FD4  0E00               	movlw	low _C
  5320  011FD6  24F3               	addwf	243,w,c
  5321  011FD8  6ED9               	movwf	fsr2l,c
  5322  011FDA  0E01               	movlw	high _C
  5323  011FDC  20F4               	addwfc	prodh,w,c
  5324  011FDE  6EDA               	movwf	fsr2h,c
  5325  011FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5326  011FE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5327  011FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5328  011FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  5329                           
  5330                           ;stkvar	_j @ sp[(-19)+8]
  5331  011FF8  0EF5               	movlw	-11
  5332  011FFA  50E3               	movf	plusw1,w,c
  5333  011FFC  6EE6               	movwf	postinc1,c
  5334  011FFE  EC74  F0DA         	call	_get_raw_result	;wreg free
  5335  012002  0060  F007  FFE6   	movff	btemp,postinc1
  5336  012008  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5337  01200E  0E83               	movlw	low STR_19
  5338  012010  6EE6               	movwf	postinc1,c
  5339  012012  0EFF               	movlw	high STR_19
  5340  012014  6EE6               	movwf	postinc1,c
  5341  012016  0E00               	movlw	0
  5342  012018  6EE6               	movwf	postinc1,c
  5343  01201A  0E01               	movlw	1
  5344  01201C  6EE6               	movwf	postinc1,c
  5345  01201E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5346  012022  0060  F007  FFE6   	movff	btemp,postinc1
  5347  012028  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5348  01202E  0E0C               	movlw	12
  5349  012030  6EE6               	movwf	postinc1,c
  5350  012032  EC06  F0CA         	call	_sprintf	;wreg free
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5354                           ;stkvar	_inp_index @ sp[(-13)+10]
  5355  012036  0EFD               	movlw	-3
  5356  012038  50E3               	movf	plusw1,w,c
  5357  01203A  6E0B               	movwf	(btemp+10)^0,c
  5358  01203C  6A0C               	clrf	(btemp+11)^0,c
  5359  01203E  0E01               	movlw	1
  5360  012040  260B               	addwf	(btemp+10)^0,f,c
  5361  012042  0E00               	movlw	0
  5362  012044  220C               	addwfc	(btemp+11)^0,f,c
  5363  012046  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5364  01204C  0060  F033  FFE6   	movff	btemp+11,postinc1
  5365                           
  5366                           ;stkvar	_k @ sp[(-15)+7]
  5367  012052  0EF8               	movlw	-8
  5368  012054  50E3               	movf	plusw1,w,c
  5369  012056  0D04               	mullw	4
  5370  012058  0E00               	movlw	low _C
  5371  01205A  24F3               	addwf	243,w,c
  5372  01205C  6ED9               	movwf	fsr2l,c
  5373  01205E  0E01               	movlw	high _C
  5374  012060  20F4               	addwfc	prodh,w,c
  5375  012062  6EDA               	movwf	fsr2h,c
  5376  012064  006F FF7B FFE6     	movff	postinc2,postinc1
  5377  01206A  006F FF7B FFE6     	movff	postinc2,postinc1
  5378  012070  006F FF7B FFE6     	movff	postinc2,postinc1
  5379  012076  006F FF7B FFE6     	movff	postinc2,postinc1
  5380                           
  5381                           ;stkvar	_k @ sp[(-19)+7]
  5382  01207C  0EF4               	movlw	-12
  5383  01207E  50E3               	movf	plusw1,w,c
  5384  012080  6EE6               	movwf	postinc1,c
  5385  012082  EC74  F0DA         	call	_get_raw_result	;wreg free
  5386  012086  0060  F007  FFE6   	movff	btemp,postinc1
  5387  01208C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5388  012092  0E61               	movlw	low STR_21
  5389  012094  6EE6               	movwf	postinc1,c
  5390  012096  0EFF               	movlw	high STR_21
  5391  012098  6EE6               	movwf	postinc1,c
  5392  01209A  0E00               	movlw	0
  5393  01209C  6EE6               	movwf	postinc1,c
  5394  01209E  0E02               	movlw	2
  5395  0120A0  6EE6               	movwf	postinc1,c
  5396  0120A2  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5397  0120A6  0060  F007  FFE6   	movff	btemp,postinc1
  5398  0120AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5399  0120B2  0E0C               	movlw	12
  5400  0120B4  6EE6               	movwf	postinc1,c
  5401  0120B6  EC06  F0CA         	call	_sprintf	;wreg free
  5402                           
  5403                           ;main.c: 375:      break;
  5404  0120BA  D015               	goto	l12740
  5405  0120BC                     l12738:
  5406  0120BC  0100               	movlb	0	; () banked
  5407  0120BE  51F3               	movf	_H& (0+255),w,b
  5408  0120C0  6E0B               	movwf	(btemp+10)^0,c
  5409  0120C2  6A0C               	clrf	(btemp+11)^0,c
  5410                           
  5411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5412                           ; Switch size 1, requested type "simple"
  5413                           ; Number of cases is 1, Range of values is 0 to 0
  5414                           ; switch strategies available:
  5415                           ; Name         Instructions Cycles
  5416                           ; simple_byte            4     3 (average)
  5417                           ;	Chosen strategy is simple_byte
  5418  0120C4  500C               	movf	(btemp+11)^0,w,c
  5419  0120C6  0A00               	xorlw	0	; case 0
  5420  0120C8  A4D8               	btfss	status,2,c
  5421  0120CA  D00D               	goto	l12740
  5422                           
  5423                           ; BSR set to: 0
  5424                           ; Switch size 1, requested type "simple"
  5425                           ; Number of cases is 4, Range of values is 0 to 3
  5426                           ; switch strategies available:
  5427                           ; Name         Instructions Cycles
  5428                           ; simple_byte           13     7 (average)
  5429                           ;	Chosen strategy is simple_byte
  5430  0120CC  500B               	movf	(btemp+10)^0,w,c
  5431  0120CE  0A00               	xorlw	0	; case 0
  5432  0120D0  B4D8               	btfsc	status,2,c
  5433  0120D2  D513               	goto	l1350
  5434  0120D4  0A01               	xorlw	1	; case 1
  5435  0120D6  B4D8               	btfsc	status,2,c
  5436  0120D8  D44D               	goto	l1348
  5437  0120DA  0A03               	xorlw	3	; case 2
  5438  0120DC  B4D8               	btfsc	status,2,c
  5439  0120DE  D60E               	goto	l1351
  5440  0120E0  0A01               	xorlw	1	; case 3
  5441  0120E2  B4D8               	btfsc	status,2,c
  5442  0120E4  D6FC               	goto	l12724
  5443  0120E6                     l12740:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;main.c: 379:     clear_hid_pflags(&H);
  5447  0120E6  0EF3               	movlw	_H& (0+255)
  5448  0120E8  6EE6               	movwf	postinc1,c
  5449  0120EA  ECBA  F0D9         	call	_clear_hid_pflags	;wreg free
  5450                           
  5451                           ;main.c: 381:    StartTimer(TMR_DISPLAY, 250);
  5452  0120EE  0EFA               	movlw	250
  5453  0120F0  6EE6               	movwf	postinc1,c
  5454  0120F2  0E00               	movlw	0
  5455  0120F4  6EE6               	movwf	postinc1,c
  5456  0120F6  0E0A               	movlw	10
  5457  0120F8  6EE6               	movwf	postinc1,c
  5458  0120FA  EC0E  F0D6         	call	_StartTimer	;wreg free
  5459                           
  5460                           ;main.c: 382:    if (check_enter_button(&H) && (H.hid_display != HID_AUX)) {
  5461  0120FE  0EF3               	movlw	_H& (0+255)
  5462  012100  6EE6               	movwf	postinc1,c
  5463  012102  EC2E  F0D6         	call	_check_enter_button	;wreg free
  5464  012106  5001               	movf	btemp^0,w,c
  5465  012108  B4D8               	btfsc	status,2,c
  5466  01210A  D012               	goto	l12750
  5467  01210C  0E03               	movlw	3
  5468  01210E  0100               	movlb	0	; () banked
  5469  012110  19F3               	xorwf	_H& (0+255),w,b
  5470  012112  B4D8               	btfsc	status,2,c
  5471  012114  D00D               	goto	l12750
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;main.c: 383:     V.screen = ~V.screen;
  5475  012116  0102               	movlb	2	; () banked
  5476  012118  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5477  01211A  D002               	goto	u12190
  5478  01211C  0E01               	movlw	1
  5479  01211E  D001               	goto	u12196
  5480  012120                     u12190:
  5481  012120  0E00               	movlw	0
  5482  012122                     u12196:
  5483  012122  0AFF               	xorlw	255
  5484  012124  6E0C               	movwf	(btemp+11)^0,c
  5485  012126  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  5486  012128  180C               	xorwf	(btemp+11)^0,w,c
  5487  01212A  0BFE               	andlw	-2
  5488  01212C  180C               	xorwf	(btemp+11)^0,w,c
  5489  01212E  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  5490  012130                     l12750:
  5491                           
  5492                           ;main.c: 385:    set_vterm(V.screen);
  5493  012130  0102               	movlb	2	; () banked
  5494  012132  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5495  012134  D002               	goto	u12200
  5496  012136  0E01               	movlw	1
  5497  012138  D001               	goto	u12206
  5498  01213A                     u12200:
  5499  01213A  0E00               	movlw	0
  5500  01213C                     u12206:
  5501  01213C  6EE6               	movwf	postinc1,c
  5502  01213E  EC56  F0DA         	call	_set_vterm	;wreg free
  5503                           
  5504                           ;main.c: 386:    update_lcd(V.screen);
  5505  012142  0102               	movlb	2	; () banked
  5506  012144  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5507  012146  D002               	goto	u12210
  5508  012148  0E01               	movlw	1
  5509  01214A  D001               	goto	u12216
  5510  01214C                     u12210:
  5511  01214C  0E00               	movlw	0
  5512  01214E                     u12216:
  5513  01214E  6EE6               	movwf	postinc1,c
  5514  012150  ECF7  F0C8         	call	_update_lcd	;wreg free
  5515  012154                     l12754:
  5516                           
  5517                           ;main.c: 392:   check_help(V.flipper);
  5518  012154  0102               	movlb	2	; () banked
  5519  012156  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5520  012158  6EE6               	movwf	postinc1,c
  5521  01215A  ECD1  F0BB         	call	_check_help	;wreg free
  5522                           
  5523                           ;main.c: 394:   if (check_enter_button(&H)) {
  5524  01215E  0EF3               	movlw	_H& (0+255)
  5525  012160  6EE6               	movwf	postinc1,c
  5526  012162  EC2E  F0D6         	call	_check_enter_button	;wreg free
  5527  012166  5001               	movf	btemp^0,w,c
  5528  012168  B4D8               	btfsc	status,2,c
  5529  01216A  D062               	goto	l1356
  5530                           
  5531                           ;main.c: 395:    V.calib = 0;
  5532  01216C  0102               	movlb	2	; () banked
  5533  01216E  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5534                           
  5535                           ; BSR set to: 2
  5536                           ;main.c: 396:    inp_index += 3;
  5537                           ;stkvar	_inp_index @ sp[(-13)+10]
  5538  012170  0EFD               	movlw	-3
  5539  012172  006F FF8C  F001    	movff	plusw1,btemp
  5540  012178  0E03               	movlw	3
  5541  01217A  2601               	addwf	btemp^0,f,c
  5542  01217C  0EFD               	movlw	-3
  5543  01217E  0060  F007  FFE3   	movff	btemp,plusw1
  5544                           
  5545                           ;main.c: 397:    if (inp_index > 9)
  5546                           ;stkvar	_inp_index @ sp[(-13)+10]
  5547  012184  0EFD               	movlw	-3
  5548  012186  006F FF8C  F001    	movff	plusw1,btemp
  5549  01218C  0E09               	movlw	9
  5550  01218E  6401               	cpfsgt	btemp^0,c
  5551  012190  D03A               	goto	l12782
  5552                           
  5553                           ; BSR set to: 2
  5554                           ;main.c: 398:     inp_index = 0;
  5555                           ;stkvar	_inp_index @ sp[(-13)+10]
  5556  012192  0EFD               	movlw	-3
  5557  012194  6AE3               	clrf	plusw1,c
  5558  012196  D037               	goto	l12782
  5559  012198                     l12764:
  5560                           
  5561                           ; BSR set to: 2
  5562                           ;main.c: 401:     i = C_BATT;
  5563                           ;stkvar	_i @ sp[(-13)+9]
  5564  012198  0EFC               	movlw	-4
  5565  01219A  6AE3               	clrf	plusw1,c
  5566                           
  5567                           ; BSR set to: 2
  5568                           ;main.c: 402:     j = C_PV;
  5569                           ;stkvar	_j @ sp[(-13)+8]
  5570  01219C  0EFB               	movlw	-5
  5571  01219E  6AE3               	clrf	plusw1,c
  5572  0121A0  2AE3               	incf	plusw1,f,c
  5573                           
  5574                           ; BSR set to: 2
  5575                           ;main.c: 403:     k = V_CC;
  5576                           ;stkvar	_k @ sp[(-13)+7]
  5577  0121A2  0EFA               	movlw	-6
  5578  0121A4  6AE3               	clrf	plusw1,c
  5579  0121A6  82E3               	bsf	plusw1,1,c
  5580                           
  5581                           ;main.c: 404:     break;
  5582  0121A8  D043               	goto	l1356
  5583  0121AA                     l12770:
  5584                           
  5585                           ; BSR set to: 2
  5586                           ;main.c: 406:     i = V_BAT;
  5587                           ;stkvar	_i @ sp[(-13)+9]
  5588  0121AA  0EFC               	movlw	-4
  5589  0121AC  6AE3               	clrf	plusw1,c
  5590  0121AE  84E3               	bsf	plusw1,2,c
  5591                           
  5592                           ;main.c: 407:     j = V_PV;
  5593                           ;stkvar	_j @ sp[(-13)+8]
  5594  0121B0  0EFB               	movlw	-5
  5595  0121B2  6AE3               	clrf	plusw1,c
  5596  0121B4  80E3               	bsf	plusw1,0,c
  5597  0121B6  84E3               	bsf	plusw1,2,c	;indir
  5598                           
  5599                           ;main.c: 408:     k = V_CBUS;
  5600                           ;stkvar	_k @ sp[(-13)+7]
  5601  0121B8  0EFA               	movlw	-6
  5602  0121BA  6AE3               	clrf	plusw1,c
  5603  0121BC  82E3               	bsf	plusw1,1,c
  5604  0121BE  84E3               	bsf	plusw1,2,c	;indir
  5605                           
  5606                           ;main.c: 409:     break;
  5607  0121C0  D037               	goto	l1356
  5608  0121C2                     l12772:
  5609                           
  5610                           ; BSR set to: 2
  5611                           ;main.c: 411:     i = V_BBAT;
  5612                           ;stkvar	_i @ sp[(-13)+9]
  5613  0121C2  0EFC               	movlw	-4
  5614  0121C4  6AE3               	clrf	plusw1,c
  5615  0121C6  82E3               	bsf	plusw1,1,c
  5616  0121C8  86E3               	bsf	plusw1,3,c	;indir
  5617                           
  5618                           ; BSR set to: 2
  5619                           ;main.c: 412:     j = V_TEMP;
  5620  0121CA  0E0B               	movlw	11
  5621  0121CC  6E0C               	movwf	(btemp+11)^0,c
  5622                           
  5623                           ;stkvar	_j @ sp[(-13)+8]
  5624  0121CE  0EFB               	movlw	-5
  5625  0121D0  0060  F033  FFE3   	movff	btemp+11,plusw1
  5626                           
  5627                           ; BSR set to: 2
  5628                           ;main.c: 413:     k = V_INVERTER;
  5629                           ;stkvar	_k @ sp[(-13)+7]
  5630  0121D6  0EFA               	movlw	-6
  5631  0121D8  6AE3               	clrf	plusw1,c
  5632  0121DA  84E3               	bsf	plusw1,2,c
  5633  0121DC  86E3               	bsf	plusw1,3,c	;indir
  5634                           
  5635                           ;main.c: 414:     break;
  5636  0121DE  D028               	goto	l1356
  5637  0121E0                     l12778:
  5638                           
  5639                           ; BSR set to: 2
  5640                           ;main.c: 416:     i = channel_ANB5;
  5641  0121E0  0E0D               	movlw	13
  5642  0121E2  6E0C               	movwf	(btemp+11)^0,c
  5643                           
  5644                           ;stkvar	_i @ sp[(-13)+9]
  5645  0121E4  0EFC               	movlw	-4
  5646  0121E6  0060  F033  FFE3   	movff	btemp+11,plusw1
  5647                           
  5648                           ;main.c: 417:     j = channel_ANB5;
  5649  0121EC  0E0D               	movlw	13
  5650  0121EE  6E0C               	movwf	(btemp+11)^0,c
  5651                           
  5652                           ;stkvar	_j @ sp[(-13)+8]
  5653  0121F0  0EFB               	movlw	-5
  5654  0121F2  0060  F033  FFE3   	movff	btemp+11,plusw1
  5655                           
  5656                           ;main.c: 418:     k = channel_ANB5;
  5657  0121F8  0E0D               	movlw	13
  5658  0121FA  6E0C               	movwf	(btemp+11)^0,c
  5659                           
  5660                           ;stkvar	_k @ sp[(-13)+7]
  5661  0121FC  0EFA               	movlw	-6
  5662  0121FE  0060  F033  FFE3   	movff	btemp+11,plusw1
  5663                           
  5664                           ;main.c: 419:     break;
  5665  012204  D015               	goto	l1356
  5666  012206                     l12782:
  5667                           
  5668                           ; BSR set to: 2
  5669                           ;stkvar	_inp_index @ sp[(-13)+10]
  5670  012206  0EFD               	movlw	-3
  5671  012208  50E3               	movf	plusw1,w,c
  5672  01220A  6E0B               	movwf	(btemp+10)^0,c
  5673  01220C  6A0C               	clrf	(btemp+11)^0,c
  5674                           
  5675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5676                           ; Switch size 1, requested type "simple"
  5677                           ; Number of cases is 1, Range of values is 0 to 0
  5678                           ; switch strategies available:
  5679                           ; Name         Instructions Cycles
  5680                           ; simple_byte            4     3 (average)
  5681                           ;	Chosen strategy is simple_byte
  5682  01220E  500C               	movf	(btemp+11)^0,w,c
  5683  012210  0A00               	xorlw	0	; case 0
  5684  012212  A4D8               	btfss	status,2,c
  5685  012214  D00D               	goto	l1356
  5686                           
  5687                           ; BSR set to: 2
  5688                           ; Switch size 1, requested type "simple"
  5689                           ; Number of cases is 4, Range of values is 0 to 9
  5690                           ; switch strategies available:
  5691                           ; Name         Instructions Cycles
  5692                           ; simple_byte           13     7 (average)
  5693                           ;	Chosen strategy is simple_byte
  5694  012216  500B               	movf	(btemp+10)^0,w,c
  5695  012218  0A00               	xorlw	0	; case 0
  5696  01221A  B4D8               	btfsc	status,2,c
  5697  01221C  D7BD               	goto	l12764
  5698  01221E  0A03               	xorlw	3	; case 3
  5699  012220  B4D8               	btfsc	status,2,c
  5700  012222  D7C3               	goto	l12770
  5701  012224  0A05               	xorlw	5	; case 6
  5702  012226  B4D8               	btfsc	status,2,c
  5703  012228  D7CC               	goto	l12772
  5704  01222A  0A0F               	xorlw	15	; case 9
  5705  01222C  B4D8               	btfsc	status,2,c
  5706  01222E  D7D8               	goto	l12778
  5707  012230                     l1356:
  5708                           
  5709                           ;main.c: 428:   if (V.set_sequ) {
  5710  012230  0102               	movlb	2	; () banked
  5711  012232  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5712  012234  EF6F  F08C         	goto	l12690
  5713                           
  5714                           ; BSR set to: 2
  5715                           ;main.c: 429:    if (TimerDone(TMR_INFO)) {
  5716  012238  0E07               	movlw	7
  5717  01223A  6EE6               	movwf	postinc1,c
  5718  01223C  EC8F  F0D8         	call	_TimerDone	;wreg free
  5719  012240  5001               	movf	btemp^0,w,c
  5720  012242  B4D8               	btfsc	status,2,c
  5721  012244  D00C               	goto	l12792
  5722                           
  5723                           ;main.c: 430:     V.set_sequ = 0;
  5724  012246  0102               	movlb	2	; () banked
  5725  012248  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5726                           
  5727                           ; BSR set to: 2
  5728                           ;main.c: 431:     set_vterm(0);
  5729  01224A  0E00               	movlw	0
  5730  01224C  6EE6               	movwf	postinc1,c
  5731  01224E  EC56  F0DA         	call	_set_vterm	;wreg free
  5732                           
  5733                           ;main.c: 432:     update_lcd(0);
  5734  012252  0E00               	movlw	0
  5735  012254  6EE6               	movwf	postinc1,c
  5736  012256  ECF7  F0C8         	call	_update_lcd	;wreg free
  5737                           
  5738                           ;main.c: 433:    } else {
  5739  01225A  EF6F  F08C         	goto	l12690
  5740  01225E                     l12792:
  5741                           
  5742                           ;main.c: 434:     set_vterm(2);
  5743  01225E  0E02               	movlw	2
  5744  012260  6EE6               	movwf	postinc1,c
  5745  012262  EC56  F0DA         	call	_set_vterm	;wreg free
  5746                           
  5747                           ;main.c: 435:     update_lcd(2);
  5748  012266  0E02               	movlw	2
  5749  012268  6EE6               	movwf	postinc1,c
  5750  01226A  ECF7  F0C8         	call	_update_lcd	;wreg free
  5751  01226E  EF6F  F08C         	goto	l12690
  5752  012272                     __end_of_main:
  5753                           	opt callstack 0
  5754                           
  5755 ;; *************** function _static_soc *****************
  5756 ;; Defined at:
  5757 ;;		line 116 in file "mbmc.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;		None
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;		None
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1  [STACK] void 
  5764 ;; Registers used:
  5765 ;;		wreg, status,2
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 3F/1
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5775 ;;Total ram usage:        0 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:   15
  5778 ;; This function calls:
  5779 ;;		Nothing
  5780 ;; This function is called by:
  5781 ;;		_main
  5782 ;; This function uses a reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text1
  5786  01B350                     __ptext1:
  5787                           	opt callstack 0
  5788  01B350                     _static_soc:
  5789                           	opt callstack 15
  5790                           
  5791                           ;mbmc.c: 118:  C.runtime = 120;
  5792                           
  5793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5794                           ;incstack = 0
  5795  01B350  0E00               	movlw	0
  5796  01B352  0101               	movlb	1	; () banked
  5797  01B354  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
  5798  01B356  0E78               	movlw	120
  5799  01B358  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
  5800                           
  5801                           ;mbmc.c: 119:  C.soc = 100;
  5802  01B35A  0E00               	movlw	0
  5803  01B35C  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
  5804  01B35E  0E64               	movlw	100
  5805  01B360  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
  5806                           
  5807                           ; BSR set to: 1
  5808                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5809  01B362  C188  F18C         	movff	_C+136,_C+140	;volatile
  5810  01B366  C189  F18D         	movff	_C+137,_C+141	;volatile
  5811  01B36A  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5812  01B36E  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5813                           
  5814                           ; BSR set to: 1
  5815                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5816  01B372  0012               	return		;funcret
  5817  01B374                     __end_of_static_soc:
  5818                           	opt callstack 0
  5819                           
  5820 ;; *************** function _start_switch_handler *****************
  5821 ;; Defined at:
  5822 ;;		line 119 in file "dio.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;		None
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1  [STACK] void 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5831 ;; Tracked objects:
  5832 ;;		On entry : 1/0
  5833 ;;		On exit  : 3F/39
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5840 ;;Total ram usage:        0 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:   16
  5843 ;; This function calls:
  5844 ;;		_INT1_SetInterruptHandler
  5845 ;; This function is called by:
  5846 ;;		_main
  5847 ;; This function uses a reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text2
  5851  01B46E                     __ptext2:
  5852                           	opt callstack 0
  5853  01B46E                     _start_switch_handler:
  5854                           	opt callstack 14
  5855                           
  5856                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  5857                           
  5858                           ; BSR set to: 1
  5859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5860                           ;incstack = 0
  5861  01B46E  0139               	movlb	57	; () banked
  5862  01B470  9195               	bcf	149,0,b	;volatile
  5863                           
  5864                           ; BSR set to: 57
  5865                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  5866  01B472  0E34               	movlw	low _switch_handler
  5867  01B474  6EE6               	movwf	postinc1,c
  5868  01B476  0E8C               	movlw	high _switch_handler
  5869  01B478  6EE6               	movwf	postinc1,c
  5870  01B47A  0E01               	movlw	low (_switch_handler shr (0+16))
  5871  01B47C  6EE6               	movwf	postinc1,c
  5872  01B47E  EC1B  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
  5873                           
  5874                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  5875  01B482  0E02               	movlw	2
  5876  01B484  0102               	movlb	2	; () banked
  5877  01B486  6FE0               	movwf	(_S+35)& (0+255),b	;volatile
  5878                           
  5879                           ; BSR set to: 2
  5880                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  5881  01B488  0139               	movlb	57	; () banked
  5882  01B48A  8195               	bsf	149,0,b	;volatile
  5883                           
  5884                           ; BSR set to: 57
  5885                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5886  01B48C  0012               	return		;funcret
  5887  01B48E                     __end_of_start_switch_handler:
  5888                           	opt callstack 0
  5889                           
  5890 ;; *************** function _srand *****************
  5891 ;; Defined at:
  5892 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  s               2  [STACK] unsigned int 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1  [STACK] void 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 3F/1
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5910 ;;Total ram usage:        0 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:   15
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_main
  5917 ;; This function uses a reentrant model
  5918 ;;
  5919                           
  5920                           	psect	text3
  5921  01AE6E                     __ptext3:
  5922                           	opt callstack 0
  5923  01AE6E                     _srand:
  5924                           	opt callstack 15
  5925                           
  5926                           ;stkvar	_s @ sp[(0)+-2]
  5927                           
  5928                           ; BSR set to: 57
  5929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5930                           ;incstack = 0
  5931  01AE6E  0EFE               	movlw	-2
  5932  01AE70  50E3               	movf	plusw1,w,c
  5933  01AE72  0FFF               	addlw	255
  5934  01AE74  6E0B               	movwf	(btemp+10)^0,c
  5935  01AE76  0EFF               	movlw	-1
  5936  01AE78  006F FF8C  F00C    	movff	plusw1,btemp+11
  5937  01AE7E  0EFF               	movlw	255
  5938  01AE80  220C               	addwfc	(btemp+11)^0,f,c
  5939  01AE82  0060  F02C  F1F7   	movff	btemp+10,_seed
  5940  01AE88  0060  F030  F1F8   	movff	btemp+11,_seed+1
  5941  01AE8E  0101               	movlb	1	; () banked
  5942  01AE90  6BF9               	clrf	(_seed+2)& (0+255),b
  5943  01AE92  6BFA               	clrf	(_seed+3)& (0+255),b
  5944  01AE94  6BFB               	clrf	(_seed+4)& (0+255),b
  5945  01AE96  6BFC               	clrf	(_seed+5)& (0+255),b
  5946  01AE98  6BFD               	clrf	(_seed+6)& (0+255),b
  5947  01AE9A  6BFE               	clrf	(_seed+7)& (0+255),b
  5948                           
  5949                           ; BSR set to: 1
  5950                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5951  01AE9C  52E5               	movf	postdec1,f,c
  5952  01AE9E  52E5               	movf	postdec1,f,c
  5953  01AEA0  0012               	return		;funcret
  5954  01AEA2                     __end_of_srand:
  5955                           	opt callstack 0
  5956                           
  5957 ;; *************** function _spinners *****************
  5958 ;; Defined at:
  5959 ;;		line 134 in file "mbmc.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  shape           1  [STACK] unsigned char 
  5962 ;;  reset           1  [STACK] unsigned char 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  c               1  [STACK] unsigned char 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1  [STACK] unsigned char 
  5967 ;; Registers used:
  5968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5978 ;;Total ram usage:        0 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; Hardware stack levels required when called:   16
  5981 ;; This function calls:
  5982 ;;		_strlen
  5983 ;; This function is called by:
  5984 ;;		_main
  5985 ;; This function uses a reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text4
  5989  0197FA                     __ptext4:
  5990                           	opt callstack 0
  5991  0197FA                     _spinners:
  5992                           	opt callstack 0
  5993                           
  5994                           ; BSR set to: 1
  5995                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5996  0197FA  52E6               	movf	postinc1,f,c
  5997                           
  5998                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1))
  5999                           ;stkvar	_shape @ sp[(-1)+-1]
  6000                           
  6001                           ;incstack = 0
  6002  0197FC  0EFE               	movlw	-2
  6003  0197FE  006F FF8C  F001    	movff	plusw1,btemp
  6004  019804  0E05               	movlw	5
  6005  019806  6401               	cpfsgt	btemp^0,c
  6006  019808  D002               	goto	l1866
  6007                           
  6008                           ;mbmc.c: 140:   shape = 0;
  6009                           ;stkvar	_shape @ sp[(-1)+-1]
  6010  01980A  0EFE               	movlw	-2
  6011  01980C  6AE3               	clrf	plusw1,c
  6012  01980E                     l1866:
  6013                           
  6014                           ;mbmc.c: 141:  if (reset)
  6015                           ;stkvar	_reset @ sp[(-1)+-2]
  6016  01980E  0EFD               	movlw	-3
  6017  019810  50E3               	movf	plusw1,w,c
  6018  019812  B4D8               	btfsc	status,2,c
  6019  019814  D00A               	goto	l10550
  6020                           
  6021                           ;mbmc.c: 142:   s[shape] = 0;
  6022                           ;stkvar	_shape @ sp[(-1)+-1]
  6023  019816  0EFE               	movlw	-2
  6024  019818  006F FF8C  F00C    	movff	plusw1,btemp+11
  6025  01981E  500C               	movf	(btemp+11)^0,w,c
  6026  019820  0F74               	addlw	low spinners@s
  6027  019822  6ED9               	movwf	fsr2l,c
  6028  019824  6ADA               	clrf	fsr2h,c
  6029  019826  0E00               	movlw	0
  6030  019828  6EDF               	movwf	indf2,c
  6031  01982A                     l10550:
  6032                           
  6033                           ;mbmc.c: 143:  c = spin[shape][s[shape]];
  6034                           ;stkvar	_shape @ sp[(-1)+-1]
  6035  01982A  0EFE               	movlw	-2
  6036  01982C  50E3               	movf	plusw1,w,c
  6037  01982E  0D14               	mullw	20
  6038  019830  0EDB               	movlw	low _spin
  6039  019832  6E0B               	movwf	(btemp+10)^0,c
  6040  019834  0EFB               	movlw	high _spin
  6041  019836  6E0C               	movwf	(btemp+11)^0,c
  6042  019838  50F3               	movf	243,w,c
  6043  01983A  260B               	addwf	(btemp+10)^0,f,c
  6044  01983C  50F4               	movf	244,w,c
  6045  01983E  220C               	addwfc	(btemp+11)^0,f,c
  6046                           
  6047                           ;stkvar	_shape @ sp[(-1)+-1]
  6048  019840  0EFE               	movlw	-2
  6049  019842  006F FF8C  F00A    	movff	plusw1,btemp+9
  6050  019848  500A               	movf	(btemp+9)^0,w,c
  6051  01984A  0F74               	addlw	low spinners@s
  6052  01984C  6ED9               	movwf	fsr2l,c
  6053  01984E  6ADA               	clrf	fsr2h,c
  6054  019850  50DF               	movf	indf2,w,c
  6055  019852  260B               	addwf	(btemp+10)^0,f,c
  6056  019854  0E00               	movlw	0
  6057  019856  220C               	addwfc	(btemp+11)^0,f,c
  6058  019858  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6059  01985E  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6060  019864                     	if	0	;tblptru may be non-zero
  6061  019864                     	endif
  6062  019864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6063  019864  0E00               	movlw	low (__mediumconst shr (0+16))
  6064  019866  6EF8               	movwf	tblptru,c
  6065  019868                     	endif
  6066                           
  6067                           ;stkvar	_c @ sp[(-1)+0]
  6068  019868  0008               	tblrd		*
  6069  01986A  0EFF               	movlw	-1
  6070  01986C  006F FFD7 FFE3     	movff	tablat,plusw1
  6071                           
  6072                           ;mbmc.c: 144:  if (++s[shape] >= strlen(spin[shape]))
  6073                           ;stkvar	_shape @ sp[(-1)+-1]
  6074  019872  0EFE               	movlw	-2
  6075  019874  50E3               	movf	plusw1,w,c
  6076  019876  0D14               	mullw	20
  6077  019878  0EDB               	movlw	low _spin
  6078  01987A  6E0B               	movwf	(btemp+10)^0,c
  6079  01987C  0EFB               	movlw	high _spin
  6080  01987E  6E0C               	movwf	(btemp+11)^0,c
  6081  019880  50F3               	movf	243,w,c
  6082  019882  260B               	addwf	(btemp+10)^0,f,c
  6083  019884  50F4               	movf	244,w,c
  6084  019886  220C               	addwfc	(btemp+11)^0,f,c
  6085  019888  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6086  01988E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6087  019894  EC4C  F0CF         	call	_strlen	;wreg free
  6088                           
  6089                           ;stkvar	_shape @ sp[(-1)+-1]
  6090  019898  0EFE               	movlw	-2
  6091  01989A  006F FF8C  F00C    	movff	plusw1,btemp+11
  6092  0198A0  500C               	movf	(btemp+11)^0,w,c
  6093  0198A2  0F74               	addlw	low spinners@s
  6094  0198A4  6ED9               	movwf	fsr2l,c
  6095  0198A6  6ADA               	clrf	fsr2h,c
  6096  0198A8  2ADF               	incf	indf2,f,c
  6097  0198AA  50DF               	movf	indf2,w,c
  6098  0198AC  6E0B               	movwf	(btemp+10)^0,c
  6099  0198AE  6A0C               	clrf	(btemp+11)^0,c
  6100  0198B0  5001               	movf	btemp^0,w,c
  6101  0198B2  5C0B               	subwf	(btemp+10)^0,w,c
  6102  0198B4  5002               	movf	(btemp+1)^0,w,c
  6103  0198B6  580C               	subwfb	(btemp+11)^0,w,c
  6104  0198B8  A0D8               	btfss	status,0,c
  6105  0198BA  D00A               	goto	l10556
  6106                           
  6107                           ;mbmc.c: 145:   s[shape] = 0;
  6108                           ;stkvar	_shape @ sp[(-1)+-1]
  6109  0198BC  0EFE               	movlw	-2
  6110  0198BE  006F FF8C  F00C    	movff	plusw1,btemp+11
  6111  0198C4  500C               	movf	(btemp+11)^0,w,c
  6112  0198C6  0F74               	addlw	low spinners@s
  6113  0198C8  6ED9               	movwf	fsr2l,c
  6114  0198CA  6ADA               	clrf	fsr2h,c
  6115  0198CC  0E00               	movlw	0
  6116  0198CE  6EDF               	movwf	indf2,c
  6117  0198D0                     l10556:
  6118                           
  6119                           ;mbmc.c: 146:  return c;
  6120                           ;stkvar	_c @ sp[(-1)+0]
  6121  0198D0  0EFF               	movlw	-1
  6122  0198D2  006F FF8C  F001    	movff	plusw1,btemp
  6123                           
  6124                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6125  0198D8  52E5               	movf	postdec1,f,c
  6126  0198DA  52E5               	movf	postdec1,f,c
  6127  0198DC  52E5               	movf	postdec1,f,c
  6128  0198DE  0012               	return		;funcret
  6129  0198E0                     __end_of_spinners:
  6130                           	opt callstack 0
  6131                           
  6132 ;; *************** function _init_port_dma *****************
  6133 ;; Defined at:
  6134 ;;		line 90 in file "eadog.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1  [STACK] void 
  6141 ;; Registers used:
  6142 ;;		wreg, status,2
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/2
  6145 ;;		On exit  : 3F/3B
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6152 ;;Total ram usage:        0 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:   15
  6155 ;; This function calls:
  6156 ;;		Nothing
  6157 ;; This function is called by:
  6158 ;;		_main
  6159 ;; This function uses a reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text5
  6163  01AF0A                     __ptext5:
  6164                           	opt callstack 0
  6165  01AF0A                     _init_port_dma:
  6166                           	opt callstack 15
  6167                           
  6168                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6169                           
  6170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6171                           ;incstack = 0
  6172  01AF0A  0E3F               	movlw	-193
  6173  01AF0C  013B               	movlb	59	; () banked
  6174  01AF0E  17DD               	andwf	221,f,b	;volatile
  6175                           
  6176                           ; BSR set to: 59
  6177                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6178  01AF10  9BDD               	bcf	221,5,b	;volatile
  6179                           
  6180                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6181  01AF12  51DD               	movf	221,w,b	;volatile
  6182  01AF14  0BF9               	andlw	-7
  6183  01AF16  0902               	iorlw	2
  6184  01AF18  6FDD               	movwf	221,b	;volatile
  6185                           
  6186                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6187  01AF1A  0EE7               	movlw	-25
  6188  01AF1C  17DD               	andwf	221,f,b	;volatile
  6189                           
  6190                           ; BSR set to: 59
  6191                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6192  01AF1E  81DD               	bsf	221,0,b	;volatile
  6193                           
  6194                           ; BSR set to: 59
  6195                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6196  01AF20  9DDC               	bcf	220,6,b	;volatile
  6197                           
  6198                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6199  01AF22  0E3D               	movlw	61
  6200  01AF24  6FD1               	movwf	209,b	;volatile
  6201  01AF26  0EEA               	movlw	234
  6202  01AF28  6FD0               	movwf	208,b	;volatile
  6203                           
  6204                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6205  01AF2A  0EFF               	movlw	low _port_data
  6206  01AF2C  6FD9               	movwf	217,b	;volatile
  6207  01AF2E  0E05               	movlw	high _port_data
  6208  01AF30  6FDA               	movwf	218,b	;volatile
  6209  01AF32  0E00               	movlw	low (_port_data shr (0+16))
  6210  01AF34  6FDB               	movwf	219,b	;volatile
  6211                           
  6212                           ; BSR set to: 59
  6213                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6214  01AF36  9BDC               	bcf	220,5,b	;volatile
  6215                           
  6216                           ; BSR set to: 59
  6217                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6218  01AF38  0012               	return		;funcret
  6219  01AF3A                     __end_of_init_port_dma:
  6220                           	opt callstack 0
  6221                           
  6222 ;; *************** function _init_display *****************
  6223 ;; Defined at:
  6224 ;;		line 38 in file "eadog.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1  [STACK] void 
  6231 ;; Registers used:
  6232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6233 ;; Tracked objects:
  6234 ;;		On entry : 3F/3B
  6235 ;;		On exit  : 3F/3D
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:   17
  6245 ;; This function calls:
  6246 ;;		_ringBufS_init
  6247 ;;		_send_lcd_cmd
  6248 ;;		_send_lcd_cmd_long
  6249 ;;		_wdtdelay
  6250 ;; This function is called by:
  6251 ;;		_main
  6252 ;; This function uses a reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text6
  6256  019710                     __ptext6:
  6257                           	opt callstack 0
  6258  019710                     _init_display:
  6259                           	opt callstack 13
  6260                           
  6261                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6262                           
  6263                           ; BSR set to: 59
  6264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6265                           ;incstack = 0
  6266  019710  0E43               	movlw	low _ring_buf1
  6267  019712  0100               	movlb	0	; () banked
  6268  019714  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6269  019716  0E04               	movlw	high _ring_buf1
  6270  019718  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6271                           
  6272                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6273  01971A  0E00               	movlw	low _ring_buf2
  6274  01971C  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6275  01971E  0E04               	movlw	high _ring_buf2
  6276  019720  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6280  019722  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6281  019728  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6282  01972E  EC7B  F0D8         	call	_ringBufS_init	;wreg free
  6283                           
  6284                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6285  019732  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6286  019738  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6287  01973E  EC7B  F0D8         	call	_ringBufS_init	;wreg free
  6288                           
  6289                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6290  019742  84BE               	bsf	190,2,c	;volatile
  6291  019744  84BC               	bsf	188,2,c	;volatile
  6292                           
  6293                           ;eadog.c: 59:  wdtdelay(350000);
  6294  019746  0E30               	movlw	48
  6295  019748  6EE6               	movwf	postinc1,c
  6296  01974A  0E57               	movlw	87
  6297  01974C  6EE6               	movwf	postinc1,c
  6298  01974E  0E05               	movlw	5
  6299  019750  6EE6               	movwf	postinc1,c
  6300  019752  0E00               	movlw	0
  6301  019754  6EE6               	movwf	postinc1,c
  6302  019756  ECA9  F0D3         	call	_wdtdelay	;wreg free
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6306  01975A  0E39               	movlw	57
  6307  01975C  6EE6               	movwf	postinc1,c
  6308  01975E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6312  019762  0E1D               	movlw	29
  6313  019764  6EE6               	movwf	postinc1,c
  6314  019766  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6318  01976A  0E50               	movlw	80
  6319  01976C  6EE6               	movwf	postinc1,c
  6320  01976E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6324  019772  0E6C               	movlw	108
  6325  019774  6EE6               	movwf	postinc1,c
  6326  019776  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6330  01977A  0E76               	movlw	118
  6331  01977C  6EE6               	movwf	postinc1,c
  6332  01977E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6336  019782  0E38               	movlw	56
  6337  019784  6EE6               	movwf	postinc1,c
  6338  019786  EC53  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6342  01978A  0E0F               	movlw	15
  6343  01978C  6EE6               	movwf	postinc1,c
  6344  01978E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6348  019792  0E01               	movlw	1
  6349  019794  6EE6               	movwf	postinc1,c
  6350  019796  EC53  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6354  01979A  0E02               	movlw	2
  6355  01979C  6EE6               	movwf	postinc1,c
  6356  01979E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6360  0197A2  0E06               	movlw	6
  6361  0197A4  6EE6               	movwf	postinc1,c
  6362  0197A6  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;eadog.c: 70:  wdtdelay(30);
  6366  0197AA  0E1E               	movlw	30
  6367  0197AC  6EE6               	movwf	postinc1,c
  6368  0197AE  0E00               	movlw	0
  6369  0197B0  6EE6               	movwf	postinc1,c
  6370  0197B2  0E00               	movlw	0
  6371  0197B4  6EE6               	movwf	postinc1,c
  6372  0197B6  0E00               	movlw	0
  6373  0197B8  6EE6               	movwf	postinc1,c
  6374  0197BA  ECA9  F0D3         	call	_wdtdelay	;wreg free
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6378  0197BE  0E02               	movlw	2
  6379  0197C0  013D               	movlb	61	; () banked
  6380  0197C2  6F16               	movwf	22,b	;volatile
  6381                           
  6382                           ; BSR set to: 61
  6383                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6384  0197C4  0E40               	movlw	64
  6385  0197C6  6F15               	movwf	21,b	;volatile
  6386                           
  6387                           ; BSR set to: 61
  6388                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6389  0197C8  0E83               	movlw	131
  6390  0197CA  6F14               	movwf	20,b	;volatile
  6391                           
  6392                           ; BSR set to: 61
  6393                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6394  0197CC  931A               	bcf	26,1,b	;volatile
  6395                           
  6396                           ; BSR set to: 61
  6397                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6398  0197CE  0E3F               	movlw	-193
  6399  0197D0  013B               	movlb	59	; () banked
  6400  0197D2  17FD               	andwf	253,f,b	;volatile
  6401                           
  6402                           ; BSR set to: 59
  6403                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6404  0197D4  9BFD               	bcf	253,5,b	;volatile
  6405                           
  6406                           ; BSR set to: 59
  6407                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6408  0197D6  51FD               	movf	253,w,b	;volatile
  6409  0197D8  0BF9               	andlw	-7
  6410  0197DA  0902               	iorlw	2
  6411  0197DC  6FFD               	movwf	253,b	;volatile
  6412                           
  6413                           ; BSR set to: 59
  6414                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6415  0197DE  0EE7               	movlw	-25
  6416  0197E0  17FD               	andwf	253,f,b	;volatile
  6417                           
  6418                           ; BSR set to: 59
  6419                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6420  0197E2  81FD               	bsf	253,0,b	;volatile
  6421                           
  6422                           ; BSR set to: 59
  6423                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6424  0197E4  0E43               	movlw	low _ring_buf1
  6425  0197E6  6FF9               	movwf	249,b	;volatile
  6426  0197E8  0E04               	movlw	high _ring_buf1
  6427  0197EA  6FFA               	movwf	250,b	;volatile
  6428  0197EC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6429  0197EE  6FFB               	movwf	251,b	;volatile
  6430                           
  6431                           ; BSR set to: 59
  6432                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6433  0197F0  9BFC               	bcf	252,5,b	;volatile
  6434                           
  6435                           ; BSR set to: 59
  6436                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6437  0197F2  013D               	movlb	61	; () banked
  6438  0197F4  831A               	bsf	26,1,b	;volatile
  6439                           
  6440                           ; BSR set to: 61
  6441                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6442  0197F6  94BE               	bcf	190,2,c	;volatile
  6443                           
  6444                           ; BSR set to: 61
  6445                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6446  0197F8  0012               	return		;funcret
  6447  0197FA                     __end_of_init_display:
  6448                           	opt callstack 0
  6449                           
  6450 ;; *************** function _send_lcd_cmd_long *****************
  6451 ;; Defined at:
  6452 ;;		line 129 in file "eadog.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  cmd             1  [STACK] const unsigned char 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1  [STACK] void 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6461 ;; Tracked objects:
  6462 ;;		On entry : 3F/0
  6463 ;;		On exit  : 3F/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6470 ;;Total ram usage:        0 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:   16
  6473 ;; This function calls:
  6474 ;;		_SPI1_Exchange8bit
  6475 ;;		_wdtdelay
  6476 ;; This function is called by:
  6477 ;;		_init_display
  6478 ;; This function uses a reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text7
  6482  01B0A6                     __ptext7:
  6483                           	opt callstack 0
  6484  01B0A6                     _send_lcd_cmd_long:
  6485                           	opt callstack 13
  6486                           
  6487                           ; BSR set to: 61
  6488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6489                           ;incstack = 0
  6490                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6491  01B0A6  92BC               	bcf	188,1,c	;volatile
  6492                           
  6493                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6494  01B0A8  94BC               	bcf	188,2,c	;volatile
  6495                           
  6496                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6497                           ;stkvar	_cmd @ sp[(0)+-1]
  6498  01B0AA  0EFF               	movlw	-1
  6499  01B0AC  50E3               	movf	plusw1,w,c
  6500  01B0AE  6EE6               	movwf	postinc1,c
  6501  01B0B0  EC47  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6502                           
  6503                           ; BSR set to: 57
  6504                           ;eadog.c: 134:  wdtdelay(800);
  6505  01B0B4  0E20               	movlw	32
  6506  01B0B6  6EE6               	movwf	postinc1,c
  6507  01B0B8  0E03               	movlw	3
  6508  01B0BA  6EE6               	movwf	postinc1,c
  6509  01B0BC  0E00               	movlw	0
  6510  01B0BE  6EE6               	movwf	postinc1,c
  6511  01B0C0  0E00               	movlw	0
  6512  01B0C2  6EE6               	movwf	postinc1,c
  6513  01B0C4  ECA9  F0D3         	call	_wdtdelay	;wreg free
  6514                           
  6515                           ; BSR set to: 0
  6516  01B0C8  82BC               	bsf	188,1,c	;volatile
  6517                           
  6518                           ; BSR set to: 0
  6519                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6520  01B0CA  52E5               	movf	postdec1,f,c
  6521  01B0CC  0012               	return		;funcret
  6522  01B0CE                     __end_of_send_lcd_cmd_long:
  6523                           	opt callstack 0
  6524                           
  6525 ;; *************** function _send_lcd_cmd *****************
  6526 ;; Defined at:
  6527 ;;		line 117 in file "eadog.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  cmd             1  [STACK] const unsigned char 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1  [STACK] void 
  6534 ;; Registers used:
  6535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6536 ;; Tracked objects:
  6537 ;;		On entry : 3F/0
  6538 ;;		On exit  : 3F/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:   16
  6548 ;; This function calls:
  6549 ;;		_SPI1_Exchange8bit
  6550 ;;		_wdtdelay
  6551 ;; This function is called by:
  6552 ;;		_init_display
  6553 ;; This function uses a reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text8
  6557  01B0CE                     __ptext8:
  6558                           	opt callstack 0
  6559  01B0CE                     _send_lcd_cmd:
  6560                           	opt callstack 13
  6561                           
  6562                           ; BSR set to: 0
  6563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6564                           ;incstack = 0
  6565                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6566  01B0CE  92BC               	bcf	188,1,c	;volatile
  6567                           
  6568                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6569  01B0D0  94BC               	bcf	188,2,c	;volatile
  6570                           
  6571                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6572                           ;stkvar	_cmd @ sp[(0)+-1]
  6573  01B0D2  0EFF               	movlw	-1
  6574  01B0D4  50E3               	movf	plusw1,w,c
  6575  01B0D6  6EE6               	movwf	postinc1,c
  6576  01B0D8  EC47  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6577                           
  6578                           ; BSR set to: 57
  6579                           ;eadog.c: 122:  wdtdelay(30);
  6580  01B0DC  0E1E               	movlw	30
  6581  01B0DE  6EE6               	movwf	postinc1,c
  6582  01B0E0  0E00               	movlw	0
  6583  01B0E2  6EE6               	movwf	postinc1,c
  6584  01B0E4  0E00               	movlw	0
  6585  01B0E6  6EE6               	movwf	postinc1,c
  6586  01B0E8  0E00               	movlw	0
  6587  01B0EA  6EE6               	movwf	postinc1,c
  6588  01B0EC  ECA9  F0D3         	call	_wdtdelay	;wreg free
  6589                           
  6590                           ; BSR set to: 0
  6591  01B0F0  82BC               	bsf	188,1,c	;volatile
  6592                           
  6593                           ; BSR set to: 0
  6594                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6595  01B0F2  52E5               	movf	postdec1,f,c
  6596  01B0F4  0012               	return		;funcret
  6597  01B0F6                     __end_of_send_lcd_cmd:
  6598                           	opt callstack 0
  6599                           
  6600 ;; *************** function _SPI1_Exchange8bit *****************
  6601 ;; Defined at:
  6602 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  data            1  [STACK] unsigned char 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1  [STACK] unsigned char 
  6609 ;; Registers used:
  6610 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 3F/39
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6620 ;;Total ram usage:        0 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; Hardware stack levels required when called:   15
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_send_lcd_cmd
  6627 ;;		_send_lcd_cmd_long
  6628 ;; This function uses a reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text9
  6632  01B48E                     __ptext9:
  6633                           	opt callstack 0
  6634  01B48E                     _SPI1_Exchange8bit:
  6635                           	opt callstack 13
  6636                           
  6637                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6638                           
  6639                           ; BSR set to: 0
  6640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6641                           ;incstack = 0
  6642  01B48E  0E01               	movlw	1
  6643  01B490  013D               	movlb	61	; () banked
  6644  01B492  6F12               	movwf	18,b	;volatile
  6645                           
  6646                           ; BSR set to: 61
  6647                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6648                           ;stkvar	_data @ sp[(0)+-1]
  6649  01B494  0EFF               	movlw	-1
  6650  01B496  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6651  01B49C                     l807:
  6652                           
  6653                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6654  01B49C  0139               	movlb	57	; () banked
  6655  01B49E  A9A2               	btfss	162,4,b	;volatile
  6656  01B4A0  D7FD               	goto	l807
  6657                           
  6658                           ; BSR set to: 57
  6659                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6660  01B4A2  006F F440  F001    	movff	15632,btemp	;volatile
  6661                           
  6662                           ; BSR set to: 57
  6663                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6664  01B4A8  52E5               	movf	postdec1,f,c
  6665  01B4AA  0012               	return		;funcret
  6666  01B4AC                     __end_of_SPI1_Exchange8bit:
  6667                           	opt callstack 0
  6668                           
  6669 ;; *************** function _ringBufS_init *****************
  6670 ;; Defined at:
  6671 ;;		line 22 in file "ringbufs.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  _this           2  [STACK] PTR volatile struct ring
  6674 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1  [STACK] void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6690 ;;Total ram usage:        0 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:   16
  6693 ;; This function calls:
  6694 ;;		_memset
  6695 ;; This function is called by:
  6696 ;;		_init_display
  6697 ;; This function uses a reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text10
  6701  01B0F6                     __ptext10:
  6702                           	opt callstack 0
  6703  01B0F6                     _ringBufS_init:
  6704                           	opt callstack 13
  6705                           
  6706                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6707                           
  6708                           ; BSR set to: 57
  6709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6710                           ;incstack = 0
  6711  01B0F6  0E43               	movlw	67
  6712  01B0F8  6EE6               	movwf	postinc1,c
  6713  01B0FA  0E00               	movlw	0
  6714  01B0FC  6EE6               	movwf	postinc1,c
  6715  01B0FE  0E00               	movlw	0
  6716  01B100  6EE6               	movwf	postinc1,c
  6717  01B102  0E00               	movlw	0
  6718  01B104  6EE6               	movwf	postinc1,c
  6719                           
  6720                           ;stkvar	__this @ sp[(-4)+-2]
  6721  01B106  0EFA               	movlw	-6
  6722  01B108  006F FF8F FFE6     	movff	plusw1,postinc1
  6723  01B10E  006F FF8F FFE6     	movff	plusw1,postinc1
  6724  01B114  ECF2  F0B2         	call	_memset	;wreg free
  6725                           
  6726                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6727  01B118  52E5               	movf	postdec1,f,c
  6728  01B11A  52E5               	movf	postdec1,f,c
  6729  01B11C  0012               	return		;funcret
  6730  01B11E                     __end_of_ringBufS_init:
  6731                           	opt callstack 0
  6732                           
  6733 ;; *************** function _init_bsoc *****************
  6734 ;; Defined at:
  6735 ;;		line 89 in file "bsoc.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;		None
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;		None
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1  [STACK] void 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6744 ;; Tracked objects:
  6745 ;;		On entry : 3F/1
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6753 ;;Total ram usage:        0 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; Hardware stack levels required when called:   18
  6756 ;; This function calls:
  6757 ;;		_TMR3_SetInterruptHandler
  6758 ;;		_Volts_to_SOC
  6759 ;;		___fldiv
  6760 ;;		___flmul
  6761 ;;		___fltol
  6762 ;;		___xxtofl
  6763 ;;		_conv_raw_result
  6764 ;; This function is called by:
  6765 ;;		_main
  6766 ;; This function uses a reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text11
  6770  018570                     __ptext11:
  6771                           	opt callstack 0
  6772  018570                     _init_bsoc:
  6773                           	opt callstack 12
  6774                           
  6775                           ;bsoc.c: 94:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6776                           
  6777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6778                           ;incstack = 0
  6779  018570  0E00               	movlw	0
  6780  018572  6EE6               	movwf	postinc1,c
  6781  018574  0E00               	movlw	0
  6782  018576  6EE6               	movwf	postinc1,c
  6783  018578  0E7A               	movlw	122
  6784  01857A  6EE6               	movwf	postinc1,c
  6785  01857C  0E44               	movlw	68
  6786  01857E  6EE6               	movwf	postinc1,c
  6787  018580  0E00               	movlw	0
  6788  018582  6EE6               	movwf	postinc1,c
  6789  018584  0E04               	movlw	4
  6790  018586  6EE6               	movwf	postinc1,c
  6791  018588  EC58  F0A7         	call	_conv_raw_result	;wreg free
  6792  01858C  0060  F007  FFE6   	movff	btemp,postinc1
  6793  018592  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6794  018598  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6795  01859E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6796  0185A4  ECFF  F0C1         	call	___fltol	;wreg free
  6797  0185A8  0060  F007  FFE6   	movff	btemp,postinc1
  6798  0185AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6799  0185B4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6800  0185BA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6801  0185C0  0E00               	movlw	0
  6802  0185C2  6EE6               	movwf	postinc1,c
  6803  0185C4  ECDA  F0BC         	call	___xxtofl	;wreg free
  6804  0185C8  0060  F007  FFE6   	movff	btemp,postinc1
  6805  0185CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6806  0185D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6807  0185DA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6808  0185E0  EC0F  F099         	call	___flmul	;wreg free
  6809  0185E4  0060  F007  FFE6   	movff	btemp,postinc1
  6810  0185EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6811  0185F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6812  0185F6  0060  F013  FFE6   	movff	btemp+3,postinc1
  6813  0185FC  ECFF  F0C1         	call	___fltol	;wreg free
  6814  018600  0060  F007  FFE6   	movff	btemp,postinc1
  6815  018606  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6816  01860C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6817  018612  0060  F013  FFE6   	movff	btemp+3,postinc1
  6818  018618  ECE9  F0CF         	call	_Volts_to_SOC	;wreg free
  6819  01861C  0060  F004  F1AE   	movff	btemp,_C+174	;volatile
  6820  018622  0060  F008  F1AF   	movff	btemp+1,_C+175	;volatile
  6821                           
  6822                           ;bsoc.c: 95:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6823  018628  0060  F623  FFE6   	movff	_C+136,postinc1
  6824  01862E  0060  F627  FFE6   	movff	_C+137,postinc1
  6825  018634  0060  F62B  FFE6   	movff	_C+138,postinc1
  6826  01863A  0060  F62F  FFE6   	movff	_C+139,postinc1
  6827  018640  0E00               	movlw	0
  6828  018642  6EE6               	movwf	postinc1,c
  6829  018644  0E00               	movlw	0
  6830  018646  6EE6               	movwf	postinc1,c
  6831  018648  0EC8               	movlw	200
  6832  01864A  6EE6               	movwf	postinc1,c
  6833  01864C  0E42               	movlw	66
  6834  01864E  6EE6               	movwf	postinc1,c
  6835  018650  0101               	movlb	1	; () banked
  6836  018652  51AE               	movf	(_C+174)& (0+255),w,b	;volatile
  6837  018654  6E09               	movwf	(btemp+8)^0,c
  6838  018656  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
  6839  018658  6E0A               	movwf	(btemp+9)^0,c
  6840  01865A  6A0B               	clrf	(btemp+10)^0,c
  6841  01865C  6A0C               	clrf	(btemp+11)^0,c
  6842  01865E  0060  F027  FFE6   	movff	btemp+8,postinc1
  6843  018664  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6844  01866A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6845  018670  0060  F033  FFE6   	movff	btemp+11,postinc1
  6846  018676  0E00               	movlw	0
  6847  018678  6EE6               	movwf	postinc1,c
  6848  01867A  ECDA  F0BC         	call	___xxtofl	;wreg free
  6849  01867E  0060  F007  FFE6   	movff	btemp,postinc1
  6850  018684  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6851  01868A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6852  018690  0060  F013  FFE6   	movff	btemp+3,postinc1
  6853  018696  EC9B  F0A4         	call	___fldiv	;wreg free
  6854  01869A  0060  F007  FFE6   	movff	btemp,postinc1
  6855  0186A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6856  0186A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6857  0186AC  0060  F013  FFE6   	movff	btemp+3,postinc1
  6858  0186B2  EC0F  F099         	call	___flmul	;wreg free
  6859  0186B6  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  6860  0186BC  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  6861  0186C2  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  6862  0186C8  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  6863                           
  6864                           ;bsoc.c: 96:  TMR3_SetInterruptHandler(calc_bsoc);
  6865  0186CE  0E04               	movlw	low _calc_bsoc
  6866  0186D0  6EE6               	movwf	postinc1,c
  6867  0186D2  0E42               	movlw	high _calc_bsoc
  6868  0186D4  6EE6               	movwf	postinc1,c
  6869  0186D6  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6870  0186D8  6EE6               	movwf	postinc1,c
  6871  0186DA  EC07  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
  6872                           
  6873                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6874  0186DE  0012               	return		;funcret
  6875  0186E0                     __end_of_init_bsoc:
  6876                           	opt callstack 0
  6877                           
  6878 ;; *************** function _Volts_to_SOC *****************
  6879 ;; Defined at:
  6880 ;;		line 153 in file "bsoc.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  cvoltage        4  [STACK] unsigned long 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;		None
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  2  [STACK] unsigned short 
  6887 ;; Registers used:
  6888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/1
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6898 ;;Total ram usage:        0 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:   15
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_init_bsoc
  6905 ;; This function uses a reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text12
  6909  019FD2                     __ptext12:
  6910                           	opt callstack 0
  6911  019FD2                     _Volts_to_SOC:
  6912                           	opt callstack 14
  6913                           
  6914                           ;bsoc.c: 153: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 154: {;bsoc.c: 155:  stat
      +                          ic uint8_t slot;;bsoc.c: 157:  C.soc = 0;
  6915                           
  6916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6917                           ;incstack = 0
  6918  019FD2  0101               	movlb	1	; () banked
  6919  019FD4  6BAE               	clrf	(_C+174)& (0+255),b	;volatile
  6920  019FD6  6BAF               	clrf	(_C+175)& (0+255),b	;volatile
  6921                           
  6922                           ;bsoc.c: 158:  for (slot = 0; slot < 26; slot++) {
  6923  019FD8  6A2E               	clrf	Volts_to_SOC@slot^0,c
  6924  019FDA                     l10326:
  6925                           
  6926                           ;bsoc.c: 159:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6927                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6928  019FDA  502E               	movf	Volts_to_SOC@slot^0,w,c
  6929  019FDC  0D08               	mullw	8
  6930  019FDE  0E7B               	movlw	low _BVSOC_TABLE
  6931  019FE0  24F3               	addwf	243,w,c
  6932  019FE2  6EF6               	movwf	tblptrl,c
  6933  019FE4  0EFA               	movlw	high _BVSOC_TABLE
  6934  019FE6  20F4               	addwfc	244,w,c
  6935  019FE8  6EF7               	movwf	tblptrh,c
  6936  019FEA                     	if	1	;There are 3 active tblptr bytes
  6937  019FEA  6AF8               	clrf	tblptru,c
  6938  019FEC  0E00               	movlw	low (__mediumconst shr (0+16))
  6939  019FEE  22F8               	addwfc	tblptru,f,c
  6940  019FF0                     	endif
  6941  019FF0  0EFC               	movlw	-4
  6942  019FF2  50E3               	movf	plusw1,w,c
  6943  019FF4  0009               	tblrd		*+
  6944  019FF6  5CF5               	subwf	tablat,w,c
  6945  019FF8  0EFD               	movlw	-3
  6946  019FFA  50E3               	movf	plusw1,w,c
  6947  019FFC  0009               	tblrd		*+
  6948  019FFE  58F5               	subwfb	tablat,w,c
  6949  01A000  0EFE               	movlw	-2
  6950  01A002  50E3               	movf	plusw1,w,c
  6951  01A004  0009               	tblrd		*+
  6952  01A006  58F5               	subwfb	tablat,w,c
  6953  01A008  0EFF               	movlw	-1
  6954  01A00A  50E3               	movf	plusw1,w,c
  6955  01A00C  0009               	tblrd		*+
  6956  01A00E  58F5               	subwfb	tablat,w,c
  6957  01A010  B0D8               	btfsc	status,0,c
  6958  01A012  D017               	goto	l10330
  6959                           
  6960                           ;bsoc.c: 160:    C.soc = BVSOC_TABLE[slot][1];
  6961  01A014  502E               	movf	Volts_to_SOC@slot^0,w,c
  6962  01A016  0D08               	mullw	8
  6963  01A018  0E04               	movlw	4
  6964  01A01A  26F3               	addwf	243,f,c
  6965  01A01C  0E00               	movlw	0
  6966  01A01E  22F4               	addwfc	244,f,c
  6967  01A020  0E7B               	movlw	low _BVSOC_TABLE
  6968  01A022  24F3               	addwf	243,w,c
  6969  01A024  6EF6               	movwf	tblptrl,c
  6970  01A026  0EFA               	movlw	high _BVSOC_TABLE
  6971  01A028  20F4               	addwfc	244,w,c
  6972  01A02A  6EF7               	movwf	tblptrh,c
  6973  01A02C                     	if	1	;There are 3 active tblptr bytes
  6974  01A02C  6AF8               	clrf	tblptru,c
  6975  01A02E  0E00               	movlw	low (__mediumconst shr (0+16))
  6976  01A030  22F8               	addwfc	tblptru,f,c
  6977  01A032                     	endif
  6978  01A032  0009               	tblrd		*+
  6979  01A034  006F FFD4  F1AE    	movff	tablat,_C+174	;volatile
  6980  01A03A  000A               	tblrd		*-
  6981  01A03C  006F FFD4  F1AF    	movff	tablat,_C+175	;volatile
  6982  01A042                     l10330:
  6983                           
  6984                           ;bsoc.c: 162:  }
  6985  01A042  2A2E               	incf	Volts_to_SOC@slot^0,f,c
  6986  01A044  0E19               	movlw	25
  6987  01A046  642E               	cpfsgt	Volts_to_SOC@slot^0,c
  6988  01A048  D7C8               	goto	l10326
  6989                           
  6990                           ;bsoc.c: 164:  return C.soc;
  6991  01A04A  EE20  F1AE         	lfsr	2,_C+174	;volatile
  6992  01A04E  006F FF78  F001    	movff	postinc2,btemp
  6993  01A054  006F FF74  F002    	movff	postdec2,btemp+1
  6994                           
  6995                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6996  01A05A  52E5               	movf	postdec1,f,c
  6997  01A05C  52E5               	movf	postdec1,f,c
  6998  01A05E  52E5               	movf	postdec1,f,c
  6999  01A060  52E5               	movf	postdec1,f,c
  7000  01A062  0012               	return		;funcret
  7001  01A064                     __end_of_Volts_to_SOC:
  7002                           	opt callstack 0
  7003                           
  7004 ;; *************** function _hid_display *****************
  7005 ;; Defined at:
  7006 ;;		line 17 in file "hid.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  h               1  [STACK] PTR struct H_data
  7009 ;;		 -> H(7), 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1  [STACK] PTR struct H_data
  7014 ;; Registers used:
  7015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7016 ;; Tracked objects:
  7017 ;;		On entry : 3F/1
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7025 ;;Total ram usage:        0 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; Hardware stack levels required when called:   17
  7028 ;; This function calls:
  7029 ;;		_hid_input
  7030 ;; This function is called by:
  7031 ;;		_main
  7032 ;; This function uses a reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text13
  7036  019516                     __ptext13:
  7037                           	opt callstack 0
  7038  019516                     _hid_display:
  7039                           	opt callstack 13
  7040                           
  7041                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7042                           ;stkvar	_h @ sp[(0)+-1]
  7043                           
  7044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7045                           ;incstack = 0
  7046  019516  0EFF               	movlw	-1
  7047  019518  50E3               	movf	plusw1,w,c
  7048  01951A  6EE6               	movwf	postinc1,c
  7049  01951C  ECC4  F0D0         	call	_hid_input	;wreg free
  7050                           
  7051                           ;hid.c: 21:  switch (h->h_state) {
  7052  019520  D066               	goto	l10730
  7053  019522                     l10708:
  7054                           
  7055                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7056                           ;stkvar	_h @ sp[(0)+-1]
  7057  019522  0EFF               	movlw	-1
  7058  019524  50E3               	movf	plusw1,w,c
  7059  019526  6ED9               	movwf	fsr2l,c
  7060  019528  6ADA               	clrf	fsr2h,c
  7061  01952A  0E01               	movlw	1
  7062  01952C  26D9               	addwf	fsr2l,f,c
  7063  01952E  0E01               	movlw	1
  7064  019530  6EDF               	movwf	indf2,c
  7065                           
  7066                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7067                           ;stkvar	_h @ sp[(0)+-1]
  7068  019532  0EFF               	movlw	-1
  7069  019534  50E3               	movf	plusw1,w,c
  7070  019536  6ED9               	movwf	fsr2l,c
  7071  019538  6ADA               	clrf	fsr2h,c
  7072  01953A  0E00               	movlw	0
  7073  01953C  6EDF               	movwf	indf2,c
  7074                           
  7075                           ;hid.c: 25:   h->wait_enter = 1;
  7076                           ;stkvar	_h @ sp[(0)+-1]
  7077  01953E  0EFF               	movlw	-1
  7078  019540  50E3               	movf	plusw1,w,c
  7079  019542  6ED9               	movwf	fsr2l,c
  7080  019544  6ADA               	clrf	fsr2h,c
  7081  019546  0E04               	movlw	4
  7082  019548  26D9               	addwf	fsr2l,f,c
  7083  01954A  0E01               	movlw	1
  7084  01954C  6EDF               	movwf	indf2,c
  7085                           
  7086                           ;hid.c: 26:   h->wait_select = 1;
  7087                           ;stkvar	_h @ sp[(0)+-1]
  7088  01954E  0EFF               	movlw	-1
  7089  019550  50E3               	movf	plusw1,w,c
  7090  019552  6ED9               	movwf	fsr2l,c
  7091  019554  6ADA               	clrf	fsr2h,c
  7092  019556  0E02               	movlw	2
  7093  019558  26D9               	addwf	fsr2l,f,c
  7094  01955A  0E01               	movlw	1
  7095  01955C  6EDF               	movwf	indf2,c
  7096                           
  7097                           ;hid.c: 27:   h->select_p = SW_OFF;
  7098                           ;stkvar	_h @ sp[(0)+-1]
  7099  01955E  0EFF               	movlw	-1
  7100  019560  50E3               	movf	plusw1,w,c
  7101  019562  6ED9               	movwf	fsr2l,c
  7102  019564  6ADA               	clrf	fsr2h,c
  7103  019566  0E03               	movlw	3
  7104  019568  26D9               	addwf	fsr2l,f,c
  7105  01956A  0E00               	movlw	0
  7106  01956C  6EDF               	movwf	indf2,c
  7107                           
  7108                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7109                           ;stkvar	_h @ sp[(0)+-1]
  7110  01956E  0EFF               	movlw	-1
  7111  019570  50E3               	movf	plusw1,w,c
  7112  019572  6ED9               	movwf	fsr2l,c
  7113  019574  6ADA               	clrf	fsr2h,c
  7114  019576  0E05               	movlw	5
  7115  019578  26D9               	addwf	fsr2l,f,c
  7116  01957A  0E00               	movlw	0
  7117  01957C  D036               	goto	L1
  7118  01957E                     l10720:
  7119                           
  7120                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7121                           ;stkvar	_h @ sp[(0)+-1]
  7122  01957E  0EFF               	movlw	-1
  7123  019580  50E3               	movf	plusw1,w,c
  7124  019582  6ED9               	movwf	fsr2l,c
  7125  019584  6ADA               	clrf	fsr2h,c
  7126  019586  0E02               	movlw	2
  7127  019588  26D9               	addwf	fsr2l,f,c
  7128  01958A  50DF               	movf	indf2,w,c
  7129  01958C  A4D8               	btfss	status,2,c
  7130  01958E  D042               	goto	l1937
  7131                           
  7132                           ;stkvar	_h @ sp[(0)+-1]
  7133  019590  0EFF               	movlw	-1
  7134  019592  50E3               	movf	plusw1,w,c
  7135  019594  6ED9               	movwf	fsr2l,c
  7136  019596  6ADA               	clrf	fsr2h,c
  7137  019598  0E03               	movlw	3
  7138  01959A  26D9               	addwf	fsr2l,f,c
  7139  01959C  50DF               	movf	indf2,w,c
  7140  01959E  A4D8               	btfss	status,2,c
  7141  0195A0  D039               	goto	l1937
  7142                           
  7143                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7144                           ;stkvar	_h @ sp[(0)+-1]
  7145  0195A2  0EFF               	movlw	-1
  7146  0195A4  50E3               	movf	plusw1,w,c
  7147  0195A6  6ED9               	movwf	fsr2l,c
  7148  0195A8  6ADA               	clrf	fsr2h,c
  7149  0195AA  0E06               	movlw	6
  7150  0195AC  26D9               	addwf	fsr2l,f,c
  7151                           
  7152                           ;stkvar	_h @ sp[(0)+-1]
  7153  0195AE  0EFF               	movlw	-1
  7154  0195B0  50E3               	movf	plusw1,w,c
  7155  0195B2  6EE9               	movwf	fsr0l,c
  7156  0195B4  6AEA               	clrf	fsr0h,c
  7157  0195B6  0E06               	movlw	6
  7158  0195B8  26E9               	addwf	fsr0l,f,c
  7159  0195BA  2AEF               	incf	indf0,f,c
  7160  0195BC  50EF               	movf	indf0,w,c
  7161  0195BE  0B03               	andlw	3
  7162  0195C0  6EDF               	movwf	indf2,c
  7163                           
  7164                           ;hid.c: 34:    h->hid_display = h->sequence;
  7165                           ;stkvar	_h @ sp[(0)+-1]
  7166  0195C2  0EFF               	movlw	-1
  7167  0195C4  50E3               	movf	plusw1,w,c
  7168  0195C6  6ED9               	movwf	fsr2l,c
  7169  0195C8  6ADA               	clrf	fsr2h,c
  7170  0195CA  0E06               	movlw	6
  7171  0195CC  26D9               	addwf	fsr2l,f,c
  7172                           
  7173                           ;stkvar	_h @ sp[(0)+-1]
  7174  0195CE  0EFF               	movlw	-1
  7175  0195D0  50E3               	movf	plusw1,w,c
  7176  0195D2  6EE9               	movwf	fsr0l,c
  7177  0195D4  6AEA               	clrf	fsr0h,c
  7178  0195D6  006F FF7F FFEF     	movff	indf2,indf0
  7179                           
  7180                           ;hid.c: 35:    h->wait_select = 1;
  7181                           ;stkvar	_h @ sp[(0)+-1]
  7182  0195DC  0EFF               	movlw	-1
  7183  0195DE  50E3               	movf	plusw1,w,c
  7184  0195E0  6ED9               	movwf	fsr2l,c
  7185  0195E2  6ADA               	clrf	fsr2h,c
  7186  0195E4  0E02               	movlw	2
  7187  0195E6  26D9               	addwf	fsr2l,f,c
  7188  0195E8  0E01               	movlw	1
  7189  0195EA                     L1:
  7190  0195EA  6EDF               	movwf	indf2,c
  7191  0195EC  D013               	goto	l1937
  7192  0195EE                     l10730:
  7193                           
  7194                           ;stkvar	_h @ sp[(0)+-1]
  7195  0195EE  0EFF               	movlw	-1
  7196  0195F0  50E3               	movf	plusw1,w,c
  7197  0195F2  6ED9               	movwf	fsr2l,c
  7198  0195F4  6ADA               	clrf	fsr2h,c
  7199  0195F6  0E01               	movlw	1
  7200  0195F8  26D9               	addwf	fsr2l,f,c
  7201  0195FA  50DF               	movf	indf2,w,c
  7202  0195FC  6E0B               	movwf	(btemp+10)^0,c
  7203  0195FE  6A0C               	clrf	(btemp+11)^0,c
  7204                           
  7205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7206                           ; Switch size 1, requested type "simple"
  7207                           ; Number of cases is 1, Range of values is 0 to 0
  7208                           ; switch strategies available:
  7209                           ; Name         Instructions Cycles
  7210                           ; simple_byte            4     3 (average)
  7211                           ;	Chosen strategy is simple_byte
  7212  019600  500C               	movf	(btemp+11)^0,w,c
  7213  019602  0A00               	xorlw	0	; case 0
  7214  019604  A4D8               	btfss	status,2,c
  7215  019606  D7BB               	goto	l10720
  7216                           
  7217                           ; Switch size 1, requested type "simple"
  7218                           ; Number of cases is 2, Range of values is 0 to 1
  7219                           ; switch strategies available:
  7220                           ; Name         Instructions Cycles
  7221                           ; simple_byte            7     4 (average)
  7222                           ;	Chosen strategy is simple_byte
  7223  019608  500B               	movf	(btemp+10)^0,w,c
  7224  01960A  0A00               	xorlw	0	; case 0
  7225  01960C  B4D8               	btfsc	status,2,c
  7226  01960E  D789               	goto	l10708
  7227  019610  0A01               	xorlw	1	; case 1
  7228  019612  D7B5               	goto	l10720
  7229  019614                     l1937:
  7230                           
  7231                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7232  019614  52E5               	movf	postdec1,f,c
  7233  019616  0012               	return		;funcret
  7234  019618                     __end_of_hid_display:
  7235                           	opt callstack 0
  7236                           
  7237 ;; *************** function _hid_input *****************
  7238 ;; Defined at:
  7239 ;;		line 3 in file "hid.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;  h               1  [STACK] PTR struct H_data
  7242 ;;		 -> H(7), 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1  [STACK] PTR struct H_data
  7247 ;; Registers used:
  7248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/1
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7258 ;;Total ram usage:        0 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:   16
  7261 ;; This function calls:
  7262 ;;		_get_switch
  7263 ;; This function is called by:
  7264 ;;		_hid_display
  7265 ;; This function uses a reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text14
  7269  01A188                     __ptext14:
  7270                           	opt callstack 0
  7271  01A188                     _hid_input:
  7272                           	opt callstack 13
  7273                           
  7274                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7275                           
  7276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7277                           ;incstack = 0
  7278  01A188  0E02               	movlw	2
  7279  01A18A  6EE6               	movwf	postinc1,c
  7280  01A18C  ECFC  F0D7         	call	_get_switch	;wreg free
  7281  01A190  5001               	movf	btemp^0,w,c
  7282  01A192  B4D8               	btfsc	status,2,c
  7283  01A194  D01C               	goto	l10256
  7284                           
  7285                           ;hid.c: 6:   h->wait_select = 0;
  7286                           ;stkvar	_h @ sp[(0)+-1]
  7287  01A196  0EFF               	movlw	-1
  7288  01A198  50E3               	movf	plusw1,w,c
  7289  01A19A  6ED9               	movwf	fsr2l,c
  7290  01A19C  6ADA               	clrf	fsr2h,c
  7291  01A19E  0E02               	movlw	2
  7292  01A1A0  26D9               	addwf	fsr2l,f,c
  7293  01A1A2  0E00               	movlw	0
  7294  01A1A4  6EDF               	movwf	indf2,c
  7295                           
  7296                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7297  01A1A6  0E02               	movlw	2
  7298  01A1A8  6EE6               	movwf	postinc1,c
  7299  01A1AA  ECFC  F0D7         	call	_get_switch	;wreg free
  7300  01A1AE  5001               	movf	btemp^0,w,c
  7301  01A1B0  B4D8               	btfsc	status,2,c
  7302  01A1B2  D003               	goto	u9400
  7303  01A1B4  6A0C               	clrf	(btemp+11)^0,c
  7304  01A1B6  2A0C               	incf	(btemp+11)^0,f,c
  7305  01A1B8  D001               	goto	u9418
  7306  01A1BA                     u9400:
  7307  01A1BA  6A0C               	clrf	(btemp+11)^0,c
  7308  01A1BC                     u9418:
  7309                           
  7310                           ;stkvar	_h @ sp[(0)+-1]
  7311  01A1BC  0EFF               	movlw	-1
  7312  01A1BE  50E3               	movf	plusw1,w,c
  7313  01A1C0  6ED9               	movwf	fsr2l,c
  7314  01A1C2  6ADA               	clrf	fsr2h,c
  7315  01A1C4  0E03               	movlw	3
  7316  01A1C6  26D9               	addwf	fsr2l,f,c
  7317  01A1C8  0060  F033  FFDF   	movff	btemp+11,indf2
  7318  01A1CE                     l10256:
  7319                           
  7320                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7321  01A1CE  0E03               	movlw	3
  7322  01A1D0  6EE6               	movwf	postinc1,c
  7323  01A1D2  ECFC  F0D7         	call	_get_switch	;wreg free
  7324  01A1D6  5001               	movf	btemp^0,w,c
  7325  01A1D8  B4D8               	btfsc	status,2,c
  7326  01A1DA  D01C               	goto	l1928
  7327                           
  7328                           ;hid.c: 11:   h->wait_enter = 0;
  7329                           ;stkvar	_h @ sp[(0)+-1]
  7330  01A1DC  0EFF               	movlw	-1
  7331  01A1DE  50E3               	movf	plusw1,w,c
  7332  01A1E0  6ED9               	movwf	fsr2l,c
  7333  01A1E2  6ADA               	clrf	fsr2h,c
  7334  01A1E4  0E04               	movlw	4
  7335  01A1E6  26D9               	addwf	fsr2l,f,c
  7336  01A1E8  0E00               	movlw	0
  7337  01A1EA  6EDF               	movwf	indf2,c
  7338                           
  7339                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7340  01A1EC  0E03               	movlw	3
  7341  01A1EE  6EE6               	movwf	postinc1,c
  7342  01A1F0  ECFC  F0D7         	call	_get_switch	;wreg free
  7343  01A1F4  5001               	movf	btemp^0,w,c
  7344  01A1F6  B4D8               	btfsc	status,2,c
  7345  01A1F8  D003               	goto	u9430
  7346  01A1FA  6A0C               	clrf	(btemp+11)^0,c
  7347  01A1FC  2A0C               	incf	(btemp+11)^0,f,c
  7348  01A1FE  D001               	goto	u9448
  7349  01A200                     u9430:
  7350  01A200  6A0C               	clrf	(btemp+11)^0,c
  7351  01A202                     u9448:
  7352                           
  7353                           ;stkvar	_h @ sp[(0)+-1]
  7354  01A202  0EFF               	movlw	-1
  7355  01A204  50E3               	movf	plusw1,w,c
  7356  01A206  6ED9               	movwf	fsr2l,c
  7357  01A208  6ADA               	clrf	fsr2h,c
  7358  01A20A  0E05               	movlw	5
  7359  01A20C  26D9               	addwf	fsr2l,f,c
  7360  01A20E  0060  F033  FFDF   	movff	btemp+11,indf2
  7361  01A214                     l1928:
  7362                           
  7363                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7364  01A214  52E5               	movf	postdec1,f,c
  7365  01A216  0012               	return		;funcret
  7366  01A218                     __end_of_hid_input:
  7367                           	opt callstack 0
  7368                           
  7369 ;; *************** function _get_switch *****************
  7370 ;; Defined at:
  7371 ;;		line 18 in file "dio.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;  i               1  [STACK] unsigned char 
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;		None
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  1  [STACK] enum E17021
  7378 ;; Registers used:
  7379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/2
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7389 ;;Total ram usage:        0 bytes
  7390 ;; Hardware stack levels used:    1
  7391 ;; Hardware stack levels required when called:   15
  7392 ;; This function calls:
  7393 ;;		Nothing
  7394 ;; This function is called by:
  7395 ;;		_main
  7396 ;;		_hid_input
  7397 ;; This function uses a reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text15
  7401  01AFF8                     __ptext15:
  7402                           	opt callstack 0
  7403  01AFF8                     _get_switch:
  7404                           	opt callstack 13
  7405                           
  7406                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7407                           ;stkvar	_i @ sp[(0)+-1]
  7408                           
  7409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7410                           ;incstack = 0
  7411  01AFF8  0EFF               	movlw	-1
  7412  01AFFA  006F FF8C  F001    	movff	plusw1,btemp
  7413  01B000  0E03               	movlw	3
  7414  01B002  6401               	cpfsgt	btemp^0,c
  7415  01B004  D002               	goto	l9528
  7416                           
  7417                           ;dio.c: 21:   return SW_OFF;
  7418  01B006  0E00               	movlw	0
  7419  01B008  D00A               	goto	L2
  7420  01B00A                     l9528:
  7421                           
  7422                           ;dio.c: 23:  return S.button[i].sw;
  7423                           ;stkvar	_i @ sp[(0)+-1]
  7424  01B00A  0EFF               	movlw	-1
  7425  01B00C  50E3               	movf	plusw1,w,c
  7426  01B00E  0D05               	mullw	5
  7427  01B010  0EBD               	movlw	low _S
  7428  01B012  24F3               	addwf	243,w,c
  7429  01B014  6ED9               	movwf	fsr2l,c
  7430  01B016  0E02               	movlw	high _S
  7431  01B018  20F4               	addwfc	prodh,w,c
  7432  01B01A  6EDA               	movwf	fsr2h,c
  7433  01B01C  50DF               	movf	indf2,w,c
  7434  01B01E                     L2:
  7435  01B01E  6E01               	movwf	btemp^0,c
  7436                           
  7437                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7438  01B020  52E5               	movf	postdec1,f,c
  7439  01B022  0012               	return		;funcret
  7440  01B024                     __end_of_get_switch:
  7441                           	opt callstack 0
  7442                           
  7443 ;; *************** function _esr_check *****************
  7444 ;; Defined at:
  7445 ;;		line 173 in file "bsoc.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  fsm             1  [STACK] unsigned char 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  4  [STACK] float 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7463 ;;Total ram usage:        0 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; Hardware stack levels required when called:   18
  7466 ;; This function calls:
  7467 ;;		_StartTimer
  7468 ;;		_TimerDone
  7469 ;;		___fldiv
  7470 ;;		___flsub
  7471 ;;		_conv_raw_result
  7472 ;;		_fabsf
  7473 ;;		_set_load_relay_one
  7474 ;;		_set_load_relay_two
  7475 ;;		_update_adc_result
  7476 ;; This function is called by:
  7477 ;;		_main
  7478 ;; This function uses a reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text16
  7482  0168D0                     __ptext16:
  7483                           	opt callstack 0
  7484  0168D0                     _esr_check:
  7485                           	opt callstack 12
  7486                           
  7487                           ;bsoc.c: 173: float esr_check(uint8_t fsm);bsoc.c: 174: {;bsoc.c: 175:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 177:  if (fsm) {
  7488                           ;stkvar	_fsm @ sp[(0)+-1]
  7489                           
  7490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7491                           ;incstack = 0
  7492  0168D0  0EFF               	movlw	-1
  7493  0168D2  50E3               	movf	plusw1,w,c
  7494  0168D4  B4D8               	btfsc	status,2,c
  7495  0168D6  D13E               	goto	l10646
  7496                           
  7497                           ;bsoc.c: 178:   esr_state = 0;
  7498  0168D8  6A2D               	clrf	esr_check@esr_state^0,c
  7499                           
  7500                           ;bsoc.c: 179:   return -10.0;
  7501  0168DA  0E00               	movlw	0
  7502  0168DC  6E01               	movwf	btemp^0,c
  7503  0168DE  0E00               	movlw	0
  7504  0168E0  6E02               	movwf	(btemp+1)^0,c
  7505  0168E2  0E20               	movlw	32
  7506  0168E4  6E03               	movwf	(btemp+2)^0,c
  7507  0168E6  0EC1               	movlw	193
  7508  0168E8  D150               	goto	L3
  7509  0168EA                     l10578:
  7510                           
  7511                           ;bsoc.c: 184:   StartTimer(TMR_ESR, 10000);
  7512  0168EA  0E10               	movlw	16
  7513  0168EC  6EE6               	movwf	postinc1,c
  7514  0168EE  0E27               	movlw	39
  7515  0168F0  6EE6               	movwf	postinc1,c
  7516  0168F2  0E0C               	movlw	12
  7517  0168F4  6EE6               	movwf	postinc1,c
  7518  0168F6  EC0E  F0D6         	call	_StartTimer	;wreg free
  7519  0168FA                     l10580:
  7520                           
  7521                           ;bsoc.c: 185:   esr_state++;
  7522  0168FA  2A2D               	incf	esr_check@esr_state^0,f,c
  7523                           
  7524                           ;bsoc.c: 186:   break;
  7525  0168FC  D13F               	goto	l10648
  7526  0168FE                     l10582:
  7527                           
  7528                           ;bsoc.c: 191:   set_load_relay_one(0);
  7529  0168FE  0E00               	movlw	0
  7530  016900  6EE6               	movwf	postinc1,c
  7531  016902  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  7532                           
  7533                           ;bsoc.c: 192:   set_load_relay_two(0);
  7534  016906  0E00               	movlw	0
  7535  016908  6EE6               	movwf	postinc1,c
  7536  01690A  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  7537                           
  7538                           ;bsoc.c: 193:   if (TimerDone(TMR_ESR)) {
  7539  01690E  0E0C               	movlw	12
  7540  016910  6EE6               	movwf	postinc1,c
  7541  016912  EC8F  F0D8         	call	_TimerDone	;wreg free
  7542  016916  5001               	movf	btemp^0,w,c
  7543  016918  B4D8               	btfsc	status,2,c
  7544  01691A  D009               	goto	l10588
  7545                           
  7546                           ;bsoc.c: 194:    StartTimer(TMR_ESR, 10000);
  7547  01691C  0E10               	movlw	16
  7548  01691E  6EE6               	movwf	postinc1,c
  7549  016920  0E27               	movlw	39
  7550  016922  6EE6               	movwf	postinc1,c
  7551  016924  0E0C               	movlw	12
  7552  016926  6EE6               	movwf	postinc1,c
  7553  016928  EC0E  F0D6         	call	_StartTimer	;wreg free
  7554                           
  7555                           ;bsoc.c: 195:   } else {
  7556  01692C  D006               	goto	l10592
  7557  01692E                     l10588:
  7558                           
  7559                           ;bsoc.c: 196:    return -2.0;
  7560  01692E  0E00               	movlw	0
  7561  016930  6E01               	movwf	btemp^0,c
  7562  016932  0E00               	movlw	0
  7563  016934  6E02               	movwf	(btemp+1)^0,c
  7564  016936  0E00               	movlw	0
  7565  016938  D066               	goto	L5
  7566  01693A                     l10592:
  7567                           
  7568                           ;bsoc.c: 201:   update_adc_result();
  7569  01693A  ECAD  F0D6         	call	_update_adc_result	;wreg free
  7570                           
  7571                           ;bsoc.c: 202:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7572  01693E  0E00               	movlw	0
  7573  016940  6EE6               	movwf	postinc1,c
  7574  016942  0E04               	movlw	4
  7575  016944  6EE6               	movwf	postinc1,c
  7576  016946  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7577  01694A  0060  F004  F1EB   	movff	btemp,_C+235	;volatile
  7578  016950  0060  F008  F1EC   	movff	btemp+1,_C+236	;volatile
  7579  016956  0060  F00C  F1ED   	movff	btemp+2,_C+237	;volatile
  7580  01695C  0060  F010  F1EE   	movff	btemp+3,_C+238	;volatile
  7581  016962  D7CB               	goto	l10580
  7582  016964                     l10598:
  7583                           
  7584                           ;bsoc.c: 206:   set_load_relay_one(1);
  7585  016964  0E01               	movlw	1
  7586  016966  6EE6               	movwf	postinc1,c
  7587  016968  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  7588                           
  7589                           ;bsoc.c: 207:   if (TimerDone(TMR_ESR)) {
  7590  01696C  0E0C               	movlw	12
  7591  01696E  6EE6               	movwf	postinc1,c
  7592  016970  EC8F  F0D8         	call	_TimerDone	;wreg free
  7593  016974  5001               	movf	btemp^0,w,c
  7594  016976  B4D8               	btfsc	status,2,c
  7595  016978  D009               	goto	l10604
  7596                           
  7597                           ;bsoc.c: 208:    StartTimer(TMR_ESR, 10000);
  7598  01697A  0E10               	movlw	16
  7599  01697C  6EE6               	movwf	postinc1,c
  7600  01697E  0E27               	movlw	39
  7601  016980  6EE6               	movwf	postinc1,c
  7602  016982  0E0C               	movlw	12
  7603  016984  6EE6               	movwf	postinc1,c
  7604  016986  EC0E  F0D6         	call	_StartTimer	;wreg free
  7605                           
  7606                           ;bsoc.c: 209:   } else {
  7607  01698A  D006               	goto	l10608
  7608  01698C                     l10604:
  7609                           
  7610                           ;bsoc.c: 210:    return -3.0;
  7611  01698C  0E00               	movlw	0
  7612  01698E  6E01               	movwf	btemp^0,c
  7613  016990  0E00               	movlw	0
  7614  016992  6E02               	movwf	(btemp+1)^0,c
  7615  016994  0E40               	movlw	64
  7616  016996  D037               	goto	L5
  7617  016998                     l10608:
  7618                           
  7619                           ;bsoc.c: 213:   update_adc_result();
  7620  016998  ECAD  F0D6         	call	_update_adc_result	;wreg free
  7621                           
  7622                           ;bsoc.c: 214:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7623  01699C  0E00               	movlw	0
  7624  01699E  6EE6               	movwf	postinc1,c
  7625  0169A0  0E04               	movlw	4
  7626  0169A2  6EE6               	movwf	postinc1,c
  7627  0169A4  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7628  0169A8  0060  F004  F1EF   	movff	btemp,_C+239	;volatile
  7629  0169AE  0060  F008  F1F0   	movff	btemp+1,_C+240	;volatile
  7630  0169B4  0060  F00C  F1F1   	movff	btemp+2,_C+241	;volatile
  7631  0169BA  0060  F010  F1F2   	movff	btemp+3,_C+242	;volatile
  7632                           
  7633                           ;bsoc.c: 215:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7634  0169C0  0E00               	movlw	0
  7635  0169C2  6EE6               	movwf	postinc1,c
  7636  0169C4  0E00               	movlw	0
  7637  0169C6  6EE6               	movwf	postinc1,c
  7638  0169C8  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7639  0169CC  0060  F004  F1E3   	movff	btemp,_C+227	;volatile
  7640  0169D2  0060  F008  F1E4   	movff	btemp+1,_C+228	;volatile
  7641  0169D8  0060  F00C  F1E5   	movff	btemp+2,_C+229	;volatile
  7642  0169DE  0060  F010  F1E6   	movff	btemp+3,_C+230	;volatile
  7643  0169E4  D78A               	goto	l10580
  7644  0169E6                     l10616:
  7645                           
  7646                           ;bsoc.c: 219:   set_load_relay_two(1);
  7647  0169E6  0E01               	movlw	1
  7648  0169E8  6EE6               	movwf	postinc1,c
  7649  0169EA  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  7650                           
  7651                           ;bsoc.c: 220:   if (!TimerDone(TMR_ESR))
  7652  0169EE  0E0C               	movlw	12
  7653  0169F0  6EE6               	movwf	postinc1,c
  7654  0169F2  EC8F  F0D8         	call	_TimerDone	;wreg free
  7655  0169F6  5001               	movf	btemp^0,w,c
  7656  0169F8  A4D8               	btfss	status,2,c
  7657  0169FA  D008               	goto	l10624
  7658                           
  7659                           ;bsoc.c: 221:    return -4.0;
  7660  0169FC  0E00               	movlw	0
  7661  0169FE  6E01               	movwf	btemp^0,c
  7662  016A00  0E00               	movlw	0
  7663  016A02  6E02               	movwf	(btemp+1)^0,c
  7664  016A04  0E80               	movlw	128
  7665  016A06                     L5:
  7666  016A06  6E03               	movwf	(btemp+2)^0,c
  7667  016A08  0EC0               	movlw	192
  7668  016A0A  D0BF               	goto	L3
  7669  016A0C                     l10624:
  7670                           
  7671                           ;bsoc.c: 223:   update_adc_result();
  7672  016A0C  ECAD  F0D6         	call	_update_adc_result	;wreg free
  7673                           
  7674                           ;bsoc.c: 224:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7675  016A10  0E00               	movlw	0
  7676  016A12  6EE6               	movwf	postinc1,c
  7677  016A14  0E04               	movlw	4
  7678  016A16  6EE6               	movwf	postinc1,c
  7679  016A18  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7680  016A1C  0060  F004  F1F3   	movff	btemp,_C+243	;volatile
  7681  016A22  0060  F008  F1F4   	movff	btemp+1,_C+244	;volatile
  7682  016A28  0060  F00C  F1F5   	movff	btemp+2,_C+245	;volatile
  7683  016A2E  0060  F010  F1F6   	movff	btemp+3,_C+246	;volatile
  7684                           
  7685                           ;bsoc.c: 225:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7686  016A34  0E00               	movlw	0
  7687  016A36  6EE6               	movwf	postinc1,c
  7688  016A38  0E00               	movlw	0
  7689  016A3A  6EE6               	movwf	postinc1,c
  7690  016A3C  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7691  016A40  0060  F004  F1E7   	movff	btemp,_C+231	;volatile
  7692  016A46  0060  F008  F1E8   	movff	btemp+1,_C+232	;volatile
  7693  016A4C  0060  F00C  F1E9   	movff	btemp+2,_C+233	;volatile
  7694  016A52  0060  F010  F1EA   	movff	btemp+3,_C+234	;volatile
  7695                           
  7696                           ;bsoc.c: 227:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7697  016A58  0060  F79F  FFE6   	movff	_C+231,postinc1
  7698  016A5E  0060  F7A3  FFE6   	movff	_C+232,postinc1
  7699  016A64  0060  F7A7  FFE6   	movff	_C+233,postinc1
  7700  016A6A  0060  F7AB  FFE6   	movff	_C+234,postinc1
  7701  016A70  0060  F78F  FFE6   	movff	_C+227,postinc1
  7702  016A76  0060  F793  FFE6   	movff	_C+228,postinc1
  7703  016A7C  0060  F797  FFE6   	movff	_C+229,postinc1
  7704  016A82  0060  F79B  FFE6   	movff	_C+230,postinc1
  7705  016A88  EC3F  F0D5         	call	___flsub	;wreg free
  7706  016A8C  0060  F007  FFE6   	movff	btemp,postinc1
  7707  016A92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7708  016A98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7709  016A9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  7710  016AA4  0060  F7CF  FFE6   	movff	_C+243,postinc1
  7711  016AAA  0060  F7D3  FFE6   	movff	_C+244,postinc1
  7712  016AB0  0060  F7D7  FFE6   	movff	_C+245,postinc1
  7713  016AB6  0060  F7DB  FFE6   	movff	_C+246,postinc1
  7714  016ABC  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7715  016AC2  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7716  016AC8  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7717  016ACE  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7718  016AD4  EC3F  F0D5         	call	___flsub	;wreg free
  7719  016AD8  0060  F007  FFE6   	movff	btemp,postinc1
  7720  016ADE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7721  016AE4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7722  016AEA  0060  F013  FFE6   	movff	btemp+3,postinc1
  7723  016AF0  EC9B  F0A4         	call	___fldiv	;wreg free
  7724  016AF4  0060  F007  FFE6   	movff	btemp,postinc1
  7725  016AFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7726  016B00  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7727  016B06  0060  F013  FFE6   	movff	btemp+3,postinc1
  7728  016B0C  ECF7  F0CD         	call	_fabsf	;wreg free
  7729  016B10  0060  F004  F184   	movff	btemp,_C+132	;volatile
  7730  016B16  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
  7731  016B1C  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
  7732  016B22  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
  7733                           
  7734                           ;bsoc.c: 228:   set_load_relay_one(0);
  7735  016B28  0E00               	movlw	0
  7736  016B2A  6EE6               	movwf	postinc1,c
  7737  016B2C  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  7738                           
  7739                           ;bsoc.c: 229:   set_load_relay_two(0);
  7740  016B30  0E00               	movlw	0
  7741  016B32  6EE6               	movwf	postinc1,c
  7742  016B34  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  7743                           
  7744                           ;bsoc.c: 230:   esr_state = 0;
  7745  016B38  6A2D               	clrf	esr_check@esr_state^0,c
  7746                           
  7747                           ;bsoc.c: 231:   return C.esr;
  7748  016B3A  0060  F610  F001   	movff	_C+132,btemp	;volatile
  7749  016B40  0060  F614  F002   	movff	_C+133,btemp+1	;volatile
  7750  016B46  0060  F618  F003   	movff	_C+134,btemp+2	;volatile
  7751  016B4C  0060  F61C  F004   	movff	_C+135,btemp+3	;volatile
  7752  016B52  D01C               	goto	l2041
  7753  016B54                     l10646:
  7754  016B54  502D               	movf	esr_check@esr_state^0,w,c
  7755  016B56  6E0B               	movwf	(btemp+10)^0,c
  7756  016B58  6A0C               	clrf	(btemp+11)^0,c
  7757                           
  7758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7759                           ; Switch size 1, requested type "simple"
  7760                           ; Number of cases is 1, Range of values is 0 to 0
  7761                           ; switch strategies available:
  7762                           ; Name         Instructions Cycles
  7763                           ; simple_byte            4     3 (average)
  7764                           ;	Chosen strategy is simple_byte
  7765  016B5A  500C               	movf	(btemp+11)^0,w,c
  7766  016B5C  0A00               	xorlw	0	; case 0
  7767  016B5E  A4D8               	btfss	status,2,c
  7768  016B60  D00D               	goto	l10648
  7769                           
  7770                           ; Switch size 1, requested type "simple"
  7771                           ; Number of cases is 4, Range of values is 0 to 3
  7772                           ; switch strategies available:
  7773                           ; Name         Instructions Cycles
  7774                           ; simple_byte           13     7 (average)
  7775                           ;	Chosen strategy is simple_byte
  7776  016B62  500B               	movf	(btemp+10)^0,w,c
  7777  016B64  0A00               	xorlw	0	; case 0
  7778  016B66  B4D8               	btfsc	status,2,c
  7779  016B68  D6C0               	goto	l10578
  7780  016B6A  0A01               	xorlw	1	; case 1
  7781  016B6C  B4D8               	btfsc	status,2,c
  7782  016B6E  D6C7               	goto	l10582
  7783  016B70  0A03               	xorlw	3	; case 2
  7784  016B72  B4D8               	btfsc	status,2,c
  7785  016B74  D6F7               	goto	l10598
  7786  016B76  0A01               	xorlw	1	; case 3
  7787  016B78  B4D8               	btfsc	status,2,c
  7788  016B7A  D735               	goto	l10616
  7789  016B7C                     l10648:
  7790                           
  7791                           ;bsoc.c: 236:  return -1.0;
  7792  016B7C  0E00               	movlw	0
  7793  016B7E  6E01               	movwf	btemp^0,c
  7794  016B80  0E00               	movlw	0
  7795  016B82  6E02               	movwf	(btemp+1)^0,c
  7796  016B84  0E80               	movlw	128
  7797  016B86  6E03               	movwf	(btemp+2)^0,c
  7798  016B88  0EBF               	movlw	191
  7799  016B8A                     L3:
  7800  016B8A  6E04               	movwf	(btemp+3)^0,c
  7801  016B8C                     l2041:
  7802                           
  7803                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7804  016B8C  52E5               	movf	postdec1,f,c
  7805  016B8E  0012               	return		;funcret
  7806  016B90                     __end_of_esr_check:
  7807                           	opt callstack 0
  7808                           
  7809 ;; *************** function _update_adc_result *****************
  7810 ;; Defined at:
  7811 ;;		line 71 in file "daq.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;		None
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;		None
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  1  [STACK] _Bool 
  7818 ;; Registers used:
  7819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7829 ;;Total ram usage:        0 bytes
  7830 ;; Hardware stack levels used:    1
  7831 ;; Hardware stack levels required when called:   17
  7832 ;; This function calls:
  7833 ;;		_StartTimer
  7834 ;;		_TimerDone
  7835 ;;		_check_adc_scan
  7836 ;;		_clear_adc_scan
  7837 ;;		_start_adc_scan
  7838 ;; This function is called by:
  7839 ;;		_esr_check
  7840 ;; This function uses a reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text17
  7844  01AD5A                     __ptext17:
  7845                           	opt callstack 0
  7846  01AD5A                     _update_adc_result:
  7847                           	opt callstack 12
  7848                           
  7849                           ;daq.c: 73:  if (R.done) {
  7850                           
  7851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7852                           ;incstack = 0
  7853  01AD5A  0100               	movlb	0	; () banked
  7854  01AD5C  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7855  01AD5E  B4D8               	btfsc	status,2,c
  7856  01AD60  0012               	return	
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;daq.c: 74:   clear_adc_scan();
  7860  01AD62  EC7B  F0DB         	call	_clear_adc_scan	;wreg free
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;daq.c: 75:   start_adc_scan();
  7864  01AD66  ECE6  F0D2         	call	_start_adc_scan	;wreg free
  7865                           
  7866                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7867  01AD6A  0EC8               	movlw	200
  7868  01AD6C  6EE6               	movwf	postinc1,c
  7869  01AD6E  0E00               	movlw	0
  7870  01AD70  6EE6               	movwf	postinc1,c
  7871  01AD72  0E01               	movlw	1
  7872  01AD74  6EE6               	movwf	postinc1,c
  7873  01AD76  EC0E  F0D6         	call	_StartTimer	;wreg free
  7874  01AD7A                     l10194:
  7875  01AD7A  0E01               	movlw	1
  7876  01AD7C  6EE6               	movwf	postinc1,c
  7877  01AD7E  EC8F  F0D8         	call	_TimerDone	;wreg free
  7878  01AD82  5001               	movf	btemp^0,w,c
  7879  01AD84  A4D8               	btfss	status,2,c
  7880  01AD86  0012               	return	
  7881  01AD88  EC6B  F0DB         	call	_check_adc_scan	;wreg free
  7882  01AD8C  5001               	movf	btemp^0,w,c
  7883  01AD8E  A4D8               	btfss	status,2,c
  7884  01AD90  0012               	return	
  7885  01AD92  D7F3               	goto	l10194
  7886  01AD94                     __end_of_update_adc_result:
  7887                           	opt callstack 0
  7888                           
  7889 ;; *************** function _start_adc_scan *****************
  7890 ;; Defined at:
  7891 ;;		line 32 in file "daq.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1  [STACK] _Bool 
  7898 ;; Registers used:
  7899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 1/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7909 ;;Total ram usage:        0 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:   16
  7912 ;; This function calls:
  7913 ;;		_ADCC_DischargeSampleCapacitor
  7914 ;;		_ADCC_SetADIInterruptHandler
  7915 ;;		_ADCC_SetADTIInterruptHandler
  7916 ;;		_ADCC_StartConversion
  7917 ;; This function is called by:
  7918 ;;		_main
  7919 ;;		_update_adc_result
  7920 ;; This function uses a reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text18
  7924  01A5CC                     __ptext18:
  7925                           	opt callstack 0
  7926  01A5CC                     _start_adc_scan:
  7927                           	opt callstack 14
  7928                           
  7929                           ;daq.c: 34:  if (R.done)
  7930                           
  7931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7932                           ;incstack = 0
  7933  01A5CC  0100               	movlb	0	; () banked
  7934  01A5CE  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7935  01A5D0  A4D8               	btfss	status,2,c
  7936  01A5D2  0012               	return	
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;daq.c: 37:  R.scan_index = 0;
  7940  01A5D4  6BE8               	clrf	(_R+36)& (0+255),b	;volatile
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7944  01A5D6  013A               	movlb	58	; () banked
  7945  01A5D8  5140               	movf	64,w,b	;volatile
  7946  01A5DA  006E F940  F001    	movff	14928,btemp	;volatile
  7947  01A5E0  6A02               	clrf	(btemp+1)^0,c
  7948  01A5E2  0060  F004  F002   	movff	btemp,btemp+1
  7949  01A5E8  6A01               	clrf	btemp^0,c
  7950  01A5EA  2601               	addwf	btemp^0,f,c
  7951  01A5EC  0E00               	movlw	0
  7952  01A5EE  2202               	addwfc	(btemp+1)^0,f,c
  7953  01A5F0  0E77               	movlw	119
  7954  01A5F2  1401               	andwf	btemp^0,w,c
  7955  01A5F4  0100               	movlb	0	; () banked
  7956  01A5F6  6FE9               	movwf	(_R+37)& (0+255),b	;volatile
  7957  01A5F8  0E3C               	movlw	60
  7958  01A5FA  1402               	andwf	(btemp+1)^0,w,c
  7959  01A5FC  6FEA               	movwf	(_R+38)& (0+255),b	;volatile
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7963  01A5FE  0E1E               	movlw	low _adc_int_handler
  7964  01A600  6EE6               	movwf	postinc1,c
  7965  01A602  0EB7               	movlw	high _adc_int_handler
  7966  01A604  6EE6               	movwf	postinc1,c
  7967  01A606  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7968  01A608  6EE6               	movwf	postinc1,c
  7969  01A60A  EC57  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7970                           
  7971                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7972  01A60E  0EA8               	movlw	low _adc_int_t_handler
  7973  01A610  6EE6               	movwf	postinc1,c
  7974  01A612  0EA3               	movlw	high _adc_int_t_handler
  7975  01A614  6EE6               	movwf	postinc1,c
  7976  01A616  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7977  01A618  6EE6               	movwf	postinc1,c
  7978  01A61A  EC43  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7979                           
  7980                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7981  01A61E  EC67  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7982                           
  7983                           ; BSR set to: 62
  7984                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7985  01A622  0100               	movlb	0	; () banked
  7986  01A624  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
  7987  01A626  0B0F               	andlw	15
  7988  01A628  6EE6               	movwf	postinc1,c
  7989  01A62A  EC0C  F0DB         	call	_ADCC_StartConversion	;wreg free
  7990                           
  7991                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7992  01A62E  0012               	return		;funcret
  7993  01A630                     __end_of_start_adc_scan:
  7994                           	opt callstack 0
  7995                           
  7996 ;; *************** function _ADCC_StartConversion *****************
  7997 ;; Defined at:
  7998 ;;		line 128 in file "mcc_generated_files/adcc.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  channel         1  [STACK] enum E16136
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;		None
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  1  [STACK] void 
  8005 ;; Registers used:
  8006 ;;		fsr1l, fsr1h
  8007 ;; Tracked objects:
  8008 ;;		On entry : 3F/0
  8009 ;;		On exit  : 3F/3E
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8016 ;;Total ram usage:        0 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:   15
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_start_adc_scan
  8023 ;;		_adc_int_t_handler
  8024 ;; This function uses a reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text19
  8028  01B618                     __ptext19:
  8029                           	opt callstack 0
  8030  01B618                     _ADCC_StartConversion:
  8031                           	opt callstack 0
  8032                           
  8033                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8034                           ;stkvar	_channel @ sp[(0)+-1]
  8035                           
  8036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8037                           ;incstack = 0
  8038 ;; hardware stack exceeded
  8039  01B618  0EFF               	movlw	-1
  8040  01B61A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8041                           
  8042                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8043  01B620  013E               	movlb	62	; () banked
  8044  01B622  8FF8               	bsf	248,7,b	;volatile
  8045                           
  8046                           ; BSR set to: 62
  8047                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8048  01B624  81F8               	bsf	248,0,b	;volatile
  8049                           
  8050                           ; BSR set to: 62
  8051                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8052  01B626  52E5               	movf	postdec1,f,c
  8053  01B628  0012               	return		;funcret
  8054  01B62A                     __end_of_ADCC_StartConversion:
  8055                           	opt callstack 0
  8056                           
  8057 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8058 ;; Defined at:
  8059 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;		None
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;		None
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1  [STACK] void 
  8066 ;; Registers used:
  8067 ;;		wreg, status,2
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 3F/3E
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8077 ;;Total ram usage:        0 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:   15
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_start_adc_scan
  8084 ;;		_adc_int_t_handler
  8085 ;; This function uses a reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text20
  8089  01B6CE                     __ptext20:
  8090                           	opt callstack 0
  8091  01B6CE                     _ADCC_DischargeSampleCapacitor:
  8092                           	opt callstack 0
  8093                           
  8094                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8095                           
  8096                           ; BSR set to: 62
  8097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8098                           ;incstack = 0
  8099 ;; hardware stack exceeded
  8100  01B6CE  0E3B               	movlw	59
  8101  01B6D0  013E               	movlb	62	; () banked
  8102  01B6D2  6FF1               	movwf	241,b	;volatile
  8103                           
  8104                           ; BSR set to: 62
  8105                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8106  01B6D4  0012               	return		;funcret
  8107  01B6D6                     __end_of_ADCC_DischargeSampleCapacitor:
  8108                           	opt callstack 0
  8109                           
  8110 ;; *************** function _clear_adc_scan *****************
  8111 ;; Defined at:
  8112 ;;		line 63 in file "daq.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;		None
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1  [STACK] void 
  8119 ;; Registers used:
  8120 ;;		None
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 3F/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8130 ;;Total ram usage:        0 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:   15
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_main
  8137 ;;		_update_adc_result
  8138 ;; This function uses a reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text21
  8142  01B6F6                     __ptext21:
  8143                           	opt callstack 0
  8144  01B6F6                     _clear_adc_scan:
  8145                           	opt callstack 13
  8146                           
  8147                           ;daq.c: 65:  R.done = 0;
  8148                           
  8149                           ; BSR set to: 62
  8150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8151                           ;incstack = 0
  8152  01B6F6  0100               	movlb	0	; () banked
  8153  01B6F8  6BEB               	clrf	(_R+39)& (0+255),b	;volatile
  8154                           
  8155                           ; BSR set to: 0
  8156                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8157  01B6FA  0012               	return		;funcret
  8158  01B6FC                     __end_of_clear_adc_scan:
  8159                           	opt callstack 0
  8160                           
  8161 ;; *************** function _check_adc_scan *****************
  8162 ;; Defined at:
  8163 ;;		line 55 in file "daq.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;		None
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1  [STACK] _Bool 
  8170 ;; Registers used:
  8171 ;;		btemp
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8181 ;;Total ram usage:        0 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:   15
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_main
  8188 ;;		_update_adc_result
  8189 ;; This function uses a reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text22
  8193  01B6D6                     __ptext22:
  8194                           	opt callstack 0
  8195  01B6D6                     _check_adc_scan:
  8196                           	opt callstack 13
  8197                           
  8198                           ;daq.c: 57:  return R.done;
  8199                           
  8200                           ; BSR set to: 0
  8201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8202                           ;incstack = 0
  8203  01B6D6  0060  F3AC  F001   	movff	_R+39,btemp	;volatile
  8204                           
  8205                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8206  01B6DC  0012               	return		;funcret
  8207  01B6DE                     __end_of_check_adc_scan:
  8208                           	opt callstack 0
  8209                           
  8210 ;; *************** function _set_load_relay_two *****************
  8211 ;; Defined at:
  8212 ;;		line 128 in file "mbmc.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  mode            1  [STACK] _Bool 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  1  [STACK] void 
  8219 ;; Registers used:
  8220 ;;		wreg, fsr1l, fsr1h
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8230 ;;Total ram usage:        0 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:   15
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		_main
  8237 ;;		_esr_check
  8238 ;; This function uses a reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text23
  8242  01B62A                     __ptext23:
  8243                           	opt callstack 0
  8244  01B62A                     _set_load_relay_two:
  8245                           	opt callstack 15
  8246                           
  8247                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  8248                           ;stkvar	_mode @ sp[(0)+-1]
  8249                           
  8250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8251                           ;incstack = 0
  8252  01B62A  0EFF               	movlw	-1
  8253  01B62C  B0E3               	btfsc	plusw1,0,c
  8254  01B62E  D002               	bra	u9045
  8255  01B630  9ABD               	bcf	189,5,c	;volatile
  8256  01B632  D001               	bra	u9046
  8257  01B634                     u9045:
  8258  01B634  8ABD               	bsf	189,5,c	;volatile
  8259  01B636                     u9046:
  8260                           
  8261                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8262  01B636  52E5               	movf	postdec1,f,c
  8263  01B638  0012               	return		;funcret
  8264  01B63A                     __end_of_set_load_relay_two:
  8265                           	opt callstack 0
  8266                           
  8267 ;; *************** function _set_load_relay_one *****************
  8268 ;; Defined at:
  8269 ;;		line 123 in file "mbmc.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  mode            1  [STACK] _Bool 
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1  [STACK] void 
  8276 ;; Registers used:
  8277 ;;		wreg, fsr1l, fsr1h
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8287 ;;Total ram usage:        0 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:   15
  8290 ;; This function calls:
  8291 ;;		Nothing
  8292 ;; This function is called by:
  8293 ;;		_main
  8294 ;;		_esr_check
  8295 ;; This function uses a reentrant model
  8296 ;;
  8297                           
  8298                           	psect	text24
  8299  01B63A                     __ptext24:
  8300                           	opt callstack 0
  8301  01B63A                     _set_load_relay_one:
  8302                           	opt callstack 15
  8303                           
  8304                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  8305                           ;stkvar	_mode @ sp[(0)+-1]
  8306                           
  8307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8308                           ;incstack = 0
  8309  01B63A  0EFF               	movlw	-1
  8310  01B63C  B0E3               	btfsc	plusw1,0,c
  8311  01B63E  D002               	bra	u9035
  8312  01B640  98BD               	bcf	189,4,c	;volatile
  8313  01B642  D001               	bra	u9036
  8314  01B644                     u9035:
  8315  01B644  88BD               	bsf	189,4,c	;volatile
  8316  01B646                     u9036:
  8317                           
  8318                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8319  01B646  52E5               	movf	postdec1,f,c
  8320  01B648  0012               	return		;funcret
  8321  01B64A                     __end_of_set_load_relay_one:
  8322                           	opt callstack 0
  8323                           
  8324 ;; *************** function _eaDogM_WriteCommand *****************
  8325 ;; Defined at:
  8326 ;;		line 175 in file "eadog.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  cmd             1  [STACK] const unsigned char 
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;		None
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1  [STACK] void 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8335 ;; Tracked objects:
  8336 ;;		On entry : 3F/3D
  8337 ;;		On exit  : 3F/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8344 ;;Total ram usage:        0 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; Hardware stack levels required when called:   25
  8347 ;; This function calls:
  8348 ;;		_send_lcd_cmd_dma
  8349 ;; This function is called by:
  8350 ;;		_main
  8351 ;; This function uses a reentrant model
  8352 ;;
  8353                           
  8354                           	psect	text25
  8355  01B65A                     __ptext25:
  8356                           	opt callstack 0
  8357  01B65A                     _eaDogM_WriteCommand:
  8358                           	opt callstack 5
  8359                           
  8360                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8361                           ;stkvar	_cmd @ sp[(0)+-1]
  8362                           
  8363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8364                           ;incstack = 0
  8365  01B65A  0EFF               	movlw	-1
  8366  01B65C  50E3               	movf	plusw1,w,c
  8367  01B65E  6EE6               	movwf	postinc1,c
  8368  01B660  EC31  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  8369                           
  8370                           ; BSR set to: 0
  8371                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8372  01B664  52E5               	movf	postdec1,f,c
  8373  01B666  0012               	return		;funcret
  8374  01B668                     __end_of_eaDogM_WriteCommand:
  8375                           	opt callstack 0
  8376                           
  8377 ;; *************** function _convert_adc_data *****************
  8378 ;; Defined at:
  8379 ;;		line 51 in file "mbmc.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;		None
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;  i               1  [STACK] unsigned char 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1  [STACK] void 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8397 ;;Total ram usage:        0 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:   18
  8400 ;; This function calls:
  8401 ;;		_conv_raw_result
  8402 ;;		_lp_filter
  8403 ;; This function is called by:
  8404 ;;		_main
  8405 ;; This function uses a reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text26
  8409  019B36                     __ptext26:
  8410                           	opt callstack 0
  8411  019B36                     _convert_adc_data:
  8412                           	opt callstack 0
  8413                           
  8414                           ; BSR set to: 0
  8415                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8416  019B36  52E6               	movf	postinc1,f,c
  8417                           
  8418                           ;mbmc.c: 53:  uint8_t i = 0;
  8419                           ;stkvar	_i @ sp[(-1)+0]
  8420                           
  8421                           ;incstack = 0
  8422  019B38  0EFF               	movlw	-1
  8423  019B3A  6AE3               	clrf	plusw1,c
  8424  019B3C                     l10658:
  8425                           
  8426                           ;mbmc.c: 56:   if (V.calib) {
  8427  019B3C  0102               	movlb	2	; () banked
  8428  019B3E  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  8429  019B40  B4D8               	btfsc	status,2,c
  8430  019B42  D01B               	goto	l10662
  8431                           
  8432                           ; BSR set to: 2
  8433                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8434  019B44  0E01               	movlw	1
  8435  019B46  6EE6               	movwf	postinc1,c
  8436                           
  8437                           ;stkvar	_i @ sp[(-2)+0]
  8438  019B48  0EFE               	movlw	-2
  8439  019B4A  50E3               	movf	plusw1,w,c
  8440  019B4C  6EE6               	movwf	postinc1,c
  8441  019B4E  0E01               	movlw	1
  8442  019B50  6EE6               	movwf	postinc1,c
  8443                           
  8444                           ;stkvar	_i @ sp[(-4)+0]
  8445  019B52  0EFC               	movlw	-4
  8446  019B54  50E3               	movf	plusw1,w,c
  8447  019B56  6EE6               	movwf	postinc1,c
  8448  019B58  EC58  F0A7         	call	_conv_raw_result	;wreg free
  8449  019B5C  0060  F007  FFE6   	movff	btemp,postinc1
  8450  019B62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8451  019B68  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8452  019B6E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8453  019B74  ECDC  F0BE         	call	_lp_filter	;wreg free
  8454  019B78  D01A               	goto	L6
  8455  019B7A                     l10662:
  8456                           
  8457                           ; BSR set to: 2
  8458                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8459  019B7A  0E00               	movlw	0
  8460  019B7C  6EE6               	movwf	postinc1,c
  8461                           
  8462                           ;stkvar	_i @ sp[(-2)+0]
  8463  019B7E  0EFE               	movlw	-2
  8464  019B80  50E3               	movf	plusw1,w,c
  8465  019B82  6EE6               	movwf	postinc1,c
  8466  019B84  0E00               	movlw	0
  8467  019B86  6EE6               	movwf	postinc1,c
  8468                           
  8469                           ;stkvar	_i @ sp[(-4)+0]
  8470  019B88  0EFC               	movlw	-4
  8471  019B8A  50E3               	movf	plusw1,w,c
  8472  019B8C  6EE6               	movwf	postinc1,c
  8473  019B8E  EC58  F0A7         	call	_conv_raw_result	;wreg free
  8474  019B92  0060  F007  FFE6   	movff	btemp,postinc1
  8475  019B98  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8476  019B9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8477  019BA4  0060  F013  FFE6   	movff	btemp+3,postinc1
  8478  019BAA  ECDC  F0BE         	call	_lp_filter	;wreg free
  8479  019BAE                     L6:
  8480                           
  8481                           ;stkvar	_i @ sp[(-1)+0]
  8482  019BAE  0EFF               	movlw	-1
  8483  019BB0  50E3               	movf	plusw1,w,c
  8484  019BB2  0D04               	mullw	4
  8485  019BB4  0E00               	movlw	low _C
  8486  019BB6  24F3               	addwf	243,w,c
  8487  019BB8  6ED9               	movwf	fsr2l,c
  8488  019BBA  0E01               	movlw	high _C
  8489  019BBC  20F4               	addwfc	prodh,w,c
  8490  019BBE  6EDA               	movwf	fsr2h,c
  8491  019BC0  0060  F007  FFDE   	movff	btemp,postinc2
  8492  019BC6  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8493  019BCC  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8494  019BD2  0060  F013  FFDE   	movff	btemp+3,postinc2
  8495                           
  8496                           ;mbmc.c: 61:  } while (++i < 16);
  8497                           ;stkvar	_i @ sp[(-1)+0]
  8498  019BD8  0EFF               	movlw	-1
  8499  019BDA  2AE3               	incf	plusw1,f,c
  8500  019BDC  0EFF               	movlw	-1
  8501  019BDE  006F FF8C  F001    	movff	plusw1,btemp
  8502  019BE4  0E0F               	movlw	15
  8503  019BE6  6401               	cpfsgt	btemp^0,c
  8504  019BE8  D7A9               	goto	l10658
  8505                           
  8506                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8507  019BEA  52E5               	movf	postdec1,f,c
  8508  019BEC  0012               	return		;funcret
  8509  019BEE                     __end_of_convert_adc_data:
  8510                           	opt callstack 0
  8511                           
  8512 ;; *************** function _clear_hid_pflags *****************
  8513 ;; Defined at:
  8514 ;;		line 51 in file "hid.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  h               1  [STACK] PTR struct H_data
  8517 ;;		 -> H(7), 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;		None
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1  [STACK] void 
  8522 ;; Registers used:
  8523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8524 ;; Tracked objects:
  8525 ;;		On entry : 3F/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8533 ;;Total ram usage:        0 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:   15
  8536 ;; This function calls:
  8537 ;;		Nothing
  8538 ;; This function is called by:
  8539 ;;		_main
  8540 ;; This function uses a reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text27
  8544  01B374                     __ptext27:
  8545                           	opt callstack 0
  8546  01B374                     _clear_hid_pflags:
  8547                           	opt callstack 15
  8548                           
  8549                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8550                           ;stkvar	_h @ sp[(0)+-1]
  8551                           
  8552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8553                           ;incstack = 0
  8554  01B374  0EFF               	movlw	-1
  8555  01B376  50E3               	movf	plusw1,w,c
  8556  01B378  6ED9               	movwf	fsr2l,c
  8557  01B37A  6ADA               	clrf	fsr2h,c
  8558  01B37C  0E03               	movlw	3
  8559  01B37E  26D9               	addwf	fsr2l,f,c
  8560  01B380  0E00               	movlw	0
  8561  01B382  6EDF               	movwf	indf2,c
  8562                           
  8563                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8564                           ;stkvar	_h @ sp[(0)+-1]
  8565  01B384  0EFF               	movlw	-1
  8566  01B386  50E3               	movf	plusw1,w,c
  8567  01B388  6ED9               	movwf	fsr2l,c
  8568  01B38A  6ADA               	clrf	fsr2h,c
  8569  01B38C  0E05               	movlw	5
  8570  01B38E  26D9               	addwf	fsr2l,f,c
  8571  01B390  0E00               	movlw	0
  8572  01B392  6EDF               	movwf	indf2,c
  8573                           
  8574                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8575  01B394  52E5               	movf	postdec1,f,c
  8576  01B396  0012               	return		;funcret
  8577  01B398                     __end_of_clear_hid_pflags:
  8578                           	opt callstack 0
  8579                           
  8580 ;; *************** function _check_help *****************
  8581 ;; Defined at:
  8582 ;;		line 40 in file "mconfig.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  flipper         1  [STACK] const _Bool 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  estatus         1    0        _Bool 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1  [STACK] _Bool 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8591 ;; Tracked objects:
  8592 ;;		On entry : 3F/2
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8600 ;;Total ram usage:        0 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:   27
  8603 ;; This function calls:
  8604 ;;		_StartTimer
  8605 ;;		_TimerDone
  8606 ;;		_display_help
  8607 ;;		_display_info
  8608 ;;		_get_vterm_ptr
  8609 ;;		_help_button
  8610 ;;		_mode_lamp_bright
  8611 ;;		_mode_lamp_dim
  8612 ;;		_set_display_info
  8613 ;;		_set_temp_display_help
  8614 ;;		_set_vterm
  8615 ;;		_sprintf
  8616 ;;		_update_lcd
  8617 ;;		_vterm_dump
  8618 ;; This function is called by:
  8619 ;;		_main
  8620 ;; This function uses a reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text28
  8624  0177A2                     __ptext28:
  8625                           	opt callstack 0
  8626  0177A2                     _check_help:
  8627                           	opt callstack 3
  8628                           
  8629                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8630                           
  8631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8632                           ;incstack = 0
  8633  0177A2  ECCA  F0D6         	call	_help_button	;wreg free
  8634  0177A6  5001               	movf	btemp^0,w,c
  8635  0177A8  B4D8               	btfsc	status,2,c
  8636  0177AA  D0D0               	goto	l12516
  8637  0177AC  EC6F  F0DB         	call	_display_info	;wreg free
  8638  0177B0  0401               	decf	btemp^0,w,c
  8639  0177B2  B4D8               	btfsc	status,2,c
  8640  0177B4  D0CB               	goto	l12516
  8641                           
  8642                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8643  0177B6  0EDC               	movlw	220
  8644  0177B8  6EE6               	movwf	postinc1,c
  8645  0177BA  0E05               	movlw	5
  8646  0177BC  6EE6               	movwf	postinc1,c
  8647  0177BE  0E0B               	movlw	11
  8648  0177C0  6EE6               	movwf	postinc1,c
  8649  0177C2  EC0E  F0D6         	call	_StartTimer	;wreg free
  8650                           
  8651                           ;mconfig.c: 48:   if (V.debug)
  8652  0177C6  0102               	movlb	2	; () banked
  8653  0177C8  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8654                           
  8655                           ; BSR set to: 2
  8656                           ;mconfig.c: 49:    vterm_dump();
  8657  0177CA  ECB8  F0C6         	call	_vterm_dump	;wreg free
  8658                           
  8659                           ;mconfig.c: 51:   set_vterm(1);
  8660  0177CE  0E01               	movlw	1
  8661  0177D0  6EE6               	movwf	postinc1,c
  8662  0177D2  EC56  F0DA         	call	_set_vterm	;wreg free
  8663                           
  8664                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8665  0177D6  EC6F  F0DB         	call	_display_info	;wreg free
  8666  0177DA  5001               	movf	btemp^0,w,c
  8667  0177DC  6EE6               	movwf	postinc1,c
  8668  0177DE  EC25  F0DB         	call	_set_temp_display_help	;wreg free
  8669                           
  8670                           ; BSR set to: 2
  8671                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8672  0177E2  0E01               	movlw	1
  8673  0177E4  6EE6               	movwf	postinc1,c
  8674  0177E6  EC65  F0DA         	call	_set_display_info	;wreg free
  8675                           
  8676                           ;mconfig.c: 54:   if (flipper) {
  8677                           ;stkvar	_flipper @ sp[(0)+-1]
  8678  0177EA  0EFF               	movlw	-1
  8679  0177EC  50E3               	movf	plusw1,w,c
  8680  0177EE  B4D8               	btfsc	status,2,c
  8681  0177F0  D019               	goto	l12502
  8682                           
  8683                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8684  0177F2  0EB1               	movlw	low STR_46
  8685  0177F4  6EE6               	movwf	postinc1,c
  8686  0177F6  0EFF               	movlw	high STR_46
  8687  0177F8  6EE6               	movwf	postinc1,c
  8688  0177FA  0E01               	movlw	low STR_48
  8689  0177FC  6EE6               	movwf	postinc1,c
  8690  0177FE  0EFE               	movlw	high STR_48
  8691  017800  6EE6               	movwf	postinc1,c
  8692  017802  0E01               	movlw	1
  8693  017804  6EE6               	movwf	postinc1,c
  8694  017806  0E00               	movlw	0
  8695  017808  6EE6               	movwf	postinc1,c
  8696  01780A  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8697  01780E  0060  F007  FFE6   	movff	btemp,postinc1
  8698  017814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8699  01781A  0E06               	movlw	6
  8700  01781C  6EE6               	movwf	postinc1,c
  8701  01781E  EC06  F0CA         	call	_sprintf	;wreg free
  8702                           
  8703                           ;mconfig.c: 56:   } else {
  8704  017822  D018               	goto	l1664
  8705  017824                     l12502:
  8706                           
  8707                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8708  017824  0EC7               	movlw	low STR_47
  8709  017826  6EE6               	movwf	postinc1,c
  8710  017828  0EFF               	movlw	high STR_47
  8711  01782A  6EE6               	movwf	postinc1,c
  8712  01782C  0E01               	movlw	low STR_48
  8713  01782E  6EE6               	movwf	postinc1,c
  8714  017830  0EFE               	movlw	high STR_48
  8715  017832  6EE6               	movwf	postinc1,c
  8716  017834  0E01               	movlw	1
  8717  017836  6EE6               	movwf	postinc1,c
  8718  017838  0E00               	movlw	0
  8719  01783A  6EE6               	movwf	postinc1,c
  8720  01783C  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8721  017840  0060  F007  FFE6   	movff	btemp,postinc1
  8722  017846  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8723  01784C  0E06               	movlw	6
  8724  01784E  6EE6               	movwf	postinc1,c
  8725  017850  EC06  F0CA         	call	_sprintf	;wreg free
  8726  017854                     l1664:
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8730  017854  0102               	movlb	2	; () banked
  8731  017856  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8732  017858  32E8               	rrcf	wreg,f,c
  8733  01785A  32E8               	rrcf	wreg,f,c
  8734  01785C  0B03               	andlw	3
  8735  01785E  0D24               	mullw	36
  8736  017860  0E12               	movlw	18
  8737  017862  26F3               	addwf	243,f,c
  8738  017864  0E00               	movlw	0
  8739  017866  22F4               	addwfc	244,f,c
  8740  017868  0E4B               	movlw	low _T
  8741  01786A  6E0B               	movwf	(btemp+10)^0,c
  8742  01786C  0EFB               	movlw	high _T
  8743  01786E  6E0C               	movwf	(btemp+11)^0,c
  8744  017870  50F3               	movf	243,w,c
  8745  017872  260B               	addwf	(btemp+10)^0,f,c
  8746  017874  50F4               	movf	244,w,c
  8747  017876  220C               	addwfc	(btemp+11)^0,f,c
  8748  017878  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8749  01787E  0060  F033  FFE6   	movff	btemp+11,postinc1
  8750  017884  0EBD               	movlw	low STR_50
  8751  017886  6EE6               	movwf	postinc1,c
  8752  017888  0EFF               	movlw	high STR_50
  8753  01788A  6EE6               	movwf	postinc1,c
  8754  01788C  0E01               	movlw	1
  8755  01788E  6EE6               	movwf	postinc1,c
  8756  017890  0E01               	movlw	1
  8757  017892  6EE6               	movwf	postinc1,c
  8758  017894  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8759  017898  0060  F007  FFE6   	movff	btemp,postinc1
  8760  01789E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8761  0178A4  0E06               	movlw	6
  8762  0178A6  6EE6               	movwf	postinc1,c
  8763  0178A8  EC06  F0CA         	call	_sprintf	;wreg free
  8764                           
  8765                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8766  0178AC  0102               	movlb	2	; () banked
  8767  0178AE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8768  0178B0  32E8               	rrcf	wreg,f,c
  8769  0178B2  32E8               	rrcf	wreg,f,c
  8770  0178B4  0B03               	andlw	3
  8771  0178B6  0D24               	mullw	36
  8772  0178B8  0E4B               	movlw	low _T
  8773  0178BA  6E0B               	movwf	(btemp+10)^0,c
  8774  0178BC  0EFB               	movlw	high _T
  8775  0178BE  6E0C               	movwf	(btemp+11)^0,c
  8776  0178C0  50F3               	movf	243,w,c
  8777  0178C2  260B               	addwf	(btemp+10)^0,f,c
  8778  0178C4  50F4               	movf	244,w,c
  8779  0178C6  220C               	addwfc	(btemp+11)^0,f,c
  8780  0178C8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8781  0178CE  0060  F033  FFE6   	movff	btemp+11,postinc1
  8782  0178D4  0EBD               	movlw	low STR_50
  8783  0178D6  6EE6               	movwf	postinc1,c
  8784  0178D8  0EFF               	movlw	high STR_50
  8785  0178DA  6EE6               	movwf	postinc1,c
  8786  0178DC  0E01               	movlw	1
  8787  0178DE  6EE6               	movwf	postinc1,c
  8788  0178E0  0E02               	movlw	2
  8789  0178E2  6EE6               	movwf	postinc1,c
  8790  0178E4  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8791  0178E8  0060  F007  FFE6   	movff	btemp,postinc1
  8792  0178EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8793  0178F4  0E06               	movlw	6
  8794  0178F6  6EE6               	movwf	postinc1,c
  8795  0178F8  EC06  F0CA         	call	_sprintf	;wreg free
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;mconfig.c: 61:   V.help_id++;
  8799  0178FC  EE20  F29B         	lfsr	2,_V+155	;volatile
  8800  017900  38DF               	swapf	223,w,c
  8801  017902  6E0C               	movwf	(btemp+11)^0,c
  8802  017904  320C               	rrcf	(btemp+11)^0,f,c
  8803  017906  300C               	rrcf	(btemp+11)^0,w,c
  8804  017908  0B03               	andlw	3
  8805  01790A  6E0C               	movwf	(btemp+11)^0,c
  8806  01790C  2A0C               	incf	(btemp+11)^0,f,c
  8807  01790E  3A0C               	swapf	(btemp+11)^0,f,c
  8808  017910  360C               	rlcf	(btemp+11)^0,f,c
  8809  017912  360C               	rlcf	(btemp+11)^0,f,c
  8810  017914  50DF               	movf	223,w,c
  8811  017916  180C               	xorwf	(btemp+11)^0,w,c
  8812  017918  0B3F               	andlw	-193
  8813  01791A  180C               	xorwf	(btemp+11)^0,w,c
  8814  01791C  6EDF               	movwf	223,c
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8818  01791E  0EB8               	movlw	184
  8819  017920  6EE6               	movwf	postinc1,c
  8820  017922  0E0B               	movlw	11
  8821  017924  6EE6               	movwf	postinc1,c
  8822  017926  0E09               	movlw	9
  8823  017928  6EE6               	movwf	postinc1,c
  8824  01792A  EC0E  F0D6         	call	_StartTimer	;wreg free
  8825                           
  8826                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8827  01792E  0EB8               	movlw	184
  8828  017930  6EE6               	movwf	postinc1,c
  8829  017932  0E0B               	movlw	11
  8830  017934  6EE6               	movwf	postinc1,c
  8831  017936  0E07               	movlw	7
  8832  017938  6EE6               	movwf	postinc1,c
  8833  01793A  EC0E  F0D6         	call	_StartTimer	;wreg free
  8834                           
  8835                           ;mconfig.c: 64:   mode_lamp_bright();
  8836  01793E  EC34  F0DB         	call	_mode_lamp_bright	;wreg free
  8837                           
  8838                           ;mconfig.c: 65:   update_lcd(1);
  8839  017942  0E01               	movlw	1
  8840  017944  6EE6               	movwf	postinc1,c
  8841  017946  ECF7  F0C8         	call	_update_lcd	;wreg free
  8842                           
  8843                           ;mconfig.c: 67:  } else {
  8844  01794A  D032               	goto	l1665
  8845  01794C                     l12516:
  8846                           
  8847                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8848  01794C  0E09               	movlw	9
  8849  01794E  6EE6               	movwf	postinc1,c
  8850  017950  EC8F  F0D8         	call	_TimerDone	;wreg free
  8851  017954  5001               	movf	btemp^0,w,c
  8852  017956  B4D8               	btfsc	status,2,c
  8853  017958  D02B               	goto	l1665
  8854                           
  8855                           ;mconfig.c: 69:    set_vterm(0);
  8856  01795A  0E00               	movlw	0
  8857  01795C  6EE6               	movwf	postinc1,c
  8858  01795E  EC56  F0DA         	call	_set_vterm	;wreg free
  8859                           
  8860                           ;mconfig.c: 70:    V.help = 0;
  8861  017962  0102               	movlb	2	; () banked
  8862  017964  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8863                           
  8864                           ; BSR set to: 2
  8865                           ;mconfig.c: 71:    set_display_info(display_help());
  8866  017966  EC73  F0DB         	call	_display_help	;wreg free
  8867  01796A  5001               	movf	btemp^0,w,c
  8868  01796C  6EE6               	movwf	postinc1,c
  8869  01796E  EC65  F0DA         	call	_set_display_info	;wreg free
  8870                           
  8871                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8872  017972  0060  FA57  FFE6   	movff	_V+149,postinc1
  8873  017978  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8874  01797E  ECC9  F0DA         	call	_mode_lamp_dim	;wreg free
  8875                           
  8876                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8877  017982  0E0B               	movlw	11
  8878  017984  6EE6               	movwf	postinc1,c
  8879  017986  EC8F  F0D8         	call	_TimerDone	;wreg free
  8880  01798A  5001               	movf	btemp^0,w,c
  8881  01798C  B4D8               	btfsc	status,2,c
  8882  01798E  D010               	goto	l1665
  8883                           
  8884                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8885  017990  0102               	movlb	2	; () banked
  8886  017992  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  8887  017994  A4D8               	btfss	status,2,c
  8888  017996  D002               	goto	u12030
  8889  017998  0E01               	movlw	1
  8890  01799A  D001               	goto	u12040
  8891  01799C                     u12030:
  8892  01799C  0E00               	movlw	0
  8893  01799E                     u12040:
  8894  01799E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  8895                           
  8896                           ; BSR set to: 2
  8897                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8898  0179A0  0EDC               	movlw	220
  8899  0179A2  6EE6               	movwf	postinc1,c
  8900  0179A4  0E05               	movlw	5
  8901  0179A6  6EE6               	movwf	postinc1,c
  8902  0179A8  0E0B               	movlw	11
  8903  0179AA  6EE6               	movwf	postinc1,c
  8904  0179AC  EC0E  F0D6         	call	_StartTimer	;wreg free
  8905  0179B0                     l1665:
  8906                           
  8907                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8908  0179B0  52E5               	movf	postdec1,f,c
  8909  0179B2  0012               	return		;funcret
  8910  0179B4                     __end_of_check_help:
  8911                           	opt callstack 0
  8912                           
  8913 ;; *************** function _vterm_dump *****************
  8914 ;; Defined at:
  8915 ;;		line 121 in file "mconfig.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;		None
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1  [STACK] void 
  8922 ;; Registers used:
  8923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8924 ;; Tracked objects:
  8925 ;;		On entry : 3F/2
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8933 ;;Total ram usage:        0 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:   26
  8936 ;; This function calls:
  8937 ;;		_WaitMs
  8938 ;;		_eaDogM_WriteStringAtPos
  8939 ;;		_get_vterm_ptr
  8940 ;;		_sprintf
  8941 ;;		_wait_lcd_done
  8942 ;; This function is called by:
  8943 ;;		_check_help
  8944 ;; This function uses a reentrant model
  8945 ;;
  8946                           
  8947                           	psect	text29
  8948  018D70                     __ptext29:
  8949                           	opt callstack 0
  8950  018D70                     _vterm_dump:
  8951                           	opt callstack 3
  8952                           
  8953                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8954                           
  8955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8956                           ;incstack = 0
  8957  018D70  0E01               	movlw	1
  8958  018D72  6EE6               	movwf	postinc1,c
  8959  018D74  0E00               	movlw	0
  8960  018D76  6EE6               	movwf	postinc1,c
  8961  018D78  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8962  018D7C  0060  F007  FFE6   	movff	btemp,postinc1
  8963  018D82  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8964  018D88  0E00               	movlw	0
  8965  018D8A  6EE6               	movwf	postinc1,c
  8966  018D8C  0E00               	movlw	0
  8967  018D8E  6EE6               	movwf	postinc1,c
  8968  018D90  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8969  018D94  0060  F007  FFE6   	movff	btemp,postinc1
  8970  018D9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8971  018DA0  0E93               	movlw	low STR_52
  8972  018DA2  6EE6               	movwf	postinc1,c
  8973  018DA4  0EFF               	movlw	high STR_52
  8974  018DA6  6EE6               	movwf	postinc1,c
  8975  018DA8  0E01               	movlw	low (_V+1)
  8976  018DAA  6EE6               	movwf	postinc1,c
  8977  018DAC  0E02               	movlw	high (_V+1)
  8978  018DAE  6EE6               	movwf	postinc1,c
  8979  018DB0  0E08               	movlw	8
  8980  018DB2  6EE6               	movwf	postinc1,c
  8981  018DB4  EC06  F0CA         	call	_sprintf	;wreg free
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;mconfig.c: 124:  wait_lcd_done();
  8985  018DB8  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8989  018DBC  0E01               	movlw	low (_V+1)
  8990  018DBE  6EE6               	movwf	postinc1,c
  8991  018DC0  0E02               	movlw	high (_V+1)
  8992  018DC2  6EE6               	movwf	postinc1,c
  8993  018DC4  0E00               	movlw	0
  8994  018DC6  6EE6               	movwf	postinc1,c
  8995  018DC8  0E00               	movlw	0
  8996  018DCA  6EE6               	movwf	postinc1,c
  8997  018DCC  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  8998                           
  8999                           ; BSR set to: 59
  9000                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9001  018DD0  0E01               	movlw	1
  9002  018DD2  6EE6               	movwf	postinc1,c
  9003  018DD4  0E01               	movlw	1
  9004  018DD6  6EE6               	movwf	postinc1,c
  9005  018DD8  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  9006  018DDC  0060  F007  FFE6   	movff	btemp,postinc1
  9007  018DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9008  018DE8  0E00               	movlw	0
  9009  018DEA  6EE6               	movwf	postinc1,c
  9010  018DEC  0E01               	movlw	1
  9011  018DEE  6EE6               	movwf	postinc1,c
  9012  018DF0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  9013  018DF4  0060  F007  FFE6   	movff	btemp,postinc1
  9014  018DFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9015  018E00  0E93               	movlw	low STR_52
  9016  018E02  6EE6               	movwf	postinc1,c
  9017  018E04  0EFF               	movlw	high STR_52
  9018  018E06  6EE6               	movwf	postinc1,c
  9019  018E08  0E01               	movlw	low (_V+1)
  9020  018E0A  6EE6               	movwf	postinc1,c
  9021  018E0C  0E02               	movlw	high (_V+1)
  9022  018E0E  6EE6               	movwf	postinc1,c
  9023  018E10  0E08               	movlw	8
  9024  018E12  6EE6               	movwf	postinc1,c
  9025  018E14  EC06  F0CA         	call	_sprintf	;wreg free
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;mconfig.c: 127:  wait_lcd_done();
  9029  018E18  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9030                           
  9031                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9032  018E1C  0E01               	movlw	low (_V+1)
  9033  018E1E  6EE6               	movwf	postinc1,c
  9034  018E20  0E02               	movlw	high (_V+1)
  9035  018E22  6EE6               	movwf	postinc1,c
  9036  018E24  0E00               	movlw	0
  9037  018E26  6EE6               	movwf	postinc1,c
  9038  018E28  0E01               	movlw	1
  9039  018E2A  6EE6               	movwf	postinc1,c
  9040  018E2C  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9041                           
  9042                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9043  018E30  0E01               	movlw	1
  9044  018E32  6EE6               	movwf	postinc1,c
  9045  018E34  0E02               	movlw	2
  9046  018E36  6EE6               	movwf	postinc1,c
  9047  018E38  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  9048  018E3C  0060  F007  FFE6   	movff	btemp,postinc1
  9049  018E42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9050  018E48  0E00               	movlw	0
  9051  018E4A  6EE6               	movwf	postinc1,c
  9052  018E4C  0E02               	movlw	2
  9053  018E4E  6EE6               	movwf	postinc1,c
  9054  018E50  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  9055  018E54  0060  F007  FFE6   	movff	btemp,postinc1
  9056  018E5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9057  018E60  0E93               	movlw	low STR_52
  9058  018E62  6EE6               	movwf	postinc1,c
  9059  018E64  0EFF               	movlw	high STR_52
  9060  018E66  6EE6               	movwf	postinc1,c
  9061  018E68  0E01               	movlw	low (_V+1)
  9062  018E6A  6EE6               	movwf	postinc1,c
  9063  018E6C  0E02               	movlw	high (_V+1)
  9064  018E6E  6EE6               	movwf	postinc1,c
  9065  018E70  0E08               	movlw	8
  9066  018E72  6EE6               	movwf	postinc1,c
  9067  018E74  EC06  F0CA         	call	_sprintf	;wreg free
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;mconfig.c: 130:  wait_lcd_done();
  9071  018E78  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9075  018E7C  0E01               	movlw	low (_V+1)
  9076  018E7E  6EE6               	movwf	postinc1,c
  9077  018E80  0E02               	movlw	high (_V+1)
  9078  018E82  6EE6               	movwf	postinc1,c
  9079  018E84  0E00               	movlw	0
  9080  018E86  6EE6               	movwf	postinc1,c
  9081  018E88  0E02               	movlw	2
  9082  018E8A  6EE6               	movwf	postinc1,c
  9083  018E8C  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9084                           
  9085                           ; BSR set to: 59
  9086                           ;mconfig.c: 132:  WaitMs(3000);
  9087  018E90  0EB8               	movlw	184
  9088  018E92  6EE6               	movwf	postinc1,c
  9089  018E94  0E0B               	movlw	11
  9090  018E96  6EE6               	movwf	postinc1,c
  9091  018E98  EC01  F0D7         	call	_WaitMs	;wreg free
  9092                           
  9093                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9094  018E9C  0012               	return		;funcret
  9095  018E9E                     __end_of_vterm_dump:
  9096                           	opt callstack 0
  9097                           
  9098 ;; *************** function _sprintf *****************
  9099 ;; Defined at:
  9100 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  s               2  [STACK] PTR unsigned char 
  9103 ;;		 -> D.lcd(288), D(290), port_data(512), V(189), 
  9104 ;;  fmt             2  [STACK] PTR const unsigned char 
  9105 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
  9106 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9107 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9108 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9109 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9110 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9111 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9112 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9113 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  9114 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
  9115 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9116 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9117 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9118 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9119 ;;		 -> STR_2(15), STR_1(17), 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;  f               6  [STACK] struct _IO_FILE
  9122 ;;  ap              2  [STACK] PTR void [1]
  9123 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9124 ;;  ret             2    0        int 
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  2  [STACK] int 
  9127 ;; Registers used:
  9128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/1
  9131 ;;		On exit  : 3F/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9138 ;;Total ram usage:        0 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:   23
  9141 ;; This function calls:
  9142 ;;		_vfprintf
  9143 ;; This function is called by:
  9144 ;;		_main
  9145 ;;		_check_help
  9146 ;;		_vterm_dump
  9147 ;;		_calc_bsoc
  9148 ;; This function uses a reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text30
  9152  01940C                     __ptext30:
  9153                           	opt callstack 0
  9154  01940C                     _sprintf:
  9155                           	opt callstack 0
  9156                           
  9157                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9158  01940C  0E08               	movlw	8
  9159  01940E  26E1               	addwf	fsr1l,f,c
  9160  019410  0E00               	movlw	0
  9161  019412  22E2               	addwfc	fsr1h,f,c
  9162                           
  9163                           ;incstack = 0
  9164 ;; hardware stack exceeded
  9165  019414  0EFE               	movlw	254
  9166  019416  6E0B               	movwf	(btemp+10)^0,c
  9167  019418  0EFF               	movlw	255
  9168  01941A  6E0C               	movwf	(btemp+11)^0,c
  9169                           
  9170                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9171  01941C  0EF5               	movlw	245
  9172  01941E  24E1               	addwf	fsr1l,w,c
  9173  019420  6E09               	movwf	(btemp+8)^0,c
  9174  019422  0EFF               	movlw	255
  9175  019424  20E2               	addwfc	fsr1h,w,c
  9176  019426  6E0A               	movwf	(btemp+9)^0,c
  9177  019428  500B               	movf	(btemp+10)^0,w,c
  9178  01942A  2609               	addwf	(btemp+8)^0,f,c
  9179  01942C  500C               	movf	(btemp+11)^0,w,c
  9180  01942E  220A               	addwfc	(btemp+9)^0,f,c
  9181                           
  9182                           ;stkvar	_ap @ sp[(-8)+6]
  9183  019430  0EFF               	movlw	-1
  9184  019432  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9185  019438  0EFE               	movlw	-2
  9186  01943A  0060  F027  FFE3   	movff	btemp+8,plusw1
  9187                           
  9188                           ;stkvar	_s @ sp[(-8)+-3]
  9189  019440  0EF5               	movlw	-11
  9190  019442  006F FF8C  F00B    	movff	plusw1,btemp+10
  9191  019448  0EF6               	movlw	-10
  9192  01944A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9193                           
  9194                           ;stkvar	_f @ sp[(-8)+0]
  9195  019450  0EF9               	movlw	-7
  9196  019452  0060  F033  FFE3   	movff	btemp+11,plusw1
  9197  019458  0EF8               	movlw	-8
  9198  01945A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9199                           
  9200                           ;stkvar	_f @ sp[(-8)+0]
  9201  019460  0EFA               	movlw	250
  9202  019462  24E1               	addwf	fsr1l,w,c
  9203  019464  6ED9               	movwf	fsr2l,c
  9204  019466  0EFF               	movlw	255
  9205  019468  20E2               	addwfc	fsr1h,w,c
  9206  01946A  6EDA               	movwf	fsr2h,c
  9207  01946C  0E00               	movlw	0
  9208  01946E  6EDE               	movwf	postinc2,c
  9209  019470  0E00               	movlw	0
  9210  019472  6EDD               	movwf	postdec2,c
  9211                           
  9212                           ;stkvar	_f @ sp[(-8)+0]
  9213  019474  0EFC               	movlw	252
  9214  019476  24E1               	addwf	fsr1l,w,c
  9215  019478  6ED9               	movwf	fsr2l,c
  9216  01947A  0EFF               	movlw	255
  9217  01947C  20E2               	addwfc	fsr1h,w,c
  9218  01947E  6EDA               	movwf	fsr2h,c
  9219  019480  0E00               	movlw	0
  9220  019482  6EDE               	movwf	postinc2,c
  9221  019484  0E00               	movlw	0
  9222  019486  6EDD               	movwf	postdec2,c
  9223                           
  9224                           ;stkvar	_ap @ sp[(-8)+6]
  9225  019488  0EFE               	movlw	254
  9226  01948A  24E1               	addwf	fsr1l,w,c
  9227  01948C  6E01               	movwf	btemp^0,c
  9228  01948E  0EFF               	movlw	255
  9229  019490  20E2               	addwfc	fsr1h,w,c
  9230  019492  6E02               	movwf	(btemp+1)^0,c
  9231  019494  0060  F007  FFE6   	movff	btemp,postinc1
  9232  01949A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9233                           
  9234                           ;stkvar	_fmt @ sp[(-10)+-5]
  9235  0194A0  0EF1               	movlw	-15
  9236  0194A2  006F FF8F FFE6     	movff	plusw1,postinc1
  9237  0194A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9238                           
  9239                           ;stkvar	_f @ sp[(-12)+0]
  9240  0194AE  0EF4               	movlw	244
  9241  0194B0  24E1               	addwf	fsr1l,w,c
  9242  0194B2  6E01               	movwf	btemp^0,c
  9243  0194B4  0EFF               	movlw	255
  9244  0194B6  20E2               	addwfc	fsr1h,w,c
  9245  0194B8  6E02               	movwf	(btemp+1)^0,c
  9246  0194BA  0060  F007  FFE6   	movff	btemp,postinc1
  9247  0194C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9248  0194C6  EC4E  F0CE         	call	_vfprintf	;wreg free
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;stkvar	_f @ sp[(-8)+0]
  9252  0194CA  0EFA               	movlw	250
  9253  0194CC  24E1               	addwf	fsr1l,w,c
  9254  0194CE  6ED9               	movwf	fsr2l,c
  9255  0194D0  0EFF               	movlw	255
  9256  0194D2  20E2               	addwfc	fsr1h,w,c
  9257  0194D4  6EDA               	movwf	fsr2h,c
  9258  0194D6  006F FF78  F00B    	movff	postinc2,btemp+10
  9259  0194DC  006F FF74  F00C    	movff	postdec2,btemp+11
  9260                           
  9261                           ;stkvar	_s @ sp[(-8)+-3]
  9262  0194E2  0EF5               	movlw	-11
  9263  0194E4  006F FF8C  F009    	movff	plusw1,btemp+8
  9264  0194EA  0EF6               	movlw	-10
  9265  0194EC  006F FF8C  F00A    	movff	plusw1,btemp+9
  9266  0194F2  500B               	movf	(btemp+10)^0,w,c
  9267  0194F4  2409               	addwf	(btemp+8)^0,w,c
  9268  0194F6  6ED9               	movwf	fsr2l,c
  9269  0194F8  500C               	movf	(btemp+11)^0,w,c
  9270  0194FA  200A               	addwfc	(btemp+9)^0,w,c
  9271  0194FC  6EDA               	movwf	fsr2h,c
  9272  0194FE  0E00               	movlw	0
  9273  019500  6EDF               	movwf	indf2,c
  9274                           
  9275                           ; BSR set to: 0
  9276                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  9277  019502  0EF8               	movlw	248
  9278  019504  26E1               	addwf	fsr1l,f,c
  9279  019506  0EFF               	movlw	255
  9280  019508  22E2               	addwfc	fsr1h,f,c
  9281  01950A  52E5               	movf	postdec1,f,c
  9282  01950C  50E7               	movf	indf1,w,c
  9283  01950E  5EE1               	subwf	fsr1l,f,c
  9284  019510  0E00               	movlw	0
  9285  019512  5AE2               	subwfb	fsr1h,f,c
  9286  019514  0012               	return		;funcret
  9287  019516                     __end_of_sprintf:
  9288                           	opt callstack 0
  9289                           
  9290 ;; *************** function _get_vterm_ptr *****************
  9291 ;; Defined at:
  9292 ;;		line 116 in file "mconfig.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  line            1  [STACK] const unsigned char 
  9295 ;;  vterm           1  [STACK] const unsigned char 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  2  [STACK] PTR unsigned char 
  9300 ;; Registers used:
  9301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/1
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:   15
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_main
  9318 ;;		_check_help
  9319 ;;		_vterm_dump
  9320 ;; This function uses a reentrant model
  9321 ;;
  9322                           
  9323                           	psect	text31
  9324  01AFCA                     __ptext31:
  9325                           	opt callstack 0
  9326  01AFCA                     _get_vterm_ptr:
  9327                           	opt callstack 15
  9328                           
  9329                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9330                           ;stkvar	_vterm @ sp[(0)+-2]
  9331                           
  9332                           ; BSR set to: 0
  9333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9334                           ;incstack = 0
  9335  01AFCA  0EFE               	movlw	-2
  9336  01AFCC  50E3               	movf	plusw1,w,c
  9337  01AFCE  0B03               	andlw	3
  9338  01AFD0  0D48               	mullw	72
  9339  01AFD2  0EFF               	movlw	low _D
  9340  01AFD4  6E01               	movwf	btemp^0,c
  9341  01AFD6  0E07               	movlw	high _D
  9342  01AFD8  6E02               	movwf	(btemp+1)^0,c
  9343  01AFDA  50F3               	movf	243,w,c
  9344  01AFDC  2601               	addwf	btemp^0,f,c
  9345  01AFDE  50F4               	movf	244,w,c
  9346  01AFE0  2202               	addwfc	(btemp+1)^0,f,c
  9347                           
  9348                           ;stkvar	_line @ sp[(0)+-1]
  9349  01AFE2  0EFF               	movlw	-1
  9350  01AFE4  50E3               	movf	plusw1,w,c
  9351  01AFE6  0B03               	andlw	3
  9352  01AFE8  0D18               	mullw	24
  9353  01AFEA  50F3               	movf	243,w,c
  9354  01AFEC  2601               	addwf	btemp^0,f,c
  9355  01AFEE  50F4               	movf	244,w,c
  9356  01AFF0  2202               	addwfc	(btemp+1)^0,f,c
  9357                           
  9358                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9359  01AFF2  52E5               	movf	postdec1,f,c
  9360  01AFF4  52E5               	movf	postdec1,f,c
  9361  01AFF6  0012               	return		;funcret
  9362  01AFF8                     __end_of_get_vterm_ptr:
  9363                           	opt callstack 0
  9364                           
  9365 ;; *************** function _WaitMs *****************
  9366 ;; Defined at:
  9367 ;;		line 32 in file "timers.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;  numMilliseco    2  [STACK] const unsigned short 
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;		None
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  1  [STACK] void 
  9374 ;; Registers used:
  9375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/2
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9385 ;;Total ram usage:        0 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; Hardware stack levels required when called:   16
  9388 ;; This function calls:
  9389 ;;		_StartTimer
  9390 ;;		_TimerDone
  9391 ;; This function is called by:
  9392 ;;		_main
  9393 ;;		_vterm_dump
  9394 ;; This function uses a reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text32
  9398  01AE02                     __ptext32:
  9399                           	opt callstack 0
  9400  01AE02                     _WaitMs:
  9401                           	opt callstack 12
  9402                           
  9403                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9404                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9405                           
  9406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9407                           ;incstack = 0
  9408  01AE02  0EFE               	movlw	-2
  9409  01AE04  006F FF8F FFE6     	movff	plusw1,postinc1
  9410  01AE0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9411  01AE10  0E00               	movlw	0
  9412  01AE12  6EE6               	movwf	postinc1,c
  9413  01AE14  EC0E  F0D6         	call	_StartTimer	;wreg free
  9414                           
  9415                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9416  01AE18  D005               	goto	l9466
  9417  01AE1A                     l1596:
  9418                           
  9419                           ;timers.c: 36:   __nop();
  9420  01AE1A  F000               	nop	
  9421                           
  9422                           ;timers.c: 37:   __nop();
  9423  01AE1C  F000               	nop	
  9424                           
  9425                           ;timers.c: 38:   __nop();
  9426  01AE1E  F000               	nop	
  9427                           
  9428                           ;timers.c: 39:   __nop();
  9429  01AE20  F000               	nop	
  9430  01AE22  0004               	clrwdt		;# 
  9431  01AE24                     l9466:
  9432                           
  9433                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9434  01AE24  0E00               	movlw	0
  9435  01AE26  6EE6               	movwf	postinc1,c
  9436  01AE28  EC8F  F0D8         	call	_TimerDone	;wreg free
  9437  01AE2C  5001               	movf	btemp^0,w,c
  9438  01AE2E  B4D8               	btfsc	status,2,c
  9439  01AE30  D7F4               	goto	l1596
  9440                           
  9441                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9442  01AE32  52E5               	movf	postdec1,f,c
  9443  01AE34  52E5               	movf	postdec1,f,c
  9444  01AE36  0012               	return		;funcret
  9445  01AE38                     __end_of_WaitMs:
  9446                           	opt callstack 0
  9447                           
  9448 ;; *************** function _update_lcd *****************
  9449 ;; Defined at:
  9450 ;;		line 85 in file "mconfig.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  vterm           1  [STACK] unsigned char 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1  [STACK] unsigned char 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;Total ram usage:        0 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; Hardware stack levels required when called:   26
  9471 ;; This function calls:
  9472 ;;		_eaDogM_WriteStringAtPos
  9473 ;;		_wait_lcd_done
  9474 ;; This function is called by:
  9475 ;;		_main
  9476 ;;		_check_help
  9477 ;; This function uses a reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text33
  9481  0191EE                     __ptext33:
  9482                           	opt callstack 0
  9483  0191EE                     _update_lcd:
  9484                           	opt callstack 4
  9485                           
  9486                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9487                           ;stkvar	_vterm @ sp[(0)+-1]
  9488                           
  9489                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9490                           ;incstack = 0
  9491  0191EE  0EFF               	movlw	-1
  9492  0191F0  006F FF8C  F001    	movff	plusw1,btemp
  9493  0191F6  0E03               	movlw	3
  9494  0191F8  1601               	andwf	btemp^0,f,c
  9495  0191FA  0EFF               	movlw	-1
  9496  0191FC  0060  F007  FFE3   	movff	btemp,plusw1
  9497                           
  9498                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9499  019202  EE22  F11F         	lfsr	2,_D+288
  9500  019206  A0DF               	btfss	indf2,0,c
  9501  019208  D004               	goto	l12316
  9502                           
  9503                           ;stkvar	_vterm @ sp[(0)+-1]
  9504  01920A  0EFF               	movlw	-1
  9505  01920C  50E3               	movf	plusw1,w,c
  9506  01920E  B4D8               	btfsc	status,2,c
  9507  019210  D074               	goto	l1672
  9508  019212                     l12316:
  9509                           
  9510                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9511                           ;stkvar	_vterm @ sp[(0)+-1]
  9512  019212  0EFF               	movlw	-1
  9513  019214  50E3               	movf	plusw1,w,c
  9514  019216  0D48               	mullw	72
  9515  019218  0E0F               	movlw	low (_D+16)
  9516  01921A  24F3               	addwf	243,w,c
  9517  01921C  6ED9               	movwf	fsr2l,c
  9518  01921E  0E08               	movlw	high (_D+16)
  9519  019220  20F4               	addwfc	prodh,w,c
  9520  019222  6EDA               	movwf	fsr2h,c
  9521  019224  0E00               	movlw	0
  9522  019226  6EDF               	movwf	indf2,c
  9523                           
  9524                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9525                           ;stkvar	_vterm @ sp[(0)+-1]
  9526  019228  0EFF               	movlw	-1
  9527  01922A  50E3               	movf	plusw1,w,c
  9528  01922C  0D48               	mullw	72
  9529  01922E  0E27               	movlw	low (_D+40)
  9530  019230  24F3               	addwf	243,w,c
  9531  019232  6ED9               	movwf	fsr2l,c
  9532  019234  0E08               	movlw	high (_D+40)
  9533  019236  20F4               	addwfc	prodh,w,c
  9534  019238  6EDA               	movwf	fsr2h,c
  9535  01923A  0E00               	movlw	0
  9536  01923C  6EDF               	movwf	indf2,c
  9537                           
  9538                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9539                           ;stkvar	_vterm @ sp[(0)+-1]
  9540  01923E  0EFF               	movlw	-1
  9541  019240  50E3               	movf	plusw1,w,c
  9542  019242  0D48               	mullw	72
  9543  019244  0E3F               	movlw	low (_D+64)
  9544  019246  24F3               	addwf	243,w,c
  9545  019248  6ED9               	movwf	fsr2l,c
  9546  01924A  0E08               	movlw	high (_D+64)
  9547  01924C  20F4               	addwfc	prodh,w,c
  9548  01924E  6EDA               	movwf	fsr2h,c
  9549  019250  0E00               	movlw	0
  9550  019252  6EDF               	movwf	indf2,c
  9551                           
  9552                           ;mconfig.c: 95:  wait_lcd_done();
  9553  019254  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9557                           ;stkvar	_vterm @ sp[(0)+-1]
  9558  019258  0EFF               	movlw	-1
  9559  01925A  50E3               	movf	plusw1,w,c
  9560  01925C  0D48               	mullw	72
  9561  01925E  0EFF               	movlw	low _D
  9562  019260  6E0B               	movwf	(btemp+10)^0,c
  9563  019262  0E07               	movlw	high _D
  9564  019264  6E0C               	movwf	(btemp+11)^0,c
  9565  019266  50F3               	movf	243,w,c
  9566  019268  260B               	addwf	(btemp+10)^0,f,c
  9567  01926A  50F4               	movf	244,w,c
  9568  01926C  220C               	addwfc	(btemp+11)^0,f,c
  9569  01926E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9570  019274  0060  F033  FFE6   	movff	btemp+11,postinc1
  9571  01927A  0E00               	movlw	0
  9572  01927C  6EE6               	movwf	postinc1,c
  9573  01927E  0E00               	movlw	0
  9574  019280  6EE6               	movwf	postinc1,c
  9575  019282  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9576                           
  9577                           ; BSR set to: 59
  9578                           ;mconfig.c: 97:  wait_lcd_done();
  9579  019286  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9583                           ;stkvar	_vterm @ sp[(0)+-1]
  9584  01928A  0EFF               	movlw	-1
  9585  01928C  50E3               	movf	plusw1,w,c
  9586  01928E  0D48               	mullw	72
  9587  019290  0EFF               	movlw	low _D
  9588  019292  6E0B               	movwf	(btemp+10)^0,c
  9589  019294  0E07               	movlw	high _D
  9590  019296  6E0C               	movwf	(btemp+11)^0,c
  9591  019298  0E18               	movlw	24
  9592  01929A  260B               	addwf	(btemp+10)^0,f,c
  9593  01929C  0E00               	movlw	0
  9594  01929E  220C               	addwfc	(btemp+11)^0,f,c
  9595  0192A0  50F3               	movf	243,w,c
  9596  0192A2  260B               	addwf	(btemp+10)^0,f,c
  9597  0192A4  50F4               	movf	244,w,c
  9598  0192A6  220C               	addwfc	(btemp+11)^0,f,c
  9599  0192A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9600  0192AE  0060  F033  FFE6   	movff	btemp+11,postinc1
  9601  0192B4  0E00               	movlw	0
  9602  0192B6  6EE6               	movwf	postinc1,c
  9603  0192B8  0E01               	movlw	1
  9604  0192BA  6EE6               	movwf	postinc1,c
  9605  0192BC  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9606                           
  9607                           ; BSR set to: 59
  9608                           ;mconfig.c: 99:  wait_lcd_done();
  9609  0192C0  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9613                           ;stkvar	_vterm @ sp[(0)+-1]
  9614  0192C4  0EFF               	movlw	-1
  9615  0192C6  50E3               	movf	plusw1,w,c
  9616  0192C8  0D48               	mullw	72
  9617  0192CA  0EFF               	movlw	low _D
  9618  0192CC  6E0B               	movwf	(btemp+10)^0,c
  9619  0192CE  0E07               	movlw	high _D
  9620  0192D0  6E0C               	movwf	(btemp+11)^0,c
  9621  0192D2  0E30               	movlw	48
  9622  0192D4  260B               	addwf	(btemp+10)^0,f,c
  9623  0192D6  0E00               	movlw	0
  9624  0192D8  220C               	addwfc	(btemp+11)^0,f,c
  9625  0192DA  50F3               	movf	243,w,c
  9626  0192DC  260B               	addwf	(btemp+10)^0,f,c
  9627  0192DE  50F4               	movf	244,w,c
  9628  0192E0  220C               	addwfc	(btemp+11)^0,f,c
  9629  0192E2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9630  0192E8  0060  F033  FFE6   	movff	btemp+11,postinc1
  9631  0192EE  0E00               	movlw	0
  9632  0192F0  6EE6               	movwf	postinc1,c
  9633  0192F2  0E02               	movlw	2
  9634  0192F4  6EE6               	movwf	postinc1,c
  9635  0192F6  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9636  0192FA                     l1672:
  9637                           
  9638                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9639  0192FA  52E5               	movf	postdec1,f,c
  9640  0192FC  0012               	return		;funcret
  9641  0192FE                     __end_of_update_lcd:
  9642                           	opt callstack 0
  9643                           
  9644 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9645 ;; Defined at:
  9646 ;;		line 278 in file "eadog.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  r               1  [STACK] const unsigned char 
  9649 ;;  c               1  [STACK] const unsigned char 
  9650 ;;  strPtr          2  [STACK] PTR unsigned char 
  9651 ;;		 -> D.lcd(288), D(290), V(189), 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;		None
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1  [STACK] void 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9658 ;; Tracked objects:
  9659 ;;		On entry : 3F/0
  9660 ;;		On exit  : 3F/3B
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9667 ;;Total ram usage:        0 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:   25
  9670 ;; This function calls:
  9671 ;;		_eaDogM_WriteString
  9672 ;;		_send_lcd_cmd_dma
  9673 ;; This function is called by:
  9674 ;;		_update_lcd
  9675 ;;		_vterm_dump
  9676 ;; This function uses a reentrant model
  9677 ;;
  9678                           
  9679                           	psect	text34
  9680  01AE38                     __ptext34:
  9681                           	opt callstack 0
  9682  01AE38                     _eaDogM_WriteStringAtPos:
  9683                           	opt callstack 4
  9684                           
  9685                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9686                           ;stkvar	_c @ sp[(0)+-2]
  9687                           
  9688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9689                           ;incstack = 0
  9690  01AE38  0EFE               	movlw	-2
  9691  01AE3A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9692                           
  9693                           ;stkvar	_r @ sp[(0)+-1]
  9694  01AE40  0EFF               	movlw	-1
  9695  01AE42  50E3               	movf	plusw1,w,c
  9696  01AE44  0D10               	mullw	16
  9697  01AE46  50F3               	movf	243,w,c
  9698  01AE48  240C               	addwf	(btemp+11)^0,w,c
  9699  01AE4A  0F80               	addlw	128
  9700  01AE4C  6EE6               	movwf	postinc1,c
  9701  01AE4E  EC31  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  9702                           
  9703                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9704                           ;stkvar	_strPtr @ sp[(0)+-4]
  9705  01AE52  0EFC               	movlw	-4
  9706  01AE54  006F FF8F FFE6     	movff	plusw1,postinc1
  9707  01AE5A  006F FF8F FFE6     	movff	plusw1,postinc1
  9708  01AE60  ECF9  F0CE         	call	_eaDogM_WriteString	;wreg free
  9709                           
  9710                           ; BSR set to: 59
  9711                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9712  01AE64  52E5               	movf	postdec1,f,c
  9713  01AE66  52E5               	movf	postdec1,f,c
  9714  01AE68  52E5               	movf	postdec1,f,c
  9715  01AE6A  52E5               	movf	postdec1,f,c
  9716  01AE6C  0012               	return		;funcret
  9717  01AE6E                     __end_of_eaDogM_WriteStringAtPos:
  9718                           	opt callstack 0
  9719                           
  9720 ;; *************** function _send_lcd_cmd_dma *****************
  9721 ;; Defined at:
  9722 ;;		line 220 in file "eadog.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;  strPtr          1  [STACK] unsigned char 
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;		None
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1  [STACK] void 
  9729 ;; Registers used:
  9730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/3D
  9733 ;;		On exit  : 3F/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9740 ;;Total ram usage:        0 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:   24
  9743 ;; This function calls:
  9744 ;;		_printf
  9745 ;;		_ringBufS_flush
  9746 ;;		_start_lcd
  9747 ;;		_wait_lcd_done
  9748 ;;		_wait_lcd_set
  9749 ;; This function is called by:
  9750 ;;		_eaDogM_WriteCommand
  9751 ;;		_eaDogM_WriteStringAtPos
  9752 ;; This function uses a reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text35
  9756  01A862                     __ptext35:
  9757                           	opt callstack 0
  9758  01A862                     _send_lcd_cmd_dma:
  9759                           	opt callstack 4
  9760                           
  9761                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9762                           
  9763                           ; BSR set to: 59
  9764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9765                           ;incstack = 0
  9766  01A862  EC7E  F0DB         	call	_wait_lcd_set	;wreg free
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9770  01A866  0E00               	movlw	0
  9771  01A868  6EE6               	movwf	postinc1,c
  9772  01A86A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9773  01A870  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9774  01A876  EC32  F0D0         	call	_ringBufS_flush	;wreg free
  9775  01A87A  92BC               	bcf	188,1,c	;volatile
  9776  01A87C  94BC               	bcf	188,2,c	;volatile
  9777                           
  9778                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9779  01A87E  013B               	movlb	59	; () banked
  9780  01A880  9FFC               	bcf	252,7,b	;volatile
  9781                           
  9782                           ; BSR set to: 59
  9783                           ;eadog.c: 229:  DMA1SSZ = 1;
  9784  01A882  0E00               	movlw	0
  9785  01A884  6FF8               	movwf	248,b	;volatile
  9786  01A886  0E01               	movlw	1
  9787  01A888  6FF7               	movwf	247,b	;volatile
  9788                           
  9789                           ; BSR set to: 59
  9790                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9791  01A88A  8FFC               	bsf	252,7,b	;volatile
  9792                           
  9793                           ; BSR set to: 59
  9794                           ;eadog.c: 231:  printf("%c", strPtr);
  9795                           ;stkvar	_strPtr @ sp[(0)+-1]
  9796  01A88C  0EFF               	movlw	-1
  9797  01A88E  50E3               	movf	plusw1,w,c
  9798  01A890  6EE6               	movwf	postinc1,c
  9799  01A892  0E00               	movlw	0
  9800  01A894  6EE6               	movwf	postinc1,c
  9801  01A896  0EF8               	movlw	low STR_44
  9802  01A898  6EE6               	movwf	postinc1,c
  9803  01A89A  0EFF               	movlw	high STR_44
  9804  01A89C  6EE6               	movwf	postinc1,c
  9805  01A89E  0E04               	movlw	4
  9806  01A8A0  6EE6               	movwf	postinc1,c
  9807  01A8A2  EC18  F0D3         	call	_printf	;wreg free
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;eadog.c: 232:  start_lcd();
  9811  01A8A6  EC81  F0DB         	call	_start_lcd	;wreg free
  9812                           
  9813                           ; BSR set to: 59
  9814                           ;eadog.c: 233:  wait_lcd_done();
  9815  01A8AA  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9816                           
  9817                           ; BSR set to: 0
  9818  01A8AE  82BC               	bsf	188,1,c	;volatile
  9819                           
  9820                           ; BSR set to: 0
  9821                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9822  01A8B0  52E5               	movf	postdec1,f,c
  9823  01A8B2  0012               	return		;funcret
  9824  01A8B4                     __end_of_send_lcd_cmd_dma:
  9825                           	opt callstack 0
  9826                           
  9827 ;; *************** function _wait_lcd_done *****************
  9828 ;; Defined at:
  9829 ;;		line 156 in file "eadog.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1  [STACK] void 
  9836 ;; Registers used:
  9837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 3F/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9847 ;;Total ram usage:        0 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:   16
  9850 ;; This function calls:
  9851 ;;		_wdtdelay
  9852 ;; This function is called by:
  9853 ;;		_send_lcd_cmd_dma
  9854 ;;		_update_lcd
  9855 ;;		_vterm_dump
  9856 ;; This function uses a reentrant model
  9857 ;;
  9858                           
  9859                           	psect	text36
  9860  01B524                     __ptext36:
  9861                           	opt callstack 0
  9862  01B524                     _wait_lcd_done:
  9863                           	opt callstack 13
  9864                           
  9865                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9866                           
  9867                           ; BSR set to: 0
  9868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9869                           ;incstack = 0
  9870  01B524  0100               	movlb	0	; () banked
  9871  01B526  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9872  01B528  D7FD               	goto	_wait_lcd_done
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;eadog.c: 159:  wdtdelay(50);
  9876  01B52A  0E32               	movlw	50
  9877  01B52C  6EE6               	movwf	postinc1,c
  9878  01B52E  0E00               	movlw	0
  9879  01B530  6EE6               	movwf	postinc1,c
  9880  01B532  0E00               	movlw	0
  9881  01B534  6EE6               	movwf	postinc1,c
  9882  01B536  0E00               	movlw	0
  9883  01B538  6EE6               	movwf	postinc1,c
  9884  01B53A  ECA9  F0D3         	call	_wdtdelay	;wreg free
  9885                           
  9886                           ; BSR set to: 0
  9887                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9888  01B53E  0012               	return		;funcret
  9889  01B540                     __end_of_wait_lcd_done:
  9890                           	opt callstack 0
  9891                           
  9892 ;; *************** function _wdtdelay *****************
  9893 ;; Defined at:
  9894 ;;		line 23 in file "eadog.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;  delay           4  [STACK] const unsigned long 
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1  [STACK] void 
  9901 ;; Registers used:
  9902 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 3F/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9912 ;;Total ram usage:        0 bytes
  9913 ;; Hardware stack levels used:    1
  9914 ;; Hardware stack levels required when called:   15
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_init_display
  9919 ;;		_send_lcd_cmd
  9920 ;;		_send_lcd_cmd_long
  9921 ;;		_wait_lcd_done
  9922 ;; This function uses a reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text37
  9926  01A752                     __ptext37:
  9927                           	opt callstack 0
  9928  01A752                     _wdtdelay:
  9929                           	opt callstack 13
  9930                           
  9931                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9932                           
  9933                           ; BSR set to: 0
  9934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9935                           ;incstack = 0
  9936  01A752  0100               	movlb	0	; () banked
  9937  01A754  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9938  01A756  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9939  01A758  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9940  01A75A  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9941  01A75C                     l1437:
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;eadog.c: 28:   __nop();
  9945  01A75C  F000               	nop	
  9946  01A75E  0004               	clrwdt		;# 
  9947                           
  9948                           ;eadog.c: 30:  };
  9949  01A760  0E01               	movlw	1
  9950  01A762  0100               	movlb	0	; () banked
  9951  01A764  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9952  01A766  0E00               	movlw	0
  9953  01A768  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9954  01A76A  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9955  01A76C  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;stkvar	_delay @ sp[(0)+-4]
  9959  01A76E  0EFC               	movlw	-4
  9960  01A770  006F FF8C  F001    	movff	plusw1,btemp
  9961  01A776  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9962  01A778  5C01               	subwf	btemp^0,w,c
  9963  01A77A  0EFD               	movlw	-3
  9964  01A77C  006F FF8C  F001    	movff	plusw1,btemp
  9965  01A782  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9966  01A784  5801               	subwfb	btemp^0,w,c
  9967  01A786  0EFE               	movlw	-2
  9968  01A788  006F FF8C  F001    	movff	plusw1,btemp
  9969  01A78E  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9970  01A790  5801               	subwfb	btemp^0,w,c
  9971  01A792  0EFF               	movlw	-1
  9972  01A794  006F FF8C  F001    	movff	plusw1,btemp
  9973  01A79A  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9974  01A79C  5801               	subwfb	btemp^0,w,c
  9975  01A79E  B0D8               	btfsc	status,0,c
  9976  01A7A0  D7DD               	goto	l1437
  9977                           
  9978                           ; BSR set to: 0
  9979                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9980  01A7A2  52E5               	movf	postdec1,f,c
  9981  01A7A4  52E5               	movf	postdec1,f,c
  9982  01A7A6  52E5               	movf	postdec1,f,c
  9983  01A7A8  52E5               	movf	postdec1,f,c
  9984  01A7AA  0012               	return		;funcret
  9985  01A7AC                     __end_of_wdtdelay:
  9986                           	opt callstack 0
  9987                           
  9988 ;; *************** function _eaDogM_WriteString *****************
  9989 ;; Defined at:
  9990 ;;		line 199 in file "eadog.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  strPtr          2  [STACK] PTR unsigned char 
  9993 ;;		 -> D.lcd(288), D(290), V(189), 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1  [STACK] void 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10000 ;; Tracked objects:
 10001 ;;		On entry : 3F/0
 10002 ;;		On exit  : 3F/3B
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10009 ;;Total ram usage:        0 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:   24
 10012 ;; This function calls:
 10013 ;;		_printf
 10014 ;;		_ringBufS_flush
 10015 ;;		_start_lcd
 10016 ;;		_strlen
 10017 ;;		_wait_lcd_set
 10018 ;; This function is called by:
 10019 ;;		_eaDogM_WriteStringAtPos
 10020 ;; This function uses a reentrant model
 10021 ;;
 10022                           
 10023                           	psect	text38
 10024  019DF2                     __ptext38:
 10025                           	opt callstack 0
 10026  019DF2                     _eaDogM_WriteString:
 10027                           	opt callstack 4
 10028                           
 10029                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10030                           
 10031                           ; BSR set to: 0
 10032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10033                           ;incstack = 0
 10034  019DF2  EC7E  F0DB         	call	_wait_lcd_set	;wreg free
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10038  019DF6  0E00               	movlw	0
 10039  019DF8  6EE6               	movwf	postinc1,c
 10040  019DFA  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10041  019E00  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10042  019E06  EC32  F0D0         	call	_ringBufS_flush	;wreg free
 10043  019E0A  94BC               	bcf	188,2,c	;volatile
 10044                           
 10045                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10046                           ;stkvar	_strPtr @ sp[(0)+-2]
 10047  019E0C  0EFE               	movlw	-2
 10048  019E0E  006F FF8F FFE6     	movff	plusw1,postinc1
 10049  019E14  006F FF8F FFE6     	movff	plusw1,postinc1
 10050  019E1A  EC4C  F0CF         	call	_strlen	;wreg free
 10051  019E1E  5002               	movf	(btemp+1)^0,w,c
 10052  019E20  E104               	bnz	u11840
 10053  019E22  0E41               	movlw	65
 10054  019E24  5C01               	subwf	btemp^0,w,c
 10055  019E26  A0D8               	btfss	status,0,c
 10056  019E28  D010               	goto	l12270
 10057  019E2A                     u11840:
 10058                           
 10059                           ;stkvar	_strPtr @ sp[(0)+-2]
 10060  019E2A  0EFE               	movlw	-2
 10061  019E2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10062  019E32  0EFF               	movlw	-1
 10063  019E34  006F FF8C  F00C    	movff	plusw1,btemp+11
 10064  019E3A  0E40               	movlw	64
 10065  019E3C  240B               	addwf	(btemp+10)^0,w,c
 10066  019E3E  6ED9               	movwf	fsr2l,c
 10067  019E40  0E00               	movlw	0
 10068  019E42  200C               	addwfc	(btemp+11)^0,w,c
 10069  019E44  6EDA               	movwf	fsr2h,c
 10070  019E46  0E00               	movlw	0
 10071  019E48  6EDF               	movwf	indf2,c
 10072  019E4A                     l12270:
 10073                           
 10074                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10075  019E4A  013B               	movlb	59	; () banked
 10076  019E4C  9FFC               	bcf	252,7,b	;volatile
 10077                           
 10078                           ; BSR set to: 59
 10079                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10080                           ;stkvar	_strPtr @ sp[(0)+-2]
 10081  019E4E  0EFE               	movlw	-2
 10082  019E50  006F FF8F FFE6     	movff	plusw1,postinc1
 10083  019E56  006F FF8F FFE6     	movff	plusw1,postinc1
 10084  019E5C  EC4C  F0CF         	call	_strlen	;wreg free
 10085  019E60  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10086  019E66  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10087                           
 10088                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10089  019E6C  013B               	movlb	59	; () banked
 10090  019E6E  8FFC               	bsf	252,7,b	;volatile
 10091                           
 10092                           ; BSR set to: 59
 10093                           ;eadog.c: 210:  printf("%s", strPtr);
 10094                           ;stkvar	_strPtr @ sp[(0)+-2]
 10095  019E70  0EFE               	movlw	-2
 10096  019E72  006F FF8F FFE6     	movff	plusw1,postinc1
 10097  019E78  006F FF8F FFE6     	movff	plusw1,postinc1
 10098  019E7E  0EFB               	movlw	low STR_43
 10099  019E80  6EE6               	movwf	postinc1,c
 10100  019E82  0EFF               	movlw	high STR_43
 10101  019E84  6EE6               	movwf	postinc1,c
 10102  019E86  0E04               	movlw	4
 10103  019E88  6EE6               	movwf	postinc1,c
 10104  019E8A  EC18  F0D3         	call	_printf	;wreg free
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;eadog.c: 211:  start_lcd();
 10108  019E8E  EC81  F0DB         	call	_start_lcd	;wreg free
 10109                           
 10110                           ; BSR set to: 59
 10111                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10112  019E92  52E5               	movf	postdec1,f,c
 10113  019E94  52E5               	movf	postdec1,f,c
 10114  019E96  0012               	return		;funcret
 10115  019E98                     __end_of_eaDogM_WriteString:
 10116                           	opt callstack 0
 10117                           
 10118 ;; *************** function _wait_lcd_set *****************
 10119 ;; Defined at:
 10120 ;;		line 146 in file "eadog.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;		None
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;		None
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1  [STACK] void 
 10127 ;; Registers used:
 10128 ;;		None
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/3D
 10131 ;;		On exit  : 3F/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10138 ;;Total ram usage:        0 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:   15
 10141 ;; This function calls:
 10142 ;;		Nothing
 10143 ;; This function is called by:
 10144 ;;		_eaDogM_WriteString
 10145 ;;		_send_lcd_cmd_dma
 10146 ;; This function uses a reentrant model
 10147 ;;
 10148                           
 10149                           	psect	text39
 10150  01B6FC                     __ptext39:
 10151                           	opt callstack 0
 10152  01B6FC                     _wait_lcd_set:
 10153                           	opt callstack 12
 10154                           
 10155                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10156                           
 10157                           ; BSR set to: 59
 10158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10159                           ;incstack = 0
 10160  01B6FC  0100               	movlb	0	; () banked
 10161  01B6FE  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10162                           
 10163                           ; BSR set to: 0
 10164                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10165  01B700  0012               	return		;funcret
 10166  01B702                     __end_of_wait_lcd_set:
 10167                           	opt callstack 0
 10168                           
 10169 ;; *************** function _start_lcd *****************
 10170 ;; Defined at:
 10171 ;;		line 141 in file "eadog.c"
 10172 ;; Parameters:    Size  Location     Type
 10173 ;;		None
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;		None
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  1  [STACK] void 
 10178 ;; Registers used:
 10179 ;;		None
 10180 ;; Tracked objects:
 10181 ;;		On entry : 3F/0
 10182 ;;		On exit  : 3F/3B
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10189 ;;Total ram usage:        0 bytes
 10190 ;; Hardware stack levels used:    1
 10191 ;; Hardware stack levels required when called:   15
 10192 ;; This function calls:
 10193 ;;		Nothing
 10194 ;; This function is called by:
 10195 ;;		_eaDogM_WriteString
 10196 ;;		_send_lcd_cmd_dma
 10197 ;; This function uses a reentrant model
 10198 ;;
 10199                           
 10200                           	psect	text40
 10201  01B702                     __ptext40:
 10202                           	opt callstack 0
 10203  01B702                     _start_lcd:
 10204                           	opt callstack 12
 10205                           
 10206                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10207                           
 10208                           ; BSR set to: 0
 10209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10210                           ;incstack = 0
 10211  01B702  013B               	movlb	59	; () banked
 10212  01B704  8DFC               	bsf	252,6,b	;volatile
 10213                           
 10214                           ; BSR set to: 59
 10215                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10216  01B706  0012               	return		;funcret
 10217  01B708                     __end_of_start_lcd:
 10218                           	opt callstack 0
 10219                           
 10220 ;; *************** function _ringBufS_flush *****************
 10221 ;; Defined at:
 10222 ;;		line 76 in file "ringbufs.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10225 ;;		 -> ring_buf1(67), 
 10226 ;;  clearBuffer     1  [STACK] const char 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1  [STACK] void 
 10231 ;; Registers used:
 10232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10233 ;; Tracked objects:
 10234 ;;		On entry : 3F/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;Total ram usage:        0 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:   16
 10245 ;; This function calls:
 10246 ;;		_memset
 10247 ;; This function is called by:
 10248 ;;		_eaDogM_WriteString
 10249 ;;		_send_lcd_cmd_dma
 10250 ;; This function uses a reentrant model
 10251 ;;
 10252                           
 10253                           	psect	text41
 10254  01A064                     __ptext41:
 10255                           	opt callstack 0
 10256  01A064                     _ringBufS_flush:
 10257                           	opt callstack 11
 10258                           
 10259                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10260                           ;stkvar	__this @ sp[(0)+-2]
 10261                           
 10262                           ; BSR set to: 59
 10263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10264                           ;incstack = 0
 10265  01A064  0EFE               	movlw	-2
 10266  01A066  006F FF8C  F00B    	movff	plusw1,btemp+10
 10267  01A06C  0EFF               	movlw	-1
 10268  01A06E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10269  01A074  0E42               	movlw	66
 10270  01A076  240B               	addwf	(btemp+10)^0,w,c
 10271  01A078  6ED9               	movwf	fsr2l,c
 10272  01A07A  0E00               	movlw	0
 10273  01A07C  200C               	addwfc	(btemp+11)^0,w,c
 10274  01A07E  6EDA               	movwf	fsr2h,c
 10275  01A080  0E00               	movlw	0
 10276  01A082  6EDF               	movwf	indf2,c
 10277                           
 10278                           ;ringbufs.c: 79:  _this->head = 0;
 10279                           ;stkvar	__this @ sp[(0)+-2]
 10280  01A084  0EFE               	movlw	-2
 10281  01A086  006F FF8C  F00B    	movff	plusw1,btemp+10
 10282  01A08C  0EFF               	movlw	-1
 10283  01A08E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10284  01A094  0E40               	movlw	64
 10285  01A096  240B               	addwf	(btemp+10)^0,w,c
 10286  01A098  6ED9               	movwf	fsr2l,c
 10287  01A09A  0E00               	movlw	0
 10288  01A09C  200C               	addwfc	(btemp+11)^0,w,c
 10289  01A09E  6EDA               	movwf	fsr2h,c
 10290  01A0A0  0E00               	movlw	0
 10291  01A0A2  6EDF               	movwf	indf2,c
 10292                           
 10293                           ;ringbufs.c: 80:  _this->tail = 0;
 10294                           ;stkvar	__this @ sp[(0)+-2]
 10295  01A0A4  0EFE               	movlw	-2
 10296  01A0A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10297  01A0AC  0EFF               	movlw	-1
 10298  01A0AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10299  01A0B4  0E41               	movlw	65
 10300  01A0B6  240B               	addwf	(btemp+10)^0,w,c
 10301  01A0B8  6ED9               	movwf	fsr2l,c
 10302  01A0BA  0E00               	movlw	0
 10303  01A0BC  200C               	addwfc	(btemp+11)^0,w,c
 10304  01A0BE  6EDA               	movwf	fsr2h,c
 10305  01A0C0  0E00               	movlw	0
 10306  01A0C2  6EDF               	movwf	indf2,c
 10307                           
 10308                           ;ringbufs.c: 81:  if (clearBuffer) {
 10309                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10310  01A0C4  0EFD               	movlw	-3
 10311  01A0C6  50E3               	movf	plusw1,w,c
 10312  01A0C8  B4D8               	btfsc	status,2,c
 10313  01A0CA  D011               	goto	l1581
 10314                           
 10315                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10316  01A0CC  0E40               	movlw	64
 10317  01A0CE  6EE6               	movwf	postinc1,c
 10318  01A0D0  0E00               	movlw	0
 10319  01A0D2  6EE6               	movwf	postinc1,c
 10320  01A0D4  0E00               	movlw	0
 10321  01A0D6  6EE6               	movwf	postinc1,c
 10322  01A0D8  0E00               	movlw	0
 10323  01A0DA  6EE6               	movwf	postinc1,c
 10324                           
 10325                           ;stkvar	__this @ sp[(-4)+-2]
 10326  01A0DC  0EFA               	movlw	-6
 10327  01A0DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10328  01A0E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10329  01A0EA  ECF2  F0B2         	call	_memset	;wreg free
 10330  01A0EE                     l1581:
 10331                           
 10332                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10333  01A0EE  52E5               	movf	postdec1,f,c
 10334  01A0F0  52E5               	movf	postdec1,f,c
 10335  01A0F2  52E5               	movf	postdec1,f,c
 10336  01A0F4  0012               	return		;funcret
 10337  01A0F6                     __end_of_ringBufS_flush:
 10338                           	opt callstack 0
 10339                           
 10340 ;; *************** function _memset *****************
 10341 ;; Defined at:
 10342 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  dest            2  [STACK] PTR void 
 10345 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10346 ;;  c               2  [STACK] int 
 10347 ;;  n               2  [STACK] unsigned int 
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;  s               2  [STACK] PTR unsigned char 
 10350 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10351 ;;  k               2  [STACK] unsigned int 
 10352 ;; Return value:  Size  Location     Type
 10353 ;;                  2  [STACK] PTR void 
 10354 ;; Registers used:
 10355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10356 ;; Tracked objects:
 10357 ;;		On entry : 0/0
 10358 ;;		On exit  : 0/0
 10359 ;;		Unchanged: 0/0
 10360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10365 ;;Total ram usage:        0 bytes
 10366 ;; Hardware stack levels used:    1
 10367 ;; Hardware stack levels required when called:   15
 10368 ;; This function calls:
 10369 ;;		Nothing
 10370 ;; This function is called by:
 10371 ;;		_ringBufS_init
 10372 ;;		_ringBufS_flush
 10373 ;; This function uses a reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text42
 10377  0165E4                     __ptext42:
 10378                           	opt callstack 0
 10379  0165E4                     _memset:
 10380                           	opt callstack 0
 10381                           
 10382                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10383  0165E4  52E6               	movf	postinc1,f,c
 10384  0165E6  52E6               	movf	postinc1,f,c
 10385  0165E8  52E6               	movf	postinc1,f,c
 10386  0165EA  52E6               	movf	postinc1,f,c
 10387                           
 10388                           ;stkvar	_dest @ sp[(-4)+-2]
 10389                           
 10390                           ;incstack = 0
 10391  0165EC  0EFA               	movlw	-6
 10392  0165EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 10393  0165F4  0EFB               	movlw	-5
 10394  0165F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10395                           
 10396                           ;stkvar	_s @ sp[(-4)+0]
 10397  0165FC  0EFD               	movlw	-3
 10398  0165FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10399  016604  0EFC               	movlw	-4
 10400  016606  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10401                           
 10402                           ;stkvar	_n @ sp[(-4)+-6]
 10403  01660C  0EF6               	movlw	-10
 10404  01660E  006F FF8C  F001    	movff	plusw1,btemp
 10405  016614  0EF7               	movlw	-9
 10406  016616  50E3               	movf	plusw1,w,c
 10407  016618  1001               	iorwf	btemp^0,w,c
 10408  01661A  B4D8               	btfsc	status,2,c
 10409  01661C  D154               	goto	u10450
 10410                           
 10411                           ;stkvar	_c @ sp[(-4)+-4]
 10412                           ;stkvar	_s @ sp[(-4)+0]
 10413  01661E  0EFC               	movlw	-4
 10414  016620  006F FF8F FFD9     	movff	plusw1,fsr2l
 10415  016626  0EFD               	movlw	-3
 10416  016628  006F FF8F FFDA     	movff	plusw1,fsr2h
 10417  01662E  0EF8               	movlw	-8
 10418  016630  006F FF8F FFDF     	movff	plusw1,indf2
 10419                           
 10420                           ;stkvar	_c @ sp[(-4)+-4]
 10421                           ;stkvar	_n @ sp[(-4)+-6]
 10422                           ;stkvar	_s @ sp[(-4)+0]
 10423  016636  0EFC               	movlw	-4
 10424  016638  006F FF8C  F00B    	movff	plusw1,btemp+10
 10425  01663E  0EFD               	movlw	-3
 10426  016640  006F FF8C  F00C    	movff	plusw1,btemp+11
 10427  016646  0EF6               	movlw	-10
 10428  016648  50E3               	movf	plusw1,w,c
 10429  01664A  260B               	addwf	(btemp+10)^0,f,c
 10430  01664C  0EF7               	movlw	-9
 10431  01664E  50E3               	movf	plusw1,w,c
 10432  016650  220C               	addwfc	(btemp+11)^0,f,c
 10433  016652  0EFF               	movlw	255
 10434  016654  240B               	addwf	(btemp+10)^0,w,c
 10435  016656  6ED9               	movwf	fsr2l,c
 10436  016658  0EFF               	movlw	255
 10437  01665A  200C               	addwfc	(btemp+11)^0,w,c
 10438  01665C  6EDA               	movwf	fsr2h,c
 10439  01665E  0EF8               	movlw	-8
 10440  016660  006F FF8F FFDF     	movff	plusw1,indf2
 10441                           
 10442                           ;stkvar	_n @ sp[(-4)+-6]
 10443  016666  0EF7               	movlw	-9
 10444  016668  50E3               	movf	plusw1,w,c
 10445  01666A  E108               	bnz	l11442
 10446  01666C  0EF6               	movlw	-10
 10447  01666E  006F FF8C  F001    	movff	plusw1,btemp
 10448  016674  0E03               	movlw	3
 10449  016676  5E01               	subwf	btemp^0,f,c
 10450  016678  A0D8               	btfss	status,0,c
 10451  01667A  D125               	goto	u10450
 10452  01667C                     l11442:
 10453                           
 10454                           ;stkvar	_c @ sp[(-4)+-4]
 10455                           ;stkvar	_s @ sp[(-4)+0]
 10456  01667C  0EFC               	movlw	-4
 10457  01667E  006F FF8C  F00B    	movff	plusw1,btemp+10
 10458  016684  0EFD               	movlw	-3
 10459  016686  006F FF8C  F00C    	movff	plusw1,btemp+11
 10460  01668C  0E01               	movlw	1
 10461  01668E  240B               	addwf	(btemp+10)^0,w,c
 10462  016690  6ED9               	movwf	fsr2l,c
 10463  016692  0E00               	movlw	0
 10464  016694  200C               	addwfc	(btemp+11)^0,w,c
 10465  016696  6EDA               	movwf	fsr2h,c
 10466  016698  0EF8               	movlw	-8
 10467  01669A  006F FF8F FFDF     	movff	plusw1,indf2
 10468                           
 10469                           ;stkvar	_c @ sp[(-4)+-4]
 10470                           ;stkvar	_s @ sp[(-4)+0]
 10471  0166A0  0EFC               	movlw	-4
 10472  0166A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10473  0166A8  0EFD               	movlw	-3
 10474  0166AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10475  0166B0  0E02               	movlw	2
 10476  0166B2  240B               	addwf	(btemp+10)^0,w,c
 10477  0166B4  6ED9               	movwf	fsr2l,c
 10478  0166B6  0E00               	movlw	0
 10479  0166B8  200C               	addwfc	(btemp+11)^0,w,c
 10480  0166BA  6EDA               	movwf	fsr2h,c
 10481  0166BC  0EF8               	movlw	-8
 10482  0166BE  006F FF8F FFDF     	movff	plusw1,indf2
 10483                           
 10484                           ;stkvar	_c @ sp[(-4)+-4]
 10485                           ;stkvar	_n @ sp[(-4)+-6]
 10486                           ;stkvar	_s @ sp[(-4)+0]
 10487  0166C4  0EFC               	movlw	-4
 10488  0166C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10489  0166CC  0EFD               	movlw	-3
 10490  0166CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10491  0166D4  0EF6               	movlw	-10
 10492  0166D6  50E3               	movf	plusw1,w,c
 10493  0166D8  260B               	addwf	(btemp+10)^0,f,c
 10494  0166DA  0EF7               	movlw	-9
 10495  0166DC  50E3               	movf	plusw1,w,c
 10496  0166DE  220C               	addwfc	(btemp+11)^0,f,c
 10497  0166E0  0EFE               	movlw	254
 10498  0166E2  240B               	addwf	(btemp+10)^0,w,c
 10499  0166E4  6ED9               	movwf	fsr2l,c
 10500  0166E6  0EFF               	movlw	255
 10501  0166E8  200C               	addwfc	(btemp+11)^0,w,c
 10502  0166EA  6EDA               	movwf	fsr2h,c
 10503  0166EC  0EF8               	movlw	-8
 10504  0166EE  006F FF8F FFDF     	movff	plusw1,indf2
 10505                           
 10506                           ;stkvar	_c @ sp[(-4)+-4]
 10507                           ;stkvar	_n @ sp[(-4)+-6]
 10508                           ;stkvar	_s @ sp[(-4)+0]
 10509  0166F4  0EFC               	movlw	-4
 10510  0166F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10511  0166FC  0EFD               	movlw	-3
 10512  0166FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10513  016704  0EF6               	movlw	-10
 10514  016706  50E3               	movf	plusw1,w,c
 10515  016708  260B               	addwf	(btemp+10)^0,f,c
 10516  01670A  0EF7               	movlw	-9
 10517  01670C  50E3               	movf	plusw1,w,c
 10518  01670E  220C               	addwfc	(btemp+11)^0,f,c
 10519  016710  0EFD               	movlw	253
 10520  016712  240B               	addwf	(btemp+10)^0,w,c
 10521  016714  6ED9               	movwf	fsr2l,c
 10522  016716  0EFF               	movlw	255
 10523  016718  200C               	addwfc	(btemp+11)^0,w,c
 10524  01671A  6EDA               	movwf	fsr2h,c
 10525  01671C  0EF8               	movlw	-8
 10526  01671E  006F FF8F FFDF     	movff	plusw1,indf2
 10527                           
 10528                           ;stkvar	_n @ sp[(-4)+-6]
 10529  016724  0EF7               	movlw	-9
 10530  016726  50E3               	movf	plusw1,w,c
 10531  016728  E108               	bnz	l11448
 10532  01672A  0EF6               	movlw	-10
 10533  01672C  006F FF8C  F001    	movff	plusw1,btemp
 10534  016732  0E07               	movlw	7
 10535  016734  5E01               	subwf	btemp^0,f,c
 10536  016736  A0D8               	btfss	status,0,c
 10537  016738  D0C6               	goto	u10450
 10538  01673A                     l11448:
 10539                           
 10540                           ;stkvar	_c @ sp[(-4)+-4]
 10541                           ;stkvar	_s @ sp[(-4)+0]
 10542  01673A  0EFC               	movlw	-4
 10543  01673C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10544  016742  0EFD               	movlw	-3
 10545  016744  006F FF8C  F00C    	movff	plusw1,btemp+11
 10546  01674A  0E03               	movlw	3
 10547  01674C  240B               	addwf	(btemp+10)^0,w,c
 10548  01674E  6ED9               	movwf	fsr2l,c
 10549  016750  0E00               	movlw	0
 10550  016752  200C               	addwfc	(btemp+11)^0,w,c
 10551  016754  6EDA               	movwf	fsr2h,c
 10552  016756  0EF8               	movlw	-8
 10553  016758  006F FF8F FFDF     	movff	plusw1,indf2
 10554                           
 10555                           ;stkvar	_c @ sp[(-4)+-4]
 10556                           ;stkvar	_n @ sp[(-4)+-6]
 10557                           ;stkvar	_s @ sp[(-4)+0]
 10558  01675E  0EFC               	movlw	-4
 10559  016760  006F FF8C  F00B    	movff	plusw1,btemp+10
 10560  016766  0EFD               	movlw	-3
 10561  016768  006F FF8C  F00C    	movff	plusw1,btemp+11
 10562  01676E  0EF6               	movlw	-10
 10563  016770  50E3               	movf	plusw1,w,c
 10564  016772  260B               	addwf	(btemp+10)^0,f,c
 10565  016774  0EF7               	movlw	-9
 10566  016776  50E3               	movf	plusw1,w,c
 10567  016778  220C               	addwfc	(btemp+11)^0,f,c
 10568  01677A  0EFC               	movlw	252
 10569  01677C  240B               	addwf	(btemp+10)^0,w,c
 10570  01677E  6ED9               	movwf	fsr2l,c
 10571  016780  0EFF               	movlw	255
 10572  016782  200C               	addwfc	(btemp+11)^0,w,c
 10573  016784  6EDA               	movwf	fsr2h,c
 10574  016786  0EF8               	movlw	-8
 10575  016788  006F FF8F FFDF     	movff	plusw1,indf2
 10576                           
 10577                           ;stkvar	_n @ sp[(-4)+-6]
 10578  01678E  0EF7               	movlw	-9
 10579  016790  50E3               	movf	plusw1,w,c
 10580  016792  E108               	bnz	l11454
 10581  016794  0EF6               	movlw	-10
 10582  016796  006F FF8C  F001    	movff	plusw1,btemp
 10583  01679C  0E09               	movlw	9
 10584  01679E  5E01               	subwf	btemp^0,f,c
 10585  0167A0  A0D8               	btfss	status,0,c
 10586  0167A2  D091               	goto	u10450
 10587  0167A4                     l11454:
 10588                           
 10589                           ;stkvar	_s @ sp[(-4)+0]
 10590  0167A4  0EFC               	movlw	-4
 10591  0167A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10592  0167AC  1E0B               	comf	(btemp+10)^0,f,c
 10593  0167AE  0EFD               	movlw	-3
 10594  0167B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 10595  0167B6  1E0C               	comf	(btemp+11)^0,f,c
 10596  0167B8  2A0B               	incf	(btemp+10)^0,f,c
 10597  0167BA  B4D8               	btfsc	status,2,c
 10598  0167BC  2A0C               	incf	(btemp+11)^0,f,c
 10599  0167BE  0E03               	movlw	3
 10600  0167C0  160B               	andwf	(btemp+10)^0,f,c
 10601  0167C2  0E00               	movlw	0
 10602  0167C4  160C               	andwf	(btemp+11)^0,f,c
 10603                           
 10604                           ;stkvar	_k @ sp[(-4)+2]
 10605  0167C6  0EFE               	movlw	-2
 10606  0167C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10607  0167CE  0EFF               	movlw	-1
 10608  0167D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 10609                           
 10610                           ;stkvar	_k @ sp[(-4)+2]
 10611                           ;stkvar	_s @ sp[(-4)+0]
 10612  0167D6  0EFC               	movlw	-4
 10613  0167D8  50E3               	movf	plusw1,w,c
 10614  0167DA  6E01               	movwf	btemp^0,c
 10615  0167DC  0EFE               	movlw	-2
 10616  0167DE  50E3               	movf	plusw1,w,c
 10617  0167E0  2601               	addwf	btemp^0,f,c
 10618  0167E2  0EFC               	movlw	-4
 10619  0167E4  0060  F007  FFE3   	movff	btemp,plusw1
 10620  0167EA  0EFD               	movlw	-3
 10621  0167EC  50E3               	movf	plusw1,w,c
 10622  0167EE  6E01               	movwf	btemp^0,c
 10623  0167F0  0EFF               	movlw	-1
 10624  0167F2  50E3               	movf	plusw1,w,c
 10625  0167F4  2201               	addwfc	btemp^0,f,c
 10626  0167F6  0EFD               	movlw	-3
 10627  0167F8  0060  F007  FFE3   	movff	btemp,plusw1
 10628                           
 10629                           ;stkvar	_k @ sp[(-4)+2]
 10630                           ;stkvar	_n @ sp[(-4)+-6]
 10631  0167FE  0EF6               	movlw	-10
 10632  016800  50E3               	movf	plusw1,w,c
 10633  016802  6E01               	movwf	btemp^0,c
 10634  016804  0EFE               	movlw	-2
 10635  016806  50E3               	movf	plusw1,w,c
 10636  016808  5E01               	subwf	btemp^0,f,c
 10637  01680A  0EF6               	movlw	-10
 10638  01680C  0060  F007  FFE3   	movff	btemp,plusw1
 10639  016812  0EF7               	movlw	-9
 10640  016814  50E3               	movf	plusw1,w,c
 10641  016816  6E01               	movwf	btemp^0,c
 10642  016818  0EFF               	movlw	-1
 10643  01681A  50E3               	movf	plusw1,w,c
 10644  01681C  5A01               	subwfb	btemp^0,f,c
 10645  01681E  0EF7               	movlw	-9
 10646  016820  0060  F007  FFE3   	movff	btemp,plusw1
 10647  016826  0EFC               	movlw	252
 10648  016828  6E0B               	movwf	(btemp+10)^0,c
 10649  01682A  0EFF               	movlw	255
 10650  01682C  6E0C               	movwf	(btemp+11)^0,c
 10651                           
 10652                           ;stkvar	_n @ sp[(-4)+-6]
 10653  01682E  0EF6               	movlw	-10
 10654  016830  006F FF8C  F001    	movff	plusw1,btemp
 10655  016836  500B               	movf	(btemp+10)^0,w,c
 10656  016838  1601               	andwf	btemp^0,f,c
 10657  01683A  0EF6               	movlw	-10
 10658  01683C  0060  F007  FFE3   	movff	btemp,plusw1
 10659  016842  0EF7               	movlw	-9
 10660  016844  006F FF8C  F001    	movff	plusw1,btemp
 10661  01684A  500C               	movf	(btemp+11)^0,w,c
 10662  01684C  1601               	andwf	btemp^0,f,c
 10663  01684E  0EF7               	movlw	-9
 10664  016850  D02E               	goto	L7
 10665  016852                     l11462:
 10666                           
 10667                           ;stkvar	_c @ sp[(-4)+-4]
 10668                           ;stkvar	_s @ sp[(-4)+0]
 10669  016852  0EFC               	movlw	-4
 10670  016854  006F FF8F FFD9     	movff	plusw1,fsr2l
 10671  01685A  0EFD               	movlw	-3
 10672  01685C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10673  016862  0EF8               	movlw	-8
 10674  016864  006F FF8F FFDF     	movff	plusw1,indf2
 10675                           
 10676                           ;stkvar	_n @ sp[(-4)+-6]
 10677  01686A  0EF6               	movlw	-10
 10678  01686C  006F FF8C  F001    	movff	plusw1,btemp
 10679  016872  0E01               	movlw	1
 10680  016874  5E01               	subwf	btemp^0,f,c
 10681  016876  0EF6               	movlw	-10
 10682  016878  0060  F007  FFE3   	movff	btemp,plusw1
 10683  01687E  0EF7               	movlw	-9
 10684  016880  006F FF8C  F001    	movff	plusw1,btemp
 10685  016886  0E00               	movlw	0
 10686  016888  5A01               	subwfb	btemp^0,f,c
 10687  01688A  0EF7               	movlw	-9
 10688  01688C  0060  F007  FFE3   	movff	btemp,plusw1
 10689                           
 10690                           ;stkvar	_s @ sp[(-4)+0]
 10691  016892  0EFC               	movlw	-4
 10692  016894  50E3               	movf	plusw1,w,c
 10693  016896  0F01               	addlw	1
 10694  016898  6E01               	movwf	btemp^0,c
 10695  01689A  0EFC               	movlw	-4
 10696  01689C  0060  F007  FFE3   	movff	btemp,plusw1
 10697  0168A2  6A01               	clrf	btemp^0,c
 10698  0168A4  0EFD               	movlw	-3
 10699  0168A6  50E3               	movf	plusw1,w,c
 10700  0168A8  2001               	addwfc	btemp^0,w,c
 10701  0168AA  6E01               	movwf	btemp^0,c
 10702  0168AC  0EFD               	movlw	-3
 10703  0168AE                     L7:
 10704  0168AE  0060  F007  FFE3   	movff	btemp,plusw1
 10705                           
 10706                           ;stkvar	_n @ sp[(-4)+-6]
 10707  0168B4  0EF6               	movlw	-10
 10708  0168B6  006F FF8C  F001    	movff	plusw1,btemp
 10709  0168BC  0EF7               	movlw	-9
 10710  0168BE  50E3               	movf	plusw1,w,c
 10711  0168C0  1001               	iorwf	btemp^0,w,c
 10712  0168C2  A4D8               	btfss	status,2,c
 10713  0168C4  D7C6               	goto	l11462
 10714  0168C6                     u10450:
 10715                           
 10716                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10717  0168C6  0EF6               	movlw	246
 10718  0168C8  26E1               	addwf	fsr1l,f,c
 10719  0168CA  0EFF               	movlw	255
 10720  0168CC  22E2               	addwfc	fsr1h,f,c
 10721  0168CE  0012               	return		;funcret
 10722  0168D0                     __end_of_memset:
 10723                           	opt callstack 0
 10724                           
 10725 ;; *************** function _printf *****************
 10726 ;; Defined at:
 10727 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;  fmt             2  [STACK] PTR const unsigned char 
 10730 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;  ap              2  [STACK] PTR void [1]
 10733 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10734 ;;  ret             2    0        int 
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  2  [STACK] int 
 10737 ;; Registers used:
 10738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10739 ;; Tracked objects:
 10740 ;;		On entry : 3F/3B
 10741 ;;		On exit  : 3F/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10748 ;;Total ram usage:        0 bytes
 10749 ;; Hardware stack levels used:    1
 10750 ;; Hardware stack levels required when called:   23
 10751 ;; This function calls:
 10752 ;;		_vfprintf
 10753 ;; This function is called by:
 10754 ;;		_eaDogM_WriteString
 10755 ;;		_send_lcd_cmd_dma
 10756 ;; This function uses a reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text43
 10760  01A630                     __ptext43:
 10761                           	opt callstack 0
 10762  01A630                     _printf:
 10763                           	opt callstack 0
 10764                           
 10765                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10766  01A630  52E6               	movf	postinc1,f,c
 10767  01A632  52E6               	movf	postinc1,f,c
 10768                           
 10769                           ;stkvar	?_printf @ sp[(-2)+-3]
 10770                           
 10771                           ;incstack = 0
 10772  01A634  0EFB               	movlw	251
 10773  01A636  24E1               	addwf	fsr1l,w,c
 10774  01A638  6E0B               	movwf	(btemp+10)^0,c
 10775  01A63A  0EFF               	movlw	255
 10776  01A63C  20E2               	addwfc	fsr1h,w,c
 10777  01A63E  6E0C               	movwf	(btemp+11)^0,c
 10778                           
 10779                           ;stkvar	_ap @ sp[(-2)+0]
 10780  01A640  0EFF               	movlw	-1
 10781  01A642  0060  F033  FFE3   	movff	btemp+11,plusw1
 10782  01A648  0EFE               	movlw	-2
 10783  01A64A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10784                           
 10785                           ;stkvar	_ap @ sp[(-2)+0]
 10786  01A650  0EFE               	movlw	254
 10787  01A652  24E1               	addwf	fsr1l,w,c
 10788  01A654  6E01               	movwf	btemp^0,c
 10789  01A656  0EFF               	movlw	255
 10790  01A658  20E2               	addwfc	fsr1h,w,c
 10791  01A65A  6E02               	movwf	(btemp+1)^0,c
 10792  01A65C  0060  F007  FFE6   	movff	btemp,postinc1
 10793  01A662  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10794                           
 10795                           ;stkvar	_fmt @ sp[(-4)+-3]
 10796  01A668  0EF9               	movlw	-7
 10797  01A66A  006F FF8F FFE6     	movff	plusw1,postinc1
 10798  01A670  006F FF8F FFE6     	movff	plusw1,postinc1
 10799  01A676  0E00               	movlw	0
 10800  01A678  6EE6               	movwf	postinc1,c
 10801  01A67A  0E00               	movlw	0
 10802  01A67C  6EE6               	movwf	postinc1,c
 10803  01A67E  EC4E  F0CE         	call	_vfprintf	;wreg free
 10804                           
 10805                           ; BSR set to: 0
 10806                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10807  01A682  52E5               	movf	postdec1,f,c
 10808  01A684  52E5               	movf	postdec1,f,c
 10809  01A686  52E5               	movf	postdec1,f,c
 10810  01A688  50E7               	movf	indf1,w,c
 10811  01A68A  5EE1               	subwf	fsr1l,f,c
 10812  01A68C  0E00               	movlw	0
 10813  01A68E  5AE2               	subwfb	fsr1h,f,c
 10814  01A690  0012               	return		;funcret
 10815  01A692                     __end_of_printf:
 10816                           	opt callstack 0
 10817                           
 10818 ;; *************** function _vfprintf *****************
 10819 ;; Defined at:
 10820 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10823 ;;		 -> f(6), NULL(0), 
 10824 ;;  fmt             2  [STACK] PTR const unsigned char 
 10825 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10826 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10827 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10828 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10829 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10830 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10831 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10832 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10833 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10834 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10835 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10836 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10837 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10838 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10839 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10840 ;;		 -> STR_1(17), 
 10841 ;;  ap              2  [STACK] PTR PTR void 
 10842 ;;		 -> ap(2), ap(2), 
 10843 ;; Auto vars:     Size  Location     Type
 10844 ;;  cfmt            2  [STACK] PTR unsigned char 
 10845 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10846 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10847 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10848 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10849 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10850 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10851 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10852 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10853 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10854 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10855 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10856 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10857 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10858 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10859 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10860 ;;		 -> STR_1(17), 
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  2  [STACK] int 
 10863 ;; Registers used:
 10864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/1
 10867 ;;		On exit  : 3F/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10874 ;;Total ram usage:        0 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; Hardware stack levels required when called:   22
 10877 ;; This function calls:
 10878 ;;		_vfpfcnvrt
 10879 ;; This function is called by:
 10880 ;;		_sprintf
 10881 ;;		_printf
 10882 ;; This function uses a reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text44
 10886  019C9C                     __ptext44:
 10887                           	opt callstack 0
 10888  019C9C                     _vfprintf:
 10889                           	opt callstack 0
 10890                           
 10891                           ; BSR set to: 0
 10892                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10893  019C9C  52E6               	movf	postinc1,f,c
 10894  019C9E  52E6               	movf	postinc1,f,c
 10895                           
 10896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10897                           ;stkvar	_fmt @ sp[(-2)+-4]
 10898                           
 10899                           ;incstack = 0
 10900 ;; hardware stack exceeded
 10901  019CA0  0EFA               	movlw	-6
 10902  019CA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10903  019CA8  0EFB               	movlw	-5
 10904  019CAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10905                           
 10906                           ;stkvar	_cfmt @ sp[(-2)+0]
 10907  019CB0  0EFF               	movlw	-1
 10908  019CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10909  019CB8  0EFE               	movlw	-2
 10910  019CBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10911                           
 10912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10913  019CC0  0100               	movlb	0	; () banked
 10914  019CC2  6BC0               	clrf	_nout& (0+255),b
 10915  019CC4  6BC1               	clrf	(_nout+1)& (0+255),b
 10916                           
 10917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10918  019CC6  D021               	goto	l12286
 10919  019CC8                     l12284:
 10920                           
 10921                           ; BSR set to: 0
 10922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10923                           ;stkvar	_ap @ sp[(-2)+-6]
 10924  019CC8  0EF8               	movlw	-8
 10925  019CCA  006F FF8F FFE6     	movff	plusw1,postinc1
 10926  019CD0  006F FF8F FFE6     	movff	plusw1,postinc1
 10927                           
 10928                           ;stkvar	_cfmt @ sp[(-4)+0]
 10929  019CD6  0EFC               	movlw	252
 10930  019CD8  24E1               	addwf	fsr1l,w,c
 10931  019CDA  6E01               	movwf	btemp^0,c
 10932  019CDC  0EFF               	movlw	255
 10933  019CDE  20E2               	addwfc	fsr1h,w,c
 10934  019CE0  6E02               	movwf	(btemp+1)^0,c
 10935  019CE2  0060  F007  FFE6   	movff	btemp,postinc1
 10936  019CE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10937                           
 10938                           ;stkvar	_fp @ sp[(-6)+-2]
 10939  019CEE  0EF8               	movlw	-8
 10940  019CF0  006F FF8F FFE6     	movff	plusw1,postinc1
 10941  019CF6  006F FF8F FFE6     	movff	plusw1,postinc1
 10942  019CFC  EC39  F091         	call	_vfpfcnvrt	;wreg free
 10943  019D00  5001               	movf	btemp^0,w,c
 10944  019D02  0100               	movlb	0	; () banked
 10945  019D04  27C0               	addwf	_nout& (0+255),f,b
 10946  019D06  5002               	movf	(btemp+1)^0,w,c
 10947  019D08  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10948  019D0A                     l12286:
 10949                           
 10950                           ; BSR set to: 0
 10951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10952                           ;stkvar	_cfmt @ sp[(-2)+0]
 10953  019D0A  50E1               	movf	fsr1l,w,c
 10954  019D0C  0FFE               	addlw	-2
 10955  019D0E  6ED9               	movwf	fsr2l,c
 10956  019D10  50E2               	movf	fsr1h,w,c
 10957  019D12  6EDA               	movwf	fsr2h,c
 10958  019D14  0EFF               	movlw	255
 10959  019D16  22DA               	addwfc	fsr2h,f,c
 10960  019D18  006F FF7B FFF6     	movff	postinc2,tblptrl
 10961  019D1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10962  019D24                     	if	0	;tblptru may be non-zero
 10963  019D24                     	endif
 10964  019D24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10965  019D24  0E00               	movlw	low (__mediumconst shr (0+16))
 10966  019D26  6EF8               	movwf	tblptru,c
 10967  019D28                     	endif
 10968  019D28  0008               	tblrd		*
 10969  019D2A  50F5               	movf	tablat,w,c
 10970  019D2C  0900               	iorlw	0
 10971  019D2E  A4D8               	btfss	status,2,c
 10972  019D30  D7CB               	goto	l12284
 10973                           
 10974                           ; BSR set to: 0
 10975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10976  019D32  0060  F300  F001   	movff	_nout,btemp
 10977  019D38  0060  F304  F002   	movff	_nout+1,btemp+1
 10978                           
 10979                           ; BSR set to: 0
 10980                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10981  019D3E  0EF8               	movlw	248
 10982  019D40  26E1               	addwf	fsr1l,f,c
 10983  019D42  0EFF               	movlw	255
 10984  019D44  22E2               	addwfc	fsr1h,f,c
 10985  019D46  0012               	return		;funcret
 10986  019D48                     __end_of_vfprintf:
 10987                           	opt callstack 0
 10988                           
 10989 ;; *************** function _vfpfcnvrt *****************
 10990 ;; Defined at:
 10991 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10994 ;;		 -> f(6), NULL(0), 
 10995 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10996 ;;		 -> cfmt(2), 
 10997 ;;  ap              2  [STACK] PTR PTR void 
 10998 ;;		 -> ap(2), ap(2), 
 10999 ;; Auto vars:     Size  Location     Type
 11000 ;;  llu             8  [STACK] unsigned long long 
 11001 ;;  ll              8  [STACK] long long 
 11002 ;;  f               4  [STACK] long long 
 11003 ;;  ct              3  [STACK] unsigned char [3]
 11004 ;;  vp              3    0        PTR void 
 11005 ;;  cp              2  [STACK] PTR unsigned char 
 11006 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11007 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 11008 ;;		 -> V(189), 
 11009 ;;  i               2    0        int 
 11010 ;;  done            2    0        int 
 11011 ;;  c               1  [STACK] unsigned char 
 11012 ;; Return value:  Size  Location     Type
 11013 ;;                  2  [STACK] int 
 11014 ;; Registers used:
 11015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11016 ;; Tracked objects:
 11017 ;;		On entry : 0/0
 11018 ;;		On exit  : 0/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11025 ;;Total ram usage:        0 bytes
 11026 ;; Hardware stack levels used:    1
 11027 ;; Hardware stack levels required when called:   21
 11028 ;; This function calls:
 11029 ;;		_atoi
 11030 ;;		_ctoa
 11031 ;;		_dtoa
 11032 ;;		_efgtoa
 11033 ;;		_fputc
 11034 ;;		_isdigit
 11035 ;;		_isupper
 11036 ;;		_stoa
 11037 ;;		_strncmp
 11038 ;;		_tolower
 11039 ;;		_utoa
 11040 ;;		_xtoa
 11041 ;; This function is called by:
 11042 ;;		_vfprintf
 11043 ;; This function uses a reentrant model
 11044 ;;
 11045                           
 11046                           	psect	text45
 11047  012272                     __ptext45:
 11048                           	opt callstack 0
 11049  012272                     _vfpfcnvrt:
 11050                           	opt callstack 0
 11051                           
 11052                           ; BSR set to: 0
 11053                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11054  012272  0E20               	movlw	32
 11055  012274  26E1               	addwf	fsr1l,f,c
 11056  012276  0E00               	movlw	0
 11057  012278  22E2               	addwfc	fsr1h,f,c
 11058                           
 11059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11060                           ;stkvar	_fmt @ sp[(-32)+-4]
 11061                           
 11062                           ;incstack = 0
 11063 ;; hardware stack exceeded
 11064  01227A  0EDC               	movlw	-36
 11065  01227C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11066  012282  0EDD               	movlw	-35
 11067  012284  006F FF8F FFDA     	movff	plusw1,fsr2h
 11068  01228A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11069  012290  006F FF77 FFF7     	movff	postdec2,tblptrh
 11070  012296                     	if	0	;tblptru may be non-zero
 11071  012296                     	endif
 11072  012296                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11073  012296  0E00               	movlw	low (__mediumconst shr (0+16))
 11074  012298  6EF8               	movwf	tblptru,c
 11075  01229A                     	endif
 11076  01229A  0008               	tblrd		*
 11077  01229C  50F5               	movf	tablat,w,c
 11078  01229E  0A25               	xorlw	37
 11079  0122A0  A4D8               	btfss	status,2,c
 11080  0122A2  EFE0  F098         	goto	l12230
 11081                           
 11082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11083                           ;stkvar	_fmt @ sp[(-32)+-4]
 11084  0122A6  0EDC               	movlw	-36
 11085  0122A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11086  0122AE  0EDD               	movlw	-35
 11087  0122B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11088  0122B6  2ADE               	incf	postinc2,f,c
 11089  0122B8  0E00               	movlw	0
 11090  0122BA  22DD               	addwfc	postdec2,f,c
 11091                           
 11092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11093  0122BC  6A21               	clrf	_width^0,c
 11094  0122BE  6A22               	clrf	(_width+1)^0,c
 11095  0122C0  6A25               	clrf	_flags^0,c
 11096  0122C2  6A26               	clrf	(_flags+1)^0,c
 11097                           
 11098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11099  0122C4  6823               	setf	_prec^0,c
 11100  0122C6  6824               	setf	(_prec+1)^0,c
 11101                           
 11102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11103                           ;stkvar	_fmt @ sp[(-32)+-4]
 11104  0122C8  0EDC               	movlw	-36
 11105  0122CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11106  0122D0  0EDD               	movlw	-35
 11107  0122D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11108  0122D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11109  0122DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11110  0122E4                     	if	0	;tblptru may be non-zero
 11111  0122E4                     	endif
 11112  0122E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11113  0122E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11114  0122E6  6EF8               	movwf	tblptru,c
 11115  0122E8                     	endif
 11116  0122E8  0008               	tblrd		*
 11117  0122EA  50F5               	movf	tablat,w,c
 11118  0122EC  0A2A               	xorlw	42
 11119  0122EE  A4D8               	btfss	status,2,c
 11120  0122F0  D031               	goto	l12048
 11121                           
 11122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11123                           ;stkvar	_fmt @ sp[(-32)+-4]
 11124  0122F2  0EDC               	movlw	-36
 11125  0122F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11126  0122FA  0EDD               	movlw	-35
 11127  0122FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11128  012302  2ADE               	incf	postinc2,f,c
 11129  012304  0E00               	movlw	0
 11130  012306  22DD               	addwfc	postdec2,f,c
 11131                           
 11132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11133                           ;stkvar	_ap @ sp[(-32)+-6]
 11134  012308  0EDA               	movlw	-38
 11135  01230A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11136  012310  0EDB               	movlw	-37
 11137  012312  006F FF8F FFDA     	movff	plusw1,fsr2h
 11138  012318  0E02               	movlw	2
 11139  01231A  5EDE               	subwf	postinc2,f,c
 11140  01231C  0E00               	movlw	0
 11141  01231E  5ADD               	subwfb	postdec2,f,c
 11142  012320  006F FF78  F00B    	movff	postinc2,btemp+10
 11143  012326  006F FF74  F00C    	movff	postdec2,btemp+11
 11144  01232C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11145  012332  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11146  012338  006F FF78  F021    	movff	postinc2,_width
 11147  01233E  006F FF74  F022    	movff	postdec2,_width+1
 11148                           
 11149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11150  012344  AE22               	btfss	(_width+1)^0,7,c
 11151  012346  D066               	goto	u11580
 11152                           
 11153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11154  012348  8025               	bsf	_flags^0,0,c
 11155                           
 11156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11157  01234A  6C21               	negf	_width^0,c
 11158  01234C  1E22               	comf	(_width+1)^0,f,c
 11159  01234E  B0D8               	btfsc	status,0,c
 11160  012350  2A22               	incf	(_width+1)^0,f,c
 11161  012352  D060               	goto	u11580
 11162  012354                     l12048:
 11163                           
 11164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11165                           ;stkvar	_fmt @ sp[(-32)+-4]
 11166  012354  0EDC               	movlw	-36
 11167  012356  006F FF8F FFD9     	movff	plusw1,fsr2l
 11168  01235C  0EDD               	movlw	-35
 11169  01235E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11170  012364  006F FF78  F00B    	movff	postinc2,btemp+10
 11171  01236A  006F FF74  F00C    	movff	postdec2,btemp+11
 11172  012370  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11173  012376  0060  F033  FFE6   	movff	btemp+11,postinc1
 11174  01237C  EC67  F0B8         	call	_atoi	;wreg free
 11175  012380  0060  F004  F021   	movff	btemp,_width
 11176  012386  0060  F008  F022   	movff	btemp+1,_width+1
 11177                           
 11178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11179  01238C  D00B               	goto	l12052
 11180  01238E                     l12050:
 11181                           
 11182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11183                           ;stkvar	_fmt @ sp[(-32)+-4]
 11184  01238E  0EDC               	movlw	-36
 11185  012390  006F FF8F FFD9     	movff	plusw1,fsr2l
 11186  012396  0EDD               	movlw	-35
 11187  012398  006F FF8F FFDA     	movff	plusw1,fsr2h
 11188  01239E  2ADE               	incf	postinc2,f,c
 11189  0123A0  0E00               	movlw	0
 11190  0123A2  22DD               	addwfc	postdec2,f,c
 11191  0123A4                     l12052:
 11192  0123A4  0ED0               	movlw	208
 11193  0123A6  6E0B               	movwf	(btemp+10)^0,c
 11194  0123A8  0EFF               	movlw	255
 11195  0123AA  6E0C               	movwf	(btemp+11)^0,c
 11196                           
 11197                           ;stkvar	_fmt @ sp[(-32)+-4]
 11198  0123AC  0EDC               	movlw	-36
 11199  0123AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11200  0123B4  0EDD               	movlw	-35
 11201  0123B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11202  0123BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11203  0123C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11204  0123C8                     	if	0	;tblptru may be non-zero
 11205  0123C8                     	endif
 11206  0123C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11207  0123C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11208  0123CA  6EF8               	movwf	tblptru,c
 11209  0123CC                     	endif
 11210  0123CC  0008               	tblrd		*
 11211  0123CE  50F5               	movf	tablat,w,c
 11212  0123D0  6E09               	movwf	(btemp+8)^0,c
 11213  0123D2  6A0A               	clrf	(btemp+9)^0,c
 11214  0123D4  500B               	movf	(btemp+10)^0,w,c
 11215  0123D6  2609               	addwf	(btemp+8)^0,f,c
 11216  0123D8  500C               	movf	(btemp+11)^0,w,c
 11217  0123DA  220A               	addwfc	(btemp+9)^0,f,c
 11218  0123DC  500A               	movf	(btemp+9)^0,w,c
 11219  0123DE  E106               	bnz	u11560
 11220  0123E0  0E0A               	movlw	10
 11221  0123E2  5C09               	subwf	(btemp+8)^0,w,c
 11222  0123E4  B0D8               	btfsc	status,0,c
 11223  0123E6  D002               	goto	u11560
 11224  0123E8  0E01               	movlw	1
 11225  0123EA  D001               	goto	u11570
 11226  0123EC                     u11560:
 11227  0123EC  0E00               	movlw	0
 11228  0123EE                     u11570:
 11229  0123EE  6E0B               	movwf	(btemp+10)^0,c
 11230  0123F0  6A0C               	clrf	(btemp+11)^0,c
 11231                           
 11232                           ;stkvar	_vfpfcnvrt$5386 @ sp[(-32)+4]
 11233  0123F2  0EE4               	movlw	-28
 11234  0123F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11235  0123FA  0EE5               	movlw	-27
 11236  0123FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 11237                           
 11238                           ;stkvar	_vfpfcnvrt$5386 @ sp[(-32)+4]
 11239  012402  0EE4               	movlw	-28
 11240  012404  006F FF8C  F001    	movff	plusw1,btemp
 11241  01240A  0EE5               	movlw	-27
 11242  01240C  50E3               	movf	plusw1,w,c
 11243  01240E  1001               	iorwf	btemp^0,w,c
 11244  012410  A4D8               	btfss	status,2,c
 11245  012412  D7BD               	goto	l12050
 11246  012414                     u11580:
 11247                           
 11248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11249                           ;stkvar	_fmt @ sp[(-32)+-4]
 11250  012414  0EDC               	movlw	-36
 11251  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11252  01241C  0EDD               	movlw	-35
 11253  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11254  012424  006F FF7B FFF6     	movff	postinc2,tblptrl
 11255  01242A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11256  012430                     	if	0	;tblptru may be non-zero
 11257  012430                     	endif
 11258  012430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11259  012430  0E00               	movlw	low (__mediumconst shr (0+16))
 11260  012432  6EF8               	movwf	tblptru,c
 11261  012434                     	endif
 11262  012434  0008               	tblrd		*
 11263  012436  50F5               	movf	tablat,w,c
 11264  012438  0A2E               	xorlw	46
 11265  01243A  A4D8               	btfss	status,2,c
 11266  01243C  D0AC               	goto	u11630
 11267                           
 11268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11269  01243E  6A23               	clrf	_prec^0,c
 11270  012440  6A24               	clrf	(_prec+1)^0,c
 11271                           
 11272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11273                           ;stkvar	_fmt @ sp[(-32)+-4]
 11274  012442  0EDC               	movlw	-36
 11275  012444  006F FF8F FFD9     	movff	plusw1,fsr2l
 11276  01244A  0EDD               	movlw	-35
 11277  01244C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11278  012452  2ADE               	incf	postinc2,f,c
 11279  012454  0E00               	movlw	0
 11280  012456  22DD               	addwfc	postdec2,f,c
 11281                           
 11282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11283                           ;stkvar	_fmt @ sp[(-32)+-4]
 11284  012458  0EDC               	movlw	-36
 11285  01245A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11286  012460  0EDD               	movlw	-35
 11287  012462  006F FF8F FFDA     	movff	plusw1,fsr2h
 11288  012468  006F FF7B FFF6     	movff	postinc2,tblptrl
 11289  01246E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11290  012474                     	if	0	;tblptru may be non-zero
 11291  012474                     	endif
 11292  012474                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11293  012474  0E00               	movlw	low (__mediumconst shr (0+16))
 11294  012476  6EF8               	movwf	tblptru,c
 11295  012478                     	endif
 11296  012478  0008               	tblrd		*
 11297  01247A  50F5               	movf	tablat,w,c
 11298  01247C  0A2A               	xorlw	42
 11299  01247E  A4D8               	btfss	status,2,c
 11300  012480  D02A               	goto	l12070
 11301                           
 11302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11303                           ;stkvar	_fmt @ sp[(-32)+-4]
 11304  012482  0EDC               	movlw	-36
 11305  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 11306  01248A  0EDD               	movlw	-35
 11307  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11308  012492  2ADE               	incf	postinc2,f,c
 11309  012494  0E00               	movlw	0
 11310  012496  22DD               	addwfc	postdec2,f,c
 11311                           
 11312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11313                           ;stkvar	_ap @ sp[(-32)+-6]
 11314  012498  0EDA               	movlw	-38
 11315  01249A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11316  0124A0  0EDB               	movlw	-37
 11317  0124A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11318  0124A8  0E02               	movlw	2
 11319  0124AA  5EDE               	subwf	postinc2,f,c
 11320  0124AC  0E00               	movlw	0
 11321  0124AE  5ADD               	subwfb	postdec2,f,c
 11322  0124B0  006F FF78  F00B    	movff	postinc2,btemp+10
 11323  0124B6  006F FF74  F00C    	movff	postdec2,btemp+11
 11324  0124BC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11325  0124C2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11326  0124C8  006F FF78  F023    	movff	postinc2,_prec
 11327  0124CE  006F FF74  F024    	movff	postdec2,_prec+1
 11328                           
 11329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11330  0124D4  D060               	goto	u11630
 11331  0124D6                     l12070:
 11332                           
 11333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11334                           ;stkvar	_fmt @ sp[(-32)+-4]
 11335  0124D6  0EDC               	movlw	-36
 11336  0124D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11337  0124DE  0EDD               	movlw	-35
 11338  0124E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11339  0124E6  006F FF78  F00B    	movff	postinc2,btemp+10
 11340  0124EC  006F FF74  F00C    	movff	postdec2,btemp+11
 11341  0124F2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11342  0124F8  0060  F033  FFE6   	movff	btemp+11,postinc1
 11343  0124FE  EC67  F0B8         	call	_atoi	;wreg free
 11344  012502  0060  F004  F023   	movff	btemp,_prec
 11345  012508  0060  F008  F024   	movff	btemp+1,_prec+1
 11346                           
 11347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11348  01250E  D00B               	goto	l12074
 11349  012510                     l12072:
 11350                           
 11351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11352                           ;stkvar	_fmt @ sp[(-32)+-4]
 11353  012510  0EDC               	movlw	-36
 11354  012512  006F FF8F FFD9     	movff	plusw1,fsr2l
 11355  012518  0EDD               	movlw	-35
 11356  01251A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11357  012520  2ADE               	incf	postinc2,f,c
 11358  012522  0E00               	movlw	0
 11359  012524  22DD               	addwfc	postdec2,f,c
 11360  012526                     l12074:
 11361  012526  0ED0               	movlw	208
 11362  012528  6E0B               	movwf	(btemp+10)^0,c
 11363  01252A  0EFF               	movlw	255
 11364  01252C  6E0C               	movwf	(btemp+11)^0,c
 11365                           
 11366                           ;stkvar	_fmt @ sp[(-32)+-4]
 11367  01252E  0EDC               	movlw	-36
 11368  012530  006F FF8F FFD9     	movff	plusw1,fsr2l
 11369  012536  0EDD               	movlw	-35
 11370  012538  006F FF8F FFDA     	movff	plusw1,fsr2h
 11371  01253E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11372  012544  006F FF77 FFF7     	movff	postdec2,tblptrh
 11373  01254A                     	if	0	;tblptru may be non-zero
 11374  01254A                     	endif
 11375  01254A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11376  01254A  0E00               	movlw	low (__mediumconst shr (0+16))
 11377  01254C  6EF8               	movwf	tblptru,c
 11378  01254E                     	endif
 11379  01254E  0008               	tblrd		*
 11380  012550  50F5               	movf	tablat,w,c
 11381  012552  6E09               	movwf	(btemp+8)^0,c
 11382  012554  6A0A               	clrf	(btemp+9)^0,c
 11383  012556  500B               	movf	(btemp+10)^0,w,c
 11384  012558  2609               	addwf	(btemp+8)^0,f,c
 11385  01255A  500C               	movf	(btemp+11)^0,w,c
 11386  01255C  220A               	addwfc	(btemp+9)^0,f,c
 11387  01255E  500A               	movf	(btemp+9)^0,w,c
 11388  012560  E106               	bnz	u11610
 11389  012562  0E0A               	movlw	10
 11390  012564  5C09               	subwf	(btemp+8)^0,w,c
 11391  012566  B0D8               	btfsc	status,0,c
 11392  012568  D002               	goto	u11610
 11393  01256A  0E01               	movlw	1
 11394  01256C  D001               	goto	u11620
 11395  01256E                     u11610:
 11396  01256E  0E00               	movlw	0
 11397  012570                     u11620:
 11398  012570  6E0B               	movwf	(btemp+10)^0,c
 11399  012572  6A0C               	clrf	(btemp+11)^0,c
 11400                           
 11401                           ;stkvar	_vfpfcnvrt$5387 @ sp[(-32)+0]
 11402  012574  0EE0               	movlw	-32
 11403  012576  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11404  01257C  0EE1               	movlw	-31
 11405  01257E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11406                           
 11407                           ;stkvar	_vfpfcnvrt$5387 @ sp[(-32)+0]
 11408  012584  0EE0               	movlw	-32
 11409  012586  006F FF8C  F001    	movff	plusw1,btemp
 11410  01258C  0EE1               	movlw	-31
 11411  01258E  50E3               	movf	plusw1,w,c
 11412  012590  1001               	iorwf	btemp^0,w,c
 11413  012592  A4D8               	btfss	status,2,c
 11414  012594  D7BD               	goto	l12072
 11415  012596                     u11630:
 11416                           
 11417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11418                           ;stkvar	_fmt @ sp[(-32)+-4]
 11419  012596  0EDC               	movlw	-36
 11420  012598  006F FF8F FFD9     	movff	plusw1,fsr2l
 11421  01259E  0EDD               	movlw	-35
 11422  0125A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11423  0125A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11424  0125AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11425  0125B2                     	if	0	;tblptru may be non-zero
 11426  0125B2                     	endif
 11427  0125B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11428  0125B2  0E00               	movlw	low (__mediumconst shr (0+16))
 11429  0125B4  6EF8               	movwf	tblptru,c
 11430  0125B6                     	endif
 11431  0125B6  0008               	tblrd		*
 11432  0125B8  50F5               	movf	tablat,w,c
 11433  0125BA  6EE6               	movwf	postinc1,c
 11434  0125BC  0E00               	movlw	0
 11435  0125BE  6EE6               	movwf	postinc1,c
 11436  0125C0  EC92  F0D1         	call	_tolower	;wreg free
 11437                           
 11438                           ;stkvar	_ct @ sp[(-32)+26]
 11439  0125C4  0EFA               	movlw	-6
 11440  0125C6  0060  F007  FFE3   	movff	btemp,plusw1
 11441                           
 11442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11443                           ;stkvar	_ct @ sp[(-32)+26]
 11444  0125CC  0EFA               	movlw	-6
 11445  0125CE  50E3               	movf	plusw1,w,c
 11446  0125D0  B4D8               	btfsc	status,2,c
 11447  0125D2  D05B               	goto	l12090
 11448                           
 11449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11450                           ;stkvar	_ct @ sp[(-32)+26]
 11451  0125D4  0EFB               	movlw	251
 11452  0125D6  24E1               	addwf	fsr1l,w,c
 11453  0125D8  6ED9               	movwf	fsr2l,c
 11454  0125DA  0EFF               	movlw	255
 11455  0125DC  20E2               	addwfc	fsr1h,w,c
 11456  0125DE  6EDA               	movwf	fsr2h,c
 11457                           
 11458                           ;stkvar	_fmt @ sp[(-32)+-4]
 11459  0125E0  0EDC               	movlw	-36
 11460  0125E2  006F FF8F FFE9     	movff	plusw1,fsr0l
 11461  0125E8  0EDD               	movlw	-35
 11462  0125EA  006F FF8F FFEA     	movff	plusw1,fsr0h
 11463  0125F0  006F FFB8  F00B    	movff	postinc0,btemp+10
 11464  0125F6  006F FFB4  F00C    	movff	postdec0,btemp+11
 11465  0125FC  0E01               	movlw	1
 11466  0125FE  260B               	addwf	(btemp+10)^0,f,c
 11467  012600  0E00               	movlw	0
 11468  012602  220C               	addwfc	(btemp+11)^0,f,c
 11469  012604  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11470  01260A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11471  012610                     	if	0	;tblptru may be non-zero
 11472  012610                     	endif
 11473  012610                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11474  012610  0E00               	movlw	low (__mediumconst shr (0+16))
 11475  012612  6EF8               	movwf	tblptru,c
 11476  012614                     	endif
 11477  012614  0008               	tblrd		*
 11478  012616  50F5               	movf	tablat,w,c
 11479  012618  6EE6               	movwf	postinc1,c
 11480  01261A  0E00               	movlw	0
 11481  01261C  6EE6               	movwf	postinc1,c
 11482  01261E  EC92  F0D1         	call	_tolower	;wreg free
 11483  012622  5001               	movf	btemp^0,w,c
 11484  012624  6EDF               	movwf	indf2,c
 11485                           
 11486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11487                           ;stkvar	_ct @ sp[(-32)+26]
 11488  012626  0EFB               	movlw	251
 11489  012628  24E1               	addwf	fsr1l,w,c
 11490  01262A  6ED9               	movwf	fsr2l,c
 11491  01262C  0EFF               	movlw	255
 11492  01262E  20E2               	addwfc	fsr1h,w,c
 11493  012630  6EDA               	movwf	fsr2h,c
 11494  012632  50DF               	movf	indf2,w,c
 11495  012634  B4D8               	btfsc	status,2,c
 11496  012636  D029               	goto	l12090
 11497                           
 11498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11499                           ;stkvar	_ct @ sp[(-32)+26]
 11500  012638  0EFC               	movlw	252
 11501  01263A  24E1               	addwf	fsr1l,w,c
 11502  01263C  6ED9               	movwf	fsr2l,c
 11503  01263E  0EFF               	movlw	255
 11504  012640  20E2               	addwfc	fsr1h,w,c
 11505  012642  6EDA               	movwf	fsr2h,c
 11506                           
 11507                           ;stkvar	_fmt @ sp[(-32)+-4]
 11508  012644  0EDC               	movlw	-36
 11509  012646  006F FF8F FFE9     	movff	plusw1,fsr0l
 11510  01264C  0EDD               	movlw	-35
 11511  01264E  006F FF8F FFEA     	movff	plusw1,fsr0h
 11512  012654  006F FFB8  F00B    	movff	postinc0,btemp+10
 11513  01265A  006F FFB4  F00C    	movff	postdec0,btemp+11
 11514  012660  0E02               	movlw	2
 11515  012662  260B               	addwf	(btemp+10)^0,f,c
 11516  012664  0E00               	movlw	0
 11517  012666  220C               	addwfc	(btemp+11)^0,f,c
 11518  012668  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11519  01266E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11520  012674                     	if	0	;tblptru may be non-zero
 11521  012674                     	endif
 11522  012674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11523  012674  0E00               	movlw	low (__mediumconst shr (0+16))
 11524  012676  6EF8               	movwf	tblptru,c
 11525  012678                     	endif
 11526  012678  0008               	tblrd		*
 11527  01267A  50F5               	movf	tablat,w,c
 11528  01267C  6EE6               	movwf	postinc1,c
 11529  01267E  0E00               	movlw	0
 11530  012680  6EE6               	movwf	postinc1,c
 11531  012682  EC92  F0D1         	call	_tolower	;wreg free
 11532  012686  5001               	movf	btemp^0,w,c
 11533  012688  6EDF               	movwf	indf2,c
 11534  01268A                     l12090:
 11535                           
 11536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11537                           ;stkvar	_fmt @ sp[(-32)+-4]
 11538  01268A  0EDC               	movlw	-36
 11539  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11540  012692  0EDD               	movlw	-35
 11541  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 11542  01269A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11543  0126A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11544  0126A6                     	if	0	;tblptru may be non-zero
 11545  0126A6                     	endif
 11546  0126A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11547  0126A6  0E00               	movlw	low (__mediumconst shr (0+16))
 11548  0126A8  6EF8               	movwf	tblptru,c
 11549  0126AA                     	endif
 11550  0126AA  0008               	tblrd		*
 11551  0126AC  50F5               	movf	tablat,w,c
 11552  0126AE  0A63               	xorlw	99
 11553  0126B0  A4D8               	btfss	status,2,c
 11554  0126B2  D037               	goto	l12100
 11555                           
 11556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11557                           ;stkvar	_fmt @ sp[(-32)+-4]
 11558  0126B4  0EDC               	movlw	-36
 11559  0126B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11560  0126BC  0EDD               	movlw	-35
 11561  0126BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11562  0126C4  2ADE               	incf	postinc2,f,c
 11563  0126C6  0E00               	movlw	0
 11564  0126C8  22DD               	addwfc	postdec2,f,c
 11565                           
 11566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11567                           ;stkvar	_ap @ sp[(-32)+-6]
 11568  0126CA  0EDA               	movlw	-38
 11569  0126CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11570  0126D2  0EDB               	movlw	-37
 11571  0126D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11572  0126DA  0E02               	movlw	2
 11573  0126DC  5EDE               	subwf	postinc2,f,c
 11574  0126DE  0E00               	movlw	0
 11575  0126E0  5ADD               	subwfb	postdec2,f,c
 11576  0126E2  006F FF78  F00B    	movff	postinc2,btemp+10
 11577  0126E8  006F FF74  F00C    	movff	postdec2,btemp+11
 11578  0126EE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11579  0126F4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11580  0126FA  50DF               	movf	indf2,w,c
 11581  0126FC  6E0C               	movwf	(btemp+11)^0,c
 11582                           
 11583                           ;stkvar	_c @ sp[(-32)+31]
 11584  0126FE  0EFF               	movlw	-1
 11585  012700  0060  F033  FFE3   	movff	btemp+11,plusw1
 11586                           
 11587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11588                           ;stkvar	_c @ sp[(-32)+31]
 11589  012706  0EFF               	movlw	-1
 11590  012708  50E3               	movf	plusw1,w,c
 11591  01270A  6EE6               	movwf	postinc1,c
 11592                           
 11593                           ;stkvar	_fp @ sp[(-33)+-2]
 11594  01270C  0EDD               	movlw	-35
 11595  01270E  006F FF8F FFE6     	movff	plusw1,postinc1
 11596  012714  006F FF8F FFE6     	movff	plusw1,postinc1
 11597  01271A  EC0C  F0D1         	call	_ctoa	;wreg free
 11598  01271E  EF0A  F099         	goto	l2324
 11599  012722                     l12100:
 11600                           
 11601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11602                           ;stkvar	_fmt @ sp[(-32)+-4]
 11603  012722  0EDC               	movlw	-36
 11604  012724  006F FF8F FFD9     	movff	plusw1,fsr2l
 11605  01272A  0EDD               	movlw	-35
 11606  01272C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11607  012732  006F FF7B FFF6     	movff	postinc2,tblptrl
 11608  012738  006F FF77 FFF7     	movff	postdec2,tblptrh
 11609  01273E                     	if	0	;tblptru may be non-zero
 11610  01273E                     	endif
 11611  01273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11612  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 11613  012740  6EF8               	movwf	tblptru,c
 11614  012742                     	endif
 11615  012742  0008               	tblrd		*
 11616  012744  50F5               	movf	tablat,w,c
 11617  012746  0A64               	xorlw	100
 11618  012748  B4D8               	btfsc	status,2,c
 11619  01274A  D015               	goto	u11680
 11620                           
 11621                           ;stkvar	_fmt @ sp[(-32)+-4]
 11622  01274C  0EDC               	movlw	-36
 11623  01274E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11624  012754  0EDD               	movlw	-35
 11625  012756  006F FF8F FFDA     	movff	plusw1,fsr2h
 11626  01275C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11627  012762  006F FF77 FFF7     	movff	postdec2,tblptrh
 11628  012768                     	if	0	;tblptru may be non-zero
 11629  012768                     	endif
 11630  012768                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11631  012768  0E00               	movlw	low (__mediumconst shr (0+16))
 11632  01276A  6EF8               	movwf	tblptru,c
 11633  01276C                     	endif
 11634  01276C  0008               	tblrd		*
 11635  01276E  50F5               	movf	tablat,w,c
 11636  012770  0A69               	xorlw	105
 11637  012772  A4D8               	btfss	status,2,c
 11638  012774  D076               	goto	l12112
 11639  012776                     u11680:
 11640                           
 11641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11642                           ;stkvar	_fmt @ sp[(-32)+-4]
 11643  012776  0EDC               	movlw	-36
 11644  012778  006F FF8F FFD9     	movff	plusw1,fsr2l
 11645  01277E  0EDD               	movlw	-35
 11646  012780  006F FF8F FFDA     	movff	plusw1,fsr2h
 11647  012786  2ADE               	incf	postinc2,f,c
 11648  012788  0E00               	movlw	0
 11649  01278A  22DD               	addwfc	postdec2,f,c
 11650                           
 11651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11652                           ;stkvar	_ap @ sp[(-32)+-6]
 11653  01278C  0EDA               	movlw	-38
 11654  01278E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11655  012794  0EDB               	movlw	-37
 11656  012796  006F FF8F FFDA     	movff	plusw1,fsr2h
 11657  01279C  0E02               	movlw	2
 11658  01279E  5EDE               	subwf	postinc2,f,c
 11659  0127A0  0E00               	movlw	0
 11660  0127A2  5ADD               	subwfb	postdec2,f,c
 11661  0127A4  006F FF78  F00B    	movff	postinc2,btemp+10
 11662  0127AA  006F FF74  F00C    	movff	postdec2,btemp+11
 11663  0127B0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11664  0127B6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11665  0127BC  006F FF78  F00B    	movff	postinc2,btemp+10
 11666  0127C2  006F FF74  F00C    	movff	postdec2,btemp+11
 11667                           
 11668                           ;stkvar	_ll @ sp[(-32)+14]
 11669  0127C8  0EEE               	movlw	-18
 11670  0127CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11671  0127D0  0EEF               	movlw	-17
 11672  0127D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11673  0127D8  6A01               	clrf	btemp^0,c
 11674  0127DA  BEE3               	btfsc	plusw1,7,c
 11675  0127DC  6801               	setf	btemp^0,c
 11676  0127DE  0EF0               	movlw	-16
 11677  0127E0  0060  F007  FFE3   	movff	btemp,plusw1
 11678  0127E6  0EF1               	movlw	-15
 11679  0127E8  0060  F007  FFE3   	movff	btemp,plusw1
 11680  0127EE  0EF2               	movlw	-14
 11681  0127F0  0060  F007  FFE3   	movff	btemp,plusw1
 11682  0127F6  0EF3               	movlw	-13
 11683  0127F8  0060  F007  FFE3   	movff	btemp,plusw1
 11684  0127FE  0EF4               	movlw	-12
 11685  012800  0060  F007  FFE3   	movff	btemp,plusw1
 11686  012806  0EF5               	movlw	-11
 11687  012808  0060  F007  FFE3   	movff	btemp,plusw1
 11688  01280E                     l12108:
 11689                           
 11690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11691                           ;stkvar	_ll @ sp[(-32)+14]
 11692  01280E  50E1               	movf	fsr1l,w,c
 11693  012810  0FEE               	addlw	-18
 11694  012812  6ED9               	movwf	fsr2l,c
 11695  012814  50E2               	movf	fsr1h,w,c
 11696  012816  6EDA               	movwf	fsr2h,c
 11697  012818  0EFF               	movlw	255
 11698  01281A  22DA               	addwfc	fsr2h,f,c
 11699  01281C  006F FF7B FFE6     	movff	postinc2,postinc1
 11700  012822  006F FF7B FFE6     	movff	postinc2,postinc1
 11701  012828  006F FF7B FFE6     	movff	postinc2,postinc1
 11702  01282E  006F FF7B FFE6     	movff	postinc2,postinc1
 11703  012834  006F FF7B FFE6     	movff	postinc2,postinc1
 11704  01283A  006F FF7B FFE6     	movff	postinc2,postinc1
 11705  012840  006F FF7B FFE6     	movff	postinc2,postinc1
 11706  012846  006F FF7B FFE6     	movff	postinc2,postinc1
 11707                           
 11708                           ;stkvar	_fp @ sp[(-40)+-2]
 11709  01284C  0ED6               	movlw	-42
 11710  01284E  006F FF8F FFE6     	movff	plusw1,postinc1
 11711  012854  006F FF8F FFE6     	movff	plusw1,postinc1
 11712  01285A  ECAE  F0A9         	call	_dtoa	;wreg free
 11713  01285E  EF0A  F099         	goto	l2324
 11714  012862                     l12112:
 11715                           
 11716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11717  012862  0E02               	movlw	2
 11718  012864  6EE6               	movwf	postinc1,c
 11719  012866  0E00               	movlw	0
 11720  012868  6EE6               	movwf	postinc1,c
 11721  01286A  0EE9               	movlw	low STR_74
 11722  01286C  6EE6               	movwf	postinc1,c
 11723  01286E  0EFF               	movlw	high STR_74
 11724  012870  6EE6               	movwf	postinc1,c
 11725                           
 11726                           ;stkvar	_fmt @ sp[(-36)+-4]
 11727  012872  0ED8               	movlw	-40
 11728  012874  006F FF8F FFD9     	movff	plusw1,fsr2l
 11729  01287A  0ED9               	movlw	-39
 11730  01287C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11731  012882  006F FF78  F00B    	movff	postinc2,btemp+10
 11732  012888  006F FF74  F00C    	movff	postdec2,btemp+11
 11733  01288E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11734  012894  0060  F033  FFE6   	movff	btemp+11,postinc1
 11735  01289A  ECC1  F0BA         	call	_strncmp	;wreg free
 11736  01289E  5001               	movf	btemp^0,w,c
 11737  0128A0  1002               	iorwf	(btemp+1)^0,w,c
 11738  0128A2  B4D8               	btfsc	status,2,c
 11739  0128A4  D022               	goto	u11700
 11740  0128A6  0E02               	movlw	2
 11741  0128A8  6EE6               	movwf	postinc1,c
 11742  0128AA  0E00               	movlw	0
 11743  0128AC  6EE6               	movwf	postinc1,c
 11744  0128AE  0EEF               	movlw	low STR_78
 11745  0128B0  6EE6               	movwf	postinc1,c
 11746  0128B2  0EFF               	movlw	high STR_78
 11747  0128B4  6EE6               	movwf	postinc1,c
 11748                           
 11749                           ;stkvar	_fmt @ sp[(-36)+-4]
 11750  0128B6  0ED8               	movlw	-40
 11751  0128B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11752  0128BE  0ED9               	movlw	-39
 11753  0128C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11754  0128C6  006F FF78  F00B    	movff	postinc2,btemp+10
 11755  0128CC  006F FF74  F00C    	movff	postdec2,btemp+11
 11756  0128D2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11757  0128D8  0060  F033  FFE6   	movff	btemp+11,postinc1
 11758  0128DE  ECC1  F0BA         	call	_strncmp	;wreg free
 11759  0128E2  5001               	movf	btemp^0,w,c
 11760  0128E4  1002               	iorwf	(btemp+1)^0,w,c
 11761  0128E6  A4D8               	btfss	status,2,c
 11762  0128E8  D069               	goto	l12124
 11763  0128EA                     u11700:
 11764                           
 11765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11766                           ;stkvar	_fmt @ sp[(-32)+-4]
 11767  0128EA  0EDC               	movlw	-36
 11768  0128EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11769  0128F2  0EDD               	movlw	-35
 11770  0128F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11771  0128FA  0E02               	movlw	2
 11772  0128FC  26DE               	addwf	postinc2,f,c
 11773  0128FE  0E00               	movlw	0
 11774  012900  22DD               	addwfc	postdec2,f,c
 11775                           
 11776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11777                           ;stkvar	_ap @ sp[(-32)+-6]
 11778  012902  0EDA               	movlw	-38
 11779  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 11780  01290A  0EDB               	movlw	-37
 11781  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11782  012912  0E04               	movlw	4
 11783  012914  5EDE               	subwf	postinc2,f,c
 11784  012916  0E00               	movlw	0
 11785  012918  5ADD               	subwfb	postdec2,f,c
 11786  01291A  006F FF78  F00B    	movff	postinc2,btemp+10
 11787  012920  006F FF74  F00C    	movff	postdec2,btemp+11
 11788  012926  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11789  01292C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11790  012932  006F FF78  F009    	movff	postinc2,btemp+8
 11791  012938  006F FF78  F00A    	movff	postinc2,btemp+9
 11792  01293E  006F FF78  F00B    	movff	postinc2,btemp+10
 11793  012944  006F FF78  F00C    	movff	postinc2,btemp+11
 11794  01294A  0060  F024  F011   	movff	btemp+8,btemp+16
 11795  012950  0060  F028  F012   	movff	btemp+9,btemp+17
 11796  012956  0060  F02C  F013   	movff	btemp+10,btemp+18
 11797  01295C  0060  F030  F014   	movff	btemp+11,btemp+19
 11798  012962  6A15               	clrf	(btemp+20)^0,c
 11799  012964  BE14               	btfsc	(btemp+19)^0,7,c
 11800  012966  6815               	setf	(btemp+20)^0,c
 11801  012968  0060  F054  F016   	movff	btemp+20,btemp+21
 11802  01296E  0060  F054  F017   	movff	btemp+20,btemp+22
 11803  012974  0060  F054  F018   	movff	btemp+20,btemp+23
 11804                           
 11805                           ;stkvar	_ll @ sp[(-32)+14]
 11806  01297A  0EEE               	movlw	-18
 11807  01297C  0060  F047  FFE3   	movff	btemp+16,plusw1
 11808  012982  0EEF               	movlw	-17
 11809  012984  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11810  01298A  0EF0               	movlw	-16
 11811  01298C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11812  012992  0EF1               	movlw	-15
 11813  012994  0060  F053  FFE3   	movff	btemp+19,plusw1
 11814  01299A  0EF2               	movlw	-14
 11815  01299C  0060  F057  FFE3   	movff	btemp+20,plusw1
 11816  0129A2  0EF3               	movlw	-13
 11817  0129A4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11818  0129AA  0EF4               	movlw	-12
 11819  0129AC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11820  0129B2  0EF5               	movlw	-11
 11821  0129B4  0060  F063  FFE3   	movff	btemp+23,plusw1
 11822  0129BA  D729               	goto	l12108
 11823  0129BC                     l12124:
 11824                           
 11825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11826                           ;stkvar	_ct @ sp[(-32)+26]
 11827  0129BC  0EFA               	movlw	-6
 11828  0129BE  006F FF8C  F001    	movff	plusw1,btemp
 11829  0129C4  0E66               	movlw	102
 11830  0129C6  1801               	xorwf	btemp^0,w,c
 11831  0129C8  A4D8               	btfss	status,2,c
 11832  0129CA  D06E               	goto	l12136
 11833                           
 11834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11835                           ;stkvar	_fmt @ sp[(-32)+-4]
 11836  0129CC  0EDC               	movlw	-36
 11837  0129CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11838  0129D4  0EDD               	movlw	-35
 11839  0129D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11840  0129DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11841  0129E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11842  0129E8                     	if	0	;tblptru may be non-zero
 11843  0129E8                     	endif
 11844  0129E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11845  0129E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11846  0129EA  6EF8               	movwf	tblptru,c
 11847  0129EC                     	endif
 11848                           
 11849                           ;stkvar	_c @ sp[(-32)+31]
 11850  0129EC  0008               	tblrd		*
 11851  0129EE  0EFF               	movlw	-1
 11852  0129F0  006F FFD7 FFE3     	movff	tablat,plusw1
 11853                           
 11854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11855                           ;stkvar	_fmt @ sp[(-32)+-4]
 11856  0129F6  0EDC               	movlw	-36
 11857  0129F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11858  0129FE  0EDD               	movlw	-35
 11859  012A00  006F FF8F FFDA     	movff	plusw1,fsr2h
 11860  012A06  2ADE               	incf	postinc2,f,c
 11861  012A08  0E00               	movlw	0
 11862  012A0A  22DD               	addwfc	postdec2,f,c
 11863                           
 11864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11865                           ;stkvar	_ap @ sp[(-32)+-6]
 11866  012A0C  0EDA               	movlw	-38
 11867  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11868  012A14  0EDB               	movlw	-37
 11869  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 11870  012A1C  0E04               	movlw	4
 11871  012A1E  5EDE               	subwf	postinc2,f,c
 11872  012A20  0E00               	movlw	0
 11873  012A22  5ADD               	subwfb	postdec2,f,c
 11874  012A24  006F FF78  F00B    	movff	postinc2,btemp+10
 11875  012A2A  006F FF74  F00C    	movff	postdec2,btemp+11
 11876  012A30  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11877  012A36  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11878  012A3C  006F FF78  F009    	movff	postinc2,btemp+8
 11879  012A42  006F FF78  F00A    	movff	postinc2,btemp+9
 11880  012A48  006F FF78  F00B    	movff	postinc2,btemp+10
 11881  012A4E  006F FF78  F00C    	movff	postinc2,btemp+11
 11882                           
 11883                           ;stkvar	_f @ sp[(-32)+22]
 11884  012A54  0EF6               	movlw	-10
 11885  012A56  0060  F027  FFE3   	movff	btemp+8,plusw1
 11886  012A5C  0EF7               	movlw	-9
 11887  012A5E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11888  012A64  0EF8               	movlw	-8
 11889  012A66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11890  012A6C  0EF9               	movlw	-7
 11891  012A6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11892  012A74                     l12132:
 11893                           
 11894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11895                           ;stkvar	_c @ sp[(-32)+31]
 11896  012A74  0EFF               	movlw	-1
 11897  012A76  50E3               	movf	plusw1,w,c
 11898  012A78  6EE6               	movwf	postinc1,c
 11899                           
 11900                           ;stkvar	_f @ sp[(-33)+22]
 11901  012A7A  0EF5               	movlw	-11
 11902  012A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11903  012A82  006F FF8F FFE6     	movff	plusw1,postinc1
 11904  012A88  006F FF8F FFE6     	movff	plusw1,postinc1
 11905  012A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 11906                           
 11907                           ;stkvar	_fp @ sp[(-37)+-2]
 11908  012A94  0ED9               	movlw	-39
 11909  012A96  006F FF8F FFE6     	movff	plusw1,postinc1
 11910  012A9C  006F FF8F FFE6     	movff	plusw1,postinc1
 11911  012AA2  EC00  F080         	call	_efgtoa	;wreg free
 11912  012AA6  D3B6               	goto	l2324
 11913  012AA8                     l12136:
 11914                           
 11915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11916  012AA8  0E02               	movlw	2
 11917  012AAA  6EE6               	movwf	postinc1,c
 11918  012AAC  0E00               	movlw	0
 11919  012AAE  6EE6               	movwf	postinc1,c
 11920  012AB0  0EEC               	movlw	low STR_83
 11921  012AB2  6EE6               	movwf	postinc1,c
 11922  012AB4  0EFF               	movlw	high STR_83
 11923  012AB6  6EE6               	movwf	postinc1,c
 11924                           
 11925                           ;stkvar	_ct @ sp[(-36)+26]
 11926  012AB8  0EF6               	movlw	246
 11927  012ABA  24E1               	addwf	fsr1l,w,c
 11928  012ABC  6E01               	movwf	btemp^0,c
 11929  012ABE  0EFF               	movlw	255
 11930  012AC0  20E2               	addwfc	fsr1h,w,c
 11931  012AC2  6E02               	movwf	(btemp+1)^0,c
 11932  012AC4  0060  F007  FFE6   	movff	btemp,postinc1
 11933  012ACA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11934  012AD0  ECC1  F0BA         	call	_strncmp	;wreg free
 11935  012AD4  5001               	movf	btemp^0,w,c
 11936  012AD6  1002               	iorwf	(btemp+1)^0,w,c
 11937  012AD8  A4D8               	btfss	status,2,c
 11938  012ADA  D096               	goto	l12156
 11939                           
 11940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11941                           ;stkvar	_fmt @ sp[(-32)+-4]
 11942  012ADC  0EDC               	movlw	-36
 11943  012ADE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11944  012AE4  0EDD               	movlw	-35
 11945  012AE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11946  012AEC  006F FF78  F00B    	movff	postinc2,btemp+10
 11947  012AF2  006F FF74  F00C    	movff	postdec2,btemp+11
 11948  012AF8  0E01               	movlw	1
 11949  012AFA  260B               	addwf	(btemp+10)^0,f,c
 11950  012AFC  0E00               	movlw	0
 11951  012AFE  220C               	addwfc	(btemp+11)^0,f,c
 11952  012B00  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11953  012B06  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11954  012B0C                     	if	0	;tblptru may be non-zero
 11955  012B0C                     	endif
 11956  012B0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11957  012B0C  0E00               	movlw	low (__mediumconst shr (0+16))
 11958  012B0E  6EF8               	movwf	tblptru,c
 11959  012B10                     	endif
 11960                           
 11961                           ;stkvar	_c @ sp[(-32)+31]
 11962  012B10  0008               	tblrd		*
 11963  012B12  0EFF               	movlw	-1
 11964  012B14  006F FFD7 FFE3     	movff	tablat,plusw1
 11965  012B1A  0EBF               	movlw	191
 11966  012B1C  6E0B               	movwf	(btemp+10)^0,c
 11967  012B1E  0EFF               	movlw	255
 11968  012B20  6E0C               	movwf	(btemp+11)^0,c
 11969                           
 11970                           ;stkvar	_fmt @ sp[(-32)+-4]
 11971  012B22  0EDC               	movlw	-36
 11972  012B24  006F FF8F FFD9     	movff	plusw1,fsr2l
 11973  012B2A  0EDD               	movlw	-35
 11974  012B2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11975  012B32  006F FF7B FFF6     	movff	postinc2,tblptrl
 11976  012B38  006F FF77 FFF7     	movff	postdec2,tblptrh
 11977  012B3E                     	if	0	;tblptru may be non-zero
 11978  012B3E                     	endif
 11979  012B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11980  012B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 11981  012B40  6EF8               	movwf	tblptru,c
 11982  012B42                     	endif
 11983  012B42  0008               	tblrd		*
 11984  012B44  50F5               	movf	tablat,w,c
 11985  012B46  6E09               	movwf	(btemp+8)^0,c
 11986  012B48  6A0A               	clrf	(btemp+9)^0,c
 11987  012B4A  500B               	movf	(btemp+10)^0,w,c
 11988  012B4C  2609               	addwf	(btemp+8)^0,f,c
 11989  012B4E  500C               	movf	(btemp+11)^0,w,c
 11990  012B50  220A               	addwfc	(btemp+9)^0,f,c
 11991  012B52  500A               	movf	(btemp+9)^0,w,c
 11992  012B54  E106               	bnz	u11730
 11993  012B56  0E1A               	movlw	26
 11994  012B58  5C09               	subwf	(btemp+8)^0,w,c
 11995  012B5A  B0D8               	btfsc	status,0,c
 11996  012B5C  D002               	goto	u11730
 11997  012B5E  0E01               	movlw	1
 11998  012B60  D001               	goto	u11740
 11999  012B62                     u11730:
 12000  012B62  0E00               	movlw	0
 12001  012B64                     u11740:
 12002  012B64  6E0B               	movwf	(btemp+10)^0,c
 12003  012B66  6A0C               	clrf	(btemp+11)^0,c
 12004                           
 12005                           ;stkvar	_vfpfcnvrt$5398 @ sp[(-32)+2]
 12006  012B68  0EE2               	movlw	-30
 12007  012B6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12008  012B70  0EE3               	movlw	-29
 12009  012B72  0060  F033  FFE3   	movff	btemp+11,plusw1
 12010                           
 12011                           ;stkvar	_vfpfcnvrt$5398 @ sp[(-32)+2]
 12012  012B78  0EE2               	movlw	-30
 12013  012B7A  006F FF8C  F001    	movff	plusw1,btemp
 12014  012B80  0EE3               	movlw	-29
 12015  012B82  50E3               	movf	plusw1,w,c
 12016  012B84  1001               	iorwf	btemp^0,w,c
 12017                           
 12018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12019                           ;stkvar	_ap @ sp[(-32)+-6]
 12020                           
 12021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12022                           
 12023                           ;stkvar	_f @ sp[(-32)+22]
 12024                           
 12025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12026                           ;stkvar	_ap @ sp[(-32)+-6]
 12027  012B86  0EDA               	movlw	-38
 12028  012B88  006F FF8F FFD9     	movff	plusw1,fsr2l
 12029  012B8E  0EDB               	movlw	-37
 12030  012B90  006F FF8F FFDA     	movff	plusw1,fsr2h
 12031  012B96  0E04               	movlw	4
 12032  012B98  5EDE               	subwf	postinc2,f,c
 12033  012B9A  0E00               	movlw	0
 12034  012B9C  5ADD               	subwfb	postdec2,f,c
 12035  012B9E  006F FF78  F00B    	movff	postinc2,btemp+10
 12036  012BA4  006F FF74  F00C    	movff	postdec2,btemp+11
 12037  012BAA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12038  012BB0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12039  012BB6  006F FF78  F009    	movff	postinc2,btemp+8
 12040  012BBC  006F FF78  F00A    	movff	postinc2,btemp+9
 12041  012BC2  006F FF78  F00B    	movff	postinc2,btemp+10
 12042  012BC8  006F FF78  F00C    	movff	postinc2,btemp+11
 12043                           
 12044                           ;stkvar	_f @ sp[(-32)+22]
 12045  012BCE  0EF6               	movlw	-10
 12046  012BD0  0060  F027  FFE3   	movff	btemp+8,plusw1
 12047  012BD6  0EF7               	movlw	-9
 12048  012BD8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12049  012BDE  0EF8               	movlw	-8
 12050  012BE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12051  012BE6  0EF9               	movlw	-7
 12052  012BE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12053                           
 12054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12055                           ;stkvar	_fmt @ sp[(-32)+-4]
 12056  012BEE  0EDC               	movlw	-36
 12057  012BF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12058  012BF6  0EDD               	movlw	-35
 12059  012BF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12060  012BFE  0E02               	movlw	2
 12061  012C00  26DE               	addwf	postinc2,f,c
 12062  012C02  0E00               	movlw	0
 12063  012C04  22DD               	addwfc	postdec2,f,c
 12064  012C06  D736               	goto	l12132
 12065  012C08                     l12156:
 12066                           
 12067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12068                           ;stkvar	_fmt @ sp[(-32)+-4]
 12069  012C08  0EDC               	movlw	-36
 12070  012C0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12071  012C10  0EDD               	movlw	-35
 12072  012C12  006F FF8F FFDA     	movff	plusw1,fsr2h
 12073  012C18  006F FF7B FFF6     	movff	postinc2,tblptrl
 12074  012C1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12075  012C24                     	if	0	;tblptru may be non-zero
 12076  012C24                     	endif
 12077  012C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12078  012C24  0E00               	movlw	low (__mediumconst shr (0+16))
 12079  012C26  6EF8               	movwf	tblptru,c
 12080  012C28                     	endif
 12081  012C28  0008               	tblrd		*
 12082  012C2A  50F5               	movf	tablat,w,c
 12083  012C2C  0A73               	xorlw	115
 12084  012C2E  A4D8               	btfss	status,2,c
 12085  012C30  D042               	goto	l12166
 12086                           
 12087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12088                           ;stkvar	_fmt @ sp[(-32)+-4]
 12089  012C32  0EDC               	movlw	-36
 12090  012C34  006F FF8F FFD9     	movff	plusw1,fsr2l
 12091  012C3A  0EDD               	movlw	-35
 12092  012C3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12093  012C42  2ADE               	incf	postinc2,f,c
 12094  012C44  0E00               	movlw	0
 12095  012C46  22DD               	addwfc	postdec2,f,c
 12096                           
 12097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12098                           ;stkvar	_ap @ sp[(-32)+-6]
 12099  012C48  0EDA               	movlw	-38
 12100  012C4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12101  012C50  0EDB               	movlw	-37
 12102  012C52  006F FF8F FFDA     	movff	plusw1,fsr2h
 12103  012C58  0E02               	movlw	2
 12104  012C5A  5EDE               	subwf	postinc2,f,c
 12105  012C5C  0E00               	movlw	0
 12106  012C5E  5ADD               	subwfb	postdec2,f,c
 12107  012C60  006F FF78  F00B    	movff	postinc2,btemp+10
 12108  012C66  006F FF74  F00C    	movff	postdec2,btemp+11
 12109  012C6C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12110  012C72  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12111  012C78  006F FF78  F00B    	movff	postinc2,btemp+10
 12112  012C7E  006F FF74  F00C    	movff	postdec2,btemp+11
 12113                           
 12114                           ;stkvar	_cp @ sp[(-32)+29]
 12115  012C84  0EFE               	movlw	-2
 12116  012C86  0060  F033  FFE3   	movff	btemp+11,plusw1
 12117  012C8C  0EFD               	movlw	-3
 12118  012C8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12119                           
 12120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12121                           ;stkvar	_cp @ sp[(-32)+29]
 12122  012C94  0EFD               	movlw	-3
 12123  012C96  006F FF8F FFE6     	movff	plusw1,postinc1
 12124  012C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 12125                           
 12126                           ;stkvar	_fp @ sp[(-34)+-2]
 12127  012CA2  0EDC               	movlw	-36
 12128  012CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12129  012CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12130  012CB0  ECC8  F0B5         	call	_stoa	;wreg free
 12131  012CB4  D2AF               	goto	l2324
 12132  012CB6                     l12166:
 12133                           
 12134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12135                           ;stkvar	_fmt @ sp[(-32)+-4]
 12136  012CB6  0EDC               	movlw	-36
 12137  012CB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12138  012CBE  0EDD               	movlw	-35
 12139  012CC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12140  012CC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12141  012CCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12142  012CD2                     	if	0	;tblptru may be non-zero
 12143  012CD2                     	endif
 12144  012CD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12145  012CD2  0E00               	movlw	low (__mediumconst shr (0+16))
 12146  012CD4  6EF8               	movwf	tblptru,c
 12147  012CD6                     	endif
 12148  012CD6  0008               	tblrd		*
 12149  012CD8  50F5               	movf	tablat,w,c
 12150  012CDA  0A75               	xorlw	117
 12151  012CDC  A4D8               	btfss	status,2,c
 12152  012CDE  D07C               	goto	l12176
 12153                           
 12154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12155                           ;stkvar	_fmt @ sp[(-32)+-4]
 12156  012CE0  0EDC               	movlw	-36
 12157  012CE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12158  012CE8  0EDD               	movlw	-35
 12159  012CEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12160  012CF0  2ADE               	incf	postinc2,f,c
 12161  012CF2  0E00               	movlw	0
 12162  012CF4  22DD               	addwfc	postdec2,f,c
 12163                           
 12164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12165                           ;stkvar	_ap @ sp[(-32)+-6]
 12166  012CF6  0EDA               	movlw	-38
 12167  012CF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12168  012CFE  0EDB               	movlw	-37
 12169  012D00  006F FF8F FFDA     	movff	plusw1,fsr2h
 12170  012D06  0E02               	movlw	2
 12171  012D08  5EDE               	subwf	postinc2,f,c
 12172  012D0A  0E00               	movlw	0
 12173  012D0C  5ADD               	subwfb	postdec2,f,c
 12174  012D0E  006F FF78  F00B    	movff	postinc2,btemp+10
 12175  012D14  006F FF74  F00C    	movff	postdec2,btemp+11
 12176  012D1A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12177  012D20  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12178  012D26  006F FF78  F00B    	movff	postinc2,btemp+10
 12179  012D2C  006F FF74  F00C    	movff	postdec2,btemp+11
 12180  012D32  500B               	movf	(btemp+10)^0,w,c
 12181  012D34  6E11               	movwf	(btemp+16)^0,c
 12182  012D36  500C               	movf	(btemp+11)^0,w,c
 12183  012D38  6E12               	movwf	(btemp+17)^0,c
 12184  012D3A  6A13               	clrf	(btemp+18)^0,c
 12185  012D3C  6A14               	clrf	(btemp+19)^0,c
 12186  012D3E  6A15               	clrf	(btemp+20)^0,c
 12187  012D40  6A16               	clrf	(btemp+21)^0,c
 12188  012D42  6A17               	clrf	(btemp+22)^0,c
 12189  012D44  6A18               	clrf	(btemp+23)^0,c
 12190                           
 12191                           ;stkvar	_llu @ sp[(-32)+6]
 12192  012D46  0EE6               	movlw	-26
 12193  012D48  0060  F047  FFE3   	movff	btemp+16,plusw1
 12194  012D4E  0EE7               	movlw	-25
 12195  012D50  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12196  012D56  0EE8               	movlw	-24
 12197  012D58  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12198  012D5E  0EE9               	movlw	-23
 12199  012D60  0060  F053  FFE3   	movff	btemp+19,plusw1
 12200  012D66  0EEA               	movlw	-22
 12201  012D68  0060  F057  FFE3   	movff	btemp+20,plusw1
 12202  012D6E  0EEB               	movlw	-21
 12203  012D70  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12204  012D76  0EEC               	movlw	-20
 12205  012D78  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12206  012D7E  0EED               	movlw	-19
 12207  012D80  0060  F063  FFE3   	movff	btemp+23,plusw1
 12208                           
 12209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12210                           ;stkvar	_llu @ sp[(-32)+6]
 12211  012D86  50E1               	movf	fsr1l,w,c
 12212  012D88  0FE6               	addlw	-26
 12213  012D8A  6ED9               	movwf	fsr2l,c
 12214  012D8C  50E2               	movf	fsr1h,w,c
 12215  012D8E  6EDA               	movwf	fsr2h,c
 12216  012D90  0EFF               	movlw	255
 12217  012D92  22DA               	addwfc	fsr2h,f,c
 12218  012D94  006F FF7B FFE6     	movff	postinc2,postinc1
 12219  012D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12220  012DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12221  012DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12222  012DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12223  012DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 12224  012DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 12225  012DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 12226                           
 12227                           ;stkvar	_fp @ sp[(-40)+-2]
 12228  012DC4  0ED6               	movlw	-42
 12229  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12230  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12231  012DD2  EC52  F0B1         	call	_utoa	;wreg free
 12232  012DD6  D21E               	goto	l2324
 12233  012DD8                     l12176:
 12234                           
 12235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12236  012DD8  0E02               	movlw	2
 12237  012DDA  6EE6               	movwf	postinc1,c
 12238  012DDC  0E00               	movlw	0
 12239  012DDE  6EE6               	movwf	postinc1,c
 12240  012DE0  0EF2               	movlw	low STR_88
 12241  012DE2  6EE6               	movwf	postinc1,c
 12242  012DE4  0EFF               	movlw	high STR_88
 12243  012DE6  6EE6               	movwf	postinc1,c
 12244                           
 12245                           ;stkvar	_fmt @ sp[(-36)+-4]
 12246  012DE8  0ED8               	movlw	-40
 12247  012DEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12248  012DF0  0ED9               	movlw	-39
 12249  012DF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12250  012DF8  006F FF78  F00B    	movff	postinc2,btemp+10
 12251  012DFE  006F FF74  F00C    	movff	postdec2,btemp+11
 12252  012E04  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12253  012E0A  0060  F033  FFE6   	movff	btemp+11,postinc1
 12254  012E10  ECC1  F0BA         	call	_strncmp	;wreg free
 12255  012E14  5001               	movf	btemp^0,w,c
 12256  012E16  1002               	iorwf	(btemp+1)^0,w,c
 12257  012E18  A4D8               	btfss	status,2,c
 12258  012E1A  D039               	goto	l12186
 12259                           
 12260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12261                           ;stkvar	_fmt @ sp[(-32)+-4]
 12262  012E1C  0EDC               	movlw	-36
 12263  012E1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12264  012E24  0EDD               	movlw	-35
 12265  012E26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12266  012E2C  0E02               	movlw	2
 12267  012E2E  26DE               	addwf	postinc2,f,c
 12268  012E30  0E00               	movlw	0
 12269  012E32  22DD               	addwfc	postdec2,f,c
 12270                           
 12271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12272                           ;stkvar	_ap @ sp[(-32)+-6]
 12273  012E34  0EDA               	movlw	-38
 12274  012E36  006F FF8F FFD9     	movff	plusw1,fsr2l
 12275  012E3C  0EDB               	movlw	-37
 12276  012E3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12277  012E44  0E04               	movlw	4
 12278  012E46  5EDE               	subwf	postinc2,f,c
 12279  012E48  0E00               	movlw	0
 12280  012E4A  5ADD               	subwfb	postdec2,f,c
 12281  012E4C  006F FF78  F00B    	movff	postinc2,btemp+10
 12282  012E52  006F FF74  F00C    	movff	postdec2,btemp+11
 12283  012E58  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12284  012E5E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12285  012E64  006F FF78  F009    	movff	postinc2,btemp+8
 12286  012E6A  006F FF78  F00A    	movff	postinc2,btemp+9
 12287  012E70  006F FF78  F00B    	movff	postinc2,btemp+10
 12288  012E76  006F FF78  F00C    	movff	postinc2,btemp+11
 12289  012E7C  5009               	movf	(btemp+8)^0,w,c
 12290  012E7E  6E11               	movwf	(btemp+16)^0,c
 12291  012E80  500A               	movf	(btemp+9)^0,w,c
 12292  012E82  6E12               	movwf	(btemp+17)^0,c
 12293  012E84  500B               	movf	(btemp+10)^0,w,c
 12294  012E86  6E13               	movwf	(btemp+18)^0,c
 12295  012E88  500C               	movf	(btemp+11)^0,w,c
 12296  012E8A  6E14               	movwf	(btemp+19)^0,c
 12297  012E8C  D758               	goto	L8
 12298  012E8E                     l12186:
 12299                           
 12300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12301                           ;stkvar	_fmt @ sp[(-32)+-4]
 12302  012E8E  0EDC               	movlw	-36
 12303  012E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 12304  012E96  0EDD               	movlw	-35
 12305  012E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 12306  012E9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12307  012EA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12308  012EAA                     	if	0	;tblptru may be non-zero
 12309  012EAA                     	endif
 12310  012EAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12311  012EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 12312  012EAC  6EF8               	movwf	tblptru,c
 12313  012EAE                     	endif
 12314  012EAE  0008               	tblrd		*
 12315  012EB0  50F5               	movf	tablat,w,c
 12316  012EB2  0A78               	xorlw	120
 12317  012EB4  B4D8               	btfsc	status,2,c
 12318  012EB6  D015               	goto	u11800
 12319                           
 12320                           ;stkvar	_fmt @ sp[(-32)+-4]
 12321  012EB8  0EDC               	movlw	-36
 12322  012EBA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12323  012EC0  0EDD               	movlw	-35
 12324  012EC2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12325  012EC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12326  012ECE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12327  012ED4                     	if	0	;tblptru may be non-zero
 12328  012ED4                     	endif
 12329  012ED4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12330  012ED4  0E00               	movlw	low (__mediumconst shr (0+16))
 12331  012ED6  6EF8               	movwf	tblptru,c
 12332  012ED8                     	endif
 12333  012ED8  0008               	tblrd		*
 12334  012EDA  50F5               	movf	tablat,w,c
 12335  012EDC  0A58               	xorlw	88
 12336  012EDE  A4D8               	btfss	status,2,c
 12337  012EE0  D094               	goto	l12200
 12338  012EE2                     u11800:
 12339                           
 12340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12341                           ;stkvar	_fmt @ sp[(-32)+-4]
 12342  012EE2  0EDC               	movlw	-36
 12343  012EE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12344  012EEA  0EDD               	movlw	-35
 12345  012EEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12346  012EF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12347  012EF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12348  012EFE                     	if	0	;tblptru may be non-zero
 12349  012EFE                     	endif
 12350  012EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12351  012EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12352  012F00  6EF8               	movwf	tblptru,c
 12353  012F02                     	endif
 12354                           
 12355                           ;stkvar	_c @ sp[(-32)+31]
 12356  012F02  0008               	tblrd		*
 12357  012F04  0EFF               	movlw	-1
 12358  012F06  006F FFD7 FFE3     	movff	tablat,plusw1
 12359                           
 12360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12361                           ;stkvar	_fmt @ sp[(-32)+-4]
 12362  012F0C  0EDC               	movlw	-36
 12363  012F0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12364  012F14  0EDD               	movlw	-35
 12365  012F16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12366  012F1C  2ADE               	incf	postinc2,f,c
 12367  012F1E  0E00               	movlw	0
 12368  012F20  22DD               	addwfc	postdec2,f,c
 12369                           
 12370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12371                           ;stkvar	_ap @ sp[(-32)+-6]
 12372  012F22  0EDA               	movlw	-38
 12373  012F24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12374  012F2A  0EDB               	movlw	-37
 12375  012F2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12376  012F32  0E02               	movlw	2
 12377  012F34  5EDE               	subwf	postinc2,f,c
 12378  012F36  0E00               	movlw	0
 12379  012F38  5ADD               	subwfb	postdec2,f,c
 12380  012F3A  006F FF78  F00B    	movff	postinc2,btemp+10
 12381  012F40  006F FF74  F00C    	movff	postdec2,btemp+11
 12382  012F46  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12383  012F4C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12384  012F52  006F FF78  F00B    	movff	postinc2,btemp+10
 12385  012F58  006F FF74  F00C    	movff	postdec2,btemp+11
 12386  012F5E  500B               	movf	(btemp+10)^0,w,c
 12387  012F60  6E11               	movwf	(btemp+16)^0,c
 12388  012F62  500C               	movf	(btemp+11)^0,w,c
 12389  012F64  6E12               	movwf	(btemp+17)^0,c
 12390  012F66  6A13               	clrf	(btemp+18)^0,c
 12391  012F68  6A14               	clrf	(btemp+19)^0,c
 12392  012F6A  6A15               	clrf	(btemp+20)^0,c
 12393  012F6C  6A16               	clrf	(btemp+21)^0,c
 12394  012F6E  6A17               	clrf	(btemp+22)^0,c
 12395  012F70  6A18               	clrf	(btemp+23)^0,c
 12396                           
 12397                           ;stkvar	_llu @ sp[(-32)+6]
 12398  012F72  0EE6               	movlw	-26
 12399  012F74  0060  F047  FFE3   	movff	btemp+16,plusw1
 12400  012F7A  0EE7               	movlw	-25
 12401  012F7C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12402  012F82  0EE8               	movlw	-24
 12403  012F84  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12404  012F8A  0EE9               	movlw	-23
 12405  012F8C  0060  F053  FFE3   	movff	btemp+19,plusw1
 12406  012F92  0EEA               	movlw	-22
 12407  012F94  0060  F057  FFE3   	movff	btemp+20,plusw1
 12408  012F9A  0EEB               	movlw	-21
 12409  012F9C  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12410  012FA2  0EEC               	movlw	-20
 12411  012FA4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12412  012FAA  0EED               	movlw	-19
 12413  012FAC  0060  F063  FFE3   	movff	btemp+23,plusw1
 12414                           
 12415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12416                           ;stkvar	_c @ sp[(-32)+31]
 12417  012FB2  0EFF               	movlw	-1
 12418  012FB4  50E3               	movf	plusw1,w,c
 12419  012FB6  6EE6               	movwf	postinc1,c
 12420                           
 12421                           ;stkvar	_llu @ sp[(-33)+6]
 12422  012FB8  50E1               	movf	fsr1l,w,c
 12423  012FBA  0FE5               	addlw	-27
 12424  012FBC  6ED9               	movwf	fsr2l,c
 12425  012FBE  50E2               	movf	fsr1h,w,c
 12426  012FC0  6EDA               	movwf	fsr2h,c
 12427  012FC2  0EFF               	movlw	255
 12428  012FC4  22DA               	addwfc	fsr2h,f,c
 12429  012FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 12430  012FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 12431  012FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 12432  012FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 12433  012FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 12434  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 12435  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 12436  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 12437                           
 12438                           ;stkvar	_fp @ sp[(-41)+-2]
 12439  012FF6  0ED5               	movlw	-43
 12440  012FF8  006F FF8F FFE6     	movff	plusw1,postinc1
 12441  012FFE  006F FF8F FFE6     	movff	plusw1,postinc1
 12442  013004  ECEE  F0AB         	call	_xtoa	;wreg free
 12443  013008  D105               	goto	l2324
 12444  01300A                     l12200:
 12445                           
 12446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12447  01300A  0E02               	movlw	2
 12448  01300C  6EE6               	movwf	postinc1,c
 12449  01300E  0E00               	movlw	0
 12450  013010  6EE6               	movwf	postinc1,c
 12451  013012  0EF5               	movlw	low STR_93
 12452  013014  6EE6               	movwf	postinc1,c
 12453  013016  0EFF               	movlw	high STR_93
 12454  013018  6EE6               	movwf	postinc1,c
 12455                           
 12456                           ;stkvar	_fmt @ sp[(-36)+-4]
 12457  01301A  0ED8               	movlw	-40
 12458  01301C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12459  013022  0ED9               	movlw	-39
 12460  013024  006F FF8F FFDA     	movff	plusw1,fsr2h
 12461  01302A  006F FF78  F00B    	movff	postinc2,btemp+10
 12462  013030  006F FF74  F00C    	movff	postdec2,btemp+11
 12463  013036  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12464  01303C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12465  013042  ECC1  F0BA         	call	_strncmp	;wreg free
 12466  013046  5001               	movf	btemp^0,w,c
 12467  013048  1002               	iorwf	(btemp+1)^0,w,c
 12468  01304A  B4D8               	btfsc	status,2,c
 12469  01304C  D022               	goto	u11820
 12470  01304E  0E02               	movlw	2
 12471  013050  6EE6               	movwf	postinc1,c
 12472  013052  0E00               	movlw	0
 12473  013054  6EE6               	movwf	postinc1,c
 12474  013056  0EE6               	movlw	low STR_97
 12475  013058  6EE6               	movwf	postinc1,c
 12476  01305A  0EFF               	movlw	high STR_97
 12477  01305C  6EE6               	movwf	postinc1,c
 12478                           
 12479                           ;stkvar	_fmt @ sp[(-36)+-4]
 12480  01305E  0ED8               	movlw	-40
 12481  013060  006F FF8F FFD9     	movff	plusw1,fsr2l
 12482  013066  0ED9               	movlw	-39
 12483  013068  006F FF8F FFDA     	movff	plusw1,fsr2h
 12484  01306E  006F FF78  F00B    	movff	postinc2,btemp+10
 12485  013074  006F FF74  F00C    	movff	postdec2,btemp+11
 12486  01307A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12487  013080  0060  F033  FFE6   	movff	btemp+11,postinc1
 12488  013086  ECC1  F0BA         	call	_strncmp	;wreg free
 12489  01308A  5001               	movf	btemp^0,w,c
 12490  01308C  1002               	iorwf	(btemp+1)^0,w,c
 12491  01308E  A4D8               	btfss	status,2,c
 12492  013090  D058               	goto	l12214
 12493  013092                     u11820:
 12494                           
 12495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12496                           ;stkvar	_fmt @ sp[(-32)+-4]
 12497  013092  0EDC               	movlw	-36
 12498  013094  006F FF8F FFD9     	movff	plusw1,fsr2l
 12499  01309A  0EDD               	movlw	-35
 12500  01309C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12501  0130A2  006F FF78  F00B    	movff	postinc2,btemp+10
 12502  0130A8  006F FF74  F00C    	movff	postdec2,btemp+11
 12503  0130AE  0E01               	movlw	1
 12504  0130B0  260B               	addwf	(btemp+10)^0,f,c
 12505  0130B2  0E00               	movlw	0
 12506  0130B4  220C               	addwfc	(btemp+11)^0,f,c
 12507  0130B6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12508  0130BC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12509  0130C2                     	if	0	;tblptru may be non-zero
 12510  0130C2                     	endif
 12511  0130C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12512  0130C2  0E00               	movlw	low (__mediumconst shr (0+16))
 12513  0130C4  6EF8               	movwf	tblptru,c
 12514  0130C6                     	endif
 12515                           
 12516                           ;stkvar	_c @ sp[(-32)+31]
 12517  0130C6  0008               	tblrd		*
 12518  0130C8  0EFF               	movlw	-1
 12519  0130CA  006F FFD7 FFE3     	movff	tablat,plusw1
 12520                           
 12521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12522                           ;stkvar	_fmt @ sp[(-32)+-4]
 12523  0130D0  0EDC               	movlw	-36
 12524  0130D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12525  0130D8  0EDD               	movlw	-35
 12526  0130DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12527  0130E0  0E02               	movlw	2
 12528  0130E2  26DE               	addwf	postinc2,f,c
 12529  0130E4  0E00               	movlw	0
 12530  0130E6  22DD               	addwfc	postdec2,f,c
 12531                           
 12532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12533                           ;stkvar	_ap @ sp[(-32)+-6]
 12534  0130E8  0EDA               	movlw	-38
 12535  0130EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12536  0130F0  0EDB               	movlw	-37
 12537  0130F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12538  0130F8  0E04               	movlw	4
 12539  0130FA  5EDE               	subwf	postinc2,f,c
 12540  0130FC  0E00               	movlw	0
 12541  0130FE  5ADD               	subwfb	postdec2,f,c
 12542  013100  006F FF78  F00B    	movff	postinc2,btemp+10
 12543  013106  006F FF74  F00C    	movff	postdec2,btemp+11
 12544  01310C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12545  013112  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12546  013118  006F FF78  F009    	movff	postinc2,btemp+8
 12547  01311E  006F FF78  F00A    	movff	postinc2,btemp+9
 12548  013124  006F FF78  F00B    	movff	postinc2,btemp+10
 12549  01312A  006F FF78  F00C    	movff	postinc2,btemp+11
 12550  013130  5009               	movf	(btemp+8)^0,w,c
 12551  013132  6E11               	movwf	(btemp+16)^0,c
 12552  013134  500A               	movf	(btemp+9)^0,w,c
 12553  013136  6E12               	movwf	(btemp+17)^0,c
 12554  013138  500B               	movf	(btemp+10)^0,w,c
 12555  01313A  6E13               	movwf	(btemp+18)^0,c
 12556  01313C  500C               	movf	(btemp+11)^0,w,c
 12557  01313E  6E14               	movwf	(btemp+19)^0,c
 12558  013140  D714               	goto	L9
 12559  013142                     l12214:
 12560                           
 12561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12562                           ;stkvar	_fmt @ sp[(-32)+-4]
 12563  013142  0EDC               	movlw	-36
 12564  013144  006F FF8F FFD9     	movff	plusw1,fsr2l
 12565  01314A  0EDD               	movlw	-35
 12566  01314C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12567  013152  006F FF7B FFF6     	movff	postinc2,tblptrl
 12568  013158  006F FF77 FFF7     	movff	postdec2,tblptrh
 12569  01315E                     	if	0	;tblptru may be non-zero
 12570  01315E                     	endif
 12571  01315E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12572  01315E  0E00               	movlw	low (__mediumconst shr (0+16))
 12573  013160  6EF8               	movwf	tblptru,c
 12574  013162                     	endif
 12575  013162  0008               	tblrd		*
 12576  013164  50F5               	movf	tablat,w,c
 12577  013166  0A25               	xorlw	37
 12578  013168  A4D8               	btfss	status,2,c
 12579  01316A  D01A               	goto	l12224
 12580                           
 12581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12582                           ;stkvar	_fmt @ sp[(-32)+-4]
 12583  01316C  0EDC               	movlw	-36
 12584  01316E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12585  013174  0EDD               	movlw	-35
 12586  013176  006F FF8F FFDA     	movff	plusw1,fsr2h
 12587  01317C  2ADE               	incf	postinc2,f,c
 12588  01317E  0E00               	movlw	0
 12589  013180  22DD               	addwfc	postdec2,f,c
 12590                           
 12591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12592                           ;stkvar	_fp @ sp[(-32)+-2]
 12593  013182  0EDE               	movlw	-34
 12594  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 12595  01318A  006F FF8F FFE6     	movff	plusw1,postinc1
 12596  013190  0E25               	movlw	37
 12597  013192  6EE6               	movwf	postinc1,c
 12598  013194  0E00               	movlw	0
 12599  013196  6EE6               	movwf	postinc1,c
 12600  013198  EC4F  F0C7         	call	_fputc	;wreg free
 12601  01319C                     l12220:
 12602                           
 12603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12604  01319C  0E01               	movlw	1
 12605  01319E  D00C               	goto	L10
 12606  0131A0                     l12224:
 12607                           
 12608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12609                           ;stkvar	_fmt @ sp[(-32)+-4]
 12610  0131A0  0EDC               	movlw	-36
 12611  0131A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12612  0131A8  0EDD               	movlw	-35
 12613  0131AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12614  0131B0  2ADE               	incf	postinc2,f,c
 12615  0131B2  0E00               	movlw	0
 12616  0131B4  22DD               	addwfc	postdec2,f,c
 12617                           
 12618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12619  0131B6  0E00               	movlw	0
 12620  0131B8                     L10:
 12621  0131B8  6E01               	movwf	btemp^0,c
 12622  0131BA  0E00               	movlw	0
 12623  0131BC  6E02               	movwf	(btemp+1)^0,c
 12624  0131BE  D02A               	goto	l2324
 12625  0131C0                     l12230:
 12626                           
 12627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12628                           ;stkvar	_fp @ sp[(-32)+-2]
 12629  0131C0  0EDE               	movlw	-34
 12630  0131C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12631  0131C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12632                           
 12633                           ;stkvar	_fmt @ sp[(-34)+-4]
 12634  0131CE  0EDA               	movlw	-38
 12635  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12636  0131D6  0EDB               	movlw	-37
 12637  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12638  0131DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12639  0131E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12640  0131EA                     	if	0	;tblptru may be non-zero
 12641  0131EA                     	endif
 12642  0131EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12643  0131EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12644  0131EC  6EF8               	movwf	tblptru,c
 12645  0131EE                     	endif
 12646  0131EE  0008               	tblrd		*
 12647  0131F0  50F5               	movf	tablat,w,c
 12648  0131F2  6EE6               	movwf	postinc1,c
 12649  0131F4  0E00               	movlw	0
 12650  0131F6  6EE6               	movwf	postinc1,c
 12651  0131F8  EC4F  F0C7         	call	_fputc	;wreg free
 12652                           
 12653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12654                           ;stkvar	_fmt @ sp[(-32)+-4]
 12655  0131FC  0EDC               	movlw	-36
 12656  0131FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12657  013204  0EDD               	movlw	-35
 12658  013206  006F FF8F FFDA     	movff	plusw1,fsr2h
 12659  01320C  2ADE               	incf	postinc2,f,c
 12660  01320E  0E00               	movlw	0
 12661  013210  22DD               	addwfc	postdec2,f,c
 12662  013212  D7C4               	goto	l12220
 12663  013214                     l2324:
 12664                           
 12665                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12666  013214  0EDA               	movlw	218
 12667  013216  26E1               	addwf	fsr1l,f,c
 12668  013218  0EFF               	movlw	255
 12669  01321A  22E2               	addwfc	fsr1h,f,c
 12670  01321C  0012               	return		;funcret
 12671  01321E                     __end_of_vfpfcnvrt:
 12672                           	opt callstack 0
 12673                           
 12674 ;; *************** function _xtoa *****************
 12675 ;; Defined at:
 12676 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12679 ;;		 -> f(6), NULL(0), 
 12680 ;;  d               8  [STACK] unsigned long long 
 12681 ;;  x               1  [STACK] unsigned char 
 12682 ;; Auto vars:     Size  Location     Type
 12683 ;;  n               8  [STACK] unsigned long long 
 12684 ;;  c               2  [STACK] int 
 12685 ;;  i               2  [STACK] int 
 12686 ;;  w               2  [STACK] int 
 12687 ;;  p               2  [STACK] int 
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  2  [STACK] int 
 12690 ;; Registers used:
 12691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/0
 12694 ;;		On exit  : 0/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12701 ;;Total ram usage:        0 bytes
 12702 ;; Hardware stack levels used:    1
 12703 ;; Hardware stack levels required when called:   20
 12704 ;; This function calls:
 12705 ;;		_isalpha
 12706 ;;		_isupper
 12707 ;;		_pad
 12708 ;;		_toupper
 12709 ;; This function is called by:
 12710 ;;		_vfpfcnvrt
 12711 ;; This function uses a reentrant model
 12712 ;;
 12713                           
 12714                           	psect	text46
 12715  0157DC                     __ptext46:
 12716                           	opt callstack 0
 12717  0157DC                     _xtoa:
 12718                           	opt callstack 0
 12719                           
 12720                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12721  0157DC  0E14               	movlw	20
 12722  0157DE  26E1               	addwf	fsr1l,f,c
 12723  0157E0  0E00               	movlw	0
 12724  0157E2  22E2               	addwfc	fsr1h,f,c
 12725                           
 12726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12727                           
 12728                           ;incstack = 0
 12729 ;; hardware stack exceeded
 12730  0157E4  AE24               	btfss	(_prec+1)^0,7,c
 12731                           
 12732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12733  0157E6  9225               	bcf	_flags^0,1,c
 12734                           
 12735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12736  0157E8  BE24               	btfsc	(_prec+1)^0,7,c
 12737  0157EA  D005               	goto	u11350
 12738  0157EC  5024               	movf	(_prec+1)^0,w,c
 12739  0157EE  E110               	bnz	l11954
 12740  0157F0  0423               	decf	_prec^0,w,c
 12741  0157F2  B0D8               	btfsc	status,0,c
 12742  0157F4  D00D               	goto	l11954
 12743  0157F6                     u11350:
 12744  0157F6  0E01               	movlw	1
 12745  0157F8  6E0B               	movwf	(btemp+10)^0,c
 12746  0157FA  0E00               	movlw	0
 12747  0157FC  6E0C               	movwf	(btemp+11)^0,c
 12748                           
 12749                           ;stkvar	_p @ sp[(-20)+18]
 12750  0157FE  0EFE               	movlw	-2
 12751  015800  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12752  015806  0EFF               	movlw	-1
 12753  015808  0060  F033  FFE3   	movff	btemp+11,plusw1
 12754  01580E  D008               	goto	l2274
 12755  015810                     l11954:
 12756                           
 12757                           ;stkvar	_p @ sp[(-20)+18]
 12758  015810  0EFE               	movlw	-2
 12759  015812  0060  F08F  FFE3   	movff	_prec,plusw1
 12760  015818  0EFF               	movlw	-1
 12761  01581A  0060  F093  FFE3   	movff	_prec+1,plusw1
 12762  015820                     l2274:
 12763                           
 12764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12765                           ;stkvar	_w @ sp[(-20)+16]
 12766  015820  0EFC               	movlw	-4
 12767  015822  0060  F087  FFE3   	movff	_width,plusw1
 12768  015828  0EFD               	movlw	-3
 12769  01582A  0060  F08B  FFE3   	movff	_width+1,plusw1
 12770                           
 12771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12772  015830  A825               	btfss	_flags^0,4,c
 12773  015832  D00B               	goto	l11960
 12774                           
 12775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12776                           ;stkvar	_w @ sp[(-20)+16]
 12777  015834  50E1               	movf	fsr1l,w,c
 12778  015836  0FFC               	addlw	-4
 12779  015838  6ED9               	movwf	fsr2l,c
 12780  01583A  50E2               	movf	fsr1h,w,c
 12781  01583C  6EDA               	movwf	fsr2h,c
 12782  01583E  0EFF               	movlw	255
 12783  015840  22DA               	addwfc	fsr2h,f,c
 12784  015842  0EFE               	movlw	254
 12785  015844  26DE               	addwf	postinc2,f,c
 12786  015846  0EFF               	movlw	255
 12787  015848  22DD               	addwfc	postdec2,f,c
 12788  01584A                     l11960:
 12789                           
 12790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12791                           ;stkvar	_d @ sp[(-20)+-10]
 12792  01584A  0EE2               	movlw	226
 12793  01584C  24E1               	addwf	fsr1l,w,c
 12794  01584E  6ED9               	movwf	fsr2l,c
 12795  015850  0EFF               	movlw	255
 12796  015852  20E2               	addwfc	fsr1h,w,c
 12797  015854  6EDA               	movwf	fsr2h,c
 12798                           
 12799                           ;stkvar	_n @ sp[(-20)+4]
 12800  015856  0E08               	movlw	8
 12801  015858  6E01               	movwf	btemp^0,c
 12802  01585A  0EF0               	movlw	-16
 12803  01585C                     us1137999:
 12804  01585C  006F FF7B FFE3     	movff	postinc2,plusw1
 12805  015862  28E8               	incf	wreg,w,c
 12806  015864  2E01               	decfsz	btemp^0,f,c
 12807  015866  D7FA               	bra	us1137999
 12808                           
 12809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12810  015868  0E4F               	movlw	79
 12811  01586A  6E0B               	movwf	(btemp+10)^0,c
 12812  01586C  0E00               	movlw	0
 12813  01586E  6E0C               	movwf	(btemp+11)^0,c
 12814                           
 12815                           ;stkvar	_i @ sp[(-20)+14]
 12816  015870  0EFA               	movlw	-6
 12817  015872  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12818  015878  0EFB               	movlw	-5
 12819  01587A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12820                           
 12821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12822  015880  0103               	movlb	3	; () banked
 12823  015882  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12824                           
 12825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12826  015884  D0EE               	goto	l11998
 12827  015886                     l11966:
 12828                           
 12829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12830                           ;stkvar	_i @ sp[(-20)+14]
 12831  015886  50E1               	movf	fsr1l,w,c
 12832  015888  0FFA               	addlw	-6
 12833  01588A  6ED9               	movwf	fsr2l,c
 12834  01588C  50E2               	movf	fsr1h,w,c
 12835  01588E  6EDA               	movwf	fsr2h,c
 12836  015890  0EFF               	movlw	255
 12837  015892  22DA               	addwfc	fsr2h,f,c
 12838  015894  06DE               	decf	postinc2,f,c
 12839  015896  0E00               	movlw	0
 12840  015898  5ADD               	subwfb	postdec2,f,c
 12841                           
 12842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12843                           ;stkvar	_n @ sp[(-20)+4]
 12844  01589A  0EF0               	movlw	-16
 12845  01589C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12846  0158A2  0EF1               	movlw	-15
 12847  0158A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12848  0158AA  0E0F               	movlw	15
 12849  0158AC  160B               	andwf	(btemp+10)^0,f,c
 12850  0158AE  0E00               	movlw	0
 12851  0158B0  160C               	andwf	(btemp+11)^0,f,c
 12852                           
 12853                           ;stkvar	_c @ sp[(-20)+12]
 12854  0158B2  0EF8               	movlw	-8
 12855  0158B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12856  0158BA  0EF9               	movlw	-7
 12857  0158BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12858                           
 12859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12860                           ;stkvar	_c @ sp[(-20)+12]
 12861  0158C2  0EF9               	movlw	-7
 12862  0158C4  BEE3               	btfsc	plusw1,7,c
 12863  0158C6  D00F               	goto	l11974
 12864  0158C8  0EF9               	movlw	-7
 12865  0158CA  50E3               	movf	plusw1,w,c
 12866  0158CC  E108               	bnz	u11380
 12867  0158CE  0EF8               	movlw	-8
 12868  0158D0  006F FF8C  F001    	movff	plusw1,btemp
 12869  0158D6  0E0A               	movlw	10
 12870  0158D8  5E01               	subwf	btemp^0,f,c
 12871  0158DA  A0D8               	btfss	status,0,c
 12872  0158DC  D004               	goto	l11974
 12873  0158DE                     u11380:
 12874                           
 12875                           ;stkvar	_c @ sp[(-20)+12]
 12876  0158DE  0EF8               	movlw	-8
 12877  0158E0  50E3               	movf	plusw1,w,c
 12878  0158E2  0F57               	addlw	87
 12879  0158E4  D003               	goto	L11
 12880  0158E6                     l11974:
 12881                           
 12882                           ;stkvar	_c @ sp[(-20)+12]
 12883  0158E6  0EF8               	movlw	-8
 12884  0158E8  50E3               	movf	plusw1,w,c
 12885  0158EA  0F30               	addlw	48
 12886  0158EC                     L11:
 12887  0158EC  6E0B               	movwf	(btemp+10)^0,c
 12888  0158EE  0EF9               	movlw	-7
 12889  0158F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12890  0158F6  0E00               	movlw	0
 12891  0158F8  220C               	addwfc	(btemp+11)^0,f,c
 12892                           
 12893                           ;stkvar	_c @ sp[(-20)+12]
 12894  0158FA  0EF8               	movlw	-8
 12895  0158FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12896  015902  0EF9               	movlw	-7
 12897  015904  0060  F033  FFE3   	movff	btemp+11,plusw1
 12898  01590A  0EBF               	movlw	191
 12899  01590C  6E0B               	movwf	(btemp+10)^0,c
 12900  01590E  0EFF               	movlw	255
 12901  015910  6E0C               	movwf	(btemp+11)^0,c
 12902                           
 12903                           ;stkvar	_x @ sp[(-20)+-11]
 12904  015912  0EE1               	movlw	-31
 12905  015914  50E3               	movf	plusw1,w,c
 12906  015916  6E09               	movwf	(btemp+8)^0,c
 12907  015918  6A0A               	clrf	(btemp+9)^0,c
 12908  01591A  500B               	movf	(btemp+10)^0,w,c
 12909  01591C  2609               	addwf	(btemp+8)^0,f,c
 12910  01591E  500C               	movf	(btemp+11)^0,w,c
 12911  015920  220A               	addwfc	(btemp+9)^0,f,c
 12912  015922  500A               	movf	(btemp+9)^0,w,c
 12913  015924  E106               	bnz	u11390
 12914  015926  0E1A               	movlw	26
 12915  015928  5C09               	subwf	(btemp+8)^0,w,c
 12916  01592A  B0D8               	btfsc	status,0,c
 12917  01592C  D002               	goto	u11390
 12918  01592E  0E01               	movlw	1
 12919  015930  D001               	goto	u11400
 12920  015932                     u11390:
 12921  015932  0E00               	movlw	0
 12922  015934                     u11400:
 12923  015934  6E0B               	movwf	(btemp+10)^0,c
 12924  015936  6A0C               	clrf	(btemp+11)^0,c
 12925                           
 12926                           ;stkvar	_xtoa$5371 @ sp[(-20)+2]
 12927  015938  0EEE               	movlw	-18
 12928  01593A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12929  015940  0EEF               	movlw	-17
 12930  015942  0060  F033  FFE3   	movff	btemp+11,plusw1
 12931                           
 12932                           ;stkvar	_xtoa$5371 @ sp[(-20)+2]
 12933  015948  0EEE               	movlw	-18
 12934  01594A  006F FF8C  F001    	movff	plusw1,btemp
 12935  015950  0EEF               	movlw	-17
 12936  015952  50E3               	movf	plusw1,w,c
 12937  015954  1001               	iorwf	btemp^0,w,c
 12938  015956  B4D8               	btfsc	status,2,c
 12939  015958  D041               	goto	l11990
 12940  01595A  0E9F               	movlw	159
 12941  01595C  6E0B               	movwf	(btemp+10)^0,c
 12942  01595E  0EFF               	movlw	255
 12943  015960  6E0C               	movwf	(btemp+11)^0,c
 12944                           
 12945                           ;stkvar	_c @ sp[(-20)+12]
 12946  015962  0EF8               	movlw	-8
 12947  015964  006F FF8C  F009    	movff	plusw1,btemp+8
 12948  01596A  0EF9               	movlw	-7
 12949  01596C  006F FF8C  F00A    	movff	plusw1,btemp+9
 12950  015972  0E20               	movlw	32
 12951  015974  1209               	iorwf	(btemp+8)^0,f,c
 12952  015976  0E00               	movlw	0
 12953  015978  120A               	iorwf	(btemp+9)^0,f,c
 12954  01597A  500B               	movf	(btemp+10)^0,w,c
 12955  01597C  2609               	addwf	(btemp+8)^0,f,c
 12956  01597E  500C               	movf	(btemp+11)^0,w,c
 12957  015980  220A               	addwfc	(btemp+9)^0,f,c
 12958  015982  500A               	movf	(btemp+9)^0,w,c
 12959  015984  E106               	bnz	u11420
 12960  015986  0E1A               	movlw	26
 12961  015988  5C09               	subwf	(btemp+8)^0,w,c
 12962  01598A  B0D8               	btfsc	status,0,c
 12963  01598C  D002               	goto	u11420
 12964  01598E  0E01               	movlw	1
 12965  015990  D001               	goto	u11430
 12966  015992                     u11420:
 12967  015992  0E00               	movlw	0
 12968  015994                     u11430:
 12969  015994  6E0B               	movwf	(btemp+10)^0,c
 12970  015996  6A0C               	clrf	(btemp+11)^0,c
 12971                           
 12972                           ;stkvar	_xtoa$5372 @ sp[(-20)+0]
 12973  015998  0EEC               	movlw	-20
 12974  01599A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12975  0159A0  0EED               	movlw	-19
 12976  0159A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 12977                           
 12978                           ;stkvar	_xtoa$5372 @ sp[(-20)+0]
 12979  0159A8  0EEC               	movlw	-20
 12980  0159AA  006F FF8C  F001    	movff	plusw1,btemp
 12981  0159B0  0EED               	movlw	-19
 12982  0159B2  50E3               	movf	plusw1,w,c
 12983  0159B4  1001               	iorwf	btemp^0,w,c
 12984  0159B6  B4D8               	btfsc	status,2,c
 12985  0159B8  D011               	goto	l11990
 12986                           
 12987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12988                           ;stkvar	_c @ sp[(-20)+12]
 12989  0159BA  0EF8               	movlw	-8
 12990  0159BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12991  0159C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12992  0159C8  EC50  F0D1         	call	_toupper	;wreg free
 12993                           
 12994                           ;stkvar	_c @ sp[(-20)+12]
 12995  0159CC  0EF8               	movlw	-8
 12996  0159CE  0060  F007  FFE3   	movff	btemp,plusw1
 12997  0159D4  0EF9               	movlw	-7
 12998  0159D6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12999  0159DC                     l11990:
 13000                           
 13001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13002                           ;stkvar	_c @ sp[(-20)+12]
 13003                           ;stkvar	_i @ sp[(-20)+14]
 13004  0159DC  0EFA               	movlw	-6
 13005  0159DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 13006  0159E4  0EFB               	movlw	-5
 13007  0159E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13008  0159EC  0E94               	movlw	low _dbuf
 13009  0159EE  240B               	addwf	(btemp+10)^0,w,c
 13010  0159F0  6ED9               	movwf	fsr2l,c
 13011  0159F2  0E03               	movlw	high _dbuf
 13012  0159F4  200C               	addwfc	(btemp+11)^0,w,c
 13013  0159F6  6EDA               	movwf	fsr2h,c
 13014  0159F8  0EF8               	movlw	-8
 13015  0159FA  006F FF8F FFDF     	movff	plusw1,indf2
 13016                           
 13017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13018                           ;stkvar	_p @ sp[(-20)+18]
 13019  015A00  50E1               	movf	fsr1l,w,c
 13020  015A02  0FFE               	addlw	-2
 13021  015A04  6ED9               	movwf	fsr2l,c
 13022  015A06  50E2               	movf	fsr1h,w,c
 13023  015A08  6EDA               	movwf	fsr2h,c
 13024  015A0A  0EFF               	movlw	255
 13025  015A0C  22DA               	addwfc	fsr2h,f,c
 13026  015A0E  06DE               	decf	postinc2,f,c
 13027  015A10  0E00               	movlw	0
 13028  015A12  5ADD               	subwfb	postdec2,f,c
 13029                           
 13030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13031                           ;stkvar	_w @ sp[(-20)+16]
 13032  015A14  50E1               	movf	fsr1l,w,c
 13033  015A16  0FFC               	addlw	-4
 13034  015A18  6ED9               	movwf	fsr2l,c
 13035  015A1A  50E2               	movf	fsr1h,w,c
 13036  015A1C  6EDA               	movwf	fsr2h,c
 13037  015A1E  0EFF               	movlw	255
 13038  015A20  22DA               	addwfc	fsr2h,f,c
 13039  015A22  06DE               	decf	postinc2,f,c
 13040  015A24  0E00               	movlw	0
 13041  015A26  5ADD               	subwfb	postdec2,f,c
 13042                           
 13043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13044  015A28  0E04               	movlw	4
 13045  015A2A  6E0C               	movwf	(btemp+11)^0,c
 13046                           
 13047                           ;stkvar	_n @ sp[(-20)+4]
 13048  015A2C  50E1               	movf	fsr1l,w,c
 13049  015A2E  0FF0               	addlw	-16
 13050  015A30  6ED9               	movwf	fsr2l,c
 13051  015A32  50E2               	movf	fsr1h,w,c
 13052  015A34  6EDA               	movwf	fsr2h,c
 13053  015A36  0EFF               	movlw	255
 13054  015A38  22DA               	addwfc	fsr2h,f,c
 13055  015A3A  280C               	incf	(btemp+11)^0,w,c
 13056  015A3C  52DE               	movf	postinc2,f,c
 13057  015A3E  D00F               	goto	u11450
 13058  015A40                     u11455:
 13059  015A40  52DE               	movf	postinc2,f,c
 13060  015A42  52DE               	movf	postinc2,f,c
 13061  015A44  52DE               	movf	postinc2,f,c
 13062  015A46  52DE               	movf	postinc2,f,c
 13063  015A48  52DE               	movf	postinc2,f,c
 13064  015A4A  52DE               	movf	postinc2,f,c
 13065  015A4C  90D8               	bcf	status,0,c
 13066  015A4E  32DD               	rrcf	postdec2,f,c
 13067  015A50  32DD               	rrcf	postdec2,f,c
 13068  015A52  32DD               	rrcf	postdec2,f,c
 13069  015A54  32DD               	rrcf	postdec2,f,c
 13070  015A56  32DD               	rrcf	postdec2,f,c
 13071  015A58  32DD               	rrcf	postdec2,f,c
 13072  015A5A  32DD               	rrcf	postdec2,f,c
 13073  015A5C  32DE               	rrcf	postinc2,f,c
 13074  015A5E                     u11450:
 13075  015A5E  2EE8               	decfsz	wreg,f,c
 13076  015A60  D7EF               	goto	u11455
 13077  015A62                     l11998:
 13078                           
 13079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13080                           ;stkvar	_i @ sp[(-20)+14]
 13081  015A62  0EFB               	movlw	-5
 13082  015A64  BEE3               	btfsc	plusw1,7,c
 13083  015A66  D03A               	goto	u11500
 13084  015A68  0EFB               	movlw	-5
 13085  015A6A  50E3               	movf	plusw1,w,c
 13086  015A6C  E108               	bnz	u11460
 13087  015A6E  0EFA               	movlw	-6
 13088  015A70  006F FF8C  F001    	movff	plusw1,btemp
 13089  015A76  0E02               	movlw	2
 13090  015A78  5E01               	subwf	btemp^0,f,c
 13091  015A7A  A0D8               	btfss	status,0,c
 13092  015A7C  D02F               	goto	u11500
 13093  015A7E                     u11460:
 13094                           
 13095                           ;stkvar	_n @ sp[(-20)+4]
 13096  015A7E  0EF0               	movlw	-16
 13097  015A80  50E3               	movf	plusw1,w,c
 13098  015A82  E115               	bnz	u11471
 13099  015A84  0EF1               	movlw	-15
 13100  015A86  50E3               	movf	plusw1,w,c
 13101  015A88  E112               	bnz	u11471
 13102  015A8A  0EF2               	movlw	-14
 13103  015A8C  50E3               	movf	plusw1,w,c
 13104  015A8E  E10F               	bnz	u11471
 13105  015A90  0EF3               	movlw	-13
 13106  015A92  50E3               	movf	plusw1,w,c
 13107  015A94  E10C               	bnz	u11471
 13108  015A96  0EF4               	movlw	-12
 13109  015A98  50E3               	movf	plusw1,w,c
 13110  015A9A  E109               	bnz	u11471
 13111  015A9C  0EF5               	movlw	-11
 13112  015A9E  50E3               	movf	plusw1,w,c
 13113  015AA0  E106               	bnz	u11471
 13114  015AA2  0EF6               	movlw	-10
 13115  015AA4  50E3               	movf	plusw1,w,c
 13116  015AA6  E103               	bnz	u11471
 13117  015AA8  0EF7               	movlw	-9
 13118  015AAA  50E3               	movf	plusw1,w,c
 13119  015AAC  A4D8               	btfss	status,2,c
 13120  015AAE                     u11471:
 13121  015AAE  D6EB               	goto	l11966
 13122                           
 13123                           ;stkvar	_p @ sp[(-20)+18]
 13124  015AB0  0EFF               	movlw	-1
 13125  015AB2  BEE3               	btfsc	plusw1,7,c
 13126  015AB4  D007               	goto	u11480
 13127  015AB6  0EFF               	movlw	-1
 13128  015AB8  50E3               	movf	plusw1,w,c
 13129  015ABA  E103               	bnz	u11481
 13130  015ABC  0EFE               	movlw	-2
 13131  015ABE  04E3               	decf	plusw1,w,c
 13132  015AC0  B0D8               	btfsc	status,0,c
 13133  015AC2                     u11481:
 13134  015AC2  D6E1               	goto	l11966
 13135  015AC4                     u11480:
 13136                           
 13137                           ;stkvar	_w @ sp[(-20)+16]
 13138  015AC4  0EFD               	movlw	-3
 13139  015AC6  BEE3               	btfsc	plusw1,7,c
 13140  015AC8  D009               	goto	u11500
 13141  015ACA  0EFD               	movlw	-3
 13142  015ACC  50E3               	movf	plusw1,w,c
 13143  015ACE  E104               	bnz	u11490
 13144  015AD0  0EFC               	movlw	-4
 13145  015AD2  04E3               	decf	plusw1,w,c
 13146  015AD4  A0D8               	btfss	status,0,c
 13147  015AD6  D002               	goto	u11500
 13148  015AD8                     u11490:
 13149  015AD8  B225               	btfsc	_flags^0,1,c
 13150  015ADA  D6D5               	goto	l11966
 13151  015ADC                     u11500:
 13152                           
 13153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13154  015ADC  A825               	btfss	_flags^0,4,c
 13155  015ADE  D036               	goto	l12014
 13156                           
 13157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13158                           ;stkvar	_i @ sp[(-20)+14]
 13159  015AE0  50E1               	movf	fsr1l,w,c
 13160  015AE2  0FFA               	addlw	-6
 13161  015AE4  6ED9               	movwf	fsr2l,c
 13162  015AE6  50E2               	movf	fsr1h,w,c
 13163  015AE8  6EDA               	movwf	fsr2h,c
 13164  015AEA  0EFF               	movlw	255
 13165  015AEC  22DA               	addwfc	fsr2h,f,c
 13166  015AEE  06DE               	decf	postinc2,f,c
 13167  015AF0  0E00               	movlw	0
 13168  015AF2  5ADD               	subwfb	postdec2,f,c
 13169                           
 13170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13171                           ;stkvar	_x @ sp[(-20)+-11]
 13172                           ;stkvar	_i @ sp[(-20)+14]
 13173  015AF4  0EFA               	movlw	-6
 13174  015AF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 13175  015AFC  0EFB               	movlw	-5
 13176  015AFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 13177  015B04  0E94               	movlw	low _dbuf
 13178  015B06  240B               	addwf	(btemp+10)^0,w,c
 13179  015B08  6ED9               	movwf	fsr2l,c
 13180  015B0A  0E03               	movlw	high _dbuf
 13181  015B0C  200C               	addwfc	(btemp+11)^0,w,c
 13182  015B0E  6EDA               	movwf	fsr2h,c
 13183  015B10  0EE1               	movlw	-31
 13184  015B12  006F FF8F FFDF     	movff	plusw1,indf2
 13185                           
 13186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13187                           ;stkvar	_i @ sp[(-20)+14]
 13188  015B18  50E1               	movf	fsr1l,w,c
 13189  015B1A  0FFA               	addlw	-6
 13190  015B1C  6ED9               	movwf	fsr2l,c
 13191  015B1E  50E2               	movf	fsr1h,w,c
 13192  015B20  6EDA               	movwf	fsr2h,c
 13193  015B22  0EFF               	movlw	255
 13194  015B24  22DA               	addwfc	fsr2h,f,c
 13195  015B26  06DE               	decf	postinc2,f,c
 13196  015B28  0E00               	movlw	0
 13197  015B2A  5ADD               	subwfb	postdec2,f,c
 13198                           
 13199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13200                           ;stkvar	_i @ sp[(-20)+14]
 13201  015B2C  0EFA               	movlw	-6
 13202  015B2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13203  015B34  0EFB               	movlw	-5
 13204  015B36  006F FF8C  F00C    	movff	plusw1,btemp+11
 13205  015B3C  0E94               	movlw	low _dbuf
 13206  015B3E  240B               	addwf	(btemp+10)^0,w,c
 13207  015B40  6ED9               	movwf	fsr2l,c
 13208  015B42  0E03               	movlw	high _dbuf
 13209  015B44  200C               	addwfc	(btemp+11)^0,w,c
 13210  015B46  6EDA               	movwf	fsr2h,c
 13211  015B48  0E30               	movlw	48
 13212  015B4A  6EDF               	movwf	indf2,c
 13213  015B4C                     l12014:
 13214                           
 13215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13216                           ;stkvar	_w @ sp[(-20)+16]
 13217  015B4C  0EFC               	movlw	-4
 13218  015B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 13219  015B54  006F FF8F FFE6     	movff	plusw1,postinc1
 13220                           
 13221                           ;stkvar	_i @ sp[(-22)+14]
 13222  015B5A  0E94               	movlw	low _dbuf
 13223  015B5C  6E0B               	movwf	(btemp+10)^0,c
 13224  015B5E  0E03               	movlw	high _dbuf
 13225  015B60  6E0C               	movwf	(btemp+11)^0,c
 13226  015B62  0EF8               	movlw	-8
 13227  015B64  50E3               	movf	plusw1,w,c
 13228  015B66  260B               	addwf	(btemp+10)^0,f,c
 13229  015B68  0EF9               	movlw	-7
 13230  015B6A  50E3               	movf	plusw1,w,c
 13231  015B6C  220C               	addwfc	(btemp+11)^0,f,c
 13232  015B6E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13233  015B74  0060  F033  FFE6   	movff	btemp+11,postinc1
 13234                           
 13235                           ;stkvar	_fp @ sp[(-24)+-2]
 13236  015B7A  0EE6               	movlw	-26
 13237  015B7C  006F FF8F FFE6     	movff	plusw1,postinc1
 13238  015B82  006F FF8F FFE6     	movff	plusw1,postinc1
 13239  015B88  EC6D  F0C8         	call	_pad	;wreg free
 13240                           
 13241                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13242  015B8C  0EE1               	movlw	225
 13243  015B8E  26E1               	addwf	fsr1l,f,c
 13244  015B90  0EFF               	movlw	255
 13245  015B92  22E2               	addwfc	fsr1h,f,c
 13246  015B94  0012               	return		;funcret
 13247  015B96                     __end_of_xtoa:
 13248                           	opt callstack 0
 13249                           
 13250 ;; *************** function _toupper *****************
 13251 ;; Defined at:
 13252 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;  c               2  [STACK] int 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  2  [STACK] int 
 13259 ;; Registers used:
 13260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/3
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13270 ;;Total ram usage:        0 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:   16
 13273 ;; This function calls:
 13274 ;;		_islower
 13275 ;; This function is called by:
 13276 ;;		_xtoa
 13277 ;; This function uses a reentrant model
 13278 ;;
 13279                           
 13280                           	psect	text47
 13281  01A2A0                     __ptext47:
 13282                           	opt callstack 0
 13283  01A2A0                     _toupper:
 13284                           	opt callstack 0
 13285                           
 13286                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13287  01A2A0  52E6               	movf	postinc1,f,c
 13288  01A2A2  52E6               	movf	postinc1,f,c
 13289                           
 13290                           ;stkvar	_c @ sp[(-2)+-2]
 13291                           
 13292                           ;incstack = 0
 13293 ;; hardware stack exceeded
 13294  01A2A4  0EFC               	movlw	-4
 13295  01A2A6  50E3               	movf	plusw1,w,c
 13296  01A2A8  0F9F               	addlw	159
 13297  01A2AA  6E0B               	movwf	(btemp+10)^0,c
 13298  01A2AC  0EFD               	movlw	-3
 13299  01A2AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 13300  01A2B4  0EFF               	movlw	255
 13301  01A2B6  220C               	addwfc	(btemp+11)^0,f,c
 13302  01A2B8  500C               	movf	(btemp+11)^0,w,c
 13303  01A2BA  E106               	bnz	u5980
 13304  01A2BC  0E1A               	movlw	26
 13305  01A2BE  5C0B               	subwf	(btemp+10)^0,w,c
 13306  01A2C0  B0D8               	btfsc	status,0,c
 13307  01A2C2  D002               	goto	u5980
 13308  01A2C4  0E01               	movlw	1
 13309  01A2C6  D001               	goto	u5990
 13310  01A2C8                     u5980:
 13311  01A2C8  0E00               	movlw	0
 13312  01A2CA                     u5990:
 13313  01A2CA  6E0B               	movwf	(btemp+10)^0,c
 13314  01A2CC  6A0C               	clrf	(btemp+11)^0,c
 13315                           
 13316                           ;stkvar	_toupper$6178 @ sp[(-2)+0]
 13317  01A2CE  0EFE               	movlw	-2
 13318  01A2D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13319  01A2D6  0EFF               	movlw	-1
 13320  01A2D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13321                           
 13322                           ;stkvar	_toupper$6178 @ sp[(-2)+0]
 13323  01A2DE  0EFE               	movlw	-2
 13324  01A2E0  006F FF8C  F001    	movff	plusw1,btemp
 13325  01A2E6  0EFF               	movlw	-1
 13326  01A2E8  50E3               	movf	plusw1,w,c
 13327  01A2EA  1001               	iorwf	btemp^0,w,c
 13328  01A2EC  B4D8               	btfsc	status,2,c
 13329  01A2EE  D00D               	goto	l7832
 13330                           
 13331                           ;stkvar	_c @ sp[(-2)+-2]
 13332  01A2F0  0EFC               	movlw	-4
 13333  01A2F2  006F FF8C  F001    	movff	plusw1,btemp
 13334  01A2F8  0EFD               	movlw	-3
 13335  01A2FA  006F FF8C  F002    	movff	plusw1,btemp+1
 13336  01A300  0E5F               	movlw	95
 13337  01A302  1601               	andwf	btemp^0,f,c
 13338  01A304  0E00               	movlw	0
 13339  01A306  1602               	andwf	(btemp+1)^0,f,c
 13340  01A308  D008               	goto	l3441
 13341  01A30A                     l7832:
 13342                           
 13343                           ;stkvar	_c @ sp[(-2)+-2]
 13344  01A30A  0EFC               	movlw	-4
 13345  01A30C  006F FF8C  F001    	movff	plusw1,btemp
 13346  01A312  0EFD               	movlw	-3
 13347  01A314  006F FF8C  F002    	movff	plusw1,btemp+1
 13348  01A31A                     l3441:
 13349                           
 13350                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13351  01A31A  52E5               	movf	postdec1,f,c
 13352  01A31C  52E5               	movf	postdec1,f,c
 13353  01A31E  52E5               	movf	postdec1,f,c
 13354  01A320  52E5               	movf	postdec1,f,c
 13355  01A322  0012               	return		;funcret
 13356  01A324                     __end_of_toupper:
 13357                           	opt callstack 0
 13358                           
 13359 ;; *************** function _islower *****************
 13360 ;; Defined at:
 13361 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13362 ;; Parameters:    Size  Location     Type
 13363 ;;  c               2  [STACK] int 
 13364 ;; Auto vars:     Size  Location     Type
 13365 ;;		None
 13366 ;; Return value:  Size  Location     Type
 13367 ;;                  2  [STACK] int 
 13368 ;; Registers used:
 13369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13370 ;; Tracked objects:
 13371 ;;		On entry : 0/0
 13372 ;;		On exit  : 0/0
 13373 ;;		Unchanged: 0/0
 13374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13379 ;;Total ram usage:        0 bytes
 13380 ;; Hardware stack levels used:    1
 13381 ;; Hardware stack levels required when called:   15
 13382 ;; This function calls:
 13383 ;;		Nothing
 13384 ;; This function is called by:
 13385 ;;		_toupper
 13386 ;; This function uses a reentrant model
 13387 ;;
 13388                           
 13389                           	psect	text48
 13390  01AF3A                     __ptext48:
 13391                           	opt callstack 0
 13392  01AF3A                     _islower:
 13393                           	opt callstack 0
 13394                           
 13395                           ;stkvar	_c @ sp[(0)+-2]
 13396                           
 13397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13398                           ;incstack = 0
 13399 ;; hardware stack exceeded
 13400  01AF3A  0EFE               	movlw	-2
 13401  01AF3C  50E3               	movf	plusw1,w,c
 13402  01AF3E  0F9F               	addlw	159
 13403  01AF40  6E0B               	movwf	(btemp+10)^0,c
 13404  01AF42  0EFF               	movlw	-1
 13405  01AF44  006F FF8C  F00C    	movff	plusw1,btemp+11
 13406  01AF4A  0EFF               	movlw	255
 13407  01AF4C  220C               	addwfc	(btemp+11)^0,f,c
 13408  01AF4E  500C               	movf	(btemp+11)^0,w,c
 13409  01AF50  E106               	bnz	u5670
 13410  01AF52  0E1A               	movlw	26
 13411  01AF54  5C0B               	subwf	(btemp+10)^0,w,c
 13412  01AF56  B0D8               	btfsc	status,0,c
 13413  01AF58  D002               	goto	u5670
 13414  01AF5A  0E01               	movlw	1
 13415  01AF5C  D001               	goto	u5680
 13416  01AF5E                     u5670:
 13417  01AF5E  0E00               	movlw	0
 13418  01AF60                     u5680:
 13419  01AF60  6E01               	movwf	btemp^0,c
 13420  01AF62  6A02               	clrf	(btemp+1)^0,c
 13421                           
 13422                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13423  01AF64  52E5               	movf	postdec1,f,c
 13424  01AF66  52E5               	movf	postdec1,f,c
 13425  01AF68  0012               	return		;funcret
 13426  01AF6A                     __end_of_islower:
 13427                           	opt callstack 0
 13428                           
 13429 ;; *************** function _isalpha *****************
 13430 ;; Defined at:
 13431 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;  c               2  [STACK] int 
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;		None
 13436 ;; Return value:  Size  Location     Type
 13437 ;;                  2  [STACK] int 
 13438 ;; Registers used:
 13439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13449 ;;Total ram usage:        0 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; Hardware stack levels required when called:   15
 13452 ;; This function calls:
 13453 ;;		Nothing
 13454 ;; This function is called by:
 13455 ;;		_xtoa
 13456 ;; This function uses a reentrant model
 13457 ;;
 13458                           
 13459                           	psect	text49
 13460  01AB96                     __ptext49:
 13461                           	opt callstack 0
 13462  01AB96                     _isalpha:
 13463                           	opt callstack 0
 13464                           
 13465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13466                           ;incstack = 0
 13467 ;; hardware stack exceeded
 13468  01AB96  0E9F               	movlw	159
 13469  01AB98  6E0B               	movwf	(btemp+10)^0,c
 13470  01AB9A  0EFF               	movlw	255
 13471  01AB9C  6E0C               	movwf	(btemp+11)^0,c
 13472                           
 13473                           ;stkvar	_c @ sp[(0)+-2]
 13474  01AB9E  0EFE               	movlw	-2
 13475  01ABA0  006F FF8C  F009    	movff	plusw1,btemp+8
 13476  01ABA6  0EFF               	movlw	-1
 13477  01ABA8  006F FF8C  F00A    	movff	plusw1,btemp+9
 13478  01ABAE  0E20               	movlw	32
 13479  01ABB0  1209               	iorwf	(btemp+8)^0,f,c
 13480  01ABB2  0E00               	movlw	0
 13481  01ABB4  120A               	iorwf	(btemp+9)^0,f,c
 13482  01ABB6  500B               	movf	(btemp+10)^0,w,c
 13483  01ABB8  2609               	addwf	(btemp+8)^0,f,c
 13484  01ABBA  500C               	movf	(btemp+11)^0,w,c
 13485  01ABBC  220A               	addwfc	(btemp+9)^0,f,c
 13486  01ABBE  500A               	movf	(btemp+9)^0,w,c
 13487  01ABC0  E106               	bnz	u5960
 13488  01ABC2  0E1A               	movlw	26
 13489  01ABC4  5C09               	subwf	(btemp+8)^0,w,c
 13490  01ABC6  B0D8               	btfsc	status,0,c
 13491  01ABC8  D002               	goto	u5960
 13492  01ABCA  0E01               	movlw	1
 13493  01ABCC  D001               	goto	u5970
 13494  01ABCE                     u5960:
 13495  01ABCE  0E00               	movlw	0
 13496  01ABD0                     u5970:
 13497  01ABD0  6E01               	movwf	btemp^0,c
 13498  01ABD2  6A02               	clrf	(btemp+1)^0,c
 13499                           
 13500                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13501  01ABD4  52E5               	movf	postdec1,f,c
 13502  01ABD6  52E5               	movf	postdec1,f,c
 13503  01ABD8  0012               	return		;funcret
 13504  01ABDA                     __end_of_isalpha:
 13505                           	opt callstack 0
 13506                           
 13507 ;; *************** function _utoa *****************
 13508 ;; Defined at:
 13509 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13512 ;;		 -> f(6), NULL(0), 
 13513 ;;  d               8  [STACK] unsigned long long 
 13514 ;; Auto vars:     Size  Location     Type
 13515 ;;  n               8  [STACK] unsigned long long 
 13516 ;;  i               2  [STACK] int 
 13517 ;;  w               2  [STACK] int 
 13518 ;;  p               2  [STACK] int 
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  2  [STACK] int 
 13521 ;; Registers used:
 13522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13523 ;; Tracked objects:
 13524 ;;		On entry : 0/0
 13525 ;;		On exit  : 0/0
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13532 ;;Total ram usage:        0 bytes
 13533 ;; Hardware stack levels used:    1
 13534 ;; Hardware stack levels required when called:   20
 13535 ;; This function calls:
 13536 ;;		___lodiv
 13537 ;;		___lomod
 13538 ;;		_pad
 13539 ;; This function is called by:
 13540 ;;		_vfpfcnvrt
 13541 ;; This function uses a reentrant model
 13542 ;;
 13543                           
 13544                           	psect	text50
 13545  0162A4                     __ptext50:
 13546                           	opt callstack 0
 13547  0162A4                     _utoa:
 13548                           	opt callstack 0
 13549                           
 13550                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13551  0162A4  0E0E               	movlw	14
 13552  0162A6  26E1               	addwf	fsr1l,f,c
 13553  0162A8  0E00               	movlw	0
 13554  0162AA  22E2               	addwfc	fsr1h,f,c
 13555                           
 13556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13557                           
 13558                           ;incstack = 0
 13559 ;; hardware stack exceeded
 13560  0162AC  AE24               	btfss	(_prec+1)^0,7,c
 13561                           
 13562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13563  0162AE  9225               	bcf	_flags^0,1,c
 13564                           
 13565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13566  0162B0  BE24               	btfsc	(_prec+1)^0,7,c
 13567  0162B2  D005               	goto	u11270
 13568  0162B4  5024               	movf	(_prec+1)^0,w,c
 13569  0162B6  E110               	bnz	l11914
 13570  0162B8  0423               	decf	_prec^0,w,c
 13571  0162BA  B0D8               	btfsc	status,0,c
 13572  0162BC  D00D               	goto	l11914
 13573  0162BE                     u11270:
 13574  0162BE  0E01               	movlw	1
 13575  0162C0  6E0B               	movwf	(btemp+10)^0,c
 13576  0162C2  0E00               	movlw	0
 13577  0162C4  6E0C               	movwf	(btemp+11)^0,c
 13578                           
 13579                           ;stkvar	_p @ sp[(-14)+12]
 13580  0162C6  0EFE               	movlw	-2
 13581  0162C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13582  0162CE  0EFF               	movlw	-1
 13583  0162D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 13584  0162D6  D008               	goto	l2259
 13585  0162D8                     l11914:
 13586                           
 13587                           ;stkvar	_p @ sp[(-14)+12]
 13588  0162D8  0EFE               	movlw	-2
 13589  0162DA  0060  F08F  FFE3   	movff	_prec,plusw1
 13590  0162E0  0EFF               	movlw	-1
 13591  0162E2  0060  F093  FFE3   	movff	_prec+1,plusw1
 13592  0162E8                     l2259:
 13593                           
 13594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13595                           ;stkvar	_w @ sp[(-14)+10]
 13596  0162E8  0EFC               	movlw	-4
 13597  0162EA  0060  F087  FFE3   	movff	_width,plusw1
 13598  0162F0  0EFD               	movlw	-3
 13599  0162F2  0060  F08B  FFE3   	movff	_width+1,plusw1
 13600                           
 13601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13602                           ;stkvar	_d @ sp[(-14)+-10]
 13603  0162F8  0EE8               	movlw	232
 13604  0162FA  24E1               	addwf	fsr1l,w,c
 13605  0162FC  6ED9               	movwf	fsr2l,c
 13606  0162FE  0EFF               	movlw	255
 13607  016300  20E2               	addwfc	fsr1h,w,c
 13608  016302  6EDA               	movwf	fsr2h,c
 13609                           
 13610                           ;stkvar	_n @ sp[(-14)+0]
 13611  016304  0E08               	movlw	8
 13612  016306  6E01               	movwf	btemp^0,c
 13613  016308  0EF2               	movlw	-14
 13614  01630A                     us1128999:
 13615  01630A  006F FF7B FFE3     	movff	postinc2,plusw1
 13616  016310  28E8               	incf	wreg,w,c
 13617  016312  2E01               	decfsz	btemp^0,f,c
 13618  016314  D7FA               	bra	us1128999
 13619                           
 13620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13621  016316  0E4F               	movlw	79
 13622  016318  6E0B               	movwf	(btemp+10)^0,c
 13623  01631A  0E00               	movlw	0
 13624  01631C  6E0C               	movwf	(btemp+11)^0,c
 13625                           
 13626                           ;stkvar	_i @ sp[(-14)+8]
 13627  01631E  0EFA               	movlw	-6
 13628  016320  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13629  016326  0EFB               	movlw	-5
 13630  016328  0060  F033  FFE3   	movff	btemp+11,plusw1
 13631                           
 13632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13633  01632E  0103               	movlb	3	; () banked
 13634  016330  6BE3               	clrf	(_dbuf+79)& (0+255),b
 13635                           
 13636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13637  016332  D0FB               	goto	l11932
 13638  016334                     l11922:
 13639                           
 13640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13641                           ;stkvar	_i @ sp[(-14)+8]
 13642  016334  50E1               	movf	fsr1l,w,c
 13643  016336  0FFA               	addlw	-6
 13644  016338  6ED9               	movwf	fsr2l,c
 13645  01633A  50E2               	movf	fsr1h,w,c
 13646  01633C  6EDA               	movwf	fsr2h,c
 13647  01633E  0EFF               	movlw	255
 13648  016340  22DA               	addwfc	fsr2h,f,c
 13649  016342  06DE               	decf	postinc2,f,c
 13650  016344  0E00               	movlw	0
 13651  016346  5ADD               	subwfb	postdec2,f,c
 13652                           
 13653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13654  016348  0E0A               	movlw	10
 13655  01634A  6EE6               	movwf	postinc1,c
 13656  01634C  0E00               	movlw	0
 13657  01634E  6EE6               	movwf	postinc1,c
 13658  016350  0E00               	movlw	0
 13659  016352  6EE6               	movwf	postinc1,c
 13660  016354  0E00               	movlw	0
 13661  016356  6EE6               	movwf	postinc1,c
 13662  016358  0E00               	movlw	0
 13663  01635A  6EE6               	movwf	postinc1,c
 13664  01635C  0E00               	movlw	0
 13665  01635E  6EE6               	movwf	postinc1,c
 13666  016360  0E00               	movlw	0
 13667  016362  6EE6               	movwf	postinc1,c
 13668  016364  0E00               	movlw	0
 13669  016366  6EE6               	movwf	postinc1,c
 13670                           
 13671                           ;stkvar	_n @ sp[(-22)+0]
 13672  016368  50E1               	movf	fsr1l,w,c
 13673  01636A  0FEA               	addlw	-22
 13674  01636C  6ED9               	movwf	fsr2l,c
 13675  01636E  50E2               	movf	fsr1h,w,c
 13676  016370  6EDA               	movwf	fsr2h,c
 13677  016372  0EFF               	movlw	255
 13678  016374  22DA               	addwfc	fsr2h,f,c
 13679  016376  006F FF7B FFE6     	movff	postinc2,postinc1
 13680  01637C  006F FF7B FFE6     	movff	postinc2,postinc1
 13681  016382  006F FF7B FFE6     	movff	postinc2,postinc1
 13682  016388  006F FF7B FFE6     	movff	postinc2,postinc1
 13683  01638E  006F FF7B FFE6     	movff	postinc2,postinc1
 13684  016394  006F FF7B FFE6     	movff	postinc2,postinc1
 13685  01639A  006F FF7B FFE6     	movff	postinc2,postinc1
 13686  0163A0  006F FF7B FFE6     	movff	postinc2,postinc1
 13687  0163A6  EC7A  F0C5         	call	___lomod	;wreg free
 13688  0163AA  52E5               	movf	postdec1,f,c
 13689  0163AC  006F FF9C  F018    	movff	indf1,btemp+23
 13690  0163B2  52E5               	movf	postdec1,f,c
 13691  0163B4  006F FF9C  F017    	movff	indf1,btemp+22
 13692  0163BA  52E5               	movf	postdec1,f,c
 13693  0163BC  006F FF9C  F016    	movff	indf1,btemp+21
 13694  0163C2  52E5               	movf	postdec1,f,c
 13695  0163C4  006F FF9C  F015    	movff	indf1,btemp+20
 13696  0163CA  52E5               	movf	postdec1,f,c
 13697  0163CC  006F FF9C  F014    	movff	indf1,btemp+19
 13698  0163D2  52E5               	movf	postdec1,f,c
 13699  0163D4  006F FF9C  F013    	movff	indf1,btemp+18
 13700  0163DA  52E5               	movf	postdec1,f,c
 13701  0163DC  006F FF9C  F012    	movff	indf1,btemp+17
 13702  0163E2  52E5               	movf	postdec1,f,c
 13703  0163E4  006F FF9C  F011    	movff	indf1,btemp+16
 13704  0163EA  0EF8               	movlw	248
 13705  0163EC  26E1               	addwf	fsr1l,f,c
 13706  0163EE  0EFF               	movlw	255
 13707  0163F0  22E2               	addwfc	fsr1h,f,c
 13708  0163F2  0E30               	movlw	48
 13709  0163F4  2611               	addwf	(btemp+16)^0,f,c
 13710                           
 13711                           ;stkvar	_i @ sp[(-14)+8]
 13712  0163F6  0EFA               	movlw	-6
 13713  0163F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 13714  0163FE  0EFB               	movlw	-5
 13715  016400  006F FF8C  F00C    	movff	plusw1,btemp+11
 13716  016406  0E94               	movlw	low _dbuf
 13717  016408  240B               	addwf	(btemp+10)^0,w,c
 13718  01640A  6ED9               	movwf	fsr2l,c
 13719  01640C  0E03               	movlw	high _dbuf
 13720  01640E  200C               	addwfc	(btemp+11)^0,w,c
 13721  016410  6EDA               	movwf	fsr2h,c
 13722  016412  0060  F047  FFDF   	movff	btemp+16,indf2
 13723                           
 13724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13725                           ;stkvar	_p @ sp[(-14)+12]
 13726  016418  50E1               	movf	fsr1l,w,c
 13727  01641A  0FFE               	addlw	-2
 13728  01641C  6ED9               	movwf	fsr2l,c
 13729  01641E  50E2               	movf	fsr1h,w,c
 13730  016420  6EDA               	movwf	fsr2h,c
 13731  016422  0EFF               	movlw	255
 13732  016424  22DA               	addwfc	fsr2h,f,c
 13733  016426  06DE               	decf	postinc2,f,c
 13734  016428  0E00               	movlw	0
 13735  01642A  5ADD               	subwfb	postdec2,f,c
 13736                           
 13737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13738                           ;stkvar	_w @ sp[(-14)+10]
 13739  01642C  50E1               	movf	fsr1l,w,c
 13740  01642E  0FFC               	addlw	-4
 13741  016430  6ED9               	movwf	fsr2l,c
 13742  016432  50E2               	movf	fsr1h,w,c
 13743  016434  6EDA               	movwf	fsr2h,c
 13744  016436  0EFF               	movlw	255
 13745  016438  22DA               	addwfc	fsr2h,f,c
 13746  01643A  06DE               	decf	postinc2,f,c
 13747  01643C  0E00               	movlw	0
 13748  01643E  5ADD               	subwfb	postdec2,f,c
 13749                           
 13750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13751  016440  0E0A               	movlw	10
 13752  016442  6EE6               	movwf	postinc1,c
 13753  016444  0E00               	movlw	0
 13754  016446  6EE6               	movwf	postinc1,c
 13755  016448  0E00               	movlw	0
 13756  01644A  6EE6               	movwf	postinc1,c
 13757  01644C  0E00               	movlw	0
 13758  01644E  6EE6               	movwf	postinc1,c
 13759  016450  0E00               	movlw	0
 13760  016452  6EE6               	movwf	postinc1,c
 13761  016454  0E00               	movlw	0
 13762  016456  6EE6               	movwf	postinc1,c
 13763  016458  0E00               	movlw	0
 13764  01645A  6EE6               	movwf	postinc1,c
 13765  01645C  0E00               	movlw	0
 13766  01645E  6EE6               	movwf	postinc1,c
 13767                           
 13768                           ;stkvar	_n @ sp[(-22)+0]
 13769  016460  50E1               	movf	fsr1l,w,c
 13770  016462  0FEA               	addlw	-22
 13771  016464  6ED9               	movwf	fsr2l,c
 13772  016466  50E2               	movf	fsr1h,w,c
 13773  016468  6EDA               	movwf	fsr2h,c
 13774  01646A  0EFF               	movlw	255
 13775  01646C  22DA               	addwfc	fsr2h,f,c
 13776  01646E  006F FF7B FFE6     	movff	postinc2,postinc1
 13777  016474  006F FF7B FFE6     	movff	postinc2,postinc1
 13778  01647A  006F FF7B FFE6     	movff	postinc2,postinc1
 13779  016480  006F FF7B FFE6     	movff	postinc2,postinc1
 13780  016486  006F FF7B FFE6     	movff	postinc2,postinc1
 13781  01648C  006F FF7B FFE6     	movff	postinc2,postinc1
 13782  016492  006F FF7B FFE6     	movff	postinc2,postinc1
 13783  016498  006F FF7B FFE6     	movff	postinc2,postinc1
 13784  01649E  EC85  F0C0         	call	___lodiv	;wreg free
 13785  0164A2  52E5               	movf	postdec1,f,c
 13786  0164A4  006F FF9C  F018    	movff	indf1,btemp+23
 13787  0164AA  52E5               	movf	postdec1,f,c
 13788  0164AC  006F FF9C  F017    	movff	indf1,btemp+22
 13789  0164B2  52E5               	movf	postdec1,f,c
 13790  0164B4  006F FF9C  F016    	movff	indf1,btemp+21
 13791  0164BA  52E5               	movf	postdec1,f,c
 13792  0164BC  006F FF9C  F015    	movff	indf1,btemp+20
 13793  0164C2  52E5               	movf	postdec1,f,c
 13794  0164C4  006F FF9C  F014    	movff	indf1,btemp+19
 13795  0164CA  52E5               	movf	postdec1,f,c
 13796  0164CC  006F FF9C  F013    	movff	indf1,btemp+18
 13797  0164D2  52E5               	movf	postdec1,f,c
 13798  0164D4  006F FF9C  F012    	movff	indf1,btemp+17
 13799  0164DA  52E5               	movf	postdec1,f,c
 13800  0164DC  006F FF9C  F011    	movff	indf1,btemp+16
 13801  0164E2  0EF8               	movlw	248
 13802  0164E4  26E1               	addwf	fsr1l,f,c
 13803  0164E6  0EFF               	movlw	255
 13804  0164E8  22E2               	addwfc	fsr1h,f,c
 13805                           
 13806                           ;stkvar	_n @ sp[(-14)+0]
 13807  0164EA  0EF2               	movlw	-14
 13808  0164EC  0060  F047  FFE3   	movff	btemp+16,plusw1
 13809  0164F2  0EF3               	movlw	-13
 13810  0164F4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13811  0164FA  0EF4               	movlw	-12
 13812  0164FC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13813  016502  0EF5               	movlw	-11
 13814  016504  0060  F053  FFE3   	movff	btemp+19,plusw1
 13815  01650A  0EF6               	movlw	-10
 13816  01650C  0060  F057  FFE3   	movff	btemp+20,plusw1
 13817  016512  0EF7               	movlw	-9
 13818  016514  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13819  01651A  0EF8               	movlw	-8
 13820  01651C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13821  016522  0EF9               	movlw	-7
 13822  016524  0060  F063  FFE3   	movff	btemp+23,plusw1
 13823  01652A                     l11932:
 13824                           
 13825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13826                           ;stkvar	_i @ sp[(-14)+8]
 13827  01652A  0EFA               	movlw	-6
 13828  01652C  006F FF8C  F001    	movff	plusw1,btemp
 13829  016532  0EFB               	movlw	-5
 13830  016534  50E3               	movf	plusw1,w,c
 13831  016536  1001               	iorwf	btemp^0,w,c
 13832  016538  B4D8               	btfsc	status,2,c
 13833  01653A  D02F               	goto	u11330
 13834                           
 13835                           ;stkvar	_n @ sp[(-14)+0]
 13836  01653C  0EF2               	movlw	-14
 13837  01653E  50E3               	movf	plusw1,w,c
 13838  016540  E115               	bnz	u11301
 13839  016542  0EF3               	movlw	-13
 13840  016544  50E3               	movf	plusw1,w,c
 13841  016546  E112               	bnz	u11301
 13842  016548  0EF4               	movlw	-12
 13843  01654A  50E3               	movf	plusw1,w,c
 13844  01654C  E10F               	bnz	u11301
 13845  01654E  0EF5               	movlw	-11
 13846  016550  50E3               	movf	plusw1,w,c
 13847  016552  E10C               	bnz	u11301
 13848  016554  0EF6               	movlw	-10
 13849  016556  50E3               	movf	plusw1,w,c
 13850  016558  E109               	bnz	u11301
 13851  01655A  0EF7               	movlw	-9
 13852  01655C  50E3               	movf	plusw1,w,c
 13853  01655E  E106               	bnz	u11301
 13854  016560  0EF8               	movlw	-8
 13855  016562  50E3               	movf	plusw1,w,c
 13856  016564  E103               	bnz	u11301
 13857  016566  0EF9               	movlw	-7
 13858  016568  50E3               	movf	plusw1,w,c
 13859  01656A  A4D8               	btfss	status,2,c
 13860  01656C                     u11301:
 13861  01656C  D6E3               	goto	l11922
 13862                           
 13863                           ;stkvar	_p @ sp[(-14)+12]
 13864  01656E  0EFF               	movlw	-1
 13865  016570  BEE3               	btfsc	plusw1,7,c
 13866  016572  D007               	goto	u11310
 13867  016574  0EFF               	movlw	-1
 13868  016576  50E3               	movf	plusw1,w,c
 13869  016578  E103               	bnz	u11311
 13870  01657A  0EFE               	movlw	-2
 13871  01657C  04E3               	decf	plusw1,w,c
 13872  01657E  B0D8               	btfsc	status,0,c
 13873  016580                     u11311:
 13874  016580  D6D9               	goto	l11922
 13875  016582                     u11310:
 13876                           
 13877                           ;stkvar	_w @ sp[(-14)+10]
 13878  016582  0EFD               	movlw	-3
 13879  016584  BEE3               	btfsc	plusw1,7,c
 13880  016586  D009               	goto	u11330
 13881  016588  0EFD               	movlw	-3
 13882  01658A  50E3               	movf	plusw1,w,c
 13883  01658C  E104               	bnz	u11320
 13884  01658E  0EFC               	movlw	-4
 13885  016590  04E3               	decf	plusw1,w,c
 13886  016592  A0D8               	btfss	status,0,c
 13887  016594  D002               	goto	u11330
 13888  016596                     u11320:
 13889  016596  B225               	btfsc	_flags^0,1,c
 13890  016598  D6CD               	goto	l11922
 13891  01659A                     u11330:
 13892                           
 13893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13894                           ;stkvar	_w @ sp[(-14)+10]
 13895  01659A  0EFC               	movlw	-4
 13896  01659C  006F FF8F FFE6     	movff	plusw1,postinc1
 13897  0165A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13898                           
 13899                           ;stkvar	_i @ sp[(-16)+8]
 13900  0165A8  0E94               	movlw	low _dbuf
 13901  0165AA  6E0B               	movwf	(btemp+10)^0,c
 13902  0165AC  0E03               	movlw	high _dbuf
 13903  0165AE  6E0C               	movwf	(btemp+11)^0,c
 13904  0165B0  0EF8               	movlw	-8
 13905  0165B2  50E3               	movf	plusw1,w,c
 13906  0165B4  260B               	addwf	(btemp+10)^0,f,c
 13907  0165B6  0EF9               	movlw	-7
 13908  0165B8  50E3               	movf	plusw1,w,c
 13909  0165BA  220C               	addwfc	(btemp+11)^0,f,c
 13910  0165BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13911  0165C2  0060  F033  FFE6   	movff	btemp+11,postinc1
 13912                           
 13913                           ;stkvar	_fp @ sp[(-18)+-2]
 13914  0165C8  0EEC               	movlw	-20
 13915  0165CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13916  0165D0  006F FF8F FFE6     	movff	plusw1,postinc1
 13917  0165D6  EC6D  F0C8         	call	_pad	;wreg free
 13918                           
 13919                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13920  0165DA  0EE8               	movlw	232
 13921  0165DC  26E1               	addwf	fsr1l,f,c
 13922  0165DE  0EFF               	movlw	255
 13923  0165E0  22E2               	addwfc	fsr1h,f,c
 13924  0165E2  0012               	return		;funcret
 13925  0165E4                     __end_of_utoa:
 13926                           	opt callstack 0
 13927                           
 13928 ;; *************** function ___lomod *****************
 13929 ;; Defined at:
 13930 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;  dividend        8  [STACK] unsigned long long 
 13933 ;;  divisor         8  [STACK] unsigned long long 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;  counter         1  [STACK] unsigned char 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  8  [STACK] unsigned long long 
 13938 ;; Registers used:
 13939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/3
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13949 ;;Total ram usage:        0 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:   15
 13952 ;; This function calls:
 13953 ;;		Nothing
 13954 ;; This function is called by:
 13955 ;;		_utoa
 13956 ;; This function uses a reentrant model
 13957 ;;
 13958                           
 13959                           	psect	text51
 13960  018AF4                     __ptext51:
 13961                           	opt callstack 0
 13962  018AF4                     ___lomod:
 13963                           	opt callstack 0
 13964                           
 13965                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13966  018AF4  52E6               	movf	postinc1,f,c
 13967                           
 13968                           ;stkvar	_divisor @ sp[(-1)+-16]
 13969                           
 13970                           ;incstack = 0
 13971 ;; hardware stack exceeded
 13972  018AF6  0EEF               	movlw	-17
 13973  018AF8  50E3               	movf	plusw1,w,c
 13974  018AFA  E116               	bnz	u7110
 13975  018AFC  0EF0               	movlw	-16
 13976  018AFE  50E3               	movf	plusw1,w,c
 13977  018B00  E113               	bnz	u7110
 13978  018B02  0EF1               	movlw	-15
 13979  018B04  50E3               	movf	plusw1,w,c
 13980  018B06  E110               	bnz	u7110
 13981  018B08  0EF2               	movlw	-14
 13982  018B0A  50E3               	movf	plusw1,w,c
 13983  018B0C  E10D               	bnz	u7110
 13984  018B0E  0EF3               	movlw	-13
 13985  018B10  50E3               	movf	plusw1,w,c
 13986  018B12  E10A               	bnz	u7110
 13987  018B14  0EF4               	movlw	-12
 13988  018B16  50E3               	movf	plusw1,w,c
 13989  018B18  E107               	bnz	u7110
 13990  018B1A  0EF5               	movlw	-11
 13991  018B1C  50E3               	movf	plusw1,w,c
 13992  018B1E  E104               	bnz	u7110
 13993  018B20  0EF6               	movlw	-10
 13994  018B22  50E3               	movf	plusw1,w,c
 13995  018B24  B4D8               	btfsc	status,2,c
 13996  018B26  D075               	goto	u7140
 13997  018B28                     u7110:
 13998                           
 13999                           ;stkvar	_counter @ sp[(-1)+0]
 14000  018B28  0EFF               	movlw	-1
 14001  018B2A  6AE3               	clrf	plusw1,c
 14002  018B2C  D012               	goto	L12
 14003  018B2E                     l8442:
 14004                           
 14005                           ;stkvar	_divisor @ sp[(-1)+-16]
 14006  018B2E  90D8               	bcf	status,0,c
 14007  018B30  0EEF               	movlw	-17
 14008  018B32  36E3               	rlcf	plusw1,f,c
 14009  018B34  0EF0               	movlw	-16
 14010  018B36  36E3               	rlcf	plusw1,f,c
 14011  018B38  0EF1               	movlw	-15
 14012  018B3A  36E3               	rlcf	plusw1,f,c
 14013  018B3C  0EF2               	movlw	-14
 14014  018B3E  36E3               	rlcf	plusw1,f,c
 14015  018B40  0EF3               	movlw	-13
 14016  018B42  36E3               	rlcf	plusw1,f,c
 14017  018B44  0EF4               	movlw	-12
 14018  018B46  36E3               	rlcf	plusw1,f,c
 14019  018B48  0EF5               	movlw	-11
 14020  018B4A  36E3               	rlcf	plusw1,f,c
 14021  018B4C  0EF6               	movlw	-10
 14022  018B4E  36E3               	rlcf	plusw1,f,c
 14023                           
 14024                           ;stkvar	_counter @ sp[(-1)+0]
 14025  018B50  0EFF               	movlw	-1
 14026  018B52                     L12:
 14027  018B52  2AE3               	incf	plusw1,f,c
 14028                           
 14029                           ;stkvar	_divisor @ sp[(-1)+-16]
 14030  018B54  0EF6               	movlw	-10
 14031  018B56  AEE3               	btfss	plusw1,7,c
 14032  018B58  D7EA               	goto	l8442
 14033  018B5A                     u7120:
 14034                           
 14035                           ;stkvar	_divisor @ sp[(-1)+-16]
 14036                           ;stkvar	_dividend @ sp[(-1)+-8]
 14037  018B5A  50E1               	movf	fsr1l,w,c
 14038  018B5C  0FF7               	addlw	-9
 14039  018B5E  6ED9               	movwf	fsr2l,c
 14040  018B60  50E2               	movf	fsr1h,w,c
 14041  018B62  6EDA               	movwf	fsr2h,c
 14042  018B64  0EFF               	movlw	255
 14043  018B66  22DA               	addwfc	fsr2h,f,c
 14044  018B68  0EEF               	movlw	-17
 14045  018B6A  50E3               	movf	plusw1,w,c
 14046  018B6C  5CDE               	subwf	postinc2,w,c
 14047  018B6E  0EF0               	movlw	-16
 14048  018B70  50E3               	movf	plusw1,w,c
 14049  018B72  58DE               	subwfb	postinc2,w,c
 14050  018B74  0EF1               	movlw	-15
 14051  018B76  50E3               	movf	plusw1,w,c
 14052  018B78  58DE               	subwfb	postinc2,w,c
 14053  018B7A  0EF2               	movlw	-14
 14054  018B7C  50E3               	movf	plusw1,w,c
 14055  018B7E  58DE               	subwfb	postinc2,w,c
 14056  018B80  0EF3               	movlw	-13
 14057  018B82  50E3               	movf	plusw1,w,c
 14058  018B84  58DE               	subwfb	postinc2,w,c
 14059  018B86  0EF4               	movlw	-12
 14060  018B88  50E3               	movf	plusw1,w,c
 14061  018B8A  58DE               	subwfb	postinc2,w,c
 14062  018B8C  0EF5               	movlw	-11
 14063  018B8E  50E3               	movf	plusw1,w,c
 14064  018B90  58DE               	subwfb	postinc2,w,c
 14065  018B92  0EF6               	movlw	-10
 14066  018B94  50E3               	movf	plusw1,w,c
 14067  018B96  58DE               	subwfb	postinc2,w,c
 14068  018B98  A0D8               	btfss	status,0,c
 14069  018B9A  D01F               	goto	l8450
 14070                           
 14071                           ;stkvar	_divisor @ sp[(-1)+-16]
 14072                           ;stkvar	_dividend @ sp[(-1)+-8]
 14073  018B9C  50E1               	movf	fsr1l,w,c
 14074  018B9E  0FF7               	addlw	-9
 14075  018BA0  6ED9               	movwf	fsr2l,c
 14076  018BA2  50E2               	movf	fsr1h,w,c
 14077  018BA4  6EDA               	movwf	fsr2h,c
 14078  018BA6  0EFF               	movlw	255
 14079  018BA8  22DA               	addwfc	fsr2h,f,c
 14080  018BAA  0EEF               	movlw	-17
 14081  018BAC  50E3               	movf	plusw1,w,c
 14082  018BAE  5EDE               	subwf	postinc2,f,c
 14083  018BB0  0EF0               	movlw	-16
 14084  018BB2  50E3               	movf	plusw1,w,c
 14085  018BB4  5ADE               	subwfb	postinc2,f,c
 14086  018BB6  0EF1               	movlw	-15
 14087  018BB8  50E3               	movf	plusw1,w,c
 14088  018BBA  5ADE               	subwfb	postinc2,f,c
 14089  018BBC  0EF2               	movlw	-14
 14090  018BBE  50E3               	movf	plusw1,w,c
 14091  018BC0  5ADE               	subwfb	postinc2,f,c
 14092  018BC2  0EF3               	movlw	-13
 14093  018BC4  50E3               	movf	plusw1,w,c
 14094  018BC6  5ADE               	subwfb	postinc2,f,c
 14095  018BC8  0EF4               	movlw	-12
 14096  018BCA  50E3               	movf	plusw1,w,c
 14097  018BCC  5ADE               	subwfb	postinc2,f,c
 14098  018BCE  0EF5               	movlw	-11
 14099  018BD0  50E3               	movf	plusw1,w,c
 14100  018BD2  5ADE               	subwfb	postinc2,f,c
 14101  018BD4  0EF6               	movlw	-10
 14102  018BD6  50E3               	movf	plusw1,w,c
 14103  018BD8  5ADE               	subwfb	postinc2,f,c
 14104  018BDA                     l8450:
 14105                           
 14106                           ;stkvar	_divisor @ sp[(-1)+-16]
 14107  018BDA  90D8               	bcf	status,0,c
 14108  018BDC  0EF6               	movlw	-10
 14109  018BDE  32E3               	rrcf	plusw1,f,c
 14110  018BE0  0EF5               	movlw	-11
 14111  018BE2  32E3               	rrcf	plusw1,f,c
 14112  018BE4  0EF4               	movlw	-12
 14113  018BE6  32E3               	rrcf	plusw1,f,c
 14114  018BE8  0EF3               	movlw	-13
 14115  018BEA  32E3               	rrcf	plusw1,f,c
 14116  018BEC  0EF2               	movlw	-14
 14117  018BEE  32E3               	rrcf	plusw1,f,c
 14118  018BF0  0EF1               	movlw	-15
 14119  018BF2  32E3               	rrcf	plusw1,f,c
 14120  018BF4  0EF0               	movlw	-16
 14121  018BF6  32E3               	rrcf	plusw1,f,c
 14122  018BF8  0EEF               	movlw	-17
 14123  018BFA  32E3               	rrcf	plusw1,f,c
 14124                           
 14125                           ;stkvar	_counter @ sp[(-1)+0]
 14126  018BFC  0EFF               	movlw	-1
 14127  018BFE  50E3               	movf	plusw1,w,c
 14128  018C00  6E01               	movwf	btemp^0,c
 14129  018C02  0E01               	movlw	1
 14130  018C04  5E01               	subwf	btemp^0,f,c
 14131  018C06  0EFF               	movlw	-1
 14132  018C08  0060  F007  FFE3   	movff	btemp,plusw1
 14133  018C0E  A4D8               	btfss	status,2,c
 14134  018C10  D7A4               	goto	u7120
 14135  018C12                     u7140:
 14136                           
 14137                           ;stkvar	_dividend @ sp[(-1)+-8]
 14138  018C12  0EF7               	movlw	247
 14139  018C14  24E1               	addwf	fsr1l,w,c
 14140  018C16  6ED9               	movwf	fsr2l,c
 14141  018C18  0EFF               	movlw	255
 14142  018C1A  20E2               	addwfc	fsr1h,w,c
 14143  018C1C  6EDA               	movwf	fsr2h,c
 14144                           
 14145                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14146  018C1E  0E08               	movlw	8
 14147  018C20  6E01               	movwf	btemp^0,c
 14148  018C22  0EF7               	movlw	-9
 14149  018C24                     us715999:
 14150  018C24  006F FF7B FFE3     	movff	postinc2,plusw1
 14151  018C2A  28E8               	incf	wreg,w,c
 14152  018C2C  2E01               	decfsz	btemp^0,f,c
 14153  018C2E  D7FA               	bra	us715999
 14154                           
 14155                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14156  018C30  52E5               	movf	postdec1,f,c
 14157  018C32  0012               	return		;funcret
 14158  018C34                     __end_of___lomod:
 14159                           	opt callstack 0
 14160                           
 14161 ;; *************** function ___lodiv *****************
 14162 ;; Defined at:
 14163 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14164 ;; Parameters:    Size  Location     Type
 14165 ;;  dividend        8  [STACK] unsigned long long 
 14166 ;;  divisor         8  [STACK] unsigned long long 
 14167 ;; Auto vars:     Size  Location     Type
 14168 ;;  quotient        8  [STACK] unsigned long long 
 14169 ;;  counter         1  [STACK] unsigned char 
 14170 ;; Return value:  Size  Location     Type
 14171 ;;                  8  [STACK] unsigned long long 
 14172 ;; Registers used:
 14173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14174 ;; Tracked objects:
 14175 ;;		On entry : 0/3
 14176 ;;		On exit  : 0/0
 14177 ;;		Unchanged: 0/0
 14178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14183 ;;Total ram usage:        0 bytes
 14184 ;; Hardware stack levels used:    1
 14185 ;; Hardware stack levels required when called:   15
 14186 ;; This function calls:
 14187 ;;		Nothing
 14188 ;; This function is called by:
 14189 ;;		_utoa
 14190 ;; This function uses a reentrant model
 14191 ;;
 14192                           
 14193                           	psect	text52
 14194  01810A                     __ptext52:
 14195                           	opt callstack 0
 14196  01810A                     ___lodiv:
 14197                           	opt callstack 0
 14198                           
 14199                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14200  01810A  0E09               	movlw	9
 14201  01810C  26E1               	addwf	fsr1l,f,c
 14202  01810E  0E00               	movlw	0
 14203  018110  22E2               	addwfc	fsr1h,f,c
 14204                           
 14205                           ;stkvar	_quotient @ sp[(-9)+0]
 14206                           
 14207                           ;incstack = 0
 14208 ;; hardware stack exceeded
 14209  018112  0E07               	movlw	7
 14210  018114  6E01               	movwf	btemp^0,c
 14211  018116  0EF7               	movlw	-9
 14212  018118                     u7051:
 14213  018118  6AE3               	clrf	plusw1,c
 14214  01811A  2AE8               	incf	wreg,f,c
 14215  01811C  0601               	decf	btemp^0,f,c
 14216  01811E  E2FC               	bc	u7051
 14217                           
 14218                           ;stkvar	_divisor @ sp[(-9)+-16]
 14219  018120  0EE7               	movlw	-25
 14220  018122  50E3               	movf	plusw1,w,c
 14221  018124  E116               	bnz	u7060
 14222  018126  0EE8               	movlw	-24
 14223  018128  50E3               	movf	plusw1,w,c
 14224  01812A  E113               	bnz	u7060
 14225  01812C  0EE9               	movlw	-23
 14226  01812E  50E3               	movf	plusw1,w,c
 14227  018130  E110               	bnz	u7060
 14228  018132  0EEA               	movlw	-22
 14229  018134  50E3               	movf	plusw1,w,c
 14230  018136  E10D               	bnz	u7060
 14231  018138  0EEB               	movlw	-21
 14232  01813A  50E3               	movf	plusw1,w,c
 14233  01813C  E10A               	bnz	u7060
 14234  01813E  0EEC               	movlw	-20
 14235  018140  50E3               	movf	plusw1,w,c
 14236  018142  E107               	bnz	u7060
 14237  018144  0EED               	movlw	-19
 14238  018146  50E3               	movf	plusw1,w,c
 14239  018148  E104               	bnz	u7060
 14240  01814A  0EEE               	movlw	-18
 14241  01814C  50E3               	movf	plusw1,w,c
 14242  01814E  B4D8               	btfsc	status,2,c
 14243  018150  D088               	goto	u7090
 14244  018152                     u7060:
 14245                           
 14246                           ;stkvar	_counter @ sp[(-9)+8]
 14247  018152  0EFF               	movlw	-1
 14248  018154  6AE3               	clrf	plusw1,c
 14249  018156  D012               	goto	L13
 14250  018158                     l8418:
 14251                           
 14252                           ;stkvar	_divisor @ sp[(-9)+-16]
 14253  018158  90D8               	bcf	status,0,c
 14254  01815A  0EE7               	movlw	-25
 14255  01815C  36E3               	rlcf	plusw1,f,c
 14256  01815E  0EE8               	movlw	-24
 14257  018160  36E3               	rlcf	plusw1,f,c
 14258  018162  0EE9               	movlw	-23
 14259  018164  36E3               	rlcf	plusw1,f,c
 14260  018166  0EEA               	movlw	-22
 14261  018168  36E3               	rlcf	plusw1,f,c
 14262  01816A  0EEB               	movlw	-21
 14263  01816C  36E3               	rlcf	plusw1,f,c
 14264  01816E  0EEC               	movlw	-20
 14265  018170  36E3               	rlcf	plusw1,f,c
 14266  018172  0EED               	movlw	-19
 14267  018174  36E3               	rlcf	plusw1,f,c
 14268  018176  0EEE               	movlw	-18
 14269  018178  36E3               	rlcf	plusw1,f,c
 14270                           
 14271                           ;stkvar	_counter @ sp[(-9)+8]
 14272  01817A  0EFF               	movlw	-1
 14273  01817C                     L13:
 14274  01817C  2AE3               	incf	plusw1,f,c
 14275                           
 14276                           ;stkvar	_divisor @ sp[(-9)+-16]
 14277  01817E  0EEE               	movlw	-18
 14278  018180  AEE3               	btfss	plusw1,7,c
 14279  018182  D7EA               	goto	l8418
 14280  018184                     u7070:
 14281                           
 14282                           ;stkvar	_quotient @ sp[(-9)+0]
 14283  018184  90D8               	bcf	status,0,c
 14284  018186  0EF7               	movlw	-9
 14285  018188  36E3               	rlcf	plusw1,f,c
 14286  01818A  0EF8               	movlw	-8
 14287  01818C  36E3               	rlcf	plusw1,f,c
 14288  01818E  0EF9               	movlw	-7
 14289  018190  36E3               	rlcf	plusw1,f,c
 14290  018192  0EFA               	movlw	-6
 14291  018194  36E3               	rlcf	plusw1,f,c
 14292  018196  0EFB               	movlw	-5
 14293  018198  36E3               	rlcf	plusw1,f,c
 14294  01819A  0EFC               	movlw	-4
 14295  01819C  36E3               	rlcf	plusw1,f,c
 14296  01819E  0EFD               	movlw	-3
 14297  0181A0  36E3               	rlcf	plusw1,f,c
 14298  0181A2  0EFE               	movlw	-2
 14299  0181A4  36E3               	rlcf	plusw1,f,c
 14300                           
 14301                           ;stkvar	_divisor @ sp[(-9)+-16]
 14302                           ;stkvar	_dividend @ sp[(-9)+-8]
 14303  0181A6  50E1               	movf	fsr1l,w,c
 14304  0181A8  0FEF               	addlw	-17
 14305  0181AA  6ED9               	movwf	fsr2l,c
 14306  0181AC  50E2               	movf	fsr1h,w,c
 14307  0181AE  6EDA               	movwf	fsr2h,c
 14308  0181B0  0EFF               	movlw	255
 14309  0181B2  22DA               	addwfc	fsr2h,f,c
 14310  0181B4  0EE7               	movlw	-25
 14311  0181B6  50E3               	movf	plusw1,w,c
 14312  0181B8  5CDE               	subwf	postinc2,w,c
 14313  0181BA  0EE8               	movlw	-24
 14314  0181BC  50E3               	movf	plusw1,w,c
 14315  0181BE  58DE               	subwfb	postinc2,w,c
 14316  0181C0  0EE9               	movlw	-23
 14317  0181C2  50E3               	movf	plusw1,w,c
 14318  0181C4  58DE               	subwfb	postinc2,w,c
 14319  0181C6  0EEA               	movlw	-22
 14320  0181C8  50E3               	movf	plusw1,w,c
 14321  0181CA  58DE               	subwfb	postinc2,w,c
 14322  0181CC  0EEB               	movlw	-21
 14323  0181CE  50E3               	movf	plusw1,w,c
 14324  0181D0  58DE               	subwfb	postinc2,w,c
 14325  0181D2  0EEC               	movlw	-20
 14326  0181D4  50E3               	movf	plusw1,w,c
 14327  0181D6  58DE               	subwfb	postinc2,w,c
 14328  0181D8  0EED               	movlw	-19
 14329  0181DA  50E3               	movf	plusw1,w,c
 14330  0181DC  58DE               	subwfb	postinc2,w,c
 14331  0181DE  0EEE               	movlw	-18
 14332  0181E0  50E3               	movf	plusw1,w,c
 14333  0181E2  58DE               	subwfb	postinc2,w,c
 14334  0181E4  A0D8               	btfss	status,0,c
 14335  0181E6  D021               	goto	l8430
 14336                           
 14337                           ;stkvar	_divisor @ sp[(-9)+-16]
 14338                           ;stkvar	_dividend @ sp[(-9)+-8]
 14339  0181E8  50E1               	movf	fsr1l,w,c
 14340  0181EA  0FEF               	addlw	-17
 14341  0181EC  6ED9               	movwf	fsr2l,c
 14342  0181EE  50E2               	movf	fsr1h,w,c
 14343  0181F0  6EDA               	movwf	fsr2h,c
 14344  0181F2  0EFF               	movlw	255
 14345  0181F4  22DA               	addwfc	fsr2h,f,c
 14346  0181F6  0EE7               	movlw	-25
 14347  0181F8  50E3               	movf	plusw1,w,c
 14348  0181FA  5EDE               	subwf	postinc2,f,c
 14349  0181FC  0EE8               	movlw	-24
 14350  0181FE  50E3               	movf	plusw1,w,c
 14351  018200  5ADE               	subwfb	postinc2,f,c
 14352  018202  0EE9               	movlw	-23
 14353  018204  50E3               	movf	plusw1,w,c
 14354  018206  5ADE               	subwfb	postinc2,f,c
 14355  018208  0EEA               	movlw	-22
 14356  01820A  50E3               	movf	plusw1,w,c
 14357  01820C  5ADE               	subwfb	postinc2,f,c
 14358  01820E  0EEB               	movlw	-21
 14359  018210  50E3               	movf	plusw1,w,c
 14360  018212  5ADE               	subwfb	postinc2,f,c
 14361  018214  0EEC               	movlw	-20
 14362  018216  50E3               	movf	plusw1,w,c
 14363  018218  5ADE               	subwfb	postinc2,f,c
 14364  01821A  0EED               	movlw	-19
 14365  01821C  50E3               	movf	plusw1,w,c
 14366  01821E  5ADE               	subwfb	postinc2,f,c
 14367  018220  0EEE               	movlw	-18
 14368  018222  50E3               	movf	plusw1,w,c
 14369  018224  5ADE               	subwfb	postinc2,f,c
 14370                           
 14371                           ;stkvar	_quotient @ sp[(-9)+0]
 14372  018226  0EF7               	movlw	-9
 14373  018228  80E3               	bsf	plusw1,0,c
 14374  01822A                     l8430:
 14375                           
 14376                           ;stkvar	_divisor @ sp[(-9)+-16]
 14377  01822A  90D8               	bcf	status,0,c
 14378  01822C  0EEE               	movlw	-18
 14379  01822E  32E3               	rrcf	plusw1,f,c
 14380  018230  0EED               	movlw	-19
 14381  018232  32E3               	rrcf	plusw1,f,c
 14382  018234  0EEC               	movlw	-20
 14383  018236  32E3               	rrcf	plusw1,f,c
 14384  018238  0EEB               	movlw	-21
 14385  01823A  32E3               	rrcf	plusw1,f,c
 14386  01823C  0EEA               	movlw	-22
 14387  01823E  32E3               	rrcf	plusw1,f,c
 14388  018240  0EE9               	movlw	-23
 14389  018242  32E3               	rrcf	plusw1,f,c
 14390  018244  0EE8               	movlw	-24
 14391  018246  32E3               	rrcf	plusw1,f,c
 14392  018248  0EE7               	movlw	-25
 14393  01824A  32E3               	rrcf	plusw1,f,c
 14394                           
 14395                           ;stkvar	_counter @ sp[(-9)+8]
 14396  01824C  0EFF               	movlw	-1
 14397  01824E  50E3               	movf	plusw1,w,c
 14398  018250  6E01               	movwf	btemp^0,c
 14399  018252  0E01               	movlw	1
 14400  018254  5E01               	subwf	btemp^0,f,c
 14401  018256  0EFF               	movlw	-1
 14402  018258  0060  F007  FFE3   	movff	btemp,plusw1
 14403  01825E  A4D8               	btfss	status,2,c
 14404  018260  D791               	goto	u7070
 14405  018262                     u7090:
 14406                           
 14407                           ;stkvar	_quotient @ sp[(-9)+0]
 14408  018262  0EF7               	movlw	247
 14409  018264  24E1               	addwf	fsr1l,w,c
 14410  018266  6ED9               	movwf	fsr2l,c
 14411  018268  0EFF               	movlw	255
 14412  01826A  20E2               	addwfc	fsr1h,w,c
 14413  01826C  6EDA               	movwf	fsr2h,c
 14414                           
 14415                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14416  01826E  0E08               	movlw	8
 14417  018270  6E01               	movwf	btemp^0,c
 14418  018272  0EEF               	movlw	-17
 14419  018274                     us710999:
 14420  018274  006F FF7B FFE3     	movff	postinc2,plusw1
 14421  01827A  28E8               	incf	wreg,w,c
 14422  01827C  2E01               	decfsz	btemp^0,f,c
 14423  01827E  D7FA               	bra	us710999
 14424                           
 14425                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14426  018280  0EF7               	movlw	247
 14427  018282  26E1               	addwf	fsr1l,f,c
 14428  018284  0EFF               	movlw	255
 14429  018286  22E2               	addwfc	fsr1h,f,c
 14430  018288  0012               	return		;funcret
 14431  01828A                     __end_of___lodiv:
 14432                           	opt callstack 0
 14433                           
 14434 ;; *************** function _strncmp *****************
 14435 ;; Defined at:
 14436 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;  _l              2  [STACK] PTR const unsigned char 
 14439 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14440 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14441 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14442 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14443 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14444 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14445 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14446 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14447 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14448 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14449 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14450 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14451 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14452 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14453 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14454 ;;		 -> STR_2(15), STR_1(17), 
 14455 ;;  _r              2  [STACK] PTR const unsigned char 
 14456 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14457 ;;		 -> STR_80(3), STR_76(3), 
 14458 ;;  n               2  [STACK] unsigned int 
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;  r               2  [STACK] PTR const unsigned char 
 14461 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14462 ;;		 -> STR_80(3), STR_76(3), 
 14463 ;;  l               2  [STACK] PTR const unsigned char 
 14464 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14465 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14466 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14467 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14468 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14469 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14470 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14471 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14472 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14473 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14474 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14475 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14476 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14477 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14478 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14479 ;;		 -> STR_2(15), STR_1(17), 
 14480 ;; Return value:  Size  Location     Type
 14481 ;;                  2  [STACK] int 
 14482 ;; Registers used:
 14483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14484 ;; Tracked objects:
 14485 ;;		On entry : 0/0
 14486 ;;		On exit  : 0/0
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14493 ;;Total ram usage:        0 bytes
 14494 ;; Hardware stack levels used:    1
 14495 ;; Hardware stack levels required when called:   15
 14496 ;; This function calls:
 14497 ;;		Nothing
 14498 ;; This function is called by:
 14499 ;;		_vfpfcnvrt
 14500 ;; This function uses a reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text53
 14504  017582                     __ptext53:
 14505                           	opt callstack 0
 14506  017582                     _strncmp:
 14507                           	opt callstack 0
 14508                           
 14509                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14510  017582  52E6               	movf	postinc1,f,c
 14511  017584  52E6               	movf	postinc1,f,c
 14512  017586  52E6               	movf	postinc1,f,c
 14513  017588  52E6               	movf	postinc1,f,c
 14514                           
 14515                           ;stkvar	__l @ sp[(-4)+-2]
 14516                           
 14517                           ;incstack = 0
 14518 ;; hardware stack exceeded
 14519  01758A  0EFA               	movlw	-6
 14520  01758C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14521  017592  0EFB               	movlw	-5
 14522  017594  006F FF8C  F00C    	movff	plusw1,btemp+11
 14523                           
 14524                           ;stkvar	_l @ sp[(-4)+2]
 14525  01759A  0EFF               	movlw	-1
 14526  01759C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14527  0175A2  0EFE               	movlw	-2
 14528  0175A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14529                           
 14530                           ;stkvar	__r @ sp[(-4)+-4]
 14531  0175AA  0EF8               	movlw	-8
 14532  0175AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14533  0175B2  0EF9               	movlw	-7
 14534  0175B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14535                           
 14536                           ;stkvar	_r @ sp[(-4)+0]
 14537  0175BA  0EFD               	movlw	-3
 14538  0175BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14539  0175C2  0EFC               	movlw	-4
 14540  0175C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14541                           
 14542                           ;stkvar	_n @ sp[(-4)+-6]
 14543  0175CA  0EF6               	movlw	-10
 14544  0175CC  006F FF8C  F001    	movff	plusw1,btemp
 14545  0175D2  0E01               	movlw	1
 14546  0175D4  5E01               	subwf	btemp^0,f,c
 14547  0175D6  0EF6               	movlw	-10
 14548  0175D8  0060  F007  FFE3   	movff	btemp,plusw1
 14549  0175DE  0EF7               	movlw	-9
 14550  0175E0  006F FF8C  F001    	movff	plusw1,btemp
 14551  0175E6  0E00               	movlw	0
 14552  0175E8  5A01               	subwfb	btemp^0,f,c
 14553  0175EA  0EF7               	movlw	-9
 14554  0175EC  0060  F007  FFE3   	movff	btemp,plusw1
 14555  0175F2  0EF6               	movlw	-10
 14556  0175F4  28E3               	incf	plusw1,w,c
 14557  0175F6  E13F               	bnz	l9126
 14558  0175F8  0EF7               	movlw	-9
 14559  0175FA  28E3               	incf	plusw1,w,c
 14560  0175FC  A4D8               	btfss	status,2,c
 14561  0175FE  D03B               	goto	l9126
 14562  017600  0E00               	movlw	0
 14563  017602  6E01               	movwf	btemp^0,c
 14564  017604  0E00               	movlw	0
 14565  017606  6E02               	movwf	(btemp+1)^0,c
 14566  017608  D0C7               	goto	l3413
 14567  01760A                     l9124:
 14568                           
 14569                           ;stkvar	_l @ sp[(-4)+2]
 14570  01760A  0EFE               	movlw	-2
 14571  01760C  50E3               	movf	plusw1,w,c
 14572  01760E  0F01               	addlw	1
 14573  017610  6E01               	movwf	btemp^0,c
 14574  017612  0EFE               	movlw	-2
 14575  017614  0060  F007  FFE3   	movff	btemp,plusw1
 14576  01761A  6A01               	clrf	btemp^0,c
 14577  01761C  0EFF               	movlw	-1
 14578  01761E  50E3               	movf	plusw1,w,c
 14579  017620  2001               	addwfc	btemp^0,w,c
 14580  017622  6E01               	movwf	btemp^0,c
 14581  017624  0EFF               	movlw	-1
 14582  017626  0060  F007  FFE3   	movff	btemp,plusw1
 14583                           
 14584                           ;stkvar	_r @ sp[(-4)+0]
 14585  01762C  0EFC               	movlw	-4
 14586  01762E  50E3               	movf	plusw1,w,c
 14587  017630  0F01               	addlw	1
 14588  017632  6E01               	movwf	btemp^0,c
 14589  017634  0EFC               	movlw	-4
 14590  017636  0060  F007  FFE3   	movff	btemp,plusw1
 14591  01763C  6A01               	clrf	btemp^0,c
 14592  01763E  0EFD               	movlw	-3
 14593  017640  50E3               	movf	plusw1,w,c
 14594  017642  2001               	addwfc	btemp^0,w,c
 14595  017644  6E01               	movwf	btemp^0,c
 14596  017646  0EFD               	movlw	-3
 14597  017648  0060  F007  FFE3   	movff	btemp,plusw1
 14598                           
 14599                           ;stkvar	_n @ sp[(-4)+-6]
 14600  01764E  0EF6               	movlw	-10
 14601  017650  006F FF8C  F001    	movff	plusw1,btemp
 14602  017656  0E01               	movlw	1
 14603  017658  5E01               	subwf	btemp^0,f,c
 14604  01765A  0EF6               	movlw	-10
 14605  01765C  0060  F007  FFE3   	movff	btemp,plusw1
 14606  017662  0EF7               	movlw	-9
 14607  017664  006F FF8C  F001    	movff	plusw1,btemp
 14608  01766A  0E00               	movlw	0
 14609  01766C  5A01               	subwfb	btemp^0,f,c
 14610  01766E  0EF7               	movlw	-9
 14611  017670  0060  F007  FFE3   	movff	btemp,plusw1
 14612  017676                     l9126:
 14613                           
 14614                           ;stkvar	_l @ sp[(-4)+2]
 14615  017676  0EFE               	movlw	-2
 14616  017678  006F FF8F FFF6     	movff	plusw1,tblptrl
 14617  01767E  0EFF               	movlw	-1
 14618  017680  006F FF8F FFF7     	movff	plusw1,tblptrh
 14619  017686  0E00               	movlw	low (__mediumconst shr (0+16))
 14620  017688  6EF8               	movwf	tblptru,c
 14621  01768A  0E1F               	movlw	(high __ramtop+-1)
 14622  01768C  64F7               	cpfsgt	tblptrh,c
 14623  01768E  D003               	bra	u8387
 14624  017690  0008               	tblrd		*
 14625  017692  50F5               	movf	tablat,w,c
 14626  017694  D007               	bra	u8380
 14627  017696                     u8387:
 14628  017696  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14629  01769C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14630  0176A2  50EF               	movf	indf0,w,c
 14631  0176A4                     u8380:
 14632  0176A4  0900               	iorlw	0
 14633  0176A6  B4D8               	btfsc	status,2,c
 14634  0176A8  D04A               	goto	u8420
 14635                           
 14636                           ;stkvar	_r @ sp[(-4)+0]
 14637  0176AA  50E1               	movf	fsr1l,w,c
 14638  0176AC  0FFC               	addlw	-4
 14639  0176AE  6ED9               	movwf	fsr2l,c
 14640  0176B0  50E2               	movf	fsr1h,w,c
 14641  0176B2  6EDA               	movwf	fsr2h,c
 14642  0176B4  0EFF               	movlw	255
 14643  0176B6  22DA               	addwfc	fsr2h,f,c
 14644  0176B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 14645  0176BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 14646  0176C4                     	if	0	;tblptru may be non-zero
 14647  0176C4                     	endif
 14648  0176C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14649  0176C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14650  0176C6  6EF8               	movwf	tblptru,c
 14651  0176C8                     	endif
 14652  0176C8  0008               	tblrd		*
 14653  0176CA  50F5               	movf	tablat,w,c
 14654  0176CC  0900               	iorlw	0
 14655  0176CE  B4D8               	btfsc	status,2,c
 14656  0176D0  D036               	goto	u8420
 14657                           
 14658                           ;stkvar	_n @ sp[(-4)+-6]
 14659  0176D2  0EF6               	movlw	-10
 14660  0176D4  006F FF8C  F001    	movff	plusw1,btemp
 14661  0176DA  0EF7               	movlw	-9
 14662  0176DC  50E3               	movf	plusw1,w,c
 14663  0176DE  1001               	iorwf	btemp^0,w,c
 14664  0176E0  B4D8               	btfsc	status,2,c
 14665  0176E2  D02D               	goto	u8420
 14666                           
 14667                           ;stkvar	_r @ sp[(-4)+0]
 14668  0176E4  50E1               	movf	fsr1l,w,c
 14669  0176E6  0FFC               	addlw	-4
 14670  0176E8  6ED9               	movwf	fsr2l,c
 14671  0176EA  50E2               	movf	fsr1h,w,c
 14672  0176EC  6EDA               	movwf	fsr2h,c
 14673  0176EE  0EFF               	movlw	255
 14674  0176F0  22DA               	addwfc	fsr2h,f,c
 14675  0176F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14676  0176F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14677  0176FE                     	if	0	;tblptru may be non-zero
 14678  0176FE                     	endif
 14679  0176FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14680  0176FE  0E00               	movlw	low (__mediumconst shr (0+16))
 14681  017700  6EF8               	movwf	tblptru,c
 14682  017702                     	endif
 14683  017702  0008               	tblrd		*
 14684  017704  006F FFD4  F00C    	movff	tablat,btemp+11
 14685                           
 14686                           ;stkvar	_l @ sp[(-4)+2]
 14687  01770A  0EFE               	movlw	-2
 14688  01770C  006F FF8F FFF6     	movff	plusw1,tblptrl
 14689  017712  0EFF               	movlw	-1
 14690  017714  006F FF8F FFF7     	movff	plusw1,tblptrh
 14691  01771A  0E00               	movlw	low (__mediumconst shr (0+16))
 14692  01771C  6EF8               	movwf	tblptru,c
 14693  01771E  0E1F               	movlw	(high __ramtop+-1)
 14694  017720  64F7               	cpfsgt	tblptrh,c
 14695  017722  D003               	bra	u8427
 14696  017724  0008               	tblrd		*
 14697  017726  50F5               	movf	tablat,w,c
 14698  017728  D007               	bra	u8425
 14699  01772A                     u8427:
 14700  01772A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14701  017730  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14702  017736  50EF               	movf	indf0,w,c
 14703  017738                     u8425:
 14704  017738  180C               	xorwf	(btemp+11)^0,w,c
 14705  01773A  B4D8               	btfsc	status,2,c
 14706  01773C  D766               	goto	l9124
 14707  01773E                     u8420:
 14708                           
 14709                           ;stkvar	_l @ sp[(-4)+2]
 14710  01773E  0EFE               	movlw	-2
 14711  017740  006F FF8F FFF6     	movff	plusw1,tblptrl
 14712  017746  0EFF               	movlw	-1
 14713  017748  006F FF8F FFF7     	movff	plusw1,tblptrh
 14714  01774E  0E00               	movlw	low (__mediumconst shr (0+16))
 14715  017750  6EF8               	movwf	tblptru,c
 14716  017752  0E1F               	movlw	(high __ramtop+-1)
 14717  017754  64F7               	cpfsgt	tblptrh,c
 14718  017756  D003               	bra	u8437
 14719  017758  0008               	tblrd		*
 14720  01775A  50F5               	movf	tablat,w,c
 14721  01775C  D007               	bra	u8430
 14722  01775E                     u8437:
 14723  01775E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14724  017764  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14725  01776A  50EF               	movf	indf0,w,c
 14726  01776C                     u8430:
 14727  01776C  6E01               	movwf	btemp^0,c
 14728  01776E  6A02               	clrf	(btemp+1)^0,c
 14729                           
 14730                           ;stkvar	_r @ sp[(-4)+0]
 14731  017770  50E1               	movf	fsr1l,w,c
 14732  017772  0FFC               	addlw	-4
 14733  017774  6ED9               	movwf	fsr2l,c
 14734  017776  50E2               	movf	fsr1h,w,c
 14735  017778  6EDA               	movwf	fsr2h,c
 14736  01777A  0EFF               	movlw	255
 14737  01777C  22DA               	addwfc	fsr2h,f,c
 14738  01777E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14739  017784  006F FF77 FFF7     	movff	postdec2,tblptrh
 14740  01778A                     	if	0	;tblptru may be non-zero
 14741  01778A                     	endif
 14742  01778A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14743  01778A  0E00               	movlw	low (__mediumconst shr (0+16))
 14744  01778C  6EF8               	movwf	tblptru,c
 14745  01778E                     	endif
 14746  01778E  0008               	tblrd		*
 14747  017790  50F5               	movf	tablat,w,c
 14748  017792  5E01               	subwf	btemp^0,f,c
 14749  017794  0E00               	movlw	0
 14750  017796  5A02               	subwfb	(btemp+1)^0,f,c
 14751  017798                     l3413:
 14752                           
 14753                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14754  017798  0EF6               	movlw	246
 14755  01779A  26E1               	addwf	fsr1l,f,c
 14756  01779C  0EFF               	movlw	255
 14757  01779E  22E2               	addwfc	fsr1h,f,c
 14758  0177A0  0012               	return		;funcret
 14759  0177A2                     __end_of_strncmp:
 14760                           	opt callstack 0
 14761                           
 14762 ;; *************** function _stoa *****************
 14763 ;; Defined at:
 14764 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14767 ;;		 -> f(6), NULL(0), 
 14768 ;;  s               2  [STACK] PTR unsigned char 
 14769 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14770 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 14771 ;;		 -> V(189), 
 14772 ;; Auto vars:     Size  Location     Type
 14773 ;;  nuls            7  [STACK] unsigned char [7]
 14774 ;;  l               2  [STACK] int 
 14775 ;;  p               2  [STACK] int 
 14776 ;;  cp              2  [STACK] PTR unsigned char 
 14777 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14778 ;;		 -> STR_46(12), D.lcd(288), D(290), T(144), 
 14779 ;;		 -> STR_3(6), V(189), 
 14780 ;;  w               2  [STACK] int 
 14781 ;;  i               2  [STACK] int 
 14782 ;; Return value:  Size  Location     Type
 14783 ;;                  2  [STACK] int 
 14784 ;; Registers used:
 14785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14786 ;; Tracked objects:
 14787 ;;		On entry : 0/0
 14788 ;;		On exit  : 0/0
 14789 ;;		Unchanged: 0/0
 14790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14795 ;;Total ram usage:        0 bytes
 14796 ;; Hardware stack levels used:    1
 14797 ;; Hardware stack levels required when called:   18
 14798 ;; This function calls:
 14799 ;;		_fputc
 14800 ;;		_strlen
 14801 ;; This function is called by:
 14802 ;;		_vfpfcnvrt
 14803 ;; This function uses a reentrant model
 14804 ;;
 14805                           
 14806                           	psect	text54
 14807  016B90                     __ptext54:
 14808                           	opt callstack 0
 14809  016B90                     _stoa:
 14810                           	opt callstack 0
 14811                           
 14812                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14813  016B90  0E11               	movlw	17
 14814  016B92  26E1               	addwf	fsr1l,f,c
 14815  016B94  0E00               	movlw	0
 14816  016B96  22E2               	addwfc	fsr1h,f,c
 14817                           
 14818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14819                           
 14820                           ;incstack = 0
 14821 ;; hardware stack exceeded
 14822  016B98  EE20  F0EC         	lfsr	2,stoa@F1166
 14823                           
 14824                           ;stkvar	_nuls @ sp[(-17)+0]
 14825  016B9C  0E07               	movlw	7
 14826  016B9E  6E01               	movwf	btemp^0,c
 14827  016BA0  0EEF               	movlw	-17
 14828  016BA2                     us1116999:
 14829  016BA2  006F FF7B FFE3     	movff	postinc2,plusw1
 14830  016BA8  28E8               	incf	wreg,w,c
 14831  016BAA  2E01               	decfsz	btemp^0,f,c
 14832  016BAC  D7FA               	bra	us1116999
 14833                           
 14834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14835                           ;stkvar	_s @ sp[(-17)+-4]
 14836  016BAE  0EEB               	movlw	-21
 14837  016BB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14838  016BB6  0EEC               	movlw	-20
 14839  016BB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14840                           
 14841                           ;stkvar	_cp @ sp[(-17)+11]
 14842  016BBE  0EFB               	movlw	-5
 14843  016BC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 14844  016BC6  0EFA               	movlw	-6
 14845  016BC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14846                           
 14847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14848                           ;stkvar	_cp @ sp[(-17)+11]
 14849  016BCE  0EFA               	movlw	-6
 14850  016BD0  006F FF8C  F001    	movff	plusw1,btemp
 14851  016BD6  0EFB               	movlw	-5
 14852  016BD8  50E3               	movf	plusw1,w,c
 14853  016BDA  1001               	iorwf	btemp^0,w,c
 14854  016BDC  A4D8               	btfss	status,2,c
 14855  016BDE  D00E               	goto	l11862
 14856                           
 14857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14858                           ;stkvar	_nuls @ sp[(-17)+0]
 14859  016BE0  0EEF               	movlw	239
 14860  016BE2  24E1               	addwf	fsr1l,w,c
 14861  016BE4  6E0B               	movwf	(btemp+10)^0,c
 14862  016BE6  0EFF               	movlw	255
 14863  016BE8  20E2               	addwfc	fsr1h,w,c
 14864  016BEA  6E0C               	movwf	(btemp+11)^0,c
 14865                           
 14866                           ;stkvar	_cp @ sp[(-17)+11]
 14867  016BEC  0EFB               	movlw	-5
 14868  016BEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 14869  016BF4  0EFA               	movlw	-6
 14870  016BF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14871  016BFC                     l11862:
 14872                           
 14873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14874                           ;stkvar	_cp @ sp[(-17)+11]
 14875  016BFC  0EFA               	movlw	-6
 14876  016BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 14877  016C04  006F FF8F FFE6     	movff	plusw1,postinc1
 14878  016C0A  EC4C  F0CF         	call	_strlen	;wreg free
 14879                           
 14880                           ;stkvar	_l @ sp[(-17)+7]
 14881  016C0E  0EF6               	movlw	-10
 14882  016C10  0060  F007  FFE3   	movff	btemp,plusw1
 14883  016C16  0EF7               	movlw	-9
 14884  016C18  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14885                           
 14886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14887                           ;stkvar	_p @ sp[(-17)+9]
 14888  016C1E  0EF8               	movlw	-8
 14889  016C20  0060  F08F  FFE3   	movff	_prec,plusw1
 14890  016C26  0EF9               	movlw	-7
 14891  016C28  0060  F093  FFE3   	movff	_prec+1,plusw1
 14892                           
 14893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14894                           ;stkvar	_p @ sp[(-17)+9]
 14895  016C2E  0EF9               	movlw	-7
 14896  016C30  BEE3               	btfsc	plusw1,7,c
 14897  016C32  D023               	goto	l2238
 14898                           
 14899                           ;stkvar	_l @ sp[(-17)+7]
 14900                           ;stkvar	_p @ sp[(-17)+9]
 14901  016C34  50E1               	movf	fsr1l,w,c
 14902  016C36  0FF8               	addlw	-8
 14903  016C38  6ED9               	movwf	fsr2l,c
 14904  016C3A  50E2               	movf	fsr1h,w,c
 14905  016C3C  6EDA               	movwf	fsr2h,c
 14906  016C3E  0EFF               	movlw	255
 14907  016C40  22DA               	addwfc	fsr2h,f,c
 14908  016C42  0EF6               	movlw	-10
 14909  016C44  50E3               	movf	plusw1,w,c
 14910  016C46  5CDE               	subwf	postinc2,w,c
 14911  016C48  50DE               	movf	postinc2,w,c
 14912  016C4A  0A80               	xorlw	128
 14913  016C4C  6E01               	movwf	btemp^0,c
 14914  016C4E  0EF7               	movlw	-9
 14915  016C50  50E3               	movf	plusw1,w,c
 14916  016C52  0A80               	xorlw	128
 14917  016C54  5801               	subwfb	btemp^0,w,c
 14918  016C56  B0D8               	btfsc	status,0,c
 14919  016C58  D010               	goto	l2238
 14920                           
 14921                           ;stkvar	_p @ sp[(-17)+9]
 14922                           ;stkvar	_l @ sp[(-17)+7]
 14923  016C5A  0EF8               	movlw	-8
 14924  016C5C  006F FF8C  F001    	movff	plusw1,btemp
 14925  016C62  0EF6               	movlw	-10
 14926  016C64  0060  F007  FFE3   	movff	btemp,plusw1
 14927  016C6A  0EF9               	movlw	-7
 14928  016C6C  006F FF8C  F001    	movff	plusw1,btemp
 14929  016C72  0EF7               	movlw	-9
 14930  016C74  0060  F007  FFE3   	movff	btemp,plusw1
 14931  016C7A                     l2238:
 14932                           
 14933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14934                           ;stkvar	_l @ sp[(-17)+7]
 14935                           ;stkvar	_p @ sp[(-17)+9]
 14936  016C7A  0EF6               	movlw	-10
 14937  016C7C  006F FF8C  F001    	movff	plusw1,btemp
 14938  016C82  0EF8               	movlw	-8
 14939  016C84  0060  F007  FFE3   	movff	btemp,plusw1
 14940  016C8A  0EF7               	movlw	-9
 14941  016C8C  006F FF8C  F001    	movff	plusw1,btemp
 14942  016C92  0EF9               	movlw	-7
 14943  016C94  0060  F007  FFE3   	movff	btemp,plusw1
 14944                           
 14945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14946                           ;stkvar	_w @ sp[(-17)+13]
 14947  016C9A  0EFC               	movlw	-4
 14948  016C9C  0060  F087  FFE3   	movff	_width,plusw1
 14949  016CA2  0EFD               	movlw	-3
 14950  016CA4  0060  F08B  FFE3   	movff	_width+1,plusw1
 14951                           
 14952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14953  016CAA  A025               	btfss	_flags^0,0,c
 14954  016CAC  D01F               	goto	l11882
 14955  016CAE  D031               	goto	u11210
 14956  016CB0                     l11878:
 14957                           
 14958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14959                           ;stkvar	_fp @ sp[(-17)+-2]
 14960  016CB0  0EED               	movlw	-19
 14961  016CB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14962  016CB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14963  016CBE  0E20               	movlw	32
 14964  016CC0  6EE6               	movwf	postinc1,c
 14965  016CC2  0E00               	movlw	0
 14966  016CC4  6EE6               	movwf	postinc1,c
 14967  016CC6  EC4F  F0C7         	call	_fputc	;wreg free
 14968                           
 14969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14970                           ;stkvar	_l @ sp[(-17)+7]
 14971  016CCA  0EF6               	movlw	-10
 14972  016CCC  50E3               	movf	plusw1,w,c
 14973  016CCE  0F01               	addlw	1
 14974  016CD0  6E01               	movwf	btemp^0,c
 14975  016CD2  0EF6               	movlw	-10
 14976  016CD4  0060  F007  FFE3   	movff	btemp,plusw1
 14977  016CDA  6A01               	clrf	btemp^0,c
 14978  016CDC  0EF7               	movlw	-9
 14979  016CDE  50E3               	movf	plusw1,w,c
 14980  016CE0  2001               	addwfc	btemp^0,w,c
 14981  016CE2  6E01               	movwf	btemp^0,c
 14982  016CE4  0EF7               	movlw	-9
 14983  016CE6  0060  F007  FFE3   	movff	btemp,plusw1
 14984  016CEC                     l11882:
 14985                           
 14986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14987                           ;stkvar	_w @ sp[(-17)+13]
 14988                           ;stkvar	_l @ sp[(-17)+7]
 14989  016CEC  50E1               	movf	fsr1l,w,c
 14990  016CEE  0FF6               	addlw	-10
 14991  016CF0  6ED9               	movwf	fsr2l,c
 14992  016CF2  50E2               	movf	fsr1h,w,c
 14993  016CF4  6EDA               	movwf	fsr2h,c
 14994  016CF6  0EFF               	movlw	255
 14995  016CF8  22DA               	addwfc	fsr2h,f,c
 14996  016CFA  0EFC               	movlw	-4
 14997  016CFC  50E3               	movf	plusw1,w,c
 14998  016CFE  5CDE               	subwf	postinc2,w,c
 14999  016D00  50DE               	movf	postinc2,w,c
 15000  016D02  0A80               	xorlw	128
 15001  016D04  6E01               	movwf	btemp^0,c
 15002  016D06  0EFD               	movlw	-3
 15003  016D08  50E3               	movf	plusw1,w,c
 15004  016D0A  0A80               	xorlw	128
 15005  016D0C  5801               	subwfb	btemp^0,w,c
 15006  016D0E  A0D8               	btfss	status,0,c
 15007  016D10  D7CF               	goto	l11878
 15008  016D12                     u11210:
 15009                           
 15010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15011                           ;stkvar	_i @ sp[(-17)+15]
 15012  016D12  0EFE               	movlw	-2
 15013  016D14  6AE3               	clrf	plusw1,c
 15014  016D16  0EFF               	movlw	-1
 15015  016D18  6AE3               	clrf	plusw1,c
 15016                           
 15017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15018  016D1A  D045               	goto	l11892
 15019  016D1C                     l11886:
 15020                           
 15021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15022                           ;stkvar	_fp @ sp[(-17)+-2]
 15023  016D1C  0EED               	movlw	-19
 15024  016D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 15025  016D24  006F FF8F FFE6     	movff	plusw1,postinc1
 15026                           
 15027                           ;stkvar	_cp @ sp[(-19)+11]
 15028  016D2A  0EF8               	movlw	-8
 15029  016D2C  006F FF8F FFF6     	movff	plusw1,tblptrl
 15030  016D32  0EF9               	movlw	-7
 15031  016D34  006F FF8F FFF7     	movff	plusw1,tblptrh
 15032  016D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 15033  016D3C  6EF8               	movwf	tblptru,c
 15034  016D3E  0E1F               	movlw	(high __ramtop+-1)
 15035  016D40  64F7               	cpfsgt	tblptrh,c
 15036  016D42  D003               	bra	u11227
 15037  016D44  0008               	tblrd		*
 15038  016D46  50F5               	movf	tablat,w,c
 15039  016D48  D007               	bra	u11220
 15040  016D4A                     u11227:
 15041  016D4A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15042  016D50  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15043  016D56  50EF               	movf	indf0,w,c
 15044  016D58                     u11220:
 15045  016D58  6EE6               	movwf	postinc1,c
 15046  016D5A  0E00               	movlw	0
 15047  016D5C  6EE6               	movwf	postinc1,c
 15048  016D5E  EC4F  F0C7         	call	_fputc	;wreg free
 15049                           
 15050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15051                           ;stkvar	_cp @ sp[(-17)+11]
 15052  016D62  0EFA               	movlw	-6
 15053  016D64  50E3               	movf	plusw1,w,c
 15054  016D66  0F01               	addlw	1
 15055  016D68  6E01               	movwf	btemp^0,c
 15056  016D6A  0EFA               	movlw	-6
 15057  016D6C  0060  F007  FFE3   	movff	btemp,plusw1
 15058  016D72  6A01               	clrf	btemp^0,c
 15059  016D74  0EFB               	movlw	-5
 15060  016D76  50E3               	movf	plusw1,w,c
 15061  016D78  2001               	addwfc	btemp^0,w,c
 15062  016D7A  6E01               	movwf	btemp^0,c
 15063  016D7C  0EFB               	movlw	-5
 15064  016D7E  0060  F007  FFE3   	movff	btemp,plusw1
 15065                           
 15066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15067                           ;stkvar	_i @ sp[(-17)+15]
 15068  016D84  0EFE               	movlw	-2
 15069  016D86  50E3               	movf	plusw1,w,c
 15070  016D88  0F01               	addlw	1
 15071  016D8A  6E01               	movwf	btemp^0,c
 15072  016D8C  0EFE               	movlw	-2
 15073  016D8E  0060  F007  FFE3   	movff	btemp,plusw1
 15074  016D94  6A01               	clrf	btemp^0,c
 15075  016D96  0EFF               	movlw	-1
 15076  016D98  50E3               	movf	plusw1,w,c
 15077  016D9A  2001               	addwfc	btemp^0,w,c
 15078  016D9C  6E01               	movwf	btemp^0,c
 15079  016D9E  0EFF               	movlw	-1
 15080  016DA0  0060  F007  FFE3   	movff	btemp,plusw1
 15081  016DA6                     l11892:
 15082                           
 15083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15084                           ;stkvar	_p @ sp[(-17)+9]
 15085                           ;stkvar	_i @ sp[(-17)+15]
 15086  016DA6  50E1               	movf	fsr1l,w,c
 15087  016DA8  0FFE               	addlw	-2
 15088  016DAA  6ED9               	movwf	fsr2l,c
 15089  016DAC  50E2               	movf	fsr1h,w,c
 15090  016DAE  6EDA               	movwf	fsr2h,c
 15091  016DB0  0EFF               	movlw	255
 15092  016DB2  22DA               	addwfc	fsr2h,f,c
 15093  016DB4  0EF8               	movlw	-8
 15094  016DB6  50E3               	movf	plusw1,w,c
 15095  016DB8  5CDE               	subwf	postinc2,w,c
 15096  016DBA  50DE               	movf	postinc2,w,c
 15097  016DBC  0A80               	xorlw	128
 15098  016DBE  6E01               	movwf	btemp^0,c
 15099  016DC0  0EF9               	movlw	-7
 15100  016DC2  50E3               	movf	plusw1,w,c
 15101  016DC4  0A80               	xorlw	128
 15102  016DC6  5801               	subwfb	btemp^0,w,c
 15103  016DC8  A0D8               	btfss	status,0,c
 15104  016DCA  D7A8               	goto	l11886
 15105                           
 15106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15107  016DCC  B025               	btfsc	_flags^0,0,c
 15108  016DCE  D01F               	goto	l11900
 15109  016DD0  D031               	goto	u11250
 15110  016DD2                     l11896:
 15111                           
 15112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15113                           ;stkvar	_fp @ sp[(-17)+-2]
 15114  016DD2  0EED               	movlw	-19
 15115  016DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 15116  016DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 15117  016DE0  0E20               	movlw	32
 15118  016DE2  6EE6               	movwf	postinc1,c
 15119  016DE4  0E00               	movlw	0
 15120  016DE6  6EE6               	movwf	postinc1,c
 15121  016DE8  EC4F  F0C7         	call	_fputc	;wreg free
 15122                           
 15123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15124                           ;stkvar	_l @ sp[(-17)+7]
 15125  016DEC  0EF6               	movlw	-10
 15126  016DEE  50E3               	movf	plusw1,w,c
 15127  016DF0  0F01               	addlw	1
 15128  016DF2  6E01               	movwf	btemp^0,c
 15129  016DF4  0EF6               	movlw	-10
 15130  016DF6  0060  F007  FFE3   	movff	btemp,plusw1
 15131  016DFC  6A01               	clrf	btemp^0,c
 15132  016DFE  0EF7               	movlw	-9
 15133  016E00  50E3               	movf	plusw1,w,c
 15134  016E02  2001               	addwfc	btemp^0,w,c
 15135  016E04  6E01               	movwf	btemp^0,c
 15136  016E06  0EF7               	movlw	-9
 15137  016E08  0060  F007  FFE3   	movff	btemp,plusw1
 15138  016E0E                     l11900:
 15139                           
 15140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15141                           ;stkvar	_w @ sp[(-17)+13]
 15142                           ;stkvar	_l @ sp[(-17)+7]
 15143  016E0E  50E1               	movf	fsr1l,w,c
 15144  016E10  0FF6               	addlw	-10
 15145  016E12  6ED9               	movwf	fsr2l,c
 15146  016E14  50E2               	movf	fsr1h,w,c
 15147  016E16  6EDA               	movwf	fsr2h,c
 15148  016E18  0EFF               	movlw	255
 15149  016E1A  22DA               	addwfc	fsr2h,f,c
 15150  016E1C  0EFC               	movlw	-4
 15151  016E1E  50E3               	movf	plusw1,w,c
 15152  016E20  5CDE               	subwf	postinc2,w,c
 15153  016E22  50DE               	movf	postinc2,w,c
 15154  016E24  0A80               	xorlw	128
 15155  016E26  6E01               	movwf	btemp^0,c
 15156  016E28  0EFD               	movlw	-3
 15157  016E2A  50E3               	movf	plusw1,w,c
 15158  016E2C  0A80               	xorlw	128
 15159  016E2E  5801               	subwfb	btemp^0,w,c
 15160  016E30  A0D8               	btfss	status,0,c
 15161  016E32  D7CF               	goto	l11896
 15162  016E34                     u11250:
 15163                           
 15164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15165                           ;stkvar	_l @ sp[(-17)+7]
 15166  016E34  0EF6               	movlw	-10
 15167  016E36  006F FF8C  F001    	movff	plusw1,btemp
 15168  016E3C  0EF7               	movlw	-9
 15169  016E3E  006F FF8C  F002    	movff	plusw1,btemp+1
 15170                           
 15171                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15172  016E44  0EEB               	movlw	235
 15173  016E46  26E1               	addwf	fsr1l,f,c
 15174  016E48  0EFF               	movlw	255
 15175  016E4A  22E2               	addwfc	fsr1h,f,c
 15176  016E4C  0012               	return		;funcret
 15177  016E4E                     __end_of_stoa:
 15178                           	opt callstack 0
 15179                           
 15180 ;; *************** function _efgtoa *****************
 15181 ;; Defined at:
 15182 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15183 ;; Parameters:    Size  Location     Type
 15184 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15185 ;;		 -> f(6), NULL(0), 
 15186 ;;  f               4  [STACK] PTR struct _IO_FILE
 15187 ;;  c               1  [STACK] unsigned char 
 15188 ;; Auto vars:     Size  Location     Type
 15189 ;;  u               4  [STACK] unsigned char 
 15190 ;;  g               4  [STACK] unsigned char 
 15191 ;;  l               4  [STACK] unsigned char 
 15192 ;;  h               4  [STACK] unsigned char 
 15193 ;;  ou              4  [STACK] unsigned char 
 15194 ;;  n               2  [STACK] int 
 15195 ;;  e               2  [STACK] int 
 15196 ;;  i               2  [STACK] int 
 15197 ;;  w               2  [STACK] int 
 15198 ;;  p               2  [STACK] int 
 15199 ;;  sign            2  [STACK] int 
 15200 ;;  d               2  [STACK] int 
 15201 ;;  ne              2  [STACK] int 
 15202 ;;  m               2  [STACK] int 
 15203 ;;  pp              2  [STACK] int 
 15204 ;;  t               2  [STACK] int 
 15205 ;;  mode            1  [STACK] unsigned char 
 15206 ;;  nmode           1  [STACK] unsigned char 
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  2  [STACK] int 
 15209 ;; Registers used:
 15210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15220 ;;Total ram usage:        0 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; Hardware stack levels required when called:   20
 15223 ;; This function calls:
 15224 ;;		___awdiv
 15225 ;;		___awmod
 15226 ;;		___fladd
 15227 ;;		___fldiv
 15228 ;;		___fleq
 15229 ;;		___flge
 15230 ;;		___flmul
 15231 ;;		___flneg
 15232 ;;		___flsub
 15233 ;;		___fltol
 15234 ;;		___fpclassifyf
 15235 ;;		_floorf
 15236 ;;		_isupper
 15237 ;;		_pad
 15238 ;;		_strcpy
 15239 ;;		_tolower
 15240 ;; This function is called by:
 15241 ;;		_vfpfcnvrt
 15242 ;; This function uses a reentrant model
 15243 ;;
 15244                           
 15245                           	psect	text55
 15246  010000                     __ptext55:
 15247                           	opt callstack 0
 15248  010000                     _efgtoa:
 15249                           	opt callstack 0
 15250                           
 15251                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15252  010000  0E38               	movlw	56
 15253  010002  26E1               	addwf	fsr1l,f,c
 15254  010004  0E00               	movlw	0
 15255  010006  22E2               	addwfc	fsr1h,f,c
 15256                           
 15257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15258                           ;stkvar	_sign @ sp[(-56)+42]
 15259                           
 15260                           ;incstack = 0
 15261 ;; hardware stack exceeded
 15262  010008  0EF2               	movlw	-14
 15263  01000A  6AE3               	clrf	plusw1,c
 15264  01000C  0EF3               	movlw	-13
 15265  01000E  6AE3               	clrf	plusw1,c
 15266                           
 15267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15268                           ;stkvar	_f @ sp[(-56)+-6]
 15269  010010  0EC2               	movlw	-62
 15270  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15271  010018  0EC3               	movlw	-61
 15272  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15273  010020  0EC4               	movlw	-60
 15274  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15275  010028  0EC5               	movlw	-59
 15276  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15277                           
 15278                           ;stkvar	_g @ sp[(-56)+16]
 15279  010030  0ED8               	movlw	-40
 15280  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15281  010038  0ED9               	movlw	-39
 15282  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15283  010040  0EDA               	movlw	-38
 15284  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15285  010048  0EDB               	movlw	-37
 15286  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15287                           
 15288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15289                           ;stkvar	_g @ sp[(-56)+16]
 15290  010050  0EDB               	movlw	-37
 15291  010052  AEE3               	btfss	plusw1,7,c
 15292  010054  D02B               	goto	l11560
 15293                           
 15294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15295  010056  0E01               	movlw	1
 15296  010058  6E0B               	movwf	(btemp+10)^0,c
 15297  01005A  0E00               	movlw	0
 15298  01005C  6E0C               	movwf	(btemp+11)^0,c
 15299                           
 15300                           ;stkvar	_sign @ sp[(-56)+42]
 15301  01005E  0EF2               	movlw	-14
 15302  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15303  010066  0EF3               	movlw	-13
 15304  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15305                           
 15306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15307                           ;stkvar	_g @ sp[(-56)+16]
 15308  01006E  0ED8               	movlw	-40
 15309  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15310  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15311  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15312  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15313  010088  ECF8  F0D4         	call	___flneg	;wreg free
 15314                           
 15315                           ;stkvar	_g @ sp[(-56)+16]
 15316  01008C  0ED8               	movlw	-40
 15317  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15318  010094  0ED9               	movlw	-39
 15319  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15320  01009C  0EDA               	movlw	-38
 15321  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15322  0100A4  0EDB               	movlw	-37
 15323  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15324  0100AC                     l11560:
 15325                           
 15326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15327                           ;stkvar	_n @ sp[(-56)+32]
 15328  0100AC  0EE8               	movlw	-24
 15329  0100AE  6AE3               	clrf	plusw1,c
 15330  0100B0  0EE9               	movlw	-23
 15331  0100B2  6AE3               	clrf	plusw1,c
 15332                           
 15333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15334                           ;stkvar	_w @ sp[(-56)+38]
 15335  0100B4  0EEE               	movlw	-18
 15336  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 15337  0100BC  0EEF               	movlw	-17
 15338  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 15339                           
 15340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15341                           ;stkvar	_sign @ sp[(-56)+42]
 15342  0100C4  0EF2               	movlw	-14
 15343  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15344  0100CC  0EF3               	movlw	-13
 15345  0100CE  50E3               	movf	plusw1,w,c
 15346  0100D0  1001               	iorwf	btemp^0,w,c
 15347  0100D2  A4D8               	btfss	status,2,c
 15348  0100D4  D002               	goto	u10660
 15349  0100D6  A425               	btfss	_flags^0,2,c
 15350  0100D8  D036               	goto	l11580
 15351  0100DA                     u10660:
 15352                           
 15353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15354                           ;stkvar	_sign @ sp[(-56)+42]
 15355  0100DA  0EF2               	movlw	-14
 15356  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15357  0100E2  0EF3               	movlw	-13
 15358  0100E4  50E3               	movf	plusw1,w,c
 15359  0100E6  1001               	iorwf	btemp^0,w,c
 15360  0100E8  A4D8               	btfss	status,2,c
 15361  0100EA  D002               	goto	l11572
 15362  0100EC  0E2B               	movlw	43
 15363  0100EE  D001               	goto	L14
 15364  0100F0                     l11572:
 15365  0100F0  0E2D               	movlw	45
 15366  0100F2                     L14:
 15367  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15368  0100F4  0E00               	movlw	0
 15369  0100F6  6E0C               	movwf	(btemp+11)^0,c
 15370                           
 15371                           ;stkvar	_efgtoa$5333 @ sp[(-56)+10]
 15372  0100F8  0ED2               	movlw	-46
 15373  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15374  010100  0ED3               	movlw	-45
 15375  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 15376                           
 15377                           ;stkvar	_efgtoa$5333 @ sp[(-56)+10]
 15378  010108  0ED2               	movlw	-46
 15379  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 15380                           
 15381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15382                           ;stkvar	_n @ sp[(-56)+32]
 15383  010110  0EE8               	movlw	-24
 15384  010112  50E3               	movf	plusw1,w,c
 15385  010114  0F01               	addlw	1
 15386  010116  6E01               	movwf	btemp^0,c
 15387  010118  0EE8               	movlw	-24
 15388  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 15389  010120  6A01               	clrf	btemp^0,c
 15390  010122  0EE9               	movlw	-23
 15391  010124  50E3               	movf	plusw1,w,c
 15392  010126  2001               	addwfc	btemp^0,w,c
 15393  010128  6E01               	movwf	btemp^0,c
 15394  01012A  0EE9               	movlw	-23
 15395  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 15396                           
 15397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15398                           ;stkvar	_w @ sp[(-56)+38]
 15399  010132  50E1               	movf	fsr1l,w,c
 15400  010134  0FEE               	addlw	-18
 15401  010136  6ED9               	movwf	fsr2l,c
 15402  010138  50E2               	movf	fsr1h,w,c
 15403  01013A  6EDA               	movwf	fsr2h,c
 15404  01013C  0EFF               	movlw	255
 15405  01013E  22DA               	addwfc	fsr2h,f,c
 15406  010140  06DE               	decf	postinc2,f,c
 15407  010142  0E00               	movlw	0
 15408  010144  5ADD               	subwfb	postdec2,f,c
 15409  010146                     l11580:
 15410                           
 15411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15412                           ;stkvar	_g @ sp[(-56)+16]
 15413  010146  0ED8               	movlw	-40
 15414  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15415  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15416  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15417  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15418  010160  ECBA  F0BF         	call	___fpclassifyf	;wreg free
 15419  010164  0401               	decf	btemp^0,w,c
 15420  010166  1002               	iorwf	(btemp+1)^0,w,c
 15421  010168  A4D8               	btfss	status,2,c
 15422  01016A  D076               	goto	l11598
 15423  01016C  0EBF               	movlw	191
 15424  01016E  6E0B               	movwf	(btemp+10)^0,c
 15425  010170  0EFF               	movlw	255
 15426  010172  6E0C               	movwf	(btemp+11)^0,c
 15427                           
 15428                           ;stkvar	_c @ sp[(-56)+-7]
 15429  010174  0EC1               	movlw	-63
 15430  010176  50E3               	movf	plusw1,w,c
 15431  010178  6E09               	movwf	(btemp+8)^0,c
 15432  01017A  6A0A               	clrf	(btemp+9)^0,c
 15433  01017C  500B               	movf	(btemp+10)^0,w,c
 15434  01017E  2609               	addwf	(btemp+8)^0,f,c
 15435  010180  500C               	movf	(btemp+11)^0,w,c
 15436  010182  220A               	addwfc	(btemp+9)^0,f,c
 15437  010184  500A               	movf	(btemp+9)^0,w,c
 15438  010186  E106               	bnz	u10690
 15439  010188  0E1A               	movlw	26
 15440  01018A  5C09               	subwf	(btemp+8)^0,w,c
 15441  01018C  B0D8               	btfsc	status,0,c
 15442  01018E  D002               	goto	u10690
 15443  010190  0E01               	movlw	1
 15444  010192  D001               	goto	u10700
 15445  010194                     u10690:
 15446  010194  0E00               	movlw	0
 15447  010196                     u10700:
 15448  010196  6E0B               	movwf	(btemp+10)^0,c
 15449  010198  6A0C               	clrf	(btemp+11)^0,c
 15450                           
 15451                           ;stkvar	_efgtoa$5334 @ sp[(-56)+8]
 15452  01019A  0ED0               	movlw	-48
 15453  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15454  0101A2  0ED1               	movlw	-47
 15455  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15456                           
 15457                           ;stkvar	_efgtoa$5334 @ sp[(-56)+8]
 15458  0101AA  0ED0               	movlw	-48
 15459  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 15460  0101B2  0ED1               	movlw	-47
 15461  0101B4  50E3               	movf	plusw1,w,c
 15462  0101B6  1001               	iorwf	btemp^0,w,c
 15463  0101B8  B4D8               	btfsc	status,2,c
 15464  0101BA  D017               	goto	l11590
 15465                           
 15466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15467  0101BC  0ED6               	movlw	low STR_66
 15468  0101BE  6EE6               	movwf	postinc1,c
 15469  0101C0  0EFF               	movlw	high STR_66
 15470  0101C2  6EE6               	movwf	postinc1,c
 15471                           
 15472                           ;stkvar	_n @ sp[(-58)+32]
 15473  0101C4  0E94               	movlw	low _dbuf
 15474  0101C6  6E0B               	movwf	(btemp+10)^0,c
 15475  0101C8  0E03               	movlw	high _dbuf
 15476  0101CA  6E0C               	movwf	(btemp+11)^0,c
 15477  0101CC  0EE6               	movlw	-26
 15478  0101CE  50E3               	movf	plusw1,w,c
 15479  0101D0  260B               	addwf	(btemp+10)^0,f,c
 15480  0101D2  0EE7               	movlw	-25
 15481  0101D4  50E3               	movf	plusw1,w,c
 15482  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 15483  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15484  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 15485  0101E4  EC70  F0CC         	call	_strcpy	;wreg free
 15486                           
 15487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15488  0101E8  D016               	goto	l11592
 15489  0101EA                     l11590:
 15490                           
 15491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15492  0101EA  0EDE               	movlw	low STR_67
 15493  0101EC  6EE6               	movwf	postinc1,c
 15494  0101EE  0EFF               	movlw	high STR_67
 15495  0101F0  6EE6               	movwf	postinc1,c
 15496                           
 15497                           ;stkvar	_n @ sp[(-58)+32]
 15498  0101F2  0E94               	movlw	low _dbuf
 15499  0101F4  6E0B               	movwf	(btemp+10)^0,c
 15500  0101F6  0E03               	movlw	high _dbuf
 15501  0101F8  6E0C               	movwf	(btemp+11)^0,c
 15502  0101FA  0EE6               	movlw	-26
 15503  0101FC  50E3               	movf	plusw1,w,c
 15504  0101FE  260B               	addwf	(btemp+10)^0,f,c
 15505  010200  0EE7               	movlw	-25
 15506  010202  50E3               	movf	plusw1,w,c
 15507  010204  220C               	addwfc	(btemp+11)^0,f,c
 15508  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15509  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15510  010212  EC70  F0CC         	call	_strcpy	;wreg free
 15511  010216                     l11592:
 15512                           
 15513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15514                           ;stkvar	_w @ sp[(-56)+38]
 15515  010216  50E1               	movf	fsr1l,w,c
 15516  010218  0FEE               	addlw	-18
 15517  01021A  6ED9               	movwf	fsr2l,c
 15518  01021C  50E2               	movf	fsr1h,w,c
 15519  01021E  6EDA               	movwf	fsr2h,c
 15520  010220  0EFF               	movlw	255
 15521  010222  22DA               	addwfc	fsr2h,f,c
 15522  010224  0EFD               	movlw	253
 15523  010226  26DE               	addwf	postinc2,f,c
 15524  010228  0EFF               	movlw	255
 15525  01022A  22DD               	addwfc	postdec2,f,c
 15526  01022C                     l11594:
 15527                           
 15528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15529                           ;stkvar	_w @ sp[(-56)+38]
 15530  01022C  0EEE               	movlw	-18
 15531  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15532  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15533  01023A  0E94               	movlw	low _dbuf
 15534  01023C  6EE6               	movwf	postinc1,c
 15535  01023E  0E03               	movlw	high _dbuf
 15536  010240  6EE6               	movwf	postinc1,c
 15537                           
 15538                           ;stkvar	_fp @ sp[(-60)+-2]
 15539  010242  0EC2               	movlw	-62
 15540  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15541  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15542  010250  EC6D  F0C8         	call	_pad	;wreg free
 15543  010254  EF1D  F089         	goto	l2156
 15544  010258                     l11598:
 15545                           
 15546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15547                           ;stkvar	_g @ sp[(-56)+16]
 15548  010258  0ED8               	movlw	-40
 15549  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15550  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15551  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15552  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15553  010272  ECBA  F0BF         	call	___fpclassifyf	;wreg free
 15554  010276  5001               	movf	btemp^0,w,c
 15555  010278  1002               	iorwf	(btemp+1)^0,w,c
 15556  01027A  A4D8               	btfss	status,2,c
 15557  01027C  D056               	goto	l11616
 15558  01027E  0EBF               	movlw	191
 15559  010280  6E0B               	movwf	(btemp+10)^0,c
 15560  010282  0EFF               	movlw	255
 15561  010284  6E0C               	movwf	(btemp+11)^0,c
 15562                           
 15563                           ;stkvar	_c @ sp[(-56)+-7]
 15564  010286  0EC1               	movlw	-63
 15565  010288  50E3               	movf	plusw1,w,c
 15566  01028A  6E09               	movwf	(btemp+8)^0,c
 15567  01028C  6A0A               	clrf	(btemp+9)^0,c
 15568  01028E  500B               	movf	(btemp+10)^0,w,c
 15569  010290  2609               	addwf	(btemp+8)^0,f,c
 15570  010292  500C               	movf	(btemp+11)^0,w,c
 15571  010294  220A               	addwfc	(btemp+9)^0,f,c
 15572  010296  500A               	movf	(btemp+9)^0,w,c
 15573  010298  E106               	bnz	u10730
 15574  01029A  0E1A               	movlw	26
 15575  01029C  5C09               	subwf	(btemp+8)^0,w,c
 15576  01029E  B0D8               	btfsc	status,0,c
 15577  0102A0  D002               	goto	u10730
 15578  0102A2  0E01               	movlw	1
 15579  0102A4  D001               	goto	u10740
 15580  0102A6                     u10730:
 15581  0102A6  0E00               	movlw	0
 15582  0102A8                     u10740:
 15583  0102A8  6E0B               	movwf	(btemp+10)^0,c
 15584  0102AA  6A0C               	clrf	(btemp+11)^0,c
 15585                           
 15586                           ;stkvar	_efgtoa$5338 @ sp[(-56)+6]
 15587  0102AC  0ECE               	movlw	-50
 15588  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15589  0102B4  0ECF               	movlw	-49
 15590  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15591                           
 15592                           ;stkvar	_efgtoa$5338 @ sp[(-56)+6]
 15593  0102BC  0ECE               	movlw	-50
 15594  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 15595  0102C4  0ECF               	movlw	-49
 15596  0102C6  50E3               	movf	plusw1,w,c
 15597  0102C8  1001               	iorwf	btemp^0,w,c
 15598  0102CA  B4D8               	btfsc	status,2,c
 15599  0102CC  D017               	goto	l11608
 15600                           
 15601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15602  0102CE  0EDA               	movlw	low STR_70
 15603  0102D0  6EE6               	movwf	postinc1,c
 15604  0102D2  0EFF               	movlw	high STR_70
 15605  0102D4  6EE6               	movwf	postinc1,c
 15606                           
 15607                           ;stkvar	_n @ sp[(-58)+32]
 15608  0102D6  0E94               	movlw	low _dbuf
 15609  0102D8  6E0B               	movwf	(btemp+10)^0,c
 15610  0102DA  0E03               	movlw	high _dbuf
 15611  0102DC  6E0C               	movwf	(btemp+11)^0,c
 15612  0102DE  0EE6               	movlw	-26
 15613  0102E0  50E3               	movf	plusw1,w,c
 15614  0102E2  260B               	addwf	(btemp+10)^0,f,c
 15615  0102E4  0EE7               	movlw	-25
 15616  0102E6  50E3               	movf	plusw1,w,c
 15617  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 15618  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15619  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15620  0102F6  EC70  F0CC         	call	_strcpy	;wreg free
 15621                           
 15622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15623  0102FA  D78D               	goto	l11592
 15624  0102FC                     l11608:
 15625                           
 15626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15627  0102FC  0EE2               	movlw	low STR_71
 15628  0102FE  6EE6               	movwf	postinc1,c
 15629  010300  0EFF               	movlw	high STR_71
 15630  010302  6EE6               	movwf	postinc1,c
 15631                           
 15632                           ;stkvar	_n @ sp[(-58)+32]
 15633  010304  0E94               	movlw	low _dbuf
 15634  010306  6E0B               	movwf	(btemp+10)^0,c
 15635  010308  0E03               	movlw	high _dbuf
 15636  01030A  6E0C               	movwf	(btemp+11)^0,c
 15637  01030C  0EE6               	movlw	-26
 15638  01030E  50E3               	movf	plusw1,w,c
 15639  010310  260B               	addwf	(btemp+10)^0,f,c
 15640  010312  0EE7               	movlw	-25
 15641  010314  50E3               	movf	plusw1,w,c
 15642  010316  220C               	addwfc	(btemp+11)^0,f,c
 15643  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15644  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15645  010324  EC70  F0CC         	call	_strcpy	;wreg free
 15646  010328  D776               	goto	l11592
 15647  01032A                     l11616:
 15648                           
 15649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15650  01032A  0E00               	movlw	0
 15651  01032C  6E09               	movwf	(btemp+8)^0,c
 15652  01032E  0E00               	movlw	0
 15653  010330  6E0A               	movwf	(btemp+9)^0,c
 15654  010332  0E80               	movlw	128
 15655  010334  6E0B               	movwf	(btemp+10)^0,c
 15656  010336  0E3F               	movlw	63
 15657  010338  6E0C               	movwf	(btemp+11)^0,c
 15658                           
 15659                           ;stkvar	_u @ sp[(-56)+12]
 15660  01033A  0ED4               	movlw	-44
 15661  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15662  010342  0ED5               	movlw	-43
 15663  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15664  01034A  0ED6               	movlw	-42
 15665  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15666  010352  0ED7               	movlw	-41
 15667  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 15668                           
 15669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15670                           ;stkvar	_e @ sp[(-56)+34]
 15671  01035A  0EEA               	movlw	-22
 15672  01035C  6AE3               	clrf	plusw1,c
 15673  01035E  0EEB               	movlw	-21
 15674  010360  6AE3               	clrf	plusw1,c
 15675                           
 15676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15677  010362  0E00               	movlw	0
 15678  010364  6EE6               	movwf	postinc1,c
 15679  010366  0E00               	movlw	0
 15680  010368  6EE6               	movwf	postinc1,c
 15681  01036A  0E00               	movlw	0
 15682  01036C  6EE6               	movwf	postinc1,c
 15683  01036E  0E00               	movlw	0
 15684  010370  6EE6               	movwf	postinc1,c
 15685                           
 15686                           ;stkvar	_g @ sp[(-60)+16]
 15687  010372  0ED4               	movlw	-44
 15688  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15689  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15690  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15691  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15692  01038C  ECDA  F0CC         	call	___fleq	;wreg free
 15693  010390  A001               	btfss	btemp& (0+255),0,c
 15694  010392  D039               	goto	l11628
 15695  010394  D0BC               	goto	u10780
 15696  010396                     l11624:
 15697                           
 15698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15699  010396  0E00               	movlw	0
 15700  010398  6EE6               	movwf	postinc1,c
 15701  01039A  0E00               	movlw	0
 15702  01039C  6EE6               	movwf	postinc1,c
 15703  01039E  0E20               	movlw	32
 15704  0103A0  6EE6               	movwf	postinc1,c
 15705  0103A2  0E41               	movlw	65
 15706  0103A4  6EE6               	movwf	postinc1,c
 15707                           
 15708                           ;stkvar	_u @ sp[(-60)+12]
 15709  0103A6  0ED0               	movlw	-48
 15710  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15711  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15712  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15713  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15714  0103C0  EC0F  F099         	call	___flmul	;wreg free
 15715                           
 15716                           ;stkvar	_u @ sp[(-56)+12]
 15717  0103C4  0ED4               	movlw	-44
 15718  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 15719  0103CC  0ED5               	movlw	-43
 15720  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15721  0103D4  0ED6               	movlw	-42
 15722  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15723  0103DC  0ED7               	movlw	-41
 15724  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15725                           
 15726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15727                           ;stkvar	_e @ sp[(-56)+34]
 15728  0103E4  0EEA               	movlw	-22
 15729  0103E6  50E3               	movf	plusw1,w,c
 15730  0103E8  0F01               	addlw	1
 15731  0103EA  6E01               	movwf	btemp^0,c
 15732  0103EC  0EEA               	movlw	-22
 15733  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 15734  0103F4  6A01               	clrf	btemp^0,c
 15735  0103F6  0EEB               	movlw	-21
 15736  0103F8  50E3               	movf	plusw1,w,c
 15737  0103FA  2001               	addwfc	btemp^0,w,c
 15738  0103FC  6E01               	movwf	btemp^0,c
 15739  0103FE  0EEB               	movlw	-21
 15740  010400  0060  F007  FFE3   	movff	btemp,plusw1
 15741  010406                     l11628:
 15742                           
 15743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15744  010406  0E00               	movlw	0
 15745  010408  6EE6               	movwf	postinc1,c
 15746  01040A  0E00               	movlw	0
 15747  01040C  6EE6               	movwf	postinc1,c
 15748  01040E  0E20               	movlw	32
 15749  010410  6EE6               	movwf	postinc1,c
 15750  010412  0E41               	movlw	65
 15751  010414  6EE6               	movwf	postinc1,c
 15752                           
 15753                           ;stkvar	_u @ sp[(-60)+12]
 15754  010416  0ED0               	movlw	-48
 15755  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15756  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15757  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15758  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15759  010430  EC0F  F099         	call	___flmul	;wreg free
 15760  010434  0060  F007  FFE6   	movff	btemp,postinc1
 15761  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15762  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15763  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 15764                           
 15765                           ;stkvar	_g @ sp[(-60)+16]
 15766  01044C  0ED4               	movlw	-44
 15767  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15768  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15769  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15770  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15771  010466  EC70  F0C3         	call	___flge	;wreg free
 15772  01046A  A001               	btfss	btemp& (0+255),0,c
 15773  01046C  D032               	goto	l11634
 15774  01046E  D793               	goto	l11624
 15775  010470                     l11630:
 15776                           
 15777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15778  010470  0E00               	movlw	0
 15779  010472  6EE6               	movwf	postinc1,c
 15780  010474  0E00               	movlw	0
 15781  010476  6EE6               	movwf	postinc1,c
 15782  010478  0E20               	movlw	32
 15783  01047A  6EE6               	movwf	postinc1,c
 15784  01047C  0E41               	movlw	65
 15785  01047E  6EE6               	movwf	postinc1,c
 15786                           
 15787                           ;stkvar	_u @ sp[(-60)+12]
 15788  010480  0ED0               	movlw	-48
 15789  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15790  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15791  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15792  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15793  01049A  EC9B  F0A4         	call	___fldiv	;wreg free
 15794                           
 15795                           ;stkvar	_u @ sp[(-56)+12]
 15796  01049E  0ED4               	movlw	-44
 15797  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 15798  0104A6  0ED5               	movlw	-43
 15799  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15800  0104AE  0ED6               	movlw	-42
 15801  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15802  0104B6  0ED7               	movlw	-41
 15803  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15804                           
 15805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15806                           ;stkvar	_e @ sp[(-56)+34]
 15807  0104BE  50E1               	movf	fsr1l,w,c
 15808  0104C0  0FEA               	addlw	-22
 15809  0104C2  6ED9               	movwf	fsr2l,c
 15810  0104C4  50E2               	movf	fsr1h,w,c
 15811  0104C6  6EDA               	movwf	fsr2h,c
 15812  0104C8  0EFF               	movlw	255
 15813  0104CA  22DA               	addwfc	fsr2h,f,c
 15814  0104CC  06DE               	decf	postinc2,f,c
 15815  0104CE  0E00               	movlw	0
 15816  0104D0  5ADD               	subwfb	postdec2,f,c
 15817  0104D2                     l11634:
 15818                           
 15819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15820                           ;stkvar	_u @ sp[(-56)+12]
 15821  0104D2  0ED4               	movlw	-44
 15822  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15823  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15824  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15825  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15826                           
 15827                           ;stkvar	_g @ sp[(-60)+16]
 15828  0104EC  0ED4               	movlw	-44
 15829  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15830  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15831  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15832  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15833  010506  EC70  F0C3         	call	___flge	;wreg free
 15834  01050A  A001               	btfss	btemp& (0+255),0,c
 15835  01050C  D7B1               	goto	l11630
 15836  01050E                     u10780:
 15837                           
 15838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15839                           ;stkvar	_c @ sp[(-56)+-7]
 15840  01050E  0EC1               	movlw	-63
 15841  010510  50E3               	movf	plusw1,w,c
 15842  010512  6EE6               	movwf	postinc1,c
 15843  010514  0E00               	movlw	0
 15844  010516  6EE6               	movwf	postinc1,c
 15845  010518  EC92  F0D1         	call	_tolower	;wreg free
 15846                           
 15847                           ;stkvar	_mode @ sp[(-56)+54]
 15848  01051C  0EFE               	movlw	-2
 15849  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 15850                           
 15851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15852                           ;stkvar	_mode @ sp[(-56)+54]
 15853                           ;stkvar	_nmode @ sp[(-56)+55]
 15854  010524  0EFE               	movlw	-2
 15855  010526  006F FF8C  F001    	movff	plusw1,btemp
 15856  01052C  0EFF               	movlw	-1
 15857  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 15858                           
 15859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15860                           ;stkvar	_mode @ sp[(-56)+54]
 15861  010534  0EFE               	movlw	-2
 15862  010536  006F FF8C  F001    	movff	plusw1,btemp
 15863  01053C  0E67               	movlw	103
 15864  01053E  1801               	xorwf	btemp^0,w,c
 15865  010540  A4D8               	btfss	status,2,c
 15866  010542  D025               	goto	l11652
 15867                           
 15868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15869  010544  5023               	movf	_prec^0,w,c
 15870  010546  1024               	iorwf	(_prec+1)^0,w,c
 15871  010548  A4D8               	btfss	status,2,c
 15872  01054A  D004               	goto	l11646
 15873                           
 15874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15875  01054C  0E00               	movlw	0
 15876  01054E  6E24               	movwf	(_prec+1)^0,c
 15877  010550  0E01               	movlw	1
 15878  010552  6E23               	movwf	_prec^0,c
 15879  010554                     l11646:
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15882  010554  BE24               	btfsc	(_prec+1)^0,7,c
 15883  010556  D005               	goto	u10810
 15884  010558  5024               	movf	(_prec+1)^0,w,c
 15885  01055A  E110               	bnz	l11650
 15886  01055C  0423               	decf	_prec^0,w,c
 15887  01055E  B0D8               	btfsc	status,0,c
 15888  010560  D00D               	goto	l11650
 15889  010562                     u10810:
 15890  010562  0E06               	movlw	6
 15891  010564  6E0B               	movwf	(btemp+10)^0,c
 15892  010566  0E00               	movlw	0
 15893  010568  6E0C               	movwf	(btemp+11)^0,c
 15894                           
 15895                           ;stkvar	_p @ sp[(-56)+40]
 15896  01056A  0EF0               	movlw	-16
 15897  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15898  010572  0EF1               	movlw	-15
 15899  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 15900  01057A  D00C               	goto	l11658
 15901  01057C                     l11650:
 15902                           
 15903                           ;stkvar	_p @ sp[(-56)+40]
 15904  01057C  0EF0               	movlw	-16
 15905  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 15906  010584  0EF1               	movlw	-15
 15907  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 15908  01058C  D003               	goto	l11658
 15909  01058E                     l11652:
 15910                           
 15911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15912  01058E  AE24               	btfss	(_prec+1)^0,7,c
 15913  010590  D7F5               	goto	l11650
 15914  010592  D7E7               	goto	u10810
 15915  010594                     l11658:
 15916                           
 15917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15918                           ;stkvar	_mode @ sp[(-56)+54]
 15919  010594  0EFE               	movlw	-2
 15920  010596  006F FF8C  F001    	movff	plusw1,btemp
 15921  01059C  0E67               	movlw	103
 15922  01059E  1801               	xorwf	btemp^0,w,c
 15923  0105A0  A4D8               	btfss	status,2,c
 15924  0105A2  D02F               	goto	l11668
 15925                           
 15926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15927                           ;stkvar	_e @ sp[(-56)+34]
 15928  0105A4  0EEB               	movlw	-21
 15929  0105A6  AEE3               	btfss	plusw1,7,c
 15930  0105A8  D00E               	goto	u10840
 15931  0105AA  0EEA               	movlw	-22
 15932  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 15933  0105B2  0EFC               	movlw	252
 15934  0105B4  5E01               	subwf	btemp^0,f,c
 15935  0105B6  0EEB               	movlw	-21
 15936  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 15937  0105BE  0EFF               	movlw	255
 15938  0105C0  5A01               	subwfb	btemp^0,f,c
 15939  0105C2  A0D8               	btfss	status,0,c
 15940  0105C4  D018               	goto	l11666
 15941  0105C6                     u10840:
 15942                           
 15943                           ;stkvar	_e @ sp[(-56)+34]
 15944                           ;stkvar	_p @ sp[(-56)+40]
 15945  0105C6  0EF0               	movlw	-16
 15946  0105C8  50E3               	movf	plusw1,w,c
 15947  0105CA  0FFF               	addlw	255
 15948  0105CC  6E0B               	movwf	(btemp+10)^0,c
 15949  0105CE  0EF1               	movlw	-15
 15950  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15951  0105D6  0EFF               	movlw	255
 15952  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 15953  0105DA  0EEA               	movlw	-22
 15954  0105DC  50E3               	movf	plusw1,w,c
 15955  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 15956  0105E0  500C               	movf	(btemp+11)^0,w,c
 15957  0105E2  0A80               	xorlw	128
 15958  0105E4  6E01               	movwf	btemp^0,c
 15959  0105E6  0EEB               	movlw	-21
 15960  0105E8  50E3               	movf	plusw1,w,c
 15961  0105EA  0A80               	xorlw	128
 15962  0105EC  5801               	subwfb	btemp^0,w,c
 15963  0105EE  A0D8               	btfss	status,0,c
 15964  0105F0  D002               	goto	l11666
 15965                           
 15966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15967  0105F2  0E66               	movlw	102
 15968  0105F4  D001               	goto	L15
 15969  0105F6                     l11666:
 15970                           
 15971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15972  0105F6  0E65               	movlw	101
 15973  0105F8                     L15:
 15974  0105F8  6E0C               	movwf	(btemp+11)^0,c
 15975                           
 15976                           ;stkvar	_nmode @ sp[(-56)+55]
 15977  0105FA  0EFF               	movlw	-1
 15978  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15979  010602                     l11668:
 15980                           
 15981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15982                           ;stkvar	_p @ sp[(-56)+40]
 15983                           ;stkvar	_m @ sp[(-56)+48]
 15984  010602  0EF0               	movlw	-16
 15985  010604  006F FF8C  F001    	movff	plusw1,btemp
 15986  01060A  0EF8               	movlw	-8
 15987  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 15988  010612  0EF1               	movlw	-15
 15989  010614  006F FF8C  F001    	movff	plusw1,btemp
 15990  01061A  0EF9               	movlw	-7
 15991  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 15992                           
 15993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15994                           ;stkvar	_mode @ sp[(-56)+54]
 15995  010622  0EFE               	movlw	-2
 15996  010624  006F FF8C  F001    	movff	plusw1,btemp
 15997  01062A  0E67               	movlw	103
 15998  01062C  1801               	xorwf	btemp^0,w,c
 15999  01062E  A4D8               	btfss	status,2,c
 16000  010630  D00B               	goto	u10880
 16001                           
 16002                           ;stkvar	_nmode @ sp[(-56)+55]
 16003  010632  0EFF               	movlw	-1
 16004  010634  006F FF8C  F001    	movff	plusw1,btemp
 16005  01063A  0E66               	movlw	102
 16006  01063C  1801               	xorwf	btemp^0,w,c
 16007  01063E  A4D8               	btfss	status,2,c
 16008  010640  D014               	goto	l2185
 16009                           
 16010                           ;stkvar	_e @ sp[(-56)+34]
 16011  010642  0EEB               	movlw	-21
 16012  010644  AEE3               	btfss	plusw1,7,c
 16013  010646  D011               	goto	l2185
 16014  010648                     u10880:
 16015                           
 16016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16017                           ;stkvar	_m @ sp[(-56)+48]
 16018  010648  0EF8               	movlw	-8
 16019  01064A  50E3               	movf	plusw1,w,c
 16020  01064C  0F01               	addlw	1
 16021  01064E  6E01               	movwf	btemp^0,c
 16022  010650  0EF8               	movlw	-8
 16023  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16024  010658  6A01               	clrf	btemp^0,c
 16025  01065A  0EF9               	movlw	-7
 16026  01065C  50E3               	movf	plusw1,w,c
 16027  01065E  2001               	addwfc	btemp^0,w,c
 16028  010660  6E01               	movwf	btemp^0,c
 16029  010662  0EF9               	movlw	-7
 16030  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16031  01066A                     l2185:
 16032                           
 16033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16034                           ;stkvar	_nmode @ sp[(-56)+55]
 16035  01066A  0EFF               	movlw	-1
 16036  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16037  010672  0E66               	movlw	102
 16038  010674  1801               	xorwf	btemp^0,w,c
 16039  010676  A4D8               	btfss	status,2,c
 16040  010678  D03B               	goto	l11688
 16041                           
 16042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16043                           ;stkvar	_e @ sp[(-56)+34]
 16044  01067A  0EEB               	movlw	-21
 16045  01067C  AEE3               	btfss	plusw1,7,c
 16046  01067E  D01C               	goto	l11684
 16047                           
 16048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16049  010680  0E00               	movlw	0
 16050  010682  6E09               	movwf	(btemp+8)^0,c
 16051  010684  0E00               	movlw	0
 16052  010686  6E0A               	movwf	(btemp+9)^0,c
 16053  010688  0E80               	movlw	128
 16054  01068A  6E0B               	movwf	(btemp+10)^0,c
 16055  01068C  0E3F               	movlw	63
 16056  01068E  6E0C               	movwf	(btemp+11)^0,c
 16057                           
 16058                           ;stkvar	_u @ sp[(-56)+12]
 16059  010690  0ED4               	movlw	-44
 16060  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16061  010698  0ED5               	movlw	-43
 16062  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16063  0106A0  0ED6               	movlw	-42
 16064  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16065  0106A8  0ED7               	movlw	-41
 16066  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16067                           
 16068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16069                           ;stkvar	_e @ sp[(-56)+34]
 16070  0106B0  0EEA               	movlw	-22
 16071  0106B2  6AE3               	clrf	plusw1,c
 16072  0106B4  0EEB               	movlw	-21
 16073  0106B6  6AE3               	clrf	plusw1,c
 16074  0106B8                     l11684:
 16075                           
 16076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16077                           ;stkvar	_mode @ sp[(-56)+54]
 16078  0106B8  0EFE               	movlw	-2
 16079  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16080  0106C0  0E67               	movlw	103
 16081  0106C2  1801               	xorwf	btemp^0,w,c
 16082  0106C4  B4D8               	btfsc	status,2,c
 16083  0106C6  D014               	goto	l11688
 16084                           
 16085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16086                           ;stkvar	_e @ sp[(-56)+34]
 16087                           ;stkvar	_m @ sp[(-56)+48]
 16088  0106C8  0EF8               	movlw	-8
 16089  0106CA  50E3               	movf	plusw1,w,c
 16090  0106CC  6E01               	movwf	btemp^0,c
 16091  0106CE  0EEA               	movlw	-22
 16092  0106D0  50E3               	movf	plusw1,w,c
 16093  0106D2  2601               	addwf	btemp^0,f,c
 16094  0106D4  0EF8               	movlw	-8
 16095  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16096  0106DC  0EF9               	movlw	-7
 16097  0106DE  50E3               	movf	plusw1,w,c
 16098  0106E0  6E01               	movwf	btemp^0,c
 16099  0106E2  0EEB               	movlw	-21
 16100  0106E4  50E3               	movf	plusw1,w,c
 16101  0106E6  2201               	addwfc	btemp^0,f,c
 16102  0106E8  0EF9               	movlw	-7
 16103  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16104  0106F0                     l11688:
 16105                           
 16106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16107                           ;stkvar	_i @ sp[(-56)+36]
 16108  0106F0  0EEC               	movlw	-20
 16109  0106F2  6AE3               	clrf	plusw1,c
 16110  0106F4  0EED               	movlw	-19
 16111  0106F6  6AE3               	clrf	plusw1,c
 16112                           
 16113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16114                           ;stkvar	_g @ sp[(-56)+16]
 16115  0106F8  0ED8               	movlw	-40
 16116  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16117  010700  0ED9               	movlw	-39
 16118  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16119  010708  0EDA               	movlw	-38
 16120  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16121  010710  0EDB               	movlw	-37
 16122  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16123                           
 16124                           ;stkvar	_h @ sp[(-56)+24]
 16125  010718  0EE0               	movlw	-32
 16126  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16127  010720  0EE1               	movlw	-31
 16128  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16129  010728  0EE2               	movlw	-30
 16130  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16131  010730  0EE3               	movlw	-29
 16132  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16133                           
 16134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16135                           ;stkvar	_u @ sp[(-56)+12]
 16136  010738  0ED4               	movlw	-44
 16137  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16138  010740  0ED5               	movlw	-43
 16139  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16140  010748  0ED6               	movlw	-42
 16141  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16142  010750  0ED7               	movlw	-41
 16143  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16144                           
 16145                           ;stkvar	_ou @ sp[(-56)+28]
 16146  010758  0EE4               	movlw	-28
 16147  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16148  010760  0EE5               	movlw	-27
 16149  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16150  010768  0EE6               	movlw	-26
 16151  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16152  010770  0EE7               	movlw	-25
 16153  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16154                           
 16155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16156  010778  D0D6               	goto	l11704
 16157  01077A                     l11694:
 16158                           
 16159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16160                           ;stkvar	_u @ sp[(-56)+12]
 16161  01077A  0ED4               	movlw	-44
 16162  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16163  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16164  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16165  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16166                           
 16167                           ;stkvar	_h @ sp[(-60)+24]
 16168  010794  0EDC               	movlw	-36
 16169  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16170  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16171  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16172  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16173  0107AE  EC9B  F0A4         	call	___fldiv	;wreg free
 16174  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16175  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16176  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16177  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16178  0107CA  EC9C  F0AF         	call	_floorf	;wreg free
 16179                           
 16180                           ;stkvar	_l @ sp[(-56)+20]
 16181  0107CE  0EDC               	movlw	-36
 16182  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16183  0107D6  0EDD               	movlw	-35
 16184  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16185  0107DE  0EDE               	movlw	-34
 16186  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16187  0107E6  0EDF               	movlw	-33
 16188  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16189                           
 16190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16191                           ;stkvar	_l @ sp[(-56)+20]
 16192  0107EE  0EDC               	movlw	-36
 16193  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16194  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16195  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16196  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16197  010808  ECFF  F0C1         	call	___fltol	;wreg free
 16198  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16199  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16200                           
 16201                           ;stkvar	_d @ sp[(-56)+44]
 16202  010818  0EF4               	movlw	-12
 16203  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16204  010820  0EF5               	movlw	-11
 16205  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16206                           
 16207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16208                           ;stkvar	_u @ sp[(-56)+12]
 16209  010828  0ED4               	movlw	-44
 16210  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16211  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16212  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16213  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16214                           
 16215                           ;stkvar	_l @ sp[(-60)+20]
 16216  010842  0ED8               	movlw	-40
 16217  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16218  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16219  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16220  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16221  01085C  EC0F  F099         	call	___flmul	;wreg free
 16222  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16223  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16224  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16225  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16226                           
 16227                           ;stkvar	_h @ sp[(-60)+24]
 16228  010878  0EDC               	movlw	-36
 16229  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16230  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16231  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16232  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16233  010892  EC3F  F0D5         	call	___flsub	;wreg free
 16234                           
 16235                           ;stkvar	_h @ sp[(-56)+24]
 16236  010896  0EE0               	movlw	-32
 16237  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16238  01089E  0EE1               	movlw	-31
 16239  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16240  0108A6  0EE2               	movlw	-30
 16241  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16242  0108AE  0EE3               	movlw	-29
 16243  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16244                           
 16245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16246  0108B6  0E00               	movlw	0
 16247  0108B8  6EE6               	movwf	postinc1,c
 16248  0108BA  0E00               	movlw	0
 16249  0108BC  6EE6               	movwf	postinc1,c
 16250  0108BE  0E20               	movlw	32
 16251  0108C0  6EE6               	movwf	postinc1,c
 16252  0108C2  0E41               	movlw	65
 16253  0108C4  6EE6               	movwf	postinc1,c
 16254                           
 16255                           ;stkvar	_u @ sp[(-60)+12]
 16256  0108C6  0ED0               	movlw	-48
 16257  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16258  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16259  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16260  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16261  0108E0  EC9B  F0A4         	call	___fldiv	;wreg free
 16262                           
 16263                           ;stkvar	_u @ sp[(-56)+12]
 16264  0108E4  0ED4               	movlw	-44
 16265  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16266  0108EC  0ED5               	movlw	-43
 16267  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16268  0108F4  0ED6               	movlw	-42
 16269  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16270  0108FC  0ED7               	movlw	-41
 16271  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16272                           
 16273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16274                           ;stkvar	_i @ sp[(-56)+36]
 16275  010904  0EEC               	movlw	-20
 16276  010906  50E3               	movf	plusw1,w,c
 16277  010908  0F01               	addlw	1
 16278  01090A  6E01               	movwf	btemp^0,c
 16279  01090C  0EEC               	movlw	-20
 16280  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16281  010914  6A01               	clrf	btemp^0,c
 16282  010916  0EED               	movlw	-19
 16283  010918  50E3               	movf	plusw1,w,c
 16284  01091A  2001               	addwfc	btemp^0,w,c
 16285  01091C  6E01               	movwf	btemp^0,c
 16286  01091E  0EED               	movlw	-19
 16287  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16288  010926                     l11704:
 16289                           
 16290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16291                           ;stkvar	_m @ sp[(-56)+48]
 16292                           ;stkvar	_i @ sp[(-56)+36]
 16293  010926  50E1               	movf	fsr1l,w,c
 16294  010928  0FEC               	addlw	-20
 16295  01092A  6ED9               	movwf	fsr2l,c
 16296  01092C  50E2               	movf	fsr1h,w,c
 16297  01092E  6EDA               	movwf	fsr2h,c
 16298  010930  0EFF               	movlw	255
 16299  010932  22DA               	addwfc	fsr2h,f,c
 16300  010934  0EF8               	movlw	-8
 16301  010936  50E3               	movf	plusw1,w,c
 16302  010938  5CDE               	subwf	postinc2,w,c
 16303  01093A  50DE               	movf	postinc2,w,c
 16304  01093C  0A80               	xorlw	128
 16305  01093E  6E01               	movwf	btemp^0,c
 16306  010940  0EF9               	movlw	-7
 16307  010942  50E3               	movf	plusw1,w,c
 16308  010944  0A80               	xorlw	128
 16309  010946  5801               	subwfb	btemp^0,w,c
 16310  010948  A0D8               	btfss	status,0,c
 16311  01094A  D717               	goto	l11694
 16312                           
 16313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16314  01094C  0E00               	movlw	0
 16315  01094E  6EE6               	movwf	postinc1,c
 16316  010950  0E00               	movlw	0
 16317  010952  6EE6               	movwf	postinc1,c
 16318  010954  0EA0               	movlw	160
 16319  010956  6EE6               	movwf	postinc1,c
 16320  010958  0E40               	movlw	64
 16321  01095A  6EE6               	movwf	postinc1,c
 16322                           
 16323                           ;stkvar	_u @ sp[(-60)+12]
 16324  01095C  0ED0               	movlw	-48
 16325  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16326  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16327  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16328  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16329  010976  EC0F  F099         	call	___flmul	;wreg free
 16330                           
 16331                           ;stkvar	_l @ sp[(-56)+20]
 16332  01097A  0EDC               	movlw	-36
 16333  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16334  010982  0EDD               	movlw	-35
 16335  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16336  01098A  0EDE               	movlw	-34
 16337  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16338  010992  0EDF               	movlw	-33
 16339  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16340                           
 16341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16342                           ;stkvar	_l @ sp[(-56)+20]
 16343  01099A  0EDC               	movlw	-36
 16344  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16345  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16346  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16347  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16348                           
 16349                           ;stkvar	_h @ sp[(-60)+24]
 16350  0109B4  0EDC               	movlw	-36
 16351  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16352  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16353  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16354  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16355  0109CE  EC70  F0C3         	call	___flge	;wreg free
 16356  0109D2  A001               	btfss	btemp& (0+255),0,c
 16357  0109D4  D021               	goto	u10950
 16358                           
 16359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16360                           ;stkvar	_l @ sp[(-56)+20]
 16361                           
 16362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16363                           
 16364                           ;stkvar	_l @ sp[(-56)+20]
 16365                           
 16366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16367  0109D6  0EDC               	movlw	-36
 16368  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16369  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16370  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16371  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16372                           
 16373                           ;stkvar	_h @ sp[(-60)+24]
 16374  0109F0  0EDC               	movlw	-36
 16375  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16376  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16377  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16378  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16379  010A0A  ECDA  F0CC         	call	___fleq	;wreg free
 16380  010A0E  A001               	btfss	btemp& (0+255),0,c
 16381  010A10  D01B               	goto	l11718
 16382                           
 16383                           ;stkvar	_d @ sp[(-56)+44]
 16384  010A12  0EF4               	movlw	-12
 16385  010A14  B0E3               	btfsc	plusw1,0,c
 16386  010A16  D018               	goto	l11718
 16387  010A18                     u10950:
 16388                           
 16389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16390  010A18  0E00               	movlw	0
 16391  010A1A  6E09               	movwf	(btemp+8)^0,c
 16392  010A1C  0E00               	movlw	0
 16393  010A1E  6E0A               	movwf	(btemp+9)^0,c
 16394  010A20  0E00               	movlw	0
 16395  010A22  6E0B               	movwf	(btemp+10)^0,c
 16396  010A24  0E00               	movlw	0
 16397  010A26  6E0C               	movwf	(btemp+11)^0,c
 16398                           
 16399                           ;stkvar	_l @ sp[(-56)+20]
 16400  010A28  0EDC               	movlw	-36
 16401  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16402  010A30  0EDD               	movlw	-35
 16403  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16404  010A38  0EDE               	movlw	-34
 16405  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16406  010A40  0EDF               	movlw	-33
 16407  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 16408  010A48                     l11718:
 16409                           
 16410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16411                           ;stkvar	_l @ sp[(-56)+20]
 16412  010A48  0EDC               	movlw	-36
 16413  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16414  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16415  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16416  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16417                           
 16418                           ;stkvar	_g @ sp[(-60)+16]
 16419  010A62  0ED4               	movlw	-44
 16420  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16421  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16422  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16423  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16424  010A7C  EC24  F09D         	call	___fladd	;wreg free
 16425                           
 16426                           ;stkvar	_h @ sp[(-56)+24]
 16427  010A80  0EE0               	movlw	-32
 16428  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 16429  010A88  0EE1               	movlw	-31
 16430  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16431  010A90  0EE2               	movlw	-30
 16432  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16433  010A98  0EE3               	movlw	-29
 16434  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 16435                           
 16436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16437                           ;stkvar	_ou @ sp[(-56)+28]
 16438  010AA0  0EE4               	movlw	-28
 16439  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 16440  010AA8  0EE5               	movlw	-27
 16441  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16442  010AB0  0EE6               	movlw	-26
 16443  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16444  010AB8  0EE7               	movlw	-25
 16445  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16446                           
 16447                           ;stkvar	_u @ sp[(-56)+12]
 16448  010AC0  0ED4               	movlw	-44
 16449  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 16450  010AC8  0ED5               	movlw	-43
 16451  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16452  010AD0  0ED6               	movlw	-42
 16453  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16454  010AD8  0ED7               	movlw	-41
 16455  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16456                           
 16457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16458                           ;stkvar	_nmode @ sp[(-56)+55]
 16459  010AE0  0EFF               	movlw	-1
 16460  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 16461  010AE8  0E65               	movlw	101
 16462  010AEA  1801               	xorwf	btemp^0,w,c
 16463  010AEC  B4D8               	btfsc	status,2,c
 16464  010AEE  D011               	goto	l11726
 16465                           
 16466                           ;stkvar	_e @ sp[(-56)+34]
 16467                           ;stkvar	_ne @ sp[(-56)+46]
 16468  010AF0  0EEA               	movlw	-22
 16469  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 16470  010AF8  0EF6               	movlw	-10
 16471  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 16472  010B00  0EEB               	movlw	-21
 16473  010B02  006F FF8C  F001    	movff	plusw1,btemp
 16474  010B08  0EF7               	movlw	-9
 16475  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 16476  010B10  D004               	goto	l2200
 16477  010B12                     l11726:
 16478                           
 16479                           ;stkvar	_ne @ sp[(-56)+46]
 16480  010B12  0EF6               	movlw	-10
 16481  010B14  6AE3               	clrf	plusw1,c
 16482  010B16  0EF7               	movlw	-9
 16483  010B18  6AE3               	clrf	plusw1,c
 16484  010B1A                     l2200:
 16485                           
 16486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16487                           ;stkvar	_pp @ sp[(-56)+50]
 16488  010B1A  0EFA               	movlw	-6
 16489  010B1C  6AE3               	clrf	plusw1,c
 16490  010B1E  0EFB               	movlw	-5
 16491  010B20  6AE3               	clrf	plusw1,c
 16492                           
 16493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16494                           ;stkvar	_t @ sp[(-56)+52]
 16495  010B22  0EFC               	movlw	-4
 16496  010B24  6AE3               	clrf	plusw1,c
 16497  010B26  0EFD               	movlw	-3
 16498  010B28  6AE3               	clrf	plusw1,c
 16499                           
 16500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16501                           ;stkvar	_i @ sp[(-56)+36]
 16502  010B2A  0EEC               	movlw	-20
 16503  010B2C  6AE3               	clrf	plusw1,c
 16504  010B2E  0EED               	movlw	-19
 16505  010B30  6AE3               	clrf	plusw1,c
 16506                           
 16507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16508  010B32  D1B7               	goto	l11778
 16509  010B34                     l11728:
 16510                           
 16511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16512                           ;stkvar	_u @ sp[(-56)+12]
 16513  010B34  0ED4               	movlw	-44
 16514  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16515  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16516  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16517  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16518                           
 16519                           ;stkvar	_h @ sp[(-60)+24]
 16520  010B4E  0EDC               	movlw	-36
 16521  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16522  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16523  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16524  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16525  010B68  EC9B  F0A4         	call	___fldiv	;wreg free
 16526  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 16527  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16528  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16529  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 16530  010B84  EC9C  F0AF         	call	_floorf	;wreg free
 16531                           
 16532                           ;stkvar	_l @ sp[(-56)+20]
 16533  010B88  0EDC               	movlw	-36
 16534  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 16535  010B90  0EDD               	movlw	-35
 16536  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16537  010B98  0EDE               	movlw	-34
 16538  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16539  010BA0  0EDF               	movlw	-33
 16540  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 16541                           
 16542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16543                           ;stkvar	_l @ sp[(-56)+20]
 16544  010BA8  0EDC               	movlw	-36
 16545  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16546  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16547  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16548  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16549  010BC2  ECFF  F0C1         	call	___fltol	;wreg free
 16550  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 16551  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 16552                           
 16553                           ;stkvar	_d @ sp[(-56)+44]
 16554  010BD2  0EF4               	movlw	-12
 16555  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16556  010BDA  0EF5               	movlw	-11
 16557  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16558                           
 16559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16560  010BE2  B825               	btfsc	_flags^0,4,c
 16561  010BE4  D026               	goto	l11742
 16562                           
 16563                           ;stkvar	_d @ sp[(-56)+44]
 16564  010BE6  0EF4               	movlw	-12
 16565  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 16566  010BEE  0EF5               	movlw	-11
 16567  010BF0  50E3               	movf	plusw1,w,c
 16568  010BF2  1001               	iorwf	btemp^0,w,c
 16569  010BF4  A4D8               	btfss	status,2,c
 16570  010BF6  D01D               	goto	l11742
 16571                           
 16572                           ;stkvar	_mode @ sp[(-56)+54]
 16573  010BF8  0EFE               	movlw	-2
 16574  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 16575  010C00  0E67               	movlw	103
 16576  010C02  1801               	xorwf	btemp^0,w,c
 16577  010C04  A4D8               	btfss	status,2,c
 16578  010C06  D015               	goto	l11742
 16579                           
 16580                           ;stkvar	_ne @ sp[(-56)+46]
 16581  010C08  0EF7               	movlw	-9
 16582  010C0A  AEE3               	btfss	plusw1,7,c
 16583  010C0C  D012               	goto	l11742
 16584                           
 16585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16586                           ;stkvar	_t @ sp[(-56)+52]
 16587  010C0E  0EFC               	movlw	-4
 16588  010C10  50E3               	movf	plusw1,w,c
 16589  010C12  0F01               	addlw	1
 16590  010C14  6E01               	movwf	btemp^0,c
 16591  010C16  0EFC               	movlw	-4
 16592  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 16593  010C1E  6A01               	clrf	btemp^0,c
 16594  010C20  0EFD               	movlw	-3
 16595  010C22  50E3               	movf	plusw1,w,c
 16596  010C24  2001               	addwfc	btemp^0,w,c
 16597  010C26  6E01               	movwf	btemp^0,c
 16598  010C28  0EFD               	movlw	-3
 16599  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 16600                           
 16601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16602  010C30  D0AF               	goto	l11770
 16603  010C32                     l11742:
 16604                           
 16605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16606                           ;stkvar	_pp @ sp[(-56)+50]
 16607  010C32  0EFA               	movlw	-6
 16608  010C34  006F FF8C  F001    	movff	plusw1,btemp
 16609  010C3A  0EFB               	movlw	-5
 16610  010C3C  50E3               	movf	plusw1,w,c
 16611  010C3E  1001               	iorwf	btemp^0,w,c
 16612  010C40  A4D8               	btfss	status,2,c
 16613  010C42  D070               	goto	l11762
 16614                           
 16615                           ;stkvar	_ne @ sp[(-56)+46]
 16616  010C44  0EF7               	movlw	-9
 16617  010C46  AEE3               	btfss	plusw1,7,c
 16618  010C48  D06D               	goto	l11762
 16619                           
 16620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16621                           ;stkvar	_n @ sp[(-56)+32]
 16622  010C4A  0EE8               	movlw	-24
 16623  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16624  010C52  0EE9               	movlw	-23
 16625  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 16626  010C5A  0E94               	movlw	low _dbuf
 16627  010C5C  240B               	addwf	(btemp+10)^0,w,c
 16628  010C5E  6ED9               	movwf	fsr2l,c
 16629  010C60  0E03               	movlw	high _dbuf
 16630  010C62  200C               	addwfc	(btemp+11)^0,w,c
 16631  010C64  6EDA               	movwf	fsr2h,c
 16632  010C66  0E2E               	movlw	46
 16633  010C68  6EDF               	movwf	indf2,c
 16634                           
 16635                           ;stkvar	_n @ sp[(-56)+32]
 16636  010C6A  0EE8               	movlw	-24
 16637  010C6C  50E3               	movf	plusw1,w,c
 16638  010C6E  0F01               	addlw	1
 16639  010C70  6E01               	movwf	btemp^0,c
 16640  010C72  0EE8               	movlw	-24
 16641  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 16642  010C7A  6A01               	clrf	btemp^0,c
 16643  010C7C  0EE9               	movlw	-23
 16644  010C7E  50E3               	movf	plusw1,w,c
 16645  010C80  2001               	addwfc	btemp^0,w,c
 16646  010C82  6E01               	movwf	btemp^0,c
 16647  010C84  0EE9               	movlw	-23
 16648  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 16649                           
 16650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16651                           ;stkvar	_w @ sp[(-56)+38]
 16652  010C8C  50E1               	movf	fsr1l,w,c
 16653  010C8E  0FEE               	addlw	-18
 16654  010C90  6ED9               	movwf	fsr2l,c
 16655  010C92  50E2               	movf	fsr1h,w,c
 16656  010C94  6EDA               	movwf	fsr2h,c
 16657  010C96  0EFF               	movlw	255
 16658  010C98  22DA               	addwfc	fsr2h,f,c
 16659  010C9A  06DE               	decf	postinc2,f,c
 16660  010C9C  0E00               	movlw	0
 16661  010C9E  5ADD               	subwfb	postdec2,f,c
 16662                           
 16663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16664  010CA0  0E01               	movlw	1
 16665  010CA2  6E0B               	movwf	(btemp+10)^0,c
 16666  010CA4  0E00               	movlw	0
 16667  010CA6  6E0C               	movwf	(btemp+11)^0,c
 16668                           
 16669                           ;stkvar	_pp @ sp[(-56)+50]
 16670  010CA8  0EFA               	movlw	-6
 16671  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16672  010CB0  0EFB               	movlw	-5
 16673  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16674  010CB8  D035               	goto	l11762
 16675  010CBA                     l11754:
 16676                           
 16677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16678                           ;stkvar	_n @ sp[(-56)+32]
 16679  010CBA  0EE8               	movlw	-24
 16680  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16681  010CC2  0EE9               	movlw	-23
 16682  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16683  010CCA  0E94               	movlw	low _dbuf
 16684  010CCC  240B               	addwf	(btemp+10)^0,w,c
 16685  010CCE  6ED9               	movwf	fsr2l,c
 16686  010CD0  0E03               	movlw	high _dbuf
 16687  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 16688  010CD4  6EDA               	movwf	fsr2h,c
 16689  010CD6  0E30               	movlw	48
 16690  010CD8  6EDF               	movwf	indf2,c
 16691                           
 16692                           ;stkvar	_n @ sp[(-56)+32]
 16693  010CDA  0EE8               	movlw	-24
 16694  010CDC  50E3               	movf	plusw1,w,c
 16695  010CDE  0F01               	addlw	1
 16696  010CE0  6E01               	movwf	btemp^0,c
 16697  010CE2  0EE8               	movlw	-24
 16698  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 16699  010CEA  6A01               	clrf	btemp^0,c
 16700  010CEC  0EE9               	movlw	-23
 16701  010CEE  50E3               	movf	plusw1,w,c
 16702  010CF0  2001               	addwfc	btemp^0,w,c
 16703  010CF2  6E01               	movwf	btemp^0,c
 16704  010CF4  0EE9               	movlw	-23
 16705  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 16706                           
 16707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16708                           ;stkvar	_w @ sp[(-56)+38]
 16709  010CFC  50E1               	movf	fsr1l,w,c
 16710  010CFE  0FEE               	addlw	-18
 16711  010D00  6ED9               	movwf	fsr2l,c
 16712  010D02  50E2               	movf	fsr1h,w,c
 16713  010D04  6EDA               	movwf	fsr2h,c
 16714  010D06  0EFF               	movlw	255
 16715  010D08  22DA               	addwfc	fsr2h,f,c
 16716  010D0A  06DE               	decf	postinc2,f,c
 16717  010D0C  0E00               	movlw	0
 16718  010D0E  5ADD               	subwfb	postdec2,f,c
 16719                           
 16720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16721                           ;stkvar	_t @ sp[(-56)+52]
 16722  010D10  50E1               	movf	fsr1l,w,c
 16723  010D12  0FFC               	addlw	-4
 16724  010D14  6ED9               	movwf	fsr2l,c
 16725  010D16  50E2               	movf	fsr1h,w,c
 16726  010D18  6EDA               	movwf	fsr2h,c
 16727  010D1A  0EFF               	movlw	255
 16728  010D1C  22DA               	addwfc	fsr2h,f,c
 16729  010D1E  06DE               	decf	postinc2,f,c
 16730  010D20  0E00               	movlw	0
 16731  010D22  5ADD               	subwfb	postdec2,f,c
 16732  010D24                     l11762:
 16733                           
 16734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16735                           ;stkvar	_t @ sp[(-56)+52]
 16736  010D24  0EFC               	movlw	-4
 16737  010D26  006F FF8C  F001    	movff	plusw1,btemp
 16738  010D2C  0EFD               	movlw	-3
 16739  010D2E  50E3               	movf	plusw1,w,c
 16740  010D30  1001               	iorwf	btemp^0,w,c
 16741  010D32  A4D8               	btfss	status,2,c
 16742  010D34  D7C2               	goto	l11754
 16743                           
 16744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16745                           ;stkvar	_n @ sp[(-56)+32]
 16746  010D36  0EE8               	movlw	-24
 16747  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 16748  010D3E  0EE9               	movlw	-23
 16749  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 16750  010D46  0E94               	movlw	low _dbuf
 16751  010D48  240B               	addwf	(btemp+10)^0,w,c
 16752  010D4A  6ED9               	movwf	fsr2l,c
 16753  010D4C  0E03               	movlw	high _dbuf
 16754  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 16755  010D50  6EDA               	movwf	fsr2h,c
 16756                           
 16757                           ;stkvar	_d @ sp[(-56)+44]
 16758  010D52  0EF4               	movlw	-12
 16759  010D54  50E3               	movf	plusw1,w,c
 16760  010D56  0F30               	addlw	48
 16761  010D58  6EDF               	movwf	indf2,c
 16762                           
 16763                           ;stkvar	_n @ sp[(-56)+32]
 16764  010D5A  0EE8               	movlw	-24
 16765  010D5C  50E3               	movf	plusw1,w,c
 16766  010D5E  0F01               	addlw	1
 16767  010D60  6E01               	movwf	btemp^0,c
 16768  010D62  0EE8               	movlw	-24
 16769  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 16770  010D6A  6A01               	clrf	btemp^0,c
 16771  010D6C  0EE9               	movlw	-23
 16772  010D6E  50E3               	movf	plusw1,w,c
 16773  010D70  2001               	addwfc	btemp^0,w,c
 16774  010D72  6E01               	movwf	btemp^0,c
 16775  010D74  0EE9               	movlw	-23
 16776  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 16777                           
 16778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16779                           ;stkvar	_w @ sp[(-56)+38]
 16780  010D7C  50E1               	movf	fsr1l,w,c
 16781  010D7E  0FEE               	addlw	-18
 16782  010D80  6ED9               	movwf	fsr2l,c
 16783  010D82  50E2               	movf	fsr1h,w,c
 16784  010D84  6EDA               	movwf	fsr2h,c
 16785  010D86  0EFF               	movlw	255
 16786  010D88  22DA               	addwfc	fsr2h,f,c
 16787  010D8A  06DE               	decf	postinc2,f,c
 16788  010D8C  0E00               	movlw	0
 16789  010D8E  5ADD               	subwfb	postdec2,f,c
 16790  010D90                     l11770:
 16791                           
 16792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16793                           ;stkvar	_u @ sp[(-56)+12]
 16794  010D90  0ED4               	movlw	-44
 16795  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16796  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16797  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16798  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16799                           
 16800                           ;stkvar	_l @ sp[(-60)+20]
 16801  010DAA  0ED8               	movlw	-40
 16802  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16803  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16804  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16805  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16806  010DC4  EC0F  F099         	call	___flmul	;wreg free
 16807  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 16808  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16809  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16810  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 16811                           
 16812                           ;stkvar	_h @ sp[(-60)+24]
 16813  010DE0  0EDC               	movlw	-36
 16814  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16815  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16816  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16817  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16818  010DFA  EC3F  F0D5         	call	___flsub	;wreg free
 16819                           
 16820                           ;stkvar	_h @ sp[(-56)+24]
 16821  010DFE  0EE0               	movlw	-32
 16822  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 16823  010E06  0EE1               	movlw	-31
 16824  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16825  010E0E  0EE2               	movlw	-30
 16826  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16827  010E16  0EE3               	movlw	-29
 16828  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 16829                           
 16830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16831  010E1E  0E00               	movlw	0
 16832  010E20  6EE6               	movwf	postinc1,c
 16833  010E22  0E00               	movlw	0
 16834  010E24  6EE6               	movwf	postinc1,c
 16835  010E26  0E20               	movlw	32
 16836  010E28  6EE6               	movwf	postinc1,c
 16837  010E2A  0E41               	movlw	65
 16838  010E2C  6EE6               	movwf	postinc1,c
 16839                           
 16840                           ;stkvar	_u @ sp[(-60)+12]
 16841  010E2E  0ED0               	movlw	-48
 16842  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16843  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16844  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16845  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16846  010E48  EC9B  F0A4         	call	___fldiv	;wreg free
 16847                           
 16848                           ;stkvar	_u @ sp[(-56)+12]
 16849  010E4C  0ED4               	movlw	-44
 16850  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 16851  010E54  0ED5               	movlw	-43
 16852  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16853  010E5C  0ED6               	movlw	-42
 16854  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16855  010E64  0ED7               	movlw	-41
 16856  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 16857                           
 16858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16859                           ;stkvar	_ne @ sp[(-56)+46]
 16860  010E6C  50E1               	movf	fsr1l,w,c
 16861  010E6E  0FF6               	addlw	-10
 16862  010E70  6ED9               	movwf	fsr2l,c
 16863  010E72  50E2               	movf	fsr1h,w,c
 16864  010E74  6EDA               	movwf	fsr2h,c
 16865  010E76  0EFF               	movlw	255
 16866  010E78  22DA               	addwfc	fsr2h,f,c
 16867  010E7A  06DE               	decf	postinc2,f,c
 16868  010E7C  0E00               	movlw	0
 16869  010E7E  5ADD               	subwfb	postdec2,f,c
 16870                           
 16871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16872                           ;stkvar	_i @ sp[(-56)+36]
 16873  010E80  0EEC               	movlw	-20
 16874  010E82  50E3               	movf	plusw1,w,c
 16875  010E84  0F01               	addlw	1
 16876  010E86  6E01               	movwf	btemp^0,c
 16877  010E88  0EEC               	movlw	-20
 16878  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 16879  010E90  6A01               	clrf	btemp^0,c
 16880  010E92  0EED               	movlw	-19
 16881  010E94  50E3               	movf	plusw1,w,c
 16882  010E96  2001               	addwfc	btemp^0,w,c
 16883  010E98  6E01               	movwf	btemp^0,c
 16884  010E9A  0EED               	movlw	-19
 16885  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 16886  010EA2                     l11778:
 16887                           
 16888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16889                           ;stkvar	_m @ sp[(-56)+48]
 16890                           ;stkvar	_i @ sp[(-56)+36]
 16891  010EA2  50E1               	movf	fsr1l,w,c
 16892  010EA4  0FEC               	addlw	-20
 16893  010EA6  6ED9               	movwf	fsr2l,c
 16894  010EA8  50E2               	movf	fsr1h,w,c
 16895  010EAA  6EDA               	movwf	fsr2h,c
 16896  010EAC  0EFF               	movlw	255
 16897  010EAE  22DA               	addwfc	fsr2h,f,c
 16898  010EB0  0EF8               	movlw	-8
 16899  010EB2  50E3               	movf	plusw1,w,c
 16900  010EB4  5CDE               	subwf	postinc2,w,c
 16901  010EB6  50DE               	movf	postinc2,w,c
 16902  010EB8  0A80               	xorlw	128
 16903  010EBA  6E01               	movwf	btemp^0,c
 16904  010EBC  0EF9               	movlw	-7
 16905  010EBE  50E3               	movf	plusw1,w,c
 16906  010EC0  0A80               	xorlw	128
 16907  010EC2  5801               	subwfb	btemp^0,w,c
 16908  010EC4  B0D8               	btfsc	status,0,c
 16909  010EC6  D00E               	goto	u11050
 16910                           
 16911                           ;stkvar	_n @ sp[(-56)+32]
 16912  010EC8  0EE9               	movlw	-23
 16913  010ECA  BEE3               	btfsc	plusw1,7,c
 16914  010ECC  D633               	goto	l11728
 16915  010ECE  0EE9               	movlw	-23
 16916  010ED0  50E3               	movf	plusw1,w,c
 16917  010ED2  E108               	bnz	u11050
 16918  010ED4  0EE8               	movlw	-24
 16919  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 16920  010EDC  0E4B               	movlw	75
 16921  010EDE  5E01               	subwf	btemp^0,f,c
 16922  010EE0  A0D8               	btfss	status,0,c
 16923  010EE2  D628               	goto	l11728
 16924  010EE4                     u11050:
 16925                           
 16926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16927                           ;stkvar	_pp @ sp[(-56)+50]
 16928  010EE4  0EFA               	movlw	-6
 16929  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 16930  010EEC  0EFB               	movlw	-5
 16931  010EEE  50E3               	movf	plusw1,w,c
 16932  010EF0  1001               	iorwf	btemp^0,w,c
 16933  010EF2  B4D8               	btfsc	status,2,c
 16934  010EF4  A825               	btfss	_flags^0,4,c
 16935  010EF6  D021               	goto	l11790
 16936                           
 16937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16938                           ;stkvar	_n @ sp[(-56)+32]
 16939  010EF8  0EE8               	movlw	-24
 16940  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16941  010F00  0EE9               	movlw	-23
 16942  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16943  010F08  0E94               	movlw	low _dbuf
 16944  010F0A  240B               	addwf	(btemp+10)^0,w,c
 16945  010F0C  6ED9               	movwf	fsr2l,c
 16946  010F0E  0E03               	movlw	high _dbuf
 16947  010F10  200C               	addwfc	(btemp+11)^0,w,c
 16948  010F12  6EDA               	movwf	fsr2h,c
 16949  010F14  0E2E               	movlw	46
 16950  010F16  6EDF               	movwf	indf2,c
 16951                           
 16952                           ;stkvar	_n @ sp[(-56)+32]
 16953  010F18  0EE8               	movlw	-24
 16954  010F1A  50E3               	movf	plusw1,w,c
 16955  010F1C  0F01               	addlw	1
 16956  010F1E  6E01               	movwf	btemp^0,c
 16957  010F20  0EE8               	movlw	-24
 16958  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 16959  010F28  6A01               	clrf	btemp^0,c
 16960  010F2A  0EE9               	movlw	-23
 16961  010F2C  50E3               	movf	plusw1,w,c
 16962  010F2E  2001               	addwfc	btemp^0,w,c
 16963  010F30  6E01               	movwf	btemp^0,c
 16964  010F32  0EE9               	movlw	-23
 16965  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 16966  010F3A                     l11790:
 16967                           
 16968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16969                           ;stkvar	_n @ sp[(-56)+32]
 16970  010F3A  0EE8               	movlw	-24
 16971  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16972  010F42  0EE9               	movlw	-23
 16973  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 16974  010F4A  0E94               	movlw	low _dbuf
 16975  010F4C  240B               	addwf	(btemp+10)^0,w,c
 16976  010F4E  6ED9               	movwf	fsr2l,c
 16977  010F50  0E03               	movlw	high _dbuf
 16978  010F52  200C               	addwfc	(btemp+11)^0,w,c
 16979  010F54  6EDA               	movwf	fsr2h,c
 16980  010F56  0E00               	movlw	0
 16981  010F58  6EDF               	movwf	indf2,c
 16982                           
 16983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16984                           ;stkvar	_nmode @ sp[(-56)+55]
 16985  010F5A  0EFF               	movlw	-1
 16986  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 16987  010F62  0E65               	movlw	101
 16988  010F64  1801               	xorwf	btemp^0,w,c
 16989  010F66  A4D8               	btfss	status,2,c
 16990  010F68  EF16  F081         	goto	l11594
 16991                           
 16992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16993  010F6C  0E4F               	movlw	79
 16994  010F6E  6E0B               	movwf	(btemp+10)^0,c
 16995  010F70  0E00               	movlw	0
 16996  010F72  6E0C               	movwf	(btemp+11)^0,c
 16997                           
 16998                           ;stkvar	_i @ sp[(-56)+36]
 16999  010F74  0EEC               	movlw	-20
 17000  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17001  010F7C  0EED               	movlw	-19
 17002  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17003                           
 17004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17005                           ;stkvar	_i @ sp[(-56)+36]
 17006  010F84  0EEC               	movlw	-20
 17007  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17008  010F8C  0EED               	movlw	-19
 17009  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17010  010F94  0E94               	movlw	low _dbuf
 17011  010F96  240B               	addwf	(btemp+10)^0,w,c
 17012  010F98  6ED9               	movwf	fsr2l,c
 17013  010F9A  0E03               	movlw	high _dbuf
 17014  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17015  010F9E  6EDA               	movwf	fsr2h,c
 17016  010FA0  0E00               	movlw	0
 17017  010FA2  6EDF               	movwf	indf2,c
 17018                           
 17019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17020                           ;stkvar	_sign @ sp[(-56)+42]
 17021  010FA4  0EF2               	movlw	-14
 17022  010FA6  6AE3               	clrf	plusw1,c
 17023  010FA8  0EF3               	movlw	-13
 17024  010FAA  6AE3               	clrf	plusw1,c
 17025                           
 17026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17027                           ;stkvar	_e @ sp[(-56)+34]
 17028  010FAC  0EEB               	movlw	-21
 17029  010FAE  AEE3               	btfss	plusw1,7,c
 17030  010FB0  D012               	goto	l11804
 17031                           
 17032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17033  010FB2  0E01               	movlw	1
 17034  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17035  010FB6  0E00               	movlw	0
 17036  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17037                           
 17038                           ;stkvar	_sign @ sp[(-56)+42]
 17039  010FBA  0EF2               	movlw	-14
 17040  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17041  010FC2  0EF3               	movlw	-13
 17042  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17043                           
 17044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17045                           ;stkvar	_e @ sp[(-56)+34]
 17046                           ;stkvar	_e @ sp[(-56)+34]
 17047  010FCA  0EEA               	movlw	-22
 17048  010FCC  6CE3               	negf	plusw1,c
 17049  010FCE  0EEB               	movlw	-21
 17050  010FD0  1EE3               	comf	plusw1,f,c
 17051  010FD2  B0D8               	btfsc	status,0,c
 17052  010FD4  2AE3               	incf	plusw1,f,c
 17053  010FD6                     l11804:
 17054                           
 17055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17056  010FD6  0E02               	movlw	2
 17057  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17058  010FDA  0E00               	movlw	0
 17059  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17060                           
 17061                           ;stkvar	_p @ sp[(-56)+40]
 17062  010FDE  0EF0               	movlw	-16
 17063  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17064  010FE6  0EF1               	movlw	-15
 17065  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17066                           
 17067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17068  010FEE  D051               	goto	l11816
 17069  010FF0                     l11806:
 17070                           
 17071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17072                           ;stkvar	_i @ sp[(-56)+36]
 17073  010FF0  50E1               	movf	fsr1l,w,c
 17074  010FF2  0FEC               	addlw	-20
 17075  010FF4  6ED9               	movwf	fsr2l,c
 17076  010FF6  50E2               	movf	fsr1h,w,c
 17077  010FF8  6EDA               	movwf	fsr2h,c
 17078  010FFA  0EFF               	movlw	255
 17079  010FFC  22DA               	addwfc	fsr2h,f,c
 17080  010FFE  06DE               	decf	postinc2,f,c
 17081  011000  0E00               	movlw	0
 17082  011002  5ADD               	subwfb	postdec2,f,c
 17083                           
 17084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17085                           ;stkvar	_i @ sp[(-56)+36]
 17086  011004  0EEC               	movlw	-20
 17087  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17088  01100C  0EED               	movlw	-19
 17089  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17090  011014  0E94               	movlw	low _dbuf
 17091  011016  240B               	addwf	(btemp+10)^0,w,c
 17092  011018  6ED9               	movwf	fsr2l,c
 17093  01101A  0E03               	movlw	high _dbuf
 17094  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17095  01101E  6EDA               	movwf	fsr2h,c
 17096  011020  0E0A               	movlw	10
 17097  011022  6EE6               	movwf	postinc1,c
 17098  011024  0E00               	movlw	0
 17099  011026  6EE6               	movwf	postinc1,c
 17100                           
 17101                           ;stkvar	_e @ sp[(-58)+34]
 17102  011028  0EE8               	movlw	-24
 17103  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17104  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17105  011036  ECE1  F0C7         	call	___awmod	;wreg free
 17106  01103A  5001               	movf	btemp^0,w,c
 17107  01103C  0F30               	addlw	48
 17108  01103E  6EDF               	movwf	indf2,c
 17109                           
 17110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17111  011040  0E0A               	movlw	10
 17112  011042  6EE6               	movwf	postinc1,c
 17113  011044  0E00               	movlw	0
 17114  011046  6EE6               	movwf	postinc1,c
 17115                           
 17116                           ;stkvar	_e @ sp[(-58)+34]
 17117  011048  0EE8               	movlw	-24
 17118  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17119  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17120  011056  ECD3  F0C4         	call	___awdiv	;wreg free
 17121                           
 17122                           ;stkvar	_e @ sp[(-56)+34]
 17123  01105A  0EEA               	movlw	-22
 17124  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17125  011062  0EEB               	movlw	-21
 17126  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17127                           
 17128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17129                           ;stkvar	_p @ sp[(-56)+40]
 17130  01106A  50E1               	movf	fsr1l,w,c
 17131  01106C  0FF0               	addlw	-16
 17132  01106E  6ED9               	movwf	fsr2l,c
 17133  011070  50E2               	movf	fsr1h,w,c
 17134  011072  6EDA               	movwf	fsr2h,c
 17135  011074  0EFF               	movlw	255
 17136  011076  22DA               	addwfc	fsr2h,f,c
 17137  011078  06DE               	decf	postinc2,f,c
 17138  01107A  0E00               	movlw	0
 17139  01107C  5ADD               	subwfb	postdec2,f,c
 17140                           
 17141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17142                           ;stkvar	_w @ sp[(-56)+38]
 17143  01107E  50E1               	movf	fsr1l,w,c
 17144  011080  0FEE               	addlw	-18
 17145  011082  6ED9               	movwf	fsr2l,c
 17146  011084  50E2               	movf	fsr1h,w,c
 17147  011086  6EDA               	movwf	fsr2h,c
 17148  011088  0EFF               	movlw	255
 17149  01108A  22DA               	addwfc	fsr2h,f,c
 17150  01108C  06DE               	decf	postinc2,f,c
 17151  01108E  0E00               	movlw	0
 17152  011090  5ADD               	subwfb	postdec2,f,c
 17153  011092                     l11816:
 17154                           
 17155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17156                           ;stkvar	_e @ sp[(-56)+34]
 17157  011092  0EEA               	movlw	-22
 17158  011094  006F FF8C  F001    	movff	plusw1,btemp
 17159  01109A  0EEB               	movlw	-21
 17160  01109C  50E3               	movf	plusw1,w,c
 17161  01109E  1001               	iorwf	btemp^0,w,c
 17162  0110A0  A4D8               	btfss	status,2,c
 17163  0110A2  D7A6               	goto	l11806
 17164                           
 17165                           ;stkvar	_p @ sp[(-56)+40]
 17166  0110A4  0EF1               	movlw	-15
 17167  0110A6  BEE3               	btfsc	plusw1,7,c
 17168  0110A8  D007               	goto	u11110
 17169  0110AA  0EF1               	movlw	-15
 17170  0110AC  50E3               	movf	plusw1,w,c
 17171  0110AE  E1A0               	bnz	l11806
 17172  0110B0  0EF0               	movlw	-16
 17173  0110B2  04E3               	decf	plusw1,w,c
 17174  0110B4  B0D8               	btfsc	status,0,c
 17175  0110B6  D79C               	goto	l11806
 17176  0110B8                     u11110:
 17177                           
 17178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17179                           ;stkvar	_i @ sp[(-56)+36]
 17180  0110B8  50E1               	movf	fsr1l,w,c
 17181  0110BA  0FEC               	addlw	-20
 17182  0110BC  6ED9               	movwf	fsr2l,c
 17183  0110BE  50E2               	movf	fsr1h,w,c
 17184  0110C0  6EDA               	movwf	fsr2h,c
 17185  0110C2  0EFF               	movlw	255
 17186  0110C4  22DA               	addwfc	fsr2h,f,c
 17187  0110C6  06DE               	decf	postinc2,f,c
 17188  0110C8  0E00               	movlw	0
 17189  0110CA  5ADD               	subwfb	postdec2,f,c
 17190                           
 17191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17192                           ;stkvar	_sign @ sp[(-56)+42]
 17193  0110CC  0EF2               	movlw	-14
 17194  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17195  0110D4  0EF3               	movlw	-13
 17196  0110D6  50E3               	movf	plusw1,w,c
 17197  0110D8  1001               	iorwf	btemp^0,w,c
 17198  0110DA  A4D8               	btfss	status,2,c
 17199  0110DC  D002               	goto	l11826
 17200  0110DE  0E2B               	movlw	43
 17201  0110E0  D001               	goto	L16
 17202  0110E2                     l11826:
 17203  0110E2  0E2D               	movlw	45
 17204  0110E4                     L16:
 17205  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17206  0110E6  0E00               	movlw	0
 17207  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17208                           
 17209                           ;stkvar	_efgtoa$5342 @ sp[(-56)+4]
 17210  0110EA  0ECC               	movlw	-52
 17211  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17212  0110F2  0ECD               	movlw	-51
 17213  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17214                           
 17215                           ;stkvar	_efgtoa$5342 @ sp[(-56)+4]
 17216                           ;stkvar	_i @ sp[(-56)+36]
 17217  0110FA  0EEC               	movlw	-20
 17218  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17219  011102  0EED               	movlw	-19
 17220  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17221  01110A  0E94               	movlw	low _dbuf
 17222  01110C  240B               	addwf	(btemp+10)^0,w,c
 17223  01110E  6ED9               	movwf	fsr2l,c
 17224  011110  0E03               	movlw	high _dbuf
 17225  011112  200C               	addwfc	(btemp+11)^0,w,c
 17226  011114  6EDA               	movwf	fsr2h,c
 17227  011116  0ECC               	movlw	-52
 17228  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17229                           
 17230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17231                           ;stkvar	_w @ sp[(-56)+38]
 17232  01111E  50E1               	movf	fsr1l,w,c
 17233  011120  0FEE               	addlw	-18
 17234  011122  6ED9               	movwf	fsr2l,c
 17235  011124  50E2               	movf	fsr1h,w,c
 17236  011126  6EDA               	movwf	fsr2h,c
 17237  011128  0EFF               	movlw	255
 17238  01112A  22DA               	addwfc	fsr2h,f,c
 17239  01112C  06DE               	decf	postinc2,f,c
 17240  01112E  0E00               	movlw	0
 17241  011130  5ADD               	subwfb	postdec2,f,c
 17242                           
 17243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17244                           ;stkvar	_i @ sp[(-56)+36]
 17245  011132  50E1               	movf	fsr1l,w,c
 17246  011134  0FEC               	addlw	-20
 17247  011136  6ED9               	movwf	fsr2l,c
 17248  011138  50E2               	movf	fsr1h,w,c
 17249  01113A  6EDA               	movwf	fsr2h,c
 17250  01113C  0EFF               	movlw	255
 17251  01113E  22DA               	addwfc	fsr2h,f,c
 17252  011140  06DE               	decf	postinc2,f,c
 17253  011142  0E00               	movlw	0
 17254  011144  5ADD               	subwfb	postdec2,f,c
 17255  011146  0EBF               	movlw	191
 17256  011148  6E0B               	movwf	(btemp+10)^0,c
 17257  01114A  0EFF               	movlw	255
 17258  01114C  6E0C               	movwf	(btemp+11)^0,c
 17259                           
 17260                           ;stkvar	_c @ sp[(-56)+-7]
 17261  01114E  0EC1               	movlw	-63
 17262  011150  50E3               	movf	plusw1,w,c
 17263  011152  6E09               	movwf	(btemp+8)^0,c
 17264  011154  6A0A               	clrf	(btemp+9)^0,c
 17265  011156  500B               	movf	(btemp+10)^0,w,c
 17266  011158  2609               	addwf	(btemp+8)^0,f,c
 17267  01115A  500C               	movf	(btemp+11)^0,w,c
 17268  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17269  01115E  500A               	movf	(btemp+9)^0,w,c
 17270  011160  E106               	bnz	u11130
 17271  011162  0E1A               	movlw	26
 17272  011164  5C09               	subwf	(btemp+8)^0,w,c
 17273  011166  B0D8               	btfsc	status,0,c
 17274  011168  D002               	goto	u11130
 17275  01116A  0E01               	movlw	1
 17276  01116C  D001               	goto	u11140
 17277  01116E                     u11130:
 17278  01116E  0E00               	movlw	0
 17279  011170                     u11140:
 17280  011170  6E0B               	movwf	(btemp+10)^0,c
 17281  011172  6A0C               	clrf	(btemp+11)^0,c
 17282                           
 17283                           ;stkvar	_efgtoa$5344 @ sp[(-56)+0]
 17284  011174  0EC8               	movlw	-56
 17285  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17286  01117C  0EC9               	movlw	-55
 17287  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17288                           
 17289                           ;stkvar	_efgtoa$5344 @ sp[(-56)+0]
 17290  011184  0EC8               	movlw	-56
 17291  011186  006F FF8C  F001    	movff	plusw1,btemp
 17292  01118C  0EC9               	movlw	-55
 17293  01118E  50E3               	movf	plusw1,w,c
 17294  011190  1001               	iorwf	btemp^0,w,c
 17295  011192  A4D8               	btfss	status,2,c
 17296  011194  D002               	goto	l11842
 17297  011196  0E65               	movlw	101
 17298  011198  D001               	goto	L17
 17299  01119A                     l11842:
 17300  01119A  0E45               	movlw	69
 17301  01119C                     L17:
 17302  01119C  6E0B               	movwf	(btemp+10)^0,c
 17303  01119E  0E00               	movlw	0
 17304  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17305                           
 17306                           ;stkvar	_efgtoa$5343 @ sp[(-56)+2]
 17307  0111A2  0ECA               	movlw	-54
 17308  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17309  0111AA  0ECB               	movlw	-53
 17310  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17311                           
 17312                           ;stkvar	_efgtoa$5343 @ sp[(-56)+2]
 17313                           ;stkvar	_i @ sp[(-56)+36]
 17314  0111B2  0EEC               	movlw	-20
 17315  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17316  0111BA  0EED               	movlw	-19
 17317  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17318  0111C2  0E94               	movlw	low _dbuf
 17319  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17320  0111C6  6ED9               	movwf	fsr2l,c
 17321  0111C8  0E03               	movlw	high _dbuf
 17322  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17323  0111CC  6EDA               	movwf	fsr2h,c
 17324  0111CE  0ECA               	movlw	-54
 17325  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17326                           
 17327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17328                           ;stkvar	_w @ sp[(-56)+38]
 17329  0111D6  50E1               	movf	fsr1l,w,c
 17330  0111D8  0FEE               	addlw	-18
 17331  0111DA  6ED9               	movwf	fsr2l,c
 17332  0111DC  50E2               	movf	fsr1h,w,c
 17333  0111DE  6EDA               	movwf	fsr2h,c
 17334  0111E0  0EFF               	movlw	255
 17335  0111E2  22DA               	addwfc	fsr2h,f,c
 17336  0111E4  06DE               	decf	postinc2,f,c
 17337  0111E6  0E00               	movlw	0
 17338  0111E8  5ADD               	subwfb	postdec2,f,c
 17339                           
 17340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17341                           ;stkvar	_i @ sp[(-56)+36]
 17342  0111EA  0EEC               	movlw	-20
 17343  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17344  0111F2  0EED               	movlw	-19
 17345  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17346  0111FA  0E94               	movlw	low _dbuf
 17347  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17348  0111FE  6E09               	movwf	(btemp+8)^0,c
 17349  011200  0E03               	movlw	high _dbuf
 17350  011202  200C               	addwfc	(btemp+11)^0,w,c
 17351  011204  6E0A               	movwf	(btemp+9)^0,c
 17352  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17353  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17354                           
 17355                           ;stkvar	_n @ sp[(-58)+32]
 17356  011212  0E94               	movlw	low _dbuf
 17357  011214  6E0B               	movwf	(btemp+10)^0,c
 17358  011216  0E03               	movlw	high _dbuf
 17359  011218  6E0C               	movwf	(btemp+11)^0,c
 17360  01121A  0EE6               	movlw	-26
 17361  01121C  50E3               	movf	plusw1,w,c
 17362  01121E  260B               	addwf	(btemp+10)^0,f,c
 17363  011220  0EE7               	movlw	-25
 17364  011222  50E3               	movf	plusw1,w,c
 17365  011224  220C               	addwfc	(btemp+11)^0,f,c
 17366  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17367  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17368  011232  EC70  F0CC         	call	_strcpy	;wreg free
 17369  011236  EF16  F081         	goto	l11594
 17370  01123A                     l2156:
 17371                           
 17372                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17373  01123A  0EC1               	movlw	193
 17374  01123C  26E1               	addwf	fsr1l,f,c
 17375  01123E  0EFF               	movlw	255
 17376  011240  22E2               	addwfc	fsr1h,f,c
 17377  011242  0012               	return		;funcret
 17378  011244                     __end_of_efgtoa:
 17379                           	opt callstack 0
 17380                           
 17381 ;; *************** function _tolower *****************
 17382 ;; Defined at:
 17383 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;  c               2  [STACK] int 
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;		None
 17388 ;; Return value:  Size  Location     Type
 17389 ;;                  2  [STACK] int 
 17390 ;; Registers used:
 17391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17392 ;; Tracked objects:
 17393 ;;		On entry : 0/0
 17394 ;;		On exit  : 0/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17401 ;;Total ram usage:        0 bytes
 17402 ;; Hardware stack levels used:    1
 17403 ;; Hardware stack levels required when called:   16
 17404 ;; This function calls:
 17405 ;;		_isupper
 17406 ;; This function is called by:
 17407 ;;		_efgtoa
 17408 ;;		_vfpfcnvrt
 17409 ;; This function uses a reentrant model
 17410 ;;
 17411                           
 17412                           	psect	text56
 17413  01A324                     __ptext56:
 17414                           	opt callstack 0
 17415  01A324                     _tolower:
 17416                           	opt callstack 0
 17417                           
 17418                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17419  01A324  52E6               	movf	postinc1,f,c
 17420  01A326  52E6               	movf	postinc1,f,c
 17421                           
 17422                           ;stkvar	_c @ sp[(-2)+-2]
 17423                           
 17424                           ;incstack = 0
 17425 ;; hardware stack exceeded
 17426  01A328  0EFC               	movlw	-4
 17427  01A32A  50E3               	movf	plusw1,w,c
 17428  01A32C  0FBF               	addlw	191
 17429  01A32E  6E0B               	movwf	(btemp+10)^0,c
 17430  01A330  0EFD               	movlw	-3
 17431  01A332  006F FF8C  F00C    	movff	plusw1,btemp+11
 17432  01A338  0EFF               	movlw	255
 17433  01A33A  220C               	addwfc	(btemp+11)^0,f,c
 17434  01A33C  500C               	movf	(btemp+11)^0,w,c
 17435  01A33E  E106               	bnz	u5830
 17436  01A340  0E1A               	movlw	26
 17437  01A342  5C0B               	subwf	(btemp+10)^0,w,c
 17438  01A344  B0D8               	btfsc	status,0,c
 17439  01A346  D002               	goto	u5830
 17440  01A348  0E01               	movlw	1
 17441  01A34A  D001               	goto	u5840
 17442  01A34C                     u5830:
 17443  01A34C  0E00               	movlw	0
 17444  01A34E                     u5840:
 17445  01A34E  6E0B               	movwf	(btemp+10)^0,c
 17446  01A350  6A0C               	clrf	(btemp+11)^0,c
 17447                           
 17448                           ;stkvar	_tolower$6163 @ sp[(-2)+0]
 17449  01A352  0EFE               	movlw	-2
 17450  01A354  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17451  01A35A  0EFF               	movlw	-1
 17452  01A35C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17453                           
 17454                           ;stkvar	_tolower$6163 @ sp[(-2)+0]
 17455  01A362  0EFE               	movlw	-2
 17456  01A364  006F FF8C  F001    	movff	plusw1,btemp
 17457  01A36A  0EFF               	movlw	-1
 17458  01A36C  50E3               	movf	plusw1,w,c
 17459  01A36E  1001               	iorwf	btemp^0,w,c
 17460  01A370  B4D8               	btfsc	status,2,c
 17461  01A372  D00D               	goto	l7776
 17462                           
 17463                           ;stkvar	_c @ sp[(-2)+-2]
 17464  01A374  0EFC               	movlw	-4
 17465  01A376  006F FF8C  F001    	movff	plusw1,btemp
 17466  01A37C  0EFD               	movlw	-3
 17467  01A37E  006F FF8C  F002    	movff	plusw1,btemp+1
 17468  01A384  0E20               	movlw	32
 17469  01A386  1201               	iorwf	btemp^0,f,c
 17470  01A388  0E00               	movlw	0
 17471  01A38A  1202               	iorwf	(btemp+1)^0,f,c
 17472  01A38C  D008               	goto	l3428
 17473  01A38E                     l7776:
 17474                           
 17475                           ;stkvar	_c @ sp[(-2)+-2]
 17476  01A38E  0EFC               	movlw	-4
 17477  01A390  006F FF8C  F001    	movff	plusw1,btemp
 17478  01A396  0EFD               	movlw	-3
 17479  01A398  006F FF8C  F002    	movff	plusw1,btemp+1
 17480  01A39E                     l3428:
 17481                           
 17482                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17483  01A39E  52E5               	movf	postdec1,f,c
 17484  01A3A0  52E5               	movf	postdec1,f,c
 17485  01A3A2  52E5               	movf	postdec1,f,c
 17486  01A3A4  52E5               	movf	postdec1,f,c
 17487  01A3A6  0012               	return		;funcret
 17488  01A3A8                     __end_of_tolower:
 17489                           	opt callstack 0
 17490                           
 17491 ;; *************** function _isupper *****************
 17492 ;; Defined at:
 17493 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17494 ;; Parameters:    Size  Location     Type
 17495 ;;  c               2  [STACK] int 
 17496 ;; Auto vars:     Size  Location     Type
 17497 ;;		None
 17498 ;; Return value:  Size  Location     Type
 17499 ;;                  2  [STACK] int 
 17500 ;; Registers used:
 17501 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17502 ;; Tracked objects:
 17503 ;;		On entry : 0/0
 17504 ;;		On exit  : 0/0
 17505 ;;		Unchanged: 0/0
 17506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17511 ;;Total ram usage:        0 bytes
 17512 ;; Hardware stack levels used:    1
 17513 ;; Hardware stack levels required when called:   15
 17514 ;; This function calls:
 17515 ;;		Nothing
 17516 ;; This function is called by:
 17517 ;;		_efgtoa
 17518 ;;		_xtoa
 17519 ;;		_vfpfcnvrt
 17520 ;;		_tolower
 17521 ;; This function uses a reentrant model
 17522 ;;
 17523                           
 17524                           	psect	text57
 17525  01AF6A                     __ptext57:
 17526                           	opt callstack 0
 17527  01AF6A                     _isupper:
 17528                           	opt callstack 0
 17529                           
 17530                           ;stkvar	_c @ sp[(0)+-2]
 17531                           
 17532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17533                           ;incstack = 0
 17534 ;; hardware stack exceeded
 17535  01AF6A  0EFE               	movlw	-2
 17536  01AF6C  50E3               	movf	plusw1,w,c
 17537  01AF6E  0FBF               	addlw	191
 17538  01AF70  6E0B               	movwf	(btemp+10)^0,c
 17539  01AF72  0EFF               	movlw	-1
 17540  01AF74  006F FF8C  F00C    	movff	plusw1,btemp+11
 17541  01AF7A  0EFF               	movlw	255
 17542  01AF7C  220C               	addwfc	(btemp+11)^0,f,c
 17543  01AF7E  500C               	movf	(btemp+11)^0,w,c
 17544  01AF80  E106               	bnz	u5230
 17545  01AF82  0E1A               	movlw	26
 17546  01AF84  5C0B               	subwf	(btemp+10)^0,w,c
 17547  01AF86  B0D8               	btfsc	status,0,c
 17548  01AF88  D002               	goto	u5230
 17549  01AF8A  0E01               	movlw	1
 17550  01AF8C  D001               	goto	u5240
 17551  01AF8E                     u5230:
 17552  01AF8E  0E00               	movlw	0
 17553  01AF90                     u5240:
 17554  01AF90  6E01               	movwf	btemp^0,c
 17555  01AF92  6A02               	clrf	(btemp+1)^0,c
 17556                           
 17557                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17558  01AF94  52E5               	movf	postdec1,f,c
 17559  01AF96  52E5               	movf	postdec1,f,c
 17560  01AF98  0012               	return		;funcret
 17561  01AF9A                     __end_of_isupper:
 17562                           	opt callstack 0
 17563                           
 17564 ;; *************** function _strcpy *****************
 17565 ;; Defined at:
 17566 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17567 ;; Parameters:    Size  Location     Type
 17568 ;;  dest            2  [STACK] PTR unsigned char 
 17569 ;;		 -> dbuf(80), 
 17570 ;;  src             2  [STACK] PTR const unsigned char 
 17571 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17572 ;;		 -> dbuf(80), 
 17573 ;; Auto vars:     Size  Location     Type
 17574 ;;  d               2  [STACK] PTR unsigned char 
 17575 ;;		 -> dbuf(80), 
 17576 ;;  s               2  [STACK] PTR const unsigned char 
 17577 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17578 ;;		 -> dbuf(80), 
 17579 ;; Return value:  Size  Location     Type
 17580 ;;                  2  [STACK] PTR unsigned char 
 17581 ;; Registers used:
 17582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17583 ;; Tracked objects:
 17584 ;;		On entry : 0/0
 17585 ;;		On exit  : 0/0
 17586 ;;		Unchanged: 0/0
 17587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17592 ;;Total ram usage:        0 bytes
 17593 ;; Hardware stack levels used:    1
 17594 ;; Hardware stack levels required when called:   15
 17595 ;; This function calls:
 17596 ;;		Nothing
 17597 ;; This function is called by:
 17598 ;;		_efgtoa
 17599 ;; This function uses a reentrant model
 17600 ;;
 17601                           
 17602                           	psect	text58
 17603  0198E0                     __ptext58:
 17604                           	opt callstack 0
 17605  0198E0                     _strcpy:
 17606                           	opt callstack 0
 17607                           
 17608                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17609  0198E0  52E6               	movf	postinc1,f,c
 17610  0198E2  52E6               	movf	postinc1,f,c
 17611  0198E4  52E6               	movf	postinc1,f,c
 17612  0198E6  52E6               	movf	postinc1,f,c
 17613                           
 17614                           ;stkvar	_src @ sp[(-4)+-4]
 17615                           
 17616                           ;incstack = 0
 17617 ;; hardware stack exceeded
 17618  0198E8  0EF8               	movlw	-8
 17619  0198EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17620  0198F0  0EF9               	movlw	-7
 17621  0198F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17622                           
 17623                           ;stkvar	_s @ sp[(-4)+2]
 17624  0198F8  0EFF               	movlw	-1
 17625  0198FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17626  019900  0EFE               	movlw	-2
 17627  019902  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17628                           
 17629                           ;stkvar	_dest @ sp[(-4)+-2]
 17630  019908  0EFA               	movlw	-6
 17631  01990A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17632  019910  0EFB               	movlw	-5
 17633  019912  006F FF8C  F00C    	movff	plusw1,btemp+11
 17634                           
 17635                           ;stkvar	_d @ sp[(-4)+0]
 17636  019918  0EFD               	movlw	-3
 17637  01991A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17638  019920  0EFC               	movlw	-4
 17639  019922  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17640  019928                     l11426:
 17641                           
 17642                           ;stkvar	_s @ sp[(-4)+2]
 17643  019928  50E1               	movf	fsr1l,w,c
 17644  01992A  0FFE               	addlw	-2
 17645  01992C  6ED9               	movwf	fsr2l,c
 17646  01992E  50E2               	movf	fsr1h,w,c
 17647  019930  6EDA               	movwf	fsr2h,c
 17648  019932  0EFF               	movlw	255
 17649  019934  22DA               	addwfc	fsr2h,f,c
 17650  019936  006F FF7C  F00B    	movff	indf2,btemp+10
 17651  01993C  0E01               	movlw	1
 17652  01993E  26DE               	addwf	postinc2,f,c
 17653  019940  006F FF7C  F00C    	movff	indf2,btemp+11
 17654  019946  0E00               	movlw	0
 17655  019948  22DD               	addwfc	postdec2,f,c
 17656  01994A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17657  019950  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17658  019956  0E00               	movlw	low (__mediumconst shr (0+16))
 17659  019958  6EF8               	movwf	tblptru,c
 17660                           
 17661                           ;stkvar	_d @ sp[(-4)+0]
 17662  01995A  50E1               	movf	fsr1l,w,c
 17663  01995C  0FFC               	addlw	-4
 17664  01995E  6ED9               	movwf	fsr2l,c
 17665  019960  50E2               	movf	fsr1h,w,c
 17666  019962  6EDA               	movwf	fsr2h,c
 17667  019964  0EFF               	movlw	255
 17668  019966  22DA               	addwfc	fsr2h,f,c
 17669  019968  006F FF7C  F00B    	movff	indf2,btemp+10
 17670  01996E  0E01               	movlw	1
 17671  019970  26DE               	addwf	postinc2,f,c
 17672  019972  006F FF7C  F00C    	movff	indf2,btemp+11
 17673  019978  0E00               	movlw	0
 17674  01997A  22DD               	addwfc	postdec2,f,c
 17675  01997C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17676  019982  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17677  019988  0E1F               	movlw	(high __ramtop+-1)
 17678  01998A  64F7               	cpfsgt	tblptrh,c
 17679  01998C  D003               	bra	u10397
 17680  01998E  0008               	tblrd		*
 17681  019990  50F5               	movf	tablat,w,c
 17682  019992  D007               	bra	u10390
 17683  019994                     u10397:
 17684  019994  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17685  01999A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17686  0199A0  50EF               	movf	indf0,w,c
 17687  0199A2                     u10390:
 17688  0199A2  6EDF               	movwf	indf2,c
 17689  0199A4  50DF               	movf	indf2,w,c
 17690  0199A6  A4D8               	btfss	status,2,c
 17691  0199A8  D7BF               	goto	l11426
 17692                           
 17693                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17694  0199AA  0EF8               	movlw	248
 17695  0199AC  26E1               	addwf	fsr1l,f,c
 17696  0199AE  0EFF               	movlw	255
 17697  0199B0  22E2               	addwfc	fsr1h,f,c
 17698  0199B2  0012               	return		;funcret
 17699  0199B4                     __end_of_strcpy:
 17700                           	opt callstack 0
 17701                           
 17702 ;; *************** function _floorf *****************
 17703 ;; Defined at:
 17704 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17705 ;; Parameters:    Size  Location     Type
 17706 ;;  x               4  [STACK] float 
 17707 ;; Auto vars:     Size  Location     Type
 17708 ;;  u               4  [STACK] struct .
 17709 ;;  m               4  [STACK] unsigned long 
 17710 ;;  e               2  [STACK] int 
 17711 ;; Return value:  Size  Location     Type
 17712 ;;                  4  [STACK] float 
 17713 ;; Registers used:
 17714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17715 ;; Tracked objects:
 17716 ;;		On entry : 0/0
 17717 ;;		On exit  : 0/0
 17718 ;;		Unchanged: 0/0
 17719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17724 ;;Total ram usage:        0 bytes
 17725 ;; Hardware stack levels used:    1
 17726 ;; Hardware stack levels required when called:   15
 17727 ;; This function calls:
 17728 ;;		Nothing
 17729 ;; This function is called by:
 17730 ;;		_efgtoa
 17731 ;; This function uses a reentrant model
 17732 ;;
 17733                           
 17734                           	psect	text59
 17735  015F38                     __ptext59:
 17736                           	opt callstack 0
 17737  015F38                     _floorf:
 17738                           	opt callstack 0
 17739                           
 17740                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17741  015F38  0E0A               	movlw	10
 17742  015F3A  26E1               	addwf	fsr1l,f,c
 17743  015F3C  0E00               	movlw	0
 17744  015F3E  22E2               	addwfc	fsr1h,f,c
 17745                           
 17746                           ;incstack = 0
 17747 ;; hardware stack exceeded
 17748  015F40  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 17749  015F46  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 17750  015F4C  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 17751  015F52  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 17752                           
 17753                           ;stkvar	_u @ sp[(-10)+0]
 17754  015F58  0EF6               	movlw	-10
 17755  015F5A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17756  015F60  0EF7               	movlw	-9
 17757  015F62  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17758  015F68  0EF8               	movlw	-8
 17759  015F6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17760  015F70  0EF9               	movlw	-7
 17761  015F72  0060  F033  FFE3   	movff	btemp+11,plusw1
 17762                           
 17763                           ;stkvar	_x @ sp[(-10)+-4]
 17764  015F78  0EF2               	movlw	-14
 17765  015F7A  006F FF8C  F009    	movff	plusw1,btemp+8
 17766  015F80  0EF3               	movlw	-13
 17767  015F82  006F FF8C  F00A    	movff	plusw1,btemp+9
 17768  015F88  0EF4               	movlw	-12
 17769  015F8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17770  015F90  0EF5               	movlw	-11
 17771  015F92  006F FF8C  F00C    	movff	plusw1,btemp+11
 17772                           
 17773                           ;stkvar	_u @ sp[(-10)+0]
 17774  015F98  0EF6               	movlw	-10
 17775  015F9A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17776  015FA0  0EF7               	movlw	-9
 17777  015FA2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17778  015FA8  0EF8               	movlw	-8
 17779  015FAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17780  015FB0  0EF9               	movlw	-7
 17781  015FB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17782  015FB8  0E81               	movlw	129
 17783  015FBA  6E0B               	movwf	(btemp+10)^0,c
 17784  015FBC  0EFF               	movlw	255
 17785  015FBE  6E0C               	movwf	(btemp+11)^0,c
 17786                           
 17787                           ;stkvar	_u @ sp[(-10)+0]
 17788  015FC0  0EF6               	movlw	-10
 17789  015FC2  006F FF8C  F005    	movff	plusw1,btemp+4
 17790  015FC8  0EF7               	movlw	-9
 17791  015FCA  006F FF8C  F006    	movff	plusw1,btemp+5
 17792  015FD0  0EF8               	movlw	-8
 17793  015FD2  006F FF8C  F007    	movff	plusw1,btemp+6
 17794  015FD8  0EF9               	movlw	-7
 17795  015FDA  006F FF8C  F008    	movff	plusw1,btemp+7
 17796  015FE0  0E18               	movlw	24
 17797  015FE2  D005               	goto	u5860
 17798  015FE4                     u5865:
 17799  015FE4  90D8               	bcf	status,0,c
 17800  015FE6  3208               	rrcf	(btemp+7)^0,f,c
 17801  015FE8  3207               	rrcf	(btemp+6)^0,f,c
 17802  015FEA  3206               	rrcf	(btemp+5)^0,f,c
 17803  015FEC  3205               	rrcf	(btemp+4)^0,f,c
 17804  015FEE                     u5860:
 17805  015FEE  2EE8               	decfsz	wreg,f,c
 17806  015FF0  D7F9               	goto	u5865
 17807  015FF2  0060  F014  F009   	movff	btemp+4,btemp+8
 17808  015FF8  0060  F018  F00A   	movff	btemp+5,btemp+9
 17809  015FFE  0EFF               	movlw	255
 17810  016000  1609               	andwf	(btemp+8)^0,f,c
 17811  016002  0E00               	movlw	0
 17812  016004  160A               	andwf	(btemp+9)^0,f,c
 17813  016006  500B               	movf	(btemp+10)^0,w,c
 17814  016008  2609               	addwf	(btemp+8)^0,f,c
 17815  01600A  500C               	movf	(btemp+11)^0,w,c
 17816  01600C  220A               	addwfc	(btemp+9)^0,f,c
 17817                           
 17818                           ;stkvar	_e @ sp[(-10)+8]
 17819  01600E  0EFE               	movlw	-2
 17820  016010  0060  F027  FFE3   	movff	btemp+8,plusw1
 17821  016016  0EFF               	movlw	-1
 17822  016018  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17823                           
 17824                           ;stkvar	_e @ sp[(-10)+8]
 17825  01601E  0EFF               	movlw	-1
 17826  016020  BEE3               	btfsc	plusw1,7,c
 17827  016022  D019               	goto	l7790
 17828  016024  0EFF               	movlw	-1
 17829  016026  50E3               	movf	plusw1,w,c
 17830  016028  E108               	bnz	u5870
 17831  01602A  0EFE               	movlw	-2
 17832  01602C  006F FF8C  F001    	movff	plusw1,btemp
 17833  016032  0E17               	movlw	23
 17834  016034  5E01               	subwf	btemp^0,f,c
 17835  016036  A0D8               	btfss	status,0,c
 17836  016038  D00E               	goto	l7790
 17837  01603A                     u5870:
 17838                           
 17839                           ;stkvar	_x @ sp[(-10)+-4]
 17840  01603A  0EF2               	movlw	-14
 17841  01603C  006F FF8C  F001    	movff	plusw1,btemp
 17842  016042  0EF3               	movlw	-13
 17843  016044  006F FF8C  F002    	movff	plusw1,btemp+1
 17844  01604A  0EF4               	movlw	-12
 17845  01604C  006F FF8C  F003    	movff	plusw1,btemp+2
 17846  016052  0EF5               	movlw	-11
 17847  016054  D11F               	goto	L18
 17848  016056                     l7790:
 17849                           
 17850                           ;stkvar	_e @ sp[(-10)+8]
 17851  016056  0EFF               	movlw	-1
 17852  016058  BEE3               	btfsc	plusw1,7,c
 17853  01605A  D0B4               	goto	l7806
 17854                           
 17855                           ;stkvar	_e @ sp[(-10)+8]
 17856  01605C  0EFE               	movlw	-2
 17857  01605E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17858  016064  0EFF               	movlw	255
 17859  016066  6E05               	movwf	(btemp+4)^0,c
 17860  016068  0EFF               	movlw	255
 17861  01606A  6E06               	movwf	(btemp+5)^0,c
 17862  01606C  0E7F               	movlw	127
 17863  01606E  6E07               	movwf	(btemp+6)^0,c
 17864  016070  0E00               	movlw	0
 17865  016072  6E08               	movwf	(btemp+7)^0,c
 17866  016074                     u5895:
 17867  016074  660C               	tstfsz	(btemp+11)^0,c
 17868  016076  D001               	goto	u5896
 17869  016078  D007               	goto	u5897
 17870  01607A                     u5896:
 17871  01607A  3408               	rlcf	(btemp+7)^0,w,c
 17872  01607C  3208               	rrcf	(btemp+7)^0,f,c
 17873  01607E  3207               	rrcf	(btemp+6)^0,f,c
 17874  016080  3206               	rrcf	(btemp+5)^0,f,c
 17875  016082  3205               	rrcf	(btemp+4)^0,f,c
 17876  016084  2E0C               	decfsz	(btemp+11)^0,f,c
 17877  016086  D7F6               	goto	u5895
 17878  016088                     u5897:
 17879                           
 17880                           ;stkvar	_m @ sp[(-10)+4]
 17881  016088  0EFA               	movlw	-6
 17882  01608A  0060  F017  FFE3   	movff	btemp+4,plusw1
 17883  016090  0EFB               	movlw	-5
 17884  016092  0060  F01B  FFE3   	movff	btemp+5,plusw1
 17885  016098  0EFC               	movlw	-4
 17886  01609A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17887  0160A0  0EFD               	movlw	-3
 17888  0160A2  0060  F023  FFE3   	movff	btemp+7,plusw1
 17889                           
 17890                           ;stkvar	_m @ sp[(-10)+4]
 17891                           ;stkvar	_u @ sp[(-10)+0]
 17892  0160A8  0EF6               	movlw	-10
 17893  0160AA  006F FF8C  F009    	movff	plusw1,btemp+8
 17894  0160B0  0EF7               	movlw	-9
 17895  0160B2  006F FF8C  F00A    	movff	plusw1,btemp+9
 17896  0160B8  0EF8               	movlw	-8
 17897  0160BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17898  0160C0  0EF9               	movlw	-7
 17899  0160C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17900  0160C8  0EFA               	movlw	-6
 17901  0160CA  50E3               	movf	plusw1,w,c
 17902  0160CC  1609               	andwf	(btemp+8)^0,f,c
 17903  0160CE  0EFB               	movlw	-5
 17904  0160D0  50E3               	movf	plusw1,w,c
 17905  0160D2  160A               	andwf	(btemp+9)^0,f,c
 17906  0160D4  0EFC               	movlw	-4
 17907  0160D6  50E3               	movf	plusw1,w,c
 17908  0160D8  160B               	andwf	(btemp+10)^0,f,c
 17909  0160DA  0EFD               	movlw	-3
 17910  0160DC  50E3               	movf	plusw1,w,c
 17911  0160DE  160C               	andwf	(btemp+11)^0,f,c
 17912  0160E0  5009               	movf	(btemp+8)^0,w,c
 17913  0160E2  100A               	iorwf	(btemp+9)^0,w,c
 17914  0160E4  100B               	iorwf	(btemp+10)^0,w,c
 17915  0160E6  100C               	iorwf	(btemp+11)^0,w,c
 17916  0160E8  B4D8               	btfsc	status,2,c
 17917  0160EA  D7A7               	goto	u5870
 17918                           
 17919                           ;stkvar	_u @ sp[(-10)+0]
 17920  0160EC  0EF6               	movlw	-10
 17921  0160EE  006F FF8C  F009    	movff	plusw1,btemp+8
 17922  0160F4  0EF7               	movlw	-9
 17923  0160F6  006F FF8C  F00A    	movff	plusw1,btemp+9
 17924  0160FC  0EF8               	movlw	-8
 17925  0160FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17926  016104  0EF9               	movlw	-7
 17927  016106  006F FF8C  F00C    	movff	plusw1,btemp+11
 17928  01610C  0E20               	movlw	32
 17929  01610E  D005               	goto	u5910
 17930  016110                     u5915:
 17931  016110  90D8               	bcf	status,0,c
 17932  016112  320C               	rrcf	(btemp+11)^0,f,c
 17933  016114  320B               	rrcf	(btemp+10)^0,f,c
 17934  016116  320A               	rrcf	(btemp+9)^0,f,c
 17935  016118  3209               	rrcf	(btemp+8)^0,f,c
 17936  01611A                     u5910:
 17937  01611A  2EE8               	decfsz	wreg,f,c
 17938  01611C  D7F9               	goto	u5915
 17939  01611E  5009               	movf	(btemp+8)^0,w,c
 17940  016120  B4D8               	btfsc	status,2,c
 17941  016122  D028               	goto	l7804
 17942                           
 17943                           ;stkvar	_m @ sp[(-10)+4]
 17944                           ;stkvar	_u @ sp[(-10)+0]
 17945  016124  0EF6               	movlw	-10
 17946  016126  50E3               	movf	plusw1,w,c
 17947  016128  6E01               	movwf	btemp^0,c
 17948  01612A  0EFA               	movlw	-6
 17949  01612C  50E3               	movf	plusw1,w,c
 17950  01612E  2601               	addwf	btemp^0,f,c
 17951  016130  0EF6               	movlw	-10
 17952  016132  0060  F007  FFE3   	movff	btemp,plusw1
 17953  016138  0EF7               	movlw	-9
 17954  01613A  50E3               	movf	plusw1,w,c
 17955  01613C  6E01               	movwf	btemp^0,c
 17956  01613E  0EFB               	movlw	-5
 17957  016140  50E3               	movf	plusw1,w,c
 17958  016142  2201               	addwfc	btemp^0,f,c
 17959  016144  0EF7               	movlw	-9
 17960  016146  0060  F007  FFE3   	movff	btemp,plusw1
 17961  01614C  0EF8               	movlw	-8
 17962  01614E  50E3               	movf	plusw1,w,c
 17963  016150  6E01               	movwf	btemp^0,c
 17964  016152  0EFC               	movlw	-4
 17965  016154  50E3               	movf	plusw1,w,c
 17966  016156  2201               	addwfc	btemp^0,f,c
 17967  016158  0EF8               	movlw	-8
 17968  01615A  0060  F007  FFE3   	movff	btemp,plusw1
 17969  016160  0EF9               	movlw	-7
 17970  016162  50E3               	movf	plusw1,w,c
 17971  016164  6E01               	movwf	btemp^0,c
 17972  016166  0EFD               	movlw	-3
 17973  016168  50E3               	movf	plusw1,w,c
 17974  01616A  2201               	addwfc	btemp^0,f,c
 17975  01616C  0EF9               	movlw	-7
 17976  01616E  0060  F007  FFE3   	movff	btemp,plusw1
 17977  016174                     l7804:
 17978                           
 17979                           ;stkvar	_m @ sp[(-10)+4]
 17980  016174  0EFA               	movlw	-6
 17981  016176  006F FF8C  F009    	movff	plusw1,btemp+8
 17982  01617C  0EFB               	movlw	-5
 17983  01617E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17984  016184  0EFC               	movlw	-4
 17985  016186  006F FF8C  F00B    	movff	plusw1,btemp+10
 17986  01618C  0EFD               	movlw	-3
 17987  01618E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17988  016194  1C09               	comf	(btemp+8)^0,w,c
 17989  016196  6E05               	movwf	(btemp+4)^0,c
 17990  016198  1C0A               	comf	(btemp+9)^0,w,c
 17991  01619A  6E06               	movwf	(btemp+5)^0,c
 17992  01619C  1C0B               	comf	(btemp+10)^0,w,c
 17993  01619E  6E07               	movwf	(btemp+6)^0,c
 17994  0161A0  1C0C               	comf	(btemp+11)^0,w,c
 17995  0161A2  6E08               	movwf	(btemp+7)^0,c
 17996                           
 17997                           ;stkvar	_u @ sp[(-10)+0]
 17998  0161A4  50E1               	movf	fsr1l,w,c
 17999  0161A6  0FF6               	addlw	-10
 18000  0161A8  6ED9               	movwf	fsr2l,c
 18001  0161AA  50E2               	movf	fsr1h,w,c
 18002  0161AC  6EDA               	movwf	fsr2h,c
 18003  0161AE  0EFF               	movlw	255
 18004  0161B0  22DA               	addwfc	fsr2h,f,c
 18005  0161B2  5005               	movf	(btemp+4)^0,w,c
 18006  0161B4  16DE               	andwf	postinc2,f,c
 18007  0161B6  5006               	movf	(btemp+5)^0,w,c
 18008  0161B8  16DE               	andwf	postinc2,f,c
 18009  0161BA  5007               	movf	(btemp+6)^0,w,c
 18010  0161BC  16DE               	andwf	postinc2,f,c
 18011  0161BE  5008               	movf	(btemp+7)^0,w,c
 18012  0161C0  16DE               	andwf	postinc2,f,c
 18013  0161C2  D05B               	goto	l7814
 18014  0161C4                     l7806:
 18015                           
 18016                           ;stkvar	_u @ sp[(-10)+0]
 18017  0161C4  0EF6               	movlw	-10
 18018  0161C6  006F FF8C  F009    	movff	plusw1,btemp+8
 18019  0161CC  0EF7               	movlw	-9
 18020  0161CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18021  0161D4  0EF8               	movlw	-8
 18022  0161D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18023  0161DC  0EF9               	movlw	-7
 18024  0161DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18025  0161E4  0E20               	movlw	32
 18026  0161E6  D005               	goto	u5930
 18027  0161E8                     u5935:
 18028  0161E8  90D8               	bcf	status,0,c
 18029  0161EA  320C               	rrcf	(btemp+11)^0,f,c
 18030  0161EC  320B               	rrcf	(btemp+10)^0,f,c
 18031  0161EE  320A               	rrcf	(btemp+9)^0,f,c
 18032  0161F0  3209               	rrcf	(btemp+8)^0,f,c
 18033  0161F2                     u5930:
 18034  0161F2  2EE8               	decfsz	wreg,f,c
 18035  0161F4  D7F9               	goto	u5935
 18036  0161F6  6609               	tstfsz	(btemp+8)^0,c
 18037  0161F8  D009               	goto	l7810
 18038                           
 18039                           ;stkvar	_u @ sp[(-10)+0]
 18040  0161FA  0EF6               	movlw	-10
 18041  0161FC  6AE3               	clrf	plusw1,c
 18042  0161FE  0EF7               	movlw	-9
 18043  016200  6AE3               	clrf	plusw1,c
 18044  016202  0EF8               	movlw	-8
 18045  016204  6AE3               	clrf	plusw1,c
 18046  016206  0EF9               	movlw	-7
 18047  016208  6AE3               	clrf	plusw1,c
 18048  01620A  D037               	goto	l7814
 18049  01620C                     l7810:
 18050                           
 18051                           ;stkvar	_u @ sp[(-10)+0]
 18052  01620C  0EF6               	movlw	-10
 18053  01620E  006F FF8C  F009    	movff	plusw1,btemp+8
 18054  016214  0EF7               	movlw	-9
 18055  016216  006F FF8C  F00A    	movff	plusw1,btemp+9
 18056  01621C  0EF8               	movlw	-8
 18057  01621E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18058  016224  0EF9               	movlw	-7
 18059  016226  006F FF8C  F00C    	movff	plusw1,btemp+11
 18060  01622C  90D8               	bcf	status,0,c
 18061  01622E  3409               	rlcf	(btemp+8)^0,w,c
 18062  016230  6E05               	movwf	(btemp+4)^0,c
 18063  016232  340A               	rlcf	(btemp+9)^0,w,c
 18064  016234  6E06               	movwf	(btemp+5)^0,c
 18065  016236  340B               	rlcf	(btemp+10)^0,w,c
 18066  016238  6E07               	movwf	(btemp+6)^0,c
 18067  01623A  340C               	rlcf	(btemp+11)^0,w,c
 18068  01623C  6E08               	movwf	(btemp+7)^0,c
 18069  01623E  5005               	movf	(btemp+4)^0,w,c
 18070  016240  1006               	iorwf	(btemp+5)^0,w,c
 18071  016242  1007               	iorwf	(btemp+6)^0,w,c
 18072  016244  1008               	iorwf	(btemp+7)^0,w,c
 18073  016246  B4D8               	btfsc	status,2,c
 18074  016248  D018               	goto	l7814
 18075  01624A  0E00               	movlw	0
 18076  01624C  6E09               	movwf	(btemp+8)^0,c
 18077  01624E  0E00               	movlw	0
 18078  016250  6E0A               	movwf	(btemp+9)^0,c
 18079  016252  0E80               	movlw	128
 18080  016254  6E0B               	movwf	(btemp+10)^0,c
 18081  016256  0EBF               	movlw	191
 18082  016258  6E0C               	movwf	(btemp+11)^0,c
 18083                           
 18084                           ;stkvar	_u @ sp[(-10)+0]
 18085  01625A  0EF6               	movlw	-10
 18086  01625C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18087  016262  0EF7               	movlw	-9
 18088  016264  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18089  01626A  0EF8               	movlw	-8
 18090  01626C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18091  016272  0EF9               	movlw	-7
 18092  016274  0060  F033  FFE3   	movff	btemp+11,plusw1
 18093  01627A                     l7814:
 18094                           
 18095                           ;stkvar	_u @ sp[(-10)+0]
 18096  01627A  0EF6               	movlw	-10
 18097  01627C  006F FF8C  F001    	movff	plusw1,btemp
 18098  016282  0EF7               	movlw	-9
 18099  016284  006F FF8C  F002    	movff	plusw1,btemp+1
 18100  01628A  0EF8               	movlw	-8
 18101  01628C  006F FF8C  F003    	movff	plusw1,btemp+2
 18102  016292  0EF9               	movlw	-7
 18103  016294                     L18:
 18104  016294  006F FF8C  F004    	movff	plusw1,btemp+3
 18105                           
 18106                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18107  01629A  0EF2               	movlw	242
 18108  01629C  26E1               	addwf	fsr1l,f,c
 18109  01629E  0EFF               	movlw	255
 18110  0162A0  22E2               	addwfc	fsr1h,f,c
 18111  0162A2  0012               	return		;funcret
 18112  0162A4                     __end_of_floorf:
 18113                           	opt callstack 0
 18114                           
 18115 ;; *************** function ___fpclassifyf *****************
 18116 ;; Defined at:
 18117 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18118 ;; Parameters:    Size  Location     Type
 18119 ;;  x               4  [STACK] float 
 18120 ;; Auto vars:     Size  Location     Type
 18121 ;;  u               4  [STACK] struct .
 18122 ;;  e               2  [STACK] int 
 18123 ;; Return value:  Size  Location     Type
 18124 ;;                  2  [STACK] int 
 18125 ;; Registers used:
 18126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18127 ;; Tracked objects:
 18128 ;;		On entry : 0/0
 18129 ;;		On exit  : 0/0
 18130 ;;		Unchanged: 0/0
 18131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18136 ;;Total ram usage:        0 bytes
 18137 ;; Hardware stack levels used:    1
 18138 ;; Hardware stack levels required when called:   15
 18139 ;; This function calls:
 18140 ;;		Nothing
 18141 ;; This function is called by:
 18142 ;;		_efgtoa
 18143 ;; This function uses a reentrant model
 18144 ;;
 18145                           
 18146                           	psect	text60
 18147  017F74                     __ptext60:
 18148                           	opt callstack 0
 18149  017F74                     ___fpclassifyf:
 18150                           	opt callstack 0
 18151                           
 18152                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18153  017F74  0E06               	movlw	6
 18154  017F76  26E1               	addwf	fsr1l,f,c
 18155  017F78  0E00               	movlw	0
 18156  017F7A  22E2               	addwfc	fsr1h,f,c
 18157                           
 18158                           ;incstack = 0
 18159 ;; hardware stack exceeded
 18160  017F7C  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18161  017F82  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18162  017F88  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18163  017F8E  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18164                           
 18165                           ;stkvar	_u @ sp[(-6)+0]
 18166  017F94  0EFA               	movlw	-6
 18167  017F96  0060  F027  FFE3   	movff	btemp+8,plusw1
 18168  017F9C  0EFB               	movlw	-5
 18169  017F9E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18170  017FA4  0EFC               	movlw	-4
 18171  017FA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18172  017FAC  0EFD               	movlw	-3
 18173  017FAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18174                           
 18175                           ;stkvar	_x @ sp[(-6)+-4]
 18176  017FB4  0EF6               	movlw	-10
 18177  017FB6  006F FF8C  F009    	movff	plusw1,btemp+8
 18178  017FBC  0EF7               	movlw	-9
 18179  017FBE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18180  017FC4  0EF8               	movlw	-8
 18181  017FC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18182  017FCC  0EF9               	movlw	-7
 18183  017FCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18184                           
 18185                           ;stkvar	_u @ sp[(-6)+0]
 18186  017FD4  0EFA               	movlw	-6
 18187  017FD6  0060  F027  FFE3   	movff	btemp+8,plusw1
 18188  017FDC  0EFB               	movlw	-5
 18189  017FDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18190  017FE4  0EFC               	movlw	-4
 18191  017FE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18192  017FEC  0EFD               	movlw	-3
 18193  017FEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18194                           
 18195                           ;stkvar	_u @ sp[(-6)+0]
 18196  017FF4  0EFA               	movlw	-6
 18197  017FF6  006F FF8C  F009    	movff	plusw1,btemp+8
 18198  017FFC  0EFB               	movlw	-5
 18199  017FFE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18200  018004  0EFC               	movlw	-4
 18201  018006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18202  01800C  0EFD               	movlw	-3
 18203  01800E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18204  018014  0E18               	movlw	24
 18205  018016  D005               	goto	u5740
 18206  018018                     u5745:
 18207  018018  90D8               	bcf	status,0,c
 18208  01801A  320C               	rrcf	(btemp+11)^0,f,c
 18209  01801C  320B               	rrcf	(btemp+10)^0,f,c
 18210  01801E  320A               	rrcf	(btemp+9)^0,f,c
 18211  018020  3209               	rrcf	(btemp+8)^0,f,c
 18212  018022                     u5740:
 18213  018022  2EE8               	decfsz	wreg,f,c
 18214  018024  D7F9               	goto	u5745
 18215  018026  0060  F024  F007   	movff	btemp+8,btemp+6
 18216  01802C  0060  F028  F008   	movff	btemp+9,btemp+7
 18217  018032  0EFF               	movlw	255
 18218  018034  1607               	andwf	(btemp+6)^0,f,c
 18219  018036  0E00               	movlw	0
 18220  018038  1608               	andwf	(btemp+7)^0,f,c
 18221                           
 18222                           ;stkvar	_e @ sp[(-6)+4]
 18223  01803A  0EFE               	movlw	-2
 18224  01803C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18225  018042  0EFF               	movlw	-1
 18226  018044  0060  F023  FFE3   	movff	btemp+7,plusw1
 18227                           
 18228                           ;stkvar	_e @ sp[(-6)+4]
 18229  01804A  0EFE               	movlw	-2
 18230  01804C  006F FF8C  F001    	movff	plusw1,btemp
 18231  018052  0EFF               	movlw	-1
 18232  018054  50E3               	movf	plusw1,w,c
 18233  018056  1001               	iorwf	btemp^0,w,c
 18234  018058  A4D8               	btfss	status,2,c
 18235  01805A  D023               	goto	l7752
 18236                           
 18237                           ;stkvar	_u @ sp[(-6)+0]
 18238  01805C  0EFA               	movlw	-6
 18239  01805E  006F FF8C  F009    	movff	plusw1,btemp+8
 18240  018064  0EFB               	movlw	-5
 18241  018066  006F FF8C  F00A    	movff	plusw1,btemp+9
 18242  01806C  0EFC               	movlw	-4
 18243  01806E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18244  018074  0EFD               	movlw	-3
 18245  018076  006F FF8C  F00C    	movff	plusw1,btemp+11
 18246  01807C  90D8               	bcf	status,0,c
 18247  01807E  3409               	rlcf	(btemp+8)^0,w,c
 18248  018080  6E05               	movwf	(btemp+4)^0,c
 18249  018082  340A               	rlcf	(btemp+9)^0,w,c
 18250  018084  6E06               	movwf	(btemp+5)^0,c
 18251  018086  340B               	rlcf	(btemp+10)^0,w,c
 18252  018088  6E07               	movwf	(btemp+6)^0,c
 18253  01808A  340C               	rlcf	(btemp+11)^0,w,c
 18254  01808C  6E08               	movwf	(btemp+7)^0,c
 18255  01808E  5005               	movf	(btemp+4)^0,w,c
 18256  018090  1006               	iorwf	(btemp+5)^0,w,c
 18257  018092  1007               	iorwf	(btemp+6)^0,w,c
 18258  018094  1008               	iorwf	(btemp+7)^0,w,c
 18259  018096  A4D8               	btfss	status,2,c
 18260  018098  D002               	goto	l7748
 18261  01809A  0E02               	movlw	2
 18262  01809C  D02E               	goto	L19
 18263  01809E                     l7748:
 18264  01809E  0E03               	movlw	3
 18265  0180A0  D02C               	goto	L19
 18266  0180A2                     l7752:
 18267                           
 18268                           ;stkvar	_e @ sp[(-6)+4]
 18269  0180A2  0EFE               	movlw	-2
 18270  0180A4  28E3               	incf	plusw1,w,c
 18271  0180A6  E128               	bnz	l7758
 18272  0180A8  0EFF               	movlw	-1
 18273  0180AA  50E3               	movf	plusw1,w,c
 18274  0180AC  A4D8               	btfss	status,2,c
 18275  0180AE  D024               	goto	l7758
 18276                           
 18277                           ;stkvar	_u @ sp[(-6)+0]
 18278  0180B0  0EFA               	movlw	-6
 18279  0180B2  006F FF8C  F009    	movff	plusw1,btemp+8
 18280  0180B8  0EFB               	movlw	-5
 18281  0180BA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18282  0180C0  0EFC               	movlw	-4
 18283  0180C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18284  0180C8  0EFD               	movlw	-3
 18285  0180CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18286  0180D0  0E09               	movlw	9
 18287  0180D2                     u5785:
 18288  0180D2  90D8               	bcf	status,0,c
 18289  0180D4  3609               	rlcf	(btemp+8)^0,f,c
 18290  0180D6  360A               	rlcf	(btemp+9)^0,f,c
 18291  0180D8  360B               	rlcf	(btemp+10)^0,f,c
 18292  0180DA  360C               	rlcf	(btemp+11)^0,f,c
 18293  0180DC  2EE8               	decfsz	wreg,f,c
 18294  0180DE  D7F9               	goto	u5785
 18295  0180E0  5009               	movf	(btemp+8)^0,w,c
 18296  0180E2  100A               	iorwf	(btemp+9)^0,w,c
 18297  0180E4  100B               	iorwf	(btemp+10)^0,w,c
 18298  0180E6  100C               	iorwf	(btemp+11)^0,w,c
 18299  0180E8  A4D8               	btfss	status,2,c
 18300  0180EA  D002               	goto	u5790
 18301  0180EC  0E01               	movlw	1
 18302  0180EE  D001               	goto	u5800
 18303  0180F0                     u5790:
 18304  0180F0  0E00               	movlw	0
 18305  0180F2                     u5800:
 18306  0180F2  6E01               	movwf	btemp^0,c
 18307  0180F4  6A02               	clrf	(btemp+1)^0,c
 18308  0180F6  D004               	goto	l3038
 18309  0180F8                     l7758:
 18310  0180F8  0E04               	movlw	4
 18311  0180FA                     L19:
 18312  0180FA  6E01               	movwf	btemp^0,c
 18313  0180FC  0E00               	movlw	0
 18314  0180FE  6E02               	movwf	(btemp+1)^0,c
 18315  018100                     l3038:
 18316                           
 18317                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18318  018100  0EF6               	movlw	246
 18319  018102  26E1               	addwf	fsr1l,f,c
 18320  018104  0EFF               	movlw	255
 18321  018106  22E2               	addwfc	fsr1h,f,c
 18322  018108  0012               	return		;funcret
 18323  01810A                     __end_of___fpclassifyf:
 18324                           	opt callstack 0
 18325                           
 18326 ;; *************** function ___fltol *****************
 18327 ;; Defined at:
 18328 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18329 ;; Parameters:    Size  Location     Type
 18330 ;;  f1              4  [STACK] int 
 18331 ;; Auto vars:     Size  Location     Type
 18332 ;;  exp1            1  [STACK] unsigned char 
 18333 ;;  sign1           1  [STACK] unsigned char 
 18334 ;; Return value:  Size  Location     Type
 18335 ;;                  4  [STACK] long 
 18336 ;; Registers used:
 18337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18338 ;; Tracked objects:
 18339 ;;		On entry : 0/0
 18340 ;;		On exit  : 0/0
 18341 ;;		Unchanged: 0/0
 18342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18347 ;;Total ram usage:        0 bytes
 18348 ;; Hardware stack levels used:    1
 18349 ;; Hardware stack levels required when called:   15
 18350 ;; This function calls:
 18351 ;;		Nothing
 18352 ;; This function is called by:
 18353 ;;		_main
 18354 ;;		_calc_bsoc
 18355 ;;		_init_bsoc
 18356 ;;		_efgtoa
 18357 ;; This function uses a reentrant model
 18358 ;;
 18359                           
 18360                           	psect	text61
 18361  0183FE                     __ptext61:
 18362                           	opt callstack 0
 18363  0183FE                     ___fltol:
 18364                           	opt callstack 0
 18365                           
 18366                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18367  0183FE  52E6               	movf	postinc1,f,c
 18368  018400  52E6               	movf	postinc1,f,c
 18369                           
 18370                           ;stkvar	_f1 @ sp[(-2)+-4]
 18371                           
 18372                           ;incstack = 0
 18373 ;; hardware stack exceeded
 18374  018402  0EFA               	movlw	-6
 18375  018404  006F FF8C  F009    	movff	plusw1,btemp+8
 18376  01840A  0EFB               	movlw	-5
 18377  01840C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18378  018412  0EFC               	movlw	-4
 18379  018414  006F FF8C  F00B    	movff	plusw1,btemp+10
 18380  01841A  0EFD               	movlw	-3
 18381  01841C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18382  018422  0E18               	movlw	24
 18383  018424  D005               	goto	u6950
 18384  018426                     u6955:
 18385  018426  90D8               	bcf	status,0,c
 18386  018428  320C               	rrcf	(btemp+11)^0,f,c
 18387  01842A  320B               	rrcf	(btemp+10)^0,f,c
 18388  01842C  320A               	rrcf	(btemp+9)^0,f,c
 18389  01842E  3209               	rrcf	(btemp+8)^0,f,c
 18390  018430                     u6950:
 18391  018430  2EE8               	decfsz	wreg,f,c
 18392  018432  D7F9               	goto	u6955
 18393                           
 18394                           ;stkvar	_exp1 @ sp[(-2)+0]
 18395  018434  0EFE               	movlw	-2
 18396  018436  0060  F027  FFE3   	movff	btemp+8,plusw1
 18397  01843C  0EFE               	movlw	-2
 18398  01843E  50E3               	movf	plusw1,w,c
 18399  018440  A4D8               	btfss	status,2,c
 18400  018442  D006               	goto	l8378
 18401  018444                     u6960:
 18402  018444  0E00               	movlw	0
 18403  018446  6E01               	movwf	btemp^0,c
 18404  018448  6A02               	clrf	(btemp+1)^0,c
 18405  01844A  6A03               	clrf	(btemp+2)^0,c
 18406  01844C  6A04               	clrf	(btemp+3)^0,c
 18407  01844E  D08B               	goto	l2654
 18408  018450                     l8378:
 18409                           
 18410                           ;stkvar	_f1 @ sp[(-2)+-4]
 18411  018450  0EFA               	movlw	-6
 18412  018452  006F FF8C  F009    	movff	plusw1,btemp+8
 18413  018458  0EFB               	movlw	-5
 18414  01845A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18415  018460  0EFC               	movlw	-4
 18416  018462  006F FF8C  F00B    	movff	plusw1,btemp+10
 18417  018468  0EFD               	movlw	-3
 18418  01846A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18419  018470  0E20               	movlw	32
 18420  018472  D005               	goto	u6970
 18421  018474                     u6975:
 18422  018474  90D8               	bcf	status,0,c
 18423  018476  320C               	rrcf	(btemp+11)^0,f,c
 18424  018478  320B               	rrcf	(btemp+10)^0,f,c
 18425  01847A  320A               	rrcf	(btemp+9)^0,f,c
 18426  01847C  3209               	rrcf	(btemp+8)^0,f,c
 18427  01847E                     u6970:
 18428  01847E  2EE8               	decfsz	wreg,f,c
 18429  018480  D7F9               	goto	u6975
 18430                           
 18431                           ;stkvar	_sign1 @ sp[(-2)+1]
 18432  018482  0EFF               	movlw	-1
 18433  018484  0060  F027  FFE3   	movff	btemp+8,plusw1
 18434                           
 18435                           ;stkvar	_f1 @ sp[(-2)+-4]
 18436  01848A  0EFC               	movlw	-4
 18437  01848C  8EE3               	bsf	plusw1,7,c
 18438                           
 18439                           ;stkvar	_f1 @ sp[(-2)+-4]
 18440  01848E  50E1               	movf	fsr1l,w,c
 18441  018490  0FFA               	addlw	-6
 18442  018492  6ED9               	movwf	fsr2l,c
 18443  018494  50E2               	movf	fsr1h,w,c
 18444  018496  6EDA               	movwf	fsr2h,c
 18445  018498  0EFF               	movlw	255
 18446  01849A  22DA               	addwfc	fsr2h,f,c
 18447  01849C  0EFF               	movlw	255
 18448  01849E  16DE               	andwf	postinc2,f,c
 18449  0184A0  0EFF               	movlw	255
 18450  0184A2  16DE               	andwf	postinc2,f,c
 18451  0184A4  0EFF               	movlw	255
 18452  0184A6  16DE               	andwf	postinc2,f,c
 18453  0184A8  0E00               	movlw	0
 18454  0184AA  16DE               	andwf	postinc2,f,c
 18455                           
 18456                           ;stkvar	_exp1 @ sp[(-2)+0]
 18457  0184AC  0EFE               	movlw	-2
 18458  0184AE  006F FF8C  F001    	movff	plusw1,btemp
 18459  0184B4  0E96               	movlw	150
 18460  0184B6  5E01               	subwf	btemp^0,f,c
 18461  0184B8  0EFE               	movlw	-2
 18462  0184BA  0060  F007  FFE3   	movff	btemp,plusw1
 18463                           
 18464                           ;stkvar	_exp1 @ sp[(-2)+0]
 18465  0184C0  0EFE               	movlw	-2
 18466  0184C2  AEE3               	btfss	plusw1,7,c
 18467  0184C4  D014               	goto	l8396
 18468                           
 18469                           ;stkvar	_exp1 @ sp[(-2)+0]
 18470  0184C6  0EFE               	movlw	-2
 18471  0184C8  50E3               	movf	plusw1,w,c
 18472  0184CA  0A80               	xorlw	128
 18473  0184CC  0F97               	addlw	151
 18474  0184CE  A0D8               	btfss	status,0,c
 18475  0184D0  D7B9               	goto	u6960
 18476  0184D2                     l8394:
 18477                           
 18478                           ;stkvar	_f1 @ sp[(-2)+-4]
 18479  0184D2  90D8               	bcf	status,0,c
 18480  0184D4  0EFD               	movlw	-3
 18481  0184D6  32E3               	rrcf	plusw1,f,c
 18482  0184D8  0EFC               	movlw	-4
 18483  0184DA  32E3               	rrcf	plusw1,f,c
 18484  0184DC  0EFB               	movlw	-5
 18485  0184DE  32E3               	rrcf	plusw1,f,c
 18486  0184E0  0EFA               	movlw	-6
 18487  0184E2  32E3               	rrcf	plusw1,f,c
 18488                           
 18489                           ;stkvar	_exp1 @ sp[(-2)+0]
 18490  0184E4  0EFE               	movlw	-2
 18491  0184E6  2AE3               	incf	plusw1,f,c
 18492  0184E8  B4D8               	btfsc	status,2,c
 18493  0184EA  D018               	goto	u7020
 18494  0184EC  D7F2               	goto	l8394
 18495  0184EE                     l8396:
 18496                           
 18497                           ;stkvar	_exp1 @ sp[(-2)+0]
 18498  0184EE  0EFE               	movlw	-2
 18499  0184F0  006F FF8C  F001    	movff	plusw1,btemp
 18500  0184F6  0E1F               	movlw	31
 18501  0184F8  6401               	cpfsgt	btemp^0,c
 18502  0184FA  D00C               	goto	l8404
 18503  0184FC  D7A3               	goto	u6960
 18504  0184FE                     l8402:
 18505                           
 18506                           ;stkvar	_f1 @ sp[(-2)+-4]
 18507  0184FE  90D8               	bcf	status,0,c
 18508  018500  0EFA               	movlw	-6
 18509  018502  36E3               	rlcf	plusw1,f,c
 18510  018504  0EFB               	movlw	-5
 18511  018506  36E3               	rlcf	plusw1,f,c
 18512  018508  0EFC               	movlw	-4
 18513  01850A  36E3               	rlcf	plusw1,f,c
 18514  01850C  0EFD               	movlw	-3
 18515  01850E  36E3               	rlcf	plusw1,f,c
 18516                           
 18517                           ;stkvar	_exp1 @ sp[(-2)+0]
 18518  018510  0EFE               	movlw	-2
 18519  018512  06E3               	decf	plusw1,f,c
 18520  018514                     l8404:
 18521                           
 18522                           ;stkvar	_exp1 @ sp[(-2)+0]
 18523  018514  0EFE               	movlw	-2
 18524  018516  50E3               	movf	plusw1,w,c
 18525  018518  A4D8               	btfss	status,2,c
 18526  01851A  D7F1               	goto	l8402
 18527  01851C                     u7020:
 18528                           
 18529                           ;stkvar	_sign1 @ sp[(-2)+1]
 18530  01851C  0EFF               	movlw	-1
 18531  01851E  50E3               	movf	plusw1,w,c
 18532  018520  B4D8               	btfsc	status,2,c
 18533  018522  D011               	goto	u7040
 18534                           
 18535                           ;stkvar	_f1 @ sp[(-2)+-4]
 18536                           ;stkvar	_f1 @ sp[(-2)+-4]
 18537  018524  0EFA               	movlw	-6
 18538  018526  6CE3               	negf	plusw1,c
 18539  018528  0EFB               	movlw	-5
 18540  01852A  1EE3               	comf	plusw1,f,c
 18541  01852C  0EFC               	movlw	-4
 18542  01852E  1EE3               	comf	plusw1,f,c
 18543  018530  0EFD               	movlw	-3
 18544  018532  1EE3               	comf	plusw1,f,c
 18545  018534  E308               	bnc	u7040
 18546  018536  0EFB               	movlw	-5
 18547  018538  2AE3               	incf	plusw1,f,c
 18548  01853A  E305               	bnc	u7040
 18549  01853C  0EFC               	movlw	-4
 18550  01853E  2AE3               	incf	plusw1,f,c
 18551  018540  E302               	bnc	u7040
 18552  018542  0EFD               	movlw	-3
 18553  018544  2AE3               	incf	plusw1,f,c
 18554  018546                     u7040:
 18555                           
 18556                           ;stkvar	_f1 @ sp[(-2)+-4]
 18557  018546  0EFA               	movlw	-6
 18558  018548  006F FF8C  F001    	movff	plusw1,btemp
 18559  01854E  0EFB               	movlw	-5
 18560  018550  006F FF8C  F002    	movff	plusw1,btemp+1
 18561  018556  0EFC               	movlw	-4
 18562  018558  006F FF8C  F003    	movff	plusw1,btemp+2
 18563  01855E  0EFD               	movlw	-3
 18564  018560  006F FF8C  F004    	movff	plusw1,btemp+3
 18565  018566                     l2654:
 18566                           
 18567                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18568  018566  0EFA               	movlw	250
 18569  018568  26E1               	addwf	fsr1l,f,c
 18570  01856A  0EFF               	movlw	255
 18571  01856C  22E2               	addwfc	fsr1h,f,c
 18572  01856E  0012               	return		;funcret
 18573  018570                     __end_of___fltol:
 18574                           	opt callstack 0
 18575                           
 18576 ;; *************** function ___flneg *****************
 18577 ;; Defined at:
 18578 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18579 ;; Parameters:    Size  Location     Type
 18580 ;;  f1              4  [STACK] long 
 18581 ;; Auto vars:     Size  Location     Type
 18582 ;;		None
 18583 ;; Return value:  Size  Location     Type
 18584 ;;                  4  [STACK] long 
 18585 ;; Registers used:
 18586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18587 ;; Tracked objects:
 18588 ;;		On entry : 0/0
 18589 ;;		On exit  : 0/0
 18590 ;;		Unchanged: 0/0
 18591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18596 ;;Total ram usage:        0 bytes
 18597 ;; Hardware stack levels used:    1
 18598 ;; Hardware stack levels required when called:   15
 18599 ;; This function calls:
 18600 ;;		Nothing
 18601 ;; This function is called by:
 18602 ;;		_calc_bsoc
 18603 ;;		_efgtoa
 18604 ;; This function uses a reentrant model
 18605 ;;
 18606                           
 18607                           	psect	text62
 18608  01A9F0                     __ptext62:
 18609                           	opt callstack 0
 18610  01A9F0                     ___flneg:
 18611                           	opt callstack 0
 18612                           
 18613                           ;stkvar	_f1 @ sp[(0)+-4]
 18614                           
 18615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18616                           ;incstack = 0
 18617 ;; hardware stack exceeded
 18618  01A9F0  0EFC               	movlw	-4
 18619  01A9F2  50E3               	movf	plusw1,w,c
 18620  01A9F4  E10A               	bnz	u6940
 18621  01A9F6  0EFD               	movlw	-3
 18622  01A9F8  50E3               	movf	plusw1,w,c
 18623  01A9FA  E107               	bnz	u6940
 18624  01A9FC  0EFE               	movlw	-2
 18625  01A9FE  50E3               	movf	plusw1,w,c
 18626  01AA00  E104               	bnz	u6940
 18627  01AA02  0EFF               	movlw	-1
 18628  01AA04  50E3               	movf	plusw1,w,c
 18629  01AA06  B4D8               	btfsc	status,2,c
 18630  01AA08  D002               	goto	l8368
 18631  01AA0A                     u6940:
 18632                           
 18633                           ;stkvar	_f1 @ sp[(0)+-4]
 18634  01AA0A  0EFF               	movlw	-1
 18635  01AA0C  7EE3               	btg	plusw1,7,c
 18636  01AA0E                     l8368:
 18637                           
 18638                           ;stkvar	_f1 @ sp[(0)+-4]
 18639  01AA0E  0EFC               	movlw	-4
 18640  01AA10  006F FF8C  F001    	movff	plusw1,btemp
 18641  01AA16  0EFD               	movlw	-3
 18642  01AA18  006F FF8C  F002    	movff	plusw1,btemp+1
 18643  01AA1E  0EFE               	movlw	-2
 18644  01AA20  006F FF8C  F003    	movff	plusw1,btemp+2
 18645  01AA26  0EFF               	movlw	-1
 18646  01AA28  006F FF8C  F004    	movff	plusw1,btemp+3
 18647                           
 18648                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18649  01AA2E  52E5               	movf	postdec1,f,c
 18650  01AA30  52E5               	movf	postdec1,f,c
 18651  01AA32  52E5               	movf	postdec1,f,c
 18652  01AA34  52E5               	movf	postdec1,f,c
 18653  01AA36  0012               	return		;funcret
 18654  01AA38                     __end_of___flneg:
 18655                           	opt callstack 0
 18656                           
 18657 ;; *************** function ___fleq *****************
 18658 ;; Defined at:
 18659 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18660 ;; Parameters:    Size  Location     Type
 18661 ;;  ff1             4  [STACK] long 
 18662 ;;  ff2             4  [STACK] long 
 18663 ;; Auto vars:     Size  Location     Type
 18664 ;;		None
 18665 ;; Return value:  Size  Location     Type
 18666 ;;		None               void
 18667 ;; Registers used:
 18668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18669 ;; Tracked objects:
 18670 ;;		On entry : 0/0
 18671 ;;		On exit  : 0/0
 18672 ;;		Unchanged: 0/0
 18673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18678 ;;Total ram usage:        0 bytes
 18679 ;; Hardware stack levels used:    1
 18680 ;; Hardware stack levels required when called:   15
 18681 ;; This function calls:
 18682 ;;		Nothing
 18683 ;; This function is called by:
 18684 ;;		_efgtoa
 18685 ;; This function uses a reentrant model
 18686 ;;
 18687                           
 18688                           	psect	text63
 18689  0199B4                     __ptext63:
 18690                           	opt callstack 0
 18691  0199B4                     ___fleq:
 18692                           	opt callstack 0
 18693                           
 18694                           ;stkvar	_ff1 @ sp[(0)+-4]
 18695                           
 18696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18697                           ;incstack = 0
 18698 ;; hardware stack exceeded
 18699  0199B4  50E1               	movf	fsr1l,w,c
 18700  0199B6  0FFC               	addlw	-4
 18701  0199B8  6ED9               	movwf	fsr2l,c
 18702  0199BA  50E2               	movf	fsr1h,w,c
 18703  0199BC  6EDA               	movwf	fsr2h,c
 18704  0199BE  0EFF               	movlw	255
 18705  0199C0  22DA               	addwfc	fsr2h,f,c
 18706  0199C2  0E00               	movlw	0
 18707  0199C4  14DE               	andwf	postinc2,w,c
 18708  0199C6  6E09               	movwf	(btemp+8)^0,c
 18709  0199C8  0E00               	movlw	0
 18710  0199CA  14DE               	andwf	postinc2,w,c
 18711  0199CC  6E0A               	movwf	(btemp+9)^0,c
 18712  0199CE  0E80               	movlw	128
 18713  0199D0  14DE               	andwf	postinc2,w,c
 18714  0199D2  6E0B               	movwf	(btemp+10)^0,c
 18715  0199D4  0E7F               	movlw	127
 18716  0199D6  14DE               	andwf	postinc2,w,c
 18717  0199D8  6E0C               	movwf	(btemp+11)^0,c
 18718  0199DA  5009               	movf	(btemp+8)^0,w,c
 18719  0199DC  100A               	iorwf	(btemp+9)^0,w,c
 18720  0199DE  100B               	iorwf	(btemp+10)^0,w,c
 18721  0199E0  100C               	iorwf	(btemp+11)^0,w,c
 18722  0199E2  A4D8               	btfss	status,2,c
 18723  0199E4  D008               	goto	l8326
 18724                           
 18725                           ;stkvar	_ff1 @ sp[(0)+-4]
 18726  0199E6  0EFC               	movlw	-4
 18727  0199E8  6AE3               	clrf	plusw1,c
 18728  0199EA  0EFD               	movlw	-3
 18729  0199EC  6AE3               	clrf	plusw1,c
 18730  0199EE  0EFE               	movlw	-2
 18731  0199F0  6AE3               	clrf	plusw1,c
 18732  0199F2  0EFF               	movlw	-1
 18733  0199F4  6AE3               	clrf	plusw1,c
 18734  0199F6                     l8326:
 18735                           
 18736                           ;stkvar	_ff2 @ sp[(0)+-8]
 18737  0199F6  50E1               	movf	fsr1l,w,c
 18738  0199F8  0FF8               	addlw	-8
 18739  0199FA  6ED9               	movwf	fsr2l,c
 18740  0199FC  50E2               	movf	fsr1h,w,c
 18741  0199FE  6EDA               	movwf	fsr2h,c
 18742  019A00  0EFF               	movlw	255
 18743  019A02  22DA               	addwfc	fsr2h,f,c
 18744  019A04  0E00               	movlw	0
 18745  019A06  14DE               	andwf	postinc2,w,c
 18746  019A08  6E09               	movwf	(btemp+8)^0,c
 18747  019A0A  0E00               	movlw	0
 18748  019A0C  14DE               	andwf	postinc2,w,c
 18749  019A0E  6E0A               	movwf	(btemp+9)^0,c
 18750  019A10  0E80               	movlw	128
 18751  019A12  14DE               	andwf	postinc2,w,c
 18752  019A14  6E0B               	movwf	(btemp+10)^0,c
 18753  019A16  0E7F               	movlw	127
 18754  019A18  14DE               	andwf	postinc2,w,c
 18755  019A1A  6E0C               	movwf	(btemp+11)^0,c
 18756  019A1C  5009               	movf	(btemp+8)^0,w,c
 18757  019A1E  100A               	iorwf	(btemp+9)^0,w,c
 18758  019A20  100B               	iorwf	(btemp+10)^0,w,c
 18759  019A22  100C               	iorwf	(btemp+11)^0,w,c
 18760  019A24  A4D8               	btfss	status,2,c
 18761  019A26  D008               	goto	l8330
 18762                           
 18763                           ;stkvar	_ff2 @ sp[(0)+-8]
 18764  019A28  0EF8               	movlw	-8
 18765  019A2A  6AE3               	clrf	plusw1,c
 18766  019A2C  0EF9               	movlw	-7
 18767  019A2E  6AE3               	clrf	plusw1,c
 18768  019A30  0EFA               	movlw	-6
 18769  019A32  6AE3               	clrf	plusw1,c
 18770  019A34  0EFB               	movlw	-5
 18771  019A36  6AE3               	clrf	plusw1,c
 18772  019A38                     l8330:
 18773                           
 18774                           ;stkvar	_ff2 @ sp[(0)+-8]
 18775                           ;stkvar	_ff1 @ sp[(0)+-4]
 18776  019A38  50E1               	movf	fsr1l,w,c
 18777  019A3A  0FFC               	addlw	-4
 18778  019A3C  6ED9               	movwf	fsr2l,c
 18779  019A3E  50E2               	movf	fsr1h,w,c
 18780  019A40  6EDA               	movwf	fsr2h,c
 18781  019A42  0EFF               	movlw	255
 18782  019A44  22DA               	addwfc	fsr2h,f,c
 18783  019A46  0EF8               	movlw	-8
 18784  019A48  50E3               	movf	plusw1,w,c
 18785  019A4A  18DE               	xorwf	postinc2,w,c
 18786  019A4C  E10D               	bnz	u6880
 18787  019A4E  0EF9               	movlw	-7
 18788  019A50  50E3               	movf	plusw1,w,c
 18789  019A52  18DE               	xorwf	postinc2,w,c
 18790  019A54  E109               	bnz	u6880
 18791  019A56  0EFA               	movlw	-6
 18792  019A58  50E3               	movf	plusw1,w,c
 18793  019A5A  18DE               	xorwf	postinc2,w,c
 18794  019A5C  E105               	bnz	u6880
 18795  019A5E  0EFB               	movlw	-5
 18796  019A60  50E3               	movf	plusw1,w,c
 18797  019A62  18DE               	xorwf	postinc2,w,c
 18798  019A64  B4D8               	btfsc	status,2,c
 18799  019A66  D002               	goto	l8334
 18800  019A68                     u6880:
 18801  019A68  9001               	bcf	btemp& (0+255),0,c
 18802  019A6A  D001               	goto	l2616
 18803  019A6C                     l8334:
 18804  019A6C  8001               	bsf	btemp& (0+255),0,c
 18805  019A6E                     l2616:
 18806                           
 18807                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18808  019A6E  0EF8               	movlw	248
 18809  019A70  26E1               	addwf	fsr1l,f,c
 18810  019A72  0EFF               	movlw	255
 18811  019A74  22E2               	addwfc	fsr1h,f,c
 18812  019A76  0012               	return		;funcret
 18813  019A78                     __end_of___fleq:
 18814                           	opt callstack 0
 18815                           
 18816 ;; *************** function ___awmod *****************
 18817 ;; Defined at:
 18818 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18819 ;; Parameters:    Size  Location     Type
 18820 ;;  dividend        2  [STACK] int 
 18821 ;;  divisor         2  [STACK] int 
 18822 ;; Auto vars:     Size  Location     Type
 18823 ;;  sign            1  [STACK] unsigned char 
 18824 ;;  counter         1  [STACK] unsigned char 
 18825 ;; Return value:  Size  Location     Type
 18826 ;;                  2  [STACK] int 
 18827 ;; Registers used:
 18828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18829 ;; Tracked objects:
 18830 ;;		On entry : 0/0
 18831 ;;		On exit  : 0/0
 18832 ;;		Unchanged: 0/0
 18833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18838 ;;Total ram usage:        0 bytes
 18839 ;; Hardware stack levels used:    1
 18840 ;; Hardware stack levels required when called:   15
 18841 ;; This function calls:
 18842 ;;		Nothing
 18843 ;; This function is called by:
 18844 ;;		_efgtoa
 18845 ;; This function uses a reentrant model
 18846 ;;
 18847                           
 18848                           	psect	text64
 18849  018FC2                     __ptext64:
 18850                           	opt callstack 0
 18851  018FC2                     ___awmod:
 18852                           	opt callstack 0
 18853                           
 18854                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18855  018FC2  52E6               	movf	postinc1,f,c
 18856  018FC4  52E6               	movf	postinc1,f,c
 18857                           
 18858                           ;stkvar	_sign @ sp[(-2)+0]
 18859                           
 18860                           ;incstack = 0
 18861 ;; hardware stack exceeded
 18862  018FC6  0EFE               	movlw	-2
 18863  018FC8  6AE3               	clrf	plusw1,c
 18864                           
 18865                           ;stkvar	_dividend @ sp[(-2)+-2]
 18866  018FCA  0EFD               	movlw	-3
 18867  018FCC  AEE3               	btfss	plusw1,7,c
 18868  018FCE  D009               	goto	l8292
 18869                           
 18870                           ;stkvar	_dividend @ sp[(-2)+-2]
 18871                           ;stkvar	_dividend @ sp[(-2)+-2]
 18872  018FD0  0EFC               	movlw	-4
 18873  018FD2  6CE3               	negf	plusw1,c
 18874  018FD4  0EFD               	movlw	-3
 18875  018FD6  1EE3               	comf	plusw1,f,c
 18876  018FD8  B0D8               	btfsc	status,0,c
 18877  018FDA  2AE3               	incf	plusw1,f,c
 18878                           
 18879                           ;stkvar	_sign @ sp[(-2)+0]
 18880  018FDC  0EFE               	movlw	-2
 18881  018FDE  6AE3               	clrf	plusw1,c
 18882  018FE0  2AE3               	incf	plusw1,f,c
 18883  018FE2                     l8292:
 18884                           
 18885                           ;stkvar	_divisor @ sp[(-2)+-4]
 18886  018FE2  0EFB               	movlw	-5
 18887  018FE4  AEE3               	btfss	plusw1,7,c
 18888  018FE6  D006               	goto	l8296
 18889                           
 18890                           ;stkvar	_divisor @ sp[(-2)+-4]
 18891                           ;stkvar	_divisor @ sp[(-2)+-4]
 18892  018FE8  0EFA               	movlw	-6
 18893  018FEA  6CE3               	negf	plusw1,c
 18894  018FEC  0EFB               	movlw	-5
 18895  018FEE  1EE3               	comf	plusw1,f,c
 18896  018FF0  B0D8               	btfsc	status,0,c
 18897  018FF2  2AE3               	incf	plusw1,f,c
 18898  018FF4                     l8296:
 18899                           
 18900                           ;stkvar	_divisor @ sp[(-2)+-4]
 18901  018FF4  0EFA               	movlw	-6
 18902  018FF6  006F FF8C  F001    	movff	plusw1,btemp
 18903  018FFC  0EFB               	movlw	-5
 18904  018FFE  50E3               	movf	plusw1,w,c
 18905  019000  1001               	iorwf	btemp^0,w,c
 18906  019002  B4D8               	btfsc	status,2,c
 18907  019004  D053               	goto	u6840
 18908                           
 18909                           ;stkvar	_counter @ sp[(-2)+1]
 18910  019006  0EFF               	movlw	-1
 18911  019008  6AE3               	clrf	plusw1,c
 18912  01900A  D012               	goto	L20
 18913  01900C                     l8300:
 18914                           
 18915                           ;stkvar	_divisor @ sp[(-2)+-4]
 18916  01900C  0EFA               	movlw	-6
 18917  01900E  50E3               	movf	plusw1,w,c
 18918  019010  90D8               	bcf	status,0,c
 18919  019012  34E8               	rlcf	wreg,w,c
 18920  019014  6E01               	movwf	btemp^0,c
 18921  019016  0EFA               	movlw	-6
 18922  019018  0060  F007  FFE3   	movff	btemp,plusw1
 18923  01901E  0EFB               	movlw	-5
 18924  019020  50E3               	movf	plusw1,w,c
 18925  019022  34E8               	rlcf	wreg,w,c
 18926  019024  6E01               	movwf	btemp^0,c
 18927  019026  0EFB               	movlw	-5
 18928  019028  0060  F007  FFE3   	movff	btemp,plusw1
 18929                           
 18930                           ;stkvar	_counter @ sp[(-2)+1]
 18931  01902E  0EFF               	movlw	-1
 18932  019030                     L20:
 18933  019030  2AE3               	incf	plusw1,f,c
 18934                           
 18935                           ;stkvar	_divisor @ sp[(-2)+-4]
 18936  019032  0EFB               	movlw	-5
 18937  019034  AEE3               	btfss	plusw1,7,c
 18938  019036  D7EA               	goto	l8300
 18939  019038                     u6820:
 18940                           
 18941                           ;stkvar	_divisor @ sp[(-2)+-4]
 18942  019038  0EFA               	movlw	-6
 18943  01903A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18944  019040  0EFB               	movlw	-5
 18945  019042  006F FF8C  F00C    	movff	plusw1,btemp+11
 18946                           
 18947                           ;stkvar	_dividend @ sp[(-2)+-2]
 18948  019048  0EFC               	movlw	-4
 18949  01904A  006F FF8C  F009    	movff	plusw1,btemp+8
 18950  019050  0EFD               	movlw	-3
 18951  019052  006F FF8C  F00A    	movff	plusw1,btemp+9
 18952  019058  500B               	movf	(btemp+10)^0,w,c
 18953  01905A  5C09               	subwf	(btemp+8)^0,w,c
 18954  01905C  500C               	movf	(btemp+11)^0,w,c
 18955  01905E  580A               	subwfb	(btemp+9)^0,w,c
 18956  019060  A0D8               	btfss	status,0,c
 18957  019062  D014               	goto	l8310
 18958                           
 18959                           ;stkvar	_divisor @ sp[(-2)+-4]
 18960                           ;stkvar	_dividend @ sp[(-2)+-2]
 18961  019064  0EFC               	movlw	-4
 18962  019066  50E3               	movf	plusw1,w,c
 18963  019068  6E01               	movwf	btemp^0,c
 18964  01906A  0EFA               	movlw	-6
 18965  01906C  50E3               	movf	plusw1,w,c
 18966  01906E  5E01               	subwf	btemp^0,f,c
 18967  019070  0EFC               	movlw	-4
 18968  019072  0060  F007  FFE3   	movff	btemp,plusw1
 18969  019078  0EFD               	movlw	-3
 18970  01907A  50E3               	movf	plusw1,w,c
 18971  01907C  6E01               	movwf	btemp^0,c
 18972  01907E  0EFB               	movlw	-5
 18973  019080  50E3               	movf	plusw1,w,c
 18974  019082  5A01               	subwfb	btemp^0,f,c
 18975  019084  0EFD               	movlw	-3
 18976  019086  0060  F007  FFE3   	movff	btemp,plusw1
 18977  01908C                     l8310:
 18978                           
 18979                           ;stkvar	_divisor @ sp[(-2)+-4]
 18980  01908C  90D8               	bcf	status,0,c
 18981  01908E  0EFB               	movlw	-5
 18982  019090  32E3               	rrcf	plusw1,f,c
 18983  019092  0EFA               	movlw	-6
 18984  019094  32E3               	rrcf	plusw1,f,c
 18985                           
 18986                           ;stkvar	_counter @ sp[(-2)+1]
 18987  019096  0EFF               	movlw	-1
 18988  019098  50E3               	movf	plusw1,w,c
 18989  01909A  6E01               	movwf	btemp^0,c
 18990  01909C  0E01               	movlw	1
 18991  01909E  5E01               	subwf	btemp^0,f,c
 18992  0190A0  0EFF               	movlw	-1
 18993  0190A2  0060  F007  FFE3   	movff	btemp,plusw1
 18994  0190A8  A4D8               	btfss	status,2,c
 18995  0190AA  D7C6               	goto	u6820
 18996  0190AC                     u6840:
 18997                           
 18998                           ;stkvar	_sign @ sp[(-2)+0]
 18999  0190AC  0EFE               	movlw	-2
 19000  0190AE  50E3               	movf	plusw1,w,c
 19001  0190B0  B4D8               	btfsc	status,2,c
 19002  0190B2  D006               	goto	l8318
 19003                           
 19004                           ;stkvar	_dividend @ sp[(-2)+-2]
 19005                           ;stkvar	_dividend @ sp[(-2)+-2]
 19006  0190B4  0EFC               	movlw	-4
 19007  0190B6  6CE3               	negf	plusw1,c
 19008  0190B8  0EFD               	movlw	-3
 19009  0190BA  1EE3               	comf	plusw1,f,c
 19010  0190BC  B0D8               	btfsc	status,0,c
 19011  0190BE  2AE3               	incf	plusw1,f,c
 19012  0190C0                     l8318:
 19013                           
 19014                           ;stkvar	_dividend @ sp[(-2)+-2]
 19015  0190C0  0EFC               	movlw	-4
 19016  0190C2  006F FF8C  F001    	movff	plusw1,btemp
 19017  0190C8  0EFD               	movlw	-3
 19018  0190CA  006F FF8C  F002    	movff	plusw1,btemp+1
 19019                           
 19020                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19021  0190D0  0EFA               	movlw	250
 19022  0190D2  26E1               	addwf	fsr1l,f,c
 19023  0190D4  0EFF               	movlw	255
 19024  0190D6  22E2               	addwfc	fsr1h,f,c
 19025  0190D8  0012               	return		;funcret
 19026  0190DA                     __end_of___awmod:
 19027                           	opt callstack 0
 19028                           
 19029 ;; *************** function ___awdiv *****************
 19030 ;; Defined at:
 19031 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19032 ;; Parameters:    Size  Location     Type
 19033 ;;  dividend        2  [STACK] int 
 19034 ;;  divisor         2  [STACK] int 
 19035 ;; Auto vars:     Size  Location     Type
 19036 ;;  quotient        2  [STACK] int 
 19037 ;;  sign            1  [STACK] unsigned char 
 19038 ;;  counter         1  [STACK] unsigned char 
 19039 ;; Return value:  Size  Location     Type
 19040 ;;                  2  [STACK] int 
 19041 ;; Registers used:
 19042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19043 ;; Tracked objects:
 19044 ;;		On entry : 0/0
 19045 ;;		On exit  : 0/0
 19046 ;;		Unchanged: 0/0
 19047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19052 ;;Total ram usage:        0 bytes
 19053 ;; Hardware stack levels used:    1
 19054 ;; Hardware stack levels required when called:   15
 19055 ;; This function calls:
 19056 ;;		Nothing
 19057 ;; This function is called by:
 19058 ;;		_efgtoa
 19059 ;; This function uses a reentrant model
 19060 ;;
 19061                           
 19062                           	psect	text65
 19063  0189A6                     __ptext65:
 19064                           	opt callstack 0
 19065  0189A6                     ___awdiv:
 19066                           	opt callstack 0
 19067                           
 19068                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19069  0189A6  52E6               	movf	postinc1,f,c
 19070  0189A8  52E6               	movf	postinc1,f,c
 19071  0189AA  52E6               	movf	postinc1,f,c
 19072  0189AC  52E6               	movf	postinc1,f,c
 19073                           
 19074                           ;stkvar	_sign @ sp[(-4)+2]
 19075                           
 19076                           ;incstack = 0
 19077 ;; hardware stack exceeded
 19078  0189AE  0EFE               	movlw	-2
 19079  0189B0  6AE3               	clrf	plusw1,c
 19080                           
 19081                           ;stkvar	_divisor @ sp[(-4)+-4]
 19082  0189B2  0EF9               	movlw	-7
 19083  0189B4  AEE3               	btfss	plusw1,7,c
 19084  0189B6  D009               	goto	l8246
 19085                           
 19086                           ;stkvar	_divisor @ sp[(-4)+-4]
 19087                           ;stkvar	_divisor @ sp[(-4)+-4]
 19088  0189B8  0EF8               	movlw	-8
 19089  0189BA  6CE3               	negf	plusw1,c
 19090  0189BC  0EF9               	movlw	-7
 19091  0189BE  1EE3               	comf	plusw1,f,c
 19092  0189C0  B0D8               	btfsc	status,0,c
 19093  0189C2  2AE3               	incf	plusw1,f,c
 19094                           
 19095                           ;stkvar	_sign @ sp[(-4)+2]
 19096  0189C4  0EFE               	movlw	-2
 19097  0189C6  6AE3               	clrf	plusw1,c
 19098  0189C8  2AE3               	incf	plusw1,f,c
 19099  0189CA                     l8246:
 19100                           
 19101                           ;stkvar	_dividend @ sp[(-4)+-2]
 19102  0189CA  0EFB               	movlw	-5
 19103  0189CC  AEE3               	btfss	plusw1,7,c
 19104  0189CE  D008               	goto	l8252
 19105                           
 19106                           ;stkvar	_dividend @ sp[(-4)+-2]
 19107                           ;stkvar	_dividend @ sp[(-4)+-2]
 19108  0189D0  0EFA               	movlw	-6
 19109  0189D2  6CE3               	negf	plusw1,c
 19110  0189D4  0EFB               	movlw	-5
 19111  0189D6  1EE3               	comf	plusw1,f,c
 19112  0189D8  B0D8               	btfsc	status,0,c
 19113  0189DA  2AE3               	incf	plusw1,f,c
 19114                           
 19115                           ;stkvar	_sign @ sp[(-4)+2]
 19116  0189DC  0EFE               	movlw	-2
 19117  0189DE  70E3               	btg	plusw1,0,c
 19118  0189E0                     l8252:
 19119                           
 19120                           ;stkvar	_quotient @ sp[(-4)+0]
 19121  0189E0  0EFC               	movlw	-4
 19122  0189E2  6AE3               	clrf	plusw1,c
 19123  0189E4  0EFD               	movlw	-3
 19124  0189E6  6AE3               	clrf	plusw1,c
 19125                           
 19126                           ;stkvar	_divisor @ sp[(-4)+-4]
 19127  0189E8  0EF8               	movlw	-8
 19128  0189EA  006F FF8C  F001    	movff	plusw1,btemp
 19129  0189F0  0EF9               	movlw	-7
 19130  0189F2  50E3               	movf	plusw1,w,c
 19131  0189F4  1001               	iorwf	btemp^0,w,c
 19132  0189F6  B4D8               	btfsc	status,2,c
 19133  0189F8  D066               	goto	u6770
 19134                           
 19135                           ;stkvar	_counter @ sp[(-4)+3]
 19136  0189FA  0EFF               	movlw	-1
 19137  0189FC  6AE3               	clrf	plusw1,c
 19138  0189FE  D012               	goto	L21
 19139  018A00                     l8258:
 19140                           
 19141                           ;stkvar	_divisor @ sp[(-4)+-4]
 19142  018A00  0EF8               	movlw	-8
 19143  018A02  50E3               	movf	plusw1,w,c
 19144  018A04  90D8               	bcf	status,0,c
 19145  018A06  34E8               	rlcf	wreg,w,c
 19146  018A08  6E01               	movwf	btemp^0,c
 19147  018A0A  0EF8               	movlw	-8
 19148  018A0C  0060  F007  FFE3   	movff	btemp,plusw1
 19149  018A12  0EF9               	movlw	-7
 19150  018A14  50E3               	movf	plusw1,w,c
 19151  018A16  34E8               	rlcf	wreg,w,c
 19152  018A18  6E01               	movwf	btemp^0,c
 19153  018A1A  0EF9               	movlw	-7
 19154  018A1C  0060  F007  FFE3   	movff	btemp,plusw1
 19155                           
 19156                           ;stkvar	_counter @ sp[(-4)+3]
 19157  018A22  0EFF               	movlw	-1
 19158  018A24                     L21:
 19159  018A24  2AE3               	incf	plusw1,f,c
 19160                           
 19161                           ;stkvar	_divisor @ sp[(-4)+-4]
 19162  018A26  0EF9               	movlw	-7
 19163  018A28  AEE3               	btfss	plusw1,7,c
 19164  018A2A  D7EA               	goto	l8258
 19165  018A2C                     u6750:
 19166                           
 19167                           ;stkvar	_quotient @ sp[(-4)+0]
 19168  018A2C  0EFC               	movlw	-4
 19169  018A2E  50E3               	movf	plusw1,w,c
 19170  018A30  90D8               	bcf	status,0,c
 19171  018A32  34E8               	rlcf	wreg,w,c
 19172  018A34  6E01               	movwf	btemp^0,c
 19173  018A36  0EFC               	movlw	-4
 19174  018A38  0060  F007  FFE3   	movff	btemp,plusw1
 19175  018A3E  0EFD               	movlw	-3
 19176  018A40  50E3               	movf	plusw1,w,c
 19177  018A42  34E8               	rlcf	wreg,w,c
 19178  018A44  6E01               	movwf	btemp^0,c
 19179  018A46  0EFD               	movlw	-3
 19180  018A48  0060  F007  FFE3   	movff	btemp,plusw1
 19181                           
 19182                           ;stkvar	_divisor @ sp[(-4)+-4]
 19183  018A4E  0EF8               	movlw	-8
 19184  018A50  006F FF8C  F00B    	movff	plusw1,btemp+10
 19185  018A56  0EF9               	movlw	-7
 19186  018A58  006F FF8C  F00C    	movff	plusw1,btemp+11
 19187                           
 19188                           ;stkvar	_dividend @ sp[(-4)+-2]
 19189  018A5E  0EFA               	movlw	-6
 19190  018A60  006F FF8C  F009    	movff	plusw1,btemp+8
 19191  018A66  0EFB               	movlw	-5
 19192  018A68  006F FF8C  F00A    	movff	plusw1,btemp+9
 19193  018A6E  500B               	movf	(btemp+10)^0,w,c
 19194  018A70  5C09               	subwf	(btemp+8)^0,w,c
 19195  018A72  500C               	movf	(btemp+11)^0,w,c
 19196  018A74  580A               	subwfb	(btemp+9)^0,w,c
 19197  018A76  A0D8               	btfss	status,0,c
 19198  018A78  D016               	goto	l8272
 19199                           
 19200                           ;stkvar	_divisor @ sp[(-4)+-4]
 19201                           ;stkvar	_dividend @ sp[(-4)+-2]
 19202  018A7A  0EFA               	movlw	-6
 19203  018A7C  50E3               	movf	plusw1,w,c
 19204  018A7E  6E01               	movwf	btemp^0,c
 19205  018A80  0EF8               	movlw	-8
 19206  018A82  50E3               	movf	plusw1,w,c
 19207  018A84  5E01               	subwf	btemp^0,f,c
 19208  018A86  0EFA               	movlw	-6
 19209  018A88  0060  F007  FFE3   	movff	btemp,plusw1
 19210  018A8E  0EFB               	movlw	-5
 19211  018A90  50E3               	movf	plusw1,w,c
 19212  018A92  6E01               	movwf	btemp^0,c
 19213  018A94  0EF9               	movlw	-7
 19214  018A96  50E3               	movf	plusw1,w,c
 19215  018A98  5A01               	subwfb	btemp^0,f,c
 19216  018A9A  0EFB               	movlw	-5
 19217  018A9C  0060  F007  FFE3   	movff	btemp,plusw1
 19218                           
 19219                           ;stkvar	_quotient @ sp[(-4)+0]
 19220  018AA2  0EFC               	movlw	-4
 19221  018AA4  80E3               	bsf	plusw1,0,c
 19222  018AA6                     l8272:
 19223                           
 19224                           ;stkvar	_divisor @ sp[(-4)+-4]
 19225  018AA6  90D8               	bcf	status,0,c
 19226  018AA8  0EF9               	movlw	-7
 19227  018AAA  32E3               	rrcf	plusw1,f,c
 19228  018AAC  0EF8               	movlw	-8
 19229  018AAE  32E3               	rrcf	plusw1,f,c
 19230                           
 19231                           ;stkvar	_counter @ sp[(-4)+3]
 19232  018AB0  0EFF               	movlw	-1
 19233  018AB2  50E3               	movf	plusw1,w,c
 19234  018AB4  6E01               	movwf	btemp^0,c
 19235  018AB6  0E01               	movlw	1
 19236  018AB8  5E01               	subwf	btemp^0,f,c
 19237  018ABA  0EFF               	movlw	-1
 19238  018ABC  0060  F007  FFE3   	movff	btemp,plusw1
 19239  018AC2  A4D8               	btfss	status,2,c
 19240  018AC4  D7B3               	goto	u6750
 19241  018AC6                     u6770:
 19242                           
 19243                           ;stkvar	_sign @ sp[(-4)+2]
 19244  018AC6  0EFE               	movlw	-2
 19245  018AC8  50E3               	movf	plusw1,w,c
 19246  018ACA  B4D8               	btfsc	status,2,c
 19247  018ACC  D006               	goto	l8280
 19248                           
 19249                           ;stkvar	_quotient @ sp[(-4)+0]
 19250                           ;stkvar	_quotient @ sp[(-4)+0]
 19251  018ACE  0EFC               	movlw	-4
 19252  018AD0  6CE3               	negf	plusw1,c
 19253  018AD2  0EFD               	movlw	-3
 19254  018AD4  1EE3               	comf	plusw1,f,c
 19255  018AD6  B0D8               	btfsc	status,0,c
 19256  018AD8  2AE3               	incf	plusw1,f,c
 19257  018ADA                     l8280:
 19258                           
 19259                           ;stkvar	_quotient @ sp[(-4)+0]
 19260  018ADA  0EFC               	movlw	-4
 19261  018ADC  006F FF8C  F001    	movff	plusw1,btemp
 19262  018AE2  0EFD               	movlw	-3
 19263  018AE4  006F FF8C  F002    	movff	plusw1,btemp+1
 19264                           
 19265                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19266  018AEA  0EF8               	movlw	248
 19267  018AEC  26E1               	addwf	fsr1l,f,c
 19268  018AEE  0EFF               	movlw	255
 19269  018AF0  22E2               	addwfc	fsr1h,f,c
 19270  018AF2  0012               	return		;funcret
 19271  018AF4                     __end_of___awdiv:
 19272                           	opt callstack 0
 19273                           
 19274 ;; *************** function _dtoa *****************
 19275 ;; Defined at:
 19276 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19277 ;; Parameters:    Size  Location     Type
 19278 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19279 ;;		 -> f(6), NULL(0), 
 19280 ;;  d               8  [STACK] long long 
 19281 ;; Auto vars:     Size  Location     Type
 19282 ;;  n               8  [STACK] long long 
 19283 ;;  i               2  [STACK] int 
 19284 ;;  s               2  [STACK] int 
 19285 ;;  w               2  [STACK] int 
 19286 ;;  p               2  [STACK] int 
 19287 ;; Return value:  Size  Location     Type
 19288 ;;                  2  [STACK] int 
 19289 ;; Registers used:
 19290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19291 ;; Tracked objects:
 19292 ;;		On entry : 0/0
 19293 ;;		On exit  : 0/0
 19294 ;;		Unchanged: 0/0
 19295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19300 ;;Total ram usage:        0 bytes
 19301 ;; Hardware stack levels used:    1
 19302 ;; Hardware stack levels required when called:   20
 19303 ;; This function calls:
 19304 ;;		___aodiv
 19305 ;;		___aomod
 19306 ;;		_abs
 19307 ;;		_pad
 19308 ;; This function is called by:
 19309 ;;		_vfpfcnvrt
 19310 ;; This function uses a reentrant model
 19311 ;;
 19312                           
 19313                           	psect	text66
 19314  01535C                     __ptext66:
 19315                           	opt callstack 0
 19316  01535C                     _dtoa:
 19317                           	opt callstack 0
 19318                           
 19319                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19320  01535C  0E12               	movlw	18
 19321  01535E  26E1               	addwf	fsr1l,f,c
 19322  015360  0E00               	movlw	0
 19323  015362  22E2               	addwfc	fsr1h,f,c
 19324                           
 19325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19326                           ;stkvar	_d @ sp[(-18)+-10]
 19327                           
 19328                           ;incstack = 0
 19329 ;; hardware stack exceeded
 19330  015364  0EE4               	movlw	228
 19331  015366  24E1               	addwf	fsr1l,w,c
 19332  015368  6ED9               	movwf	fsr2l,c
 19333  01536A  0EFF               	movlw	255
 19334  01536C  20E2               	addwfc	fsr1h,w,c
 19335  01536E  6EDA               	movwf	fsr2h,c
 19336                           
 19337                           ;stkvar	_n @ sp[(-18)+2]
 19338  015370  0E08               	movlw	8
 19339  015372  6E01               	movwf	btemp^0,c
 19340  015374  0EF0               	movlw	-16
 19341  015376                     us1047999:
 19342  015376  006F FF7B FFE3     	movff	postinc2,plusw1
 19343  01537C  28E8               	incf	wreg,w,c
 19344  01537E  2E01               	decfsz	btemp^0,f,c
 19345  015380  D7FA               	bra	us1047999
 19346                           
 19347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19348                           ;stkvar	_n @ sp[(-18)+2]
 19349  015382  0EF7               	movlw	-9
 19350  015384  AEE3               	btfss	plusw1,7,c
 19351  015386  D002               	goto	u10480
 19352  015388  0E01               	movlw	1
 19353  01538A  D001               	goto	u10490
 19354  01538C                     u10480:
 19355  01538C  0E00               	movlw	0
 19356  01538E                     u10490:
 19357  01538E  6E0B               	movwf	(btemp+10)^0,c
 19358  015390  6A0C               	clrf	(btemp+11)^0,c
 19359                           
 19360                           ;stkvar	_s @ sp[(-18)+12]
 19361  015392  0EFA               	movlw	-6
 19362  015394  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19363  01539A  0EFB               	movlw	-5
 19364  01539C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19365                           
 19366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19367                           ;stkvar	_s @ sp[(-18)+12]
 19368  0153A2  0EFA               	movlw	-6
 19369  0153A4  006F FF8C  F001    	movff	plusw1,btemp
 19370  0153AA  0EFB               	movlw	-5
 19371  0153AC  50E3               	movf	plusw1,w,c
 19372  0153AE  1001               	iorwf	btemp^0,w,c
 19373  0153B0  B4D8               	btfsc	status,2,c
 19374  0153B2  D025               	goto	u10510
 19375                           
 19376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19377                           ;stkvar	_n @ sp[(-18)+2]
 19378                           ;stkvar	_n @ sp[(-18)+2]
 19379  0153B4  0EF0               	movlw	-16
 19380  0153B6  6CE3               	negf	plusw1,c
 19381  0153B8  0EF1               	movlw	-15
 19382  0153BA  1EE3               	comf	plusw1,f,c
 19383  0153BC  0EF2               	movlw	-14
 19384  0153BE  1EE3               	comf	plusw1,f,c
 19385  0153C0  0EF3               	movlw	-13
 19386  0153C2  1EE3               	comf	plusw1,f,c
 19387  0153C4  0EF4               	movlw	-12
 19388  0153C6  1EE3               	comf	plusw1,f,c
 19389  0153C8  0EF5               	movlw	-11
 19390  0153CA  1EE3               	comf	plusw1,f,c
 19391  0153CC  0EF6               	movlw	-10
 19392  0153CE  1EE3               	comf	plusw1,f,c
 19393  0153D0  0EF7               	movlw	-9
 19394  0153D2  1EE3               	comf	plusw1,f,c
 19395  0153D4  E314               	bnc	u10510
 19396  0153D6  0EF1               	movlw	-15
 19397  0153D8  2AE3               	incf	plusw1,f,c
 19398  0153DA  E311               	bnc	u10510
 19399  0153DC  0EF2               	movlw	-14
 19400  0153DE  2AE3               	incf	plusw1,f,c
 19401  0153E0  E30E               	bnc	u10510
 19402  0153E2  0EF3               	movlw	-13
 19403  0153E4  2AE3               	incf	plusw1,f,c
 19404  0153E6  E30B               	bnc	u10510
 19405  0153E8  0EF4               	movlw	-12
 19406  0153EA  2AE3               	incf	plusw1,f,c
 19407  0153EC  E308               	bnc	u10510
 19408  0153EE  0EF5               	movlw	-11
 19409  0153F0  2AE3               	incf	plusw1,f,c
 19410  0153F2  E305               	bnc	u10510
 19411  0153F4  0EF6               	movlw	-10
 19412  0153F6  2AE3               	incf	plusw1,f,c
 19413  0153F8  E302               	bnc	u10510
 19414  0153FA  0EF7               	movlw	-9
 19415  0153FC  2AE3               	incf	plusw1,f,c
 19416  0153FE                     u10510:
 19417                           
 19418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19419  0153FE  AE24               	btfss	(_prec+1)^0,7,c
 19420                           
 19421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19422  015400  9225               	bcf	_flags^0,1,c
 19423                           
 19424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19425  015402  BE24               	btfsc	(_prec+1)^0,7,c
 19426  015404  D005               	goto	u10530
 19427  015406  5024               	movf	(_prec+1)^0,w,c
 19428  015408  E110               	bnz	l11500
 19429  01540A  0423               	decf	_prec^0,w,c
 19430  01540C  B0D8               	btfsc	status,0,c
 19431  01540E  D00D               	goto	l11500
 19432  015410                     u10530:
 19433  015410  0E01               	movlw	1
 19434  015412  6E0B               	movwf	(btemp+10)^0,c
 19435  015414  0E00               	movlw	0
 19436  015416  6E0C               	movwf	(btemp+11)^0,c
 19437                           
 19438                           ;stkvar	_p @ sp[(-18)+16]
 19439  015418  0EFE               	movlw	-2
 19440  01541A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19441  015420  0EFF               	movlw	-1
 19442  015422  0060  F033  FFE3   	movff	btemp+11,plusw1
 19443  015428  D008               	goto	l2120
 19444  01542A                     l11500:
 19445                           
 19446                           ;stkvar	_p @ sp[(-18)+16]
 19447  01542A  0EFE               	movlw	-2
 19448  01542C  0060  F08F  FFE3   	movff	_prec,plusw1
 19449  015432  0EFF               	movlw	-1
 19450  015434  0060  F093  FFE3   	movff	_prec+1,plusw1
 19451  01543A                     l2120:
 19452                           
 19453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19454                           ;stkvar	_w @ sp[(-18)+14]
 19455  01543A  0EFC               	movlw	-4
 19456  01543C  0060  F087  FFE3   	movff	_width,plusw1
 19457  015442  0EFD               	movlw	-3
 19458  015444  0060  F08B  FFE3   	movff	_width+1,plusw1
 19459                           
 19460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19461                           ;stkvar	_s @ sp[(-18)+12]
 19462  01544A  0EFA               	movlw	-6
 19463  01544C  006F FF8C  F001    	movff	plusw1,btemp
 19464  015452  0EFB               	movlw	-5
 19465  015454  50E3               	movf	plusw1,w,c
 19466  015456  1001               	iorwf	btemp^0,w,c
 19467  015458  A4D8               	btfss	status,2,c
 19468  01545A  D002               	goto	u10550
 19469  01545C  A425               	btfss	_flags^0,2,c
 19470  01545E  D00A               	goto	l11508
 19471  015460                     u10550:
 19472                           
 19473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19474                           ;stkvar	_w @ sp[(-18)+14]
 19475  015460  50E1               	movf	fsr1l,w,c
 19476  015462  0FFC               	addlw	-4
 19477  015464  6ED9               	movwf	fsr2l,c
 19478  015466  50E2               	movf	fsr1h,w,c
 19479  015468  6EDA               	movwf	fsr2h,c
 19480  01546A  0EFF               	movlw	255
 19481  01546C  22DA               	addwfc	fsr2h,f,c
 19482  01546E  06DE               	decf	postinc2,f,c
 19483  015470  0E00               	movlw	0
 19484  015472  5ADD               	subwfb	postdec2,f,c
 19485  015474                     l11508:
 19486                           
 19487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19488  015474  0E4F               	movlw	79
 19489  015476  6E0B               	movwf	(btemp+10)^0,c
 19490  015478  0E00               	movlw	0
 19491  01547A  6E0C               	movwf	(btemp+11)^0,c
 19492                           
 19493                           ;stkvar	_i @ sp[(-18)+10]
 19494  01547C  0EF8               	movlw	-8
 19495  01547E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19496  015484  0EF9               	movlw	-7
 19497  015486  0060  F033  FFE3   	movff	btemp+11,plusw1
 19498                           
 19499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19500  01548C  0103               	movlb	3	; () banked
 19501  01548E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 19502                           
 19503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19504  015490  D109               	goto	l11522
 19505  015492                     l11512:
 19506                           
 19507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19508                           ;stkvar	_i @ sp[(-18)+10]
 19509  015492  50E1               	movf	fsr1l,w,c
 19510  015494  0FF8               	addlw	-8
 19511  015496  6ED9               	movwf	fsr2l,c
 19512  015498  50E2               	movf	fsr1h,w,c
 19513  01549A  6EDA               	movwf	fsr2h,c
 19514  01549C  0EFF               	movlw	255
 19515  01549E  22DA               	addwfc	fsr2h,f,c
 19516  0154A0  06DE               	decf	postinc2,f,c
 19517  0154A2  0E00               	movlw	0
 19518  0154A4  5ADD               	subwfb	postdec2,f,c
 19519                           
 19520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19521  0154A6  0E0A               	movlw	10
 19522  0154A8  6EE6               	movwf	postinc1,c
 19523  0154AA  0E00               	movlw	0
 19524  0154AC  6EE6               	movwf	postinc1,c
 19525  0154AE  0E00               	movlw	0
 19526  0154B0  6EE6               	movwf	postinc1,c
 19527  0154B2  0E00               	movlw	0
 19528  0154B4  6EE6               	movwf	postinc1,c
 19529  0154B6  0E00               	movlw	0
 19530  0154B8  6EE6               	movwf	postinc1,c
 19531  0154BA  0E00               	movlw	0
 19532  0154BC  6EE6               	movwf	postinc1,c
 19533  0154BE  0E00               	movlw	0
 19534  0154C0  6EE6               	movwf	postinc1,c
 19535  0154C2  0E00               	movlw	0
 19536  0154C4  6EE6               	movwf	postinc1,c
 19537                           
 19538                           ;stkvar	_n @ sp[(-26)+2]
 19539  0154C6  50E1               	movf	fsr1l,w,c
 19540  0154C8  0FE8               	addlw	-24
 19541  0154CA  6ED9               	movwf	fsr2l,c
 19542  0154CC  50E2               	movf	fsr1h,w,c
 19543  0154CE  6EDA               	movwf	fsr2h,c
 19544  0154D0  0EFF               	movlw	255
 19545  0154D2  22DA               	addwfc	fsr2h,f,c
 19546  0154D4  006F FF7B FFE6     	movff	postinc2,postinc1
 19547  0154DA  006F FF7B FFE6     	movff	postinc2,postinc1
 19548  0154E0  006F FF7B FFE6     	movff	postinc2,postinc1
 19549  0154E6  006F FF7B FFE6     	movff	postinc2,postinc1
 19550  0154EC  006F FF7B FFE6     	movff	postinc2,postinc1
 19551  0154F2  006F FF7B FFE6     	movff	postinc2,postinc1
 19552  0154F8  006F FF7B FFE6     	movff	postinc2,postinc1
 19553  0154FE  006F FF7B FFE6     	movff	postinc2,postinc1
 19554  015504  ECA1  F0B9         	call	___aomod	;wreg free
 19555  015508  52E5               	movf	postdec1,f,c
 19556  01550A  006F FF9C  F018    	movff	indf1,btemp+23
 19557  015510  52E5               	movf	postdec1,f,c
 19558  015512  006F FF9C  F017    	movff	indf1,btemp+22
 19559  015518  52E5               	movf	postdec1,f,c
 19560  01551A  006F FF9C  F016    	movff	indf1,btemp+21
 19561  015520  52E5               	movf	postdec1,f,c
 19562  015522  006F FF9C  F015    	movff	indf1,btemp+20
 19563  015528  52E5               	movf	postdec1,f,c
 19564  01552A  006F FF9C  F014    	movff	indf1,btemp+19
 19565  015530  52E5               	movf	postdec1,f,c
 19566  015532  006F FF9C  F013    	movff	indf1,btemp+18
 19567  015538  52E5               	movf	postdec1,f,c
 19568  01553A  006F FF9C  F012    	movff	indf1,btemp+17
 19569  015540  52E5               	movf	postdec1,f,c
 19570  015542  006F FF9C  F011    	movff	indf1,btemp+16
 19571  015548  0EF8               	movlw	248
 19572  01554A  26E1               	addwf	fsr1l,f,c
 19573  01554C  0EFF               	movlw	255
 19574  01554E  22E2               	addwfc	fsr1h,f,c
 19575  015550  0060  F044  F00B   	movff	btemp+16,btemp+10
 19576  015556  0060  F048  F00C   	movff	btemp+17,btemp+11
 19577  01555C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19578  015562  0060  F033  FFE6   	movff	btemp+11,postinc1
 19579  015568  EC1C  F0D5         	call	_abs	;wreg free
 19580  01556C  0E30               	movlw	48
 19581  01556E  2601               	addwf	btemp^0,f,c
 19582                           
 19583                           ;stkvar	_i @ sp[(-18)+10]
 19584  015570  0EF8               	movlw	-8
 19585  015572  006F FF8C  F00B    	movff	plusw1,btemp+10
 19586  015578  0EF9               	movlw	-7
 19587  01557A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19588  015580  0E94               	movlw	low _dbuf
 19589  015582  240B               	addwf	(btemp+10)^0,w,c
 19590  015584  6ED9               	movwf	fsr2l,c
 19591  015586  0E03               	movlw	high _dbuf
 19592  015588  200C               	addwfc	(btemp+11)^0,w,c
 19593  01558A  6EDA               	movwf	fsr2h,c
 19594  01558C  0060  F007  FFDF   	movff	btemp,indf2
 19595                           
 19596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19597                           ;stkvar	_p @ sp[(-18)+16]
 19598  015592  50E1               	movf	fsr1l,w,c
 19599  015594  0FFE               	addlw	-2
 19600  015596  6ED9               	movwf	fsr2l,c
 19601  015598  50E2               	movf	fsr1h,w,c
 19602  01559A  6EDA               	movwf	fsr2h,c
 19603  01559C  0EFF               	movlw	255
 19604  01559E  22DA               	addwfc	fsr2h,f,c
 19605  0155A0  06DE               	decf	postinc2,f,c
 19606  0155A2  0E00               	movlw	0
 19607  0155A4  5ADD               	subwfb	postdec2,f,c
 19608                           
 19609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19610                           ;stkvar	_w @ sp[(-18)+14]
 19611  0155A6  50E1               	movf	fsr1l,w,c
 19612  0155A8  0FFC               	addlw	-4
 19613  0155AA  6ED9               	movwf	fsr2l,c
 19614  0155AC  50E2               	movf	fsr1h,w,c
 19615  0155AE  6EDA               	movwf	fsr2h,c
 19616  0155B0  0EFF               	movlw	255
 19617  0155B2  22DA               	addwfc	fsr2h,f,c
 19618  0155B4  06DE               	decf	postinc2,f,c
 19619  0155B6  0E00               	movlw	0
 19620  0155B8  5ADD               	subwfb	postdec2,f,c
 19621                           
 19622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19623  0155BA  0E0A               	movlw	10
 19624  0155BC  6EE6               	movwf	postinc1,c
 19625  0155BE  0E00               	movlw	0
 19626  0155C0  6EE6               	movwf	postinc1,c
 19627  0155C2  0E00               	movlw	0
 19628  0155C4  6EE6               	movwf	postinc1,c
 19629  0155C6  0E00               	movlw	0
 19630  0155C8  6EE6               	movwf	postinc1,c
 19631  0155CA  0E00               	movlw	0
 19632  0155CC  6EE6               	movwf	postinc1,c
 19633  0155CE  0E00               	movlw	0
 19634  0155D0  6EE6               	movwf	postinc1,c
 19635  0155D2  0E00               	movlw	0
 19636  0155D4  6EE6               	movwf	postinc1,c
 19637  0155D6  0E00               	movlw	0
 19638  0155D8  6EE6               	movwf	postinc1,c
 19639                           
 19640                           ;stkvar	_n @ sp[(-26)+2]
 19641  0155DA  50E1               	movf	fsr1l,w,c
 19642  0155DC  0FE8               	addlw	-24
 19643  0155DE  6ED9               	movwf	fsr2l,c
 19644  0155E0  50E2               	movf	fsr1h,w,c
 19645  0155E2  6EDA               	movwf	fsr2h,c
 19646  0155E4  0EFF               	movlw	255
 19647  0155E6  22DA               	addwfc	fsr2h,f,c
 19648  0155E8  006F FF7B FFE6     	movff	postinc2,postinc1
 19649  0155EE  006F FF7B FFE6     	movff	postinc2,postinc1
 19650  0155F4  006F FF7B FFE6     	movff	postinc2,postinc1
 19651  0155FA  006F FF7B FFE6     	movff	postinc2,postinc1
 19652  015600  006F FF7B FFE6     	movff	postinc2,postinc1
 19653  015606  006F FF7B FFE6     	movff	postinc2,postinc1
 19654  01560C  006F FF7B FFE6     	movff	postinc2,postinc1
 19655  015612  006F FF7B FFE6     	movff	postinc2,postinc1
 19656  015618  EC27  F0B7         	call	___aodiv	;wreg free
 19657  01561C  52E5               	movf	postdec1,f,c
 19658  01561E  006F FF9C  F018    	movff	indf1,btemp+23
 19659  015624  52E5               	movf	postdec1,f,c
 19660  015626  006F FF9C  F017    	movff	indf1,btemp+22
 19661  01562C  52E5               	movf	postdec1,f,c
 19662  01562E  006F FF9C  F016    	movff	indf1,btemp+21
 19663  015634  52E5               	movf	postdec1,f,c
 19664  015636  006F FF9C  F015    	movff	indf1,btemp+20
 19665  01563C  52E5               	movf	postdec1,f,c
 19666  01563E  006F FF9C  F014    	movff	indf1,btemp+19
 19667  015644  52E5               	movf	postdec1,f,c
 19668  015646  006F FF9C  F013    	movff	indf1,btemp+18
 19669  01564C  52E5               	movf	postdec1,f,c
 19670  01564E  006F FF9C  F012    	movff	indf1,btemp+17
 19671  015654  52E5               	movf	postdec1,f,c
 19672  015656  006F FF9C  F011    	movff	indf1,btemp+16
 19673  01565C  0EF8               	movlw	248
 19674  01565E  26E1               	addwf	fsr1l,f,c
 19675  015660  0EFF               	movlw	255
 19676  015662  22E2               	addwfc	fsr1h,f,c
 19677                           
 19678                           ;stkvar	_n @ sp[(-18)+2]
 19679  015664  0EF0               	movlw	-16
 19680  015666  0060  F047  FFE3   	movff	btemp+16,plusw1
 19681  01566C  0EF1               	movlw	-15
 19682  01566E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19683  015674  0EF2               	movlw	-14
 19684  015676  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19685  01567C  0EF3               	movlw	-13
 19686  01567E  0060  F053  FFE3   	movff	btemp+19,plusw1
 19687  015684  0EF4               	movlw	-12
 19688  015686  0060  F057  FFE3   	movff	btemp+20,plusw1
 19689  01568C  0EF5               	movlw	-11
 19690  01568E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19691  015694  0EF6               	movlw	-10
 19692  015696  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19693  01569C  0EF7               	movlw	-9
 19694  01569E  0060  F063  FFE3   	movff	btemp+23,plusw1
 19695  0156A4                     l11522:
 19696                           
 19697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19698                           ;stkvar	_i @ sp[(-18)+10]
 19699  0156A4  0EF9               	movlw	-7
 19700  0156A6  BEE3               	btfsc	plusw1,7,c
 19701  0156A8  D036               	goto	u10600
 19702  0156AA  0EF9               	movlw	-7
 19703  0156AC  50E3               	movf	plusw1,w,c
 19704  0156AE  E104               	bnz	u10560
 19705  0156B0  0EF8               	movlw	-8
 19706  0156B2  04E3               	decf	plusw1,w,c
 19707  0156B4  A0D8               	btfss	status,0,c
 19708  0156B6  D02F               	goto	u10600
 19709  0156B8                     u10560:
 19710                           
 19711                           ;stkvar	_n @ sp[(-18)+2]
 19712  0156B8  0EF0               	movlw	-16
 19713  0156BA  50E3               	movf	plusw1,w,c
 19714  0156BC  E115               	bnz	u10571
 19715  0156BE  0EF1               	movlw	-15
 19716  0156C0  50E3               	movf	plusw1,w,c
 19717  0156C2  E112               	bnz	u10571
 19718  0156C4  0EF2               	movlw	-14
 19719  0156C6  50E3               	movf	plusw1,w,c
 19720  0156C8  E10F               	bnz	u10571
 19721  0156CA  0EF3               	movlw	-13
 19722  0156CC  50E3               	movf	plusw1,w,c
 19723  0156CE  E10C               	bnz	u10571
 19724  0156D0  0EF4               	movlw	-12
 19725  0156D2  50E3               	movf	plusw1,w,c
 19726  0156D4  E109               	bnz	u10571
 19727  0156D6  0EF5               	movlw	-11
 19728  0156D8  50E3               	movf	plusw1,w,c
 19729  0156DA  E106               	bnz	u10571
 19730  0156DC  0EF6               	movlw	-10
 19731  0156DE  50E3               	movf	plusw1,w,c
 19732  0156E0  E103               	bnz	u10571
 19733  0156E2  0EF7               	movlw	-9
 19734  0156E4  50E3               	movf	plusw1,w,c
 19735  0156E6  A4D8               	btfss	status,2,c
 19736  0156E8                     u10571:
 19737  0156E8  D6D4               	goto	l11512
 19738                           
 19739                           ;stkvar	_p @ sp[(-18)+16]
 19740  0156EA  0EFF               	movlw	-1
 19741  0156EC  BEE3               	btfsc	plusw1,7,c
 19742  0156EE  D007               	goto	u10580
 19743  0156F0  0EFF               	movlw	-1
 19744  0156F2  50E3               	movf	plusw1,w,c
 19745  0156F4  E103               	bnz	u10581
 19746  0156F6  0EFE               	movlw	-2
 19747  0156F8  04E3               	decf	plusw1,w,c
 19748  0156FA  B0D8               	btfsc	status,0,c
 19749  0156FC                     u10581:
 19750  0156FC  D6CA               	goto	l11512
 19751  0156FE                     u10580:
 19752                           
 19753                           ;stkvar	_w @ sp[(-18)+14]
 19754  0156FE  0EFD               	movlw	-3
 19755  015700  BEE3               	btfsc	plusw1,7,c
 19756  015702  D009               	goto	u10600
 19757  015704  0EFD               	movlw	-3
 19758  015706  50E3               	movf	plusw1,w,c
 19759  015708  E104               	bnz	u10590
 19760  01570A  0EFC               	movlw	-4
 19761  01570C  04E3               	decf	plusw1,w,c
 19762  01570E  A0D8               	btfss	status,0,c
 19763  015710  D002               	goto	u10600
 19764  015712                     u10590:
 19765  015712  B225               	btfsc	_flags^0,1,c
 19766  015714  D6BE               	goto	l11512
 19767  015716                     u10600:
 19768                           
 19769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19770                           ;stkvar	_s @ sp[(-18)+12]
 19771  015716  0EFA               	movlw	-6
 19772  015718  006F FF8C  F001    	movff	plusw1,btemp
 19773  01571E  0EFB               	movlw	-5
 19774  015720  50E3               	movf	plusw1,w,c
 19775  015722  1001               	iorwf	btemp^0,w,c
 19776  015724  A4D8               	btfss	status,2,c
 19777  015726  D002               	goto	u10620
 19778  015728  A425               	btfss	_flags^0,2,c
 19779  01572A  D033               	goto	l11546
 19780  01572C                     u10620:
 19781                           
 19782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19783                           ;stkvar	_i @ sp[(-18)+10]
 19784  01572C  50E1               	movf	fsr1l,w,c
 19785  01572E  0FF8               	addlw	-8
 19786  015730  6ED9               	movwf	fsr2l,c
 19787  015732  50E2               	movf	fsr1h,w,c
 19788  015734  6EDA               	movwf	fsr2h,c
 19789  015736  0EFF               	movlw	255
 19790  015738  22DA               	addwfc	fsr2h,f,c
 19791  01573A  06DE               	decf	postinc2,f,c
 19792  01573C  0E00               	movlw	0
 19793  01573E  5ADD               	subwfb	postdec2,f,c
 19794                           
 19795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19796                           ;stkvar	_s @ sp[(-18)+12]
 19797  015740  0EFA               	movlw	-6
 19798  015742  006F FF8C  F001    	movff	plusw1,btemp
 19799  015748  0EFB               	movlw	-5
 19800  01574A  50E3               	movf	plusw1,w,c
 19801  01574C  1001               	iorwf	btemp^0,w,c
 19802  01574E  A4D8               	btfss	status,2,c
 19803  015750  D002               	goto	l11542
 19804  015752  0E2B               	movlw	43
 19805  015754  D001               	goto	L22
 19806  015756                     l11542:
 19807  015756  0E2D               	movlw	45
 19808  015758                     L22:
 19809  015758  6E0B               	movwf	(btemp+10)^0,c
 19810  01575A  0E00               	movlw	0
 19811  01575C  6E0C               	movwf	(btemp+11)^0,c
 19812                           
 19813                           ;stkvar	_dtoa$5310 @ sp[(-18)+0]
 19814  01575E  0EEE               	movlw	-18
 19815  015760  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19816  015766  0EEF               	movlw	-17
 19817  015768  0060  F033  FFE3   	movff	btemp+11,plusw1
 19818                           
 19819                           ;stkvar	_dtoa$5310 @ sp[(-18)+0]
 19820                           ;stkvar	_i @ sp[(-18)+10]
 19821  01576E  0EF8               	movlw	-8
 19822  015770  006F FF8C  F00B    	movff	plusw1,btemp+10
 19823  015776  0EF9               	movlw	-7
 19824  015778  006F FF8C  F00C    	movff	plusw1,btemp+11
 19825  01577E  0E94               	movlw	low _dbuf
 19826  015780  240B               	addwf	(btemp+10)^0,w,c
 19827  015782  6ED9               	movwf	fsr2l,c
 19828  015784  0E03               	movlw	high _dbuf
 19829  015786  200C               	addwfc	(btemp+11)^0,w,c
 19830  015788  6EDA               	movwf	fsr2h,c
 19831  01578A  0EEE               	movlw	-18
 19832  01578C  006F FF8F FFDF     	movff	plusw1,indf2
 19833  015792                     l11546:
 19834                           
 19835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19836                           ;stkvar	_w @ sp[(-18)+14]
 19837  015792  0EFC               	movlw	-4
 19838  015794  006F FF8F FFE6     	movff	plusw1,postinc1
 19839  01579A  006F FF8F FFE6     	movff	plusw1,postinc1
 19840                           
 19841                           ;stkvar	_i @ sp[(-20)+10]
 19842  0157A0  0E94               	movlw	low _dbuf
 19843  0157A2  6E0B               	movwf	(btemp+10)^0,c
 19844  0157A4  0E03               	movlw	high _dbuf
 19845  0157A6  6E0C               	movwf	(btemp+11)^0,c
 19846  0157A8  0EF6               	movlw	-10
 19847  0157AA  50E3               	movf	plusw1,w,c
 19848  0157AC  260B               	addwf	(btemp+10)^0,f,c
 19849  0157AE  0EF7               	movlw	-9
 19850  0157B0  50E3               	movf	plusw1,w,c
 19851  0157B2  220C               	addwfc	(btemp+11)^0,f,c
 19852  0157B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19853  0157BA  0060  F033  FFE6   	movff	btemp+11,postinc1
 19854                           
 19855                           ;stkvar	_fp @ sp[(-22)+-2]
 19856  0157C0  0EE8               	movlw	-24
 19857  0157C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19858  0157C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19859  0157CE  EC6D  F0C8         	call	_pad	;wreg free
 19860                           
 19861                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19862  0157D2  0EE4               	movlw	228
 19863  0157D4  26E1               	addwf	fsr1l,f,c
 19864  0157D6  0EFF               	movlw	255
 19865  0157D8  22E2               	addwfc	fsr1h,f,c
 19866  0157DA  0012               	return		;funcret
 19867  0157DC                     __end_of_dtoa:
 19868                           	opt callstack 0
 19869                           
 19870 ;; *************** function _abs *****************
 19871 ;; Defined at:
 19872 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19873 ;; Parameters:    Size  Location     Type
 19874 ;;  a               2  [STACK] int 
 19875 ;; Auto vars:     Size  Location     Type
 19876 ;;		None
 19877 ;; Return value:  Size  Location     Type
 19878 ;;                  2  [STACK] int 
 19879 ;; Registers used:
 19880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19881 ;; Tracked objects:
 19882 ;;		On entry : 0/3
 19883 ;;		On exit  : 0/0
 19884 ;;		Unchanged: 0/0
 19885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19890 ;;Total ram usage:        0 bytes
 19891 ;; Hardware stack levels used:    1
 19892 ;; Hardware stack levels required when called:   15
 19893 ;; This function calls:
 19894 ;;		Nothing
 19895 ;; This function is called by:
 19896 ;;		_dtoa
 19897 ;; This function uses a reentrant model
 19898 ;;
 19899                           
 19900                           	psect	text67
 19901  01AA38                     __ptext67:
 19902                           	opt callstack 0
 19903  01AA38                     _abs:
 19904                           	opt callstack 0
 19905                           
 19906                           ;stkvar	_a @ sp[(0)+-2]
 19907                           
 19908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19909                           ;incstack = 0
 19910 ;; hardware stack exceeded
 19911  01AA38  0EFF               	movlw	-1
 19912  01AA3A  BEE3               	btfsc	plusw1,7,c
 19913  01AA3C  D007               	goto	u5730
 19914  01AA3E  0EFF               	movlw	-1
 19915  01AA40  50E3               	movf	plusw1,w,c
 19916  01AA42  E112               	bnz	l7734
 19917  01AA44  0EFE               	movlw	-2
 19918  01AA46  04E3               	decf	plusw1,w,c
 19919  01AA48  B0D8               	btfsc	status,0,c
 19920  01AA4A  D00E               	goto	l7734
 19921  01AA4C                     u5730:
 19922                           
 19923                           ;stkvar	_a @ sp[(0)+-2]
 19924  01AA4C  0EFE               	movlw	-2
 19925  01AA4E  006F FF8C  F001    	movff	plusw1,btemp
 19926  01AA54  1E01               	comf	btemp^0,f,c
 19927  01AA56  0EFF               	movlw	-1
 19928  01AA58  006F FF8C  F002    	movff	plusw1,btemp+1
 19929  01AA5E  1E02               	comf	(btemp+1)^0,f,c
 19930  01AA60  2A01               	incf	btemp^0,f,c
 19931  01AA62  B4D8               	btfsc	status,2,c
 19932  01AA64  2A02               	incf	(btemp+1)^0,f,c
 19933  01AA66  D008               	goto	l3046
 19934  01AA68                     l7734:
 19935                           
 19936                           ;stkvar	_a @ sp[(0)+-2]
 19937  01AA68  0EFE               	movlw	-2
 19938  01AA6A  006F FF8C  F001    	movff	plusw1,btemp
 19939  01AA70  0EFF               	movlw	-1
 19940  01AA72  006F FF8C  F002    	movff	plusw1,btemp+1
 19941  01AA78                     l3046:
 19942                           
 19943                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19944  01AA78  52E5               	movf	postdec1,f,c
 19945  01AA7A  52E5               	movf	postdec1,f,c
 19946  01AA7C  0012               	return		;funcret
 19947  01AA7E                     __end_of_abs:
 19948                           	opt callstack 0
 19949                           
 19950 ;; *************** function ___aomod *****************
 19951 ;; Defined at:
 19952 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19953 ;; Parameters:    Size  Location     Type
 19954 ;;  dividend        8  [STACK] long long 
 19955 ;;  divisor         8  [STACK] long long 
 19956 ;; Auto vars:     Size  Location     Type
 19957 ;;  sign            1  [STACK] unsigned char 
 19958 ;;  counter         1  [STACK] unsigned char 
 19959 ;; Return value:  Size  Location     Type
 19960 ;;                  8  [STACK] long long 
 19961 ;; Registers used:
 19962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19963 ;; Tracked objects:
 19964 ;;		On entry : 0/3
 19965 ;;		On exit  : 0/0
 19966 ;;		Unchanged: 0/0
 19967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19972 ;;Total ram usage:        0 bytes
 19973 ;; Hardware stack levels used:    1
 19974 ;; Hardware stack levels required when called:   15
 19975 ;; This function calls:
 19976 ;;		Nothing
 19977 ;; This function is called by:
 19978 ;;		_dtoa
 19979 ;; This function uses a reentrant model
 19980 ;;
 19981                           
 19982                           	psect	text68
 19983  017342                     __ptext68:
 19984                           	opt callstack 0
 19985  017342                     ___aomod:
 19986                           	opt callstack 0
 19987                           
 19988                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19989  017342  52E6               	movf	postinc1,f,c
 19990  017344  52E6               	movf	postinc1,f,c
 19991                           
 19992                           ;stkvar	_sign @ sp[(-2)+0]
 19993                           
 19994                           ;incstack = 0
 19995 ;; hardware stack exceeded
 19996  017346  0EFE               	movlw	-2
 19997  017348  6AE3               	clrf	plusw1,c
 19998                           
 19999                           ;stkvar	_dividend @ sp[(-2)+-8]
 20000  01734A  0EFD               	movlw	-3
 20001  01734C  AEE3               	btfss	plusw1,7,c
 20002  01734E  D028               	goto	l7892
 20003                           
 20004                           ;stkvar	_dividend @ sp[(-2)+-8]
 20005                           ;stkvar	_dividend @ sp[(-2)+-8]
 20006  017350  0EF6               	movlw	-10
 20007  017352  6CE3               	negf	plusw1,c
 20008  017354  0EF7               	movlw	-9
 20009  017356  1EE3               	comf	plusw1,f,c
 20010  017358  0EF8               	movlw	-8
 20011  01735A  1EE3               	comf	plusw1,f,c
 20012  01735C  0EF9               	movlw	-7
 20013  01735E  1EE3               	comf	plusw1,f,c
 20014  017360  0EFA               	movlw	-6
 20015  017362  1EE3               	comf	plusw1,f,c
 20016  017364  0EFB               	movlw	-5
 20017  017366  1EE3               	comf	plusw1,f,c
 20018  017368  0EFC               	movlw	-4
 20019  01736A  1EE3               	comf	plusw1,f,c
 20020  01736C  0EFD               	movlw	-3
 20021  01736E  1EE3               	comf	plusw1,f,c
 20022  017370  E314               	bnc	u6160
 20023  017372  0EF7               	movlw	-9
 20024  017374  2AE3               	incf	plusw1,f,c
 20025  017376  E311               	bnc	u6160
 20026  017378  0EF8               	movlw	-8
 20027  01737A  2AE3               	incf	plusw1,f,c
 20028  01737C  E30E               	bnc	u6160
 20029  01737E  0EF9               	movlw	-7
 20030  017380  2AE3               	incf	plusw1,f,c
 20031  017382  E30B               	bnc	u6160
 20032  017384  0EFA               	movlw	-6
 20033  017386  2AE3               	incf	plusw1,f,c
 20034  017388  E308               	bnc	u6160
 20035  01738A  0EFB               	movlw	-5
 20036  01738C  2AE3               	incf	plusw1,f,c
 20037  01738E  E305               	bnc	u6160
 20038  017390  0EFC               	movlw	-4
 20039  017392  2AE3               	incf	plusw1,f,c
 20040  017394  E302               	bnc	u6160
 20041  017396  0EFD               	movlw	-3
 20042  017398  2AE3               	incf	plusw1,f,c
 20043  01739A                     u6160:
 20044                           
 20045                           ;stkvar	_sign @ sp[(-2)+0]
 20046  01739A  0EFE               	movlw	-2
 20047  01739C  6AE3               	clrf	plusw1,c
 20048  01739E  2AE3               	incf	plusw1,f,c
 20049  0173A0                     l7892:
 20050                           
 20051                           ;stkvar	_divisor @ sp[(-2)+-16]
 20052  0173A0  0EF5               	movlw	-11
 20053  0173A2  AEE3               	btfss	plusw1,7,c
 20054  0173A4  D025               	goto	u6180
 20055                           
 20056                           ;stkvar	_divisor @ sp[(-2)+-16]
 20057                           ;stkvar	_divisor @ sp[(-2)+-16]
 20058  0173A6  0EEE               	movlw	-18
 20059  0173A8  6CE3               	negf	plusw1,c
 20060  0173AA  0EEF               	movlw	-17
 20061  0173AC  1EE3               	comf	plusw1,f,c
 20062  0173AE  0EF0               	movlw	-16
 20063  0173B0  1EE3               	comf	plusw1,f,c
 20064  0173B2  0EF1               	movlw	-15
 20065  0173B4  1EE3               	comf	plusw1,f,c
 20066  0173B6  0EF2               	movlw	-14
 20067  0173B8  1EE3               	comf	plusw1,f,c
 20068  0173BA  0EF3               	movlw	-13
 20069  0173BC  1EE3               	comf	plusw1,f,c
 20070  0173BE  0EF4               	movlw	-12
 20071  0173C0  1EE3               	comf	plusw1,f,c
 20072  0173C2  0EF5               	movlw	-11
 20073  0173C4  1EE3               	comf	plusw1,f,c
 20074  0173C6  E314               	bnc	u6180
 20075  0173C8  0EEF               	movlw	-17
 20076  0173CA  2AE3               	incf	plusw1,f,c
 20077  0173CC  E311               	bnc	u6180
 20078  0173CE  0EF0               	movlw	-16
 20079  0173D0  2AE3               	incf	plusw1,f,c
 20080  0173D2  E30E               	bnc	u6180
 20081  0173D4  0EF1               	movlw	-15
 20082  0173D6  2AE3               	incf	plusw1,f,c
 20083  0173D8  E30B               	bnc	u6180
 20084  0173DA  0EF2               	movlw	-14
 20085  0173DC  2AE3               	incf	plusw1,f,c
 20086  0173DE  E308               	bnc	u6180
 20087  0173E0  0EF3               	movlw	-13
 20088  0173E2  2AE3               	incf	plusw1,f,c
 20089  0173E4  E305               	bnc	u6180
 20090  0173E6  0EF4               	movlw	-12
 20091  0173E8  2AE3               	incf	plusw1,f,c
 20092  0173EA  E302               	bnc	u6180
 20093  0173EC  0EF5               	movlw	-11
 20094  0173EE  2AE3               	incf	plusw1,f,c
 20095  0173F0                     u6180:
 20096                           
 20097                           ;stkvar	_divisor @ sp[(-2)+-16]
 20098  0173F0  0EEE               	movlw	-18
 20099  0173F2  50E3               	movf	plusw1,w,c
 20100  0173F4  E116               	bnz	u6190
 20101  0173F6  0EEF               	movlw	-17
 20102  0173F8  50E3               	movf	plusw1,w,c
 20103  0173FA  E113               	bnz	u6190
 20104  0173FC  0EF0               	movlw	-16
 20105  0173FE  50E3               	movf	plusw1,w,c
 20106  017400  E110               	bnz	u6190
 20107  017402  0EF1               	movlw	-15
 20108  017404  50E3               	movf	plusw1,w,c
 20109  017406  E10D               	bnz	u6190
 20110  017408  0EF2               	movlw	-14
 20111  01740A  50E3               	movf	plusw1,w,c
 20112  01740C  E10A               	bnz	u6190
 20113  01740E  0EF3               	movlw	-13
 20114  017410  50E3               	movf	plusw1,w,c
 20115  017412  E107               	bnz	u6190
 20116  017414  0EF4               	movlw	-12
 20117  017416  50E3               	movf	plusw1,w,c
 20118  017418  E104               	bnz	u6190
 20119  01741A  0EF5               	movlw	-11
 20120  01741C  50E3               	movf	plusw1,w,c
 20121  01741E  B4D8               	btfsc	status,2,c
 20122  017420  D075               	goto	u6220
 20123  017422                     u6190:
 20124                           
 20125                           ;stkvar	_counter @ sp[(-2)+1]
 20126  017422  0EFF               	movlw	-1
 20127  017424  6AE3               	clrf	plusw1,c
 20128  017426  D012               	goto	L23
 20129  017428                     l7900:
 20130                           
 20131                           ;stkvar	_divisor @ sp[(-2)+-16]
 20132  017428  90D8               	bcf	status,0,c
 20133  01742A  0EEE               	movlw	-18
 20134  01742C  36E3               	rlcf	plusw1,f,c
 20135  01742E  0EEF               	movlw	-17
 20136  017430  36E3               	rlcf	plusw1,f,c
 20137  017432  0EF0               	movlw	-16
 20138  017434  36E3               	rlcf	plusw1,f,c
 20139  017436  0EF1               	movlw	-15
 20140  017438  36E3               	rlcf	plusw1,f,c
 20141  01743A  0EF2               	movlw	-14
 20142  01743C  36E3               	rlcf	plusw1,f,c
 20143  01743E  0EF3               	movlw	-13
 20144  017440  36E3               	rlcf	plusw1,f,c
 20145  017442  0EF4               	movlw	-12
 20146  017444  36E3               	rlcf	plusw1,f,c
 20147  017446  0EF5               	movlw	-11
 20148  017448  36E3               	rlcf	plusw1,f,c
 20149                           
 20150                           ;stkvar	_counter @ sp[(-2)+1]
 20151  01744A  0EFF               	movlw	-1
 20152  01744C                     L23:
 20153  01744C  2AE3               	incf	plusw1,f,c
 20154                           
 20155                           ;stkvar	_divisor @ sp[(-2)+-16]
 20156  01744E  0EF5               	movlw	-11
 20157  017450  AEE3               	btfss	plusw1,7,c
 20158  017452  D7EA               	goto	l7900
 20159  017454                     u6200:
 20160                           
 20161                           ;stkvar	_divisor @ sp[(-2)+-16]
 20162                           ;stkvar	_dividend @ sp[(-2)+-8]
 20163  017454  50E1               	movf	fsr1l,w,c
 20164  017456  0FF6               	addlw	-10
 20165  017458  6ED9               	movwf	fsr2l,c
 20166  01745A  50E2               	movf	fsr1h,w,c
 20167  01745C  6EDA               	movwf	fsr2h,c
 20168  01745E  0EFF               	movlw	255
 20169  017460  22DA               	addwfc	fsr2h,f,c
 20170  017462  0EEE               	movlw	-18
 20171  017464  50E3               	movf	plusw1,w,c
 20172  017466  5CDE               	subwf	postinc2,w,c
 20173  017468  0EEF               	movlw	-17
 20174  01746A  50E3               	movf	plusw1,w,c
 20175  01746C  58DE               	subwfb	postinc2,w,c
 20176  01746E  0EF0               	movlw	-16
 20177  017470  50E3               	movf	plusw1,w,c
 20178  017472  58DE               	subwfb	postinc2,w,c
 20179  017474  0EF1               	movlw	-15
 20180  017476  50E3               	movf	plusw1,w,c
 20181  017478  58DE               	subwfb	postinc2,w,c
 20182  01747A  0EF2               	movlw	-14
 20183  01747C  50E3               	movf	plusw1,w,c
 20184  01747E  58DE               	subwfb	postinc2,w,c
 20185  017480  0EF3               	movlw	-13
 20186  017482  50E3               	movf	plusw1,w,c
 20187  017484  58DE               	subwfb	postinc2,w,c
 20188  017486  0EF4               	movlw	-12
 20189  017488  50E3               	movf	plusw1,w,c
 20190  01748A  58DE               	subwfb	postinc2,w,c
 20191  01748C  0EF5               	movlw	-11
 20192  01748E  50E3               	movf	plusw1,w,c
 20193  017490  58DE               	subwfb	postinc2,w,c
 20194  017492  A0D8               	btfss	status,0,c
 20195  017494  D01F               	goto	l7908
 20196                           
 20197                           ;stkvar	_divisor @ sp[(-2)+-16]
 20198                           ;stkvar	_dividend @ sp[(-2)+-8]
 20199  017496  50E1               	movf	fsr1l,w,c
 20200  017498  0FF6               	addlw	-10
 20201  01749A  6ED9               	movwf	fsr2l,c
 20202  01749C  50E2               	movf	fsr1h,w,c
 20203  01749E  6EDA               	movwf	fsr2h,c
 20204  0174A0  0EFF               	movlw	255
 20205  0174A2  22DA               	addwfc	fsr2h,f,c
 20206  0174A4  0EEE               	movlw	-18
 20207  0174A6  50E3               	movf	plusw1,w,c
 20208  0174A8  5EDE               	subwf	postinc2,f,c
 20209  0174AA  0EEF               	movlw	-17
 20210  0174AC  50E3               	movf	plusw1,w,c
 20211  0174AE  5ADE               	subwfb	postinc2,f,c
 20212  0174B0  0EF0               	movlw	-16
 20213  0174B2  50E3               	movf	plusw1,w,c
 20214  0174B4  5ADE               	subwfb	postinc2,f,c
 20215  0174B6  0EF1               	movlw	-15
 20216  0174B8  50E3               	movf	plusw1,w,c
 20217  0174BA  5ADE               	subwfb	postinc2,f,c
 20218  0174BC  0EF2               	movlw	-14
 20219  0174BE  50E3               	movf	plusw1,w,c
 20220  0174C0  5ADE               	subwfb	postinc2,f,c
 20221  0174C2  0EF3               	movlw	-13
 20222  0174C4  50E3               	movf	plusw1,w,c
 20223  0174C6  5ADE               	subwfb	postinc2,f,c
 20224  0174C8  0EF4               	movlw	-12
 20225  0174CA  50E3               	movf	plusw1,w,c
 20226  0174CC  5ADE               	subwfb	postinc2,f,c
 20227  0174CE  0EF5               	movlw	-11
 20228  0174D0  50E3               	movf	plusw1,w,c
 20229  0174D2  5ADE               	subwfb	postinc2,f,c
 20230  0174D4                     l7908:
 20231                           
 20232                           ;stkvar	_divisor @ sp[(-2)+-16]
 20233  0174D4  90D8               	bcf	status,0,c
 20234  0174D6  0EF5               	movlw	-11
 20235  0174D8  32E3               	rrcf	plusw1,f,c
 20236  0174DA  0EF4               	movlw	-12
 20237  0174DC  32E3               	rrcf	plusw1,f,c
 20238  0174DE  0EF3               	movlw	-13
 20239  0174E0  32E3               	rrcf	plusw1,f,c
 20240  0174E2  0EF2               	movlw	-14
 20241  0174E4  32E3               	rrcf	plusw1,f,c
 20242  0174E6  0EF1               	movlw	-15
 20243  0174E8  32E3               	rrcf	plusw1,f,c
 20244  0174EA  0EF0               	movlw	-16
 20245  0174EC  32E3               	rrcf	plusw1,f,c
 20246  0174EE  0EEF               	movlw	-17
 20247  0174F0  32E3               	rrcf	plusw1,f,c
 20248  0174F2  0EEE               	movlw	-18
 20249  0174F4  32E3               	rrcf	plusw1,f,c
 20250                           
 20251                           ;stkvar	_counter @ sp[(-2)+1]
 20252  0174F6  0EFF               	movlw	-1
 20253  0174F8  50E3               	movf	plusw1,w,c
 20254  0174FA  6E01               	movwf	btemp^0,c
 20255  0174FC  0E01               	movlw	1
 20256  0174FE  5E01               	subwf	btemp^0,f,c
 20257  017500  0EFF               	movlw	-1
 20258  017502  0060  F007  FFE3   	movff	btemp,plusw1
 20259  017508  A4D8               	btfss	status,2,c
 20260  01750A  D7A4               	goto	u6200
 20261  01750C                     u6220:
 20262                           
 20263                           ;stkvar	_sign @ sp[(-2)+0]
 20264  01750C  0EFE               	movlw	-2
 20265  01750E  50E3               	movf	plusw1,w,c
 20266  017510  B4D8               	btfsc	status,2,c
 20267  017512  D025               	goto	u6240
 20268                           
 20269                           ;stkvar	_dividend @ sp[(-2)+-8]
 20270                           ;stkvar	_dividend @ sp[(-2)+-8]
 20271  017514  0EF6               	movlw	-10
 20272  017516  6CE3               	negf	plusw1,c
 20273  017518  0EF7               	movlw	-9
 20274  01751A  1EE3               	comf	plusw1,f,c
 20275  01751C  0EF8               	movlw	-8
 20276  01751E  1EE3               	comf	plusw1,f,c
 20277  017520  0EF9               	movlw	-7
 20278  017522  1EE3               	comf	plusw1,f,c
 20279  017524  0EFA               	movlw	-6
 20280  017526  1EE3               	comf	plusw1,f,c
 20281  017528  0EFB               	movlw	-5
 20282  01752A  1EE3               	comf	plusw1,f,c
 20283  01752C  0EFC               	movlw	-4
 20284  01752E  1EE3               	comf	plusw1,f,c
 20285  017530  0EFD               	movlw	-3
 20286  017532  1EE3               	comf	plusw1,f,c
 20287  017534  E314               	bnc	u6240
 20288  017536  0EF7               	movlw	-9
 20289  017538  2AE3               	incf	plusw1,f,c
 20290  01753A  E311               	bnc	u6240
 20291  01753C  0EF8               	movlw	-8
 20292  01753E  2AE3               	incf	plusw1,f,c
 20293  017540  E30E               	bnc	u6240
 20294  017542  0EF9               	movlw	-7
 20295  017544  2AE3               	incf	plusw1,f,c
 20296  017546  E30B               	bnc	u6240
 20297  017548  0EFA               	movlw	-6
 20298  01754A  2AE3               	incf	plusw1,f,c
 20299  01754C  E308               	bnc	u6240
 20300  01754E  0EFB               	movlw	-5
 20301  017550  2AE3               	incf	plusw1,f,c
 20302  017552  E305               	bnc	u6240
 20303  017554  0EFC               	movlw	-4
 20304  017556  2AE3               	incf	plusw1,f,c
 20305  017558  E302               	bnc	u6240
 20306  01755A  0EFD               	movlw	-3
 20307  01755C  2AE3               	incf	plusw1,f,c
 20308  01755E                     u6240:
 20309                           
 20310                           ;stkvar	_dividend @ sp[(-2)+-8]
 20311  01755E  0EF6               	movlw	246
 20312  017560  24E1               	addwf	fsr1l,w,c
 20313  017562  6ED9               	movwf	fsr2l,c
 20314  017564  0EFF               	movlw	255
 20315  017566  20E2               	addwfc	fsr1h,w,c
 20316  017568  6EDA               	movwf	fsr2h,c
 20317                           
 20318                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20319  01756A  0E08               	movlw	8
 20320  01756C  6E01               	movwf	btemp^0,c
 20321  01756E  0EF6               	movlw	-10
 20322  017570                     us625999:
 20323  017570  006F FF7B FFE3     	movff	postinc2,plusw1
 20324  017576  28E8               	incf	wreg,w,c
 20325  017578  2E01               	decfsz	btemp^0,f,c
 20326  01757A  D7FA               	bra	us625999
 20327                           
 20328                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20329  01757C  52E5               	movf	postdec1,f,c
 20330  01757E  52E5               	movf	postdec1,f,c
 20331  017580  0012               	return		;funcret
 20332  017582                     __end_of___aomod:
 20333                           	opt callstack 0
 20334                           
 20335 ;; *************** function ___aodiv *****************
 20336 ;; Defined at:
 20337 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20338 ;; Parameters:    Size  Location     Type
 20339 ;;  dividend        8  [STACK] long long 
 20340 ;;  divisor         8  [STACK] long long 
 20341 ;; Auto vars:     Size  Location     Type
 20342 ;;  quotient        8  [STACK] long long 
 20343 ;;  sign            1  [STACK] unsigned char 
 20344 ;;  counter         1  [STACK] unsigned char 
 20345 ;; Return value:  Size  Location     Type
 20346 ;;                  8  [STACK] long long 
 20347 ;; Registers used:
 20348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20349 ;; Tracked objects:
 20350 ;;		On entry : 0/3
 20351 ;;		On exit  : 0/0
 20352 ;;		Unchanged: 0/0
 20353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20358 ;;Total ram usage:        0 bytes
 20359 ;; Hardware stack levels used:    1
 20360 ;; Hardware stack levels required when called:   15
 20361 ;; This function calls:
 20362 ;;		Nothing
 20363 ;; This function is called by:
 20364 ;;		_dtoa
 20365 ;; This function uses a reentrant model
 20366 ;;
 20367                           
 20368                           	psect	text69
 20369  016E4E                     __ptext69:
 20370                           	opt callstack 0
 20371  016E4E                     ___aodiv:
 20372                           	opt callstack 0
 20373                           
 20374                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20375  016E4E  0E0A               	movlw	10
 20376  016E50  26E1               	addwf	fsr1l,f,c
 20377  016E52  0E00               	movlw	0
 20378  016E54  22E2               	addwfc	fsr1h,f,c
 20379                           
 20380                           ;stkvar	_sign @ sp[(-10)+8]
 20381                           
 20382                           ;incstack = 0
 20383 ;; hardware stack exceeded
 20384  016E56  0EFE               	movlw	-2
 20385  016E58  6AE3               	clrf	plusw1,c
 20386                           
 20387                           ;stkvar	_divisor @ sp[(-10)+-16]
 20388  016E5A  0EED               	movlw	-19
 20389  016E5C  AEE3               	btfss	plusw1,7,c
 20390  016E5E  D028               	goto	l7848
 20391                           
 20392                           ;stkvar	_divisor @ sp[(-10)+-16]
 20393                           ;stkvar	_divisor @ sp[(-10)+-16]
 20394  016E60  0EE6               	movlw	-26
 20395  016E62  6CE3               	negf	plusw1,c
 20396  016E64  0EE7               	movlw	-25
 20397  016E66  1EE3               	comf	plusw1,f,c
 20398  016E68  0EE8               	movlw	-24
 20399  016E6A  1EE3               	comf	plusw1,f,c
 20400  016E6C  0EE9               	movlw	-23
 20401  016E6E  1EE3               	comf	plusw1,f,c
 20402  016E70  0EEA               	movlw	-22
 20403  016E72  1EE3               	comf	plusw1,f,c
 20404  016E74  0EEB               	movlw	-21
 20405  016E76  1EE3               	comf	plusw1,f,c
 20406  016E78  0EEC               	movlw	-20
 20407  016E7A  1EE3               	comf	plusw1,f,c
 20408  016E7C  0EED               	movlw	-19
 20409  016E7E  1EE3               	comf	plusw1,f,c
 20410  016E80  E314               	bnc	u6040
 20411  016E82  0EE7               	movlw	-25
 20412  016E84  2AE3               	incf	plusw1,f,c
 20413  016E86  E311               	bnc	u6040
 20414  016E88  0EE8               	movlw	-24
 20415  016E8A  2AE3               	incf	plusw1,f,c
 20416  016E8C  E30E               	bnc	u6040
 20417  016E8E  0EE9               	movlw	-23
 20418  016E90  2AE3               	incf	plusw1,f,c
 20419  016E92  E30B               	bnc	u6040
 20420  016E94  0EEA               	movlw	-22
 20421  016E96  2AE3               	incf	plusw1,f,c
 20422  016E98  E308               	bnc	u6040
 20423  016E9A  0EEB               	movlw	-21
 20424  016E9C  2AE3               	incf	plusw1,f,c
 20425  016E9E  E305               	bnc	u6040
 20426  016EA0  0EEC               	movlw	-20
 20427  016EA2  2AE3               	incf	plusw1,f,c
 20428  016EA4  E302               	bnc	u6040
 20429  016EA6  0EED               	movlw	-19
 20430  016EA8  2AE3               	incf	plusw1,f,c
 20431  016EAA                     u6040:
 20432                           
 20433                           ;stkvar	_sign @ sp[(-10)+8]
 20434  016EAA  0EFE               	movlw	-2
 20435  016EAC  6AE3               	clrf	plusw1,c
 20436  016EAE  2AE3               	incf	plusw1,f,c
 20437  016EB0                     l7848:
 20438                           
 20439                           ;stkvar	_dividend @ sp[(-10)+-8]
 20440  016EB0  0EF5               	movlw	-11
 20441  016EB2  AEE3               	btfss	plusw1,7,c
 20442  016EB4  D027               	goto	l7854
 20443                           
 20444                           ;stkvar	_dividend @ sp[(-10)+-8]
 20445                           ;stkvar	_dividend @ sp[(-10)+-8]
 20446  016EB6  0EEE               	movlw	-18
 20447  016EB8  6CE3               	negf	plusw1,c
 20448  016EBA  0EEF               	movlw	-17
 20449  016EBC  1EE3               	comf	plusw1,f,c
 20450  016EBE  0EF0               	movlw	-16
 20451  016EC0  1EE3               	comf	plusw1,f,c
 20452  016EC2  0EF1               	movlw	-15
 20453  016EC4  1EE3               	comf	plusw1,f,c
 20454  016EC6  0EF2               	movlw	-14
 20455  016EC8  1EE3               	comf	plusw1,f,c
 20456  016ECA  0EF3               	movlw	-13
 20457  016ECC  1EE3               	comf	plusw1,f,c
 20458  016ECE  0EF4               	movlw	-12
 20459  016ED0  1EE3               	comf	plusw1,f,c
 20460  016ED2  0EF5               	movlw	-11
 20461  016ED4  1EE3               	comf	plusw1,f,c
 20462  016ED6  E314               	bnc	u6060
 20463  016ED8  0EEF               	movlw	-17
 20464  016EDA  2AE3               	incf	plusw1,f,c
 20465  016EDC  E311               	bnc	u6060
 20466  016EDE  0EF0               	movlw	-16
 20467  016EE0  2AE3               	incf	plusw1,f,c
 20468  016EE2  E30E               	bnc	u6060
 20469  016EE4  0EF1               	movlw	-15
 20470  016EE6  2AE3               	incf	plusw1,f,c
 20471  016EE8  E30B               	bnc	u6060
 20472  016EEA  0EF2               	movlw	-14
 20473  016EEC  2AE3               	incf	plusw1,f,c
 20474  016EEE  E308               	bnc	u6060
 20475  016EF0  0EF3               	movlw	-13
 20476  016EF2  2AE3               	incf	plusw1,f,c
 20477  016EF4  E305               	bnc	u6060
 20478  016EF6  0EF4               	movlw	-12
 20479  016EF8  2AE3               	incf	plusw1,f,c
 20480  016EFA  E302               	bnc	u6060
 20481  016EFC  0EF5               	movlw	-11
 20482  016EFE  2AE3               	incf	plusw1,f,c
 20483  016F00                     u6060:
 20484                           
 20485                           ;stkvar	_sign @ sp[(-10)+8]
 20486  016F00  0EFE               	movlw	-2
 20487  016F02  70E3               	btg	plusw1,0,c
 20488  016F04                     l7854:
 20489                           
 20490                           ;stkvar	_quotient @ sp[(-10)+0]
 20491  016F04  0E07               	movlw	7
 20492  016F06  6E01               	movwf	btemp^0,c
 20493  016F08  0EF6               	movlw	-10
 20494  016F0A                     u6071:
 20495  016F0A  6AE3               	clrf	plusw1,c
 20496  016F0C  2AE8               	incf	wreg,f,c
 20497  016F0E  0601               	decf	btemp^0,f,c
 20498  016F10  E2FC               	bc	u6071
 20499                           
 20500                           ;stkvar	_divisor @ sp[(-10)+-16]
 20501  016F12  0EE6               	movlw	-26
 20502  016F14  50E3               	movf	plusw1,w,c
 20503  016F16  E116               	bnz	u6080
 20504  016F18  0EE7               	movlw	-25
 20505  016F1A  50E3               	movf	plusw1,w,c
 20506  016F1C  E113               	bnz	u6080
 20507  016F1E  0EE8               	movlw	-24
 20508  016F20  50E3               	movf	plusw1,w,c
 20509  016F22  E110               	bnz	u6080
 20510  016F24  0EE9               	movlw	-23
 20511  016F26  50E3               	movf	plusw1,w,c
 20512  016F28  E10D               	bnz	u6080
 20513  016F2A  0EEA               	movlw	-22
 20514  016F2C  50E3               	movf	plusw1,w,c
 20515  016F2E  E10A               	bnz	u6080
 20516  016F30  0EEB               	movlw	-21
 20517  016F32  50E3               	movf	plusw1,w,c
 20518  016F34  E107               	bnz	u6080
 20519  016F36  0EEC               	movlw	-20
 20520  016F38  50E3               	movf	plusw1,w,c
 20521  016F3A  E104               	bnz	u6080
 20522  016F3C  0EED               	movlw	-19
 20523  016F3E  50E3               	movf	plusw1,w,c
 20524  016F40  B4D8               	btfsc	status,2,c
 20525  016F42  D088               	goto	u6110
 20526  016F44                     u6080:
 20527                           
 20528                           ;stkvar	_counter @ sp[(-10)+9]
 20529  016F44  0EFF               	movlw	-1
 20530  016F46  6AE3               	clrf	plusw1,c
 20531  016F48  D012               	goto	L24
 20532  016F4A                     l7860:
 20533                           
 20534                           ;stkvar	_divisor @ sp[(-10)+-16]
 20535  016F4A  90D8               	bcf	status,0,c
 20536  016F4C  0EE6               	movlw	-26
 20537  016F4E  36E3               	rlcf	plusw1,f,c
 20538  016F50  0EE7               	movlw	-25
 20539  016F52  36E3               	rlcf	plusw1,f,c
 20540  016F54  0EE8               	movlw	-24
 20541  016F56  36E3               	rlcf	plusw1,f,c
 20542  016F58  0EE9               	movlw	-23
 20543  016F5A  36E3               	rlcf	plusw1,f,c
 20544  016F5C  0EEA               	movlw	-22
 20545  016F5E  36E3               	rlcf	plusw1,f,c
 20546  016F60  0EEB               	movlw	-21
 20547  016F62  36E3               	rlcf	plusw1,f,c
 20548  016F64  0EEC               	movlw	-20
 20549  016F66  36E3               	rlcf	plusw1,f,c
 20550  016F68  0EED               	movlw	-19
 20551  016F6A  36E3               	rlcf	plusw1,f,c
 20552                           
 20553                           ;stkvar	_counter @ sp[(-10)+9]
 20554  016F6C  0EFF               	movlw	-1
 20555  016F6E                     L24:
 20556  016F6E  2AE3               	incf	plusw1,f,c
 20557                           
 20558                           ;stkvar	_divisor @ sp[(-10)+-16]
 20559  016F70  0EED               	movlw	-19
 20560  016F72  AEE3               	btfss	plusw1,7,c
 20561  016F74  D7EA               	goto	l7860
 20562  016F76                     u6090:
 20563                           
 20564                           ;stkvar	_quotient @ sp[(-10)+0]
 20565  016F76  90D8               	bcf	status,0,c
 20566  016F78  0EF6               	movlw	-10
 20567  016F7A  36E3               	rlcf	plusw1,f,c
 20568  016F7C  0EF7               	movlw	-9
 20569  016F7E  36E3               	rlcf	plusw1,f,c
 20570  016F80  0EF8               	movlw	-8
 20571  016F82  36E3               	rlcf	plusw1,f,c
 20572  016F84  0EF9               	movlw	-7
 20573  016F86  36E3               	rlcf	plusw1,f,c
 20574  016F88  0EFA               	movlw	-6
 20575  016F8A  36E3               	rlcf	plusw1,f,c
 20576  016F8C  0EFB               	movlw	-5
 20577  016F8E  36E3               	rlcf	plusw1,f,c
 20578  016F90  0EFC               	movlw	-4
 20579  016F92  36E3               	rlcf	plusw1,f,c
 20580  016F94  0EFD               	movlw	-3
 20581  016F96  36E3               	rlcf	plusw1,f,c
 20582                           
 20583                           ;stkvar	_divisor @ sp[(-10)+-16]
 20584                           ;stkvar	_dividend @ sp[(-10)+-8]
 20585  016F98  50E1               	movf	fsr1l,w,c
 20586  016F9A  0FEE               	addlw	-18
 20587  016F9C  6ED9               	movwf	fsr2l,c
 20588  016F9E  50E2               	movf	fsr1h,w,c
 20589  016FA0  6EDA               	movwf	fsr2h,c
 20590  016FA2  0EFF               	movlw	255
 20591  016FA4  22DA               	addwfc	fsr2h,f,c
 20592  016FA6  0EE6               	movlw	-26
 20593  016FA8  50E3               	movf	plusw1,w,c
 20594  016FAA  5CDE               	subwf	postinc2,w,c
 20595  016FAC  0EE7               	movlw	-25
 20596  016FAE  50E3               	movf	plusw1,w,c
 20597  016FB0  58DE               	subwfb	postinc2,w,c
 20598  016FB2  0EE8               	movlw	-24
 20599  016FB4  50E3               	movf	plusw1,w,c
 20600  016FB6  58DE               	subwfb	postinc2,w,c
 20601  016FB8  0EE9               	movlw	-23
 20602  016FBA  50E3               	movf	plusw1,w,c
 20603  016FBC  58DE               	subwfb	postinc2,w,c
 20604  016FBE  0EEA               	movlw	-22
 20605  016FC0  50E3               	movf	plusw1,w,c
 20606  016FC2  58DE               	subwfb	postinc2,w,c
 20607  016FC4  0EEB               	movlw	-21
 20608  016FC6  50E3               	movf	plusw1,w,c
 20609  016FC8  58DE               	subwfb	postinc2,w,c
 20610  016FCA  0EEC               	movlw	-20
 20611  016FCC  50E3               	movf	plusw1,w,c
 20612  016FCE  58DE               	subwfb	postinc2,w,c
 20613  016FD0  0EED               	movlw	-19
 20614  016FD2  50E3               	movf	plusw1,w,c
 20615  016FD4  58DE               	subwfb	postinc2,w,c
 20616  016FD6  A0D8               	btfss	status,0,c
 20617  016FD8  D021               	goto	l7872
 20618                           
 20619                           ;stkvar	_divisor @ sp[(-10)+-16]
 20620                           ;stkvar	_dividend @ sp[(-10)+-8]
 20621  016FDA  50E1               	movf	fsr1l,w,c
 20622  016FDC  0FEE               	addlw	-18
 20623  016FDE  6ED9               	movwf	fsr2l,c
 20624  016FE0  50E2               	movf	fsr1h,w,c
 20625  016FE2  6EDA               	movwf	fsr2h,c
 20626  016FE4  0EFF               	movlw	255
 20627  016FE6  22DA               	addwfc	fsr2h,f,c
 20628  016FE8  0EE6               	movlw	-26
 20629  016FEA  50E3               	movf	plusw1,w,c
 20630  016FEC  5EDE               	subwf	postinc2,f,c
 20631  016FEE  0EE7               	movlw	-25
 20632  016FF0  50E3               	movf	plusw1,w,c
 20633  016FF2  5ADE               	subwfb	postinc2,f,c
 20634  016FF4  0EE8               	movlw	-24
 20635  016FF6  50E3               	movf	plusw1,w,c
 20636  016FF8  5ADE               	subwfb	postinc2,f,c
 20637  016FFA  0EE9               	movlw	-23
 20638  016FFC  50E3               	movf	plusw1,w,c
 20639  016FFE  5ADE               	subwfb	postinc2,f,c
 20640  017000  0EEA               	movlw	-22
 20641  017002  50E3               	movf	plusw1,w,c
 20642  017004  5ADE               	subwfb	postinc2,f,c
 20643  017006  0EEB               	movlw	-21
 20644  017008  50E3               	movf	plusw1,w,c
 20645  01700A  5ADE               	subwfb	postinc2,f,c
 20646  01700C  0EEC               	movlw	-20
 20647  01700E  50E3               	movf	plusw1,w,c
 20648  017010  5ADE               	subwfb	postinc2,f,c
 20649  017012  0EED               	movlw	-19
 20650  017014  50E3               	movf	plusw1,w,c
 20651  017016  5ADE               	subwfb	postinc2,f,c
 20652                           
 20653                           ;stkvar	_quotient @ sp[(-10)+0]
 20654  017018  0EF6               	movlw	-10
 20655  01701A  80E3               	bsf	plusw1,0,c
 20656  01701C                     l7872:
 20657                           
 20658                           ;stkvar	_divisor @ sp[(-10)+-16]
 20659  01701C  90D8               	bcf	status,0,c
 20660  01701E  0EED               	movlw	-19
 20661  017020  32E3               	rrcf	plusw1,f,c
 20662  017022  0EEC               	movlw	-20
 20663  017024  32E3               	rrcf	plusw1,f,c
 20664  017026  0EEB               	movlw	-21
 20665  017028  32E3               	rrcf	plusw1,f,c
 20666  01702A  0EEA               	movlw	-22
 20667  01702C  32E3               	rrcf	plusw1,f,c
 20668  01702E  0EE9               	movlw	-23
 20669  017030  32E3               	rrcf	plusw1,f,c
 20670  017032  0EE8               	movlw	-24
 20671  017034  32E3               	rrcf	plusw1,f,c
 20672  017036  0EE7               	movlw	-25
 20673  017038  32E3               	rrcf	plusw1,f,c
 20674  01703A  0EE6               	movlw	-26
 20675  01703C  32E3               	rrcf	plusw1,f,c
 20676                           
 20677                           ;stkvar	_counter @ sp[(-10)+9]
 20678  01703E  0EFF               	movlw	-1
 20679  017040  50E3               	movf	plusw1,w,c
 20680  017042  6E01               	movwf	btemp^0,c
 20681  017044  0E01               	movlw	1
 20682  017046  5E01               	subwf	btemp^0,f,c
 20683  017048  0EFF               	movlw	-1
 20684  01704A  0060  F007  FFE3   	movff	btemp,plusw1
 20685  017050  A4D8               	btfss	status,2,c
 20686  017052  D791               	goto	u6090
 20687  017054                     u6110:
 20688                           
 20689                           ;stkvar	_sign @ sp[(-10)+8]
 20690  017054  0EFE               	movlw	-2
 20691  017056  50E3               	movf	plusw1,w,c
 20692  017058  B4D8               	btfsc	status,2,c
 20693  01705A  D025               	goto	u6130
 20694                           
 20695                           ;stkvar	_quotient @ sp[(-10)+0]
 20696                           ;stkvar	_quotient @ sp[(-10)+0]
 20697  01705C  0EF6               	movlw	-10
 20698  01705E  6CE3               	negf	plusw1,c
 20699  017060  0EF7               	movlw	-9
 20700  017062  1EE3               	comf	plusw1,f,c
 20701  017064  0EF8               	movlw	-8
 20702  017066  1EE3               	comf	plusw1,f,c
 20703  017068  0EF9               	movlw	-7
 20704  01706A  1EE3               	comf	plusw1,f,c
 20705  01706C  0EFA               	movlw	-6
 20706  01706E  1EE3               	comf	plusw1,f,c
 20707  017070  0EFB               	movlw	-5
 20708  017072  1EE3               	comf	plusw1,f,c
 20709  017074  0EFC               	movlw	-4
 20710  017076  1EE3               	comf	plusw1,f,c
 20711  017078  0EFD               	movlw	-3
 20712  01707A  1EE3               	comf	plusw1,f,c
 20713  01707C  E314               	bnc	u6130
 20714  01707E  0EF7               	movlw	-9
 20715  017080  2AE3               	incf	plusw1,f,c
 20716  017082  E311               	bnc	u6130
 20717  017084  0EF8               	movlw	-8
 20718  017086  2AE3               	incf	plusw1,f,c
 20719  017088  E30E               	bnc	u6130
 20720  01708A  0EF9               	movlw	-7
 20721  01708C  2AE3               	incf	plusw1,f,c
 20722  01708E  E30B               	bnc	u6130
 20723  017090  0EFA               	movlw	-6
 20724  017092  2AE3               	incf	plusw1,f,c
 20725  017094  E308               	bnc	u6130
 20726  017096  0EFB               	movlw	-5
 20727  017098  2AE3               	incf	plusw1,f,c
 20728  01709A  E305               	bnc	u6130
 20729  01709C  0EFC               	movlw	-4
 20730  01709E  2AE3               	incf	plusw1,f,c
 20731  0170A0  E302               	bnc	u6130
 20732  0170A2  0EFD               	movlw	-3
 20733  0170A4  2AE3               	incf	plusw1,f,c
 20734  0170A6                     u6130:
 20735                           
 20736                           ;stkvar	_quotient @ sp[(-10)+0]
 20737  0170A6  0EF6               	movlw	246
 20738  0170A8  24E1               	addwf	fsr1l,w,c
 20739  0170AA  6ED9               	movwf	fsr2l,c
 20740  0170AC  0EFF               	movlw	255
 20741  0170AE  20E2               	addwfc	fsr1h,w,c
 20742  0170B0  6EDA               	movwf	fsr2h,c
 20743                           
 20744                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20745  0170B2  0E08               	movlw	8
 20746  0170B4  6E01               	movwf	btemp^0,c
 20747  0170B6  0EEE               	movlw	-18
 20748  0170B8                     us614999:
 20749  0170B8  006F FF7B FFE3     	movff	postinc2,plusw1
 20750  0170BE  28E8               	incf	wreg,w,c
 20751  0170C0  2E01               	decfsz	btemp^0,f,c
 20752  0170C2  D7FA               	bra	us614999
 20753                           
 20754                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20755  0170C4  0EF6               	movlw	246
 20756  0170C6  26E1               	addwf	fsr1l,f,c
 20757  0170C8  0EFF               	movlw	255
 20758  0170CA  22E2               	addwfc	fsr1h,f,c
 20759  0170CC  0012               	return		;funcret
 20760  0170CE                     __end_of___aodiv:
 20761                           	opt callstack 0
 20762                           
 20763 ;; *************** function _ctoa *****************
 20764 ;; Defined at:
 20765 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20766 ;; Parameters:    Size  Location     Type
 20767 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20768 ;;		 -> f(6), NULL(0), 
 20769 ;;  c               1  [STACK] unsigned char 
 20770 ;; Auto vars:     Size  Location     Type
 20771 ;;  w               2  [STACK] int 
 20772 ;;  l               2    0        int 
 20773 ;; Return value:  Size  Location     Type
 20774 ;;                  2  [STACK] int 
 20775 ;; Registers used:
 20776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20777 ;; Tracked objects:
 20778 ;;		On entry : 0/0
 20779 ;;		On exit  : 0/0
 20780 ;;		Unchanged: 0/0
 20781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20786 ;;Total ram usage:        0 bytes
 20787 ;; Hardware stack levels used:    1
 20788 ;; Hardware stack levels required when called:   20
 20789 ;; This function calls:
 20790 ;;		_pad
 20791 ;; This function is called by:
 20792 ;;		_vfpfcnvrt
 20793 ;; This function uses a reentrant model
 20794 ;;
 20795                           
 20796                           	psect	text70
 20797  01A218                     __ptext70:
 20798                           	opt callstack 0
 20799  01A218                     _ctoa:
 20800                           	opt callstack 0
 20801                           
 20802                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20803  01A218  52E6               	movf	postinc1,f,c
 20804  01A21A  52E6               	movf	postinc1,f,c
 20805                           
 20806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20807                           
 20808                           ;incstack = 0
 20809 ;; hardware stack exceeded
 20810  01A21C  5021               	movf	_width^0,w,c
 20811  01A21E  1022               	iorwf	(_width+1)^0,w,c
 20812  01A220  A4D8               	btfss	status,2,c
 20813  01A222  D009               	goto	l11474
 20814                           
 20815                           ;stkvar	_w @ sp[(-2)+0]
 20816  01A224  0EFE               	movlw	-2
 20817  01A226  0060  F087  FFE3   	movff	_width,plusw1
 20818  01A22C  0EFF               	movlw	-1
 20819  01A22E  0060  F08B  FFE3   	movff	_width+1,plusw1
 20820  01A234  D016               	goto	l11476
 20821  01A236                     l11474:
 20822  01A236  0EFF               	movlw	255
 20823  01A238  6E0B               	movwf	(btemp+10)^0,c
 20824  01A23A  0EFF               	movlw	255
 20825  01A23C  6E0C               	movwf	(btemp+11)^0,c
 20826  01A23E  0060  F084  F009   	movff	_width,btemp+8
 20827  01A244  0060  F088  F00A   	movff	_width+1,btemp+9
 20828  01A24A  500B               	movf	(btemp+10)^0,w,c
 20829  01A24C  2609               	addwf	(btemp+8)^0,f,c
 20830  01A24E  500C               	movf	(btemp+11)^0,w,c
 20831  01A250  220A               	addwfc	(btemp+9)^0,f,c
 20832                           
 20833                           ;stkvar	_w @ sp[(-2)+0]
 20834  01A252  0EFE               	movlw	-2
 20835  01A254  0060  F027  FFE3   	movff	btemp+8,plusw1
 20836  01A25A  0EFF               	movlw	-1
 20837  01A25C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20838  01A262                     l11476:
 20839                           
 20840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20841                           ;stkvar	_c @ sp[(-2)+-3]
 20842  01A262  0EFB               	movlw	-5
 20843  01A264  006F FF8C  F394    	movff	plusw1,_dbuf
 20844                           
 20845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20846  01A26A  0103               	movlb	3	; () banked
 20847  01A26C  6B95               	clrf	(_dbuf+1)& (0+255),b
 20848                           
 20849                           ; BSR set to: 3
 20850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20851                           ;stkvar	_w @ sp[(-2)+0]
 20852  01A26E  0EFE               	movlw	-2
 20853  01A270  006F FF8F FFE6     	movff	plusw1,postinc1
 20854  01A276  006F FF8F FFE6     	movff	plusw1,postinc1
 20855  01A27C  0E94               	movlw	low _dbuf
 20856  01A27E  6EE6               	movwf	postinc1,c
 20857  01A280  0E03               	movlw	high _dbuf
 20858  01A282  6EE6               	movwf	postinc1,c
 20859                           
 20860                           ;stkvar	_fp @ sp[(-6)+-2]
 20861  01A284  0EF8               	movlw	-8
 20862  01A286  006F FF8F FFE6     	movff	plusw1,postinc1
 20863  01A28C  006F FF8F FFE6     	movff	plusw1,postinc1
 20864  01A292  EC6D  F0C8         	call	_pad	;wreg free
 20865                           
 20866                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20867  01A296  0EFB               	movlw	251
 20868  01A298  26E1               	addwf	fsr1l,f,c
 20869  01A29A  0EFF               	movlw	255
 20870  01A29C  22E2               	addwfc	fsr1h,f,c
 20871  01A29E  0012               	return		;funcret
 20872  01A2A0                     __end_of_ctoa:
 20873                           	opt callstack 0
 20874                           
 20875 ;; *************** function _pad *****************
 20876 ;; Defined at:
 20877 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20878 ;; Parameters:    Size  Location     Type
 20879 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20880 ;;		 -> f(6), NULL(0), 
 20881 ;;  buf             2  [STACK] PTR unsigned char 
 20882 ;;		 -> dbuf(80), 
 20883 ;;  p               2  [STACK] int 
 20884 ;; Auto vars:     Size  Location     Type
 20885 ;;  w               2  [STACK] int 
 20886 ;;  i               2  [STACK] int 
 20887 ;; Return value:  Size  Location     Type
 20888 ;;                  2  [STACK] int 
 20889 ;; Registers used:
 20890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20891 ;; Tracked objects:
 20892 ;;		On entry : 0/3
 20893 ;;		On exit  : 0/0
 20894 ;;		Unchanged: 0/0
 20895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20900 ;;Total ram usage:        0 bytes
 20901 ;; Hardware stack levels used:    1
 20902 ;; Hardware stack levels required when called:   19
 20903 ;; This function calls:
 20904 ;;		_fputc
 20905 ;;		_fputs
 20906 ;;		_strlen
 20907 ;; This function is called by:
 20908 ;;		_ctoa
 20909 ;;		_dtoa
 20910 ;;		_efgtoa
 20911 ;;		_utoa
 20912 ;;		_xtoa
 20913 ;; This function uses a reentrant model
 20914 ;;
 20915                           
 20916                           	psect	text71
 20917  0190DA                     __ptext71:
 20918                           	opt callstack 0
 20919  0190DA                     _pad:
 20920                           	opt callstack 0
 20921                           
 20922                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20923  0190DA  52E6               	movf	postinc1,f,c
 20924  0190DC  52E6               	movf	postinc1,f,c
 20925  0190DE  52E6               	movf	postinc1,f,c
 20926  0190E0  52E6               	movf	postinc1,f,c
 20927                           
 20928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20929                           
 20930                           ;incstack = 0
 20931 ;; hardware stack exceeded
 20932  0190E2  A025               	btfss	_flags^0,0,c
 20933  0190E4  D010               	goto	l11406
 20934                           
 20935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20936                           ;stkvar	_fp @ sp[(-4)+-2]
 20937  0190E6  0EFA               	movlw	-6
 20938  0190E8  006F FF8F FFE6     	movff	plusw1,postinc1
 20939  0190EE  006F FF8F FFE6     	movff	plusw1,postinc1
 20940                           
 20941                           ;stkvar	_buf @ sp[(-6)+-4]
 20942  0190F4  0EF6               	movlw	-10
 20943  0190F6  006F FF8F FFE6     	movff	plusw1,postinc1
 20944  0190FC  006F FF8F FFE6     	movff	plusw1,postinc1
 20945  019102  EC9D  F0CF         	call	_fputs	;wreg free
 20946  019106                     l11406:
 20947                           
 20948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20949                           ;stkvar	_p @ sp[(-4)+-6]
 20950  019106  0EF7               	movlw	-9
 20951  019108  BEE3               	btfsc	plusw1,7,c
 20952  01910A  D011               	goto	l11410
 20953                           
 20954                           ;stkvar	_p @ sp[(-4)+-6]
 20955                           ;stkvar	_w @ sp[(-4)+0]
 20956  01910C  0EF6               	movlw	-10
 20957  01910E  006F FF8C  F001    	movff	plusw1,btemp
 20958  019114  0EFC               	movlw	-4
 20959  019116  0060  F007  FFE3   	movff	btemp,plusw1
 20960  01911C  0EF7               	movlw	-9
 20961  01911E  006F FF8C  F001    	movff	plusw1,btemp
 20962  019124  0EFD               	movlw	-3
 20963  019126  0060  F007  FFE3   	movff	btemp,plusw1
 20964  01912C  D004               	goto	l2100
 20965  01912E                     l11410:
 20966                           
 20967                           ;stkvar	_w @ sp[(-4)+0]
 20968  01912E  0EFC               	movlw	-4
 20969  019130  6AE3               	clrf	plusw1,c
 20970  019132  0EFD               	movlw	-3
 20971  019134  6AE3               	clrf	plusw1,c
 20972  019136                     l2100:
 20973                           
 20974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20975                           ;stkvar	_i @ sp[(-4)+2]
 20976  019136  0EFE               	movlw	-2
 20977  019138  6AE3               	clrf	plusw1,c
 20978  01913A  0EFF               	movlw	-1
 20979  01913C  6AE3               	clrf	plusw1,c
 20980                           
 20981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20982  01913E  D01E               	goto	l11416
 20983  019140                     l11412:
 20984                           
 20985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20986                           ;stkvar	_fp @ sp[(-4)+-2]
 20987  019140  0EFA               	movlw	-6
 20988  019142  006F FF8F FFE6     	movff	plusw1,postinc1
 20989  019148  006F FF8F FFE6     	movff	plusw1,postinc1
 20990  01914E  0E20               	movlw	32
 20991  019150  6EE6               	movwf	postinc1,c
 20992  019152  0E00               	movlw	0
 20993  019154  6EE6               	movwf	postinc1,c
 20994  019156  EC4F  F0C7         	call	_fputc	;wreg free
 20995                           
 20996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20997                           ;stkvar	_i @ sp[(-4)+2]
 20998  01915A  0EFE               	movlw	-2
 20999  01915C  50E3               	movf	plusw1,w,c
 21000  01915E  0F01               	addlw	1
 21001  019160  6E01               	movwf	btemp^0,c
 21002  019162  0EFE               	movlw	-2
 21003  019164  0060  F007  FFE3   	movff	btemp,plusw1
 21004  01916A  6A01               	clrf	btemp^0,c
 21005  01916C  0EFF               	movlw	-1
 21006  01916E  50E3               	movf	plusw1,w,c
 21007  019170  2001               	addwfc	btemp^0,w,c
 21008  019172  6E01               	movwf	btemp^0,c
 21009  019174  0EFF               	movlw	-1
 21010  019176  0060  F007  FFE3   	movff	btemp,plusw1
 21011  01917C                     l11416:
 21012                           
 21013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21014                           ;stkvar	_w @ sp[(-4)+0]
 21015                           ;stkvar	_i @ sp[(-4)+2]
 21016  01917C  50E1               	movf	fsr1l,w,c
 21017  01917E  0FFE               	addlw	-2
 21018  019180  6ED9               	movwf	fsr2l,c
 21019  019182  50E2               	movf	fsr1h,w,c
 21020  019184  6EDA               	movwf	fsr2h,c
 21021  019186  0EFF               	movlw	255
 21022  019188  22DA               	addwfc	fsr2h,f,c
 21023  01918A  0EFC               	movlw	-4
 21024  01918C  50E3               	movf	plusw1,w,c
 21025  01918E  5CDE               	subwf	postinc2,w,c
 21026  019190  50DE               	movf	postinc2,w,c
 21027  019192  0A80               	xorlw	128
 21028  019194  6E01               	movwf	btemp^0,c
 21029  019196  0EFD               	movlw	-3
 21030  019198  50E3               	movf	plusw1,w,c
 21031  01919A  0A80               	xorlw	128
 21032  01919C  5801               	subwfb	btemp^0,w,c
 21033  01919E  A0D8               	btfss	status,0,c
 21034  0191A0  D7CF               	goto	l11412
 21035                           
 21036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21037  0191A2  B025               	btfsc	_flags^0,0,c
 21038  0191A4  D010               	goto	l11420
 21039                           
 21040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21041                           ;stkvar	_fp @ sp[(-4)+-2]
 21042  0191A6  0EFA               	movlw	-6
 21043  0191A8  006F FF8F FFE6     	movff	plusw1,postinc1
 21044  0191AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21045                           
 21046                           ;stkvar	_buf @ sp[(-6)+-4]
 21047  0191B4  0EF6               	movlw	-10
 21048  0191B6  006F FF8F FFE6     	movff	plusw1,postinc1
 21049  0191BC  006F FF8F FFE6     	movff	plusw1,postinc1
 21050  0191C2  EC9D  F0CF         	call	_fputs	;wreg free
 21051  0191C6                     l11420:
 21052                           
 21053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21054                           ;stkvar	_w @ sp[(-4)+0]
 21055                           ;stkvar	_buf @ sp[(-4)+-4]
 21056  0191C6  0EF8               	movlw	-8
 21057  0191C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21058  0191CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21059  0191D4  EC4C  F0CF         	call	_strlen	;wreg free
 21060  0191D8  0EFC               	movlw	-4
 21061  0191DA  50E3               	movf	plusw1,w,c
 21062  0191DC  2601               	addwf	btemp^0,f,c
 21063  0191DE  0EFD               	movlw	-3
 21064  0191E0  50E3               	movf	plusw1,w,c
 21065  0191E2  2202               	addwfc	(btemp+1)^0,f,c
 21066                           
 21067                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21068  0191E4  0EF6               	movlw	246
 21069  0191E6  26E1               	addwf	fsr1l,f,c
 21070  0191E8  0EFF               	movlw	255
 21071  0191EA  22E2               	addwfc	fsr1h,f,c
 21072  0191EC  0012               	return		;funcret
 21073  0191EE                     __end_of_pad:
 21074                           	opt callstack 0
 21075                           
 21076 ;; *************** function _strlen *****************
 21077 ;; Defined at:
 21078 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21079 ;; Parameters:    Size  Location     Type
 21080 ;;  s               2  [STACK] PTR const unsigned char 
 21081 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21082 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(288), 
 21083 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 21084 ;;		 -> V(189), 
 21085 ;; Auto vars:     Size  Location     Type
 21086 ;;  a               2  [STACK] PTR const unsigned char 
 21087 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21088 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(288), 
 21089 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 21090 ;;		 -> V(189), 
 21091 ;; Return value:  Size  Location     Type
 21092 ;;                  2  [STACK] unsigned int 
 21093 ;; Registers used:
 21094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21095 ;; Tracked objects:
 21096 ;;		On entry : 0/0
 21097 ;;		On exit  : 0/0
 21098 ;;		Unchanged: 0/0
 21099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21104 ;;Total ram usage:        0 bytes
 21105 ;; Hardware stack levels used:    1
 21106 ;; Hardware stack levels required when called:   15
 21107 ;; This function calls:
 21108 ;;		Nothing
 21109 ;; This function is called by:
 21110 ;;		_eaDogM_WriteString
 21111 ;;		_spinners
 21112 ;;		_calc_bsoc
 21113 ;;		_pad
 21114 ;;		_stoa
 21115 ;; This function uses a reentrant model
 21116 ;;
 21117                           
 21118                           	psect	text72
 21119  019E98                     __ptext72:
 21120                           	opt callstack 0
 21121  019E98                     _strlen:
 21122                           	opt callstack 0
 21123                           
 21124                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21125  019E98  52E6               	movf	postinc1,f,c
 21126  019E9A  52E6               	movf	postinc1,f,c
 21127                           
 21128                           ;stkvar	_s @ sp[(-2)+-2]
 21129                           
 21130                           ;incstack = 0
 21131 ;; hardware stack exceeded
 21132  019E9C  0EFC               	movlw	-4
 21133  019E9E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21134  019EA4  0EFD               	movlw	-3
 21135  019EA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21136                           
 21137                           ;stkvar	_a @ sp[(-2)+0]
 21138  019EAC  0EFF               	movlw	-1
 21139  019EAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 21140  019EB4  0EFE               	movlw	-2
 21141  019EB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21142  019EBC  D011               	goto	l7466
 21143  019EBE                     l7464:
 21144                           
 21145                           ;stkvar	_s @ sp[(-2)+-2]
 21146  019EBE  0EFC               	movlw	-4
 21147  019EC0  50E3               	movf	plusw1,w,c
 21148  019EC2  0F01               	addlw	1
 21149  019EC4  6E01               	movwf	btemp^0,c
 21150  019EC6  0EFC               	movlw	-4
 21151  019EC8  0060  F007  FFE3   	movff	btemp,plusw1
 21152  019ECE  6A01               	clrf	btemp^0,c
 21153  019ED0  0EFD               	movlw	-3
 21154  019ED2  50E3               	movf	plusw1,w,c
 21155  019ED4  2001               	addwfc	btemp^0,w,c
 21156  019ED6  6E01               	movwf	btemp^0,c
 21157  019ED8  0EFD               	movlw	-3
 21158  019EDA  0060  F007  FFE3   	movff	btemp,plusw1
 21159  019EE0                     l7466:
 21160                           
 21161                           ;stkvar	_s @ sp[(-2)+-2]
 21162  019EE0  0EFC               	movlw	-4
 21163  019EE2  006F FF8F FFF6     	movff	plusw1,tblptrl
 21164  019EE8  0EFD               	movlw	-3
 21165  019EEA  006F FF8F FFF7     	movff	plusw1,tblptrh
 21166  019EF0  0E00               	movlw	low (__mediumconst shr (0+16))
 21167  019EF2  6EF8               	movwf	tblptru,c
 21168  019EF4  0E1F               	movlw	(high __ramtop+-1)
 21169  019EF6  64F7               	cpfsgt	tblptrh,c
 21170  019EF8  D003               	bra	u5207
 21171  019EFA  0008               	tblrd		*
 21172  019EFC  50F5               	movf	tablat,w,c
 21173  019EFE  D007               	bra	u5200
 21174  019F00                     u5207:
 21175  019F00  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21176  019F06  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21177  019F0C  50EF               	movf	indf0,w,c
 21178  019F0E                     u5200:
 21179  019F0E  0900               	iorlw	0
 21180  019F10  A4D8               	btfss	status,2,c
 21181  019F12  D7D5               	goto	l7464
 21182                           
 21183                           ;stkvar	_a @ sp[(-2)+0]
 21184                           ;stkvar	_s @ sp[(-2)+-2]
 21185  019F14  0EFC               	movlw	-4
 21186  019F16  006F FF8C  F001    	movff	plusw1,btemp
 21187  019F1C  0EFD               	movlw	-3
 21188  019F1E  006F FF8C  F002    	movff	plusw1,btemp+1
 21189  019F24  0EFE               	movlw	-2
 21190  019F26  50E3               	movf	plusw1,w,c
 21191  019F28  5E01               	subwf	btemp^0,f,c
 21192  019F2A  0EFF               	movlw	-1
 21193  019F2C  50E3               	movf	plusw1,w,c
 21194  019F2E  5A02               	subwfb	(btemp+1)^0,f,c
 21195                           
 21196                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21197  019F30  52E5               	movf	postdec1,f,c
 21198  019F32  52E5               	movf	postdec1,f,c
 21199  019F34  52E5               	movf	postdec1,f,c
 21200  019F36  52E5               	movf	postdec1,f,c
 21201  019F38  0012               	return		;funcret
 21202  019F3A                     __end_of_strlen:
 21203                           	opt callstack 0
 21204                           
 21205 ;; *************** function _fputs *****************
 21206 ;; Defined at:
 21207 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21208 ;; Parameters:    Size  Location     Type
 21209 ;;  s               2  [STACK] PTR const unsigned char 
 21210 ;;		 -> dbuf(80), 
 21211 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21212 ;;		 -> f(6), NULL(0), 
 21213 ;; Auto vars:     Size  Location     Type
 21214 ;;  i               2  [STACK] int 
 21215 ;;  c               1  [STACK] unsigned char 
 21216 ;; Return value:  Size  Location     Type
 21217 ;;                  2  [STACK] int 
 21218 ;; Registers used:
 21219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21220 ;; Tracked objects:
 21221 ;;		On entry : 0/3
 21222 ;;		On exit  : 0/0
 21223 ;;		Unchanged: 0/0
 21224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21229 ;;Total ram usage:        0 bytes
 21230 ;; Hardware stack levels used:    1
 21231 ;; Hardware stack levels required when called:   18
 21232 ;; This function calls:
 21233 ;;		_fputc
 21234 ;; This function is called by:
 21235 ;;		_pad
 21236 ;; This function uses a reentrant model
 21237 ;;
 21238                           
 21239                           	psect	text73
 21240  019F3A                     __ptext73:
 21241                           	opt callstack 0
 21242  019F3A                     _fputs:
 21243                           	opt callstack 0
 21244                           
 21245                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21246  019F3A  52E6               	movf	postinc1,f,c
 21247  019F3C  52E6               	movf	postinc1,f,c
 21248  019F3E  52E6               	movf	postinc1,f,c
 21249                           
 21250                           ;stkvar	_i @ sp[(-3)+0]
 21251                           
 21252                           ;incstack = 0
 21253 ;; hardware stack exceeded
 21254  019F40  0EFD               	movlw	-3
 21255  019F42  6AE3               	clrf	plusw1,c
 21256  019F44  0EFE               	movlw	-2
 21257  019F46  6AE3               	clrf	plusw1,c
 21258  019F48  D01F               	goto	l11400
 21259  019F4A                     l11396:
 21260                           
 21261                           ;stkvar	_fp @ sp[(-3)+-4]
 21262  019F4A  0EF9               	movlw	-7
 21263  019F4C  006F FF8F FFE6     	movff	plusw1,postinc1
 21264  019F52  006F FF8F FFE6     	movff	plusw1,postinc1
 21265                           
 21266                           ;stkvar	_c @ sp[(-5)+2]
 21267  019F58  0EFD               	movlw	-3
 21268  019F5A  50E3               	movf	plusw1,w,c
 21269  019F5C  6EE6               	movwf	postinc1,c
 21270  019F5E  0E00               	movlw	0
 21271  019F60  6EE6               	movwf	postinc1,c
 21272  019F62  EC4F  F0C7         	call	_fputc	;wreg free
 21273                           
 21274                           ;stkvar	_i @ sp[(-3)+0]
 21275  019F66  0EFD               	movlw	-3
 21276  019F68  50E3               	movf	plusw1,w,c
 21277  019F6A  0F01               	addlw	1
 21278  019F6C  6E01               	movwf	btemp^0,c
 21279  019F6E  0EFD               	movlw	-3
 21280  019F70  0060  F007  FFE3   	movff	btemp,plusw1
 21281  019F76  6A01               	clrf	btemp^0,c
 21282  019F78  0EFE               	movlw	-2
 21283  019F7A  50E3               	movf	plusw1,w,c
 21284  019F7C  2001               	addwfc	btemp^0,w,c
 21285  019F7E  6E01               	movwf	btemp^0,c
 21286  019F80  0EFE               	movlw	-2
 21287  019F82  0060  F007  FFE3   	movff	btemp,plusw1
 21288  019F88                     l11400:
 21289                           
 21290                           ;stkvar	_i @ sp[(-3)+0]
 21291  019F88  0EFD               	movlw	-3
 21292  019F8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21293  019F90  0EFE               	movlw	-2
 21294  019F92  006F FF8C  F00C    	movff	plusw1,btemp+11
 21295                           
 21296                           ;stkvar	_s @ sp[(-3)+-2]
 21297  019F98  0EFB               	movlw	-5
 21298  019F9A  006F FF8C  F009    	movff	plusw1,btemp+8
 21299  019FA0  0EFC               	movlw	-4
 21300  019FA2  006F FF8C  F00A    	movff	plusw1,btemp+9
 21301  019FA8  500B               	movf	(btemp+10)^0,w,c
 21302  019FAA  2409               	addwf	(btemp+8)^0,w,c
 21303  019FAC  6ED9               	movwf	fsr2l,c
 21304  019FAE  500C               	movf	(btemp+11)^0,w,c
 21305  019FB0  200A               	addwfc	(btemp+9)^0,w,c
 21306  019FB2  6EDA               	movwf	fsr2h,c
 21307  019FB4  50DF               	movf	indf2,w,c
 21308  019FB6  6E0C               	movwf	(btemp+11)^0,c
 21309                           
 21310                           ;stkvar	_c @ sp[(-3)+2]
 21311  019FB8  0EFF               	movlw	-1
 21312  019FBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 21313  019FC0  0EFF               	movlw	-1
 21314  019FC2  50E3               	movf	plusw1,w,c
 21315  019FC4  A4D8               	btfss	status,2,c
 21316  019FC6  D7C1               	goto	l11396
 21317                           
 21318                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21319  019FC8  0EF9               	movlw	249
 21320  019FCA  26E1               	addwf	fsr1l,f,c
 21321  019FCC  0EFF               	movlw	255
 21322  019FCE  22E2               	addwfc	fsr1h,f,c
 21323  019FD0  0012               	return		;funcret
 21324  019FD2                     __end_of_fputs:
 21325                           	opt callstack 0
 21326                           
 21327 ;; *************** function _fputc *****************
 21328 ;; Defined at:
 21329 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21330 ;; Parameters:    Size  Location     Type
 21331 ;;  c               2  [STACK] int 
 21332 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21333 ;;		 -> f(6), NULL(0), 
 21334 ;; Auto vars:     Size  Location     Type
 21335 ;;		None
 21336 ;; Return value:  Size  Location     Type
 21337 ;;                  2  [STACK] int 
 21338 ;; Registers used:
 21339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21340 ;; Tracked objects:
 21341 ;;		On entry : 0/0
 21342 ;;		On exit  : 0/0
 21343 ;;		Unchanged: 0/0
 21344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21349 ;;Total ram usage:        0 bytes
 21350 ;; Hardware stack levels used:    1
 21351 ;; Hardware stack levels required when called:   17
 21352 ;; This function calls:
 21353 ;;		_putch
 21354 ;; This function is called by:
 21355 ;;		_pad
 21356 ;;		_stoa
 21357 ;;		_vfpfcnvrt
 21358 ;;		_fputs
 21359 ;; This function uses a reentrant model
 21360 ;;
 21361                           
 21362                           	psect	text74
 21363  018E9E                     __ptext74:
 21364                           	opt callstack 0
 21365  018E9E                     _fputc:
 21366                           	opt callstack 0
 21367                           
 21368                           ;stkvar	_fp @ sp[(0)+-4]
 21369                           
 21370                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21371                           ;incstack = 0
 21372 ;; hardware stack exceeded
 21373  018E9E  0EFC               	movlw	-4
 21374  018EA0  006F FF8C  F001    	movff	plusw1,btemp
 21375  018EA6  0EFD               	movlw	-3
 21376  018EA8  50E3               	movf	plusw1,w,c
 21377  018EAA  1001               	iorwf	btemp^0,w,c
 21378  018EAC  B4D8               	btfsc	status,2,c
 21379  018EAE  D009               	goto	u10310
 21380                           
 21381                           ;stkvar	_fp @ sp[(0)+-4]
 21382  018EB0  0EFC               	movlw	-4
 21383  018EB2  006F FF8C  F001    	movff	plusw1,btemp
 21384  018EB8  0EFD               	movlw	-3
 21385  018EBA  50E3               	movf	plusw1,w,c
 21386  018EBC  1001               	iorwf	btemp^0,w,c
 21387  018EBE  A4D8               	btfss	status,2,c
 21388  018EC0  D006               	goto	l11384
 21389  018EC2                     u10310:
 21390                           
 21391                           ;stkvar	_c @ sp[(0)+-2]
 21392  018EC2  0EFE               	movlw	-2
 21393  018EC4  50E3               	movf	plusw1,w,c
 21394  018EC6  6EE6               	movwf	postinc1,c
 21395  018EC8  ECAE  F0DA         	call	_putch	;wreg free
 21396  018ECC  D075               	goto	l3146
 21397  018ECE                     l11384:
 21398                           
 21399                           ;stkvar	_fp @ sp[(0)+-4]
 21400  018ECE  0EFC               	movlw	-4
 21401  018ED0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21402  018ED6  0EFD               	movlw	-3
 21403  018ED8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21404  018EDE  0E04               	movlw	4
 21405  018EE0  240B               	addwf	(btemp+10)^0,w,c
 21406  018EE2  6ED9               	movwf	fsr2l,c
 21407  018EE4  0E00               	movlw	0
 21408  018EE6  200C               	addwfc	(btemp+11)^0,w,c
 21409  018EE8  6EDA               	movwf	fsr2h,c
 21410  018EEA  50DE               	movf	postinc2,w,c
 21411  018EEC  10DE               	iorwf	postinc2,w,c
 21412  018EEE  B4D8               	btfsc	status,2,c
 21413  018EF0  D026               	goto	u10330
 21414                           
 21415                           ;stkvar	_fp @ sp[(0)+-4]
 21416  018EF2  0EFC               	movlw	-4
 21417  018EF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21418  018EFA  0EFD               	movlw	-3
 21419  018EFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21420  018F02  0E04               	movlw	4
 21421  018F04  240B               	addwf	(btemp+10)^0,w,c
 21422  018F06  6ED9               	movwf	fsr2l,c
 21423  018F08  0E00               	movlw	0
 21424  018F0A  200C               	addwfc	(btemp+11)^0,w,c
 21425  018F0C  6EDA               	movwf	fsr2h,c
 21426                           
 21427                           ;stkvar	_fp @ sp[(0)+-4]
 21428  018F0E  0EFC               	movlw	-4
 21429  018F10  006F FF8C  F00B    	movff	plusw1,btemp+10
 21430  018F16  0EFD               	movlw	-3
 21431  018F18  006F FF8C  F00C    	movff	plusw1,btemp+11
 21432  018F1E  0E02               	movlw	2
 21433  018F20  240B               	addwf	(btemp+10)^0,w,c
 21434  018F22  6EE9               	movwf	fsr0l,c
 21435  018F24  0E00               	movlw	0
 21436  018F26  200C               	addwfc	(btemp+11)^0,w,c
 21437  018F28  6EEA               	movwf	fsr0h,c
 21438  018F2A  50DE               	movf	postinc2,w,c
 21439  018F2C  5CEE               	subwf	postinc0,w,c
 21440  018F2E  50EE               	movf	postinc0,w,c
 21441  018F30  0A80               	xorlw	128
 21442  018F32  6E01               	movwf	btemp^0,c
 21443  018F34  50DE               	movf	postinc2,w,c
 21444  018F36  0A80               	xorlw	128
 21445  018F38  5801               	subwfb	btemp^0,w,c
 21446  018F3A  B0D8               	btfsc	status,0,c
 21447  018F3C  D03D               	goto	l3146
 21448  018F3E                     u10330:
 21449                           
 21450                           ;stkvar	_c @ sp[(0)+-2]
 21451                           ;stkvar	_fp @ sp[(0)+-4]
 21452  018F3E  0EFC               	movlw	-4
 21453  018F40  006F FF8C  F00B    	movff	plusw1,btemp+10
 21454  018F46  0EFD               	movlw	-3
 21455  018F48  006F FF8C  F00C    	movff	plusw1,btemp+11
 21456  018F4E  0E02               	movlw	2
 21457  018F50  240B               	addwf	(btemp+10)^0,w,c
 21458  018F52  6ED9               	movwf	fsr2l,c
 21459  018F54  0E00               	movlw	0
 21460  018F56  200C               	addwfc	(btemp+11)^0,w,c
 21461  018F58  6EDA               	movwf	fsr2h,c
 21462  018F5A  006F FF78  F00B    	movff	postinc2,btemp+10
 21463  018F60  006F FF74  F00C    	movff	postdec2,btemp+11
 21464                           
 21465                           ;stkvar	_fp @ sp[(0)+-4]
 21466  018F66  0EFC               	movlw	-4
 21467  018F68  006F FF8F FFD9     	movff	plusw1,fsr2l
 21468  018F6E  0EFD               	movlw	-3
 21469  018F70  006F FF8F FFDA     	movff	plusw1,fsr2h
 21470  018F76  006F FF78  F009    	movff	postinc2,btemp+8
 21471  018F7C  006F FF74  F00A    	movff	postdec2,btemp+9
 21472  018F82  500B               	movf	(btemp+10)^0,w,c
 21473  018F84  2409               	addwf	(btemp+8)^0,w,c
 21474  018F86  6ED9               	movwf	fsr2l,c
 21475  018F88  500C               	movf	(btemp+11)^0,w,c
 21476  018F8A  200A               	addwfc	(btemp+9)^0,w,c
 21477  018F8C  6EDA               	movwf	fsr2h,c
 21478  018F8E  0EFE               	movlw	-2
 21479  018F90  006F FF8F FFDF     	movff	plusw1,indf2
 21480                           
 21481                           ;stkvar	_fp @ sp[(0)+-4]
 21482  018F96  0EFC               	movlw	-4
 21483  018F98  006F FF8C  F00B    	movff	plusw1,btemp+10
 21484  018F9E  0EFD               	movlw	-3
 21485  018FA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21486  018FA6  0E02               	movlw	2
 21487  018FA8  240B               	addwf	(btemp+10)^0,w,c
 21488  018FAA  6ED9               	movwf	fsr2l,c
 21489  018FAC  0E00               	movlw	0
 21490  018FAE  200C               	addwfc	(btemp+11)^0,w,c
 21491  018FB0  6EDA               	movwf	fsr2h,c
 21492  018FB2  2ADE               	incf	postinc2,f,c
 21493  018FB4  0E00               	movlw	0
 21494  018FB6  22DD               	addwfc	postdec2,f,c
 21495  018FB8                     l3146:
 21496                           
 21497                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21498  018FB8  52E5               	movf	postdec1,f,c
 21499  018FBA  52E5               	movf	postdec1,f,c
 21500  018FBC  52E5               	movf	postdec1,f,c
 21501  018FBE  52E5               	movf	postdec1,f,c
 21502  018FC0  0012               	return		;funcret
 21503  018FC2                     __end_of_fputc:
 21504                           	opt callstack 0
 21505                           
 21506 ;; *************** function _putch *****************
 21507 ;; Defined at:
 21508 ;;		line 170 in file "eadog.c"
 21509 ;; Parameters:    Size  Location     Type
 21510 ;;  c               1  [STACK] unsigned char 
 21511 ;; Auto vars:     Size  Location     Type
 21512 ;;		None
 21513 ;; Return value:  Size  Location     Type
 21514 ;;                  1  [STACK] void 
 21515 ;; Registers used:
 21516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21517 ;; Tracked objects:
 21518 ;;		On entry : 0/0
 21519 ;;		On exit  : 0/0
 21520 ;;		Unchanged: 0/0
 21521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21526 ;;Total ram usage:        0 bytes
 21527 ;; Hardware stack levels used:    1
 21528 ;; Hardware stack levels required when called:   16
 21529 ;; This function calls:
 21530 ;;		_ringBufS_put_dma
 21531 ;; This function is called by:
 21532 ;;		_fputc
 21533 ;; This function uses a reentrant model
 21534 ;;
 21535                           
 21536                           	psect	text75
 21537  01B55C                     __ptext75:
 21538                           	opt callstack 0
 21539  01B55C                     _putch:
 21540                           	opt callstack 0
 21541                           
 21542                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21543                           ;stkvar	_c @ sp[(0)+-1]
 21544                           
 21545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21546                           ;incstack = 0
 21547 ;; hardware stack exceeded
 21548  01B55C  0EFF               	movlw	-1
 21549  01B55E  50E3               	movf	plusw1,w,c
 21550  01B560  6EE6               	movwf	postinc1,c
 21551  01B562  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21552  01B568  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21553  01B56E  ECA4  F0CE         	call	_ringBufS_put_dma	;wreg free
 21554                           
 21555                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21556  01B572  52E5               	movf	postdec1,f,c
 21557  01B574  0012               	return		;funcret
 21558  01B576                     __end_of_putch:
 21559                           	opt callstack 0
 21560                           
 21561 ;; *************** function _ringBufS_put_dma *****************
 21562 ;; Defined at:
 21563 ;;		line 67 in file "ringbufs.c"
 21564 ;; Parameters:    Size  Location     Type
 21565 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21566 ;;		 -> ring_buf1(67), 
 21567 ;;  c               1  [STACK] const unsigned char 
 21568 ;; Auto vars:     Size  Location     Type
 21569 ;;		None
 21570 ;; Return value:  Size  Location     Type
 21571 ;;                  1  [STACK] void 
 21572 ;; Registers used:
 21573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21574 ;; Tracked objects:
 21575 ;;		On entry : 0/0
 21576 ;;		On exit  : 0/0
 21577 ;;		Unchanged: 0/0
 21578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21583 ;;Total ram usage:        0 bytes
 21584 ;; Hardware stack levels used:    1
 21585 ;; Hardware stack levels required when called:   15
 21586 ;; This function calls:
 21587 ;;		Nothing
 21588 ;; This function is called by:
 21589 ;;		_putch
 21590 ;; This function uses a reentrant model
 21591 ;;
 21592                           
 21593                           	psect	text76
 21594  019D48                     __ptext76:
 21595                           	opt callstack 0
 21596  019D48                     _ringBufS_put_dma:
 21597                           	opt callstack 0
 21598                           
 21599                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21600                           ;stkvar	__this @ sp[(0)+-2]
 21601                           
 21602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21603                           ;incstack = 0
 21604 ;; hardware stack exceeded
 21605  019D48  0EFE               	movlw	-2
 21606  019D4A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21607  019D50  0EFF               	movlw	-1
 21608  019D52  006F FF8C  F00C    	movff	plusw1,btemp+11
 21609  019D58  0E42               	movlw	66
 21610  019D5A  240B               	addwf	(btemp+10)^0,w,c
 21611  019D5C  6ED9               	movwf	fsr2l,c
 21612  019D5E  0E00               	movlw	0
 21613  019D60  200C               	addwfc	(btemp+11)^0,w,c
 21614  019D62  6EDA               	movwf	fsr2h,c
 21615  019D64  0E40               	movlw	64
 21616  019D66  60DF               	cpfslt	indf2,c
 21617  019D68  D040               	goto	l1577
 21618                           
 21619                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21620                           ;stkvar	_c @ sp[(0)+-3]
 21621                           ;stkvar	__this @ sp[(0)+-2]
 21622  019D6A  0EFE               	movlw	-2
 21623  019D6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21624  019D72  0EFF               	movlw	-1
 21625  019D74  006F FF8C  F00C    	movff	plusw1,btemp+11
 21626  019D7A  0E40               	movlw	64
 21627  019D7C  240B               	addwf	(btemp+10)^0,w,c
 21628  019D7E  6ED9               	movwf	fsr2l,c
 21629  019D80  0E00               	movlw	0
 21630  019D82  200C               	addwfc	(btemp+11)^0,w,c
 21631  019D84  6EDA               	movwf	fsr2h,c
 21632  019D86  50DF               	movf	indf2,w,c
 21633  019D88  6E0C               	movwf	(btemp+11)^0,c
 21634                           
 21635                           ;stkvar	__this @ sp[(0)+-2]
 21636  019D8A  0EFE               	movlw	-2
 21637  019D8C  006F FF8C  F009    	movff	plusw1,btemp+8
 21638  019D92  0EFF               	movlw	-1
 21639  019D94  006F FF8C  F00A    	movff	plusw1,btemp+9
 21640  019D9A  500C               	movf	(btemp+11)^0,w,c
 21641  019D9C  2409               	addwf	(btemp+8)^0,w,c
 21642  019D9E  6ED9               	movwf	fsr2l,c
 21643  019DA0  0E00               	movlw	0
 21644  019DA2  200A               	addwfc	(btemp+9)^0,w,c
 21645  019DA4  6EDA               	movwf	fsr2h,c
 21646  019DA6  0EFD               	movlw	-3
 21647  019DA8  006F FF8F FFDF     	movff	plusw1,indf2
 21648                           
 21649                           ;ringbufs.c: 71:   ++_this->head;
 21650                           ;stkvar	__this @ sp[(0)+-2]
 21651  019DAE  0EFE               	movlw	-2
 21652  019DB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21653  019DB6  0EFF               	movlw	-1
 21654  019DB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21655  019DBE  0E40               	movlw	64
 21656  019DC0  240B               	addwf	(btemp+10)^0,w,c
 21657  019DC2  6ED9               	movwf	fsr2l,c
 21658  019DC4  0E00               	movlw	0
 21659  019DC6  200C               	addwfc	(btemp+11)^0,w,c
 21660  019DC8  6EDA               	movwf	fsr2h,c
 21661  019DCA  2ADF               	incf	indf2,f,c
 21662                           
 21663                           ;ringbufs.c: 72:   ++_this->count;
 21664                           ;stkvar	__this @ sp[(0)+-2]
 21665  019DCC  0EFE               	movlw	-2
 21666  019DCE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21667  019DD4  0EFF               	movlw	-1
 21668  019DD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21669  019DDC  0E42               	movlw	66
 21670  019DDE  240B               	addwf	(btemp+10)^0,w,c
 21671  019DE0  6ED9               	movwf	fsr2l,c
 21672  019DE2  0E00               	movlw	0
 21673  019DE4  200C               	addwfc	(btemp+11)^0,w,c
 21674  019DE6  6EDA               	movwf	fsr2h,c
 21675  019DE8  2ADF               	incf	indf2,f,c
 21676  019DEA                     l1577:
 21677                           
 21678                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21679  019DEA  52E5               	movf	postdec1,f,c
 21680  019DEC  52E5               	movf	postdec1,f,c
 21681  019DEE  52E5               	movf	postdec1,f,c
 21682  019DF0  0012               	return		;funcret
 21683  019DF2                     __end_of_ringBufS_put_dma:
 21684                           	opt callstack 0
 21685                           
 21686 ;; *************** function _atoi *****************
 21687 ;; Defined at:
 21688 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21689 ;; Parameters:    Size  Location     Type
 21690 ;;  s               2  [STACK] PTR const unsigned char 
 21691 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 21692 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21693 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21694 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21695 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21696 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21697 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21698 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21699 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21700 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 21701 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 21702 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21703 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21704 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21705 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21706 ;;		 -> STR_1(17), 
 21707 ;; Auto vars:     Size  Location     Type
 21708 ;;  n               2  [STACK] int 
 21709 ;;  neg             2  [STACK] int 
 21710 ;; Return value:  Size  Location     Type
 21711 ;;                  2  [STACK] int 
 21712 ;; Registers used:
 21713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21714 ;; Tracked objects:
 21715 ;;		On entry : 0/0
 21716 ;;		On exit  : 0/0
 21717 ;;		Unchanged: 0/0
 21718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21723 ;;Total ram usage:        0 bytes
 21724 ;; Hardware stack levels used:    1
 21725 ;; Hardware stack levels required when called:   16
 21726 ;; This function calls:
 21727 ;;		_isdigit
 21728 ;;		_isspace
 21729 ;; This function is called by:
 21730 ;;		_vfpfcnvrt
 21731 ;; This function uses a reentrant model
 21732 ;;
 21733                           
 21734                           	psect	text77
 21735  0170CE                     __ptext77:
 21736                           	opt callstack 0
 21737  0170CE                     _atoi:
 21738                           	opt callstack 0
 21739                           
 21740                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21741  0170CE  0E09               	movlw	9
 21742  0170D0  26E1               	addwf	fsr1l,f,c
 21743  0170D2  0E00               	movlw	0
 21744  0170D4  22E2               	addwfc	fsr1h,f,c
 21745                           
 21746                           ;stkvar	_n @ sp[(-9)+5]
 21747                           
 21748                           ;incstack = 0
 21749 ;; hardware stack exceeded
 21750  0170D6  0EFC               	movlw	-4
 21751  0170D8  6AE3               	clrf	plusw1,c
 21752  0170DA  0EFD               	movlw	-3
 21753  0170DC  6AE3               	clrf	plusw1,c
 21754                           
 21755                           ;stkvar	_neg @ sp[(-9)+7]
 21756  0170DE  0EFE               	movlw	-2
 21757  0170E0  6AE3               	clrf	plusw1,c
 21758  0170E2  0EFF               	movlw	-1
 21759  0170E4  6AE3               	clrf	plusw1,c
 21760  0170E6  D011               	goto	l9074
 21761  0170E8                     l9072:
 21762                           
 21763                           ;stkvar	_s @ sp[(-9)+-2]
 21764  0170E8  0EF5               	movlw	-11
 21765  0170EA  50E3               	movf	plusw1,w,c
 21766  0170EC  0F01               	addlw	1
 21767  0170EE  6E01               	movwf	btemp^0,c
 21768  0170F0  0EF5               	movlw	-11
 21769  0170F2  0060  F007  FFE3   	movff	btemp,plusw1
 21770  0170F8  6A01               	clrf	btemp^0,c
 21771  0170FA  0EF6               	movlw	-10
 21772  0170FC  50E3               	movf	plusw1,w,c
 21773  0170FE  2001               	addwfc	btemp^0,w,c
 21774  017100  6E01               	movwf	btemp^0,c
 21775  017102  0EF6               	movlw	-10
 21776  017104  0060  F007  FFE3   	movff	btemp,plusw1
 21777  01710A                     l9074:
 21778                           
 21779                           ;stkvar	_atoi$5893 @ sp[(-9)+4]
 21780  01710A  0EFB               	movlw	-5
 21781  01710C  6AE3               	clrf	plusw1,c
 21782  01710E  2AE3               	incf	plusw1,f,c
 21783                           
 21784                           ;stkvar	_s @ sp[(-9)+-2]
 21785  017110  50E1               	movf	fsr1l,w,c
 21786  017112  0FF5               	addlw	-11
 21787  017114  6ED9               	movwf	fsr2l,c
 21788  017116  50E2               	movf	fsr1h,w,c
 21789  017118  6EDA               	movwf	fsr2h,c
 21790  01711A  0EFF               	movlw	255
 21791  01711C  22DA               	addwfc	fsr2h,f,c
 21792  01711E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21793  017124  006F FF77 FFF7     	movff	postdec2,tblptrh
 21794  01712A                     	if	0	;tblptru may be non-zero
 21795  01712A                     	endif
 21796  01712A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21797  01712A  0E00               	movlw	low (__mediumconst shr (0+16))
 21798  01712C  6EF8               	movwf	tblptru,c
 21799  01712E                     	endif
 21800  01712E  0008               	tblrd		*
 21801  017130  50F5               	movf	tablat,w,c
 21802  017132  0A20               	xorlw	32
 21803  017134  B4D8               	btfsc	status,2,c
 21804  017136  D023               	goto	l9082
 21805  017138  0EF7               	movlw	247
 21806  01713A  6E0B               	movwf	(btemp+10)^0,c
 21807  01713C  0EFF               	movlw	255
 21808  01713E  6E0C               	movwf	(btemp+11)^0,c
 21809                           
 21810                           ;stkvar	_s @ sp[(-9)+-2]
 21811  017140  50E1               	movf	fsr1l,w,c
 21812  017142  0FF5               	addlw	-11
 21813  017144  6ED9               	movwf	fsr2l,c
 21814  017146  50E2               	movf	fsr1h,w,c
 21815  017148  6EDA               	movwf	fsr2h,c
 21816  01714A  0EFF               	movlw	255
 21817  01714C  22DA               	addwfc	fsr2h,f,c
 21818  01714E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21819  017154  006F FF77 FFF7     	movff	postdec2,tblptrh
 21820  01715A                     	if	0	;tblptru may be non-zero
 21821  01715A                     	endif
 21822  01715A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21823  01715A  0E00               	movlw	low (__mediumconst shr (0+16))
 21824  01715C  6EF8               	movwf	tblptru,c
 21825  01715E                     	endif
 21826  01715E  0008               	tblrd		*
 21827  017160  50F5               	movf	tablat,w,c
 21828  017162  6E09               	movwf	(btemp+8)^0,c
 21829  017164  6A0A               	clrf	(btemp+9)^0,c
 21830  017166  500B               	movf	(btemp+10)^0,w,c
 21831  017168  2609               	addwf	(btemp+8)^0,f,c
 21832  01716A  500C               	movf	(btemp+11)^0,w,c
 21833  01716C  220A               	addwfc	(btemp+9)^0,f,c
 21834  01716E  500A               	movf	(btemp+9)^0,w,c
 21835  017170  E104               	bnz	u8310
 21836  017172  0E05               	movlw	5
 21837  017174  5C09               	subwf	(btemp+8)^0,w,c
 21838  017176  A0D8               	btfss	status,0,c
 21839  017178  D002               	goto	l9082
 21840  01717A                     u8310:
 21841                           
 21842                           ;stkvar	_atoi$5893 @ sp[(-9)+4]
 21843  01717A  0EFB               	movlw	-5
 21844  01717C  6AE3               	clrf	plusw1,c
 21845  01717E                     l9082:
 21846                           
 21847                           ;stkvar	_atoi$5893 @ sp[(-9)+4]
 21848  01717E  0EFB               	movlw	-5
 21849  017180  50E3               	movf	plusw1,w,c
 21850  017182  6E0B               	movwf	(btemp+10)^0,c
 21851  017184  6A0C               	clrf	(btemp+11)^0,c
 21852                           
 21853                           ;stkvar	_atoi$5892 @ sp[(-9)+2]
 21854  017186  0EF9               	movlw	-7
 21855  017188  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21856  01718E  0EFA               	movlw	-6
 21857  017190  0060  F033  FFE3   	movff	btemp+11,plusw1
 21858                           
 21859                           ;stkvar	_atoi$5892 @ sp[(-9)+2]
 21860  017196  0EF9               	movlw	-7
 21861  017198  006F FF8C  F001    	movff	plusw1,btemp
 21862  01719E  0EFA               	movlw	-6
 21863  0171A0  50E3               	movf	plusw1,w,c
 21864  0171A2  1001               	iorwf	btemp^0,w,c
 21865  0171A4  B4D8               	btfsc	status,2,c
 21866  0171A6  D01F               	goto	l9092
 21867  0171A8  D79F               	goto	l9072
 21868  0171AA                     l9088:
 21869  0171AA  0E01               	movlw	1
 21870  0171AC  6E0B               	movwf	(btemp+10)^0,c
 21871  0171AE  0E00               	movlw	0
 21872  0171B0  6E0C               	movwf	(btemp+11)^0,c
 21873                           
 21874                           ;stkvar	_neg @ sp[(-9)+7]
 21875  0171B2  0EFE               	movlw	-2
 21876  0171B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21877  0171BA  0EFF               	movlw	-1
 21878  0171BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21879  0171C2                     l9090:
 21880                           
 21881                           ;stkvar	_s @ sp[(-9)+-2]
 21882  0171C2  0EF5               	movlw	-11
 21883  0171C4  50E3               	movf	plusw1,w,c
 21884  0171C6  0F01               	addlw	1
 21885  0171C8  6E01               	movwf	btemp^0,c
 21886  0171CA  0EF5               	movlw	-11
 21887  0171CC  0060  F007  FFE3   	movff	btemp,plusw1
 21888  0171D2  6A01               	clrf	btemp^0,c
 21889  0171D4  0EF6               	movlw	-10
 21890  0171D6  50E3               	movf	plusw1,w,c
 21891  0171D8  2001               	addwfc	btemp^0,w,c
 21892  0171DA  6E01               	movwf	btemp^0,c
 21893  0171DC  0EF6               	movlw	-10
 21894  0171DE  0060  F007  FFE3   	movff	btemp,plusw1
 21895  0171E4  D053               	goto	l9098
 21896  0171E6                     l9092:
 21897                           
 21898                           ;stkvar	_s @ sp[(-9)+-2]
 21899  0171E6  50E1               	movf	fsr1l,w,c
 21900  0171E8  0FF5               	addlw	-11
 21901  0171EA  6ED9               	movwf	fsr2l,c
 21902  0171EC  50E2               	movf	fsr1h,w,c
 21903  0171EE  6EDA               	movwf	fsr2h,c
 21904  0171F0  0EFF               	movlw	255
 21905  0171F2  22DA               	addwfc	fsr2h,f,c
 21906  0171F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 21907  0171FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 21908  017200                     	if	0	;tblptru may be non-zero
 21909  017200                     	endif
 21910  017200                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21911  017200  0E00               	movlw	low (__mediumconst shr (0+16))
 21912  017202  6EF8               	movwf	tblptru,c
 21913  017204                     	endif
 21914  017204  0008               	tblrd		*
 21915  017206  50F5               	movf	tablat,w,c
 21916  017208  6E0B               	movwf	(btemp+10)^0,c
 21917  01720A  6A0C               	clrf	(btemp+11)^0,c
 21918                           
 21919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21920                           ; Switch size 1, requested type "simple"
 21921                           ; Number of cases is 1, Range of values is 0 to 0
 21922                           ; switch strategies available:
 21923                           ; Name         Instructions Cycles
 21924                           ; simple_byte            4     3 (average)
 21925                           ;	Chosen strategy is simple_byte
 21926  01720C  500C               	movf	(btemp+11)^0,w,c
 21927  01720E  0A00               	xorlw	0	; case 0
 21928  017210  A4D8               	btfss	status,2,c
 21929  017212  D03C               	goto	l9098
 21930                           
 21931                           ; Switch size 1, requested type "simple"
 21932                           ; Number of cases is 2, Range of values is 43 to 45
 21933                           ; switch strategies available:
 21934                           ; Name         Instructions Cycles
 21935                           ; simple_byte            7     4 (average)
 21936                           ;	Chosen strategy is simple_byte
 21937  017214  500B               	movf	(btemp+10)^0,w,c
 21938  017216  0A2B               	xorlw	43	; case 43
 21939  017218  B4D8               	btfsc	status,2,c
 21940  01721A  D7D3               	goto	l9090
 21941  01721C  0A06               	xorlw	6	; case 45
 21942  01721E  B4D8               	btfsc	status,2,c
 21943  017220  D7C4               	goto	l9088
 21944  017222  D034               	goto	l9098
 21945  017224                     l9094:
 21946                           
 21947                           ;stkvar	_n @ sp[(-9)+5]
 21948  017224  0EFC               	movlw	-4
 21949  017226  006F FF8C  F00B    	movff	plusw1,btemp+10
 21950  01722C  0EFD               	movlw	-3
 21951  01722E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21952  017234  0E0A               	movlw	10
 21953  017236  020B               	mulwf	(btemp+10)^0,c
 21954  017238  006F FFCC  F009    	movff	prodl,btemp+8
 21955  01723E  006F FFD0  F00A    	movff	prodh,btemp+9
 21956  017244  020C               	mulwf	(btemp+11)^0,c
 21957  017246  50F3               	movf	prodl,w,c
 21958  017248  260A               	addwf	(btemp+9)^0,f,c
 21959                           
 21960                           ;stkvar	_s @ sp[(-9)+-2]
 21961  01724A  50E1               	movf	fsr1l,w,c
 21962  01724C  0FF5               	addlw	-11
 21963  01724E  6ED9               	movwf	fsr2l,c
 21964  017250  50E2               	movf	fsr1h,w,c
 21965  017252  6EDA               	movwf	fsr2h,c
 21966  017254  0EFF               	movlw	255
 21967  017256  22DA               	addwfc	fsr2h,f,c
 21968  017258  006F FF7B FFF6     	movff	postinc2,tblptrl
 21969  01725E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21970  017264                     	if	0	;tblptru may be non-zero
 21971  017264                     	endif
 21972  017264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21973  017264  0E00               	movlw	low (__mediumconst shr (0+16))
 21974  017266  6EF8               	movwf	tblptru,c
 21975  017268                     	endif
 21976  017268  0008               	tblrd		*
 21977  01726A  50F5               	movf	tablat,w,c
 21978  01726C  5E09               	subwf	(btemp+8)^0,f,c
 21979  01726E  0E00               	movlw	0
 21980  017270  5A0A               	subwfb	(btemp+9)^0,f,c
 21981  017272  0E30               	movlw	48
 21982  017274  2609               	addwf	(btemp+8)^0,f,c
 21983  017276  0E00               	movlw	0
 21984  017278  220A               	addwfc	(btemp+9)^0,f,c
 21985                           
 21986                           ;stkvar	_n @ sp[(-9)+5]
 21987  01727A  0EFC               	movlw	-4
 21988  01727C  0060  F027  FFE3   	movff	btemp+8,plusw1
 21989  017282  0EFD               	movlw	-3
 21990  017284  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21991  01728A  D79B               	goto	l9090
 21992  01728C                     l9098:
 21993  01728C  0ED0               	movlw	208
 21994  01728E  6E0B               	movwf	(btemp+10)^0,c
 21995  017290  0EFF               	movlw	255
 21996  017292  6E0C               	movwf	(btemp+11)^0,c
 21997                           
 21998                           ;stkvar	_s @ sp[(-9)+-2]
 21999  017294  50E1               	movf	fsr1l,w,c
 22000  017296  0FF5               	addlw	-11
 22001  017298  6ED9               	movwf	fsr2l,c
 22002  01729A  50E2               	movf	fsr1h,w,c
 22003  01729C  6EDA               	movwf	fsr2h,c
 22004  01729E  0EFF               	movlw	255
 22005  0172A0  22DA               	addwfc	fsr2h,f,c
 22006  0172A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 22007  0172A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 22008  0172AE                     	if	0	;tblptru may be non-zero
 22009  0172AE                     	endif
 22010  0172AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22011  0172AE  0E00               	movlw	low (__mediumconst shr (0+16))
 22012  0172B0  6EF8               	movwf	tblptru,c
 22013  0172B2                     	endif
 22014  0172B2  0008               	tblrd		*
 22015  0172B4  50F5               	movf	tablat,w,c
 22016  0172B6  6E09               	movwf	(btemp+8)^0,c
 22017  0172B8  6A0A               	clrf	(btemp+9)^0,c
 22018  0172BA  500B               	movf	(btemp+10)^0,w,c
 22019  0172BC  2609               	addwf	(btemp+8)^0,f,c
 22020  0172BE  500C               	movf	(btemp+11)^0,w,c
 22021  0172C0  220A               	addwfc	(btemp+9)^0,f,c
 22022  0172C2  500A               	movf	(btemp+9)^0,w,c
 22023  0172C4  E106               	bnz	u8330
 22024  0172C6  0E0A               	movlw	10
 22025  0172C8  5C09               	subwf	(btemp+8)^0,w,c
 22026  0172CA  B0D8               	btfsc	status,0,c
 22027  0172CC  D002               	goto	u8330
 22028  0172CE  0E01               	movlw	1
 22029  0172D0  D001               	goto	u8340
 22030  0172D2                     u8330:
 22031  0172D2  0E00               	movlw	0
 22032  0172D4                     u8340:
 22033  0172D4  6E0B               	movwf	(btemp+10)^0,c
 22034  0172D6  6A0C               	clrf	(btemp+11)^0,c
 22035                           
 22036                           ;stkvar	_atoi$5894 @ sp[(-9)+0]
 22037  0172D8  0EF7               	movlw	-9
 22038  0172DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22039  0172E0  0EF8               	movlw	-8
 22040  0172E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22041                           
 22042                           ;stkvar	_atoi$5894 @ sp[(-9)+0]
 22043  0172E8  0EF7               	movlw	-9
 22044  0172EA  006F FF8C  F001    	movff	plusw1,btemp
 22045  0172F0  0EF8               	movlw	-8
 22046  0172F2  50E3               	movf	plusw1,w,c
 22047  0172F4  1001               	iorwf	btemp^0,w,c
 22048  0172F6  A4D8               	btfss	status,2,c
 22049  0172F8  D795               	goto	l9094
 22050                           
 22051                           ;stkvar	_neg @ sp[(-9)+7]
 22052  0172FA  0EFE               	movlw	-2
 22053  0172FC  006F FF8C  F001    	movff	plusw1,btemp
 22054  017302  0EFF               	movlw	-1
 22055  017304  50E3               	movf	plusw1,w,c
 22056  017306  1001               	iorwf	btemp^0,w,c
 22057  017308  A4D8               	btfss	status,2,c
 22058  01730A  D00E               	goto	l9108
 22059                           
 22060                           ;stkvar	_n @ sp[(-9)+5]
 22061  01730C  0EFC               	movlw	-4
 22062  01730E  006F FF8C  F001    	movff	plusw1,btemp
 22063  017314  1E01               	comf	btemp^0,f,c
 22064  017316  0EFD               	movlw	-3
 22065  017318  006F FF8C  F002    	movff	plusw1,btemp+1
 22066  01731E  1E02               	comf	(btemp+1)^0,f,c
 22067  017320  2A01               	incf	btemp^0,f,c
 22068  017322  B4D8               	btfsc	status,2,c
 22069  017324  2A02               	incf	(btemp+1)^0,f,c
 22070  017326  D008               	goto	l3077
 22071  017328                     l9108:
 22072                           
 22073                           ;stkvar	_n @ sp[(-9)+5]
 22074  017328  0EFC               	movlw	-4
 22075  01732A  006F FF8C  F001    	movff	plusw1,btemp
 22076  017330  0EFD               	movlw	-3
 22077  017332  006F FF8C  F002    	movff	plusw1,btemp+1
 22078  017338                     l3077:
 22079                           
 22080                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22081  017338  0EF5               	movlw	245
 22082  01733A  26E1               	addwf	fsr1l,f,c
 22083  01733C  0EFF               	movlw	255
 22084  01733E  22E2               	addwfc	fsr1h,f,c
 22085  017340  0012               	return		;funcret
 22086  017342                     __end_of_atoi:
 22087                           	opt callstack 0
 22088                           
 22089 ;; *************** function _isspace *****************
 22090 ;; Defined at:
 22091 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22092 ;; Parameters:    Size  Location     Type
 22093 ;;  c               2  [STACK] int 
 22094 ;; Auto vars:     Size  Location     Type
 22095 ;;		None
 22096 ;; Return value:  Size  Location     Type
 22097 ;;                  2  [STACK] int 
 22098 ;; Registers used:
 22099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22100 ;; Tracked objects:
 22101 ;;		On entry : 0/0
 22102 ;;		On exit  : 0/0
 22103 ;;		Unchanged: 0/0
 22104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22109 ;;Total ram usage:        0 bytes
 22110 ;; Hardware stack levels used:    1
 22111 ;; Hardware stack levels required when called:   15
 22112 ;; This function calls:
 22113 ;;		Nothing
 22114 ;; This function is called by:
 22115 ;;		_atoi
 22116 ;; This function uses a reentrant model
 22117 ;;
 22118                           
 22119                           	psect	text78
 22120  01A8B4                     __ptext78:
 22121                           	opt callstack 0
 22122  01A8B4                     _isspace:
 22123                           	opt callstack 0
 22124                           
 22125                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22126  01A8B4  52E6               	movf	postinc1,f,c
 22127                           
 22128                           ;stkvar	_isspace$5943 @ sp[(-1)+0]
 22129                           
 22130                           ;incstack = 0
 22131 ;; hardware stack exceeded
 22132  01A8B6  0EFF               	movlw	-1
 22133  01A8B8  6AE3               	clrf	plusw1,c
 22134  01A8BA  2AE3               	incf	plusw1,f,c
 22135                           
 22136                           ;stkvar	_c @ sp[(-1)+-2]
 22137  01A8BC  0EFD               	movlw	-3
 22138  01A8BE  006F FF8C  F001    	movff	plusw1,btemp
 22139  01A8C4  0E20               	movlw	32
 22140  01A8C6  1801               	xorwf	btemp^0,w,c
 22141  01A8C8  E104               	bnz	u7160
 22142  01A8CA  0EFE               	movlw	-2
 22143  01A8CC  50E3               	movf	plusw1,w,c
 22144  01A8CE  B4D8               	btfsc	status,2,c
 22145  01A8D0  D012               	goto	l8466
 22146  01A8D2                     u7160:
 22147                           
 22148                           ;stkvar	_c @ sp[(-1)+-2]
 22149  01A8D2  0EFD               	movlw	-3
 22150  01A8D4  50E3               	movf	plusw1,w,c
 22151  01A8D6  0FF7               	addlw	247
 22152  01A8D8  6E0B               	movwf	(btemp+10)^0,c
 22153  01A8DA  0EFE               	movlw	-2
 22154  01A8DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22155  01A8E2  0EFF               	movlw	255
 22156  01A8E4  220C               	addwfc	(btemp+11)^0,f,c
 22157  01A8E6  500C               	movf	(btemp+11)^0,w,c
 22158  01A8E8  E104               	bnz	u7170
 22159  01A8EA  0E05               	movlw	5
 22160  01A8EC  5C0B               	subwf	(btemp+10)^0,w,c
 22161  01A8EE  A0D8               	btfss	status,0,c
 22162  01A8F0  D002               	goto	l8466
 22163  01A8F2                     u7170:
 22164                           
 22165                           ;stkvar	_isspace$5943 @ sp[(-1)+0]
 22166  01A8F2  0EFF               	movlw	-1
 22167  01A8F4  6AE3               	clrf	plusw1,c
 22168  01A8F6                     l8466:
 22169                           
 22170                           ;stkvar	_isspace$5943 @ sp[(-1)+0]
 22171  01A8F6  0EFF               	movlw	-1
 22172  01A8F8  50E3               	movf	plusw1,w,c
 22173  01A8FA  6E01               	movwf	btemp^0,c
 22174  01A8FC  6A02               	clrf	(btemp+1)^0,c
 22175                           
 22176                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22177  01A8FE  52E5               	movf	postdec1,f,c
 22178  01A900  52E5               	movf	postdec1,f,c
 22179  01A902  52E5               	movf	postdec1,f,c
 22180  01A904  0012               	return		;funcret
 22181  01A906                     __end_of_isspace:
 22182                           	opt callstack 0
 22183                           
 22184 ;; *************** function _isdigit *****************
 22185 ;; Defined at:
 22186 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22187 ;; Parameters:    Size  Location     Type
 22188 ;;  c               2  [STACK] int 
 22189 ;; Auto vars:     Size  Location     Type
 22190 ;;		None
 22191 ;; Return value:  Size  Location     Type
 22192 ;;                  2  [STACK] int 
 22193 ;; Registers used:
 22194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22195 ;; Tracked objects:
 22196 ;;		On entry : 0/0
 22197 ;;		On exit  : 0/0
 22198 ;;		Unchanged: 0/0
 22199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22204 ;;Total ram usage:        0 bytes
 22205 ;; Hardware stack levels used:    1
 22206 ;; Hardware stack levels required when called:   15
 22207 ;; This function calls:
 22208 ;;		Nothing
 22209 ;; This function is called by:
 22210 ;;		_vfpfcnvrt
 22211 ;;		_atoi
 22212 ;; This function uses a reentrant model
 22213 ;;
 22214                           
 22215                           	psect	text79
 22216  01AF9A                     __ptext79:
 22217                           	opt callstack 0
 22218  01AF9A                     _isdigit:
 22219                           	opt callstack 0
 22220                           
 22221                           ;stkvar	_c @ sp[(0)+-2]
 22222                           
 22223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22224                           ;incstack = 0
 22225 ;; hardware stack exceeded
 22226  01AF9A  0EFE               	movlw	-2
 22227  01AF9C  50E3               	movf	plusw1,w,c
 22228  01AF9E  0FD0               	addlw	208
 22229  01AFA0  6E0B               	movwf	(btemp+10)^0,c
 22230  01AFA2  0EFF               	movlw	-1
 22231  01AFA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22232  01AFAA  0EFF               	movlw	255
 22233  01AFAC  220C               	addwfc	(btemp+11)^0,f,c
 22234  01AFAE  500C               	movf	(btemp+11)^0,w,c
 22235  01AFB0  E106               	bnz	u6010
 22236  01AFB2  0E0A               	movlw	10
 22237  01AFB4  5C0B               	subwf	(btemp+10)^0,w,c
 22238  01AFB6  B0D8               	btfsc	status,0,c
 22239  01AFB8  D002               	goto	u6010
 22240  01AFBA  0E01               	movlw	1
 22241  01AFBC  D001               	goto	u6020
 22242  01AFBE                     u6010:
 22243  01AFBE  0E00               	movlw	0
 22244  01AFC0                     u6020:
 22245  01AFC0  6E01               	movwf	btemp^0,c
 22246  01AFC2  6A02               	clrf	(btemp+1)^0,c
 22247                           
 22248                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22249  01AFC4  52E5               	movf	postdec1,f,c
 22250  01AFC6  52E5               	movf	postdec1,f,c
 22251  01AFC8  0012               	return		;funcret
 22252  01AFCA                     __end_of_isdigit:
 22253                           	opt callstack 0
 22254                           
 22255 ;; *************** function _set_vterm *****************
 22256 ;; Defined at:
 22257 ;;		line 107 in file "mconfig.c"
 22258 ;; Parameters:    Size  Location     Type
 22259 ;;  vterm           1  [STACK] const unsigned char 
 22260 ;; Auto vars:     Size  Location     Type
 22261 ;;		None
 22262 ;; Return value:  Size  Location     Type
 22263 ;;                  1  [STACK] unsigned char 
 22264 ;; Registers used:
 22265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22266 ;; Tracked objects:
 22267 ;;		On entry : 0/1
 22268 ;;		On exit  : 0/0
 22269 ;;		Unchanged: 0/0
 22270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22275 ;;Total ram usage:        0 bytes
 22276 ;; Hardware stack levels used:    1
 22277 ;; Hardware stack levels required when called:   15
 22278 ;; This function calls:
 22279 ;;		Nothing
 22280 ;; This function is called by:
 22281 ;;		_main
 22282 ;;		_check_help
 22283 ;; This function uses a reentrant model
 22284 ;;
 22285                           
 22286                           	psect	text80
 22287  01B4AC                     __ptext80:
 22288                           	opt callstack 0
 22289  01B4AC                     _set_vterm:
 22290                           	opt callstack 15
 22291                           
 22292                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22293                           ;stkvar	_vterm @ sp[(0)+-1]
 22294                           
 22295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22296                           ;incstack = 0
 22297  01B4AC  0EFF               	movlw	-1
 22298  01B4AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22299  01B4B4  0E03               	movlw	3
 22300  01B4B6  160C               	andwf	(btemp+11)^0,f,c
 22301  01B4B8  EE22  F11F         	lfsr	2,_D+288
 22302  01B4BC  50DF               	movf	223,w,c
 22303  01B4BE  180C               	xorwf	(btemp+11)^0,w,c
 22304  01B4C0  0BFE               	andlw	-2
 22305  01B4C2  180C               	xorwf	(btemp+11)^0,w,c
 22306  01B4C4  6EDF               	movwf	223,c
 22307                           
 22308                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22309  01B4C6  52E5               	movf	postdec1,f,c
 22310  01B4C8  0012               	return		;funcret
 22311  01B4CA                     __end_of_set_vterm:
 22312                           	opt callstack 0
 22313                           
 22314 ;; *************** function _set_temp_display_help *****************
 22315 ;; Defined at:
 22316 ;;		line 211 in file "mconfig.c"
 22317 ;; Parameters:    Size  Location     Type
 22318 ;;  new_response    1  [STACK] const enum E16509
 22319 ;; Auto vars:     Size  Location     Type
 22320 ;;		None
 22321 ;; Return value:  Size  Location     Type
 22322 ;;                  1  [STACK] enum E16509
 22323 ;; Registers used:
 22324 ;;		wreg, fsr1l, fsr1h
 22325 ;; Tracked objects:
 22326 ;;		On entry : 0/2
 22327 ;;		On exit  : 3F/2
 22328 ;;		Unchanged: 0/0
 22329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22334 ;;Total ram usage:        0 bytes
 22335 ;; Hardware stack levels used:    1
 22336 ;; Hardware stack levels required when called:   15
 22337 ;; This function calls:
 22338 ;;		Nothing
 22339 ;; This function is called by:
 22340 ;;		_check_help
 22341 ;; This function uses a reentrant model
 22342 ;;
 22343                           
 22344                           	psect	text81
 22345  01B64A                     __ptext81:
 22346                           	opt callstack 0
 22347  01B64A                     _set_temp_display_help:
 22348                           	opt callstack 14
 22349                           
 22350                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22351                           
 22352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22353                           ;incstack = 0
 22354  01B64A  0102               	movlb	2	; () banked
 22355  01B64C  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 22356                           
 22357                           ; BSR set to: 2
 22358                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22359                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22360  01B64E  0EFF               	movlw	-1
 22361  01B650  006F FF8C  F2A5    	movff	plusw1,_V+165	;volatile
 22362                           
 22363                           ; BSR set to: 2
 22364                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22365  01B656  52E5               	movf	postdec1,f,c
 22366  01B658  0012               	return		;funcret
 22367  01B65A                     __end_of_set_temp_display_help:
 22368                           	opt callstack 0
 22369                           
 22370 ;; *************** function _set_display_info *****************
 22371 ;; Defined at:
 22372 ;;		line 200 in file "mconfig.c"
 22373 ;; Parameters:    Size  Location     Type
 22374 ;;  new_response    1  [STACK] const enum E16509
 22375 ;; Auto vars:     Size  Location     Type
 22376 ;;		None
 22377 ;; Return value:  Size  Location     Type
 22378 ;;                  1  [STACK] enum E16994
 22379 ;; Registers used:
 22380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22381 ;; Tracked objects:
 22382 ;;		On entry : 0/0
 22383 ;;		On exit  : 0/0
 22384 ;;		Unchanged: 0/0
 22385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22390 ;;Total ram usage:        0 bytes
 22391 ;; Hardware stack levels used:    1
 22392 ;; Hardware stack levels required when called:   16
 22393 ;; This function calls:
 22394 ;;		_TimerDone
 22395 ;; This function is called by:
 22396 ;;		_main
 22397 ;;		_check_help
 22398 ;; This function uses a reentrant model
 22399 ;;
 22400                           
 22401                           	psect	text82
 22402  01B4CA                     __ptext82:
 22403                           	opt callstack 0
 22404  01B4CA                     _set_display_info:
 22405                           	opt callstack 14
 22406                           
 22407                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22408                           
 22409                           ; BSR set to: 2
 22410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22411                           ;incstack = 0
 22412  01B4CA  0E07               	movlw	7
 22413  01B4CC  6EE6               	movwf	postinc1,c
 22414  01B4CE  EC8F  F0D8         	call	_TimerDone	;wreg free
 22415  01B4D2  5001               	movf	btemp^0,w,c
 22416  01B4D4  B4D8               	btfsc	status,2,c
 22417  01B4D6  D006               	goto	l1712
 22418                           
 22419                           ;mconfig.c: 205:   old_info = V.response.info;
 22420  01B4D8  0102               	movlb	2	; () banked
 22421  01B4DA  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22422                           
 22423                           ; BSR set to: 2
 22424                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22425                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22426  01B4DC  0EFF               	movlw	-1
 22427  01B4DE  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22428  01B4E4                     l1712:
 22429                           
 22430                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22431  01B4E4  52E5               	movf	postdec1,f,c
 22432  01B4E6  0012               	return		;funcret
 22433  01B4E8                     __end_of_set_display_info:
 22434                           	opt callstack 0
 22435                           
 22436 ;; *************** function _mode_lamp_dim *****************
 22437 ;; Defined at:
 22438 ;;		line 13 in file "mconfig.c"
 22439 ;; Parameters:    Size  Location     Type
 22440 ;;  level           2  [STACK] const unsigned short 
 22441 ;; Auto vars:     Size  Location     Type
 22442 ;;		None
 22443 ;; Return value:  Size  Location     Type
 22444 ;;                  1  [STACK] void 
 22445 ;; Registers used:
 22446 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22447 ;; Tracked objects:
 22448 ;;		On entry : 0/2
 22449 ;;		On exit  : 0/0
 22450 ;;		Unchanged: 0/0
 22451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22456 ;;Total ram usage:        0 bytes
 22457 ;; Hardware stack levels used:    1
 22458 ;; Hardware stack levels required when called:   16
 22459 ;; This function calls:
 22460 ;;		_PWM8_LoadDutyValue
 22461 ;; This function is called by:
 22462 ;;		_main
 22463 ;;		_check_help
 22464 ;; This function uses a reentrant model
 22465 ;;
 22466                           
 22467                           	psect	text83
 22468  01B592                     __ptext83:
 22469                           	opt callstack 0
 22470  01B592                     _mode_lamp_dim:
 22471                           	opt callstack 14
 22472                           
 22473                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22474                           ;stkvar	_level @ sp[(0)+-2]
 22475                           
 22476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22477                           ;incstack = 0
 22478  01B592  0EFE               	movlw	-2
 22479  01B594  006F FF8F FFE6     	movff	plusw1,postinc1
 22480  01B59A  006F FF8F FFE6     	movff	plusw1,postinc1
 22481  01B5A0  ECED  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22482                           
 22483                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22484  01B5A4  52E5               	movf	postdec1,f,c
 22485  01B5A6  52E5               	movf	postdec1,f,c
 22486  01B5A8  0012               	return		;funcret
 22487  01B5AA                     __end_of_mode_lamp_dim:
 22488                           	opt callstack 0
 22489                           
 22490 ;; *************** function _mode_lamp_bright *****************
 22491 ;; Defined at:
 22492 ;;		line 18 in file "mconfig.c"
 22493 ;; Parameters:    Size  Location     Type
 22494 ;;		None
 22495 ;; Auto vars:     Size  Location     Type
 22496 ;;		None
 22497 ;; Return value:  Size  Location     Type
 22498 ;;                  1  [STACK] void 
 22499 ;; Registers used:
 22500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22501 ;; Tracked objects:
 22502 ;;		On entry : 0/0
 22503 ;;		On exit  : 0/0
 22504 ;;		Unchanged: 0/0
 22505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22510 ;;Total ram usage:        0 bytes
 22511 ;; Hardware stack levels used:    1
 22512 ;; Hardware stack levels required when called:   16
 22513 ;; This function calls:
 22514 ;;		_PWM8_LoadDutyValue
 22515 ;; This function is called by:
 22516 ;;		_check_help
 22517 ;; This function uses a reentrant model
 22518 ;;
 22519                           
 22520                           	psect	text84
 22521  01B668                     __ptext84:
 22522                           	opt callstack 0
 22523  01B668                     _mode_lamp_bright:
 22524                           	opt callstack 13
 22525                           
 22526                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22527                           
 22528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22529                           ;incstack = 0
 22530  01B668  0E2C               	movlw	44
 22531  01B66A  6EE6               	movwf	postinc1,c
 22532  01B66C  0E01               	movlw	1
 22533  01B66E  6EE6               	movwf	postinc1,c
 22534  01B670  ECED  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22535                           
 22536                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22537  01B674  0012               	return		;funcret
 22538  01B676                     __end_of_mode_lamp_bright:
 22539                           	opt callstack 0
 22540                           
 22541 ;; *************** function _PWM8_LoadDutyValue *****************
 22542 ;; Defined at:
 22543 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22544 ;; Parameters:    Size  Location     Type
 22545 ;;  dutyValue       2  [STACK] unsigned short 
 22546 ;; Auto vars:     Size  Location     Type
 22547 ;;		None
 22548 ;; Return value:  Size  Location     Type
 22549 ;;                  1  [STACK] void 
 22550 ;; Registers used:
 22551 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22552 ;; Tracked objects:
 22553 ;;		On entry : 0/2
 22554 ;;		On exit  : 0/0
 22555 ;;		Unchanged: 0/0
 22556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22561 ;;Total ram usage:        0 bytes
 22562 ;; Hardware stack levels used:    1
 22563 ;; Hardware stack levels required when called:   15
 22564 ;; This function calls:
 22565 ;;		Nothing
 22566 ;; This function is called by:
 22567 ;;		_mode_lamp_dim
 22568 ;;		_mode_lamp_bright
 22569 ;; This function uses a reentrant model
 22570 ;;
 22571                           
 22572                           	psect	text85
 22573  01ABDA                     __ptext85:
 22574                           	opt callstack 0
 22575  01ABDA                     _PWM8_LoadDutyValue:
 22576                           	opt callstack 14
 22577                           
 22578                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22579                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22580                           
 22581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22582                           ;incstack = 0
 22583  01ABDA  0EFE               	movlw	-2
 22584  01ABDC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22585  01ABE2  0EFF               	movlw	-1
 22586  01ABE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22587  01ABEA  90D8               	bcf	status,0,c
 22588  01ABEC  320C               	rrcf	(btemp+11)^0,f,c
 22589  01ABEE  320B               	rrcf	(btemp+10)^0,f,c
 22590  01ABF0  90D8               	bcf	status,0,c
 22591  01ABF2  320C               	rrcf	(btemp+11)^0,f,c
 22592  01ABF4  320B               	rrcf	(btemp+10)^0,f,c
 22593  01ABF6  500B               	movf	(btemp+10)^0,w,c
 22594  01ABF8  6E61               	movwf	97,c	;volatile
 22595                           
 22596                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22597                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22598  01ABFA  0EFE               	movlw	-2
 22599  01ABFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22600  01AC02  0E03               	movlw	3
 22601  01AC04  160C               	andwf	(btemp+11)^0,f,c
 22602  01AC06  0E06               	movlw	6
 22603  01AC08  6E01               	movwf	btemp^0,c
 22604  01AC0A                     u8815:
 22605  01AC0A  90D8               	bcf	status,0,c
 22606  01AC0C  360C               	rlcf	(btemp+11)^0,f,c
 22607  01AC0E  2E01               	decfsz	btemp^0,f,c
 22608  01AC10  D7FC               	goto	u8815
 22609  01AC12  500C               	movf	(btemp+11)^0,w,c
 22610  01AC14  6E60               	movwf	96,c	;volatile
 22611                           
 22612                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22613  01AC16  52E5               	movf	postdec1,f,c
 22614  01AC18  52E5               	movf	postdec1,f,c
 22615  01AC1A  0012               	return		;funcret
 22616  01AC1C                     __end_of_PWM8_LoadDutyValue:
 22617                           	opt callstack 0
 22618                           
 22619 ;; *************** function _help_button *****************
 22620 ;; Defined at:
 22621 ;;		line 26 in file "mconfig.c"
 22622 ;; Parameters:    Size  Location     Type
 22623 ;;		None
 22624 ;; Auto vars:     Size  Location     Type
 22625 ;;		None
 22626 ;; Return value:  Size  Location     Type
 22627 ;;                  1  [STACK] _Bool 
 22628 ;; Registers used:
 22629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22630 ;; Tracked objects:
 22631 ;;		On entry : 0/2
 22632 ;;		On exit  : 0/0
 22633 ;;		Unchanged: 0/0
 22634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22639 ;;Total ram usage:        0 bytes
 22640 ;; Hardware stack levels used:    1
 22641 ;; Hardware stack levels required when called:   16
 22642 ;; This function calls:
 22643 ;;		_StartTimer
 22644 ;;		_TimerDone
 22645 ;; This function is called by:
 22646 ;;		_check_help
 22647 ;; This function uses a reentrant model
 22648 ;;
 22649                           
 22650                           	psect	text86
 22651  01AD94                     __ptext86:
 22652                           	opt callstack 0
 22653  01AD94                     _help_button:
 22654                           	opt callstack 13
 22655                           
 22656                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22657                           
 22658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22659                           ;incstack = 0
 22660  01AD94  B0CB               	btfsc	203,0,c	;volatile
 22661  01AD96  D00C               	goto	l1655
 22662                           
 22663                           ;mconfig.c: 29:   V.help = 1;
 22664  01AD98  0102               	movlb	2	; () banked
 22665  01AD9A  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22666                           
 22667                           ; BSR set to: 2
 22668                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22669  01AD9C  0E08               	movlw	8
 22670  01AD9E  6EE6               	movwf	postinc1,c
 22671  01ADA0  EC8F  F0D8         	call	_TimerDone	;wreg free
 22672  01ADA4  5001               	movf	btemp^0,w,c
 22673  01ADA6  B4D8               	btfsc	status,2,c
 22674  01ADA8  D003               	goto	l1655
 22675                           
 22676                           ;mconfig.c: 31:    return 1;
 22677  01ADAA  0E01               	movlw	1
 22678  01ADAC  6E01               	movwf	btemp^0,c
 22679  01ADAE  0012               	return	
 22680  01ADB0                     l1655:
 22681                           
 22682                           ;mconfig.c: 34:  if (!V.help)
 22683  01ADB0  0102               	movlb	2	; () banked
 22684  01ADB2  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22685  01ADB4  D008               	goto	l10152
 22686                           
 22687                           ; BSR set to: 2
 22688                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22689  01ADB6  0E2C               	movlw	44
 22690  01ADB8  6EE6               	movwf	postinc1,c
 22691  01ADBA  0E01               	movlw	1
 22692  01ADBC  6EE6               	movwf	postinc1,c
 22693  01ADBE  0E08               	movlw	8
 22694  01ADC0  6EE6               	movwf	postinc1,c
 22695  01ADC2  EC0E  F0D6         	call	_StartTimer	;wreg free
 22696  01ADC6                     l10152:
 22697                           
 22698                           ;mconfig.c: 37:  return 0;
 22699  01ADC6  0E00               	movlw	0
 22700  01ADC8  6E01               	movwf	btemp^0,c
 22701                           
 22702                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22703  01ADCA  0012               	return		;funcret
 22704  01ADCC                     __end_of_help_button:
 22705                           	opt callstack 0
 22706                           
 22707 ;; *************** function _TimerDone *****************
 22708 ;; Defined at:
 22709 ;;		line 20 in file "timers.c"
 22710 ;; Parameters:    Size  Location     Type
 22711 ;;  timer           1  [STACK] const unsigned char 
 22712 ;; Auto vars:     Size  Location     Type
 22713 ;;		None
 22714 ;; Return value:  Size  Location     Type
 22715 ;;                  1  [STACK] _Bool 
 22716 ;; Registers used:
 22717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22718 ;; Tracked objects:
 22719 ;;		On entry : 0/0
 22720 ;;		On exit  : 0/0
 22721 ;;		Unchanged: 0/0
 22722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22727 ;;Total ram usage:        0 bytes
 22728 ;; Hardware stack levels used:    1
 22729 ;; Hardware stack levels required when called:   15
 22730 ;; This function calls:
 22731 ;;		Nothing
 22732 ;; This function is called by:
 22733 ;;		_main
 22734 ;;		_WaitMs
 22735 ;;		_help_button
 22736 ;;		_check_help
 22737 ;;		_set_display_info
 22738 ;;		_update_adc_result
 22739 ;;		_esr_check
 22740 ;; This function uses a reentrant model
 22741 ;;
 22742                           
 22743                           	psect	text87
 22744  01B11E                     __ptext87:
 22745                           	opt callstack 0
 22746  01B11E                     _TimerDone:
 22747                           	opt callstack 14
 22748                           
 22749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22750                           ;incstack = 0
 22751  01B11E  0004               	clrwdt		;# 
 22752                           
 22753                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22754                           ;stkvar	_timer @ sp[(0)+-1]
 22755  01B120  0EFF               	movlw	-1
 22756  01B122  50E3               	movf	plusw1,w,c
 22757  01B124  0D02               	mullw	2
 22758  01B126  0EE6               	movlw	low _tickCount
 22759  01B128  24F3               	addwf	243,w,c
 22760  01B12A  6ED9               	movwf	fsr2l,c
 22761  01B12C  0E02               	movlw	high _tickCount
 22762  01B12E  20F4               	addwfc	prodh,w,c
 22763  01B130  6EDA               	movwf	fsr2h,c
 22764  01B132  50DE               	movf	postinc2,w,c
 22765  01B134  10DE               	iorwf	postinc2,w,c
 22766  01B136  A4D8               	btfss	status,2,c
 22767  01B138  D002               	goto	l9378
 22768                           
 22769                           ;timers.c: 24:   return 1;
 22770  01B13A  0E01               	movlw	1
 22771  01B13C  D001               	goto	L25
 22772  01B13E                     l9378:
 22773                           
 22774                           ;timers.c: 26:  return 0;
 22775  01B13E  0E00               	movlw	0
 22776  01B140                     L25:
 22777  01B140  6E01               	movwf	btemp^0,c
 22778                           
 22779                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22780  01B142  52E5               	movf	postdec1,f,c
 22781  01B144  0012               	return		;funcret
 22782  01B146                     __end_of_TimerDone:
 22783                           	opt callstack 0
 22784                           
 22785 ;; *************** function _StartTimer *****************
 22786 ;; Defined at:
 22787 ;;		line 12 in file "timers.c"
 22788 ;; Parameters:    Size  Location     Type
 22789 ;;  timer           1  [STACK] const unsigned char 
 22790 ;;  count           2  [STACK] const unsigned short 
 22791 ;; Auto vars:     Size  Location     Type
 22792 ;;		None
 22793 ;; Return value:  Size  Location     Type
 22794 ;;                  1  [STACK] void 
 22795 ;; Registers used:
 22796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22797 ;; Tracked objects:
 22798 ;;		On entry : 0/0
 22799 ;;		On exit  : 0/0
 22800 ;;		Unchanged: 0/0
 22801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22806 ;;Total ram usage:        0 bytes
 22807 ;; Hardware stack levels used:    1
 22808 ;; Hardware stack levels required when called:   15
 22809 ;; This function calls:
 22810 ;;		Nothing
 22811 ;; This function is called by:
 22812 ;;		_main
 22813 ;;		_WaitMs
 22814 ;;		_help_button
 22815 ;;		_check_help
 22816 ;;		_update_adc_result
 22817 ;;		_calc_bsoc
 22818 ;;		_esr_check
 22819 ;; This function uses a reentrant model
 22820 ;;
 22821                           
 22822                           	psect	text88
 22823  01AC1C                     __ptext88:
 22824                           	opt callstack 0
 22825  01AC1C                     _StartTimer:
 22826                           	opt callstack 0
 22827                           
 22828                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22829                           ;stkvar	_count @ sp[(0)+-3]
 22830                           
 22831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22832                           ;incstack = 0
 22833 ;; hardware stack exceeded
 22834  01AC1C  0EFD               	movlw	-3
 22835  01AC1E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22836  01AC24  0EFE               	movlw	-2
 22837  01AC26  006F FF8C  F00C    	movff	plusw1,btemp+11
 22838  01AC2C  90D8               	bcf	status,0,c
 22839  01AC2E  340B               	rlcf	(btemp+10)^0,w,c
 22840  01AC30  6E09               	movwf	(btemp+8)^0,c
 22841  01AC32  340C               	rlcf	(btemp+11)^0,w,c
 22842  01AC34  6E0A               	movwf	(btemp+9)^0,c
 22843                           
 22844                           ;stkvar	_timer @ sp[(0)+-1]
 22845  01AC36  0EFF               	movlw	-1
 22846  01AC38  50E3               	movf	plusw1,w,c
 22847  01AC3A  0D02               	mullw	2
 22848  01AC3C  0EE6               	movlw	low _tickCount
 22849  01AC3E  24F3               	addwf	243,w,c
 22850  01AC40  6ED9               	movwf	fsr2l,c
 22851  01AC42  0E02               	movlw	high _tickCount
 22852  01AC44  20F4               	addwfc	prodh,w,c
 22853  01AC46  6EDA               	movwf	fsr2h,c
 22854  01AC48  0060  F027  FFDE   	movff	btemp+8,postinc2
 22855  01AC4E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 22856                           
 22857                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22858  01AC54  52E5               	movf	postdec1,f,c
 22859  01AC56  52E5               	movf	postdec1,f,c
 22860  01AC58  52E5               	movf	postdec1,f,c
 22861  01AC5A  0012               	return		;funcret
 22862  01AC5C                     __end_of_StartTimer:
 22863                           	opt callstack 0
 22864                           
 22865 ;; *************** function _display_info *****************
 22866 ;; Defined at:
 22867 ;;		line 190 in file "mconfig.c"
 22868 ;; Parameters:    Size  Location     Type
 22869 ;;		None
 22870 ;; Auto vars:     Size  Location     Type
 22871 ;;		None
 22872 ;; Return value:  Size  Location     Type
 22873 ;;                  1  [STACK] enum E16509
 22874 ;; Registers used:
 22875 ;;		btemp
 22876 ;; Tracked objects:
 22877 ;;		On entry : 0/2
 22878 ;;		On exit  : 0/0
 22879 ;;		Unchanged: 0/0
 22880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22885 ;;Total ram usage:        0 bytes
 22886 ;; Hardware stack levels used:    1
 22887 ;; Hardware stack levels required when called:   15
 22888 ;; This function calls:
 22889 ;;		Nothing
 22890 ;; This function is called by:
 22891 ;;		_check_help
 22892 ;; This function uses a reentrant model
 22893 ;;
 22894                           
 22895                           	psect	text89
 22896  01B6DE                     __ptext89:
 22897                           	opt callstack 0
 22898  01B6DE                     _display_info:
 22899                           	opt callstack 14
 22900                           
 22901                           ;mconfig.c: 192:  return V.response.info;
 22902                           
 22903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22904                           ;incstack = 0
 22905  01B6DE  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 22906                           
 22907                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22908  01B6E4  0012               	return		;funcret
 22909  01B6E6                     __end_of_display_info:
 22910                           	opt callstack 0
 22911                           
 22912 ;; *************** function _display_help *****************
 22913 ;; Defined at:
 22914 ;;		line 195 in file "mconfig.c"
 22915 ;; Parameters:    Size  Location     Type
 22916 ;;		None
 22917 ;; Auto vars:     Size  Location     Type
 22918 ;;		None
 22919 ;; Return value:  Size  Location     Type
 22920 ;;                  1  [STACK] enum E16509
 22921 ;; Registers used:
 22922 ;;		btemp
 22923 ;; Tracked objects:
 22924 ;;		On entry : 3F/2
 22925 ;;		On exit  : 0/0
 22926 ;;		Unchanged: 0/0
 22927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22932 ;;Total ram usage:        0 bytes
 22933 ;; Hardware stack levels used:    1
 22934 ;; Hardware stack levels required when called:   15
 22935 ;; This function calls:
 22936 ;;		Nothing
 22937 ;; This function is called by:
 22938 ;;		_check_help
 22939 ;; This function uses a reentrant model
 22940 ;;
 22941                           
 22942                           	psect	text90
 22943  01B6E6                     __ptext90:
 22944                           	opt callstack 0
 22945  01B6E6                     _display_help:
 22946                           	opt callstack 14
 22947                           
 22948                           ;mconfig.c: 197:  return V.response.help_temp;
 22949                           
 22950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22951                           ;incstack = 0
 22952  01B6E6  0060  FA94  F001   	movff	_V+165,btemp	;volatile
 22953                           
 22954                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22955  01B6EC  0012               	return		;funcret
 22956  01B6EE                     __end_of_display_help:
 22957                           	opt callstack 0
 22958                           
 22959 ;; *************** function _check_enter_button *****************
 22960 ;; Defined at:
 22961 ;;		line 42 in file "hid.c"
 22962 ;; Parameters:    Size  Location     Type
 22963 ;;  h               1  [STACK] PTR struct H_data
 22964 ;;		 -> H(7), 
 22965 ;; Auto vars:     Size  Location     Type
 22966 ;;		None
 22967 ;; Return value:  Size  Location     Type
 22968 ;;                  1  [STACK] _Bool 
 22969 ;; Registers used:
 22970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22971 ;; Tracked objects:
 22972 ;;		On entry : 0/0
 22973 ;;		On exit  : 0/0
 22974 ;;		Unchanged: 0/0
 22975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22980 ;;Total ram usage:        0 bytes
 22981 ;; Hardware stack levels used:    1
 22982 ;; Hardware stack levels required when called:   15
 22983 ;; This function calls:
 22984 ;;		Nothing
 22985 ;; This function is called by:
 22986 ;;		_main
 22987 ;; This function uses a reentrant model
 22988 ;;
 22989                           
 22990                           	psect	text91
 22991  01AC5C                     __ptext91:
 22992                           	opt callstack 0
 22993  01AC5C                     _check_enter_button:
 22994                           	opt callstack 15
 22995                           
 22996                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22997                           ;stkvar	_h @ sp[(0)+-1]
 22998                           
 22999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23000                           ;incstack = 0
 23001  01AC5C  0EFF               	movlw	-1
 23002  01AC5E  50E3               	movf	plusw1,w,c
 23003  01AC60  6ED9               	movwf	fsr2l,c
 23004  01AC62  6ADA               	clrf	fsr2h,c
 23005  01AC64  0E04               	movlw	4
 23006  01AC66  26D9               	addwf	fsr2l,f,c
 23007  01AC68  50DF               	movf	indf2,w,c
 23008  01AC6A  A4D8               	btfss	status,2,c
 23009  01AC6C  D013               	goto	l10748
 23010                           
 23011                           ;stkvar	_h @ sp[(0)+-1]
 23012  01AC6E  0EFF               	movlw	-1
 23013  01AC70  50E3               	movf	plusw1,w,c
 23014  01AC72  6ED9               	movwf	fsr2l,c
 23015  01AC74  6ADA               	clrf	fsr2h,c
 23016  01AC76  0E05               	movlw	5
 23017  01AC78  26D9               	addwf	fsr2l,f,c
 23018  01AC7A  50DF               	movf	indf2,w,c
 23019  01AC7C  A4D8               	btfss	status,2,c
 23020  01AC7E  D00A               	goto	l10748
 23021                           
 23022                           ;hid.c: 45:   h->wait_enter = 1;
 23023                           ;stkvar	_h @ sp[(0)+-1]
 23024  01AC80  0EFF               	movlw	-1
 23025  01AC82  50E3               	movf	plusw1,w,c
 23026  01AC84  6ED9               	movwf	fsr2l,c
 23027  01AC86  6ADA               	clrf	fsr2h,c
 23028  01AC88  0E04               	movlw	4
 23029  01AC8A  26D9               	addwf	fsr2l,f,c
 23030  01AC8C  0E01               	movlw	1
 23031  01AC8E  6EDF               	movwf	indf2,c
 23032                           
 23033                           ;hid.c: 46:   return 1;
 23034  01AC90  0E01               	movlw	1
 23035  01AC92  D001               	goto	L26
 23036  01AC94                     l10748:
 23037                           
 23038                           ;hid.c: 48:  return 0;
 23039  01AC94  0E00               	movlw	0
 23040  01AC96                     L26:
 23041  01AC96  6E01               	movwf	btemp^0,c
 23042                           
 23043                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23044  01AC98  52E5               	movf	postdec1,f,c
 23045  01AC9A  0012               	return		;funcret
 23046  01AC9C                     __end_of_check_enter_button:
 23047                           	opt callstack 0
 23048                           
 23049 ;; *************** function _calc_ror_data *****************
 23050 ;; Defined at:
 23051 ;;		line 101 in file "mbmc.c"
 23052 ;; Parameters:    Size  Location     Type
 23053 ;;		None
 23054 ;; Auto vars:     Size  Location     Type
 23055 ;;		None
 23056 ;; Return value:  Size  Location     Type
 23057 ;;                  1  [STACK] void 
 23058 ;; Registers used:
 23059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23060 ;; Tracked objects:
 23061 ;;		On entry : 0/39
 23062 ;;		On exit  : 0/0
 23063 ;;		Unchanged: 0/0
 23064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23069 ;;Total ram usage:        0 bytes
 23070 ;; Hardware stack levels used:    1
 23071 ;; Hardware stack levels required when called:   18
 23072 ;; This function calls:
 23073 ;;		___flge
 23074 ;;		___flsub
 23075 ;;		_conv_raw_result
 23076 ;;		_fabsf
 23077 ;; This function is called by:
 23078 ;;		_main
 23079 ;; This function uses a reentrant model
 23080 ;;
 23081                           
 23082                           	psect	text92
 23083  01828A                     __ptext92:
 23084                           	opt callstack 0
 23085  01828A                     _calc_ror_data:
 23086                           	opt callstack 12
 23087                           
 23088                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23089                           
 23090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23091                           ;incstack = 0
 23092  01828A  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23093  018290  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23094  018296  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23095  01829C  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23096  0182A2  0E00               	movlw	0
 23097  0182A4  6EE6               	movwf	postinc1,c
 23098  0182A6  0E00               	movlw	0
 23099  0182A8  6EE6               	movwf	postinc1,c
 23100  0182AA  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23101  0182AE  0060  F007  FFE6   	movff	btemp,postinc1
 23102  0182B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23103  0182BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23104  0182C0  0060  F013  FFE6   	movff	btemp+3,postinc1
 23105  0182C6  EC3F  F0D5         	call	___flsub	;wreg free
 23106  0182CA  0060  F007  FFE6   	movff	btemp,postinc1
 23107  0182D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23108  0182D6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23109  0182DC  0060  F013  FFE6   	movff	btemp+3,postinc1
 23110  0182E2  ECF7  F0CD         	call	_fabsf	;wreg free
 23111  0182E6  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 23112  0182EC  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 23113  0182F2  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 23114  0182F8  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 23115                           
 23116                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 23117  0182FE  0E00               	movlw	0
 23118  018300  6EE6               	movwf	postinc1,c
 23119  018302  0E00               	movlw	0
 23120  018304  6EE6               	movwf	postinc1,c
 23121  018306  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23122  01830A  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23123  018310  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23124  018316  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23125  01831C  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23126                           
 23127                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23128  018322  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23129  018328  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23130  01832E  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23131  018334  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23132  01833A  0E00               	movlw	0
 23133  01833C  6EE6               	movwf	postinc1,c
 23134  01833E  0E04               	movlw	4
 23135  018340  6EE6               	movwf	postinc1,c
 23136  018342  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23137  018346  0060  F007  FFE6   	movff	btemp,postinc1
 23138  01834C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23139  018352  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23140  018358  0060  F013  FFE6   	movff	btemp+3,postinc1
 23141  01835E  EC3F  F0D5         	call	___flsub	;wreg free
 23142  018362  0060  F007  FFE6   	movff	btemp,postinc1
 23143  018368  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23144  01836E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23145  018374  0060  F013  FFE6   	movff	btemp+3,postinc1
 23146  01837A  ECF7  F0CD         	call	_fabsf	;wreg free
 23147  01837E  0060  F004  F168   	movff	btemp,_C+104	;volatile
 23148  018384  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 23149  01838A  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 23150  018390  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 23151                           
 23152                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 23153  018396  0EE7               	movlw	231
 23154  018398  6EE6               	movwf	postinc1,c
 23155  01839A  0E1D               	movlw	29
 23156  01839C  6EE6               	movwf	postinc1,c
 23157  01839E  0EA7               	movlw	167
 23158  0183A0  6EE6               	movwf	postinc1,c
 23159  0183A2  0E3B               	movlw	59
 23160  0183A4  6EE6               	movwf	postinc1,c
 23161  0183A6  0060  F5A3  FFE6   	movff	_C+104,postinc1
 23162  0183AC  0060  F5A7  FFE6   	movff	_C+105,postinc1
 23163  0183B2  0060  F5AB  FFE6   	movff	_C+106,postinc1
 23164  0183B8  0060  F5AF  FFE6   	movff	_C+107,postinc1
 23165  0183BE  EC70  F0C3         	call	___flge	;wreg free
 23166  0183C2  B001               	btfsc	btemp& (0+255),0,c
 23167  0183C4  D009               	goto	l10542
 23168                           
 23169                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 23170  0183C6  0EB0               	movlw	176
 23171  0183C8  0101               	movlb	1	; () banked
 23172  0183CA  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 23173  0183CC  0E03               	movlw	3
 23174  0183CE  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 23175  0183D0  0E67               	movlw	103
 23176  0183D2  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 23177  0183D4  0E3C               	movlw	60
 23178  0183D6  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 23179  0183D8                     l10542:
 23180                           
 23181                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 23182  0183D8  0E00               	movlw	0
 23183  0183DA  6EE6               	movwf	postinc1,c
 23184  0183DC  0E04               	movlw	4
 23185  0183DE  6EE6               	movwf	postinc1,c
 23186  0183E0  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23187  0183E4  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23188  0183EA  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23189  0183F0  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23190  0183F6  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23191                           
 23192                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23193  0183FC  0012               	return		;funcret
 23194  0183FE                     __end_of_calc_ror_data:
 23195                           	opt callstack 0
 23196                           
 23197 ;; *************** function _fabsf *****************
 23198 ;; Defined at:
 23199 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23200 ;; Parameters:    Size  Location     Type
 23201 ;;  x               4  [STACK] float 
 23202 ;; Auto vars:     Size  Location     Type
 23203 ;;  u               4  [STACK] struct .
 23204 ;; Return value:  Size  Location     Type
 23205 ;;                  4  [STACK] float 
 23206 ;; Registers used:
 23207 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23208 ;; Tracked objects:
 23209 ;;		On entry : 0/0
 23210 ;;		On exit  : 0/0
 23211 ;;		Unchanged: 0/0
 23212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23217 ;;Total ram usage:        0 bytes
 23218 ;; Hardware stack levels used:    1
 23219 ;; Hardware stack levels required when called:   15
 23220 ;; This function calls:
 23221 ;;		Nothing
 23222 ;; This function is called by:
 23223 ;;		_main
 23224 ;;		_calc_ror_data
 23225 ;;		_calc_bsoc
 23226 ;;		_esr_check
 23227 ;; This function uses a reentrant model
 23228 ;;
 23229                           
 23230                           	psect	text93
 23231  019BEE                     __ptext93:
 23232                           	opt callstack 0
 23233  019BEE                     _fabsf:
 23234                           	opt callstack 0
 23235                           
 23236                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23237  019BEE  52E6               	movf	postinc1,f,c
 23238  019BF0  52E6               	movf	postinc1,f,c
 23239  019BF2  52E6               	movf	postinc1,f,c
 23240  019BF4  52E6               	movf	postinc1,f,c
 23241                           
 23242                           ;incstack = 0
 23243 ;; hardware stack exceeded
 23244  019BF6  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23245  019BFC  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23246  019C02  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23247  019C08  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23248                           
 23249                           ;stkvar	_u @ sp[(-4)+0]
 23250  019C0E  0EFC               	movlw	-4
 23251  019C10  0060  F027  FFE3   	movff	btemp+8,plusw1
 23252  019C16  0EFD               	movlw	-3
 23253  019C18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23254  019C1E  0EFE               	movlw	-2
 23255  019C20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23256  019C26  0EFF               	movlw	-1
 23257  019C28  0060  F033  FFE3   	movff	btemp+11,plusw1
 23258                           
 23259                           ;stkvar	_x @ sp[(-4)+-4]
 23260  019C2E  0EF8               	movlw	-8
 23261  019C30  006F FF8C  F009    	movff	plusw1,btemp+8
 23262  019C36  0EF9               	movlw	-7
 23263  019C38  006F FF8C  F00A    	movff	plusw1,btemp+9
 23264  019C3E  0EFA               	movlw	-6
 23265  019C40  006F FF8C  F00B    	movff	plusw1,btemp+10
 23266  019C46  0EFB               	movlw	-5
 23267  019C48  006F FF8C  F00C    	movff	plusw1,btemp+11
 23268                           
 23269                           ;stkvar	_u @ sp[(-4)+0]
 23270  019C4E  0EFC               	movlw	-4
 23271  019C50  0060  F027  FFE3   	movff	btemp+8,plusw1
 23272  019C56  0EFD               	movlw	-3
 23273  019C58  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23274  019C5E  0EFE               	movlw	-2
 23275  019C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23276  019C66  0EFF               	movlw	-1
 23277  019C68  0060  F033  FFE3   	movff	btemp+11,plusw1
 23278                           
 23279                           ;stkvar	_u @ sp[(-4)+0]
 23280  019C6E  0EFF               	movlw	-1
 23281  019C70  9EE3               	bcf	plusw1,7,c
 23282                           
 23283                           ;stkvar	_u @ sp[(-4)+0]
 23284  019C72  0EFC               	movlw	-4
 23285  019C74  006F FF8C  F001    	movff	plusw1,btemp
 23286  019C7A  0EFD               	movlw	-3
 23287  019C7C  006F FF8C  F002    	movff	plusw1,btemp+1
 23288  019C82  0EFE               	movlw	-2
 23289  019C84  006F FF8C  F003    	movff	plusw1,btemp+2
 23290  019C8A  0EFF               	movlw	-1
 23291  019C8C  006F FF8C  F004    	movff	plusw1,btemp+3
 23292                           
 23293                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23294  019C92  0EF8               	movlw	248
 23295  019C94  26E1               	addwf	fsr1l,f,c
 23296  019C96  0EFF               	movlw	255
 23297  019C98  22E2               	addwfc	fsr1h,f,c
 23298  019C9A  0012               	return		;funcret
 23299  019C9C                     __end_of_fabsf:
 23300                           	opt callstack 0
 23301                           
 23302 ;; *************** function _conv_raw_result *****************
 23303 ;; Defined at:
 23304 ;;		line 95 in file "daq.c"
 23305 ;; Parameters:    Size  Location     Type
 23306 ;;  chan            1  [STACK] const enum E16582
 23307 ;;  to_what         1  [STACK] const enum E16644
 23308 ;; Auto vars:     Size  Location     Type
 23309 ;;		None
 23310 ;; Return value:  Size  Location     Type
 23311 ;;                  4  [STACK] float 
 23312 ;; Registers used:
 23313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23314 ;; Tracked objects:
 23315 ;;		On entry : 0/39
 23316 ;;		On exit  : 0/0
 23317 ;;		Unchanged: 0/0
 23318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23323 ;;Total ram usage:        0 bytes
 23324 ;; Hardware stack levels used:    1
 23325 ;; Hardware stack levels required when called:   17
 23326 ;; This function calls:
 23327 ;;		___fldiv
 23328 ;;		___flmul
 23329 ;;		___flsub
 23330 ;;		___xxtofl
 23331 ;;		_get_raw_result
 23332 ;;		_nanf
 23333 ;; This function is called by:
 23334 ;;		_main
 23335 ;;		_convert_adc_data
 23336 ;;		_calc_ror_data
 23337 ;;		_init_bsoc
 23338 ;;		_esr_check
 23339 ;; This function uses a reentrant model
 23340 ;;
 23341                           
 23342                           	psect	text94
 23343  014EB0                     __ptext94:
 23344                           	opt callstack 0
 23345  014EB0                     _conv_raw_result:
 23346                           	opt callstack 12
 23347                           
 23348                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23349                           
 23350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23351                           ;incstack = 0
 23352  014EB0  D242               	goto	l10082
 23353  014EB2                     l10028:
 23354                           
 23355                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23356                           ;stkvar	_chan @ sp[(0)+-1]
 23357  014EB2  0EFF               	movlw	-1
 23358  014EB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23359  014EBA  0E77               	movlw	119
 23360  014EBC  6E09               	movwf	(btemp+8)^0,c
 23361  014EBE  0E3C               	movlw	60
 23362  014EC0  6E0A               	movwf	(btemp+9)^0,c
 23363  014EC2  2A0C               	incf	(btemp+11)^0,f,c
 23364  014EC4  D003               	goto	u9074
 23365  014EC6                     u9075:
 23366  014EC6  340A               	rlcf	(btemp+9)^0,w,c
 23367  014EC8  320A               	rrcf	(btemp+9)^0,f,c
 23368  014ECA  3209               	rrcf	(btemp+8)^0,f,c
 23369  014ECC                     u9074:
 23370  014ECC  2E0C               	decfsz	(btemp+11)^0,f,c
 23371  014ECE  D7FB               	goto	u9075
 23372  014ED0  B009               	btfsc	(btemp+8)^0,0,c
 23373  014ED2  D007               	goto	l10034
 23374                           
 23375                           ;daq.c: 101:    return nanf("");
 23376  014ED4  0EBB               	movlw	low (STR_65+84)
 23377  014ED6  6EE6               	movwf	postinc1,c
 23378  014ED8  0EFC               	movlw	high (STR_65+84)
 23379  014EDA  6EE6               	movwf	postinc1,c
 23380  014EDC  EC49  F0D3         	call	_nanf	;wreg free
 23381  014EE0  D23A               	goto	l1774
 23382  014EE2                     l10034:
 23383                           
 23384                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23385                           ;stkvar	_chan @ sp[(0)+-1]
 23386  014EE2  0EFF               	movlw	-1
 23387  014EE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23388  014EEA  0E03               	movlw	3
 23389  014EEC  6E09               	movwf	(btemp+8)^0,c
 23390  014EEE  0E00               	movlw	0
 23391  014EF0  6E0A               	movwf	(btemp+9)^0,c
 23392  014EF2  2A0C               	incf	(btemp+11)^0,f,c
 23393  014EF4  D003               	goto	u9094
 23394  014EF6                     u9095:
 23395  014EF6  340A               	rlcf	(btemp+9)^0,w,c
 23396  014EF8  320A               	rrcf	(btemp+9)^0,f,c
 23397  014EFA  3209               	rrcf	(btemp+8)^0,f,c
 23398  014EFC                     u9094:
 23399  014EFC  2E0C               	decfsz	(btemp+11)^0,f,c
 23400  014EFE  D7FB               	goto	u9095
 23401  014F00  A009               	btfss	(btemp+8)^0,0,c
 23402  014F02  D0EB               	goto	l10048
 23403                           
 23404                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23405                           ;stkvar	_chan @ sp[(0)+-1]
 23406  014F04  0EFF               	movlw	-1
 23407  014F06  006F FF8C  F00C    	movff	plusw1,btemp+11
 23408  014F0C  0E01               	movlw	1
 23409  014F0E  6E09               	movwf	(btemp+8)^0,c
 23410  014F10  0E00               	movlw	0
 23411  014F12  6E0A               	movwf	(btemp+9)^0,c
 23412  014F14  2A0C               	incf	(btemp+11)^0,f,c
 23413  014F16  D003               	goto	u9114
 23414  014F18                     u9115:
 23415  014F18  340A               	rlcf	(btemp+9)^0,w,c
 23416  014F1A  320A               	rrcf	(btemp+9)^0,f,c
 23417  014F1C  3209               	rrcf	(btemp+8)^0,f,c
 23418  014F1E                     u9114:
 23419  014F1E  2E0C               	decfsz	(btemp+11)^0,f,c
 23420  014F20  D7FB               	goto	u9115
 23421  014F22  A009               	btfss	(btemp+8)^0,0,c
 23422  014F24  D06D               	goto	l10044
 23423                           
 23424                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23425  014F26  0E7B               	movlw	123
 23426  014F28  6EE6               	movwf	postinc1,c
 23427  014F2A  0E14               	movlw	20
 23428  014F2C  6EE6               	movwf	postinc1,c
 23429  014F2E  0EAE               	movlw	174
 23430  014F30  6EE6               	movwf	postinc1,c
 23431  014F32  0E3D               	movlw	61
 23432  014F34  6EE6               	movwf	postinc1,c
 23433  014F36  0060  F390  F009   	movff	_R+32,btemp+8	;volatile
 23434  014F3C  0060  F394  F00A   	movff	_R+33,btemp+9	;volatile
 23435  014F42  0E00               	movlw	0
 23436  014F44  BE0A               	btfsc	(btemp+9)^0,7,c
 23437  014F46  0EFF               	movlw	255
 23438  014F48  6E0B               	movwf	(btemp+10)^0,c
 23439  014F4A  6E0C               	movwf	(btemp+11)^0,c
 23440  014F4C  0060  F027  FFE6   	movff	btemp+8,postinc1
 23441  014F52  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23442  014F58  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23443  014F5E  0060  F033  FFE6   	movff	btemp+11,postinc1
 23444  014F64  0E01               	movlw	1
 23445  014F66  6EE6               	movwf	postinc1,c
 23446  014F68  ECDA  F0BC         	call	___xxtofl	;wreg free
 23447  014F6C  0060  F007  FFE6   	movff	btemp,postinc1
 23448  014F72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23449  014F78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23450  014F7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23451                           
 23452                           ;stkvar	_chan @ sp[(-8)+-1]
 23453  014F84  0EF7               	movlw	-9
 23454  014F86  50E3               	movf	plusw1,w,c
 23455  014F88  6EE6               	movwf	postinc1,c
 23456  014F8A  EC74  F0DA         	call	_get_raw_result	;wreg free
 23457  014F8E  0060  F004  F00B   	movff	btemp,btemp+10
 23458  014F94  0060  F008  F00C   	movff	btemp+1,btemp+11
 23459  014F9A  500B               	movf	(btemp+10)^0,w,c
 23460  014F9C  6E05               	movwf	(btemp+4)^0,c
 23461  014F9E  500C               	movf	(btemp+11)^0,w,c
 23462  014FA0  6E06               	movwf	(btemp+5)^0,c
 23463  014FA2  6A07               	clrf	(btemp+6)^0,c
 23464  014FA4  6A08               	clrf	(btemp+7)^0,c
 23465  014FA6  0060  F017  FFE6   	movff	btemp+4,postinc1
 23466  014FAC  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23467  014FB2  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23468  014FB8  0060  F023  FFE6   	movff	btemp+7,postinc1
 23469  014FBE  0E00               	movlw	0
 23470  014FC0  6EE6               	movwf	postinc1,c
 23471  014FC2  ECDA  F0BC         	call	___xxtofl	;wreg free
 23472  014FC6  0060  F007  FFE6   	movff	btemp,postinc1
 23473  014FCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23474  014FD2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23475  014FD8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23476  014FDE  EC3F  F0D5         	call	___flsub	;wreg free
 23477  014FE2  0060  F007  FFE6   	movff	btemp,postinc1
 23478  014FE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23479  014FEE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23480  014FF4  0060  F013  FFE6   	movff	btemp+3,postinc1
 23481  014FFA  EC0F  F099         	call	___flmul	;wreg free
 23482  014FFE  D1AB               	goto	l1774
 23483  015000                     l10044:
 23484                           
 23485                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23486  015000  0E29               	movlw	41
 23487  015002  6EE6               	movwf	postinc1,c
 23488  015004  0E5C               	movlw	92
 23489  015006  6EE6               	movwf	postinc1,c
 23490  015008  0E0F               	movlw	15
 23491  01500A  6EE6               	movwf	postinc1,c
 23492  01500C  0E3D               	movlw	61
 23493  01500E  6EE6               	movwf	postinc1,c
 23494  015010  0060  F398  F009   	movff	_R+34,btemp+8	;volatile
 23495  015016  0060  F39C  F00A   	movff	_R+35,btemp+9	;volatile
 23496  01501C  0E00               	movlw	0
 23497  01501E  BE0A               	btfsc	(btemp+9)^0,7,c
 23498  015020  0EFF               	movlw	255
 23499  015022  6E0B               	movwf	(btemp+10)^0,c
 23500  015024  6E0C               	movwf	(btemp+11)^0,c
 23501  015026  0060  F027  FFE6   	movff	btemp+8,postinc1
 23502  01502C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23503  015032  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23504  015038  0060  F033  FFE6   	movff	btemp+11,postinc1
 23505  01503E  0E01               	movlw	1
 23506  015040  6EE6               	movwf	postinc1,c
 23507  015042  ECDA  F0BC         	call	___xxtofl	;wreg free
 23508  015046  0060  F007  FFE6   	movff	btemp,postinc1
 23509  01504C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23510  015052  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23511  015058  0060  F013  FFE6   	movff	btemp+3,postinc1
 23512                           
 23513                           ;stkvar	_chan @ sp[(-8)+-1]
 23514  01505E  0EF7               	movlw	-9
 23515  015060  50E3               	movf	plusw1,w,c
 23516  015062  6EE6               	movwf	postinc1,c
 23517  015064  EC74  F0DA         	call	_get_raw_result	;wreg free
 23518  015068  0060  F004  F00B   	movff	btemp,btemp+10
 23519  01506E  0060  F008  F00C   	movff	btemp+1,btemp+11
 23520  015074  500B               	movf	(btemp+10)^0,w,c
 23521  015076  6E05               	movwf	(btemp+4)^0,c
 23522  015078  500C               	movf	(btemp+11)^0,w,c
 23523  01507A  6E06               	movwf	(btemp+5)^0,c
 23524  01507C  6A07               	clrf	(btemp+6)^0,c
 23525  01507E  6A08               	clrf	(btemp+7)^0,c
 23526  015080  0060  F017  FFE6   	movff	btemp+4,postinc1
 23527  015086  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23528  01508C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23529  015092  0060  F023  FFE6   	movff	btemp+7,postinc1
 23530  015098  0E00               	movlw	0
 23531  01509A  6EE6               	movwf	postinc1,c
 23532  01509C  ECDA  F0BC         	call	___xxtofl	;wreg free
 23533  0150A0  0060  F007  FFE6   	movff	btemp,postinc1
 23534  0150A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23535  0150AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23536  0150B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23537  0150B8  EC3F  F0D5         	call	___flsub	;wreg free
 23538  0150BC  0060  F007  FFE6   	movff	btemp,postinc1
 23539  0150C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23540  0150C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23541  0150CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 23542  0150D4  EC0F  F099         	call	___flmul	;wreg free
 23543  0150D8  D13E               	goto	l1774
 23544  0150DA                     l10048:
 23545                           
 23546                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23547                           ;stkvar	_chan @ sp[(0)+-1]
 23548  0150DA  0EFF               	movlw	-1
 23549  0150DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23550  0150E2  0E00               	movlw	0
 23551  0150E4  6E09               	movwf	(btemp+8)^0,c
 23552  0150E6  0E08               	movlw	8
 23553  0150E8  6E0A               	movwf	(btemp+9)^0,c
 23554  0150EA  2A0C               	incf	(btemp+11)^0,f,c
 23555  0150EC  D003               	goto	u9134
 23556  0150EE                     u9135:
 23557  0150EE  340A               	rlcf	(btemp+9)^0,w,c
 23558  0150F0  320A               	rrcf	(btemp+9)^0,f,c
 23559  0150F2  3209               	rrcf	(btemp+8)^0,f,c
 23560  0150F4                     u9134:
 23561  0150F4  2E0C               	decfsz	(btemp+11)^0,f,c
 23562  0150F6  D7FB               	goto	u9135
 23563  0150F8  A009               	btfss	(btemp+8)^0,0,c
 23564  0150FA  D008               	goto	l10056
 23565                           
 23566                           ;daq.c: 111:     return 25.0;
 23567  0150FC  0E00               	movlw	0
 23568  0150FE  6E01               	movwf	btemp^0,c
 23569  015100  0E00               	movlw	0
 23570  015102  6E02               	movwf	(btemp+1)^0,c
 23571  015104  0EC8               	movlw	200
 23572  015106  6E03               	movwf	(btemp+2)^0,c
 23573  015108  0E41               	movlw	65
 23574  01510A  D113               	goto	L27
 23575  01510C                     l10056:
 23576                           
 23577                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23578  01510C  0E00               	movlw	0
 23579  01510E  6EE6               	movwf	postinc1,c
 23580  015110  0E00               	movlw	0
 23581  015112  6EE6               	movwf	postinc1,c
 23582  015114  0E7A               	movlw	122
 23583  015116  6EE6               	movwf	postinc1,c
 23584  015118  0E44               	movlw	68
 23585  01511A  6EE6               	movwf	postinc1,c
 23586  01511C  0E61               	movlw	97
 23587  01511E  6EE6               	movwf	postinc1,c
 23588  015120  0E03               	movlw	3
 23589  015122  6EE6               	movwf	postinc1,c
 23590  015124  0E84               	movlw	132
 23591  015126  6EE6               	movwf	postinc1,c
 23592  015128  0E40               	movlw	64
 23593  01512A  6EE6               	movwf	postinc1,c
 23594                           
 23595                           ;stkvar	_chan @ sp[(-8)+-1]
 23596  01512C  0EF7               	movlw	-9
 23597  01512E  50E3               	movf	plusw1,w,c
 23598  015130  6EE6               	movwf	postinc1,c
 23599  015132  EC74  F0DA         	call	_get_raw_result	;wreg free
 23600  015136  0060  F004  F00B   	movff	btemp,btemp+10
 23601  01513C  0060  F008  F00C   	movff	btemp+1,btemp+11
 23602  015142  500B               	movf	(btemp+10)^0,w,c
 23603  015144  6E05               	movwf	(btemp+4)^0,c
 23604  015146  500C               	movf	(btemp+11)^0,w,c
 23605  015148  6E06               	movwf	(btemp+5)^0,c
 23606  01514A  6A07               	clrf	(btemp+6)^0,c
 23607  01514C  6A08               	clrf	(btemp+7)^0,c
 23608  01514E  0060  F017  FFE6   	movff	btemp+4,postinc1
 23609  015154  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23610  01515A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23611  015160  0060  F023  FFE6   	movff	btemp+7,postinc1
 23612  015166  0E00               	movlw	0
 23613  015168  6EE6               	movwf	postinc1,c
 23614  01516A  ECDA  F0BC         	call	___xxtofl	;wreg free
 23615  01516E  0060  F007  FFE6   	movff	btemp,postinc1
 23616  015174  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23617  01517A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23618  015180  0060  F013  FFE6   	movff	btemp+3,postinc1
 23619  015186  EC0F  F099         	call	___flmul	;wreg free
 23620  01518A  0060  F007  FFE6   	movff	btemp,postinc1
 23621  015190  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23622  015196  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23623  01519C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23624  0151A2  EC9B  F0A4         	call	___fldiv	;wreg free
 23625  0151A6  D0D7               	goto	l1774
 23626  0151A8                     l10060:
 23627                           
 23628                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23629                           ;stkvar	_chan @ sp[(0)+-1]
 23630  0151A8  0EFF               	movlw	-1
 23631  0151AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 23632  0151B0  0E03               	movlw	3
 23633  0151B2  6E09               	movwf	(btemp+8)^0,c
 23634  0151B4  0E00               	movlw	0
 23635  0151B6  6E0A               	movwf	(btemp+9)^0,c
 23636  0151B8  2A0C               	incf	(btemp+11)^0,f,c
 23637  0151BA  D003               	goto	u9154
 23638  0151BC                     u9155:
 23639  0151BC  340A               	rlcf	(btemp+9)^0,w,c
 23640  0151BE  320A               	rrcf	(btemp+9)^0,f,c
 23641  0151C0  3209               	rrcf	(btemp+8)^0,f,c
 23642  0151C2                     u9154:
 23643  0151C2  2E0C               	decfsz	(btemp+11)^0,f,c
 23644  0151C4  D7FB               	goto	u9155
 23645  0151C6  B009               	btfsc	(btemp+8)^0,0,c
 23646  0151C8  D011               	goto	u9180
 23647                           
 23648                           ;stkvar	_chan @ sp[(0)+-1]
 23649  0151CA  0EFF               	movlw	-1
 23650  0151CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23651  0151D2  0E00               	movlw	0
 23652  0151D4  6E09               	movwf	(btemp+8)^0,c
 23653  0151D6  0E08               	movlw	8
 23654  0151D8  6E0A               	movwf	(btemp+9)^0,c
 23655  0151DA  2A0C               	incf	(btemp+11)^0,f,c
 23656  0151DC  D003               	goto	u9174
 23657  0151DE                     u9175:
 23658  0151DE  340A               	rlcf	(btemp+9)^0,w,c
 23659  0151E0  320A               	rrcf	(btemp+9)^0,f,c
 23660  0151E2  3209               	rrcf	(btemp+8)^0,f,c
 23661  0151E4                     u9174:
 23662  0151E4  2E0C               	decfsz	(btemp+11)^0,f,c
 23663  0151E6  D7FB               	goto	u9175
 23664  0151E8  A009               	btfss	(btemp+8)^0,0,c
 23665  0151EA  D04E               	goto	l10068
 23666  0151EC                     u9180:
 23667                           
 23668                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23669  0151EC  0E00               	movlw	0
 23670  0151EE  6EE6               	movwf	postinc1,c
 23671  0151F0  0E00               	movlw	0
 23672  0151F2  6EE6               	movwf	postinc1,c
 23673  0151F4  0E7A               	movlw	122
 23674  0151F6  6EE6               	movwf	postinc1,c
 23675  0151F8  0E44               	movlw	68
 23676  0151FA  6EE6               	movwf	postinc1,c
 23677  0151FC  0E00               	movlw	0
 23678  0151FE  6EE6               	movwf	postinc1,c
 23679  015200  0E00               	movlw	0
 23680  015202  6EE6               	movwf	postinc1,c
 23681  015204  0E20               	movlw	32
 23682  015206  6EE6               	movwf	postinc1,c
 23683  015208  0E3F               	movlw	63
 23684  01520A  6EE6               	movwf	postinc1,c
 23685                           
 23686                           ;stkvar	_chan @ sp[(-8)+-1]
 23687  01520C  0EF7               	movlw	-9
 23688  01520E  50E3               	movf	plusw1,w,c
 23689  015210  6EE6               	movwf	postinc1,c
 23690  015212  EC74  F0DA         	call	_get_raw_result	;wreg free
 23691  015216  0060  F004  F00B   	movff	btemp,btemp+10
 23692  01521C  0060  F008  F00C   	movff	btemp+1,btemp+11
 23693  015222  500B               	movf	(btemp+10)^0,w,c
 23694  015224  6E05               	movwf	(btemp+4)^0,c
 23695  015226  500C               	movf	(btemp+11)^0,w,c
 23696  015228  6E06               	movwf	(btemp+5)^0,c
 23697  01522A  6A07               	clrf	(btemp+6)^0,c
 23698  01522C  6A08               	clrf	(btemp+7)^0,c
 23699  01522E  0060  F017  FFE6   	movff	btemp+4,postinc1
 23700  015234  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23701  01523A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23702  015240  0060  F023  FFE6   	movff	btemp+7,postinc1
 23703  015246  0E00               	movlw	0
 23704  015248  6EE6               	movwf	postinc1,c
 23705  01524A  ECDA  F0BC         	call	___xxtofl	;wreg free
 23706  01524E  0060  F007  FFE6   	movff	btemp,postinc1
 23707  015254  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23708  01525A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23709  015260  0060  F013  FFE6   	movff	btemp+3,postinc1
 23710  015266  EC0F  F099         	call	___flmul	;wreg free
 23711  01526A  0060  F007  FFE6   	movff	btemp,postinc1
 23712  015270  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23713  015276  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23714  01527C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23715  015282  EC9B  F0A4         	call	___fldiv	;wreg free
 23716  015286  D067               	goto	l1774
 23717  015288                     l10068:
 23718                           
 23719                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23720  015288  0E00               	movlw	0
 23721  01528A  6EE6               	movwf	postinc1,c
 23722  01528C  0E00               	movlw	0
 23723  01528E  6EE6               	movwf	postinc1,c
 23724  015290  0E7A               	movlw	122
 23725  015292  6EE6               	movwf	postinc1,c
 23726  015294  0E44               	movlw	68
 23727  015296  6EE6               	movwf	postinc1,c
 23728  015298  0E61               	movlw	97
 23729  01529A  6EE6               	movwf	postinc1,c
 23730  01529C  0E03               	movlw	3
 23731  01529E  6EE6               	movwf	postinc1,c
 23732  0152A0  0E84               	movlw	132
 23733  0152A2  6EE6               	movwf	postinc1,c
 23734  0152A4  0E40               	movlw	64
 23735  0152A6  6EE6               	movwf	postinc1,c
 23736                           
 23737                           ;stkvar	_chan @ sp[(-8)+-1]
 23738  0152A8  0EF7               	movlw	-9
 23739  0152AA  50E3               	movf	plusw1,w,c
 23740  0152AC  6EE6               	movwf	postinc1,c
 23741  0152AE  EC74  F0DA         	call	_get_raw_result	;wreg free
 23742  0152B2  0060  F004  F00B   	movff	btemp,btemp+10
 23743  0152B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 23744  0152BE  500B               	movf	(btemp+10)^0,w,c
 23745  0152C0  6E05               	movwf	(btemp+4)^0,c
 23746  0152C2  500C               	movf	(btemp+11)^0,w,c
 23747  0152C4  6E06               	movwf	(btemp+5)^0,c
 23748  0152C6  6A07               	clrf	(btemp+6)^0,c
 23749  0152C8  6A08               	clrf	(btemp+7)^0,c
 23750  0152CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 23751  0152D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23752  0152D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23753  0152DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 23754  0152E2  0E00               	movlw	0
 23755  0152E4  6EE6               	movwf	postinc1,c
 23756  0152E6  ECDA  F0BC         	call	___xxtofl	;wreg free
 23757  0152EA  0060  F007  FFE6   	movff	btemp,postinc1
 23758  0152F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23759  0152F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23760  0152FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 23761  015302  EC0F  F099         	call	___flmul	;wreg free
 23762  015306  0060  F007  FFE6   	movff	btemp,postinc1
 23763  01530C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23764  015312  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23765  015318  0060  F013  FFE6   	movff	btemp+3,postinc1
 23766  01531E  EC9B  F0A4         	call	___fldiv	;wreg free
 23767  015322  D019               	goto	l1774
 23768  015324                     l10074:
 23769                           
 23770                           ;daq.c: 124:   return 0.0;
 23771  015324  0E00               	movlw	0
 23772  015326  6E01               	movwf	btemp^0,c
 23773  015328  0E00               	movlw	0
 23774  01532A  6E02               	movwf	(btemp+1)^0,c
 23775  01532C  0E00               	movlw	0
 23776  01532E  6E03               	movwf	(btemp+2)^0,c
 23777  015330  0E00               	movlw	0
 23778  015332                     L27:
 23779  015332  6E04               	movwf	(btemp+3)^0,c
 23780  015334  D010               	goto	l1774
 23781  015336                     l10082:
 23782                           
 23783                           ;stkvar	_to_what @ sp[(0)+-2]
 23784  015336  0EFE               	movlw	-2
 23785  015338  50E3               	movf	plusw1,w,c
 23786  01533A  6E0B               	movwf	(btemp+10)^0,c
 23787  01533C  6A0C               	clrf	(btemp+11)^0,c
 23788                           
 23789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23790                           ; Switch size 1, requested type "simple"
 23791                           ; Number of cases is 1, Range of values is 0 to 0
 23792                           ; switch strategies available:
 23793                           ; Name         Instructions Cycles
 23794                           ; simple_byte            4     3 (average)
 23795                           ;	Chosen strategy is simple_byte
 23796  01533E  500C               	movf	(btemp+11)^0,w,c
 23797  015340  0A00               	xorlw	0	; case 0
 23798  015342  A4D8               	btfss	status,2,c
 23799  015344  D7EF               	goto	l10074
 23800                           
 23801                           ; Switch size 1, requested type "simple"
 23802                           ; Number of cases is 2, Range of values is 0 to 1
 23803                           ; switch strategies available:
 23804                           ; Name         Instructions Cycles
 23805                           ; simple_byte            7     4 (average)
 23806                           ;	Chosen strategy is simple_byte
 23807  015346  500B               	movf	(btemp+10)^0,w,c
 23808  015348  0A00               	xorlw	0	; case 0
 23809  01534A  B4D8               	btfsc	status,2,c
 23810  01534C  D5B2               	goto	l10028
 23811  01534E  0A01               	xorlw	1	; case 1
 23812  015350  B4D8               	btfsc	status,2,c
 23813  015352  D72A               	goto	l10060
 23814  015354  D7E7               	goto	l10074
 23815  015356                     l1774:
 23816                           
 23817                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23818  015356  52E5               	movf	postdec1,f,c
 23819  015358  52E5               	movf	postdec1,f,c
 23820  01535A  0012               	return		;funcret
 23821  01535C                     __end_of_conv_raw_result:
 23822                           	opt callstack 0
 23823                           
 23824 ;; *************** function _nanf *****************
 23825 ;; Defined at:
 23826 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23827 ;; Parameters:    Size  Location     Type
 23828 ;;  s               2  [STACK] PTR const unsigned char 
 23829 ;;		 -> STR_102(1), STR_64(1), 
 23830 ;; Auto vars:     Size  Location     Type
 23831 ;;  u               4  [STACK] struct .
 23832 ;; Return value:  Size  Location     Type
 23833 ;;                  4  [STACK] float 
 23834 ;; Registers used:
 23835 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23836 ;; Tracked objects:
 23837 ;;		On entry : 0/39
 23838 ;;		On exit  : 0/0
 23839 ;;		Unchanged: 0/0
 23840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23845 ;;Total ram usage:        0 bytes
 23846 ;; Hardware stack levels used:    1
 23847 ;; Hardware stack levels required when called:   15
 23848 ;; This function calls:
 23849 ;;		Nothing
 23850 ;; This function is called by:
 23851 ;;		_conv_raw_result
 23852 ;; This function uses a reentrant model
 23853 ;;
 23854                           
 23855                           	psect	text95
 23856  01A692                     __ptext95:
 23857                           	opt callstack 0
 23858  01A692                     _nanf:
 23859                           	opt callstack 0
 23860                           
 23861                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23862  01A692  52E6               	movf	postinc1,f,c
 23863  01A694  52E6               	movf	postinc1,f,c
 23864  01A696  52E6               	movf	postinc1,f,c
 23865  01A698  52E6               	movf	postinc1,f,c
 23866                           
 23867                           ;incstack = 0
 23868  01A69A  0EFF               	movlw	255
 23869  01A69C  6E09               	movwf	(btemp+8)^0,c
 23870  01A69E  0EFF               	movlw	255
 23871  01A6A0  6E0A               	movwf	(btemp+9)^0,c
 23872  01A6A2  0EFF               	movlw	255
 23873  01A6A4  6E0B               	movwf	(btemp+10)^0,c
 23874  01A6A6  0E7F               	movlw	127
 23875  01A6A8  6E0C               	movwf	(btemp+11)^0,c
 23876                           
 23877                           ;stkvar	_u @ sp[(-4)+0]
 23878  01A6AA  0EFC               	movlw	-4
 23879  01A6AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 23880  01A6B2  0EFD               	movlw	-3
 23881  01A6B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23882  01A6BA  0EFE               	movlw	-2
 23883  01A6BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23884  01A6C2  0EFF               	movlw	-1
 23885  01A6C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 23886                           
 23887                           ;stkvar	_u @ sp[(-4)+0]
 23888  01A6CA  0EFC               	movlw	-4
 23889  01A6CC  006F FF8C  F001    	movff	plusw1,btemp
 23890  01A6D2  0EFD               	movlw	-3
 23891  01A6D4  006F FF8C  F002    	movff	plusw1,btemp+1
 23892  01A6DA  0EFE               	movlw	-2
 23893  01A6DC  006F FF8C  F003    	movff	plusw1,btemp+2
 23894  01A6E2  0EFF               	movlw	-1
 23895  01A6E4  006F FF8C  F004    	movff	plusw1,btemp+3
 23896                           
 23897                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23898  01A6EA  0EFA               	movlw	250
 23899  01A6EC  26E1               	addwf	fsr1l,f,c
 23900  01A6EE  0EFF               	movlw	255
 23901  01A6F0  22E2               	addwfc	fsr1h,f,c
 23902  01A6F2  0012               	return		;funcret
 23903  01A6F4                     __end_of_nanf:
 23904                           	opt callstack 0
 23905                           
 23906 ;; *************** function _get_raw_result *****************
 23907 ;; Defined at:
 23908 ;;		line 87 in file "daq.c"
 23909 ;; Parameters:    Size  Location     Type
 23910 ;;  index           1  [STACK] const enum E16582
 23911 ;; Auto vars:     Size  Location     Type
 23912 ;;		None
 23913 ;; Return value:  Size  Location     Type
 23914 ;;                  2  [STACK] unsigned short 
 23915 ;; Registers used:
 23916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23917 ;; Tracked objects:
 23918 ;;		On entry : 0/2
 23919 ;;		On exit  : 0/0
 23920 ;;		Unchanged: 0/0
 23921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23926 ;;Total ram usage:        0 bytes
 23927 ;; Hardware stack levels used:    1
 23928 ;; Hardware stack levels required when called:   15
 23929 ;; This function calls:
 23930 ;;		Nothing
 23931 ;; This function is called by:
 23932 ;;		_main
 23933 ;;		_conv_raw_result
 23934 ;; This function uses a reentrant model
 23935 ;;
 23936                           
 23937                           	psect	text96
 23938  01B4E8                     __ptext96:
 23939                           	opt callstack 0
 23940  01B4E8                     _get_raw_result:
 23941                           	opt callstack 13
 23942                           
 23943                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23944                           ;stkvar	_index @ sp[(0)+-1]
 23945                           
 23946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23947                           ;incstack = 0
 23948  01B4E8  0EFF               	movlw	-1
 23949  01B4EA  50E3               	movf	plusw1,w,c
 23950  01B4EC  0D02               	mullw	2
 23951  01B4EE  50F3               	movf	243,w,c
 23952  01B4F0  0FC4               	addlw	low _R
 23953  01B4F2  6ED9               	movwf	fsr2l,c
 23954  01B4F4  6ADA               	clrf	fsr2h,c
 23955  01B4F6  006F FF78  F001    	movff	postinc2,btemp
 23956  01B4FC  006F FF74  F002    	movff	postdec2,btemp+1
 23957                           
 23958                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23959  01B502  52E5               	movf	postdec1,f,c
 23960  01B504  0012               	return		;funcret
 23961  01B506                     __end_of_get_raw_result:
 23962                           	opt callstack 0
 23963                           
 23964 ;; *************** function ___xxtofl *****************
 23965 ;; Defined at:
 23966 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23967 ;; Parameters:    Size  Location     Type
 23968 ;;  sign            1  [STACK] unsigned char 
 23969 ;;  val             4  [STACK] long 
 23970 ;; Auto vars:     Size  Location     Type
 23971 ;;  arg             4  [STACK] unsigned long 
 23972 ;;  exp             1  [STACK] unsigned char 
 23973 ;; Return value:  Size  Location     Type
 23974 ;;                  4  [STACK] unsigned char 
 23975 ;; Registers used:
 23976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23977 ;; Tracked objects:
 23978 ;;		On entry : 0/1
 23979 ;;		On exit  : 0/0
 23980 ;;		Unchanged: 0/0
 23981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23986 ;;Total ram usage:        0 bytes
 23987 ;; Hardware stack levels used:    1
 23988 ;; Hardware stack levels required when called:   15
 23989 ;; This function calls:
 23990 ;;		Nothing
 23991 ;; This function is called by:
 23992 ;;		_conv_raw_result
 23993 ;;		_init_bsoc
 23994 ;; This function uses a reentrant model
 23995 ;;
 23996                           
 23997                           	psect	text97
 23998  0179B4                     __ptext97:
 23999                           	opt callstack 0
 24000  0179B4                     ___xxtofl:
 24001                           	opt callstack 0
 24002                           
 24003                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24004  0179B4  0E05               	movlw	5
 24005  0179B6  26E1               	addwf	fsr1l,f,c
 24006  0179B8  0E00               	movlw	0
 24007  0179BA  22E2               	addwfc	fsr1h,f,c
 24008                           
 24009                           ;stkvar	_sign @ sp[(-5)+-1]
 24010                           
 24011                           ;incstack = 0
 24012  0179BC  0EFA               	movlw	-6
 24013  0179BE  50E3               	movf	plusw1,w,c
 24014  0179C0  B4D8               	btfsc	status,2,c
 24015  0179C2  D01D               	goto	l9564
 24016                           
 24017                           ;stkvar	_val @ sp[(-5)+-5]
 24018  0179C4  0EF9               	movlw	-7
 24019  0179C6  AEE3               	btfss	plusw1,7,c
 24020  0179C8  D01A               	goto	l9564
 24021                           
 24022                           ;stkvar	_val @ sp[(-5)+-5]
 24023  0179CA  0EF6               	movlw	-10
 24024  0179CC  006F FF8C  F009    	movff	plusw1,btemp+8
 24025  0179D2  0EF7               	movlw	-9
 24026  0179D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 24027  0179DA  0EF8               	movlw	-8
 24028  0179DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24029  0179E2  0EF9               	movlw	-7
 24030  0179E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24031  0179EA  1E09               	comf	(btemp+8)^0,f,c
 24032  0179EC  1E0A               	comf	(btemp+9)^0,f,c
 24033  0179EE  1E0B               	comf	(btemp+10)^0,f,c
 24034  0179F0  1E0C               	comf	(btemp+11)^0,f,c
 24035  0179F2  2A09               	incf	(btemp+8)^0,f,c
 24036  0179F4  0E00               	movlw	0
 24037  0179F6  220A               	addwfc	(btemp+9)^0,f,c
 24038  0179F8  220B               	addwfc	(btemp+10)^0,f,c
 24039  0179FA  220C               	addwfc	(btemp+11)^0,f,c
 24040  0179FC  D010               	goto	L28
 24041  0179FE                     l9564:
 24042                           
 24043                           ;stkvar	_val @ sp[(-5)+-5]
 24044  0179FE  0EF6               	movlw	-10
 24045  017A00  006F FF8C  F009    	movff	plusw1,btemp+8
 24046  017A06  0EF7               	movlw	-9
 24047  017A08  006F FF8C  F00A    	movff	plusw1,btemp+9
 24048  017A0E  0EF8               	movlw	-8
 24049  017A10  006F FF8C  F00B    	movff	plusw1,btemp+10
 24050  017A16  0EF9               	movlw	-7
 24051  017A18  006F FF8C  F00C    	movff	plusw1,btemp+11
 24052  017A1E                     L28:
 24053                           
 24054                           ;stkvar	_arg @ sp[(-5)+0]
 24055  017A1E  0EFB               	movlw	-5
 24056  017A20  0060  F027  FFE3   	movff	btemp+8,plusw1
 24057  017A26  0EFC               	movlw	-4
 24058  017A28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24059  017A2E  0EFD               	movlw	-3
 24060  017A30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24061  017A36  0EFE               	movlw	-2
 24062  017A38  0060  F033  FFE3   	movff	btemp+11,plusw1
 24063                           
 24064                           ;stkvar	_val @ sp[(-5)+-5]
 24065  017A3E  0EF6               	movlw	-10
 24066  017A40  50E3               	movf	plusw1,w,c
 24067  017A42  E113               	bnz	l9572
 24068  017A44  0EF7               	movlw	-9
 24069  017A46  50E3               	movf	plusw1,w,c
 24070  017A48  E110               	bnz	l9572
 24071  017A4A  0EF8               	movlw	-8
 24072  017A4C  50E3               	movf	plusw1,w,c
 24073  017A4E  E10D               	bnz	l9572
 24074  017A50  0EF9               	movlw	-7
 24075  017A52  50E3               	movf	plusw1,w,c
 24076  017A54  A4D8               	btfss	status,2,c
 24077  017A56  D009               	goto	l9572
 24078  017A58  0E00               	movlw	0
 24079  017A5A  6E01               	movwf	btemp^0,c
 24080  017A5C  0E00               	movlw	0
 24081  017A5E  6E02               	movwf	(btemp+1)^0,c
 24082  017A60  0E00               	movlw	0
 24083  017A62  6E03               	movwf	(btemp+2)^0,c
 24084  017A64  0E00               	movlw	0
 24085  017A66  6E04               	movwf	(btemp+3)^0,c
 24086  017A68  D0A2               	goto	l3015
 24087  017A6A                     l9572:
 24088  017A6A  0E96               	movlw	150
 24089  017A6C  6E0C               	movwf	(btemp+11)^0,c
 24090                           
 24091                           ;stkvar	_exp @ sp[(-5)+4]
 24092  017A6E  0EFF               	movlw	-1
 24093  017A70  0060  F033  FFE3   	movff	btemp+11,plusw1
 24094  017A76  D00B               	goto	l9576
 24095  017A78                     l9574:
 24096                           
 24097                           ;stkvar	_exp @ sp[(-5)+4]
 24098  017A78  0EFF               	movlw	-1
 24099  017A7A  2AE3               	incf	plusw1,f,c
 24100                           
 24101                           ;stkvar	_arg @ sp[(-5)+0]
 24102  017A7C  90D8               	bcf	status,0,c
 24103  017A7E  0EFE               	movlw	-2
 24104  017A80  32E3               	rrcf	plusw1,f,c
 24105  017A82  0EFD               	movlw	-3
 24106  017A84  32E3               	rrcf	plusw1,f,c
 24107  017A86  0EFC               	movlw	-4
 24108  017A88  32E3               	rrcf	plusw1,f,c
 24109  017A8A  0EFB               	movlw	-5
 24110  017A8C  32E3               	rrcf	plusw1,f,c
 24111  017A8E                     l9576:
 24112                           
 24113                           ;stkvar	_arg @ sp[(-5)+0]
 24114  017A8E  50E1               	movf	fsr1l,w,c
 24115  017A90  0FFB               	addlw	-5
 24116  017A92  6ED9               	movwf	fsr2l,c
 24117  017A94  50E2               	movf	fsr1h,w,c
 24118  017A96  6EDA               	movwf	fsr2h,c
 24119  017A98  0EFF               	movlw	255
 24120  017A9A  22DA               	addwfc	fsr2h,f,c
 24121  017A9C  52DE               	movf	postinc2,f,c
 24122  017A9E  52DE               	movf	postinc2,f,c
 24123  017AA0  52DE               	movf	postinc2,f,c
 24124  017AA2  0EFE               	movlw	254
 24125  017AA4  14DD               	andwf	postdec2,w,c
 24126  017AA6  B4D8               	btfsc	status,2,c
 24127  017AA8  D018               	goto	l9584
 24128  017AAA  D7E6               	goto	l9574
 24129  017AAC                     l9578:
 24130                           
 24131                           ;stkvar	_exp @ sp[(-5)+4]
 24132  017AAC  0EFF               	movlw	-1
 24133  017AAE  2AE3               	incf	plusw1,f,c
 24134                           
 24135                           ;stkvar	_arg @ sp[(-5)+0]
 24136  017AB0  50E1               	movf	fsr1l,w,c
 24137  017AB2  0FFB               	addlw	-5
 24138  017AB4  6ED9               	movwf	fsr2l,c
 24139  017AB6  50E2               	movf	fsr1h,w,c
 24140  017AB8  6EDA               	movwf	fsr2h,c
 24141  017ABA  0EFF               	movlw	255
 24142  017ABC  22DA               	addwfc	fsr2h,f,c
 24143  017ABE  2ADE               	incf	postinc2,f,c
 24144  017AC0  0E00               	movlw	0
 24145  017AC2  22DE               	addwfc	postinc2,f,c
 24146  017AC4  22DE               	addwfc	postinc2,f,c
 24147  017AC6  22DE               	addwfc	postinc2,f,c
 24148                           
 24149                           ;stkvar	_arg @ sp[(-5)+0]
 24150  017AC8  90D8               	bcf	status,0,c
 24151  017ACA  0EFE               	movlw	-2
 24152  017ACC  32E3               	rrcf	plusw1,f,c
 24153  017ACE  0EFD               	movlw	-3
 24154  017AD0  32E3               	rrcf	plusw1,f,c
 24155  017AD2  0EFC               	movlw	-4
 24156  017AD4  32E3               	rrcf	plusw1,f,c
 24157  017AD6  0EFB               	movlw	-5
 24158  017AD8  32E3               	rrcf	plusw1,f,c
 24159  017ADA                     l9584:
 24160                           
 24161                           ;stkvar	_arg @ sp[(-5)+0]
 24162  017ADA  50E1               	movf	fsr1l,w,c
 24163  017ADC  0FFB               	addlw	-5
 24164  017ADE  6ED9               	movwf	fsr2l,c
 24165  017AE0  50E2               	movf	fsr1h,w,c
 24166  017AE2  6EDA               	movwf	fsr2h,c
 24167  017AE4  0EFF               	movlw	255
 24168  017AE6  22DA               	addwfc	fsr2h,f,c
 24169  017AE8  52DE               	movf	postinc2,f,c
 24170  017AEA  52DE               	movf	postinc2,f,c
 24171  017AEC  52DE               	movf	postinc2,f,c
 24172  017AEE  0EFF               	movlw	255
 24173  017AF0  14DD               	andwf	postdec2,w,c
 24174  017AF2  B4D8               	btfsc	status,2,c
 24175  017AF4  D00C               	goto	l9588
 24176  017AF6  D7DA               	goto	l9578
 24177  017AF8                     l9586:
 24178                           
 24179                           ;stkvar	_exp @ sp[(-5)+4]
 24180  017AF8  0EFF               	movlw	-1
 24181  017AFA  06E3               	decf	plusw1,f,c
 24182                           
 24183                           ;stkvar	_arg @ sp[(-5)+0]
 24184  017AFC  90D8               	bcf	status,0,c
 24185  017AFE  0EFB               	movlw	-5
 24186  017B00  36E3               	rlcf	plusw1,f,c
 24187  017B02  0EFC               	movlw	-4
 24188  017B04  36E3               	rlcf	plusw1,f,c
 24189  017B06  0EFD               	movlw	-3
 24190  017B08  36E3               	rlcf	plusw1,f,c
 24191  017B0A  0EFE               	movlw	-2
 24192  017B0C  36E3               	rlcf	plusw1,f,c
 24193  017B0E                     l9588:
 24194                           
 24195                           ;stkvar	_arg @ sp[(-5)+0]
 24196  017B0E  0EFD               	movlw	-3
 24197  017B10  BEE3               	btfsc	plusw1,7,c
 24198  017B12  D007               	goto	u8920
 24199                           
 24200                           ;stkvar	_exp @ sp[(-5)+4]
 24201  017B14  0EFF               	movlw	-1
 24202  017B16  006F FF8C  F001    	movff	plusw1,btemp
 24203  017B1C  0E02               	movlw	2
 24204  017B1E  6001               	cpfslt	btemp^0,c
 24205  017B20  D7EB               	goto	l9586
 24206  017B22                     u8920:
 24207                           
 24208                           ;stkvar	_exp @ sp[(-5)+4]
 24209  017B22  0EFF               	movlw	-1
 24210  017B24  B0E3               	btfsc	plusw1,0,c
 24211  017B26  D002               	goto	l9596
 24212                           
 24213                           ;stkvar	_arg @ sp[(-5)+0]
 24214  017B28  0EFD               	movlw	-3
 24215  017B2A  9EE3               	bcf	plusw1,7,c
 24216  017B2C                     l9596:
 24217                           
 24218                           ;stkvar	_exp @ sp[(-5)+4]
 24219  017B2C  50E1               	movf	fsr1l,w,c
 24220  017B2E  0FFF               	addlw	-1
 24221  017B30  6ED9               	movwf	fsr2l,c
 24222  017B32  50E2               	movf	fsr1h,w,c
 24223  017B34  6EDA               	movwf	fsr2h,c
 24224  017B36  0EFF               	movlw	255
 24225  017B38  22DA               	addwfc	fsr2h,f,c
 24226  017B3A  90D8               	bcf	status,0,c
 24227  017B3C  32DF               	rrcf	indf2,f,c
 24228                           
 24229                           ;stkvar	_exp @ sp[(-5)+4]
 24230  017B3E  0EFF               	movlw	-1
 24231  017B40  006F FF8C  F00C    	movff	plusw1,btemp+11
 24232  017B46  0060  F030  F005   	movff	btemp+11,btemp+4
 24233  017B4C  6A06               	clrf	(btemp+5)^0,c
 24234  017B4E  6A07               	clrf	(btemp+6)^0,c
 24235  017B50  6A08               	clrf	(btemp+7)^0,c
 24236  017B52  0060  F014  F008   	movff	btemp+4,btemp+7
 24237  017B58  6A07               	clrf	(btemp+6)^0,c
 24238  017B5A  6A06               	clrf	(btemp+5)^0,c
 24239  017B5C  6A05               	clrf	(btemp+4)^0,c
 24240                           
 24241                           ;stkvar	_arg @ sp[(-5)+0]
 24242  017B5E  50E1               	movf	fsr1l,w,c
 24243  017B60  0FFB               	addlw	-5
 24244  017B62  6ED9               	movwf	fsr2l,c
 24245  017B64  50E2               	movf	fsr1h,w,c
 24246  017B66  6EDA               	movwf	fsr2h,c
 24247  017B68  0EFF               	movlw	255
 24248  017B6A  22DA               	addwfc	fsr2h,f,c
 24249  017B6C  5005               	movf	(btemp+4)^0,w,c
 24250  017B6E  12DE               	iorwf	postinc2,f,c
 24251  017B70  5006               	movf	(btemp+5)^0,w,c
 24252  017B72  12DE               	iorwf	postinc2,f,c
 24253  017B74  5007               	movf	(btemp+6)^0,w,c
 24254  017B76  12DE               	iorwf	postinc2,f,c
 24255  017B78  5008               	movf	(btemp+7)^0,w,c
 24256  017B7A  12DE               	iorwf	postinc2,f,c
 24257                           
 24258                           ;stkvar	_sign @ sp[(-5)+-1]
 24259  017B7C  0EFA               	movlw	-6
 24260  017B7E  50E3               	movf	plusw1,w,c
 24261  017B80  B4D8               	btfsc	status,2,c
 24262  017B82  D005               	goto	l9606
 24263                           
 24264                           ;stkvar	_val @ sp[(-5)+-5]
 24265  017B84  0EF9               	movlw	-7
 24266  017B86  AEE3               	btfss	plusw1,7,c
 24267  017B88  D002               	goto	l9606
 24268                           
 24269                           ;stkvar	_arg @ sp[(-5)+0]
 24270  017B8A  0EFE               	movlw	-2
 24271  017B8C  8EE3               	bsf	plusw1,7,c
 24272  017B8E                     l9606:
 24273                           
 24274                           ;stkvar	_arg @ sp[(-5)+0]
 24275  017B8E  0EFB               	movlw	-5
 24276  017B90  006F FF8C  F001    	movff	plusw1,btemp
 24277  017B96  0EFC               	movlw	-4
 24278  017B98  006F FF8C  F002    	movff	plusw1,btemp+1
 24279  017B9E  0EFD               	movlw	-3
 24280  017BA0  006F FF8C  F003    	movff	plusw1,btemp+2
 24281  017BA6  0EFE               	movlw	-2
 24282  017BA8  006F FF8C  F004    	movff	plusw1,btemp+3
 24283  017BAE                     l3015:
 24284                           
 24285                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24286  017BAE  0EF6               	movlw	246
 24287  017BB0  26E1               	addwf	fsr1l,f,c
 24288  017BB2  0EFF               	movlw	255
 24289  017BB4  22E2               	addwfc	fsr1h,f,c
 24290  017BB6  0012               	return		;funcret
 24291  017BB8                     __end_of___xxtofl:
 24292                           	opt callstack 0
 24293                           
 24294 ;; *************** function ___fldiv *****************
 24295 ;; Defined at:
 24296 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24297 ;; Parameters:    Size  Location     Type
 24298 ;;  b               4  [STACK] unsigned char 
 24299 ;;  a               4  [STACK] unsigned char 
 24300 ;; Auto vars:     Size  Location     Type
 24301 ;;  grs             4  [STACK] unsigned long 
 24302 ;;  rem             4  [STACK] unsigned long 
 24303 ;;  new_exp         2  [STACK] short 
 24304 ;;  aexp            1  [STACK] unsigned char 
 24305 ;;  bexp            1  [STACK] unsigned char 
 24306 ;;  sign            1  [STACK] unsigned char 
 24307 ;; Return value:  Size  Location     Type
 24308 ;;                  4  [STACK] unsigned char 
 24309 ;; Registers used:
 24310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24311 ;; Tracked objects:
 24312 ;;		On entry : 0/1
 24313 ;;		On exit  : 0/0
 24314 ;;		Unchanged: 0/0
 24315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24320 ;;Total ram usage:        0 bytes
 24321 ;; Hardware stack levels used:    1
 24322 ;; Hardware stack levels required when called:   15
 24323 ;; This function calls:
 24324 ;;		Nothing
 24325 ;; This function is called by:
 24326 ;;		_conv_raw_result
 24327 ;;		_calc_bsoc
 24328 ;;		_init_bsoc
 24329 ;;		_esr_check
 24330 ;;		_efgtoa
 24331 ;; This function uses a reentrant model
 24332 ;;
 24333                           
 24334                           	psect	text98
 24335  014936                     __ptext98:
 24336                           	opt callstack 0
 24337  014936                     ___fldiv:
 24338                           	opt callstack 0
 24339                           
 24340                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24341  014936  0E0D               	movlw	13
 24342  014938  26E1               	addwf	fsr1l,f,c
 24343  01493A  0E00               	movlw	0
 24344  01493C  22E2               	addwfc	fsr1h,f,c
 24345                           
 24346                           ;stkvar	_b @ sp[(-13)+-4]
 24347                           
 24348                           ;incstack = 0
 24349 ;; hardware stack exceeded
 24350  01493E  0EF2               	movlw	242
 24351  014940  24E1               	addwf	fsr1l,w,c
 24352  014942  6ED9               	movwf	fsr2l,c
 24353  014944  0EFF               	movlw	255
 24354  014946  20E2               	addwfc	fsr1h,w,c
 24355  014948  6EDA               	movwf	fsr2h,c
 24356  01494A  50DF               	movf	indf2,w,c
 24357  01494C  6E0C               	movwf	(btemp+11)^0,c
 24358  01494E  0E80               	movlw	128
 24359  014950  160C               	andwf	(btemp+11)^0,f,c
 24360                           
 24361                           ;stkvar	_sign @ sp[(-13)+12]
 24362  014952  0EFF               	movlw	-1
 24363  014954  0060  F033  FFE3   	movff	btemp+11,plusw1
 24364                           
 24365                           ;stkvar	_b @ sp[(-13)+-4]
 24366  01495A  0EF2               	movlw	242
 24367  01495C  24E1               	addwf	fsr1l,w,c
 24368  01495E  6ED9               	movwf	fsr2l,c
 24369  014960  0EFF               	movlw	255
 24370  014962  20E2               	addwfc	fsr1h,w,c
 24371  014964  6EDA               	movwf	fsr2h,c
 24372  014966  50DF               	movf	indf2,w,c
 24373  014968  6E0C               	movwf	(btemp+11)^0,c
 24374  01496A  90D8               	bcf	status,0,c
 24375  01496C  340C               	rlcf	(btemp+11)^0,w,c
 24376  01496E  6E0B               	movwf	(btemp+10)^0,c
 24377                           
 24378                           ;stkvar	_bexp @ sp[(-13)+11]
 24379  014970  0EFE               	movlw	-2
 24380  014972  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24381                           
 24382                           ;stkvar	_b @ sp[(-13)+-4]
 24383  014978  0EF1               	movlw	241
 24384  01497A  24E1               	addwf	fsr1l,w,c
 24385  01497C  6ED9               	movwf	fsr2l,c
 24386  01497E  0EFF               	movlw	255
 24387  014980  20E2               	addwfc	fsr1h,w,c
 24388  014982  6EDA               	movwf	fsr2h,c
 24389  014984  AEDF               	btfss	indf2,7,c
 24390  014986  D002               	goto	l7928
 24391                           
 24392                           ;stkvar	_bexp @ sp[(-13)+11]
 24393  014988  0EFE               	movlw	-2
 24394  01498A  80E3               	bsf	plusw1,0,c
 24395  01498C                     l7928:
 24396                           
 24397                           ;stkvar	_bexp @ sp[(-13)+11]
 24398  01498C  0EFE               	movlw	-2
 24399  01498E  50E3               	movf	plusw1,w,c
 24400  014990  B4D8               	btfsc	status,2,c
 24401  014992  D027               	goto	l7938
 24402                           
 24403                           ;stkvar	_bexp @ sp[(-13)+11]
 24404  014994  0EFE               	movlw	-2
 24405  014996  28E3               	incf	plusw1,w,c
 24406  014998  A4D8               	btfss	status,2,c
 24407  01499A  D018               	goto	l7934
 24408  01499C  0E00               	movlw	0
 24409  01499E  6E09               	movwf	(btemp+8)^0,c
 24410  0149A0  0E00               	movlw	0
 24411  0149A2  6E0A               	movwf	(btemp+9)^0,c
 24412  0149A4  0E00               	movlw	0
 24413  0149A6  6E0B               	movwf	(btemp+10)^0,c
 24414  0149A8  0E00               	movlw	0
 24415  0149AA  6E0C               	movwf	(btemp+11)^0,c
 24416                           
 24417                           ;stkvar	_b @ sp[(-13)+-4]
 24418  0149AC  0EEF               	movlw	-17
 24419  0149AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 24420  0149B4  0EF0               	movlw	-16
 24421  0149B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24422  0149BC  0EF1               	movlw	-15
 24423  0149BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24424  0149C4  0EF2               	movlw	-14
 24425  0149C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24426  0149CC                     l7934:
 24427                           
 24428                           ;stkvar	_b @ sp[(-13)+-4]
 24429  0149CC  0EF1               	movlw	-15
 24430  0149CE  8EE3               	bsf	plusw1,7,c
 24431                           
 24432                           ;stkvar	_b @ sp[(-13)+-4]
 24433  0149D0  0EF2               	movlw	242
 24434  0149D2  24E1               	addwf	fsr1l,w,c
 24435  0149D4  6ED9               	movwf	fsr2l,c
 24436  0149D6  0EFF               	movlw	255
 24437  0149D8  20E2               	addwfc	fsr1h,w,c
 24438  0149DA  6EDA               	movwf	fsr2h,c
 24439  0149DC  0E00               	movlw	0
 24440  0149DE  6EDF               	movwf	indf2,c
 24441  0149E0  D018               	goto	l7940
 24442  0149E2                     l7938:
 24443  0149E2  0E00               	movlw	0
 24444  0149E4  6E09               	movwf	(btemp+8)^0,c
 24445  0149E6  0E00               	movlw	0
 24446  0149E8  6E0A               	movwf	(btemp+9)^0,c
 24447  0149EA  0E00               	movlw	0
 24448  0149EC  6E0B               	movwf	(btemp+10)^0,c
 24449  0149EE  0E00               	movlw	0
 24450  0149F0  6E0C               	movwf	(btemp+11)^0,c
 24451                           
 24452                           ;stkvar	_b @ sp[(-13)+-4]
 24453  0149F2  0EEF               	movlw	-17
 24454  0149F4  0060  F027  FFE3   	movff	btemp+8,plusw1
 24455  0149FA  0EF0               	movlw	-16
 24456  0149FC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24457  014A02  0EF1               	movlw	-15
 24458  014A04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24459  014A0A  0EF2               	movlw	-14
 24460  014A0C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24461  014A12                     l7940:
 24462                           
 24463                           ;stkvar	_a @ sp[(-13)+-8]
 24464  014A12  0EEE               	movlw	238
 24465  014A14  24E1               	addwf	fsr1l,w,c
 24466  014A16  6ED9               	movwf	fsr2l,c
 24467  014A18  0EFF               	movlw	255
 24468  014A1A  20E2               	addwfc	fsr1h,w,c
 24469  014A1C  6EDA               	movwf	fsr2h,c
 24470  014A1E  50DF               	movf	indf2,w,c
 24471  014A20  6E0C               	movwf	(btemp+11)^0,c
 24472  014A22  0E80               	movlw	128
 24473  014A24  160C               	andwf	(btemp+11)^0,f,c
 24474                           
 24475                           ;stkvar	_sign @ sp[(-13)+12]
 24476  014A26  50E1               	movf	fsr1l,w,c
 24477  014A28  0FFF               	addlw	-1
 24478  014A2A  6ED9               	movwf	fsr2l,c
 24479  014A2C  50E2               	movf	fsr1h,w,c
 24480  014A2E  6EDA               	movwf	fsr2h,c
 24481  014A30  0EFF               	movlw	255
 24482  014A32  22DA               	addwfc	fsr2h,f,c
 24483  014A34  500C               	movf	(btemp+11)^0,w,c
 24484  014A36  1ADF               	xorwf	indf2,f,c
 24485                           
 24486                           ;stkvar	_a @ sp[(-13)+-8]
 24487  014A38  0EEE               	movlw	238
 24488  014A3A  24E1               	addwf	fsr1l,w,c
 24489  014A3C  6ED9               	movwf	fsr2l,c
 24490  014A3E  0EFF               	movlw	255
 24491  014A40  20E2               	addwfc	fsr1h,w,c
 24492  014A42  6EDA               	movwf	fsr2h,c
 24493  014A44  50DF               	movf	indf2,w,c
 24494  014A46  6E0C               	movwf	(btemp+11)^0,c
 24495  014A48  90D8               	bcf	status,0,c
 24496  014A4A  340C               	rlcf	(btemp+11)^0,w,c
 24497  014A4C  6E0B               	movwf	(btemp+10)^0,c
 24498                           
 24499                           ;stkvar	_aexp @ sp[(-13)+10]
 24500  014A4E  0EFD               	movlw	-3
 24501  014A50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24502                           
 24503                           ;stkvar	_a @ sp[(-13)+-8]
 24504  014A56  0EED               	movlw	237
 24505  014A58  24E1               	addwf	fsr1l,w,c
 24506  014A5A  6ED9               	movwf	fsr2l,c
 24507  014A5C  0EFF               	movlw	255
 24508  014A5E  20E2               	addwfc	fsr1h,w,c
 24509  014A60  6EDA               	movwf	fsr2h,c
 24510  014A62  AEDF               	btfss	indf2,7,c
 24511  014A64  D002               	goto	l7948
 24512                           
 24513                           ;stkvar	_aexp @ sp[(-13)+10]
 24514  014A66  0EFD               	movlw	-3
 24515  014A68  80E3               	bsf	plusw1,0,c
 24516  014A6A                     l7948:
 24517                           
 24518                           ;stkvar	_aexp @ sp[(-13)+10]
 24519  014A6A  0EFD               	movlw	-3
 24520  014A6C  50E3               	movf	plusw1,w,c
 24521  014A6E  B4D8               	btfsc	status,2,c
 24522  014A70  D027               	goto	l7958
 24523                           
 24524                           ;stkvar	_aexp @ sp[(-13)+10]
 24525  014A72  0EFD               	movlw	-3
 24526  014A74  28E3               	incf	plusw1,w,c
 24527  014A76  A4D8               	btfss	status,2,c
 24528  014A78  D018               	goto	l7954
 24529  014A7A  0E00               	movlw	0
 24530  014A7C  6E09               	movwf	(btemp+8)^0,c
 24531  014A7E  0E00               	movlw	0
 24532  014A80  6E0A               	movwf	(btemp+9)^0,c
 24533  014A82  0E00               	movlw	0
 24534  014A84  6E0B               	movwf	(btemp+10)^0,c
 24535  014A86  0E00               	movlw	0
 24536  014A88  6E0C               	movwf	(btemp+11)^0,c
 24537                           
 24538                           ;stkvar	_a @ sp[(-13)+-8]
 24539  014A8A  0EEB               	movlw	-21
 24540  014A8C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24541  014A92  0EEC               	movlw	-20
 24542  014A94  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24543  014A9A  0EED               	movlw	-19
 24544  014A9C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24545  014AA2  0EEE               	movlw	-18
 24546  014AA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24547  014AAA                     l7954:
 24548                           
 24549                           ;stkvar	_a @ sp[(-13)+-8]
 24550  014AAA  0EED               	movlw	-19
 24551  014AAC  8EE3               	bsf	plusw1,7,c
 24552                           
 24553                           ;stkvar	_a @ sp[(-13)+-8]
 24554  014AAE  0EEE               	movlw	238
 24555  014AB0  24E1               	addwf	fsr1l,w,c
 24556  014AB2  6ED9               	movwf	fsr2l,c
 24557  014AB4  0EFF               	movlw	255
 24558  014AB6  20E2               	addwfc	fsr1h,w,c
 24559  014AB8  6EDA               	movwf	fsr2h,c
 24560  014ABA  0E00               	movlw	0
 24561  014ABC  6EDF               	movwf	indf2,c
 24562  014ABE  D018               	goto	l7960
 24563  014AC0                     l7958:
 24564  014AC0  0E00               	movlw	0
 24565  014AC2  6E09               	movwf	(btemp+8)^0,c
 24566  014AC4  0E00               	movlw	0
 24567  014AC6  6E0A               	movwf	(btemp+9)^0,c
 24568  014AC8  0E00               	movlw	0
 24569  014ACA  6E0B               	movwf	(btemp+10)^0,c
 24570  014ACC  0E00               	movlw	0
 24571  014ACE  6E0C               	movwf	(btemp+11)^0,c
 24572                           
 24573                           ;stkvar	_a @ sp[(-13)+-8]
 24574  014AD0  0EEB               	movlw	-21
 24575  014AD2  0060  F027  FFE3   	movff	btemp+8,plusw1
 24576  014AD8  0EEC               	movlw	-20
 24577  014ADA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24578  014AE0  0EED               	movlw	-19
 24579  014AE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24580  014AE8  0EEE               	movlw	-18
 24581  014AEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24582  014AF0                     l7960:
 24583                           
 24584                           ;stkvar	_a @ sp[(-13)+-8]
 24585  014AF0  0EEB               	movlw	-21
 24586  014AF2  50E3               	movf	plusw1,w,c
 24587  014AF4  E139               	bnz	l7972
 24588  014AF6  0EEC               	movlw	-20
 24589  014AF8  50E3               	movf	plusw1,w,c
 24590  014AFA  E136               	bnz	l7972
 24591  014AFC  0EED               	movlw	-19
 24592  014AFE  50E3               	movf	plusw1,w,c
 24593  014B00  E133               	bnz	l7972
 24594  014B02  0EEE               	movlw	-18
 24595  014B04  50E3               	movf	plusw1,w,c
 24596  014B06  A4D8               	btfss	status,2,c
 24597  014B08  D02F               	goto	l7972
 24598                           
 24599                           ;stkvar	_b @ sp[(-13)+-4]
 24600  014B0A  0EEF               	movlw	-17
 24601  014B0C  6AE3               	clrf	plusw1,c
 24602  014B0E  0EF0               	movlw	-16
 24603  014B10  6AE3               	clrf	plusw1,c
 24604  014B12  0EF1               	movlw	-15
 24605  014B14  6AE3               	clrf	plusw1,c
 24606  014B16  0EF2               	movlw	-14
 24607  014B18  6AE3               	clrf	plusw1,c
 24608                           
 24609                           ;stkvar	_b @ sp[(-13)+-4]
 24610  014B1A  0EF1               	movlw	241
 24611  014B1C  24E1               	addwf	fsr1l,w,c
 24612  014B1E  6ED9               	movwf	fsr2l,c
 24613  014B20  0EFF               	movlw	255
 24614  014B22  20E2               	addwfc	fsr1h,w,c
 24615  014B24  6EDA               	movwf	fsr2h,c
 24616  014B26  0E80               	movlw	128
 24617  014B28  12DE               	iorwf	postinc2,f,c
 24618  014B2A  0E7F               	movlw	127
 24619  014B2C  12DD               	iorwf	postdec2,f,c
 24620  014B2E                     l7966:
 24621                           
 24622                           ;stkvar	_sign @ sp[(-13)+12]
 24623  014B2E  0EFF               	movlw	-1
 24624  014B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 24625                           
 24626                           ;stkvar	_b @ sp[(-13)+-4]
 24627  014B36  0EF2               	movlw	242
 24628  014B38  24E1               	addwf	fsr1l,w,c
 24629  014B3A  6ED9               	movwf	fsr2l,c
 24630  014B3C  0EFF               	movlw	255
 24631  014B3E  20E2               	addwfc	fsr1h,w,c
 24632  014B40  6EDA               	movwf	fsr2h,c
 24633  014B42  500C               	movf	(btemp+11)^0,w,c
 24634  014B44  12DF               	iorwf	indf2,f,c
 24635                           
 24636                           ;stkvar	_b @ sp[(-13)+-4]
 24637  014B46  0EEF               	movlw	-17
 24638  014B48  006F FF8C  F001    	movff	plusw1,btemp
 24639  014B4E  0EF0               	movlw	-16
 24640  014B50  006F FF8C  F002    	movff	plusw1,btemp+1
 24641  014B56  0EF1               	movlw	-15
 24642  014B58  006F FF8C  F003    	movff	plusw1,btemp+2
 24643  014B5E  0EF2               	movlw	-14
 24644  014B60  006F FF8C  F004    	movff	plusw1,btemp+3
 24645  014B66  D19F               	goto	l2939
 24646  014B68                     l7972:
 24647                           
 24648                           ;stkvar	_bexp @ sp[(-13)+11]
 24649  014B68  0EFE               	movlw	-2
 24650  014B6A  50E3               	movf	plusw1,w,c
 24651  014B6C  A4D8               	btfss	status,2,c
 24652  014B6E  D009               	goto	l7980
 24653  014B70  0E00               	movlw	0
 24654  014B72  6E01               	movwf	btemp^0,c
 24655  014B74  0E00               	movlw	0
 24656  014B76  6E02               	movwf	(btemp+1)^0,c
 24657  014B78  0E00               	movlw	0
 24658  014B7A  6E03               	movwf	(btemp+2)^0,c
 24659  014B7C  0E00               	movlw	0
 24660  014B7E  6E04               	movwf	(btemp+3)^0,c
 24661  014B80  D192               	goto	l2939
 24662  014B82                     l7980:
 24663                           
 24664                           ;stkvar	_bexp @ sp[(-13)+11]
 24665  014B82  0EFE               	movlw	-2
 24666  014B84  50E3               	movf	plusw1,w,c
 24667  014B86  6E0B               	movwf	(btemp+10)^0,c
 24668  014B88  6A0C               	clrf	(btemp+11)^0,c
 24669                           
 24670                           ;stkvar	_aexp @ sp[(-13)+10]
 24671  014B8A  0EFD               	movlw	-3
 24672  014B8C  50E3               	movf	plusw1,w,c
 24673  014B8E  5E0B               	subwf	(btemp+10)^0,f,c
 24674  014B90  0E00               	movlw	0
 24675  014B92  5A0C               	subwfb	(btemp+11)^0,f,c
 24676  014B94  0E7F               	movlw	127
 24677  014B96  260B               	addwf	(btemp+10)^0,f,c
 24678  014B98  0E00               	movlw	0
 24679  014B9A  220C               	addwfc	(btemp+11)^0,f,c
 24680                           
 24681                           ;stkvar	_new_exp @ sp[(-13)+8]
 24682  014B9C  0EFB               	movlw	-5
 24683  014B9E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24684  014BA4  0EFC               	movlw	-4
 24685  014BA6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24686                           
 24687                           ;stkvar	_b @ sp[(-13)+-4]
 24688  014BAC  0EEF               	movlw	-17
 24689  014BAE  006F FF8C  F009    	movff	plusw1,btemp+8
 24690  014BB4  0EF0               	movlw	-16
 24691  014BB6  006F FF8C  F00A    	movff	plusw1,btemp+9
 24692  014BBC  0EF1               	movlw	-15
 24693  014BBE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24694  014BC4  0EF2               	movlw	-14
 24695  014BC6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24696                           
 24697                           ;stkvar	_rem @ sp[(-13)+4]
 24698  014BCC  0EF7               	movlw	-9
 24699  014BCE  0060  F027  FFE3   	movff	btemp+8,plusw1
 24700  014BD4  0EF8               	movlw	-8
 24701  014BD6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24702  014BDC  0EF9               	movlw	-7
 24703  014BDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24704  014BE4  0EFA               	movlw	-6
 24705  014BE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24706                           
 24707                           ;stkvar	_b @ sp[(-13)+-4]
 24708  014BEC  0EEF               	movlw	-17
 24709  014BEE  6AE3               	clrf	plusw1,c
 24710  014BF0  0EF0               	movlw	-16
 24711  014BF2  6AE3               	clrf	plusw1,c
 24712  014BF4  0EF1               	movlw	-15
 24713  014BF6  6AE3               	clrf	plusw1,c
 24714  014BF8  0EF2               	movlw	-14
 24715  014BFA  6AE3               	clrf	plusw1,c
 24716                           
 24717                           ;stkvar	_grs @ sp[(-13)+0]
 24718  014BFC  0EF3               	movlw	-13
 24719  014BFE  6AE3               	clrf	plusw1,c
 24720  014C00  0EF4               	movlw	-12
 24721  014C02  6AE3               	clrf	plusw1,c
 24722  014C04  0EF5               	movlw	-11
 24723  014C06  6AE3               	clrf	plusw1,c
 24724  014C08  0EF6               	movlw	-10
 24725  014C0A  6AE3               	clrf	plusw1,c
 24726                           
 24727                           ;stkvar	_aexp @ sp[(-13)+10]
 24728  014C0C  0EFD               	movlw	-3
 24729  014C0E  6AE3               	clrf	plusw1,c
 24730  014C10  D050               	goto	l8008
 24731  014C12                     l7990:
 24732                           
 24733                           ;stkvar	_aexp @ sp[(-13)+10]
 24734  014C12  0EFD               	movlw	-3
 24735  014C14  50E3               	movf	plusw1,w,c
 24736  014C16  B4D8               	btfsc	status,2,c
 24737  014C18  D020               	goto	l8000
 24738                           
 24739                           ;stkvar	_rem @ sp[(-13)+4]
 24740  014C1A  90D8               	bcf	status,0,c
 24741  014C1C  0EF7               	movlw	-9
 24742  014C1E  36E3               	rlcf	plusw1,f,c
 24743  014C20  0EF8               	movlw	-8
 24744  014C22  36E3               	rlcf	plusw1,f,c
 24745  014C24  0EF9               	movlw	-7
 24746  014C26  36E3               	rlcf	plusw1,f,c
 24747  014C28  0EFA               	movlw	-6
 24748  014C2A  36E3               	rlcf	plusw1,f,c
 24749                           
 24750                           ;stkvar	_b @ sp[(-13)+-4]
 24751  014C2C  90D8               	bcf	status,0,c
 24752  014C2E  0EEF               	movlw	-17
 24753  014C30  36E3               	rlcf	plusw1,f,c
 24754  014C32  0EF0               	movlw	-16
 24755  014C34  36E3               	rlcf	plusw1,f,c
 24756  014C36  0EF1               	movlw	-15
 24757  014C38  36E3               	rlcf	plusw1,f,c
 24758  014C3A  0EF2               	movlw	-14
 24759  014C3C  36E3               	rlcf	plusw1,f,c
 24760                           
 24761                           ;stkvar	_grs @ sp[(-13)+0]
 24762  014C3E  0EF6               	movlw	-10
 24763  014C40  AEE3               	btfss	plusw1,7,c
 24764  014C42  D002               	goto	l7998
 24765                           
 24766                           ;stkvar	_b @ sp[(-13)+-4]
 24767  014C44  0EEF               	movlw	-17
 24768  014C46  80E3               	bsf	plusw1,0,c
 24769  014C48                     l7998:
 24770                           
 24771                           ;stkvar	_grs @ sp[(-13)+0]
 24772  014C48  90D8               	bcf	status,0,c
 24773  014C4A  0EF3               	movlw	-13
 24774  014C4C  36E3               	rlcf	plusw1,f,c
 24775  014C4E  0EF4               	movlw	-12
 24776  014C50  36E3               	rlcf	plusw1,f,c
 24777  014C52  0EF5               	movlw	-11
 24778  014C54  36E3               	rlcf	plusw1,f,c
 24779  014C56  0EF6               	movlw	-10
 24780  014C58  36E3               	rlcf	plusw1,f,c
 24781  014C5A                     l8000:
 24782                           
 24783                           ;stkvar	_a @ sp[(-13)+-8]
 24784                           ;stkvar	_rem @ sp[(-13)+4]
 24785  014C5A  50E1               	movf	fsr1l,w,c
 24786  014C5C  0FF7               	addlw	-9
 24787  014C5E  6ED9               	movwf	fsr2l,c
 24788  014C60  50E2               	movf	fsr1h,w,c
 24789  014C62  6EDA               	movwf	fsr2h,c
 24790  014C64  0EFF               	movlw	255
 24791  014C66  22DA               	addwfc	fsr2h,f,c
 24792  014C68  0EEB               	movlw	-21
 24793  014C6A  50E3               	movf	plusw1,w,c
 24794  014C6C  5CDE               	subwf	postinc2,w,c
 24795  014C6E  0EEC               	movlw	-20
 24796  014C70  50E3               	movf	plusw1,w,c
 24797  014C72  58DE               	subwfb	postinc2,w,c
 24798  014C74  0EED               	movlw	-19
 24799  014C76  50E3               	movf	plusw1,w,c
 24800  014C78  58DE               	subwfb	postinc2,w,c
 24801  014C7A  0EEE               	movlw	-18
 24802  014C7C  50E3               	movf	plusw1,w,c
 24803  014C7E  58DE               	subwfb	postinc2,w,c
 24804  014C80  A0D8               	btfss	status,0,c
 24805  014C82  D015               	goto	l8006
 24806                           
 24807                           ;stkvar	_grs @ sp[(-13)+0]
 24808  014C84  0EF6               	movlw	-10
 24809  014C86  8CE3               	bsf	plusw1,6,c
 24810                           
 24811                           ;stkvar	_a @ sp[(-13)+-8]
 24812                           ;stkvar	_rem @ sp[(-13)+4]
 24813  014C88  50E1               	movf	fsr1l,w,c
 24814  014C8A  0FF7               	addlw	-9
 24815  014C8C  6ED9               	movwf	fsr2l,c
 24816  014C8E  50E2               	movf	fsr1h,w,c
 24817  014C90  6EDA               	movwf	fsr2h,c
 24818  014C92  0EFF               	movlw	255
 24819  014C94  22DA               	addwfc	fsr2h,f,c
 24820  014C96  0EEB               	movlw	-21
 24821  014C98  50E3               	movf	plusw1,w,c
 24822  014C9A  5EDE               	subwf	postinc2,f,c
 24823  014C9C  0EEC               	movlw	-20
 24824  014C9E  50E3               	movf	plusw1,w,c
 24825  014CA0  5ADE               	subwfb	postinc2,f,c
 24826  014CA2  0EED               	movlw	-19
 24827  014CA4  50E3               	movf	plusw1,w,c
 24828  014CA6  5ADE               	subwfb	postinc2,f,c
 24829  014CA8  0EEE               	movlw	-18
 24830  014CAA  50E3               	movf	plusw1,w,c
 24831  014CAC  5ADE               	subwfb	postinc2,f,c
 24832  014CAE                     l8006:
 24833                           
 24834                           ;stkvar	_aexp @ sp[(-13)+10]
 24835  014CAE  0EFD               	movlw	-3
 24836  014CB0  2AE3               	incf	plusw1,f,c
 24837  014CB2                     l8008:
 24838                           
 24839                           ;stkvar	_aexp @ sp[(-13)+10]
 24840  014CB2  0EFD               	movlw	-3
 24841  014CB4  006F FF8C  F001    	movff	plusw1,btemp
 24842  014CBA  0E19               	movlw	25
 24843  014CBC  6401               	cpfsgt	btemp^0,c
 24844  014CBE  D7A9               	goto	l7990
 24845                           
 24846                           ;stkvar	_rem @ sp[(-13)+4]
 24847  014CC0  0EF7               	movlw	-9
 24848  014CC2  50E3               	movf	plusw1,w,c
 24849  014CC4  E10A               	bnz	u6380
 24850  014CC6  0EF8               	movlw	-8
 24851  014CC8  50E3               	movf	plusw1,w,c
 24852  014CCA  E107               	bnz	u6380
 24853  014CCC  0EF9               	movlw	-7
 24854  014CCE  50E3               	movf	plusw1,w,c
 24855  014CD0  E104               	bnz	u6380
 24856  014CD2  0EFA               	movlw	-6
 24857  014CD4  50E3               	movf	plusw1,w,c
 24858  014CD6  B4D8               	btfsc	status,2,c
 24859  014CD8  D024               	goto	l8024
 24860  014CDA                     u6380:
 24861                           
 24862                           ;stkvar	_grs @ sp[(-13)+0]
 24863  014CDA  0EF3               	movlw	-13
 24864  014CDC  80E3               	bsf	plusw1,0,c
 24865  014CDE  D021               	goto	l8024
 24866  014CE0                     l8014:
 24867                           
 24868                           ;stkvar	_b @ sp[(-13)+-4]
 24869  014CE0  90D8               	bcf	status,0,c
 24870  014CE2  0EEF               	movlw	-17
 24871  014CE4  36E3               	rlcf	plusw1,f,c
 24872  014CE6  0EF0               	movlw	-16
 24873  014CE8  36E3               	rlcf	plusw1,f,c
 24874  014CEA  0EF1               	movlw	-15
 24875  014CEC  36E3               	rlcf	plusw1,f,c
 24876  014CEE  0EF2               	movlw	-14
 24877  014CF0  36E3               	rlcf	plusw1,f,c
 24878                           
 24879                           ;stkvar	_grs @ sp[(-13)+0]
 24880  014CF2  0EF6               	movlw	-10
 24881  014CF4  AEE3               	btfss	plusw1,7,c
 24882  014CF6  D002               	goto	l8020
 24883                           
 24884                           ;stkvar	_b @ sp[(-13)+-4]
 24885  014CF8  0EEF               	movlw	-17
 24886  014CFA  80E3               	bsf	plusw1,0,c
 24887  014CFC                     l8020:
 24888                           
 24889                           ;stkvar	_grs @ sp[(-13)+0]
 24890  014CFC  90D8               	bcf	status,0,c
 24891  014CFE  0EF3               	movlw	-13
 24892  014D00  36E3               	rlcf	plusw1,f,c
 24893  014D02  0EF4               	movlw	-12
 24894  014D04  36E3               	rlcf	plusw1,f,c
 24895  014D06  0EF5               	movlw	-11
 24896  014D08  36E3               	rlcf	plusw1,f,c
 24897  014D0A  0EF6               	movlw	-10
 24898  014D0C  36E3               	rlcf	plusw1,f,c
 24899                           
 24900                           ;stkvar	_new_exp @ sp[(-13)+8]
 24901  014D0E  50E1               	movf	fsr1l,w,c
 24902  014D10  0FFB               	addlw	-5
 24903  014D12  6ED9               	movwf	fsr2l,c
 24904  014D14  50E2               	movf	fsr1h,w,c
 24905  014D16  6EDA               	movwf	fsr2h,c
 24906  014D18  0EFF               	movlw	255
 24907  014D1A  22DA               	addwfc	fsr2h,f,c
 24908  014D1C  06DE               	decf	postinc2,f,c
 24909  014D1E  0E00               	movlw	0
 24910  014D20  5ADD               	subwfb	postdec2,f,c
 24911  014D22                     l8024:
 24912                           
 24913                           ;stkvar	_b @ sp[(-13)+-4]
 24914  014D22  0EF1               	movlw	-15
 24915  014D24  AEE3               	btfss	plusw1,7,c
 24916  014D26  D7DC               	goto	l8014
 24917                           
 24918                           ;stkvar	_aexp @ sp[(-13)+10]
 24919  014D28  0EFD               	movlw	-3
 24920  014D2A  6AE3               	clrf	plusw1,c
 24921                           
 24922                           ;stkvar	_grs @ sp[(-13)+0]
 24923  014D2C  0EF6               	movlw	-10
 24924  014D2E  AEE3               	btfss	plusw1,7,c
 24925  014D30  D020               	goto	l8038
 24926                           
 24927                           ;stkvar	_grs @ sp[(-13)+0]
 24928  014D32  50E1               	movf	fsr1l,w,c
 24929  014D34  0FF3               	addlw	-13
 24930  014D36  6ED9               	movwf	fsr2l,c
 24931  014D38  50E2               	movf	fsr1h,w,c
 24932  014D3A  6EDA               	movwf	fsr2h,c
 24933  014D3C  0EFF               	movlw	255
 24934  014D3E  22DA               	addwfc	fsr2h,f,c
 24935  014D40  0EFF               	movlw	255
 24936  014D42  14DE               	andwf	postinc2,w,c
 24937  014D44  6E09               	movwf	(btemp+8)^0,c
 24938  014D46  0EFF               	movlw	255
 24939  014D48  14DE               	andwf	postinc2,w,c
 24940  014D4A  6E0A               	movwf	(btemp+9)^0,c
 24941  014D4C  0EFF               	movlw	255
 24942  014D4E  14DE               	andwf	postinc2,w,c
 24943  014D50  6E0B               	movwf	(btemp+10)^0,c
 24944  014D52  0E7F               	movlw	127
 24945  014D54  14DE               	andwf	postinc2,w,c
 24946  014D56  6E0C               	movwf	(btemp+11)^0,c
 24947  014D58  5009               	movf	(btemp+8)^0,w,c
 24948  014D5A  100A               	iorwf	(btemp+9)^0,w,c
 24949  014D5C  100B               	iorwf	(btemp+10)^0,w,c
 24950  014D5E  100C               	iorwf	(btemp+11)^0,w,c
 24951  014D60  B4D8               	btfsc	status,2,c
 24952  014D62  D004               	goto	l8034
 24953  014D64                     u6420:
 24954                           
 24955                           ;stkvar	_aexp @ sp[(-13)+10]
 24956  014D64  0EFD               	movlw	-3
 24957  014D66  6AE3               	clrf	plusw1,c
 24958  014D68  2AE3               	incf	plusw1,f,c
 24959  014D6A  D003               	goto	l8038
 24960  014D6C                     l8034:
 24961                           
 24962                           ;stkvar	_b @ sp[(-13)+-4]
 24963  014D6C  0EEF               	movlw	-17
 24964  014D6E  B0E3               	btfsc	plusw1,0,c
 24965  014D70  D7F9               	goto	u6420
 24966  014D72                     l8038:
 24967                           
 24968                           ;stkvar	_aexp @ sp[(-13)+10]
 24969  014D72  0EFD               	movlw	-3
 24970  014D74  50E3               	movf	plusw1,w,c
 24971  014D76  B4D8               	btfsc	status,2,c
 24972  014D78  D036               	goto	l8048
 24973                           
 24974                           ;stkvar	_b @ sp[(-13)+-4]
 24975  014D7A  50E1               	movf	fsr1l,w,c
 24976  014D7C  0FEF               	addlw	-17
 24977  014D7E  6ED9               	movwf	fsr2l,c
 24978  014D80  50E2               	movf	fsr1h,w,c
 24979  014D82  6EDA               	movwf	fsr2h,c
 24980  014D84  0EFF               	movlw	255
 24981  014D86  22DA               	addwfc	fsr2h,f,c
 24982  014D88  2ADE               	incf	postinc2,f,c
 24983  014D8A  0E00               	movlw	0
 24984  014D8C  22DE               	addwfc	postinc2,f,c
 24985  014D8E  22DE               	addwfc	postinc2,f,c
 24986  014D90  22DE               	addwfc	postinc2,f,c
 24987                           
 24988                           ;stkvar	_b @ sp[(-13)+-4]
 24989  014D92  0EF2               	movlw	-14
 24990  014D94  A0E3               	btfss	plusw1,0,c
 24991  014D96  D027               	goto	l8048
 24992  014D98  0E01               	movlw	1
 24993  014D9A  6E0C               	movwf	(btemp+11)^0,c
 24994                           
 24995                           ;stkvar	_b @ sp[(-13)+-4]
 24996  014D9C  50E1               	movf	fsr1l,w,c
 24997  014D9E  0FEF               	addlw	-17
 24998  014DA0  6ED9               	movwf	fsr2l,c
 24999  014DA2  50E2               	movf	fsr1h,w,c
 25000  014DA4  6EDA               	movwf	fsr2h,c
 25001  014DA6  0EFF               	movlw	255
 25002  014DA8  22DA               	addwfc	fsr2h,f,c
 25003  014DAA  280C               	incf	(btemp+11)^0,w,c
 25004  014DAC  52DE               	movf	postinc2,f,c
 25005  014DAE  D008               	goto	u6460
 25006  014DB0                     u6465:
 25007  014DB0  52DE               	movf	postinc2,f,c
 25008  014DB2  90D8               	bcf	status,0,c
 25009  014DB4  BEDC               	btfsc	preinc2,7,c
 25010  014DB6  80D8               	bsf	status,0,c
 25011  014DB8  32DD               	rrcf	postdec2,f,c
 25012  014DBA  32DD               	rrcf	postdec2,f,c
 25013  014DBC  32DD               	rrcf	postdec2,f,c
 25014  014DBE  32DE               	rrcf	postinc2,f,c
 25015  014DC0                     u6460:
 25016  014DC0  2EE8               	decfsz	wreg,f,c
 25017  014DC2  D7F6               	goto	u6465
 25018                           
 25019                           ;stkvar	_new_exp @ sp[(-13)+8]
 25020  014DC4  0EFB               	movlw	-5
 25021  014DC6  50E3               	movf	plusw1,w,c
 25022  014DC8  0F01               	addlw	1
 25023  014DCA  6E01               	movwf	btemp^0,c
 25024  014DCC  0EFB               	movlw	-5
 25025  014DCE  0060  F007  FFE3   	movff	btemp,plusw1
 25026  014DD4  6A01               	clrf	btemp^0,c
 25027  014DD6  0EFC               	movlw	-4
 25028  014DD8  50E3               	movf	plusw1,w,c
 25029  014DDA  2001               	addwfc	btemp^0,w,c
 25030  014DDC  6E01               	movwf	btemp^0,c
 25031  014DDE  0EFC               	movlw	-4
 25032  014DE0  0060  F007  FFE3   	movff	btemp,plusw1
 25033  014DE6                     l8048:
 25034                           
 25035                           ;stkvar	_new_exp @ sp[(-13)+8]
 25036  014DE6  0EFC               	movlw	-4
 25037  014DE8  BEE3               	btfsc	plusw1,7,c
 25038  014DEA  D01B               	goto	l8054
 25039  014DEC  0EFC               	movlw	-4
 25040  014DEE  50E3               	movf	plusw1,w,c
 25041  014DF0  E104               	bnz	u6470
 25042  014DF2  0EFB               	movlw	-5
 25043  014DF4  28E3               	incf	plusw1,w,c
 25044  014DF6  A0D8               	btfss	status,0,c
 25045  014DF8  D014               	goto	l8054
 25046  014DFA                     u6470:
 25047  014DFA  0EFF               	movlw	255
 25048  014DFC  6E0B               	movwf	(btemp+10)^0,c
 25049  014DFE  0E00               	movlw	0
 25050  014E00  6E0C               	movwf	(btemp+11)^0,c
 25051                           
 25052                           ;stkvar	_new_exp @ sp[(-13)+8]
 25053  014E02  0EFB               	movlw	-5
 25054  014E04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25055  014E0A  0EFC               	movlw	-4
 25056  014E0C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25057                           
 25058                           ;stkvar	_b @ sp[(-13)+-4]
 25059  014E12  0EEF               	movlw	-17
 25060  014E14  6AE3               	clrf	plusw1,c
 25061  014E16  0EF0               	movlw	-16
 25062  014E18  6AE3               	clrf	plusw1,c
 25063  014E1A  0EF1               	movlw	-15
 25064  014E1C  6AE3               	clrf	plusw1,c
 25065  014E1E  0EF2               	movlw	-14
 25066  014E20  6AE3               	clrf	plusw1,c
 25067  014E22                     l8054:
 25068                           
 25069                           ;stkvar	_new_exp @ sp[(-13)+8]
 25070  014E22  0EFC               	movlw	-4
 25071  014E24  BEE3               	btfsc	plusw1,7,c
 25072  014E26  D007               	goto	u6480
 25073  014E28  0EFC               	movlw	-4
 25074  014E2A  50E3               	movf	plusw1,w,c
 25075  014E2C  E112               	bnz	l8060
 25076  014E2E  0EFB               	movlw	-5
 25077  014E30  04E3               	decf	plusw1,w,c
 25078  014E32  B0D8               	btfsc	status,0,c
 25079  014E34  D00E               	goto	l8060
 25080  014E36                     u6480:
 25081                           
 25082                           ;stkvar	_new_exp @ sp[(-13)+8]
 25083  014E36  0EFB               	movlw	-5
 25084  014E38  6AE3               	clrf	plusw1,c
 25085  014E3A  0EFC               	movlw	-4
 25086  014E3C  6AE3               	clrf	plusw1,c
 25087                           
 25088                           ;stkvar	_b @ sp[(-13)+-4]
 25089  014E3E  0EEF               	movlw	-17
 25090  014E40  6AE3               	clrf	plusw1,c
 25091  014E42  0EF0               	movlw	-16
 25092  014E44  6AE3               	clrf	plusw1,c
 25093  014E46  0EF1               	movlw	-15
 25094  014E48  6AE3               	clrf	plusw1,c
 25095  014E4A  0EF2               	movlw	-14
 25096  014E4C  6AE3               	clrf	plusw1,c
 25097                           
 25098                           ;stkvar	_sign @ sp[(-13)+12]
 25099  014E4E  0EFF               	movlw	-1
 25100  014E50  6AE3               	clrf	plusw1,c
 25101  014E52                     l8060:
 25102                           
 25103                           ;stkvar	_new_exp @ sp[(-13)+8]
 25104                           ;stkvar	_bexp @ sp[(-13)+11]
 25105  014E52  0EFB               	movlw	-5
 25106  014E54  006F FF8C  F001    	movff	plusw1,btemp
 25107  014E5A  0EFE               	movlw	-2
 25108  014E5C  0060  F007  FFE3   	movff	btemp,plusw1
 25109                           
 25110                           ;stkvar	_bexp @ sp[(-13)+11]
 25111  014E62  0EFE               	movlw	-2
 25112  014E64  A0E3               	btfss	plusw1,0,c
 25113  014E66  D009               	goto	l8066
 25114                           
 25115                           ;stkvar	_b @ sp[(-13)+-4]
 25116  014E68  0EF1               	movlw	241
 25117  014E6A  24E1               	addwf	fsr1l,w,c
 25118  014E6C  6ED9               	movwf	fsr2l,c
 25119  014E6E  0EFF               	movlw	255
 25120  014E70  20E2               	addwfc	fsr1h,w,c
 25121  014E72  6EDA               	movwf	fsr2h,c
 25122  014E74  0E00               	movlw	0
 25123  014E76  8EDB               	bsf	plusw2,7,c
 25124  014E78  D008               	goto	l8068
 25125  014E7A                     l8066:
 25126                           
 25127                           ;stkvar	_b @ sp[(-13)+-4]
 25128  014E7A  0EF1               	movlw	241
 25129  014E7C  24E1               	addwf	fsr1l,w,c
 25130  014E7E  6ED9               	movwf	fsr2l,c
 25131  014E80  0EFF               	movlw	255
 25132  014E82  20E2               	addwfc	fsr1h,w,c
 25133  014E84  6EDA               	movwf	fsr2h,c
 25134  014E86  0E7F               	movlw	127
 25135  014E88  16DF               	andwf	indf2,f,c
 25136  014E8A                     l8068:
 25137                           
 25138                           ;stkvar	_b @ sp[(-13)+-4]
 25139  014E8A  0EF2               	movlw	242
 25140  014E8C  24E1               	addwf	fsr1l,w,c
 25141  014E8E  6ED9               	movwf	fsr2l,c
 25142  014E90  0EFF               	movlw	255
 25143  014E92  20E2               	addwfc	fsr1h,w,c
 25144  014E94  6EDA               	movwf	fsr2h,c
 25145                           
 25146                           ;stkvar	_bexp @ sp[(-13)+11]
 25147  014E96  0EFE               	movlw	-2
 25148  014E98  006F FF8C  F00C    	movff	plusw1,btemp+11
 25149  014E9E  90D8               	bcf	status,0,c
 25150  014EA0  300C               	rrcf	(btemp+11)^0,w,c
 25151  014EA2  6EDF               	movwf	indf2,c
 25152  014EA4  D644               	goto	l7966
 25153  014EA6                     l2939:
 25154                           
 25155                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25156  014EA6  0EEB               	movlw	235
 25157  014EA8  26E1               	addwf	fsr1l,f,c
 25158  014EAA  0EFF               	movlw	255
 25159  014EAC  22E2               	addwfc	fsr1h,f,c
 25160  014EAE  0012               	return		;funcret
 25161  014EB0                     __end_of___fldiv:
 25162                           	opt callstack 0
 25163                           
 25164 ;; *************** function ___flge *****************
 25165 ;; Defined at:
 25166 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25167 ;; Parameters:    Size  Location     Type
 25168 ;;  ff1             4  [STACK] unsigned char 
 25169 ;;  ff2             4  [STACK] unsigned char 
 25170 ;; Auto vars:     Size  Location     Type
 25171 ;;		None
 25172 ;; Return value:  Size  Location     Type
 25173 ;;		None               void
 25174 ;; Registers used:
 25175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25176 ;; Tracked objects:
 25177 ;;		On entry : 0/0
 25178 ;;		On exit  : 0/0
 25179 ;;		Unchanged: 0/0
 25180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25185 ;;Total ram usage:        0 bytes
 25186 ;; Hardware stack levels used:    1
 25187 ;; Hardware stack levels required when called:   15
 25188 ;; This function calls:
 25189 ;;		Nothing
 25190 ;; This function is called by:
 25191 ;;		_main
 25192 ;;		_calc_ror_data
 25193 ;;		_calc_bsoc
 25194 ;;		_efgtoa
 25195 ;; This function uses a reentrant model
 25196 ;;
 25197                           
 25198                           	psect	text99
 25199  0186E0                     __ptext99:
 25200                           	opt callstack 0
 25201  0186E0                     ___flge:
 25202                           	opt callstack 0
 25203                           
 25204                           ;stkvar	_ff1 @ sp[(0)+-4]
 25205                           
 25206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25207                           ;incstack = 0
 25208 ;; hardware stack exceeded
 25209  0186E0  50E1               	movf	fsr1l,w,c
 25210  0186E2  0FFC               	addlw	-4
 25211  0186E4  6ED9               	movwf	fsr2l,c
 25212  0186E6  50E2               	movf	fsr1h,w,c
 25213  0186E8  6EDA               	movwf	fsr2h,c
 25214  0186EA  0EFF               	movlw	255
 25215  0186EC  22DA               	addwfc	fsr2h,f,c
 25216  0186EE  0E00               	movlw	0
 25217  0186F0  14DE               	andwf	postinc2,w,c
 25218  0186F2  6E09               	movwf	(btemp+8)^0,c
 25219  0186F4  0E00               	movlw	0
 25220  0186F6  14DE               	andwf	postinc2,w,c
 25221  0186F8  6E0A               	movwf	(btemp+9)^0,c
 25222  0186FA  0E80               	movlw	128
 25223  0186FC  14DE               	andwf	postinc2,w,c
 25224  0186FE  6E0B               	movwf	(btemp+10)^0,c
 25225  018700  0E7F               	movlw	127
 25226  018702  14DE               	andwf	postinc2,w,c
 25227  018704  6E0C               	movwf	(btemp+11)^0,c
 25228  018706  5009               	movf	(btemp+8)^0,w,c
 25229  018708  100A               	iorwf	(btemp+9)^0,w,c
 25230  01870A  100B               	iorwf	(btemp+10)^0,w,c
 25231  01870C  100C               	iorwf	(btemp+11)^0,w,c
 25232  01870E  A4D8               	btfss	status,2,c
 25233  018710  D008               	goto	l8342
 25234                           
 25235                           ;stkvar	_ff1 @ sp[(0)+-4]
 25236  018712  0EFC               	movlw	-4
 25237  018714  6AE3               	clrf	plusw1,c
 25238  018716  0EFD               	movlw	-3
 25239  018718  6AE3               	clrf	plusw1,c
 25240  01871A  0EFE               	movlw	-2
 25241  01871C  6AE3               	clrf	plusw1,c
 25242  01871E  0EFF               	movlw	-1
 25243  018720  6AE3               	clrf	plusw1,c
 25244  018722                     l8342:
 25245                           
 25246                           ;stkvar	_ff2 @ sp[(0)+-8]
 25247  018722  50E1               	movf	fsr1l,w,c
 25248  018724  0FF8               	addlw	-8
 25249  018726  6ED9               	movwf	fsr2l,c
 25250  018728  50E2               	movf	fsr1h,w,c
 25251  01872A  6EDA               	movwf	fsr2h,c
 25252  01872C  0EFF               	movlw	255
 25253  01872E  22DA               	addwfc	fsr2h,f,c
 25254  018730  0E00               	movlw	0
 25255  018732  14DE               	andwf	postinc2,w,c
 25256  018734  6E09               	movwf	(btemp+8)^0,c
 25257  018736  0E00               	movlw	0
 25258  018738  14DE               	andwf	postinc2,w,c
 25259  01873A  6E0A               	movwf	(btemp+9)^0,c
 25260  01873C  0E80               	movlw	128
 25261  01873E  14DE               	andwf	postinc2,w,c
 25262  018740  6E0B               	movwf	(btemp+10)^0,c
 25263  018742  0E7F               	movlw	127
 25264  018744  14DE               	andwf	postinc2,w,c
 25265  018746  6E0C               	movwf	(btemp+11)^0,c
 25266  018748  5009               	movf	(btemp+8)^0,w,c
 25267  01874A  100A               	iorwf	(btemp+9)^0,w,c
 25268  01874C  100B               	iorwf	(btemp+10)^0,w,c
 25269  01874E  100C               	iorwf	(btemp+11)^0,w,c
 25270  018750  A4D8               	btfss	status,2,c
 25271  018752  D008               	goto	l2620
 25272                           
 25273                           ;stkvar	_ff2 @ sp[(0)+-8]
 25274  018754  0EF8               	movlw	-8
 25275  018756  6AE3               	clrf	plusw1,c
 25276  018758  0EF9               	movlw	-7
 25277  01875A  6AE3               	clrf	plusw1,c
 25278  01875C  0EFA               	movlw	-6
 25279  01875E  6AE3               	clrf	plusw1,c
 25280  018760  0EFB               	movlw	-5
 25281  018762  6AE3               	clrf	plusw1,c
 25282  018764                     l2620:
 25283                           
 25284                           ;stkvar	_ff1 @ sp[(0)+-4]
 25285  018764  0EFF               	movlw	-1
 25286  018766  AEE3               	btfss	plusw1,7,c
 25287  018768  D024               	goto	l8348
 25288                           
 25289                           ;stkvar	_ff1 @ sp[(0)+-4]
 25290  01876A  0E00               	movlw	0
 25291  01876C  6E09               	movwf	(btemp+8)^0,c
 25292  01876E  0E00               	movlw	0
 25293  018770  6E0A               	movwf	(btemp+9)^0,c
 25294  018772  0E00               	movlw	0
 25295  018774  6E0B               	movwf	(btemp+10)^0,c
 25296  018776  0E80               	movlw	128
 25297  018778  6E0C               	movwf	(btemp+11)^0,c
 25298  01877A  0EFC               	movlw	-4
 25299  01877C  50E3               	movf	plusw1,w,c
 25300  01877E  5E09               	subwf	(btemp+8)^0,f,c
 25301  018780  0EFD               	movlw	-3
 25302  018782  50E3               	movf	plusw1,w,c
 25303  018784  5A0A               	subwfb	(btemp+9)^0,f,c
 25304  018786  0EFE               	movlw	-2
 25305  018788  50E3               	movf	plusw1,w,c
 25306  01878A  5A0B               	subwfb	(btemp+10)^0,f,c
 25307  01878C  0EFF               	movlw	-1
 25308  01878E  50E3               	movf	plusw1,w,c
 25309  018790  5A0C               	subwfb	(btemp+11)^0,f,c
 25310                           
 25311                           ;stkvar	_ff1 @ sp[(0)+-4]
 25312  018792  0EFC               	movlw	-4
 25313  018794  0060  F027  FFE3   	movff	btemp+8,plusw1
 25314  01879A  0EFD               	movlw	-3
 25315  01879C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25316  0187A2  0EFE               	movlw	-2
 25317  0187A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25318  0187AA  0EFF               	movlw	-1
 25319  0187AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25320  0187B2                     l8348:
 25321                           
 25322                           ;stkvar	_ff2 @ sp[(0)+-8]
 25323  0187B2  0EFB               	movlw	-5
 25324  0187B4  AEE3               	btfss	plusw1,7,c
 25325  0187B6  D024               	goto	l8352
 25326                           
 25327                           ;stkvar	_ff2 @ sp[(0)+-8]
 25328  0187B8  0E00               	movlw	0
 25329  0187BA  6E09               	movwf	(btemp+8)^0,c
 25330  0187BC  0E00               	movlw	0
 25331  0187BE  6E0A               	movwf	(btemp+9)^0,c
 25332  0187C0  0E00               	movlw	0
 25333  0187C2  6E0B               	movwf	(btemp+10)^0,c
 25334  0187C4  0E80               	movlw	128
 25335  0187C6  6E0C               	movwf	(btemp+11)^0,c
 25336  0187C8  0EF8               	movlw	-8
 25337  0187CA  50E3               	movf	plusw1,w,c
 25338  0187CC  5E09               	subwf	(btemp+8)^0,f,c
 25339  0187CE  0EF9               	movlw	-7
 25340  0187D0  50E3               	movf	plusw1,w,c
 25341  0187D2  5A0A               	subwfb	(btemp+9)^0,f,c
 25342  0187D4  0EFA               	movlw	-6
 25343  0187D6  50E3               	movf	plusw1,w,c
 25344  0187D8  5A0B               	subwfb	(btemp+10)^0,f,c
 25345  0187DA  0EFB               	movlw	-5
 25346  0187DC  50E3               	movf	plusw1,w,c
 25347  0187DE  5A0C               	subwfb	(btemp+11)^0,f,c
 25348                           
 25349                           ;stkvar	_ff2 @ sp[(0)+-8]
 25350  0187E0  0EF8               	movlw	-8
 25351  0187E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25352  0187E8  0EF9               	movlw	-7
 25353  0187EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25354  0187F0  0EFA               	movlw	-6
 25355  0187F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25356  0187F8  0EFB               	movlw	-5
 25357  0187FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25358  018800                     l8352:
 25359                           
 25360                           ;stkvar	_ff1 @ sp[(0)+-4]
 25361  018800  0EFF               	movlw	-1
 25362  018802  7EE3               	btg	plusw1,7,c
 25363                           
 25364                           ;stkvar	_ff2 @ sp[(0)+-8]
 25365  018804  0EFB               	movlw	-5
 25366  018806  7EE3               	btg	plusw1,7,c
 25367                           
 25368                           ;stkvar	_ff2 @ sp[(0)+-8]
 25369                           ;stkvar	_ff1 @ sp[(0)+-4]
 25370  018808  50E1               	movf	fsr1l,w,c
 25371  01880A  0FFC               	addlw	-4
 25372  01880C  6ED9               	movwf	fsr2l,c
 25373  01880E  50E2               	movf	fsr1h,w,c
 25374  018810  6EDA               	movwf	fsr2h,c
 25375  018812  0EFF               	movlw	255
 25376  018814  22DA               	addwfc	fsr2h,f,c
 25377  018816  0EF8               	movlw	-8
 25378  018818  50E3               	movf	plusw1,w,c
 25379  01881A  5CDE               	subwf	postinc2,w,c
 25380  01881C  0EF9               	movlw	-7
 25381  01881E  50E3               	movf	plusw1,w,c
 25382  018820  58DE               	subwfb	postinc2,w,c
 25383  018822  0EFA               	movlw	-6
 25384  018824  50E3               	movf	plusw1,w,c
 25385  018826  58DE               	subwfb	postinc2,w,c
 25386  018828  0EFB               	movlw	-5
 25387  01882A  50E3               	movf	plusw1,w,c
 25388  01882C  58DE               	subwfb	postinc2,w,c
 25389  01882E  B0D8               	btfsc	status,0,c
 25390  018830  D002               	goto	l8360
 25391  018832  9001               	bcf	btemp& (0+255),0,c
 25392  018834  D001               	goto	l2627
 25393  018836                     l8360:
 25394  018836  8001               	bsf	btemp& (0+255),0,c
 25395  018838                     l2627:
 25396                           
 25397                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25398  018838  0EF8               	movlw	248
 25399  01883A  26E1               	addwf	fsr1l,f,c
 25400  01883C  0EFF               	movlw	255
 25401  01883E  22E2               	addwfc	fsr1h,f,c
 25402  018840  0012               	return		;funcret
 25403  018842                     __end_of___flge:
 25404                           	opt callstack 0
 25405                           
 25406 ;; *************** function _calc_model_data *****************
 25407 ;; Defined at:
 25408 ;;		line 67 in file "mbmc.c"
 25409 ;; Parameters:    Size  Location     Type
 25410 ;;		None
 25411 ;; Auto vars:     Size  Location     Type
 25412 ;;		None
 25413 ;; Return value:  Size  Location     Type
 25414 ;;                  1  [STACK] void 
 25415 ;; Registers used:
 25416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25417 ;; Tracked objects:
 25418 ;;		On entry : 0/0
 25419 ;;		On exit  : 3F/1
 25420 ;;		Unchanged: 0/0
 25421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25426 ;;Total ram usage:        0 bytes
 25427 ;; Hardware stack levels used:    1
 25428 ;; Hardware stack levels required when called:   18
 25429 ;; This function calls:
 25430 ;;		___fladd
 25431 ;;		___flmul
 25432 ;;		___flsub
 25433 ;;		_lp_filter
 25434 ;;		_start_bsoc
 25435 ;;		_stop_bsoc
 25436 ;; This function is called by:
 25437 ;;		_main
 25438 ;; This function uses a reentrant model
 25439 ;;
 25440                           
 25441                           	psect	text100
 25442  015B96                     __ptext100:
 25443                           	opt callstack 0
 25444  015B96                     _calc_model_data:
 25445                           	opt callstack 12
 25446                           
 25447                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25448                           
 25449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25450                           ;incstack = 0
 25451  015B96  EC84  F0DB         	call	_stop_bsoc	;wreg free
 25452                           
 25453                           ; BSR set to: 57
 25454                           ;mbmc.c: 72:  if (!V.calib) {
 25455  015B9A  0102               	movlb	2	; () banked
 25456  015B9C  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 25457  015B9E  A4D8               	btfss	status,2,c
 25458  015BA0  D1C5               	goto	l10702
 25459                           
 25460                           ; BSR set to: 2
 25461                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25462  015BA2  C100  F144         	movff	_C,_C+68	;volatile
 25463  015BA6  C101  F145         	movff	_C+1,_C+69	;volatile
 25464  015BAA  C102  F146         	movff	_C+2,_C+70	;volatile
 25465  015BAE  C103  F147         	movff	_C+3,_C+71	;volatile
 25466                           
 25467                           ; BSR set to: 2
 25468                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25469  015BB2  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25470  015BB8  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25471  015BBE  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25472  015BC4  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25473  015BCA  0060  F513  FFE6   	movff	_C+68,postinc1
 25474  015BD0  0060  F517  FFE6   	movff	_C+69,postinc1
 25475  015BD6  0060  F51B  FFE6   	movff	_C+70,postinc1
 25476  015BDC  0060  F51F  FFE6   	movff	_C+71,postinc1
 25477  015BE2  EC3F  F0D5         	call	___flsub	;wreg free
 25478  015BE6  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 25479  015BEC  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 25480  015BF2  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 25481  015BF8  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 25482                           
 25483                           ;mbmc.c: 75:   bcror = C.c_bat;
 25484  015BFE  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25485  015C02  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25486  015C06  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25487  015C0A  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25488                           
 25489                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25490  015C0E  C104  F148         	movff	_C+4,_C+72	;volatile
 25491  015C12  C105  F149         	movff	_C+5,_C+73	;volatile
 25492  015C16  C106  F14A         	movff	_C+6,_C+74	;volatile
 25493  015C1A  C107  F14B         	movff	_C+7,_C+75	;volatile
 25494                           
 25495                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25496  015C1E  C110  F154         	movff	_C+16,_C+84	;volatile
 25497  015C22  C111  F155         	movff	_C+17,_C+85	;volatile
 25498  015C26  C112  F156         	movff	_C+18,_C+86	;volatile
 25499  015C2A  C113  F157         	movff	_C+19,_C+87	;volatile
 25500                           
 25501                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25502  015C2E  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25503  015C34  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25504  015C3A  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25505  015C40  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25506  015C46  0060  F553  FFE6   	movff	_C+84,postinc1
 25507  015C4C  0060  F557  FFE6   	movff	_C+85,postinc1
 25508  015C52  0060  F55B  FFE6   	movff	_C+86,postinc1
 25509  015C58  0060  F55F  FFE6   	movff	_C+87,postinc1
 25510  015C5E  EC3F  F0D5         	call	___flsub	;wreg free
 25511  015C62  0060  F004  F168   	movff	btemp,_C+104	;volatile
 25512  015C68  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 25513  015C6E  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 25514  015C74  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 25515                           
 25516                           ;mbmc.c: 79:   bvror = C.v_bat;
 25517  015C7A  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25518  015C7E  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25519  015C82  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25520  015C86  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25521                           
 25522                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25523  015C8A  C114  F150         	movff	_C+20,_C+80	;volatile
 25524  015C8E  C115  F151         	movff	_C+21,_C+81	;volatile
 25525  015C92  C116  F152         	movff	_C+22,_C+82	;volatile
 25526  015C96  C117  F153         	movff	_C+23,_C+83	;volatile
 25527                           
 25528                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25529  015C9A  C108  F14C         	movff	_C+8,_C+76	;volatile
 25530  015C9E  C109  F14D         	movff	_C+9,_C+77	;volatile
 25531  015CA2  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25532  015CA6  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25533                           
 25534                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25535  015CAA  C130  F164         	movff	_C+48,_C+100	;volatile
 25536  015CAE  C131  F165         	movff	_C+49,_C+101	;volatile
 25537  015CB2  C132  F166         	movff	_C+50,_C+102	;volatile
 25538  015CB6  C133  F167         	movff	_C+51,_C+103	;volatile
 25539                           
 25540                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25541  015CBA  0E01               	movlw	1
 25542  015CBC  6EE6               	movwf	postinc1,c
 25543  015CBE  0E10               	movlw	16
 25544  015CC0  6EE6               	movwf	postinc1,c
 25545  015CC2  0060  F403  FFE6   	movff	_C,postinc1
 25546  015CC8  0060  F407  FFE6   	movff	_C+1,postinc1
 25547  015CCE  0060  F40B  FFE6   	movff	_C+2,postinc1
 25548  015CD4  0060  F40F  FFE6   	movff	_C+3,postinc1
 25549  015CDA  0060  F413  FFE6   	movff	_C+4,postinc1
 25550  015CE0  0060  F417  FFE6   	movff	_C+5,postinc1
 25551  015CE6  0060  F41B  FFE6   	movff	_C+6,postinc1
 25552  015CEC  0060  F41F  FFE6   	movff	_C+7,postinc1
 25553  015CF2  EC3F  F0D5         	call	___flsub	;wreg free
 25554  015CF6  0060  F007  FFE6   	movff	btemp,postinc1
 25555  015CFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25556  015D02  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25557  015D08  0060  F013  FFE6   	movff	btemp+3,postinc1
 25558  015D0E  ECDC  F0BE         	call	_lp_filter	;wreg free
 25559  015D12  0060  F004  F140   	movff	btemp,_C+64	;volatile
 25560  015D18  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 25561  015D1E  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 25562  015D24  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 25563                           
 25564                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25565  015D2A  0E01               	movlw	1
 25566  015D2C  6EE6               	movwf	postinc1,c
 25567  015D2E  0E11               	movlw	17
 25568  015D30  6EE6               	movwf	postinc1,c
 25569  015D32  0060  F553  FFE6   	movff	_C+84,postinc1
 25570  015D38  0060  F557  FFE6   	movff	_C+85,postinc1
 25571  015D3E  0060  F55B  FFE6   	movff	_C+86,postinc1
 25572  015D44  0060  F55F  FFE6   	movff	_C+87,postinc1
 25573  015D4A  0060  F503  FFE6   	movff	_C+64,postinc1
 25574  015D50  0060  F507  FFE6   	movff	_C+65,postinc1
 25575  015D56  0060  F50B  FFE6   	movff	_C+66,postinc1
 25576  015D5C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25577  015D62  EC0F  F099         	call	___flmul	;wreg free
 25578  015D66  0060  F007  FFE6   	movff	btemp,postinc1
 25579  015D6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25580  015D72  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25581  015D78  0060  F013  FFE6   	movff	btemp+3,postinc1
 25582  015D7E  ECDC  F0BE         	call	_lp_filter	;wreg free
 25583  015D82  0060  F004  F170   	movff	btemp,_C+112	;volatile
 25584  015D88  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 25585  015D8E  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 25586  015D94  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 25587                           
 25588                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25589  015D9A  0E01               	movlw	1
 25590  015D9C  6EE6               	movwf	postinc1,c
 25591  015D9E  0E12               	movlw	18
 25592  015DA0  6EE6               	movwf	postinc1,c
 25593  015DA2  0060  F543  FFE6   	movff	_C+80,postinc1
 25594  015DA8  0060  F547  FFE6   	movff	_C+81,postinc1
 25595  015DAE  0060  F54B  FFE6   	movff	_C+82,postinc1
 25596  015DB4  0060  F54F  FFE6   	movff	_C+83,postinc1
 25597  015DBA  0060  F523  FFE6   	movff	_C+72,postinc1
 25598  015DC0  0060  F527  FFE6   	movff	_C+73,postinc1
 25599  015DC6  0060  F52B  FFE6   	movff	_C+74,postinc1
 25600  015DCC  0060  F52F  FFE6   	movff	_C+75,postinc1
 25601  015DD2  EC0F  F099         	call	___flmul	;wreg free
 25602  015DD6  0060  F007  FFE6   	movff	btemp,postinc1
 25603  015DDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25604  015DE2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25605  015DE8  0060  F013  FFE6   	movff	btemp+3,postinc1
 25606  015DEE  ECDC  F0BE         	call	_lp_filter	;wreg free
 25607  015DF2  0060  F004  F178   	movff	btemp,_C+120	;volatile
 25608  015DF8  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 25609  015DFE  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 25610  015E04  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 25611                           
 25612                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25613  015E0A  0E01               	movlw	1
 25614  015E0C  6EE6               	movwf	postinc1,c
 25615  015E0E  0E13               	movlw	19
 25616  015E10  6EE6               	movwf	postinc1,c
 25617  015E12  0E00               	movlw	0
 25618  015E14  6EE6               	movwf	postinc1,c
 25619  015E16  0E00               	movlw	0
 25620  015E18  6EE6               	movwf	postinc1,c
 25621  015E1A  0E60               	movlw	96
 25622  015E1C  6EE6               	movwf	postinc1,c
 25623  015E1E  0EC1               	movlw	193
 25624  015E20  6EE6               	movwf	postinc1,c
 25625  015E22  0060  F593  FFE6   	movff	_C+100,postinc1
 25626  015E28  0060  F597  FFE6   	movff	_C+101,postinc1
 25627  015E2E  0060  F59B  FFE6   	movff	_C+102,postinc1
 25628  015E34  0060  F59F  FFE6   	movff	_C+103,postinc1
 25629  015E3A  0060  F503  FFE6   	movff	_C+64,postinc1
 25630  015E40  0060  F507  FFE6   	movff	_C+65,postinc1
 25631  015E46  0060  F50B  FFE6   	movff	_C+66,postinc1
 25632  015E4C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25633  015E52  EC0F  F099         	call	___flmul	;wreg free
 25634  015E56  0060  F007  FFE6   	movff	btemp,postinc1
 25635  015E5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25636  015E62  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25637  015E68  0060  F013  FFE6   	movff	btemp+3,postinc1
 25638  015E6E  EC24  F09D         	call	___fladd	;wreg free
 25639  015E72  0060  F007  FFE6   	movff	btemp,postinc1
 25640  015E78  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25641  015E7E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25642  015E84  0060  F013  FFE6   	movff	btemp+3,postinc1
 25643  015E8A  ECDC  F0BE         	call	_lp_filter	;wreg free
 25644  015E8E  0060  F004  F174   	movff	btemp,_C+116	;volatile
 25645  015E94  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 25646  015E9A  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 25647  015EA0  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 25648                           
 25649                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25650  015EA6  0E01               	movlw	1
 25651  015EA8  6EE6               	movwf	postinc1,c
 25652  015EAA  0E14               	movlw	20
 25653  015EAC  6EE6               	movwf	postinc1,c
 25654  015EAE  0060  F553  FFE6   	movff	_C+84,postinc1
 25655  015EB4  0060  F557  FFE6   	movff	_C+85,postinc1
 25656  015EBA  0060  F55B  FFE6   	movff	_C+86,postinc1
 25657  015EC0  0060  F55F  FFE6   	movff	_C+87,postinc1
 25658  015EC6  0060  F513  FFE6   	movff	_C+68,postinc1
 25659  015ECC  0060  F517  FFE6   	movff	_C+69,postinc1
 25660  015ED2  0060  F51B  FFE6   	movff	_C+70,postinc1
 25661  015ED8  0060  F51F  FFE6   	movff	_C+71,postinc1
 25662  015EDE  EC0F  F099         	call	___flmul	;wreg free
 25663  015EE2  0060  F007  FFE6   	movff	btemp,postinc1
 25664  015EE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25665  015EEE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25666  015EF4  0060  F013  FFE6   	movff	btemp+3,postinc1
 25667  015EFA  ECDC  F0BE         	call	_lp_filter	;wreg free
 25668  015EFE  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 25669  015F04  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 25670  015F0A  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 25671  015F10  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 25672                           
 25673                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25674  015F16  0101               	movlb	1	; () banked
 25675  015F18  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25676  015F1A  D008               	goto	l10702
 25677                           
 25678                           ; BSR set to: 1
 25679                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25680  015F1C  0E17               	movlw	23
 25681  015F1E  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25682  015F20  0EB7               	movlw	183
 25683  015F22  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25684  015F24  0ED1               	movlw	209
 25685  015F26  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25686  015F28  0E38               	movlw	56
 25687  015F2A  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25688  015F2C                     l10702:
 25689                           
 25690                           ;mbmc.c: 94:  start_bsoc();
 25691  015F2C  EC26  F0DA         	call	_start_bsoc	;wreg free
 25692                           
 25693                           ; BSR set to: 57
 25694                           ;mbmc.c: 95:  C.update = 1;
 25695  015F30  0E01               	movlw	1
 25696  015F32  0101               	movlb	1	; () banked
 25697  015F34  6FB0               	movwf	(_C+176)& (0+255),b	;volatile
 25698                           
 25699                           ; BSR set to: 1
 25700                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25701  015F36  0012               	return		;funcret
 25702  015F38                     __end_of_calc_model_data:
 25703                           	opt callstack 0
 25704                           
 25705 ;; *************** function _stop_bsoc *****************
 25706 ;; Defined at:
 25707 ;;		line 108 in file "bsoc.c"
 25708 ;; Parameters:    Size  Location     Type
 25709 ;;		None
 25710 ;; Auto vars:     Size  Location     Type
 25711 ;;		None
 25712 ;; Return value:  Size  Location     Type
 25713 ;;                  1  [STACK] void 
 25714 ;; Registers used:
 25715 ;;		None
 25716 ;; Tracked objects:
 25717 ;;		On entry : 0/0
 25718 ;;		On exit  : 3F/39
 25719 ;;		Unchanged: 0/0
 25720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25725 ;;Total ram usage:        0 bytes
 25726 ;; Hardware stack levels used:    1
 25727 ;; Hardware stack levels required when called:   15
 25728 ;; This function calls:
 25729 ;;		Nothing
 25730 ;; This function is called by:
 25731 ;;		_calc_model_data
 25732 ;; This function uses a reentrant model
 25733 ;;
 25734                           
 25735                           	psect	text101
 25736  01B708                     __ptext101:
 25737                           	opt callstack 0
 25738  01B708                     _stop_bsoc:
 25739                           	opt callstack 14
 25740                           
 25741                           ;bsoc.c: 111:  PIE6bits.TMR3IE = 0;
 25742                           
 25743                           ; BSR set to: 1
 25744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25745                           ;incstack = 0
 25746  01B708  0139               	movlb	57	; () banked
 25747  01B70A  9D96               	bcf	150,6,b	;volatile
 25748                           
 25749                           ; BSR set to: 57
 25750                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25751  01B70C  0012               	return		;funcret
 25752  01B70E                     __end_of_stop_bsoc:
 25753                           	opt callstack 0
 25754                           
 25755 ;; *************** function _start_bsoc *****************
 25756 ;; Defined at:
 25757 ;;		line 99 in file "bsoc.c"
 25758 ;; Parameters:    Size  Location     Type
 25759 ;;		None
 25760 ;; Auto vars:     Size  Location     Type
 25761 ;;		None
 25762 ;; Return value:  Size  Location     Type
 25763 ;;                  1  [STACK] void 
 25764 ;; Registers used:
 25765 ;;		wreg, status,2, status,0, btemp+11
 25766 ;; Tracked objects:
 25767 ;;		On entry : 3C/2
 25768 ;;		On exit  : 3F/39
 25769 ;;		Unchanged: 0/0
 25770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25775 ;;Total ram usage:        0 bytes
 25776 ;; Hardware stack levels used:    1
 25777 ;; Hardware stack levels required when called:   15
 25778 ;; This function calls:
 25779 ;;		Nothing
 25780 ;; This function is called by:
 25781 ;;		_calc_model_data
 25782 ;; This function uses a reentrant model
 25783 ;;
 25784                           
 25785                           	psect	text102
 25786  01B44C                     __ptext102:
 25787                           	opt callstack 0
 25788  01B44C                     _start_bsoc:
 25789                           	opt callstack 14
 25790                           
 25791                           ;bsoc.c: 102:  PIE6bits.TMR3IE = 1;
 25792                           
 25793                           ; BSR set to: 57
 25794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25795                           ;incstack = 0
 25796  01B44C  0139               	movlb	57	; () banked
 25797  01B44E  8D96               	bsf	150,6,b	;volatile
 25798                           
 25799                           ; BSR set to: 57
 25800  01B450  A4BE               	btfss	190,2,c	;volatile
 25801  01B452  D002               	goto	u9290
 25802  01B454  0E01               	movlw	1
 25803  01B456  D001               	goto	u9296
 25804  01B458                     u9290:
 25805  01B458  0E00               	movlw	0
 25806  01B45A                     u9296:
 25807  01B45A  0AFF               	xorlw	255
 25808  01B45C  6E0C               	movwf	(btemp+11)^0,c
 25809  01B45E  460C               	rlncf	(btemp+11)^0,f,c
 25810  01B460  460C               	rlncf	(btemp+11)^0,f,c
 25811  01B462  50BE               	movf	190,w,c	;volatile
 25812  01B464  180C               	xorwf	(btemp+11)^0,w,c
 25813  01B466  0BFB               	andlw	-5
 25814  01B468  180C               	xorwf	(btemp+11)^0,w,c
 25815  01B46A  6EBE               	movwf	190,c	;volatile
 25816                           
 25817                           ; BSR set to: 57
 25818                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25819  01B46C  0012               	return		;funcret
 25820  01B46E                     __end_of_start_bsoc:
 25821                           	opt callstack 0
 25822                           
 25823 ;; *************** function _lp_filter *****************
 25824 ;; Defined at:
 25825 ;;		line 29 in file "mbmc.c"
 25826 ;; Parameters:    Size  Location     Type
 25827 ;;  new             4  [STACK] const float 
 25828 ;;  bn              1  [STACK] const unsigned char 
 25829 ;;  slow            1  [STACK] const char 
 25830 ;; Auto vars:     Size  Location     Type
 25831 ;;  lp_speed        4  [STACK] float 
 25832 ;; Return value:  Size  Location     Type
 25833 ;;                  4  [STACK] float 
 25834 ;; Registers used:
 25835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25836 ;; Tracked objects:
 25837 ;;		On entry : 0/2
 25838 ;;		On exit  : 0/0
 25839 ;;		Unchanged: 0/0
 25840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25845 ;;Total ram usage:        0 bytes
 25846 ;; Hardware stack levels used:    1
 25847 ;; Hardware stack levels required when called:   17
 25848 ;; This function calls:
 25849 ;;		___fladd
 25850 ;;		___flmul
 25851 ;;		___flsub
 25852 ;; This function is called by:
 25853 ;;		_main
 25854 ;;		_convert_adc_data
 25855 ;;		_calc_model_data
 25856 ;; This function uses a reentrant model
 25857 ;;
 25858                           
 25859                           	psect	text103
 25860  017DB8                     __ptext103:
 25861                           	opt callstack 0
 25862  017DB8                     _lp_filter:
 25863                           	opt callstack 0
 25864                           
 25865                           ; BSR set to: 57
 25866                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25867  017DB8  52E6               	movf	postinc1,f,c
 25868  017DBA  52E6               	movf	postinc1,f,c
 25869  017DBC  52E6               	movf	postinc1,f,c
 25870  017DBE  52E6               	movf	postinc1,f,c
 25871                           
 25872                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25873                           ;stkvar	_bn @ sp[(-4)+-5]
 25874                           
 25875                           ;incstack = 0
 25876  017DC0  0EF7               	movlw	-9
 25877  017DC2  006F FF8C  F001    	movff	plusw1,btemp
 25878  017DC8  0E14               	movlw	20
 25879  017DCA  6401               	cpfsgt	btemp^0,c
 25880  017DCC  D011               	goto	l10106
 25881  017DCE                     u9200:
 25882                           
 25883                           ;mbmc.c: 35:   return new;
 25884                           ;stkvar	_new @ sp[(-4)+-4]
 25885  017DCE  0EF8               	movlw	-8
 25886  017DD0  006F FF8C  F001    	movff	plusw1,btemp
 25887  017DD6  0EF9               	movlw	-7
 25888  017DD8  006F FF8C  F002    	movff	plusw1,btemp+1
 25889  017DDE  0EFA               	movlw	-6
 25890  017DE0  006F FF8C  F003    	movff	plusw1,btemp+2
 25891  017DE6  0EFB               	movlw	-5
 25892  017DE8  006F FF8C  F004    	movff	plusw1,btemp+3
 25893  017DEE  D0BD               	goto	l1825
 25894  017DF0                     l10106:
 25895                           
 25896                           ;mbmc.c: 37:  if (slow == (-1)) {
 25897                           ;stkvar	_slow @ sp[(-4)+-6]
 25898  017DF0  0EF6               	movlw	-10
 25899  017DF2  28E3               	incf	plusw1,w,c
 25900  017DF4  A4D8               	btfss	status,2,c
 25901  017DF6  D012               	goto	l10114
 25902                           
 25903                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25904                           ;stkvar	_bn @ sp[(-4)+-5]
 25905  017DF8  0EF7               	movlw	-9
 25906  017DFA  50E3               	movf	plusw1,w,c
 25907  017DFC  0D04               	mullw	4
 25908  017DFE  0E00               	movlw	low lp_filter@smooth
 25909  017E00  24F3               	addwf	243,w,c
 25910  017E02  6ED9               	movwf	fsr2l,c
 25911  017E04  0E03               	movlw	high lp_filter@smooth
 25912  017E06  20F4               	addwfc	prodh,w,c
 25913  017E08  6EDA               	movwf	fsr2h,c
 25914  017E0A  0E00               	movlw	0
 25915  017E0C  6EDE               	movwf	postinc2,c
 25916  017E0E  0E00               	movlw	0
 25917  017E10  6EDE               	movwf	postinc2,c
 25918  017E12  0E00               	movlw	0
 25919  017E14  6EDE               	movwf	postinc2,c
 25920  017E16  0E00               	movlw	0
 25921  017E18  6EDD               	movwf	postdec2,c
 25922  017E1A  D7D9               	goto	u9200
 25923  017E1C                     l10114:
 25924                           
 25925                           ;mbmc.c: 42:  if (slow) {
 25926                           ;stkvar	_slow @ sp[(-4)+-6]
 25927  017E1C  0EF6               	movlw	-10
 25928  017E1E  50E3               	movf	plusw1,w,c
 25929  017E20  B4D8               	btfsc	status,2,c
 25930  017E22  D006               	goto	l10118
 25931                           
 25932                           ;mbmc.c: 43:   lp_speed = 0.033;
 25933  017E24  0E02               	movlw	2
 25934  017E26  6E09               	movwf	(btemp+8)^0,c
 25935  017E28  0E2B               	movlw	43
 25936  017E2A  6E0A               	movwf	(btemp+9)^0,c
 25937  017E2C  0E07               	movlw	7
 25938  017E2E  D005               	goto	L29
 25939  017E30                     l10118:
 25940                           
 25941                           ;mbmc.c: 45:   lp_speed = 0.066;
 25942  017E30  0E02               	movlw	2
 25943  017E32  6E09               	movwf	(btemp+8)^0,c
 25944  017E34  0E2B               	movlw	43
 25945  017E36  6E0A               	movwf	(btemp+9)^0,c
 25946  017E38  0E87               	movlw	135
 25947  017E3A                     L29:
 25948  017E3A  6E0B               	movwf	(btemp+10)^0,c
 25949  017E3C  0E3D               	movlw	61
 25950  017E3E  6E0C               	movwf	(btemp+11)^0,c
 25951                           
 25952                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25953  017E40  0EFC               	movlw	-4
 25954  017E42  0060  F027  FFE3   	movff	btemp+8,plusw1
 25955  017E48  0EFD               	movlw	-3
 25956  017E4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25957  017E50  0EFE               	movlw	-2
 25958  017E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25959  017E58  0EFF               	movlw	-1
 25960  017E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25961                           
 25962                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25963                           ;stkvar	_bn @ sp[(-4)+-5]
 25964  017E60  0EF7               	movlw	-9
 25965  017E62  50E3               	movf	plusw1,w,c
 25966  017E64  0D04               	mullw	4
 25967  017E66  0E00               	movlw	low lp_filter@smooth
 25968  017E68  24F3               	addwf	243,w,c
 25969  017E6A  6ED9               	movwf	fsr2l,c
 25970  017E6C  0E03               	movlw	high lp_filter@smooth
 25971  017E6E  20F4               	addwfc	prodh,w,c
 25972  017E70  6EDA               	movwf	fsr2h,c
 25973  017E72  006F FF7B FFE6     	movff	postinc2,postinc1
 25974  017E78  006F FF7B FFE6     	movff	postinc2,postinc1
 25975  017E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 25976  017E84  006F FF7B FFE6     	movff	postinc2,postinc1
 25977                           
 25978                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25979  017E8A  0EF8               	movlw	-8
 25980  017E8C  006F FF8F FFE6     	movff	plusw1,postinc1
 25981  017E92  006F FF8F FFE6     	movff	plusw1,postinc1
 25982  017E98  006F FF8F FFE6     	movff	plusw1,postinc1
 25983  017E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 25984                           
 25985                           ;stkvar	_bn @ sp[(-12)+-5]
 25986  017EA4  0EEF               	movlw	-17
 25987  017EA6  50E3               	movf	plusw1,w,c
 25988  017EA8  0D04               	mullw	4
 25989  017EAA  0E00               	movlw	low lp_filter@smooth
 25990  017EAC  24F3               	addwf	243,w,c
 25991  017EAE  6ED9               	movwf	fsr2l,c
 25992  017EB0  0E03               	movlw	high lp_filter@smooth
 25993  017EB2  20F4               	addwfc	prodh,w,c
 25994  017EB4  6EDA               	movwf	fsr2h,c
 25995  017EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 25996  017EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 25997  017EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 25998  017EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 25999                           
 26000                           ;stkvar	_new @ sp[(-16)+-4]
 26001  017ECE  0EEC               	movlw	-20
 26002  017ED0  006F FF8F FFE6     	movff	plusw1,postinc1
 26003  017ED6  006F FF8F FFE6     	movff	plusw1,postinc1
 26004  017EDC  006F FF8F FFE6     	movff	plusw1,postinc1
 26005  017EE2  006F FF8F FFE6     	movff	plusw1,postinc1
 26006  017EE8  EC3F  F0D5         	call	___flsub	;wreg free
 26007  017EEC  0060  F007  FFE6   	movff	btemp,postinc1
 26008  017EF2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26009  017EF8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26010  017EFE  0060  F013  FFE6   	movff	btemp+3,postinc1
 26011  017F04  EC0F  F099         	call	___flmul	;wreg free
 26012  017F08  0060  F007  FFE6   	movff	btemp,postinc1
 26013  017F0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26014  017F14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26015  017F1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 26016  017F20  EC24  F09D         	call	___fladd	;wreg free
 26017                           
 26018                           ;stkvar	_bn @ sp[(-4)+-5]
 26019  017F24  0EF7               	movlw	-9
 26020  017F26  50E3               	movf	plusw1,w,c
 26021  017F28  0D04               	mullw	4
 26022  017F2A  0E00               	movlw	low lp_filter@smooth
 26023  017F2C  24F3               	addwf	243,w,c
 26024  017F2E  6ED9               	movwf	fsr2l,c
 26025  017F30  0E03               	movlw	high lp_filter@smooth
 26026  017F32  20F4               	addwfc	prodh,w,c
 26027  017F34  6EDA               	movwf	fsr2h,c
 26028  017F36  0060  F007  FFDE   	movff	btemp,postinc2
 26029  017F3C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26030  017F42  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26031  017F48  0060  F013  FFDD   	movff	btemp+3,postdec2
 26032  017F4E  52DD               	movf	postdec2,f,c
 26033  017F50  52DD               	movf	postdec2,f,c
 26034  017F52  006F FF78  F001    	movff	postinc2,btemp
 26035  017F58  006F FF78  F002    	movff	postinc2,btemp+1
 26036  017F5E  006F FF78  F003    	movff	postinc2,btemp+2
 26037  017F64  006F FF78  F004    	movff	postinc2,btemp+3
 26038  017F6A                     l1825:
 26039                           
 26040                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26041  017F6A  0EF6               	movlw	246
 26042  017F6C  26E1               	addwf	fsr1l,f,c
 26043  017F6E  0EFF               	movlw	255
 26044  017F70  22E2               	addwfc	fsr1h,f,c
 26045  017F72  0012               	return		;funcret
 26046  017F74                     __end_of_lp_filter:
 26047                           	opt callstack 0
 26048                           
 26049 ;; *************** function ___flsub *****************
 26050 ;; Defined at:
 26051 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26052 ;; Parameters:    Size  Location     Type
 26053 ;;  b               4  [STACK] float 
 26054 ;;  a               4  [STACK] float 
 26055 ;; Auto vars:     Size  Location     Type
 26056 ;;		None
 26057 ;; Return value:  Size  Location     Type
 26058 ;;                  4  [STACK] float 
 26059 ;; Registers used:
 26060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26061 ;; Tracked objects:
 26062 ;;		On entry : 0/0
 26063 ;;		On exit  : 0/0
 26064 ;;		Unchanged: 0/0
 26065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26070 ;;Total ram usage:        0 bytes
 26071 ;; Hardware stack levels used:    1
 26072 ;; Hardware stack levels required when called:   16
 26073 ;; This function calls:
 26074 ;;		___fladd
 26075 ;; This function is called by:
 26076 ;;		_conv_raw_result
 26077 ;;		_lp_filter
 26078 ;;		_calc_model_data
 26079 ;;		_calc_ror_data
 26080 ;;		_esr_check
 26081 ;;		_efgtoa
 26082 ;; This function uses a reentrant model
 26083 ;;
 26084                           
 26085                           	psect	text104
 26086  01AA7E                     __ptext104:
 26087                           	opt callstack 0
 26088  01AA7E                     ___flsub:
 26089                           	opt callstack 0
 26090                           
 26091                           ;stkvar	_a @ sp[(0)+-8]
 26092                           
 26093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26094                           ;incstack = 0
 26095 ;; hardware stack exceeded
 26096  01AA7E  0EFB               	movlw	-5
 26097  01AA80  7EE3               	btg	plusw1,7,c
 26098                           
 26099                           ;stkvar	_a @ sp[(0)+-8]
 26100  01AA82  0EF8               	movlw	-8
 26101  01AA84  006F FF8F FFE6     	movff	plusw1,postinc1
 26102  01AA8A  006F FF8F FFE6     	movff	plusw1,postinc1
 26103  01AA90  006F FF8F FFE6     	movff	plusw1,postinc1
 26104  01AA96  006F FF8F FFE6     	movff	plusw1,postinc1
 26105                           
 26106                           ;stkvar	_b @ sp[(-4)+-4]
 26107  01AA9C  0EF8               	movlw	-8
 26108  01AA9E  006F FF8F FFE6     	movff	plusw1,postinc1
 26109  01AAA4  006F FF8F FFE6     	movff	plusw1,postinc1
 26110  01AAAA  006F FF8F FFE6     	movff	plusw1,postinc1
 26111  01AAB0  006F FF8F FFE6     	movff	plusw1,postinc1
 26112  01AAB6  EC24  F09D         	call	___fladd	;wreg free
 26113                           
 26114                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26115  01AABA  0EF8               	movlw	248
 26116  01AABC  26E1               	addwf	fsr1l,f,c
 26117  01AABE  0EFF               	movlw	255
 26118  01AAC0  22E2               	addwfc	fsr1h,f,c
 26119  01AAC2  0012               	return		;funcret
 26120  01AAC4                     __end_of___flsub:
 26121                           	opt callstack 0
 26122                           
 26123 ;; *************** function ___fladd *****************
 26124 ;; Defined at:
 26125 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26126 ;; Parameters:    Size  Location     Type
 26127 ;;  b               4  [STACK] float 
 26128 ;;  a               4  [STACK] float 
 26129 ;; Auto vars:     Size  Location     Type
 26130 ;;  grs             1  [STACK] unsigned char 
 26131 ;;  bexp            1  [STACK] unsigned char 
 26132 ;;  aexp            1  [STACK] unsigned char 
 26133 ;;  signs           1  [STACK] unsigned char 
 26134 ;; Return value:  Size  Location     Type
 26135 ;;                  4  [STACK] unsigned char 
 26136 ;; Registers used:
 26137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26138 ;; Tracked objects:
 26139 ;;		On entry : 0/0
 26140 ;;		On exit  : 0/0
 26141 ;;		Unchanged: 0/0
 26142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26147 ;;Total ram usage:        0 bytes
 26148 ;; Hardware stack levels used:    1
 26149 ;; Hardware stack levels required when called:   15
 26150 ;; This function calls:
 26151 ;;		Nothing
 26152 ;; This function is called by:
 26153 ;;		_main
 26154 ;;		_lp_filter
 26155 ;;		_calc_model_data
 26156 ;;		_calc_bsoc
 26157 ;;		_efgtoa
 26158 ;;		___flsub
 26159 ;; This function uses a reentrant model
 26160 ;;
 26161                           
 26162                           	psect	text105
 26163  013A48                     __ptext105:
 26164                           	opt callstack 0
 26165  013A48                     ___fladd:
 26166                           	opt callstack 0
 26167                           
 26168                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26169  013A48  52E6               	movf	postinc1,f,c
 26170  013A4A  52E6               	movf	postinc1,f,c
 26171  013A4C  52E6               	movf	postinc1,f,c
 26172  013A4E  52E6               	movf	postinc1,f,c
 26173                           
 26174                           ;stkvar	_b @ sp[(-4)+-4]
 26175                           
 26176                           ;incstack = 0
 26177 ;; hardware stack exceeded
 26178  013A50  0EFB               	movlw	251
 26179  013A52  24E1               	addwf	fsr1l,w,c
 26180  013A54  6ED9               	movwf	fsr2l,c
 26181  013A56  0EFF               	movlw	255
 26182  013A58  20E2               	addwfc	fsr1h,w,c
 26183  013A5A  6EDA               	movwf	fsr2h,c
 26184  013A5C  50DF               	movf	indf2,w,c
 26185  013A5E  6E0C               	movwf	(btemp+11)^0,c
 26186  013A60  0E80               	movlw	128
 26187  013A62  160C               	andwf	(btemp+11)^0,f,c
 26188                           
 26189                           ;stkvar	_signs @ sp[(-4)+3]
 26190  013A64  0EFF               	movlw	-1
 26191  013A66  0060  F033  FFE3   	movff	btemp+11,plusw1
 26192                           
 26193                           ;stkvar	_b @ sp[(-4)+-4]
 26194  013A6C  0EFB               	movlw	251
 26195  013A6E  24E1               	addwf	fsr1l,w,c
 26196  013A70  6ED9               	movwf	fsr2l,c
 26197  013A72  0EFF               	movlw	255
 26198  013A74  20E2               	addwfc	fsr1h,w,c
 26199  013A76  6EDA               	movwf	fsr2h,c
 26200  013A78  50DF               	movf	indf2,w,c
 26201  013A7A  6E0C               	movwf	(btemp+11)^0,c
 26202  013A7C  90D8               	bcf	status,0,c
 26203  013A7E  340C               	rlcf	(btemp+11)^0,w,c
 26204  013A80  6E0B               	movwf	(btemp+10)^0,c
 26205                           
 26206                           ;stkvar	_bexp @ sp[(-4)+1]
 26207  013A82  0EFD               	movlw	-3
 26208  013A84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26209                           
 26210                           ;stkvar	_b @ sp[(-4)+-4]
 26211  013A8A  0EFA               	movlw	250
 26212  013A8C  24E1               	addwf	fsr1l,w,c
 26213  013A8E  6ED9               	movwf	fsr2l,c
 26214  013A90  0EFF               	movlw	255
 26215  013A92  20E2               	addwfc	fsr1h,w,c
 26216  013A94  6EDA               	movwf	fsr2h,c
 26217  013A96  AEDF               	btfss	indf2,7,c
 26218  013A98  D002               	goto	l7492
 26219                           
 26220                           ;stkvar	_bexp @ sp[(-4)+1]
 26221  013A9A  0EFD               	movlw	-3
 26222  013A9C  80E3               	bsf	plusw1,0,c
 26223  013A9E                     l7492:
 26224                           
 26225                           ;stkvar	_bexp @ sp[(-4)+1]
 26226  013A9E  0EFD               	movlw	-3
 26227  013AA0  50E3               	movf	plusw1,w,c
 26228  013AA2  B4D8               	btfsc	status,2,c
 26229  013AA4  D027               	goto	l7502
 26230                           
 26231                           ;stkvar	_bexp @ sp[(-4)+1]
 26232  013AA6  0EFD               	movlw	-3
 26233  013AA8  28E3               	incf	plusw1,w,c
 26234  013AAA  A4D8               	btfss	status,2,c
 26235  013AAC  D018               	goto	l7498
 26236  013AAE  0E00               	movlw	0
 26237  013AB0  6E09               	movwf	(btemp+8)^0,c
 26238  013AB2  0E00               	movlw	0
 26239  013AB4  6E0A               	movwf	(btemp+9)^0,c
 26240  013AB6  0E00               	movlw	0
 26241  013AB8  6E0B               	movwf	(btemp+10)^0,c
 26242  013ABA  0E00               	movlw	0
 26243  013ABC  6E0C               	movwf	(btemp+11)^0,c
 26244                           
 26245                           ;stkvar	_b @ sp[(-4)+-4]
 26246  013ABE  0EF8               	movlw	-8
 26247  013AC0  0060  F027  FFE3   	movff	btemp+8,plusw1
 26248  013AC6  0EF9               	movlw	-7
 26249  013AC8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26250  013ACE  0EFA               	movlw	-6
 26251  013AD0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26252  013AD6  0EFB               	movlw	-5
 26253  013AD8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26254  013ADE                     l7498:
 26255                           
 26256                           ;stkvar	_b @ sp[(-4)+-4]
 26257  013ADE  0EFA               	movlw	-6
 26258  013AE0  8EE3               	bsf	plusw1,7,c
 26259                           
 26260                           ;stkvar	_b @ sp[(-4)+-4]
 26261  013AE2  0EFB               	movlw	251
 26262  013AE4  24E1               	addwf	fsr1l,w,c
 26263  013AE6  6ED9               	movwf	fsr2l,c
 26264  013AE8  0EFF               	movlw	255
 26265  013AEA  20E2               	addwfc	fsr1h,w,c
 26266  013AEC  6EDA               	movwf	fsr2h,c
 26267  013AEE  0E00               	movlw	0
 26268  013AF0  6EDF               	movwf	indf2,c
 26269  013AF2  D018               	goto	l7504
 26270  013AF4                     l7502:
 26271  013AF4  0E00               	movlw	0
 26272  013AF6  6E09               	movwf	(btemp+8)^0,c
 26273  013AF8  0E00               	movlw	0
 26274  013AFA  6E0A               	movwf	(btemp+9)^0,c
 26275  013AFC  0E00               	movlw	0
 26276  013AFE  6E0B               	movwf	(btemp+10)^0,c
 26277  013B00  0E00               	movlw	0
 26278  013B02  6E0C               	movwf	(btemp+11)^0,c
 26279                           
 26280                           ;stkvar	_b @ sp[(-4)+-4]
 26281  013B04  0EF8               	movlw	-8
 26282  013B06  0060  F027  FFE3   	movff	btemp+8,plusw1
 26283  013B0C  0EF9               	movlw	-7
 26284  013B0E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26285  013B14  0EFA               	movlw	-6
 26286  013B16  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26287  013B1C  0EFB               	movlw	-5
 26288  013B1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26289  013B24                     l7504:
 26290                           
 26291                           ;stkvar	_a @ sp[(-4)+-8]
 26292  013B24  0EF7               	movlw	247
 26293  013B26  24E1               	addwf	fsr1l,w,c
 26294  013B28  6ED9               	movwf	fsr2l,c
 26295  013B2A  0EFF               	movlw	255
 26296  013B2C  20E2               	addwfc	fsr1h,w,c
 26297  013B2E  6EDA               	movwf	fsr2h,c
 26298  013B30  50DF               	movf	indf2,w,c
 26299  013B32  6E0C               	movwf	(btemp+11)^0,c
 26300  013B34  0E80               	movlw	128
 26301  013B36  160C               	andwf	(btemp+11)^0,f,c
 26302                           
 26303                           ;stkvar	_aexp @ sp[(-4)+2]
 26304  013B38  0EFE               	movlw	-2
 26305  013B3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26306                           
 26307                           ;stkvar	_signs @ sp[(-4)+3]
 26308                           ;stkvar	_aexp @ sp[(-4)+2]
 26309  013B40  50E1               	movf	fsr1l,w,c
 26310  013B42  0FFE               	addlw	-2
 26311  013B44  6ED9               	movwf	fsr2l,c
 26312  013B46  50E2               	movf	fsr1h,w,c
 26313  013B48  6EDA               	movwf	fsr2h,c
 26314  013B4A  0EFF               	movlw	255
 26315  013B4C  22DA               	addwfc	fsr2h,f,c
 26316  013B4E  0EFF               	movlw	-1
 26317  013B50  50E3               	movf	plusw1,w,c
 26318  013B52  18DE               	xorwf	postinc2,w,c
 26319  013B54  B4D8               	btfsc	status,2,c
 26320  013B56  D002               	goto	l7510
 26321                           
 26322                           ;stkvar	_signs @ sp[(-4)+3]
 26323  013B58  0EFF               	movlw	-1
 26324  013B5A  8CE3               	bsf	plusw1,6,c
 26325  013B5C                     l7510:
 26326                           
 26327                           ;stkvar	_a @ sp[(-4)+-8]
 26328  013B5C  0EF7               	movlw	247
 26329  013B5E  24E1               	addwf	fsr1l,w,c
 26330  013B60  6ED9               	movwf	fsr2l,c
 26331  013B62  0EFF               	movlw	255
 26332  013B64  20E2               	addwfc	fsr1h,w,c
 26333  013B66  6EDA               	movwf	fsr2h,c
 26334  013B68  50DF               	movf	indf2,w,c
 26335  013B6A  6E0C               	movwf	(btemp+11)^0,c
 26336  013B6C  90D8               	bcf	status,0,c
 26337  013B6E  340C               	rlcf	(btemp+11)^0,w,c
 26338  013B70  6E0B               	movwf	(btemp+10)^0,c
 26339                           
 26340                           ;stkvar	_aexp @ sp[(-4)+2]
 26341  013B72  0EFE               	movlw	-2
 26342  013B74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26343                           
 26344                           ;stkvar	_a @ sp[(-4)+-8]
 26345  013B7A  0EF6               	movlw	246
 26346  013B7C  24E1               	addwf	fsr1l,w,c
 26347  013B7E  6ED9               	movwf	fsr2l,c
 26348  013B80  0EFF               	movlw	255
 26349  013B82  20E2               	addwfc	fsr1h,w,c
 26350  013B84  6EDA               	movwf	fsr2h,c
 26351  013B86  AEDF               	btfss	indf2,7,c
 26352  013B88  D002               	goto	l7516
 26353                           
 26354                           ;stkvar	_aexp @ sp[(-4)+2]
 26355  013B8A  0EFE               	movlw	-2
 26356  013B8C  80E3               	bsf	plusw1,0,c
 26357  013B8E                     l7516:
 26358                           
 26359                           ;stkvar	_aexp @ sp[(-4)+2]
 26360  013B8E  0EFE               	movlw	-2
 26361  013B90  50E3               	movf	plusw1,w,c
 26362  013B92  B4D8               	btfsc	status,2,c
 26363  013B94  D027               	goto	l7526
 26364                           
 26365                           ;stkvar	_aexp @ sp[(-4)+2]
 26366  013B96  0EFE               	movlw	-2
 26367  013B98  28E3               	incf	plusw1,w,c
 26368  013B9A  A4D8               	btfss	status,2,c
 26369  013B9C  D018               	goto	l7522
 26370  013B9E  0E00               	movlw	0
 26371  013BA0  6E09               	movwf	(btemp+8)^0,c
 26372  013BA2  0E00               	movlw	0
 26373  013BA4  6E0A               	movwf	(btemp+9)^0,c
 26374  013BA6  0E00               	movlw	0
 26375  013BA8  6E0B               	movwf	(btemp+10)^0,c
 26376  013BAA  0E00               	movlw	0
 26377  013BAC  6E0C               	movwf	(btemp+11)^0,c
 26378                           
 26379                           ;stkvar	_a @ sp[(-4)+-8]
 26380  013BAE  0EF4               	movlw	-12
 26381  013BB0  0060  F027  FFE3   	movff	btemp+8,plusw1
 26382  013BB6  0EF5               	movlw	-11
 26383  013BB8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26384  013BBE  0EF6               	movlw	-10
 26385  013BC0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26386  013BC6  0EF7               	movlw	-9
 26387  013BC8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26388  013BCE                     l7522:
 26389                           
 26390                           ;stkvar	_a @ sp[(-4)+-8]
 26391  013BCE  0EF6               	movlw	-10
 26392  013BD0  8EE3               	bsf	plusw1,7,c
 26393                           
 26394                           ;stkvar	_a @ sp[(-4)+-8]
 26395  013BD2  0EF7               	movlw	247
 26396  013BD4  24E1               	addwf	fsr1l,w,c
 26397  013BD6  6ED9               	movwf	fsr2l,c
 26398  013BD8  0EFF               	movlw	255
 26399  013BDA  20E2               	addwfc	fsr1h,w,c
 26400  013BDC  6EDA               	movwf	fsr2h,c
 26401  013BDE  0E00               	movlw	0
 26402  013BE0  6EDF               	movwf	indf2,c
 26403  013BE2  D018               	goto	l7528
 26404  013BE4                     l7526:
 26405  013BE4  0E00               	movlw	0
 26406  013BE6  6E09               	movwf	(btemp+8)^0,c
 26407  013BE8  0E00               	movlw	0
 26408  013BEA  6E0A               	movwf	(btemp+9)^0,c
 26409  013BEC  0E00               	movlw	0
 26410  013BEE  6E0B               	movwf	(btemp+10)^0,c
 26411  013BF0  0E00               	movlw	0
 26412  013BF2  6E0C               	movwf	(btemp+11)^0,c
 26413                           
 26414                           ;stkvar	_a @ sp[(-4)+-8]
 26415  013BF4  0EF4               	movlw	-12
 26416  013BF6  0060  F027  FFE3   	movff	btemp+8,plusw1
 26417  013BFC  0EF5               	movlw	-11
 26418  013BFE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26419  013C04  0EF6               	movlw	-10
 26420  013C06  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26421  013C0C  0EF7               	movlw	-9
 26422  013C0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26423  013C14                     l7528:
 26424                           
 26425                           ;stkvar	_bexp @ sp[(-4)+1]
 26426                           ;stkvar	_aexp @ sp[(-4)+2]
 26427  013C14  50E1               	movf	fsr1l,w,c
 26428  013C16  0FFE               	addlw	-2
 26429  013C18  6ED9               	movwf	fsr2l,c
 26430  013C1A  50E2               	movf	fsr1h,w,c
 26431  013C1C  6EDA               	movwf	fsr2h,c
 26432  013C1E  0EFF               	movlw	255
 26433  013C20  22DA               	addwfc	fsr2h,f,c
 26434  013C22  0EFD               	movlw	-3
 26435  013C24  50E3               	movf	plusw1,w,c
 26436  013C26  5CDE               	subwf	postinc2,w,c
 26437  013C28  B0D8               	btfsc	status,0,c
 26438  013C2A  D0A4               	goto	l7564
 26439                           
 26440                           ;stkvar	_signs @ sp[(-4)+3]
 26441  013C2C  0EFF               	movlw	-1
 26442  013C2E  ACE3               	btfss	plusw1,6,c
 26443  013C30  D002               	goto	l7534
 26444                           
 26445                           ;stkvar	_signs @ sp[(-4)+3]
 26446  013C32  0EFF               	movlw	-1
 26447  013C34  7EE3               	btg	plusw1,7,c
 26448  013C36                     l7534:
 26449                           
 26450                           ;stkvar	_bexp @ sp[(-4)+1]
 26451                           ;stkvar	_grs @ sp[(-4)+0]
 26452  013C36  0EFD               	movlw	-3
 26453  013C38  006F FF8C  F001    	movff	plusw1,btemp
 26454  013C3E  0EFC               	movlw	-4
 26455  013C40  0060  F007  FFE3   	movff	btemp,plusw1
 26456                           
 26457                           ;stkvar	_aexp @ sp[(-4)+2]
 26458                           ;stkvar	_bexp @ sp[(-4)+1]
 26459  013C46  0EFE               	movlw	-2
 26460  013C48  006F FF8C  F001    	movff	plusw1,btemp
 26461  013C4E  0EFD               	movlw	-3
 26462  013C50  0060  F007  FFE3   	movff	btemp,plusw1
 26463                           
 26464                           ;stkvar	_grs @ sp[(-4)+0]
 26465                           ;stkvar	_aexp @ sp[(-4)+2]
 26466  013C56  0EFC               	movlw	-4
 26467  013C58  006F FF8C  F001    	movff	plusw1,btemp
 26468  013C5E  0EFE               	movlw	-2
 26469  013C60  0060  F007  FFE3   	movff	btemp,plusw1
 26470                           
 26471                           ;stkvar	_b @ sp[(-4)+-4]
 26472                           ;stkvar	_grs @ sp[(-4)+0]
 26473  013C66  0EF8               	movlw	-8
 26474  013C68  006F FF8C  F001    	movff	plusw1,btemp
 26475  013C6E  0EFC               	movlw	-4
 26476  013C70  0060  F007  FFE3   	movff	btemp,plusw1
 26477                           
 26478                           ;stkvar	_a @ sp[(-4)+-8]
 26479                           ;stkvar	_b @ sp[(-4)+-4]
 26480  013C76  0EF4               	movlw	-12
 26481  013C78  006F FF8C  F001    	movff	plusw1,btemp
 26482  013C7E  0EF8               	movlw	-8
 26483  013C80  0060  F007  FFE3   	movff	btemp,plusw1
 26484                           
 26485                           ;stkvar	_grs @ sp[(-4)+0]
 26486                           ;stkvar	_a @ sp[(-4)+-8]
 26487  013C86  0EFC               	movlw	-4
 26488  013C88  006F FF8C  F001    	movff	plusw1,btemp
 26489  013C8E  0EF4               	movlw	-12
 26490  013C90  0060  F007  FFE3   	movff	btemp,plusw1
 26491                           
 26492                           ;stkvar	_b @ sp[(-4)+-4]
 26493  013C96  0EF9               	movlw	249
 26494  013C98  24E1               	addwf	fsr1l,w,c
 26495  013C9A  6ED9               	movwf	fsr2l,c
 26496  013C9C  0EFF               	movlw	255
 26497  013C9E  20E2               	addwfc	fsr1h,w,c
 26498  013CA0  6EDA               	movwf	fsr2h,c
 26499  013CA2  50DF               	movf	indf2,w,c
 26500  013CA4  6E0C               	movwf	(btemp+11)^0,c
 26501                           
 26502                           ;stkvar	_grs @ sp[(-4)+0]
 26503  013CA6  0EFC               	movlw	-4
 26504  013CA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26505                           
 26506                           ;stkvar	_a @ sp[(-4)+-8]
 26507  013CAE  0EF5               	movlw	245
 26508  013CB0  24E1               	addwf	fsr1l,w,c
 26509  013CB2  6ED9               	movwf	fsr2l,c
 26510  013CB4  0EFF               	movlw	255
 26511  013CB6  20E2               	addwfc	fsr1h,w,c
 26512  013CB8  6EDA               	movwf	fsr2h,c
 26513                           
 26514                           ;stkvar	_b @ sp[(-4)+-4]
 26515  013CBA  0EF9               	movlw	249
 26516  013CBC  24E1               	addwf	fsr1l,w,c
 26517  013CBE  6EE9               	movwf	fsr0l,c
 26518  013CC0  0EFF               	movlw	255
 26519  013CC2  20E2               	addwfc	fsr1h,w,c
 26520  013CC4  6EEA               	movwf	fsr0h,c
 26521  013CC6  006F FF7F FFEF     	movff	indf2,indf0
 26522                           
 26523                           ;stkvar	_grs @ sp[(-4)+0]
 26524                           ;stkvar	_a @ sp[(-4)+-8]
 26525  013CCC  0EF5               	movlw	245
 26526  013CCE  24E1               	addwf	fsr1l,w,c
 26527  013CD0  6ED9               	movwf	fsr2l,c
 26528  013CD2  0EFF               	movlw	255
 26529  013CD4  20E2               	addwfc	fsr1h,w,c
 26530  013CD6  6EDA               	movwf	fsr2h,c
 26531  013CD8  0EFC               	movlw	-4
 26532  013CDA  006F FF8F FFDF     	movff	plusw1,indf2
 26533                           
 26534                           ;stkvar	_b @ sp[(-4)+-4]
 26535  013CE0  0EFA               	movlw	250
 26536  013CE2  24E1               	addwf	fsr1l,w,c
 26537  013CE4  6ED9               	movwf	fsr2l,c
 26538  013CE6  0EFF               	movlw	255
 26539  013CE8  20E2               	addwfc	fsr1h,w,c
 26540  013CEA  6EDA               	movwf	fsr2h,c
 26541  013CEC  50DF               	movf	indf2,w,c
 26542  013CEE  6E0C               	movwf	(btemp+11)^0,c
 26543                           
 26544                           ;stkvar	_grs @ sp[(-4)+0]
 26545  013CF0  0EFC               	movlw	-4
 26546  013CF2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26547                           
 26548                           ;stkvar	_a @ sp[(-4)+-8]
 26549  013CF8  0EF6               	movlw	246
 26550  013CFA  24E1               	addwf	fsr1l,w,c
 26551  013CFC  6ED9               	movwf	fsr2l,c
 26552  013CFE  0EFF               	movlw	255
 26553  013D00  20E2               	addwfc	fsr1h,w,c
 26554  013D02  6EDA               	movwf	fsr2h,c
 26555                           
 26556                           ;stkvar	_b @ sp[(-4)+-4]
 26557  013D04  0EFA               	movlw	250
 26558  013D06  24E1               	addwf	fsr1l,w,c
 26559  013D08  6EE9               	movwf	fsr0l,c
 26560  013D0A  0EFF               	movlw	255
 26561  013D0C  20E2               	addwfc	fsr1h,w,c
 26562  013D0E  6EEA               	movwf	fsr0h,c
 26563  013D10  006F FF7F FFEF     	movff	indf2,indf0
 26564                           
 26565                           ;stkvar	_grs @ sp[(-4)+0]
 26566                           ;stkvar	_a @ sp[(-4)+-8]
 26567  013D16  0EF6               	movlw	246
 26568  013D18  24E1               	addwf	fsr1l,w,c
 26569  013D1A  6ED9               	movwf	fsr2l,c
 26570  013D1C  0EFF               	movlw	255
 26571  013D1E  20E2               	addwfc	fsr1h,w,c
 26572  013D20  6EDA               	movwf	fsr2h,c
 26573  013D22  0EFC               	movlw	-4
 26574  013D24  006F FF8F FFDF     	movff	plusw1,indf2
 26575                           
 26576                           ;stkvar	_b @ sp[(-4)+-4]
 26577  013D2A  0EFB               	movlw	251
 26578  013D2C  24E1               	addwf	fsr1l,w,c
 26579  013D2E  6ED9               	movwf	fsr2l,c
 26580  013D30  0EFF               	movlw	255
 26581  013D32  20E2               	addwfc	fsr1h,w,c
 26582  013D34  6EDA               	movwf	fsr2h,c
 26583  013D36  50DF               	movf	indf2,w,c
 26584  013D38  6E0C               	movwf	(btemp+11)^0,c
 26585                           
 26586                           ;stkvar	_grs @ sp[(-4)+0]
 26587  013D3A  0EFC               	movlw	-4
 26588  013D3C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26589                           
 26590                           ;stkvar	_a @ sp[(-4)+-8]
 26591  013D42  0EF7               	movlw	247
 26592  013D44  24E1               	addwf	fsr1l,w,c
 26593  013D46  6ED9               	movwf	fsr2l,c
 26594  013D48  0EFF               	movlw	255
 26595  013D4A  20E2               	addwfc	fsr1h,w,c
 26596  013D4C  6EDA               	movwf	fsr2h,c
 26597                           
 26598                           ;stkvar	_b @ sp[(-4)+-4]
 26599  013D4E  0EFB               	movlw	251
 26600  013D50  24E1               	addwf	fsr1l,w,c
 26601  013D52  6EE9               	movwf	fsr0l,c
 26602  013D54  0EFF               	movlw	255
 26603  013D56  20E2               	addwfc	fsr1h,w,c
 26604  013D58  6EEA               	movwf	fsr0h,c
 26605  013D5A  006F FF7F FFEF     	movff	indf2,indf0
 26606                           
 26607                           ;stkvar	_grs @ sp[(-4)+0]
 26608                           ;stkvar	_a @ sp[(-4)+-8]
 26609  013D60  0EF7               	movlw	247
 26610  013D62  24E1               	addwf	fsr1l,w,c
 26611  013D64  6ED9               	movwf	fsr2l,c
 26612  013D66  0EFF               	movlw	255
 26613  013D68  20E2               	addwfc	fsr1h,w,c
 26614  013D6A  6EDA               	movwf	fsr2h,c
 26615  013D6C  0EFC               	movlw	-4
 26616  013D6E  006F FF8F FFDF     	movff	plusw1,indf2
 26617  013D74                     l7564:
 26618                           
 26619                           ;stkvar	_grs @ sp[(-4)+0]
 26620  013D74  0EFC               	movlw	-4
 26621  013D76  6AE3               	clrf	plusw1,c
 26622                           
 26623                           ;stkvar	_aexp @ sp[(-4)+2]
 26624  013D78  0EFE               	movlw	-2
 26625  013D7A  50E3               	movf	plusw1,w,c
 26626  013D7C  6E0B               	movwf	(btemp+10)^0,c
 26627  013D7E  6A0C               	clrf	(btemp+11)^0,c
 26628                           
 26629                           ;stkvar	_bexp @ sp[(-4)+1]
 26630  013D80  0EFD               	movlw	-3
 26631  013D82  50E3               	movf	plusw1,w,c
 26632  013D84  5E0B               	subwf	(btemp+10)^0,f,c
 26633  013D86  0E00               	movlw	0
 26634  013D88  5A0C               	subwfb	(btemp+11)^0,f,c
 26635  013D8A  BE0C               	btfsc	(btemp+11)^0,7,c
 26636  013D8C  D062               	goto	l7588
 26637  013D8E  500C               	movf	(btemp+11)^0,w,c
 26638  013D90  E104               	bnz	u5340
 26639  013D92  0E1A               	movlw	26
 26640  013D94  5C0B               	subwf	(btemp+10)^0,w,c
 26641  013D96  A0D8               	btfss	status,0,c
 26642  013D98  D05C               	goto	l7588
 26643  013D9A                     u5340:
 26644                           
 26645                           ;stkvar	_b @ sp[(-4)+-4]
 26646  013D9A  0EF8               	movlw	-8
 26647  013D9C  50E3               	movf	plusw1,w,c
 26648  013D9E  E10A               	bnz	u5351
 26649  013DA0  0EF9               	movlw	-7
 26650  013DA2  50E3               	movf	plusw1,w,c
 26651  013DA4  E107               	bnz	u5351
 26652  013DA6  0EFA               	movlw	-6
 26653  013DA8  50E3               	movf	plusw1,w,c
 26654  013DAA  E104               	bnz	u5351
 26655  013DAC  0EFB               	movlw	-5
 26656  013DAE  50E3               	movf	plusw1,w,c
 26657  013DB0  B4D8               	btfsc	status,2,c
 26658  013DB2  D003               	goto	u5350
 26659  013DB4                     u5351:
 26660  013DB4  6A0C               	clrf	(btemp+11)^0,c
 26661  013DB6  2A0C               	incf	(btemp+11)^0,f,c
 26662  013DB8  D001               	goto	u5368
 26663  013DBA                     u5350:
 26664  013DBA  6A0C               	clrf	(btemp+11)^0,c
 26665  013DBC                     u5368:
 26666                           
 26667                           ;stkvar	_grs @ sp[(-4)+0]
 26668  013DBC  0EFC               	movlw	-4
 26669  013DBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26670                           
 26671                           ;stkvar	_b @ sp[(-4)+-4]
 26672  013DC4  0EF8               	movlw	-8
 26673  013DC6  6AE3               	clrf	plusw1,c
 26674  013DC8  0EF9               	movlw	-7
 26675  013DCA  6AE3               	clrf	plusw1,c
 26676  013DCC  0EFA               	movlw	-6
 26677  013DCE  6AE3               	clrf	plusw1,c
 26678  013DD0  0EFB               	movlw	-5
 26679  013DD2  6AE3               	clrf	plusw1,c
 26680                           
 26681                           ;stkvar	_aexp @ sp[(-4)+2]
 26682                           ;stkvar	_bexp @ sp[(-4)+1]
 26683  013DD4  0EFE               	movlw	-2
 26684  013DD6  006F FF8C  F001    	movff	plusw1,btemp
 26685  013DDC  0EFD               	movlw	-3
 26686  013DDE  0060  F007  FFE3   	movff	btemp,plusw1
 26687  013DE4  D042               	goto	u5400
 26688  013DE6                     l7574:
 26689                           
 26690                           ;stkvar	_grs @ sp[(-4)+0]
 26691  013DE6  0EFC               	movlw	-4
 26692  013DE8  A0E3               	btfss	plusw1,0,c
 26693  013DEA  D00D               	goto	l7578
 26694                           
 26695                           ;stkvar	_grs @ sp[(-4)+0]
 26696  013DEC  0EFC               	movlw	-4
 26697  013DEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26698  013DF4  90D8               	bcf	status,0,c
 26699  013DF6  320C               	rrcf	(btemp+11)^0,f,c
 26700  013DF8  0E01               	movlw	1
 26701  013DFA  120C               	iorwf	(btemp+11)^0,f,c
 26702                           
 26703                           ;stkvar	_grs @ sp[(-4)+0]
 26704  013DFC  0EFC               	movlw	-4
 26705  013DFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26706  013E04  D009               	goto	l7580
 26707  013E06                     l7578:
 26708                           
 26709                           ;stkvar	_grs @ sp[(-4)+0]
 26710  013E06  50E1               	movf	fsr1l,w,c
 26711  013E08  0FFC               	addlw	-4
 26712  013E0A  6ED9               	movwf	fsr2l,c
 26713  013E0C  50E2               	movf	fsr1h,w,c
 26714  013E0E  6EDA               	movwf	fsr2h,c
 26715  013E10  0EFF               	movlw	255
 26716  013E12  22DA               	addwfc	fsr2h,f,c
 26717  013E14  90D8               	bcf	status,0,c
 26718  013E16  32DF               	rrcf	indf2,f,c
 26719  013E18                     l7580:
 26720                           
 26721                           ;stkvar	_b @ sp[(-4)+-4]
 26722  013E18  0EF8               	movlw	-8
 26723  013E1A  A0E3               	btfss	plusw1,0,c
 26724  013E1C  D002               	goto	l7584
 26725                           
 26726                           ;stkvar	_grs @ sp[(-4)+0]
 26727  013E1E  0EFC               	movlw	-4
 26728  013E20  8EE3               	bsf	plusw1,7,c
 26729  013E22                     l7584:
 26730  013E22  0E01               	movlw	1
 26731  013E24  6E0C               	movwf	(btemp+11)^0,c
 26732                           
 26733                           ;stkvar	_b @ sp[(-4)+-4]
 26734  013E26  50E1               	movf	fsr1l,w,c
 26735  013E28  0FF8               	addlw	-8
 26736  013E2A  6ED9               	movwf	fsr2l,c
 26737  013E2C  50E2               	movf	fsr1h,w,c
 26738  013E2E  6EDA               	movwf	fsr2h,c
 26739  013E30  0EFF               	movlw	255
 26740  013E32  22DA               	addwfc	fsr2h,f,c
 26741  013E34  280C               	incf	(btemp+11)^0,w,c
 26742  013E36  52DE               	movf	postinc2,f,c
 26743  013E38  D008               	goto	u5390
 26744  013E3A                     u5395:
 26745  013E3A  52DE               	movf	postinc2,f,c
 26746  013E3C  90D8               	bcf	status,0,c
 26747  013E3E  BEDC               	btfsc	preinc2,7,c
 26748  013E40  80D8               	bsf	status,0,c
 26749  013E42  32DD               	rrcf	postdec2,f,c
 26750  013E44  32DD               	rrcf	postdec2,f,c
 26751  013E46  32DD               	rrcf	postdec2,f,c
 26752  013E48  32DE               	rrcf	postinc2,f,c
 26753  013E4A                     u5390:
 26754  013E4A  2EE8               	decfsz	wreg,f,c
 26755  013E4C  D7F6               	goto	u5395
 26756                           
 26757                           ;stkvar	_bexp @ sp[(-4)+1]
 26758  013E4E  0EFD               	movlw	-3
 26759  013E50  2AE3               	incf	plusw1,f,c
 26760  013E52                     l7588:
 26761                           
 26762                           ;stkvar	_aexp @ sp[(-4)+2]
 26763                           ;stkvar	_bexp @ sp[(-4)+1]
 26764  013E52  50E1               	movf	fsr1l,w,c
 26765  013E54  0FFD               	addlw	-3
 26766  013E56  6ED9               	movwf	fsr2l,c
 26767  013E58  50E2               	movf	fsr1h,w,c
 26768  013E5A  6EDA               	movwf	fsr2h,c
 26769  013E5C  0EFF               	movlw	255
 26770  013E5E  22DA               	addwfc	fsr2h,f,c
 26771  013E60  0EFE               	movlw	-2
 26772  013E62  50E3               	movf	plusw1,w,c
 26773  013E64  5CDE               	subwf	postinc2,w,c
 26774  013E66  A0D8               	btfss	status,0,c
 26775  013E68  D7BE               	goto	l7574
 26776  013E6A                     u5400:
 26777                           
 26778                           ;stkvar	_signs @ sp[(-4)+3]
 26779  013E6A  0EFF               	movlw	-1
 26780  013E6C  BCE3               	btfsc	plusw1,6,c
 26781  013E6E  D066               	goto	l7616
 26782                           
 26783                           ;stkvar	_bexp @ sp[(-4)+1]
 26784  013E70  0EFD               	movlw	-3
 26785  013E72  50E3               	movf	plusw1,w,c
 26786  013E74  B4D8               	btfsc	status,2,c
 26787  013E76  D0F2               	goto	u5500
 26788                           
 26789                           ;stkvar	_a @ sp[(-4)+-8]
 26790                           ;stkvar	_b @ sp[(-4)+-4]
 26791  013E78  0EF8               	movlw	-8
 26792  013E7A  50E3               	movf	plusw1,w,c
 26793  013E7C  6E01               	movwf	btemp^0,c
 26794  013E7E  0EF4               	movlw	-12
 26795  013E80  50E3               	movf	plusw1,w,c
 26796  013E82  2601               	addwf	btemp^0,f,c
 26797  013E84  0EF8               	movlw	-8
 26798  013E86  0060  F007  FFE3   	movff	btemp,plusw1
 26799  013E8C  0EF9               	movlw	-7
 26800  013E8E  50E3               	movf	plusw1,w,c
 26801  013E90  6E01               	movwf	btemp^0,c
 26802  013E92  0EF5               	movlw	-11
 26803  013E94  50E3               	movf	plusw1,w,c
 26804  013E96  2201               	addwfc	btemp^0,f,c
 26805  013E98  0EF9               	movlw	-7
 26806  013E9A  0060  F007  FFE3   	movff	btemp,plusw1
 26807  013EA0  0EFA               	movlw	-6
 26808  013EA2  50E3               	movf	plusw1,w,c
 26809  013EA4  6E01               	movwf	btemp^0,c
 26810  013EA6  0EF6               	movlw	-10
 26811  013EA8  50E3               	movf	plusw1,w,c
 26812  013EAA  2201               	addwfc	btemp^0,f,c
 26813  013EAC  0EFA               	movlw	-6
 26814  013EAE  0060  F007  FFE3   	movff	btemp,plusw1
 26815  013EB4  0EFB               	movlw	-5
 26816  013EB6  50E3               	movf	plusw1,w,c
 26817  013EB8  6E01               	movwf	btemp^0,c
 26818  013EBA  0EF7               	movlw	-9
 26819  013EBC  50E3               	movf	plusw1,w,c
 26820  013EBE  2201               	addwfc	btemp^0,f,c
 26821  013EC0  0EFB               	movlw	-5
 26822  013EC2  0060  F007  FFE3   	movff	btemp,plusw1
 26823                           
 26824                           ;stkvar	_b @ sp[(-4)+-4]
 26825  013EC8  0EFB               	movlw	-5
 26826  013ECA  A0E3               	btfss	plusw1,0,c
 26827  013ECC  D101               	goto	u5540
 26828                           
 26829                           ;stkvar	_grs @ sp[(-4)+0]
 26830  013ECE  0EFC               	movlw	-4
 26831  013ED0  A0E3               	btfss	plusw1,0,c
 26832  013ED2  D00D               	goto	l7606
 26833                           
 26834                           ;stkvar	_grs @ sp[(-4)+0]
 26835  013ED4  0EFC               	movlw	-4
 26836  013ED6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26837  013EDC  90D8               	bcf	status,0,c
 26838  013EDE  320C               	rrcf	(btemp+11)^0,f,c
 26839  013EE0  0E01               	movlw	1
 26840  013EE2  120C               	iorwf	(btemp+11)^0,f,c
 26841                           
 26842                           ;stkvar	_grs @ sp[(-4)+0]
 26843  013EE4  0EFC               	movlw	-4
 26844  013EE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 26845  013EEC  D009               	goto	l7608
 26846  013EEE                     l7606:
 26847                           
 26848                           ;stkvar	_grs @ sp[(-4)+0]
 26849  013EEE  50E1               	movf	fsr1l,w,c
 26850  013EF0  0FFC               	addlw	-4
 26851  013EF2  6ED9               	movwf	fsr2l,c
 26852  013EF4  50E2               	movf	fsr1h,w,c
 26853  013EF6  6EDA               	movwf	fsr2h,c
 26854  013EF8  0EFF               	movlw	255
 26855  013EFA  22DA               	addwfc	fsr2h,f,c
 26856  013EFC  90D8               	bcf	status,0,c
 26857  013EFE  32DF               	rrcf	indf2,f,c
 26858  013F00                     l7608:
 26859                           
 26860                           ;stkvar	_b @ sp[(-4)+-4]
 26861  013F00  0EF8               	movlw	-8
 26862  013F02  A0E3               	btfss	plusw1,0,c
 26863  013F04  D002               	goto	l7612
 26864                           
 26865                           ;stkvar	_grs @ sp[(-4)+0]
 26866  013F06  0EFC               	movlw	-4
 26867  013F08  8EE3               	bsf	plusw1,7,c
 26868  013F0A                     l7612:
 26869  013F0A  0E01               	movlw	1
 26870  013F0C  6E0C               	movwf	(btemp+11)^0,c
 26871                           
 26872                           ;stkvar	_b @ sp[(-4)+-4]
 26873  013F0E  50E1               	movf	fsr1l,w,c
 26874  013F10  0FF8               	addlw	-8
 26875  013F12  6ED9               	movwf	fsr2l,c
 26876  013F14  50E2               	movf	fsr1h,w,c
 26877  013F16  6EDA               	movwf	fsr2h,c
 26878  013F18  0EFF               	movlw	255
 26879  013F1A  22DA               	addwfc	fsr2h,f,c
 26880  013F1C  280C               	incf	(btemp+11)^0,w,c
 26881  013F1E  52DE               	movf	postinc2,f,c
 26882  013F20  D008               	goto	u5460
 26883  013F22                     u5465:
 26884  013F22  52DE               	movf	postinc2,f,c
 26885  013F24  90D8               	bcf	status,0,c
 26886  013F26  BEDC               	btfsc	preinc2,7,c
 26887  013F28  80D8               	bsf	status,0,c
 26888  013F2A  32DD               	rrcf	postdec2,f,c
 26889  013F2C  32DD               	rrcf	postdec2,f,c
 26890  013F2E  32DD               	rrcf	postdec2,f,c
 26891  013F30  32DE               	rrcf	postinc2,f,c
 26892  013F32                     u5460:
 26893  013F32  2EE8               	decfsz	wreg,f,c
 26894  013F34  D7F6               	goto	u5465
 26895                           
 26896                           ;stkvar	_bexp @ sp[(-4)+1]
 26897  013F36  0EFD               	movlw	-3
 26898  013F38  2AE3               	incf	plusw1,f,c
 26899  013F3A  D0CA               	goto	u5540
 26900  013F3C                     l7616:
 26901                           
 26902                           ;stkvar	_a @ sp[(-4)+-8]
 26903                           ;stkvar	_b @ sp[(-4)+-4]
 26904  013F3C  50E1               	movf	fsr1l,w,c
 26905  013F3E  0FF8               	addlw	-8
 26906  013F40  6ED9               	movwf	fsr2l,c
 26907  013F42  50E2               	movf	fsr1h,w,c
 26908  013F44  6EDA               	movwf	fsr2h,c
 26909  013F46  0EFF               	movlw	255
 26910  013F48  22DA               	addwfc	fsr2h,f,c
 26911  013F4A  0EF4               	movlw	-12
 26912  013F4C  50E3               	movf	plusw1,w,c
 26913  013F4E  5CDE               	subwf	postinc2,w,c
 26914  013F50  0EF5               	movlw	-11
 26915  013F52  50E3               	movf	plusw1,w,c
 26916  013F54  58DE               	subwfb	postinc2,w,c
 26917  013F56  0EF6               	movlw	-10
 26918  013F58  50E3               	movf	plusw1,w,c
 26919  013F5A  58DE               	subwfb	postinc2,w,c
 26920  013F5C  50DE               	movf	postinc2,w,c
 26921  013F5E  0A80               	xorlw	128
 26922  013F60  6E01               	movwf	btemp^0,c
 26923  013F62  0EF7               	movlw	-9
 26924  013F64  50E3               	movf	plusw1,w,c
 26925  013F66  0A80               	xorlw	128
 26926  013F68  5801               	subwfb	btemp^0,w,c
 26927  013F6A  B0D8               	btfsc	status,0,c
 26928  013F6C  D053               	goto	l7628
 26929                           
 26930                           ;stkvar	_b @ sp[(-4)+-4]
 26931                           ;stkvar	_a @ sp[(-4)+-8]
 26932  013F6E  0EF4               	movlw	-12
 26933  013F70  006F FF8C  F009    	movff	plusw1,btemp+8
 26934  013F76  0EF5               	movlw	-11
 26935  013F78  006F FF8C  F00A    	movff	plusw1,btemp+9
 26936  013F7E  0EF6               	movlw	-10
 26937  013F80  006F FF8C  F00B    	movff	plusw1,btemp+10
 26938  013F86  0EF7               	movlw	-9
 26939  013F88  006F FF8C  F00C    	movff	plusw1,btemp+11
 26940  013F8E  0EF8               	movlw	-8
 26941  013F90  50E3               	movf	plusw1,w,c
 26942  013F92  5E09               	subwf	(btemp+8)^0,f,c
 26943  013F94  0EF9               	movlw	-7
 26944  013F96  50E3               	movf	plusw1,w,c
 26945  013F98  5A0A               	subwfb	(btemp+9)^0,f,c
 26946  013F9A  0EFA               	movlw	-6
 26947  013F9C  50E3               	movf	plusw1,w,c
 26948  013F9E  5A0B               	subwfb	(btemp+10)^0,f,c
 26949  013FA0  0EFB               	movlw	-5
 26950  013FA2  50E3               	movf	plusw1,w,c
 26951  013FA4  5A0C               	subwfb	(btemp+11)^0,f,c
 26952  013FA6  0EFF               	movlw	255
 26953  013FA8  2409               	addwf	(btemp+8)^0,w,c
 26954  013FAA  6E05               	movwf	(btemp+4)^0,c
 26955  013FAC  0EFF               	movlw	255
 26956  013FAE  200A               	addwfc	(btemp+9)^0,w,c
 26957  013FB0  6E06               	movwf	(btemp+5)^0,c
 26958  013FB2  0EFF               	movlw	255
 26959  013FB4  200B               	addwfc	(btemp+10)^0,w,c
 26960  013FB6  6E07               	movwf	(btemp+6)^0,c
 26961  013FB8  0EFF               	movlw	255
 26962  013FBA  200C               	addwfc	(btemp+11)^0,w,c
 26963  013FBC  6E08               	movwf	(btemp+7)^0,c
 26964                           
 26965                           ;stkvar	_b @ sp[(-4)+-4]
 26966  013FBE  0EF8               	movlw	-8
 26967  013FC0  0060  F017  FFE3   	movff	btemp+4,plusw1
 26968  013FC6  0EF9               	movlw	-7
 26969  013FC8  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26970  013FCE  0EFA               	movlw	-6
 26971  013FD0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26972  013FD6  0EFB               	movlw	-5
 26973  013FD8  0060  F023  FFE3   	movff	btemp+7,plusw1
 26974                           
 26975                           ;stkvar	_signs @ sp[(-4)+3]
 26976  013FDE  0EFF               	movlw	-1
 26977  013FE0  7EE3               	btg	plusw1,7,c
 26978                           
 26979                           ;stkvar	_grs @ sp[(-4)+0]
 26980  013FE2  0EFC               	movlw	-4
 26981  013FE4  50E3               	movf	plusw1,w,c
 26982  013FE6  0800               	sublw	0
 26983  013FE8  6E0C               	movwf	(btemp+11)^0,c
 26984                           
 26985                           ;stkvar	_grs @ sp[(-4)+0]
 26986  013FEA  0EFC               	movlw	-4
 26987  013FEC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26988                           
 26989                           ;stkvar	_grs @ sp[(-4)+0]
 26990  013FF2  0EFC               	movlw	-4
 26991  013FF4  50E3               	movf	plusw1,w,c
 26992  013FF6  A4D8               	btfss	status,2,c
 26993  013FF8  D020               	goto	l7630
 26994                           
 26995                           ;stkvar	_b @ sp[(-4)+-4]
 26996  013FFA  50E1               	movf	fsr1l,w,c
 26997  013FFC  0FF8               	addlw	-8
 26998  013FFE  6ED9               	movwf	fsr2l,c
 26999  014000  50E2               	movf	fsr1h,w,c
 27000  014002  6EDA               	movwf	fsr2h,c
 27001  014004  0EFF               	movlw	255
 27002  014006  22DA               	addwfc	fsr2h,f,c
 27003  014008  2ADE               	incf	postinc2,f,c
 27004  01400A  0E00               	movlw	0
 27005  01400C  22DE               	addwfc	postinc2,f,c
 27006  01400E  22DE               	addwfc	postinc2,f,c
 27007  014010  22DE               	addwfc	postinc2,f,c
 27008  014012  D013               	goto	l7630
 27009  014014                     l7628:
 27010                           
 27011                           ;stkvar	_a @ sp[(-4)+-8]
 27012                           ;stkvar	_b @ sp[(-4)+-4]
 27013  014014  50E1               	movf	fsr1l,w,c
 27014  014016  0FF8               	addlw	-8
 27015  014018  6ED9               	movwf	fsr2l,c
 27016  01401A  50E2               	movf	fsr1h,w,c
 27017  01401C  6EDA               	movwf	fsr2h,c
 27018  01401E  0EFF               	movlw	255
 27019  014020  22DA               	addwfc	fsr2h,f,c
 27020  014022  0EF4               	movlw	-12
 27021  014024  50E3               	movf	plusw1,w,c
 27022  014026  5EDE               	subwf	postinc2,f,c
 27023  014028  0EF5               	movlw	-11
 27024  01402A  50E3               	movf	plusw1,w,c
 27025  01402C  5ADE               	subwfb	postinc2,f,c
 27026  01402E  0EF6               	movlw	-10
 27027  014030  50E3               	movf	plusw1,w,c
 27028  014032  5ADE               	subwfb	postinc2,f,c
 27029  014034  0EF7               	movlw	-9
 27030  014036  50E3               	movf	plusw1,w,c
 27031  014038  5ADE               	subwfb	postinc2,f,c
 27032  01403A                     l7630:
 27033                           
 27034                           ;stkvar	_b @ sp[(-4)+-4]
 27035  01403A  0EF8               	movlw	-8
 27036  01403C  50E3               	movf	plusw1,w,c
 27037  01403E  E145               	bnz	l7652
 27038  014040  0EF9               	movlw	-7
 27039  014042  50E3               	movf	plusw1,w,c
 27040  014044  E142               	bnz	l7652
 27041  014046  0EFA               	movlw	-6
 27042  014048  50E3               	movf	plusw1,w,c
 27043  01404A  E13F               	bnz	l7652
 27044  01404C  0EFB               	movlw	-5
 27045  01404E  50E3               	movf	plusw1,w,c
 27046  014050  A4D8               	btfss	status,2,c
 27047  014052  D03B               	goto	l7652
 27048                           
 27049                           ;stkvar	_grs @ sp[(-4)+0]
 27050  014054  0EFC               	movlw	-4
 27051  014056  50E3               	movf	plusw1,w,c
 27052  014058  A4D8               	btfss	status,2,c
 27053  01405A  D037               	goto	l7652
 27054  01405C                     u5500:
 27055  01405C  0E00               	movlw	0
 27056  01405E  6E01               	movwf	btemp^0,c
 27057  014060  0E00               	movlw	0
 27058  014062  6E02               	movwf	(btemp+1)^0,c
 27059  014064  0E00               	movlw	0
 27060  014066  6E03               	movwf	(btemp+2)^0,c
 27061  014068  0E00               	movlw	0
 27062  01406A  6E04               	movwf	(btemp+3)^0,c
 27063  01406C  D0C6               	goto	l2894
 27064  01406E                     l7638:
 27065                           
 27066                           ;stkvar	_b @ sp[(-4)+-4]
 27067  01406E  90D8               	bcf	status,0,c
 27068  014070  0EF8               	movlw	-8
 27069  014072  36E3               	rlcf	plusw1,f,c
 27070  014074  0EF9               	movlw	-7
 27071  014076  36E3               	rlcf	plusw1,f,c
 27072  014078  0EFA               	movlw	-6
 27073  01407A  36E3               	rlcf	plusw1,f,c
 27074  01407C  0EFB               	movlw	-5
 27075  01407E  36E3               	rlcf	plusw1,f,c
 27076                           
 27077                           ;stkvar	_grs @ sp[(-4)+0]
 27078  014080  0EFC               	movlw	-4
 27079  014082  AEE3               	btfss	plusw1,7,c
 27080  014084  D002               	goto	l2906
 27081                           
 27082                           ;stkvar	_b @ sp[(-4)+-4]
 27083  014086  0EF8               	movlw	-8
 27084  014088  80E3               	bsf	plusw1,0,c
 27085  01408A                     l2906:
 27086                           
 27087                           ;stkvar	_grs @ sp[(-4)+0]
 27088  01408A  0EFC               	movlw	-4
 27089  01408C  A0E3               	btfss	plusw1,0,c
 27090  01408E  D00E               	goto	l7646
 27091                           
 27092                           ;stkvar	_grs @ sp[(-4)+0]
 27093  014090  0EFC               	movlw	-4
 27094  014092  006F FF8C  F00C    	movff	plusw1,btemp+11
 27095  014098  90D8               	bcf	status,0,c
 27096  01409A  340C               	rlcf	(btemp+11)^0,w,c
 27097  01409C  6E0B               	movwf	(btemp+10)^0,c
 27098  01409E  0E01               	movlw	1
 27099  0140A0  120B               	iorwf	(btemp+10)^0,f,c
 27100                           
 27101                           ;stkvar	_grs @ sp[(-4)+0]
 27102  0140A2  0EFC               	movlw	-4
 27103  0140A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27104  0140AA  D009               	goto	l7648
 27105  0140AC                     l7646:
 27106                           
 27107                           ;stkvar	_grs @ sp[(-4)+0]
 27108  0140AC  50E1               	movf	fsr1l,w,c
 27109  0140AE  0FFC               	addlw	-4
 27110  0140B0  6ED9               	movwf	fsr2l,c
 27111  0140B2  50E2               	movf	fsr1h,w,c
 27112  0140B4  6EDA               	movwf	fsr2h,c
 27113  0140B6  0EFF               	movlw	255
 27114  0140B8  22DA               	addwfc	fsr2h,f,c
 27115  0140BA  90D8               	bcf	status,0,c
 27116  0140BC  36DF               	rlcf	indf2,f,c
 27117  0140BE                     l7648:
 27118                           
 27119                           ;stkvar	_bexp @ sp[(-4)+1]
 27120  0140BE  0EFD               	movlw	-3
 27121  0140C0  50E3               	movf	plusw1,w,c
 27122  0140C2  B4D8               	btfsc	status,2,c
 27123  0140C4  D002               	goto	l7652
 27124                           
 27125                           ;stkvar	_bexp @ sp[(-4)+1]
 27126  0140C6  0EFD               	movlw	-3
 27127  0140C8  06E3               	decf	plusw1,f,c
 27128  0140CA                     l7652:
 27129                           
 27130                           ;stkvar	_b @ sp[(-4)+-4]
 27131  0140CA  0EFA               	movlw	-6
 27132  0140CC  AEE3               	btfss	plusw1,7,c
 27133  0140CE  D7CF               	goto	l7638
 27134  0140D0                     u5540:
 27135                           
 27136                           ;stkvar	_aexp @ sp[(-4)+2]
 27137  0140D0  0EFE               	movlw	-2
 27138  0140D2  6AE3               	clrf	plusw1,c
 27139                           
 27140                           ;stkvar	_grs @ sp[(-4)+0]
 27141  0140D4  0EFC               	movlw	-4
 27142  0140D6  AEE3               	btfss	plusw1,7,c
 27143  0140D8  D00F               	goto	l7666
 27144                           
 27145                           ;stkvar	_grs @ sp[(-4)+0]
 27146  0140DA  0EFC               	movlw	-4
 27147  0140DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 27148  0140E2  0E7F               	movlw	127
 27149  0140E4  160C               	andwf	(btemp+11)^0,f,c
 27150  0140E6  B4D8               	btfsc	status,2,c
 27151  0140E8  D004               	goto	l7662
 27152  0140EA                     u5560:
 27153                           
 27154                           ;stkvar	_aexp @ sp[(-4)+2]
 27155  0140EA  0EFE               	movlw	-2
 27156  0140EC  6AE3               	clrf	plusw1,c
 27157  0140EE  2AE3               	incf	plusw1,f,c
 27158  0140F0  D003               	goto	l7666
 27159  0140F2                     l7662:
 27160                           
 27161                           ;stkvar	_b @ sp[(-4)+-4]
 27162  0140F2  0EF8               	movlw	-8
 27163  0140F4  B0E3               	btfsc	plusw1,0,c
 27164  0140F6  D7F9               	goto	u5560
 27165  0140F8                     l7666:
 27166                           
 27167                           ;stkvar	_aexp @ sp[(-4)+2]
 27168  0140F8  0EFE               	movlw	-2
 27169  0140FA  50E3               	movf	plusw1,w,c
 27170  0140FC  B4D8               	btfsc	status,2,c
 27171  0140FE  D02B               	goto	l7678
 27172                           
 27173                           ;stkvar	_b @ sp[(-4)+-4]
 27174  014100  50E1               	movf	fsr1l,w,c
 27175  014102  0FF8               	addlw	-8
 27176  014104  6ED9               	movwf	fsr2l,c
 27177  014106  50E2               	movf	fsr1h,w,c
 27178  014108  6EDA               	movwf	fsr2h,c
 27179  01410A  0EFF               	movlw	255
 27180  01410C  22DA               	addwfc	fsr2h,f,c
 27181  01410E  2ADE               	incf	postinc2,f,c
 27182  014110  0E00               	movlw	0
 27183  014112  22DE               	addwfc	postinc2,f,c
 27184  014114  22DE               	addwfc	postinc2,f,c
 27185  014116  22DE               	addwfc	postinc2,f,c
 27186                           
 27187                           ;stkvar	_b @ sp[(-4)+-4]
 27188  014118  0EFB               	movlw	-5
 27189  01411A  A0E3               	btfss	plusw1,0,c
 27190  01411C  D01C               	goto	l7678
 27191  01411E  0E01               	movlw	1
 27192  014120  6E0C               	movwf	(btemp+11)^0,c
 27193                           
 27194                           ;stkvar	_b @ sp[(-4)+-4]
 27195  014122  50E1               	movf	fsr1l,w,c
 27196  014124  0FF8               	addlw	-8
 27197  014126  6ED9               	movwf	fsr2l,c
 27198  014128  50E2               	movf	fsr1h,w,c
 27199  01412A  6EDA               	movwf	fsr2h,c
 27200  01412C  0EFF               	movlw	255
 27201  01412E  22DA               	addwfc	fsr2h,f,c
 27202  014130  280C               	incf	(btemp+11)^0,w,c
 27203  014132  52DE               	movf	postinc2,f,c
 27204  014134  D008               	goto	u5600
 27205  014136                     u5605:
 27206  014136  52DE               	movf	postinc2,f,c
 27207  014138  90D8               	bcf	status,0,c
 27208  01413A  BEDC               	btfsc	preinc2,7,c
 27209  01413C  80D8               	bsf	status,0,c
 27210  01413E  32DD               	rrcf	postdec2,f,c
 27211  014140  32DD               	rrcf	postdec2,f,c
 27212  014142  32DD               	rrcf	postdec2,f,c
 27213  014144  32DE               	rrcf	postinc2,f,c
 27214  014146                     u5600:
 27215  014146  2EE8               	decfsz	wreg,f,c
 27216  014148  D7F6               	goto	u5605
 27217                           
 27218                           ;stkvar	_bexp @ sp[(-4)+1]
 27219  01414A  0EFD               	movlw	-3
 27220  01414C  28E3               	incf	plusw1,w,c
 27221  01414E  B4D8               	btfsc	status,2,c
 27222  014150  D002               	goto	l7678
 27223                           
 27224                           ;stkvar	_bexp @ sp[(-4)+1]
 27225  014152  0EFD               	movlw	-3
 27226  014154  2AE3               	incf	plusw1,f,c
 27227  014156                     l7678:
 27228                           
 27229                           ;stkvar	_bexp @ sp[(-4)+1]
 27230  014156  0EFD               	movlw	-3
 27231  014158  28E3               	incf	plusw1,w,c
 27232  01415A  B4D8               	btfsc	status,2,c
 27233  01415C  D004               	goto	u5630
 27234                           
 27235                           ;stkvar	_bexp @ sp[(-4)+1]
 27236  01415E  0EFD               	movlw	-3
 27237  014160  50E3               	movf	plusw1,w,c
 27238  014162  A4D8               	btfss	status,2,c
 27239  014164  D00E               	goto	l7688
 27240  014166                     u5630:
 27241                           
 27242                           ;stkvar	_b @ sp[(-4)+-4]
 27243  014166  0EF8               	movlw	-8
 27244  014168  6AE3               	clrf	plusw1,c
 27245  01416A  0EF9               	movlw	-7
 27246  01416C  6AE3               	clrf	plusw1,c
 27247  01416E  0EFA               	movlw	-6
 27248  014170  6AE3               	clrf	plusw1,c
 27249  014172  0EFB               	movlw	-5
 27250  014174  6AE3               	clrf	plusw1,c
 27251                           
 27252                           ;stkvar	_bexp @ sp[(-4)+1]
 27253  014176  0EFD               	movlw	-3
 27254  014178  50E3               	movf	plusw1,w,c
 27255  01417A  A4D8               	btfss	status,2,c
 27256  01417C  D002               	goto	l7688
 27257                           
 27258                           ;stkvar	_signs @ sp[(-4)+3]
 27259  01417E  0EFF               	movlw	-1
 27260  014180  6AE3               	clrf	plusw1,c
 27261  014182                     l7688:
 27262                           
 27263                           ;stkvar	_bexp @ sp[(-4)+1]
 27264  014182  0EFD               	movlw	-3
 27265  014184  A0E3               	btfss	plusw1,0,c
 27266  014186  D009               	goto	l7692
 27267                           
 27268                           ;stkvar	_b @ sp[(-4)+-4]
 27269  014188  0EFA               	movlw	250
 27270  01418A  24E1               	addwf	fsr1l,w,c
 27271  01418C  6ED9               	movwf	fsr2l,c
 27272  01418E  0EFF               	movlw	255
 27273  014190  20E2               	addwfc	fsr1h,w,c
 27274  014192  6EDA               	movwf	fsr2h,c
 27275  014194  0E00               	movlw	0
 27276  014196  8EDB               	bsf	plusw2,7,c
 27277  014198  D008               	goto	l7694
 27278  01419A                     l7692:
 27279                           
 27280                           ;stkvar	_b @ sp[(-4)+-4]
 27281  01419A  0EFA               	movlw	250
 27282  01419C  24E1               	addwf	fsr1l,w,c
 27283  01419E  6ED9               	movwf	fsr2l,c
 27284  0141A0  0EFF               	movlw	255
 27285  0141A2  20E2               	addwfc	fsr1h,w,c
 27286  0141A4  6EDA               	movwf	fsr2h,c
 27287  0141A6  0E7F               	movlw	127
 27288  0141A8  16DF               	andwf	indf2,f,c
 27289  0141AA                     l7694:
 27290                           
 27291                           ;stkvar	_b @ sp[(-4)+-4]
 27292  0141AA  0EFB               	movlw	251
 27293  0141AC  24E1               	addwf	fsr1l,w,c
 27294  0141AE  6ED9               	movwf	fsr2l,c
 27295  0141B0  0EFF               	movlw	255
 27296  0141B2  20E2               	addwfc	fsr1h,w,c
 27297  0141B4  6EDA               	movwf	fsr2h,c
 27298                           
 27299                           ;stkvar	_bexp @ sp[(-4)+1]
 27300  0141B6  0EFD               	movlw	-3
 27301  0141B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27302  0141BE  90D8               	bcf	status,0,c
 27303  0141C0  300C               	rrcf	(btemp+11)^0,w,c
 27304  0141C2  6EDF               	movwf	indf2,c
 27305                           
 27306                           ;stkvar	_signs @ sp[(-4)+3]
 27307  0141C4  0EFF               	movlw	-1
 27308  0141C6  AEE3               	btfss	plusw1,7,c
 27309  0141C8  D008               	goto	l7700
 27310                           
 27311                           ;stkvar	_b @ sp[(-4)+-4]
 27312  0141CA  0EFB               	movlw	251
 27313  0141CC  24E1               	addwf	fsr1l,w,c
 27314  0141CE  6ED9               	movwf	fsr2l,c
 27315  0141D0  0EFF               	movlw	255
 27316  0141D2  20E2               	addwfc	fsr1h,w,c
 27317  0141D4  6EDA               	movwf	fsr2h,c
 27318  0141D6  0E00               	movlw	0
 27319  0141D8  8EDB               	bsf	plusw2,7,c
 27320  0141DA                     l7700:
 27321                           
 27322                           ;stkvar	_b @ sp[(-4)+-4]
 27323  0141DA  0EF8               	movlw	-8
 27324  0141DC  006F FF8C  F001    	movff	plusw1,btemp
 27325  0141E2  0EF9               	movlw	-7
 27326  0141E4  006F FF8C  F002    	movff	plusw1,btemp+1
 27327  0141EA  0EFA               	movlw	-6
 27328  0141EC  006F FF8C  F003    	movff	plusw1,btemp+2
 27329  0141F2  0EFB               	movlw	-5
 27330  0141F4  006F FF8C  F004    	movff	plusw1,btemp+3
 27331  0141FA                     l2894:
 27332                           
 27333                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27334  0141FA  0EF4               	movlw	244
 27335  0141FC  26E1               	addwf	fsr1l,f,c
 27336  0141FE  0EFF               	movlw	255
 27337  014200  22E2               	addwfc	fsr1h,f,c
 27338  014202  0012               	return		;funcret
 27339  014204                     __end_of___fladd:
 27340                           	opt callstack 0
 27341                           
 27342 ;; *************** function ___flmul *****************
 27343 ;; Defined at:
 27344 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27345 ;; Parameters:    Size  Location     Type
 27346 ;;  b               4  [STACK] unsigned char 
 27347 ;;  a               4  [STACK] unsigned char 
 27348 ;; Auto vars:     Size  Location     Type
 27349 ;;  prod            4  [STACK] struct .
 27350 ;;  grs             4  [STACK] unsigned long 
 27351 ;;  temp            2  [STACK] struct .
 27352 ;;  bexp            1  [STACK] unsigned char 
 27353 ;;  aexp            1  [STACK] unsigned char 
 27354 ;;  sign            1  [STACK] unsigned char 
 27355 ;; Return value:  Size  Location     Type
 27356 ;;                  4  [STACK] unsigned char 
 27357 ;; Registers used:
 27358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27359 ;; Tracked objects:
 27360 ;;		On entry : 0/1
 27361 ;;		On exit  : 0/0
 27362 ;;		Unchanged: 0/0
 27363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27368 ;;Total ram usage:        0 bytes
 27369 ;; Hardware stack levels used:    1
 27370 ;; Hardware stack levels required when called:   15
 27371 ;; This function calls:
 27372 ;;		Nothing
 27373 ;; This function is called by:
 27374 ;;		_conv_raw_result
 27375 ;;		_lp_filter
 27376 ;;		_calc_model_data
 27377 ;;		_calc_bsoc
 27378 ;;		_init_bsoc
 27379 ;;		_efgtoa
 27380 ;; This function uses a reentrant model
 27381 ;;
 27382                           
 27383                           	psect	text106
 27384  01321E                     __ptext106:
 27385                           	opt callstack 0
 27386  01321E                     ___flmul:
 27387                           	opt callstack 0
 27388                           
 27389                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27390  01321E  0E0D               	movlw	13
 27391  013220  26E1               	addwf	fsr1l,f,c
 27392  013222  0E00               	movlw	0
 27393  013224  22E2               	addwfc	fsr1h,f,c
 27394                           
 27395                           ;stkvar	_b @ sp[(-13)+-4]
 27396                           
 27397                           ;incstack = 0
 27398 ;; hardware stack exceeded
 27399  013226  0EF2               	movlw	242
 27400  013228  24E1               	addwf	fsr1l,w,c
 27401  01322A  6ED9               	movwf	fsr2l,c
 27402  01322C  0EFF               	movlw	255
 27403  01322E  20E2               	addwfc	fsr1h,w,c
 27404  013230  6EDA               	movwf	fsr2h,c
 27405  013232  50DF               	movf	indf2,w,c
 27406  013234  6E0C               	movwf	(btemp+11)^0,c
 27407  013236  0E80               	movlw	128
 27408  013238  160C               	andwf	(btemp+11)^0,f,c
 27409                           
 27410                           ;stkvar	_sign @ sp[(-13)+12]
 27411  01323A  0EFF               	movlw	-1
 27412  01323C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27413                           
 27414                           ;stkvar	_b @ sp[(-13)+-4]
 27415  013242  0EF2               	movlw	242
 27416  013244  24E1               	addwf	fsr1l,w,c
 27417  013246  6ED9               	movwf	fsr2l,c
 27418  013248  0EFF               	movlw	255
 27419  01324A  20E2               	addwfc	fsr1h,w,c
 27420  01324C  6EDA               	movwf	fsr2h,c
 27421  01324E  50DF               	movf	indf2,w,c
 27422  013250  6E0C               	movwf	(btemp+11)^0,c
 27423  013252  90D8               	bcf	status,0,c
 27424  013254  340C               	rlcf	(btemp+11)^0,w,c
 27425  013256  6E0B               	movwf	(btemp+10)^0,c
 27426                           
 27427                           ;stkvar	_bexp @ sp[(-13)+10]
 27428  013258  0EFD               	movlw	-3
 27429  01325A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27430                           
 27431                           ;stkvar	_b @ sp[(-13)+-4]
 27432  013260  0EF1               	movlw	241
 27433  013262  24E1               	addwf	fsr1l,w,c
 27434  013264  6ED9               	movwf	fsr2l,c
 27435  013266  0EFF               	movlw	255
 27436  013268  20E2               	addwfc	fsr1h,w,c
 27437  01326A  6EDA               	movwf	fsr2h,c
 27438  01326C  AEDF               	btfss	indf2,7,c
 27439  01326E  D002               	goto	l8084
 27440                           
 27441                           ;stkvar	_bexp @ sp[(-13)+10]
 27442  013270  0EFD               	movlw	-3
 27443  013272  80E3               	bsf	plusw1,0,c
 27444  013274                     l8084:
 27445                           
 27446                           ;stkvar	_bexp @ sp[(-13)+10]
 27447  013274  0EFD               	movlw	-3
 27448  013276  50E3               	movf	plusw1,w,c
 27449  013278  B4D8               	btfsc	status,2,c
 27450  01327A  D01F               	goto	l8092
 27451                           
 27452                           ;stkvar	_bexp @ sp[(-13)+10]
 27453  01327C  0EFD               	movlw	-3
 27454  01327E  28E3               	incf	plusw1,w,c
 27455  013280  A4D8               	btfss	status,2,c
 27456  013282  D018               	goto	l8090
 27457  013284  0E00               	movlw	0
 27458  013286  6E09               	movwf	(btemp+8)^0,c
 27459  013288  0E00               	movlw	0
 27460  01328A  6E0A               	movwf	(btemp+9)^0,c
 27461  01328C  0E00               	movlw	0
 27462  01328E  6E0B               	movwf	(btemp+10)^0,c
 27463  013290  0E00               	movlw	0
 27464  013292  6E0C               	movwf	(btemp+11)^0,c
 27465                           
 27466                           ;stkvar	_b @ sp[(-13)+-4]
 27467  013294  0EEF               	movlw	-17
 27468  013296  0060  F027  FFE3   	movff	btemp+8,plusw1
 27469  01329C  0EF0               	movlw	-16
 27470  01329E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27471  0132A4  0EF1               	movlw	-15
 27472  0132A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27473  0132AC  0EF2               	movlw	-14
 27474  0132AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27475  0132B4                     l8090:
 27476                           
 27477                           ;stkvar	_b @ sp[(-13)+-4]
 27478  0132B4  0EF1               	movlw	-15
 27479  0132B6  8EE3               	bsf	plusw1,7,c
 27480  0132B8  D018               	goto	l8094
 27481  0132BA                     l8092:
 27482  0132BA  0E00               	movlw	0
 27483  0132BC  6E09               	movwf	(btemp+8)^0,c
 27484  0132BE  0E00               	movlw	0
 27485  0132C0  6E0A               	movwf	(btemp+9)^0,c
 27486  0132C2  0E00               	movlw	0
 27487  0132C4  6E0B               	movwf	(btemp+10)^0,c
 27488  0132C6  0E00               	movlw	0
 27489  0132C8  6E0C               	movwf	(btemp+11)^0,c
 27490                           
 27491                           ;stkvar	_b @ sp[(-13)+-4]
 27492  0132CA  0EEF               	movlw	-17
 27493  0132CC  0060  F027  FFE3   	movff	btemp+8,plusw1
 27494  0132D2  0EF0               	movlw	-16
 27495  0132D4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27496  0132DA  0EF1               	movlw	-15
 27497  0132DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27498  0132E2  0EF2               	movlw	-14
 27499  0132E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 27500  0132EA                     l8094:
 27501                           
 27502                           ;stkvar	_a @ sp[(-13)+-8]
 27503  0132EA  0EEE               	movlw	238
 27504  0132EC  24E1               	addwf	fsr1l,w,c
 27505  0132EE  6ED9               	movwf	fsr2l,c
 27506  0132F0  0EFF               	movlw	255
 27507  0132F2  20E2               	addwfc	fsr1h,w,c
 27508  0132F4  6EDA               	movwf	fsr2h,c
 27509  0132F6  50DF               	movf	indf2,w,c
 27510  0132F8  6E0C               	movwf	(btemp+11)^0,c
 27511  0132FA  0E80               	movlw	128
 27512  0132FC  160C               	andwf	(btemp+11)^0,f,c
 27513                           
 27514                           ;stkvar	_sign @ sp[(-13)+12]
 27515  0132FE  50E1               	movf	fsr1l,w,c
 27516  013300  0FFF               	addlw	-1
 27517  013302  6ED9               	movwf	fsr2l,c
 27518  013304  50E2               	movf	fsr1h,w,c
 27519  013306  6EDA               	movwf	fsr2h,c
 27520  013308  0EFF               	movlw	255
 27521  01330A  22DA               	addwfc	fsr2h,f,c
 27522  01330C  500C               	movf	(btemp+11)^0,w,c
 27523  01330E  1ADF               	xorwf	indf2,f,c
 27524                           
 27525                           ;stkvar	_a @ sp[(-13)+-8]
 27526  013310  0EEE               	movlw	238
 27527  013312  24E1               	addwf	fsr1l,w,c
 27528  013314  6ED9               	movwf	fsr2l,c
 27529  013316  0EFF               	movlw	255
 27530  013318  20E2               	addwfc	fsr1h,w,c
 27531  01331A  6EDA               	movwf	fsr2h,c
 27532  01331C  50DF               	movf	indf2,w,c
 27533  01331E  6E0C               	movwf	(btemp+11)^0,c
 27534  013320  90D8               	bcf	status,0,c
 27535  013322  340C               	rlcf	(btemp+11)^0,w,c
 27536  013324  6E0B               	movwf	(btemp+10)^0,c
 27537                           
 27538                           ;stkvar	_aexp @ sp[(-13)+11]
 27539  013326  0EFE               	movlw	-2
 27540  013328  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27541                           
 27542                           ;stkvar	_a @ sp[(-13)+-8]
 27543  01332E  0EED               	movlw	237
 27544  013330  24E1               	addwf	fsr1l,w,c
 27545  013332  6ED9               	movwf	fsr2l,c
 27546  013334  0EFF               	movlw	255
 27547  013336  20E2               	addwfc	fsr1h,w,c
 27548  013338  6EDA               	movwf	fsr2h,c
 27549  01333A  AEDF               	btfss	indf2,7,c
 27550  01333C  D002               	goto	l8102
 27551                           
 27552                           ;stkvar	_aexp @ sp[(-13)+11]
 27553  01333E  0EFE               	movlw	-2
 27554  013340  80E3               	bsf	plusw1,0,c
 27555  013342                     l8102:
 27556                           
 27557                           ;stkvar	_aexp @ sp[(-13)+11]
 27558  013342  0EFE               	movlw	-2
 27559  013344  50E3               	movf	plusw1,w,c
 27560  013346  B4D8               	btfsc	status,2,c
 27561  013348  D01F               	goto	l8110
 27562                           
 27563                           ;stkvar	_aexp @ sp[(-13)+11]
 27564  01334A  0EFE               	movlw	-2
 27565  01334C  28E3               	incf	plusw1,w,c
 27566  01334E  A4D8               	btfss	status,2,c
 27567  013350  D018               	goto	l8108
 27568  013352  0E00               	movlw	0
 27569  013354  6E09               	movwf	(btemp+8)^0,c
 27570  013356  0E00               	movlw	0
 27571  013358  6E0A               	movwf	(btemp+9)^0,c
 27572  01335A  0E00               	movlw	0
 27573  01335C  6E0B               	movwf	(btemp+10)^0,c
 27574  01335E  0E00               	movlw	0
 27575  013360  6E0C               	movwf	(btemp+11)^0,c
 27576                           
 27577                           ;stkvar	_a @ sp[(-13)+-8]
 27578  013362  0EEB               	movlw	-21
 27579  013364  0060  F027  FFE3   	movff	btemp+8,plusw1
 27580  01336A  0EEC               	movlw	-20
 27581  01336C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27582  013372  0EED               	movlw	-19
 27583  013374  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27584  01337A  0EEE               	movlw	-18
 27585  01337C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27586  013382                     l8108:
 27587                           
 27588                           ;stkvar	_a @ sp[(-13)+-8]
 27589  013382  0EED               	movlw	-19
 27590  013384  8EE3               	bsf	plusw1,7,c
 27591  013386  D018               	goto	l8112
 27592  013388                     l8110:
 27593  013388  0E00               	movlw	0
 27594  01338A  6E09               	movwf	(btemp+8)^0,c
 27595  01338C  0E00               	movlw	0
 27596  01338E  6E0A               	movwf	(btemp+9)^0,c
 27597  013390  0E00               	movlw	0
 27598  013392  6E0B               	movwf	(btemp+10)^0,c
 27599  013394  0E00               	movlw	0
 27600  013396  6E0C               	movwf	(btemp+11)^0,c
 27601                           
 27602                           ;stkvar	_a @ sp[(-13)+-8]
 27603  013398  0EEB               	movlw	-21
 27604  01339A  0060  F027  FFE3   	movff	btemp+8,plusw1
 27605  0133A0  0EEC               	movlw	-20
 27606  0133A2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27607  0133A8  0EED               	movlw	-19
 27608  0133AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27609  0133B0  0EEE               	movlw	-18
 27610  0133B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 27611  0133B8                     l8112:
 27612                           
 27613                           ;stkvar	_aexp @ sp[(-13)+11]
 27614  0133B8  0EFE               	movlw	-2
 27615  0133BA  50E3               	movf	plusw1,w,c
 27616  0133BC  B4D8               	btfsc	status,2,c
 27617  0133BE  D004               	goto	u6570
 27618                           
 27619                           ;stkvar	_bexp @ sp[(-13)+10]
 27620  0133C0  0EFD               	movlw	-3
 27621  0133C2  50E3               	movf	plusw1,w,c
 27622  0133C4  A4D8               	btfss	status,2,c
 27623  0133C6  D009               	goto	l8120
 27624  0133C8                     u6570:
 27625  0133C8  0E00               	movlw	0
 27626  0133CA  6E01               	movwf	btemp^0,c
 27627  0133CC  0E00               	movlw	0
 27628  0133CE  6E02               	movwf	(btemp+1)^0,c
 27629  0133D0  0E00               	movlw	0
 27630  0133D2  6E03               	movwf	(btemp+2)^0,c
 27631  0133D4  0E00               	movlw	0
 27632  0133D6  6E04               	movwf	(btemp+3)^0,c
 27633  0133D8  D332               	goto	l2975
 27634  0133DA                     l8120:
 27635                           
 27636                           ;stkvar	_b @ sp[(-13)+-4]
 27637  0133DA  0EEF               	movlw	-17
 27638  0133DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 27639                           
 27640                           ;stkvar	_a @ sp[(-13)+-8]
 27641  0133E2  0EED               	movlw	237
 27642  0133E4  24E1               	addwf	fsr1l,w,c
 27643  0133E6  6ED9               	movwf	fsr2l,c
 27644  0133E8  0EFF               	movlw	255
 27645  0133EA  20E2               	addwfc	fsr1h,w,c
 27646  0133EC  6EDA               	movwf	fsr2h,c
 27647  0133EE  50DF               	movf	indf2,w,c
 27648  0133F0  020C               	mulwf	(btemp+11)^0,c
 27649                           
 27650                           ;stkvar	_temp @ sp[(-13)+8]
 27651  0133F2  0EFB               	movlw	-5
 27652  0133F4  006F FFCF FFE3     	movff	prodl,plusw1
 27653  0133FA  0EFC               	movlw	-4
 27654  0133FC  006F FFD3 FFE3     	movff	prodh,plusw1
 27655                           
 27656                           ;stkvar	_temp @ sp[(-13)+8]
 27657  013402  0EFB               	movlw	-5
 27658  013404  006F FF8C  F00C    	movff	plusw1,btemp+11
 27659  01340A  0060  F030  F005   	movff	btemp+11,btemp+4
 27660  013410  6A06               	clrf	(btemp+5)^0,c
 27661  013412  6A07               	clrf	(btemp+6)^0,c
 27662  013414  6A08               	clrf	(btemp+7)^0,c
 27663                           
 27664                           ;stkvar	_grs @ sp[(-13)+4]
 27665  013416  0EF7               	movlw	-9
 27666  013418  0060  F017  FFE3   	movff	btemp+4,plusw1
 27667  01341E  0EF8               	movlw	-8
 27668  013420  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27669  013426  0EF9               	movlw	-7
 27670  013428  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27671  01342E  0EFA               	movlw	-6
 27672  013430  0060  F023  FFE3   	movff	btemp+7,plusw1
 27673                           
 27674                           ;stkvar	_temp @ sp[(-13)+8]
 27675  013436  0EFC               	movlw	252
 27676  013438  24E1               	addwf	fsr1l,w,c
 27677  01343A  6ED9               	movwf	fsr2l,c
 27678  01343C  0EFF               	movlw	255
 27679  01343E  20E2               	addwfc	fsr1h,w,c
 27680  013440  6EDA               	movwf	fsr2h,c
 27681  013442  50DF               	movf	indf2,w,c
 27682  013444  6E0C               	movwf	(btemp+11)^0,c
 27683  013446  0060  F030  F005   	movff	btemp+11,btemp+4
 27684  01344C  6A06               	clrf	(btemp+5)^0,c
 27685  01344E  6A07               	clrf	(btemp+6)^0,c
 27686  013450  6A08               	clrf	(btemp+7)^0,c
 27687                           
 27688                           ;stkvar	_prod @ sp[(-13)+0]
 27689  013452  0EF3               	movlw	-13
 27690  013454  0060  F017  FFE3   	movff	btemp+4,plusw1
 27691  01345A  0EF4               	movlw	-12
 27692  01345C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27693  013462  0EF5               	movlw	-11
 27694  013464  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27695  01346A  0EF6               	movlw	-10
 27696  01346C  0060  F023  FFE3   	movff	btemp+7,plusw1
 27697                           
 27698                           ;stkvar	_b @ sp[(-13)+-4]
 27699  013472  0EF0               	movlw	240
 27700  013474  24E1               	addwf	fsr1l,w,c
 27701  013476  6ED9               	movwf	fsr2l,c
 27702  013478  0EFF               	movlw	255
 27703  01347A  20E2               	addwfc	fsr1h,w,c
 27704  01347C  6EDA               	movwf	fsr2h,c
 27705  01347E  50DF               	movf	indf2,w,c
 27706  013480  6E0C               	movwf	(btemp+11)^0,c
 27707                           
 27708                           ;stkvar	_a @ sp[(-13)+-8]
 27709  013482  0EEC               	movlw	236
 27710  013484  24E1               	addwf	fsr1l,w,c
 27711  013486  6ED9               	movwf	fsr2l,c
 27712  013488  0EFF               	movlw	255
 27713  01348A  20E2               	addwfc	fsr1h,w,c
 27714  01348C  6EDA               	movwf	fsr2h,c
 27715  01348E  50DF               	movf	indf2,w,c
 27716  013490  020C               	mulwf	(btemp+11)^0,c
 27717                           
 27718                           ;stkvar	_temp @ sp[(-13)+8]
 27719  013492  0EFB               	movlw	-5
 27720  013494  006F FFCF FFE3     	movff	prodl,plusw1
 27721  01349A  0EFC               	movlw	-4
 27722  01349C  006F FFD3 FFE3     	movff	prodh,plusw1
 27723                           
 27724                           ;stkvar	_grs @ sp[(-13)+4]
 27725  0134A2  50E1               	movf	fsr1l,w,c
 27726  0134A4  0FF7               	addlw	-9
 27727  0134A6  6ED9               	movwf	fsr2l,c
 27728  0134A8  50E2               	movf	fsr1h,w,c
 27729  0134AA  6EDA               	movwf	fsr2h,c
 27730  0134AC  0EFF               	movlw	255
 27731  0134AE  22DA               	addwfc	fsr2h,f,c
 27732                           
 27733                           ;stkvar	_temp @ sp[(-13)+8]
 27734  0134B0  0EFB               	movlw	-5
 27735  0134B2  50E3               	movf	plusw1,w,c
 27736  0134B4  26DE               	addwf	postinc2,f,c
 27737  0134B6  0E00               	movlw	0
 27738  0134B8  22DE               	addwfc	postinc2,f,c
 27739  0134BA  22DE               	addwfc	postinc2,f,c
 27740  0134BC  22DE               	addwfc	postinc2,f,c
 27741                           
 27742                           ;stkvar	_prod @ sp[(-13)+0]
 27743  0134BE  50E1               	movf	fsr1l,w,c
 27744  0134C0  0FF3               	addlw	-13
 27745  0134C2  6ED9               	movwf	fsr2l,c
 27746  0134C4  50E2               	movf	fsr1h,w,c
 27747  0134C6  6EDA               	movwf	fsr2h,c
 27748  0134C8  0EFF               	movlw	255
 27749  0134CA  22DA               	addwfc	fsr2h,f,c
 27750                           
 27751                           ;stkvar	_temp @ sp[(-13)+8]
 27752  0134CC  0EFC               	movlw	252
 27753  0134CE  24E1               	addwf	fsr1l,w,c
 27754  0134D0  6EE9               	movwf	fsr0l,c
 27755  0134D2  0EFF               	movlw	255
 27756  0134D4  20E2               	addwfc	fsr1h,w,c
 27757  0134D6  6EEA               	movwf	fsr0h,c
 27758  0134D8  50EF               	movf	indf0,w,c
 27759  0134DA  26DE               	addwf	postinc2,f,c
 27760  0134DC  0E00               	movlw	0
 27761  0134DE  22DE               	addwfc	postinc2,f,c
 27762  0134E0  22DE               	addwfc	postinc2,f,c
 27763  0134E2  22DE               	addwfc	postinc2,f,c
 27764                           
 27765                           ;stkvar	_b @ sp[(-13)+-4]
 27766  0134E4  0EF1               	movlw	241
 27767  0134E6  24E1               	addwf	fsr1l,w,c
 27768  0134E8  6ED9               	movwf	fsr2l,c
 27769  0134EA  0EFF               	movlw	255
 27770  0134EC  20E2               	addwfc	fsr1h,w,c
 27771  0134EE  6EDA               	movwf	fsr2h,c
 27772  0134F0  50DF               	movf	indf2,w,c
 27773  0134F2  6E0C               	movwf	(btemp+11)^0,c
 27774                           
 27775                           ;stkvar	_a @ sp[(-13)+-8]
 27776  0134F4  0EEB               	movlw	-21
 27777  0134F6  50E3               	movf	plusw1,w,c
 27778  0134F8  020C               	mulwf	(btemp+11)^0,c
 27779                           
 27780                           ;stkvar	_temp @ sp[(-13)+8]
 27781  0134FA  0EFB               	movlw	-5
 27782  0134FC  006F FFCF FFE3     	movff	prodl,plusw1
 27783  013502  0EFC               	movlw	-4
 27784  013504  006F FFD3 FFE3     	movff	prodh,plusw1
 27785                           
 27786                           ;stkvar	_grs @ sp[(-13)+4]
 27787  01350A  50E1               	movf	fsr1l,w,c
 27788  01350C  0FF7               	addlw	-9
 27789  01350E  6ED9               	movwf	fsr2l,c
 27790  013510  50E2               	movf	fsr1h,w,c
 27791  013512  6EDA               	movwf	fsr2h,c
 27792  013514  0EFF               	movlw	255
 27793  013516  22DA               	addwfc	fsr2h,f,c
 27794                           
 27795                           ;stkvar	_temp @ sp[(-13)+8]
 27796  013518  0EFB               	movlw	-5
 27797  01351A  50E3               	movf	plusw1,w,c
 27798  01351C  26DE               	addwf	postinc2,f,c
 27799  01351E  0E00               	movlw	0
 27800  013520  22DE               	addwfc	postinc2,f,c
 27801  013522  22DE               	addwfc	postinc2,f,c
 27802  013524  22DE               	addwfc	postinc2,f,c
 27803                           
 27804                           ;stkvar	_prod @ sp[(-13)+0]
 27805  013526  50E1               	movf	fsr1l,w,c
 27806  013528  0FF3               	addlw	-13
 27807  01352A  6ED9               	movwf	fsr2l,c
 27808  01352C  50E2               	movf	fsr1h,w,c
 27809  01352E  6EDA               	movwf	fsr2h,c
 27810  013530  0EFF               	movlw	255
 27811  013532  22DA               	addwfc	fsr2h,f,c
 27812                           
 27813                           ;stkvar	_temp @ sp[(-13)+8]
 27814  013534  0EFC               	movlw	252
 27815  013536  24E1               	addwf	fsr1l,w,c
 27816  013538  6EE9               	movwf	fsr0l,c
 27817  01353A  0EFF               	movlw	255
 27818  01353C  20E2               	addwfc	fsr1h,w,c
 27819  01353E  6EEA               	movwf	fsr0h,c
 27820  013540  50EF               	movf	indf0,w,c
 27821  013542  26DE               	addwf	postinc2,f,c
 27822  013544  0E00               	movlw	0
 27823  013546  22DE               	addwfc	postinc2,f,c
 27824  013548  22DE               	addwfc	postinc2,f,c
 27825  01354A  22DE               	addwfc	postinc2,f,c
 27826                           
 27827                           ;stkvar	_grs @ sp[(-13)+4]
 27828  01354C  50E1               	movf	fsr1l,w,c
 27829  01354E  0FF7               	addlw	-9
 27830  013550  6ED9               	movwf	fsr2l,c
 27831  013552  50E2               	movf	fsr1h,w,c
 27832  013554  6EDA               	movwf	fsr2h,c
 27833  013556  0EFF               	movlw	255
 27834  013558  22DA               	addwfc	fsr2h,f,c
 27835  01355A  0E08               	movlw	8
 27836  01355C                     u6585:
 27837  01355C  90D8               	bcf	status,0,c
 27838  01355E  36DE               	rlcf	postinc2,f,c
 27839  013560  36DE               	rlcf	postinc2,f,c
 27840  013562  36DE               	rlcf	postinc2,f,c
 27841  013564  36DD               	rlcf	postdec2,f,c
 27842  013566  52DD               	movf	postdec2,f,c
 27843  013568  52DD               	movf	postdec2,f,c
 27844  01356A  2EE8               	decfsz	wreg,f,c
 27845  01356C  D7F7               	goto	u6585
 27846                           
 27847                           ;stkvar	_b @ sp[(-13)+-4]
 27848  01356E  0EF0               	movlw	240
 27849  013570  24E1               	addwf	fsr1l,w,c
 27850  013572  6ED9               	movwf	fsr2l,c
 27851  013574  0EFF               	movlw	255
 27852  013576  20E2               	addwfc	fsr1h,w,c
 27853  013578  6EDA               	movwf	fsr2h,c
 27854  01357A  50DF               	movf	indf2,w,c
 27855  01357C  6E0C               	movwf	(btemp+11)^0,c
 27856                           
 27857                           ;stkvar	_a @ sp[(-13)+-8]
 27858  01357E  0EEB               	movlw	-21
 27859  013580  50E3               	movf	plusw1,w,c
 27860  013582  020C               	mulwf	(btemp+11)^0,c
 27861                           
 27862                           ;stkvar	_temp @ sp[(-13)+8]
 27863  013584  0EFB               	movlw	-5
 27864  013586  006F FFCF FFE3     	movff	prodl,plusw1
 27865  01358C  0EFC               	movlw	-4
 27866  01358E  006F FFD3 FFE3     	movff	prodh,plusw1
 27867                           
 27868                           ;stkvar	_temp @ sp[(-13)+8]
 27869  013594  0EFB               	movlw	-5
 27870  013596  006F FF8C  F00B    	movff	plusw1,btemp+10
 27871  01359C  0EFC               	movlw	-4
 27872  01359E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27873                           
 27874                           ;stkvar	_grs @ sp[(-13)+4]
 27875  0135A4  50E1               	movf	fsr1l,w,c
 27876  0135A6  0FF7               	addlw	-9
 27877  0135A8  6ED9               	movwf	fsr2l,c
 27878  0135AA  50E2               	movf	fsr1h,w,c
 27879  0135AC  6EDA               	movwf	fsr2h,c
 27880  0135AE  0EFF               	movlw	255
 27881  0135B0  22DA               	addwfc	fsr2h,f,c
 27882  0135B2  500B               	movf	(btemp+10)^0,w,c
 27883  0135B4  26DE               	addwf	postinc2,f,c
 27884  0135B6  500C               	movf	(btemp+11)^0,w,c
 27885  0135B8  22DE               	addwfc	postinc2,f,c
 27886  0135BA  0E00               	movlw	0
 27887  0135BC  22DE               	addwfc	postinc2,f,c
 27888  0135BE  22DE               	addwfc	postinc2,f,c
 27889                           
 27890                           ;stkvar	_b @ sp[(-13)+-4]
 27891  0135C0  0EEF               	movlw	-17
 27892  0135C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27893                           
 27894                           ;stkvar	_a @ sp[(-13)+-8]
 27895  0135C8  0EEC               	movlw	236
 27896  0135CA  24E1               	addwf	fsr1l,w,c
 27897  0135CC  6ED9               	movwf	fsr2l,c
 27898  0135CE  0EFF               	movlw	255
 27899  0135D0  20E2               	addwfc	fsr1h,w,c
 27900  0135D2  6EDA               	movwf	fsr2h,c
 27901  0135D4  50DF               	movf	indf2,w,c
 27902  0135D6  020C               	mulwf	(btemp+11)^0,c
 27903                           
 27904                           ;stkvar	_temp @ sp[(-13)+8]
 27905  0135D8  0EFB               	movlw	-5
 27906  0135DA  006F FFCF FFE3     	movff	prodl,plusw1
 27907  0135E0  0EFC               	movlw	-4
 27908  0135E2  006F FFD3 FFE3     	movff	prodh,plusw1
 27909                           
 27910                           ;stkvar	_temp @ sp[(-13)+8]
 27911  0135E8  0EFB               	movlw	-5
 27912  0135EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 27913  0135F0  0EFC               	movlw	-4
 27914  0135F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27915                           
 27916                           ;stkvar	_grs @ sp[(-13)+4]
 27917  0135F8  50E1               	movf	fsr1l,w,c
 27918  0135FA  0FF7               	addlw	-9
 27919  0135FC  6ED9               	movwf	fsr2l,c
 27920  0135FE  50E2               	movf	fsr1h,w,c
 27921  013600  6EDA               	movwf	fsr2h,c
 27922  013602  0EFF               	movlw	255
 27923  013604  22DA               	addwfc	fsr2h,f,c
 27924  013606  500B               	movf	(btemp+10)^0,w,c
 27925  013608  26DE               	addwf	postinc2,f,c
 27926  01360A  500C               	movf	(btemp+11)^0,w,c
 27927  01360C  22DE               	addwfc	postinc2,f,c
 27928  01360E  0E00               	movlw	0
 27929  013610  22DE               	addwfc	postinc2,f,c
 27930  013612  22DE               	addwfc	postinc2,f,c
 27931                           
 27932                           ;stkvar	_grs @ sp[(-13)+4]
 27933  013614  50E1               	movf	fsr1l,w,c
 27934  013616  0FF7               	addlw	-9
 27935  013618  6ED9               	movwf	fsr2l,c
 27936  01361A  50E2               	movf	fsr1h,w,c
 27937  01361C  6EDA               	movwf	fsr2h,c
 27938  01361E  0EFF               	movlw	255
 27939  013620  22DA               	addwfc	fsr2h,f,c
 27940  013622  0E08               	movlw	8
 27941  013624                     u6595:
 27942  013624  90D8               	bcf	status,0,c
 27943  013626  36DE               	rlcf	postinc2,f,c
 27944  013628  36DE               	rlcf	postinc2,f,c
 27945  01362A  36DE               	rlcf	postinc2,f,c
 27946  01362C  36DD               	rlcf	postdec2,f,c
 27947  01362E  52DD               	movf	postdec2,f,c
 27948  013630  52DD               	movf	postdec2,f,c
 27949  013632  2EE8               	decfsz	wreg,f,c
 27950  013634  D7F7               	goto	u6595
 27951                           
 27952                           ;stkvar	_b @ sp[(-13)+-4]
 27953  013636  0EEF               	movlw	-17
 27954  013638  006F FF8C  F00C    	movff	plusw1,btemp+11
 27955                           
 27956                           ;stkvar	_a @ sp[(-13)+-8]
 27957  01363E  0EEB               	movlw	-21
 27958  013640  50E3               	movf	plusw1,w,c
 27959  013642  020C               	mulwf	(btemp+11)^0,c
 27960                           
 27961                           ;stkvar	_temp @ sp[(-13)+8]
 27962  013644  0EFB               	movlw	-5
 27963  013646  006F FFCF FFE3     	movff	prodl,plusw1
 27964  01364C  0EFC               	movlw	-4
 27965  01364E  006F FFD3 FFE3     	movff	prodh,plusw1
 27966                           
 27967                           ;stkvar	_temp @ sp[(-13)+8]
 27968  013654  0EFB               	movlw	-5
 27969  013656  006F FF8C  F00B    	movff	plusw1,btemp+10
 27970  01365C  0EFC               	movlw	-4
 27971  01365E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27972                           
 27973                           ;stkvar	_grs @ sp[(-13)+4]
 27974  013664  50E1               	movf	fsr1l,w,c
 27975  013666  0FF7               	addlw	-9
 27976  013668  6ED9               	movwf	fsr2l,c
 27977  01366A  50E2               	movf	fsr1h,w,c
 27978  01366C  6EDA               	movwf	fsr2h,c
 27979  01366E  0EFF               	movlw	255
 27980  013670  22DA               	addwfc	fsr2h,f,c
 27981  013672  500B               	movf	(btemp+10)^0,w,c
 27982  013674  26DE               	addwf	postinc2,f,c
 27983  013676  500C               	movf	(btemp+11)^0,w,c
 27984  013678  22DE               	addwfc	postinc2,f,c
 27985  01367A  0E00               	movlw	0
 27986  01367C  22DE               	addwfc	postinc2,f,c
 27987  01367E  22DE               	addwfc	postinc2,f,c
 27988                           
 27989                           ;stkvar	_b @ sp[(-13)+-4]
 27990  013680  0EF0               	movlw	240
 27991  013682  24E1               	addwf	fsr1l,w,c
 27992  013684  6ED9               	movwf	fsr2l,c
 27993  013686  0EFF               	movlw	255
 27994  013688  20E2               	addwfc	fsr1h,w,c
 27995  01368A  6EDA               	movwf	fsr2h,c
 27996  01368C  50DF               	movf	indf2,w,c
 27997  01368E  6E0C               	movwf	(btemp+11)^0,c
 27998                           
 27999                           ;stkvar	_a @ sp[(-13)+-8]
 28000  013690  0EED               	movlw	237
 28001  013692  24E1               	addwf	fsr1l,w,c
 28002  013694  6ED9               	movwf	fsr2l,c
 28003  013696  0EFF               	movlw	255
 28004  013698  20E2               	addwfc	fsr1h,w,c
 28005  01369A  6EDA               	movwf	fsr2h,c
 28006  01369C  50DF               	movf	indf2,w,c
 28007  01369E  020C               	mulwf	(btemp+11)^0,c
 28008                           
 28009                           ;stkvar	_temp @ sp[(-13)+8]
 28010  0136A0  0EFB               	movlw	-5
 28011  0136A2  006F FFCF FFE3     	movff	prodl,plusw1
 28012  0136A8  0EFC               	movlw	-4
 28013  0136AA  006F FFD3 FFE3     	movff	prodh,plusw1
 28014                           
 28015                           ;stkvar	_temp @ sp[(-13)+8]
 28016  0136B0  0EFB               	movlw	-5
 28017  0136B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28018  0136B8  0EFC               	movlw	-4
 28019  0136BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28020                           
 28021                           ;stkvar	_prod @ sp[(-13)+0]
 28022  0136C0  50E1               	movf	fsr1l,w,c
 28023  0136C2  0FF3               	addlw	-13
 28024  0136C4  6ED9               	movwf	fsr2l,c
 28025  0136C6  50E2               	movf	fsr1h,w,c
 28026  0136C8  6EDA               	movwf	fsr2h,c
 28027  0136CA  0EFF               	movlw	255
 28028  0136CC  22DA               	addwfc	fsr2h,f,c
 28029  0136CE  500B               	movf	(btemp+10)^0,w,c
 28030  0136D0  26DE               	addwf	postinc2,f,c
 28031  0136D2  500C               	movf	(btemp+11)^0,w,c
 28032  0136D4  22DE               	addwfc	postinc2,f,c
 28033  0136D6  0E00               	movlw	0
 28034  0136D8  22DE               	addwfc	postinc2,f,c
 28035  0136DA  22DE               	addwfc	postinc2,f,c
 28036                           
 28037                           ;stkvar	_b @ sp[(-13)+-4]
 28038  0136DC  0EF1               	movlw	241
 28039  0136DE  24E1               	addwf	fsr1l,w,c
 28040  0136E0  6ED9               	movwf	fsr2l,c
 28041  0136E2  0EFF               	movlw	255
 28042  0136E4  20E2               	addwfc	fsr1h,w,c
 28043  0136E6  6EDA               	movwf	fsr2h,c
 28044  0136E8  50DF               	movf	indf2,w,c
 28045  0136EA  6E0C               	movwf	(btemp+11)^0,c
 28046                           
 28047                           ;stkvar	_a @ sp[(-13)+-8]
 28048  0136EC  0EEC               	movlw	236
 28049  0136EE  24E1               	addwf	fsr1l,w,c
 28050  0136F0  6ED9               	movwf	fsr2l,c
 28051  0136F2  0EFF               	movlw	255
 28052  0136F4  20E2               	addwfc	fsr1h,w,c
 28053  0136F6  6EDA               	movwf	fsr2h,c
 28054  0136F8  50DF               	movf	indf2,w,c
 28055  0136FA  020C               	mulwf	(btemp+11)^0,c
 28056                           
 28057                           ;stkvar	_temp @ sp[(-13)+8]
 28058  0136FC  0EFB               	movlw	-5
 28059  0136FE  006F FFCF FFE3     	movff	prodl,plusw1
 28060  013704  0EFC               	movlw	-4
 28061  013706  006F FFD3 FFE3     	movff	prodh,plusw1
 28062                           
 28063                           ;stkvar	_temp @ sp[(-13)+8]
 28064  01370C  0EFB               	movlw	-5
 28065  01370E  006F FF8C  F00B    	movff	plusw1,btemp+10
 28066  013714  0EFC               	movlw	-4
 28067  013716  006F FF8C  F00C    	movff	plusw1,btemp+11
 28068                           
 28069                           ;stkvar	_prod @ sp[(-13)+0]
 28070  01371C  50E1               	movf	fsr1l,w,c
 28071  01371E  0FF3               	addlw	-13
 28072  013720  6ED9               	movwf	fsr2l,c
 28073  013722  50E2               	movf	fsr1h,w,c
 28074  013724  6EDA               	movwf	fsr2h,c
 28075  013726  0EFF               	movlw	255
 28076  013728  22DA               	addwfc	fsr2h,f,c
 28077  01372A  500B               	movf	(btemp+10)^0,w,c
 28078  01372C  26DE               	addwf	postinc2,f,c
 28079  01372E  500C               	movf	(btemp+11)^0,w,c
 28080  013730  22DE               	addwfc	postinc2,f,c
 28081  013732  0E00               	movlw	0
 28082  013734  22DE               	addwfc	postinc2,f,c
 28083  013736  22DE               	addwfc	postinc2,f,c
 28084                           
 28085                           ;stkvar	_b @ sp[(-13)+-4]
 28086  013738  0EF1               	movlw	241
 28087  01373A  24E1               	addwf	fsr1l,w,c
 28088  01373C  6ED9               	movwf	fsr2l,c
 28089  01373E  0EFF               	movlw	255
 28090  013740  20E2               	addwfc	fsr1h,w,c
 28091  013742  6EDA               	movwf	fsr2h,c
 28092  013744  50DF               	movf	indf2,w,c
 28093  013746  6E0C               	movwf	(btemp+11)^0,c
 28094                           
 28095                           ;stkvar	_a @ sp[(-13)+-8]
 28096  013748  0EED               	movlw	237
 28097  01374A  24E1               	addwf	fsr1l,w,c
 28098  01374C  6ED9               	movwf	fsr2l,c
 28099  01374E  0EFF               	movlw	255
 28100  013750  20E2               	addwfc	fsr1h,w,c
 28101  013752  6EDA               	movwf	fsr2h,c
 28102  013754  50DF               	movf	indf2,w,c
 28103  013756  020C               	mulwf	(btemp+11)^0,c
 28104                           
 28105                           ;stkvar	_temp @ sp[(-13)+8]
 28106  013758  0EFB               	movlw	-5
 28107  01375A  006F FFCF FFE3     	movff	prodl,plusw1
 28108  013760  0EFC               	movlw	-4
 28109  013762  006F FFD3 FFE3     	movff	prodh,plusw1
 28110                           
 28111                           ;stkvar	_temp @ sp[(-13)+8]
 28112  013768  0EFB               	movlw	-5
 28113  01376A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28114  013770  0EFC               	movlw	-4
 28115  013772  006F FF8C  F00C    	movff	plusw1,btemp+11
 28116  013778  500B               	movf	(btemp+10)^0,w,c
 28117  01377A  6E05               	movwf	(btemp+4)^0,c
 28118  01377C  500C               	movf	(btemp+11)^0,w,c
 28119  01377E  6E06               	movwf	(btemp+5)^0,c
 28120  013780  6A07               	clrf	(btemp+6)^0,c
 28121  013782  6A08               	clrf	(btemp+7)^0,c
 28122  013784  0060  F01C  F008   	movff	btemp+6,btemp+7
 28123  01378A  0060  F018  F007   	movff	btemp+5,btemp+6
 28124  013790  0060  F014  F006   	movff	btemp+4,btemp+5
 28125  013796  6A05               	clrf	(btemp+4)^0,c
 28126                           
 28127                           ;stkvar	_prod @ sp[(-13)+0]
 28128  013798  50E1               	movf	fsr1l,w,c
 28129  01379A  0FF3               	addlw	-13
 28130  01379C  6ED9               	movwf	fsr2l,c
 28131  01379E  50E2               	movf	fsr1h,w,c
 28132  0137A0  6EDA               	movwf	fsr2h,c
 28133  0137A2  0EFF               	movlw	255
 28134  0137A4  22DA               	addwfc	fsr2h,f,c
 28135  0137A6  5005               	movf	(btemp+4)^0,w,c
 28136  0137A8  26DE               	addwf	postinc2,f,c
 28137  0137AA  5006               	movf	(btemp+5)^0,w,c
 28138  0137AC  22DE               	addwfc	postinc2,f,c
 28139  0137AE  5007               	movf	(btemp+6)^0,w,c
 28140  0137B0  22DE               	addwfc	postinc2,f,c
 28141  0137B2  5008               	movf	(btemp+7)^0,w,c
 28142  0137B4  22DE               	addwfc	postinc2,f,c
 28143                           
 28144                           ;stkvar	_prod @ sp[(-13)+0]
 28145  0137B6  50E1               	movf	fsr1l,w,c
 28146  0137B8  0FF3               	addlw	-13
 28147  0137BA  6ED9               	movwf	fsr2l,c
 28148  0137BC  50E2               	movf	fsr1h,w,c
 28149  0137BE  6EDA               	movwf	fsr2h,c
 28150  0137C0  0EFF               	movlw	255
 28151  0137C2  22DA               	addwfc	fsr2h,f,c
 28152                           
 28153                           ;stkvar	_grs @ sp[(-13)+4]
 28154  0137C4  0EFA               	movlw	250
 28155  0137C6  24E1               	addwf	fsr1l,w,c
 28156  0137C8  6EE9               	movwf	fsr0l,c
 28157  0137CA  0EFF               	movlw	255
 28158  0137CC  20E2               	addwfc	fsr1h,w,c
 28159  0137CE  6EEA               	movwf	fsr0h,c
 28160  0137D0  50EF               	movf	indf0,w,c
 28161  0137D2  26DE               	addwf	postinc2,f,c
 28162  0137D4  0E00               	movlw	0
 28163  0137D6  22DE               	addwfc	postinc2,f,c
 28164  0137D8  22DE               	addwfc	postinc2,f,c
 28165  0137DA  22DE               	addwfc	postinc2,f,c
 28166                           
 28167                           ;stkvar	_grs @ sp[(-13)+4]
 28168  0137DC  50E1               	movf	fsr1l,w,c
 28169  0137DE  0FF7               	addlw	-9
 28170  0137E0  6ED9               	movwf	fsr2l,c
 28171  0137E2  50E2               	movf	fsr1h,w,c
 28172  0137E4  6EDA               	movwf	fsr2h,c
 28173  0137E6  0EFF               	movlw	255
 28174  0137E8  22DA               	addwfc	fsr2h,f,c
 28175  0137EA  0E08               	movlw	8
 28176  0137EC                     u6605:
 28177  0137EC  90D8               	bcf	status,0,c
 28178  0137EE  36DE               	rlcf	postinc2,f,c
 28179  0137F0  36DE               	rlcf	postinc2,f,c
 28180  0137F2  36DE               	rlcf	postinc2,f,c
 28181  0137F4  36DD               	rlcf	postdec2,f,c
 28182  0137F6  52DD               	movf	postdec2,f,c
 28183  0137F8  52DD               	movf	postdec2,f,c
 28184  0137FA  2EE8               	decfsz	wreg,f,c
 28185  0137FC  D7F7               	goto	u6605
 28186  0137FE  0E82               	movlw	130
 28187  013800  6E0B               	movwf	(btemp+10)^0,c
 28188  013802  0EFF               	movlw	255
 28189  013804  6E0C               	movwf	(btemp+11)^0,c
 28190                           
 28191                           ;stkvar	_bexp @ sp[(-13)+10]
 28192  013806  0EFD               	movlw	-3
 28193  013808  50E3               	movf	plusw1,w,c
 28194  01380A  6E09               	movwf	(btemp+8)^0,c
 28195  01380C  6A0A               	clrf	(btemp+9)^0,c
 28196                           
 28197                           ;stkvar	_aexp @ sp[(-13)+11]
 28198  01380E  0EFE               	movlw	-2
 28199  013810  50E3               	movf	plusw1,w,c
 28200  013812  2609               	addwf	(btemp+8)^0,f,c
 28201  013814  0E00               	movlw	0
 28202  013816  220A               	addwfc	(btemp+9)^0,f,c
 28203  013818  500B               	movf	(btemp+10)^0,w,c
 28204  01381A  2609               	addwf	(btemp+8)^0,f,c
 28205  01381C  500C               	movf	(btemp+11)^0,w,c
 28206  01381E  220A               	addwfc	(btemp+9)^0,f,c
 28207                           
 28208                           ;stkvar	_temp @ sp[(-13)+8]
 28209  013820  0EFB               	movlw	-5
 28210  013822  0060  F027  FFE3   	movff	btemp+8,plusw1
 28211  013828  0EFC               	movlw	-4
 28212  01382A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28213  013830  D021               	goto	l8182
 28214  013832                     l8172:
 28215                           
 28216                           ;stkvar	_prod @ sp[(-13)+0]
 28217  013832  90D8               	bcf	status,0,c
 28218  013834  0EF3               	movlw	-13
 28219  013836  36E3               	rlcf	plusw1,f,c
 28220  013838  0EF4               	movlw	-12
 28221  01383A  36E3               	rlcf	plusw1,f,c
 28222  01383C  0EF5               	movlw	-11
 28223  01383E  36E3               	rlcf	plusw1,f,c
 28224  013840  0EF6               	movlw	-10
 28225  013842  36E3               	rlcf	plusw1,f,c
 28226                           
 28227                           ;stkvar	_grs @ sp[(-13)+4]
 28228  013844  0EFA               	movlw	-6
 28229  013846  AEE3               	btfss	plusw1,7,c
 28230  013848  D002               	goto	l8178
 28231                           
 28232                           ;stkvar	_prod @ sp[(-13)+0]
 28233  01384A  0EF3               	movlw	-13
 28234  01384C  80E3               	bsf	plusw1,0,c
 28235  01384E                     l8178:
 28236                           
 28237                           ;stkvar	_grs @ sp[(-13)+4]
 28238  01384E  90D8               	bcf	status,0,c
 28239  013850  0EF7               	movlw	-9
 28240  013852  36E3               	rlcf	plusw1,f,c
 28241  013854  0EF8               	movlw	-8
 28242  013856  36E3               	rlcf	plusw1,f,c
 28243  013858  0EF9               	movlw	-7
 28244  01385A  36E3               	rlcf	plusw1,f,c
 28245  01385C  0EFA               	movlw	-6
 28246  01385E  36E3               	rlcf	plusw1,f,c
 28247                           
 28248                           ;stkvar	_temp @ sp[(-13)+8]
 28249  013860  50E1               	movf	fsr1l,w,c
 28250  013862  0FFB               	addlw	-5
 28251  013864  6ED9               	movwf	fsr2l,c
 28252  013866  50E2               	movf	fsr1h,w,c
 28253  013868  6EDA               	movwf	fsr2h,c
 28254  01386A  0EFF               	movlw	255
 28255  01386C  22DA               	addwfc	fsr2h,f,c
 28256  01386E  06DE               	decf	postinc2,f,c
 28257  013870  0E00               	movlw	0
 28258  013872  5ADD               	subwfb	postdec2,f,c
 28259  013874                     l8182:
 28260                           
 28261                           ;stkvar	_prod @ sp[(-13)+0]
 28262  013874  0EF5               	movlw	-11
 28263  013876  AEE3               	btfss	plusw1,7,c
 28264  013878  D7DC               	goto	l8172
 28265                           
 28266                           ;stkvar	_aexp @ sp[(-13)+11]
 28267  01387A  0EFE               	movlw	-2
 28268  01387C  6AE3               	clrf	plusw1,c
 28269                           
 28270                           ;stkvar	_grs @ sp[(-13)+4]
 28271  01387E  0EFA               	movlw	-6
 28272  013880  AEE3               	btfss	plusw1,7,c
 28273  013882  D020               	goto	l8196
 28274                           
 28275                           ;stkvar	_grs @ sp[(-13)+4]
 28276  013884  50E1               	movf	fsr1l,w,c
 28277  013886  0FF7               	addlw	-9
 28278  013888  6ED9               	movwf	fsr2l,c
 28279  01388A  50E2               	movf	fsr1h,w,c
 28280  01388C  6EDA               	movwf	fsr2h,c
 28281  01388E  0EFF               	movlw	255
 28282  013890  22DA               	addwfc	fsr2h,f,c
 28283  013892  0EFF               	movlw	255
 28284  013894  14DE               	andwf	postinc2,w,c
 28285  013896  6E09               	movwf	(btemp+8)^0,c
 28286  013898  0EFF               	movlw	255
 28287  01389A  14DE               	andwf	postinc2,w,c
 28288  01389C  6E0A               	movwf	(btemp+9)^0,c
 28289  01389E  0EFF               	movlw	255
 28290  0138A0  14DE               	andwf	postinc2,w,c
 28291  0138A2  6E0B               	movwf	(btemp+10)^0,c
 28292  0138A4  0E7F               	movlw	127
 28293  0138A6  14DE               	andwf	postinc2,w,c
 28294  0138A8  6E0C               	movwf	(btemp+11)^0,c
 28295  0138AA  5009               	movf	(btemp+8)^0,w,c
 28296  0138AC  100A               	iorwf	(btemp+9)^0,w,c
 28297  0138AE  100B               	iorwf	(btemp+10)^0,w,c
 28298  0138B0  100C               	iorwf	(btemp+11)^0,w,c
 28299  0138B2  B4D8               	btfsc	status,2,c
 28300  0138B4  D004               	goto	l8192
 28301  0138B6                     u6640:
 28302                           
 28303                           ;stkvar	_aexp @ sp[(-13)+11]
 28304  0138B6  0EFE               	movlw	-2
 28305  0138B8  6AE3               	clrf	plusw1,c
 28306  0138BA  2AE3               	incf	plusw1,f,c
 28307  0138BC  D003               	goto	l8196
 28308  0138BE                     l8192:
 28309                           
 28310                           ;stkvar	_prod @ sp[(-13)+0]
 28311  0138BE  0EF3               	movlw	-13
 28312  0138C0  B0E3               	btfsc	plusw1,0,c
 28313  0138C2  D7F9               	goto	u6640
 28314  0138C4                     l8196:
 28315                           
 28316                           ;stkvar	_aexp @ sp[(-13)+11]
 28317  0138C4  0EFE               	movlw	-2
 28318  0138C6  50E3               	movf	plusw1,w,c
 28319  0138C8  B4D8               	btfsc	status,2,c
 28320  0138CA  D036               	goto	l8206
 28321                           
 28322                           ;stkvar	_prod @ sp[(-13)+0]
 28323  0138CC  50E1               	movf	fsr1l,w,c
 28324  0138CE  0FF3               	addlw	-13
 28325  0138D0  6ED9               	movwf	fsr2l,c
 28326  0138D2  50E2               	movf	fsr1h,w,c
 28327  0138D4  6EDA               	movwf	fsr2h,c
 28328  0138D6  0EFF               	movlw	255
 28329  0138D8  22DA               	addwfc	fsr2h,f,c
 28330  0138DA  2ADE               	incf	postinc2,f,c
 28331  0138DC  0E00               	movlw	0
 28332  0138DE  22DE               	addwfc	postinc2,f,c
 28333  0138E0  22DE               	addwfc	postinc2,f,c
 28334  0138E2  22DE               	addwfc	postinc2,f,c
 28335                           
 28336                           ;stkvar	_prod @ sp[(-13)+0]
 28337  0138E4  0EF6               	movlw	-10
 28338  0138E6  A0E3               	btfss	plusw1,0,c
 28339  0138E8  D027               	goto	l8206
 28340  0138EA  0E01               	movlw	1
 28341  0138EC  6E0C               	movwf	(btemp+11)^0,c
 28342                           
 28343                           ;stkvar	_prod @ sp[(-13)+0]
 28344  0138EE  50E1               	movf	fsr1l,w,c
 28345  0138F0  0FF3               	addlw	-13
 28346  0138F2  6ED9               	movwf	fsr2l,c
 28347  0138F4  50E2               	movf	fsr1h,w,c
 28348  0138F6  6EDA               	movwf	fsr2h,c
 28349  0138F8  0EFF               	movlw	255
 28350  0138FA  22DA               	addwfc	fsr2h,f,c
 28351  0138FC  280C               	incf	(btemp+11)^0,w,c
 28352  0138FE  52DE               	movf	postinc2,f,c
 28353  013900  D008               	goto	u6680
 28354  013902                     u6685:
 28355  013902  52DE               	movf	postinc2,f,c
 28356  013904  90D8               	bcf	status,0,c
 28357  013906  BEDC               	btfsc	preinc2,7,c
 28358  013908  80D8               	bsf	status,0,c
 28359  01390A  32DD               	rrcf	postdec2,f,c
 28360  01390C  32DD               	rrcf	postdec2,f,c
 28361  01390E  32DD               	rrcf	postdec2,f,c
 28362  013910  32DE               	rrcf	postinc2,f,c
 28363  013912                     u6680:
 28364  013912  2EE8               	decfsz	wreg,f,c
 28365  013914  D7F6               	goto	u6685
 28366                           
 28367                           ;stkvar	_temp @ sp[(-13)+8]
 28368  013916  0EFB               	movlw	-5
 28369  013918  50E3               	movf	plusw1,w,c
 28370  01391A  0F01               	addlw	1
 28371  01391C  6E01               	movwf	btemp^0,c
 28372  01391E  0EFB               	movlw	-5
 28373  013920  0060  F007  FFE3   	movff	btemp,plusw1
 28374  013926  6A01               	clrf	btemp^0,c
 28375  013928  0EFC               	movlw	-4
 28376  01392A  50E3               	movf	plusw1,w,c
 28377  01392C  2001               	addwfc	btemp^0,w,c
 28378  01392E  6E01               	movwf	btemp^0,c
 28379  013930  0EFC               	movlw	-4
 28380  013932  0060  F007  FFE3   	movff	btemp,plusw1
 28381  013938                     l8206:
 28382                           
 28383                           ;stkvar	_temp @ sp[(-13)+8]
 28384  013938  0EFC               	movlw	-4
 28385  01393A  BEE3               	btfsc	plusw1,7,c
 28386  01393C  D020               	goto	l8210
 28387  01393E  0EFC               	movlw	-4
 28388  013940  50E3               	movf	plusw1,w,c
 28389  013942  E104               	bnz	u6690
 28390  013944  0EFB               	movlw	-5
 28391  013946  28E3               	incf	plusw1,w,c
 28392  013948  A0D8               	btfss	status,0,c
 28393  01394A  D019               	goto	l8210
 28394  01394C                     u6690:
 28395  01394C  0E00               	movlw	0
 28396  01394E  6E09               	movwf	(btemp+8)^0,c
 28397  013950  0E00               	movlw	0
 28398  013952  6E0A               	movwf	(btemp+9)^0,c
 28399  013954  0E80               	movlw	128
 28400  013956  6E0B               	movwf	(btemp+10)^0,c
 28401  013958  0E7F               	movlw	127
 28402  01395A  6E0C               	movwf	(btemp+11)^0,c
 28403                           
 28404                           ;stkvar	_prod @ sp[(-13)+0]
 28405  01395C  0EF3               	movlw	-13
 28406  01395E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28407  013964  0EF4               	movlw	-12
 28408  013966  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28409  01396C  0EF5               	movlw	-11
 28410  01396E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28411  013974  0EF6               	movlw	-10
 28412  013976  0060  F033  FFE3   	movff	btemp+11,plusw1
 28413  01397C  D044               	goto	l8226
 28414  01397E                     l8210:
 28415                           
 28416                           ;stkvar	_temp @ sp[(-13)+8]
 28417  01397E  0EFC               	movlw	-4
 28418  013980  BEE3               	btfsc	plusw1,7,c
 28419  013982  D007               	goto	u6700
 28420  013984  0EFC               	movlw	-4
 28421  013986  50E3               	movf	plusw1,w,c
 28422  013988  E10F               	bnz	l8216
 28423  01398A  0EFB               	movlw	-5
 28424  01398C  04E3               	decf	plusw1,w,c
 28425  01398E  B0D8               	btfsc	status,0,c
 28426  013990  D00B               	goto	l8216
 28427  013992                     u6700:
 28428                           
 28429                           ;stkvar	_prod @ sp[(-13)+0]
 28430  013992  0EF3               	movlw	-13
 28431  013994  6AE3               	clrf	plusw1,c
 28432  013996  0EF4               	movlw	-12
 28433  013998  6AE3               	clrf	plusw1,c
 28434  01399A  0EF5               	movlw	-11
 28435  01399C  6AE3               	clrf	plusw1,c
 28436  01399E  0EF6               	movlw	-10
 28437  0139A0  6AE3               	clrf	plusw1,c
 28438                           
 28439                           ;stkvar	_sign @ sp[(-13)+12]
 28440  0139A2  0EFF               	movlw	-1
 28441  0139A4  6AE3               	clrf	plusw1,c
 28442  0139A6  D02F               	goto	l8226
 28443  0139A8                     l8216:
 28444                           
 28445                           ;stkvar	_temp @ sp[(-13)+8]
 28446                           ;stkvar	_bexp @ sp[(-13)+10]
 28447  0139A8  0EFB               	movlw	-5
 28448  0139AA  006F FF8C  F001    	movff	plusw1,btemp
 28449  0139B0  0EFD               	movlw	-3
 28450  0139B2  0060  F007  FFE3   	movff	btemp,plusw1
 28451                           
 28452                           ;stkvar	_prod @ sp[(-13)+0]
 28453  0139B8  50E1               	movf	fsr1l,w,c
 28454  0139BA  0FF3               	addlw	-13
 28455  0139BC  6ED9               	movwf	fsr2l,c
 28456  0139BE  50E2               	movf	fsr1h,w,c
 28457  0139C0  6EDA               	movwf	fsr2h,c
 28458  0139C2  0EFF               	movlw	255
 28459  0139C4  22DA               	addwfc	fsr2h,f,c
 28460  0139C6  0EFF               	movlw	255
 28461  0139C8  16DE               	andwf	postinc2,f,c
 28462  0139CA  0EFF               	movlw	255
 28463  0139CC  16DE               	andwf	postinc2,f,c
 28464  0139CE  0E7F               	movlw	127
 28465  0139D0  16DE               	andwf	postinc2,f,c
 28466  0139D2  0E00               	movlw	0
 28467  0139D4  16DE               	andwf	postinc2,f,c
 28468                           
 28469                           ;stkvar	_bexp @ sp[(-13)+10]
 28470  0139D6  0EFD               	movlw	-3
 28471  0139D8  A0E3               	btfss	plusw1,0,c
 28472  0139DA  D008               	goto	l8224
 28473                           
 28474                           ;stkvar	_prod @ sp[(-13)+0]
 28475  0139DC  0EF5               	movlw	245
 28476  0139DE  24E1               	addwf	fsr1l,w,c
 28477  0139E0  6ED9               	movwf	fsr2l,c
 28478  0139E2  0EFF               	movlw	255
 28479  0139E4  20E2               	addwfc	fsr1h,w,c
 28480  0139E6  6EDA               	movwf	fsr2h,c
 28481  0139E8  0E00               	movlw	0
 28482  0139EA  8EDB               	bsf	plusw2,7,c
 28483  0139EC                     l8224:
 28484                           
 28485                           ;stkvar	_prod @ sp[(-13)+0]
 28486  0139EC  0EF6               	movlw	246
 28487  0139EE  24E1               	addwf	fsr1l,w,c
 28488  0139F0  6ED9               	movwf	fsr2l,c
 28489  0139F2  0EFF               	movlw	255
 28490  0139F4  20E2               	addwfc	fsr1h,w,c
 28491  0139F6  6EDA               	movwf	fsr2h,c
 28492                           
 28493                           ;stkvar	_bexp @ sp[(-13)+10]
 28494  0139F8  0EFD               	movlw	-3
 28495  0139FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28496  013A00  90D8               	bcf	status,0,c
 28497  013A02  300C               	rrcf	(btemp+11)^0,w,c
 28498  013A04  6EDF               	movwf	indf2,c
 28499  013A06                     l8226:
 28500                           
 28501                           ;stkvar	_sign @ sp[(-13)+12]
 28502  013A06  0EFF               	movlw	-1
 28503  013A08  006F FF8C  F00C    	movff	plusw1,btemp+11
 28504                           
 28505                           ;stkvar	_prod @ sp[(-13)+0]
 28506  013A0E  0EF6               	movlw	246
 28507  013A10  24E1               	addwf	fsr1l,w,c
 28508  013A12  6ED9               	movwf	fsr2l,c
 28509  013A14  0EFF               	movlw	255
 28510  013A16  20E2               	addwfc	fsr1h,w,c
 28511  013A18  6EDA               	movwf	fsr2h,c
 28512  013A1A  500C               	movf	(btemp+11)^0,w,c
 28513  013A1C  12DF               	iorwf	indf2,f,c
 28514                           
 28515                           ;stkvar	_prod @ sp[(-13)+0]
 28516  013A1E  0EF3               	movlw	-13
 28517  013A20  006F FF8C  F001    	movff	plusw1,btemp
 28518  013A26  0EF4               	movlw	-12
 28519  013A28  006F FF8C  F002    	movff	plusw1,btemp+1
 28520  013A2E  0EF5               	movlw	-11
 28521  013A30  006F FF8C  F003    	movff	plusw1,btemp+2
 28522  013A36  0EF6               	movlw	-10
 28523  013A38  006F FF8C  F004    	movff	plusw1,btemp+3
 28524  013A3E                     l2975:
 28525                           
 28526                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28527  013A3E  0EEB               	movlw	235
 28528  013A40  26E1               	addwf	fsr1l,f,c
 28529  013A42  0EFF               	movlw	255
 28530  013A44  22E2               	addwfc	fsr1h,f,c
 28531  013A46  0012               	return		;funcret
 28532  013A48                     __end_of___flmul:
 28533                           	opt callstack 0
 28534                           
 28535 ;; *************** function _SYSTEM_Initialize *****************
 28536 ;; Defined at:
 28537 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28538 ;; Parameters:    Size  Location     Type
 28539 ;;		None
 28540 ;; Auto vars:     Size  Location     Type
 28541 ;;		None
 28542 ;; Return value:  Size  Location     Type
 28543 ;;                  1  [STACK] void 
 28544 ;; Registers used:
 28545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28546 ;; Tracked objects:
 28547 ;;		On entry : 0/0
 28548 ;;		On exit  : 3F/3C
 28549 ;;		Unchanged: 0/0
 28550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28555 ;;Total ram usage:        0 bytes
 28556 ;; Hardware stack levels used:    1
 28557 ;; Hardware stack levels required when called:   17
 28558 ;; This function calls:
 28559 ;;		_ADCC_Initialize
 28560 ;;		_CLKREF_Initialize
 28561 ;;		_DMA1_Initialize
 28562 ;;		_DMA2_Initialize
 28563 ;;		_EXT_INT_Initialize
 28564 ;;		_FVR_Initialize
 28565 ;;		_INTERRUPT_Initialize
 28566 ;;		_OSCILLATOR_Initialize
 28567 ;;		_PIN_MANAGER_Initialize
 28568 ;;		_PMD_Initialize
 28569 ;;		_PWM8_Initialize
 28570 ;;		_SPI1_Initialize
 28571 ;;		_TMR2_Initialize
 28572 ;;		_TMR3_Initialize
 28573 ;;		_TMR5_Initialize
 28574 ;;		_TMR6_Initialize
 28575 ;;		_UART1_Initialize
 28576 ;;		_UART2_Initialize
 28577 ;; This function is called by:
 28578 ;;		_main
 28579 ;; This function uses a reentrant model
 28580 ;;
 28581                           
 28582                           	psect	text107
 28583  01A9A6                     __ptext107:
 28584                           	opt callstack 0
 28585  01A9A6                     _SYSTEM_Initialize:
 28586                           	opt callstack 13
 28587                           
 28588                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28589                           
 28590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28591                           ;incstack = 0
 28592  01A9A6  ECB3  F0D2         	call	_INTERRUPT_Initialize	;wreg free
 28593                           
 28594                           ; BSR set to: 57
 28595                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28596  01A9AA  EC02  F0DB         	call	_PMD_Initialize	;wreg free
 28597                           
 28598                           ; BSR set to: 57
 28599                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28600  01A9AE  EC7B  F0D0         	call	_PIN_MANAGER_Initialize	;wreg free
 28601                           
 28602                           ; BSR set to: 58
 28603                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28604  01A9B2  ECF7  F0DA         	call	_OSCILLATOR_Initialize	;wreg free
 28605                           
 28606                           ; BSR set to: 57
 28607                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28608  01A9B6  EC77  F0DB         	call	_FVR_Initialize	;wreg free
 28609                           
 28610                           ; BSR set to: 62
 28611                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28612  01A9BA  EC48  F0D2         	call	_ADCC_Initialize	;wreg free
 28613                           
 28614                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 28615  01A9BE  ECEC  F0DA         	call	_PWM8_Initialize	;wreg free
 28616                           
 28617                           ; BSR set to: 63
 28618                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 28619  01A9C2  ECD5  F0DA         	call	_TMR2_Initialize	;wreg free
 28620                           
 28621                           ; BSR set to: 57
 28622                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28623  01A9C6  EC51  F0D7         	call	_EXT_INT_Initialize	;wreg free
 28624                           
 28625                           ; BSR set to: 57
 28626                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28627  01A9CA  EC3E  F0D8         	call	_TMR6_Initialize	;wreg free
 28628                           
 28629                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28630  01A9CE  ECA8  F0D5         	call	_TMR3_Initialize	;wreg free
 28631                           
 28632                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28633  01A9D2  EC85  F0D5         	call	_TMR5_Initialize	;wreg free
 28634                           
 28635                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28636  01A9D6  EC62  F0D5         	call	_UART1_Initialize	;wreg free
 28637                           
 28638                           ; BSR set to: 57
 28639                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28640  01A9DA  EC7A  F0D3         	call	_UART2_Initialize	;wreg free
 28641                           
 28642                           ; BSR set to: 57
 28643                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28644  01A9DE  ECE1  F0DA         	call	_SPI1_Initialize	;wreg free
 28645                           
 28646                           ; BSR set to: 61
 28647                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28648  01A9E2  ECD6  F0D3         	call	_DMA2_Initialize	;wreg free
 28649                           
 28650                           ; BSR set to: 59
 28651                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28652  01A9E6  EC13  F0D2         	call	_DMA1_Initialize	;wreg free
 28653                           
 28654                           ; BSR set to: 59
 28655                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28656  01A9EA  EC4B  F0DB         	call	_CLKREF_Initialize	;wreg free
 28657                           
 28658                           ; BSR set to: 60
 28659                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28660  01A9EE  0012               	return		;funcret
 28661  01A9F0                     __end_of_SYSTEM_Initialize:
 28662                           	opt callstack 0
 28663                           
 28664 ;; *************** function _UART2_Initialize *****************
 28665 ;; Defined at:
 28666 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28667 ;; Parameters:    Size  Location     Type
 28668 ;;		None
 28669 ;; Auto vars:     Size  Location     Type
 28670 ;;		None
 28671 ;; Return value:  Size  Location     Type
 28672 ;;                  1  [STACK] void 
 28673 ;; Registers used:
 28674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28675 ;; Tracked objects:
 28676 ;;		On entry : 3F/39
 28677 ;;		On exit  : 3F/39
 28678 ;;		Unchanged: 0/0
 28679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28684 ;;Total ram usage:        0 bytes
 28685 ;; Hardware stack levels used:    1
 28686 ;; Hardware stack levels required when called:   16
 28687 ;; This function calls:
 28688 ;;		_UART2_SetRxInterruptHandler
 28689 ;;		_UART2_SetTxInterruptHandler
 28690 ;; This function is called by:
 28691 ;;		_SYSTEM_Initialize
 28692 ;; This function uses a reentrant model
 28693 ;;
 28694                           
 28695                           	psect	text108
 28696  01A6F4                     __ptext108:
 28697                           	opt callstack 0
 28698  01A6F4                     _UART2_Initialize:
 28699                           	opt callstack 13
 28700                           
 28701                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28702                           
 28703                           ; BSR set to: 60
 28704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28705                           ;incstack = 0
 28706  01A6F4  0139               	movlb	57	; () banked
 28707  01A6F6  9596               	bcf	150,2,b	;volatile
 28708                           
 28709                           ; BSR set to: 57
 28710                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28711  01A6F8  0E06               	movlw	low _UART2_Receive_ISR
 28712  01A6FA  6EE6               	movwf	postinc1,c
 28713  01A6FC  0EB5               	movlw	high _UART2_Receive_ISR
 28714  01A6FE  6EE6               	movwf	postinc1,c
 28715  01A700  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28716  01A702  6EE6               	movwf	postinc1,c
 28717  01A704  ECB7  F0D8         	call	_UART2_SetRxInterruptHandler	;wreg free
 28718                           
 28719                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28720  01A708  0139               	movlb	57	; () banked
 28721  01A70A  9796               	bcf	150,3,b	;volatile
 28722                           
 28723                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28724  01A70C  0E50               	movlw	low _UART2_Transmit_ISR
 28725  01A70E  6EE6               	movwf	postinc1,c
 28726  01A710  0EB0               	movlw	high _UART2_Transmit_ISR
 28727  01A712  6EE6               	movwf	postinc1,c
 28728  01A714  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28729  01A716  6EE6               	movwf	postinc1,c
 28730  01A718  ECA3  F0D8         	call	_UART2_SetTxInterruptHandler	;wreg free
 28731                           
 28732                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28733  01A71C  013D               	movlb	61	; () banked
 28734  01A71E  6BD4               	clrf	212,b	;volatile
 28735                           
 28736                           ; BSR set to: 61
 28737                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28738  01A720  6BD6               	clrf	214,b	;volatile
 28739                           
 28740                           ; BSR set to: 61
 28741                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28742  01A722  6BD8               	clrf	216,b	;volatile
 28743                           
 28744                           ; BSR set to: 61
 28745                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28746  01A724  0EB0               	movlw	176
 28747  01A726  6FDA               	movwf	218,b	;volatile
 28748                           
 28749                           ; BSR set to: 61
 28750                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28751  01A728  0E80               	movlw	128
 28752  01A72A  6FDB               	movwf	219,b	;volatile
 28753                           
 28754                           ; BSR set to: 61
 28755                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28756  01A72C  6BDC               	clrf	220,b	;volatile
 28757                           
 28758                           ; BSR set to: 61
 28759                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28760  01A72E  0E82               	movlw	130
 28761  01A730  6FDD               	movwf	221,b	;volatile
 28762                           
 28763                           ; BSR set to: 61
 28764                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28765  01A732  0E06               	movlw	6
 28766  01A734  6FDE               	movwf	222,b	;volatile
 28767                           
 28768                           ; BSR set to: 61
 28769                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28770  01A736  6BDF               	clrf	223,b	;volatile
 28771                           
 28772                           ; BSR set to: 61
 28773                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28774  01A738  6BE0               	clrf	224,b	;volatile
 28775                           
 28776                           ; BSR set to: 61
 28777                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28778  01A73A  6BE1               	clrf	225,b	;volatile
 28779                           
 28780                           ; BSR set to: 61
 28781                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28782  01A73C  6BE2               	clrf	226,b	;volatile
 28783                           
 28784                           ; BSR set to: 61
 28785                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28786  01A73E  6A35               	clrf	_uart2TxHead^0,c	;volatile
 28787                           
 28788                           ; BSR set to: 61
 28789                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28790  01A740  6A34               	clrf	_uart2TxTail^0,c	;volatile
 28791                           
 28792                           ; BSR set to: 61
 28793                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28794  01A742  0E40               	movlw	64
 28795  01A744  6E33               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28796                           
 28797                           ; BSR set to: 61
 28798                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28799  01A746  6A32               	clrf	_uart2RxHead^0,c	;volatile
 28800                           
 28801                           ; BSR set to: 61
 28802                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28803  01A748  6A31               	clrf	_uart2RxTail^0,c	;volatile
 28804                           
 28805                           ; BSR set to: 61
 28806                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28807  01A74A  6A30               	clrf	_uart2RxCount^0,c	;volatile
 28808                           
 28809                           ; BSR set to: 61
 28810                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28811  01A74C  0139               	movlb	57	; () banked
 28812  01A74E  8596               	bsf	150,2,b	;volatile
 28813                           
 28814                           ; BSR set to: 57
 28815                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28816  01A750  0012               	return		;funcret
 28817  01A752                     __end_of_UART2_Initialize:
 28818                           	opt callstack 0
 28819                           
 28820 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28821 ;; Defined at:
 28822 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28823 ;; Parameters:    Size  Location     Type
 28824 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28825 ;;		 -> UART2_Transmit_ISR(1), 
 28826 ;; Auto vars:     Size  Location     Type
 28827 ;;		None
 28828 ;; Return value:  Size  Location     Type
 28829 ;;                  1  [STACK] void 
 28830 ;; Registers used:
 28831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28832 ;; Tracked objects:
 28833 ;;		On entry : 3F/39
 28834 ;;		On exit  : 0/0
 28835 ;;		Unchanged: 0/0
 28836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28841 ;;Total ram usage:        0 bytes
 28842 ;; Hardware stack levels used:    1
 28843 ;; Hardware stack levels required when called:   15
 28844 ;; This function calls:
 28845 ;;		Nothing
 28846 ;; This function is called by:
 28847 ;;		_UART2_Initialize
 28848 ;; This function uses a reentrant model
 28849 ;;
 28850                           
 28851                           	psect	text109
 28852  01B146                     __ptext109:
 28853                           	opt callstack 0
 28854  01B146                     _UART2_SetTxInterruptHandler:
 28855                           	opt callstack 13
 28856                           
 28857                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28858                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28859                           
 28860                           ; BSR set to: 57
 28861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28862                           ;incstack = 0
 28863  01B146  50E1               	movf	fsr1l,w,c
 28864  01B148  0FFD               	addlw	-3
 28865  01B14A  6ED9               	movwf	fsr2l,c
 28866  01B14C  50E2               	movf	fsr1h,w,c
 28867  01B14E  6EDA               	movwf	fsr2h,c
 28868  01B150  0EFF               	movlw	255
 28869  01B152  22DA               	addwfc	fsr2h,f,c
 28870  01B154  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28871  01B15A  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28872  01B160  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28873                           
 28874                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28875  01B166  52E5               	movf	postdec1,f,c
 28876  01B168  52E5               	movf	postdec1,f,c
 28877  01B16A  52E5               	movf	postdec1,f,c
 28878  01B16C  0012               	return		;funcret
 28879  01B16E                     __end_of_UART2_SetTxInterruptHandler:
 28880                           	opt callstack 0
 28881                           
 28882 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28883 ;; Defined at:
 28884 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28885 ;; Parameters:    Size  Location     Type
 28886 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28887 ;;		 -> UART2_Receive_ISR(1), 
 28888 ;; Auto vars:     Size  Location     Type
 28889 ;;		None
 28890 ;; Return value:  Size  Location     Type
 28891 ;;                  1  [STACK] void 
 28892 ;; Registers used:
 28893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28894 ;; Tracked objects:
 28895 ;;		On entry : 3F/39
 28896 ;;		On exit  : 0/0
 28897 ;;		Unchanged: 0/0
 28898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28903 ;;Total ram usage:        0 bytes
 28904 ;; Hardware stack levels used:    1
 28905 ;; Hardware stack levels required when called:   15
 28906 ;; This function calls:
 28907 ;;		Nothing
 28908 ;; This function is called by:
 28909 ;;		_UART2_Initialize
 28910 ;; This function uses a reentrant model
 28911 ;;
 28912                           
 28913                           	psect	text110
 28914  01B16E                     __ptext110:
 28915                           	opt callstack 0
 28916  01B16E                     _UART2_SetRxInterruptHandler:
 28917                           	opt callstack 13
 28918                           
 28919                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28920                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28921                           
 28922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28923                           ;incstack = 0
 28924  01B16E  50E1               	movf	fsr1l,w,c
 28925  01B170  0FFD               	addlw	-3
 28926  01B172  6ED9               	movwf	fsr2l,c
 28927  01B174  50E2               	movf	fsr1h,w,c
 28928  01B176  6EDA               	movwf	fsr2h,c
 28929  01B178  0EFF               	movlw	255
 28930  01B17A  22DA               	addwfc	fsr2h,f,c
 28931  01B17C  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28932  01B182  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28933  01B188  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28934                           
 28935                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28936  01B18E  52E5               	movf	postdec1,f,c
 28937  01B190  52E5               	movf	postdec1,f,c
 28938  01B192  52E5               	movf	postdec1,f,c
 28939  01B194  0012               	return		;funcret
 28940  01B196                     __end_of_UART2_SetRxInterruptHandler:
 28941                           	opt callstack 0
 28942                           
 28943 ;; *************** function _UART1_Initialize *****************
 28944 ;; Defined at:
 28945 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28946 ;; Parameters:    Size  Location     Type
 28947 ;;		None
 28948 ;; Auto vars:     Size  Location     Type
 28949 ;;		None
 28950 ;; Return value:  Size  Location     Type
 28951 ;;                  1  [STACK] void 
 28952 ;; Registers used:
 28953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28954 ;; Tracked objects:
 28955 ;;		On entry : 0/39
 28956 ;;		On exit  : 3F/39
 28957 ;;		Unchanged: 0/0
 28958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28963 ;;Total ram usage:        0 bytes
 28964 ;; Hardware stack levels used:    1
 28965 ;; Hardware stack levels required when called:   16
 28966 ;; This function calls:
 28967 ;;		_UART1_SetRxInterruptHandler
 28968 ;; This function is called by:
 28969 ;;		_SYSTEM_Initialize
 28970 ;; This function uses a reentrant model
 28971 ;;
 28972                           
 28973                           	psect	text111
 28974  01AAC4                     __ptext111:
 28975                           	opt callstack 0
 28976  01AAC4                     _UART1_Initialize:
 28977                           	opt callstack 13
 28978                           
 28979                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28980                           
 28981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28982                           ;incstack = 0
 28983  01AAC4  0139               	movlb	57	; () banked
 28984  01AAC6  9793               	bcf	147,3,b	;volatile
 28985                           
 28986                           ; BSR set to: 57
 28987                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 28988  01AAC8  0E40               	movlw	low _UART1_Receive_ISR
 28989  01AACA  6EE6               	movwf	postinc1,c
 28990  01AACC  0EB5               	movlw	high _UART1_Receive_ISR
 28991  01AACE  6EE6               	movwf	postinc1,c
 28992  01AAD0  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 28993  01AAD2  6EE6               	movwf	postinc1,c
 28994  01AAD4  ECCB  F0D8         	call	_UART1_SetRxInterruptHandler	;wreg free
 28995                           
 28996                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 28997  01AAD8  013D               	movlb	61	; () banked
 28998  01AADA  6BEC               	clrf	236,b	;volatile
 28999                           
 29000                           ; BSR set to: 61
 29001                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29002  01AADC  6BED               	clrf	237,b	;volatile
 29003                           
 29004                           ; BSR set to: 61
 29005                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29006  01AADE  6BEE               	clrf	238,b	;volatile
 29007                           
 29008                           ; BSR set to: 61
 29009                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29010  01AAE0  6BEF               	clrf	239,b	;volatile
 29011                           
 29012                           ; BSR set to: 61
 29013                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29014  01AAE2  6BF0               	clrf	240,b	;volatile
 29015                           
 29016                           ; BSR set to: 61
 29017                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29018  01AAE4  6BF1               	clrf	241,b	;volatile
 29019                           
 29020                           ; BSR set to: 61
 29021                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29022  01AAE6  0EB0               	movlw	176
 29023  01AAE8  6FF2               	movwf	242,b	;volatile
 29024                           
 29025                           ; BSR set to: 61
 29026                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29027  01AAEA  0E80               	movlw	128
 29028  01AAEC  6FF3               	movwf	243,b	;volatile
 29029                           
 29030                           ; BSR set to: 61
 29031                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29032  01AAEE  6BF4               	clrf	244,b	;volatile
 29033                           
 29034                           ; BSR set to: 61
 29035                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29036  01AAF0  0E8A               	movlw	138
 29037  01AAF2  6FF5               	movwf	245,b	;volatile
 29038                           
 29039                           ; BSR set to: 61
 29040                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29041  01AAF4  6BF6               	clrf	246,b	;volatile
 29042                           
 29043                           ; BSR set to: 61
 29044                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29045  01AAF6  6BF7               	clrf	247,b	;volatile
 29046                           
 29047                           ; BSR set to: 61
 29048                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29049  01AAF8  6BF8               	clrf	248,b	;volatile
 29050                           
 29051                           ; BSR set to: 61
 29052                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29053  01AAFA  6BF9               	clrf	249,b	;volatile
 29054                           
 29055                           ; BSR set to: 61
 29056                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29057  01AAFC  6BFA               	clrf	250,b	;volatile
 29058                           
 29059                           ; BSR set to: 61
 29060                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29061  01AAFE  6A38               	clrf	_uart1RxHead^0,c	;volatile
 29062                           
 29063                           ; BSR set to: 61
 29064                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29065  01AB00  6A37               	clrf	_uart1RxTail^0,c	;volatile
 29066                           
 29067                           ; BSR set to: 61
 29068                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29069  01AB02  6A36               	clrf	_uart1RxCount^0,c	;volatile
 29070                           
 29071                           ; BSR set to: 61
 29072                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29073  01AB04  0139               	movlb	57	; () banked
 29074  01AB06  8793               	bsf	147,3,b	;volatile
 29075                           
 29076                           ; BSR set to: 57
 29077                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29078  01AB08  0012               	return		;funcret
 29079  01AB0A                     __end_of_UART1_Initialize:
 29080                           	opt callstack 0
 29081                           
 29082 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29083 ;; Defined at:
 29084 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29085 ;; Parameters:    Size  Location     Type
 29086 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29087 ;;		 -> UART1_Receive_ISR(1), 
 29088 ;; Auto vars:     Size  Location     Type
 29089 ;;		None
 29090 ;; Return value:  Size  Location     Type
 29091 ;;                  1  [STACK] void 
 29092 ;; Registers used:
 29093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29094 ;; Tracked objects:
 29095 ;;		On entry : 3F/39
 29096 ;;		On exit  : 0/0
 29097 ;;		Unchanged: 0/0
 29098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29103 ;;Total ram usage:        0 bytes
 29104 ;; Hardware stack levels used:    1
 29105 ;; Hardware stack levels required when called:   15
 29106 ;; This function calls:
 29107 ;;		Nothing
 29108 ;; This function is called by:
 29109 ;;		_UART1_Initialize
 29110 ;; This function uses a reentrant model
 29111 ;;
 29112                           
 29113                           	psect	text112
 29114  01B196                     __ptext112:
 29115                           	opt callstack 0
 29116  01B196                     _UART1_SetRxInterruptHandler:
 29117                           	opt callstack 13
 29118                           
 29119                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29120                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29121                           
 29122                           ; BSR set to: 57
 29123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29124                           ;incstack = 0
 29125  01B196  50E1               	movf	fsr1l,w,c
 29126  01B198  0FFD               	addlw	-3
 29127  01B19A  6ED9               	movwf	fsr2l,c
 29128  01B19C  50E2               	movf	fsr1h,w,c
 29129  01B19E  6EDA               	movwf	fsr2h,c
 29130  01B1A0  0EFF               	movlw	255
 29131  01B1A2  22DA               	addwfc	fsr2h,f,c
 29132  01B1A4  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29133  01B1AA  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29134  01B1B0  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29135                           
 29136                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29137  01B1B6  52E5               	movf	postdec1,f,c
 29138  01B1B8  52E5               	movf	postdec1,f,c
 29139  01B1BA  52E5               	movf	postdec1,f,c
 29140  01B1BC  0012               	return		;funcret
 29141  01B1BE                     __end_of_UART1_SetRxInterruptHandler:
 29142                           	opt callstack 0
 29143                           
 29144 ;; *************** function _TMR6_Initialize *****************
 29145 ;; Defined at:
 29146 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29147 ;; Parameters:    Size  Location     Type
 29148 ;;		None
 29149 ;; Auto vars:     Size  Location     Type
 29150 ;;		None
 29151 ;; Return value:  Size  Location     Type
 29152 ;;                  1  [STACK] void 
 29153 ;; Registers used:
 29154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29155 ;; Tracked objects:
 29156 ;;		On entry : 3F/39
 29157 ;;		On exit  : 0/0
 29158 ;;		Unchanged: 0/0
 29159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29164 ;;Total ram usage:        0 bytes
 29165 ;; Hardware stack levels used:    1
 29166 ;; Hardware stack levels required when called:   16
 29167 ;; This function calls:
 29168 ;;		_TMR6_SetInterruptHandler
 29169 ;; This function is called by:
 29170 ;;		_SYSTEM_Initialize
 29171 ;; This function uses a reentrant model
 29172 ;;
 29173                           
 29174                           	psect	text113
 29175  01B07C                     __ptext113:
 29176                           	opt callstack 0
 29177  01B07C                     _TMR6_Initialize:
 29178                           	opt callstack 13
 29179                           
 29180                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29181                           
 29182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29183                           ;incstack = 0
 29184  01B07C  0E01               	movlw	1
 29185  01B07E  6E96               	movwf	150,c	;volatile
 29186                           
 29187                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29188  01B080  6A95               	clrf	149,c	;volatile
 29189                           
 29190                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29191  01B082  6A97               	clrf	151,c	;volatile
 29192                           
 29193                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29194  01B084  0E7C               	movlw	124
 29195  01B086  6E93               	movwf	147,c	;volatile
 29196                           
 29197                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29198  01B088  6A92               	clrf	146,c	;volatile
 29199                           
 29200                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29201  01B08A  0139               	movlb	57	; () banked
 29202  01B08C  91A9               	bcf	169,0,b	;volatile
 29203                           
 29204                           ; BSR set to: 57
 29205                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29206  01B08E  8199               	bsf	153,0,b	;volatile
 29207                           
 29208                           ; BSR set to: 57
 29209                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29210  01B090  0E58               	movlw	low _TMR6_DefaultInterruptHandler
 29211  01B092  6EE6               	movwf	postinc1,c
 29212  01B094  0EA9               	movlw	high _TMR6_DefaultInterruptHandler
 29213  01B096  6EE6               	movwf	postinc1,c
 29214  01B098  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29215  01B09A  6EE6               	movwf	postinc1,c
 29216  01B09C  ECDF  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 29217                           
 29218                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29219  01B0A0  0EE0               	movlw	224
 29220  01B0A2  6E94               	movwf	148,c	;volatile
 29221                           
 29222                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29223  01B0A4  0012               	return		;funcret
 29224  01B0A6                     __end_of_TMR6_Initialize:
 29225                           	opt callstack 0
 29226                           
 29227 ;; *************** function _TMR6_SetInterruptHandler *****************
 29228 ;; Defined at:
 29229 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29230 ;; Parameters:    Size  Location     Type
 29231 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29232 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29233 ;; Auto vars:     Size  Location     Type
 29234 ;;		None
 29235 ;; Return value:  Size  Location     Type
 29236 ;;                  1  [STACK] void 
 29237 ;; Registers used:
 29238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29239 ;; Tracked objects:
 29240 ;;		On entry : 3F/39
 29241 ;;		On exit  : 0/0
 29242 ;;		Unchanged: 0/0
 29243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29248 ;;Total ram usage:        0 bytes
 29249 ;; Hardware stack levels used:    1
 29250 ;; Hardware stack levels required when called:   15
 29251 ;; This function calls:
 29252 ;;		Nothing
 29253 ;; This function is called by:
 29254 ;;		_TMR6_Initialize
 29255 ;; This function uses a reentrant model
 29256 ;;
 29257                           
 29258                           	psect	text114
 29259  01B1BE                     __ptext114:
 29260                           	opt callstack 0
 29261  01B1BE                     _TMR6_SetInterruptHandler:
 29262                           	opt callstack 13
 29263                           
 29264                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29265                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29266                           
 29267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29268                           ;incstack = 0
 29269  01B1BE  50E1               	movf	fsr1l,w,c
 29270  01B1C0  0FFD               	addlw	-3
 29271  01B1C2  6ED9               	movwf	fsr2l,c
 29272  01B1C4  50E2               	movf	fsr1h,w,c
 29273  01B1C6  6EDA               	movwf	fsr2h,c
 29274  01B1C8  0EFF               	movlw	255
 29275  01B1CA  22DA               	addwfc	fsr2h,f,c
 29276  01B1CC  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29277  01B1D2  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29278  01B1D8  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29279                           
 29280                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29281  01B1DE  52E5               	movf	postdec1,f,c
 29282  01B1E0  52E5               	movf	postdec1,f,c
 29283  01B1E2  52E5               	movf	postdec1,f,c
 29284  01B1E4  0012               	return		;funcret
 29285  01B1E6                     __end_of_TMR6_SetInterruptHandler:
 29286                           	opt callstack 0
 29287                           
 29288 ;; *************** function _TMR5_Initialize *****************
 29289 ;; Defined at:
 29290 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 29291 ;; Parameters:    Size  Location     Type
 29292 ;;		None
 29293 ;; Auto vars:     Size  Location     Type
 29294 ;;		None
 29295 ;; Return value:  Size  Location     Type
 29296 ;;                  1  [STACK] void 
 29297 ;; Registers used:
 29298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29299 ;; Tracked objects:
 29300 ;;		On entry : 0/39
 29301 ;;		On exit  : 0/0
 29302 ;;		Unchanged: 0/0
 29303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29308 ;;Total ram usage:        0 bytes
 29309 ;; Hardware stack levels used:    1
 29310 ;; Hardware stack levels required when called:   16
 29311 ;; This function calls:
 29312 ;;		_TMR5_SetInterruptHandler
 29313 ;; This function is called by:
 29314 ;;		_SYSTEM_Initialize
 29315 ;; This function uses a reentrant model
 29316 ;;
 29317                           
 29318                           	psect	text115
 29319  01AB0A                     __ptext115:
 29320                           	opt callstack 0
 29321  01AB0A                     _TMR5_Initialize:
 29322                           	opt callstack 13
 29323                           
 29324                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 29325                           
 29326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29327                           ;incstack = 0
 29328  01AB0A  6A9B               	clrf	155,c	;volatile
 29329                           
 29330                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 29331  01AB0C  6A9C               	clrf	156,c	;volatile
 29332                           
 29333                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 29334  01AB0E  0E01               	movlw	1
 29335  01AB10  6E9D               	movwf	157,c	;volatile
 29336                           
 29337                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 29338  01AB12  0E63               	movlw	99
 29339  01AB14  6E99               	movwf	153,c	;volatile
 29340                           
 29341                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 29342  01AB16  0EC0               	movlw	192
 29343  01AB18  6E98               	movwf	152,c	;volatile
 29344                           
 29345                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29346  01AB1A  5098               	movf	152,w,c	;volatile
 29347  01AB1C  006F FE64  F001    	movff	16281,btemp	;volatile
 29348  01AB22  6A02               	clrf	(btemp+1)^0,c
 29349  01AB24  0060  F004  F002   	movff	btemp,btemp+1
 29350  01AB2A  6A01               	clrf	btemp^0,c
 29351  01AB2C  1001               	iorwf	btemp^0,w,c
 29352  01AB2E  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 29353  01AB30  5002               	movf	(btemp+1)^0,w,c
 29354  01AB32  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29355                           
 29356                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 29357  01AB34  0139               	movlb	57	; () banked
 29358  01AB36  9DA8               	bcf	168,6,b	;volatile
 29359                           
 29360                           ; BSR set to: 57
 29361                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 29362  01AB38  8D98               	bsf	152,6,b	;volatile
 29363                           
 29364                           ; BSR set to: 57
 29365                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29366  01AB3A  0ED6               	movlw	low _TMR5_DefaultInterruptHandler
 29367  01AB3C  6EE6               	movwf	postinc1,c
 29368  01AB3E  0EAE               	movlw	high _TMR5_DefaultInterruptHandler
 29369  01AB40  6EE6               	movwf	postinc1,c
 29370  01AB42  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29371  01AB44  6EE6               	movwf	postinc1,c
 29372  01AB46  ECF3  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 29373                           
 29374                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 29375  01AB4A  0E31               	movlw	49
 29376  01AB4C  6E9A               	movwf	154,c	;volatile
 29377                           
 29378                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29379  01AB4E  0012               	return		;funcret
 29380  01AB50                     __end_of_TMR5_Initialize:
 29381                           	opt callstack 0
 29382                           
 29383 ;; *************** function _TMR5_SetInterruptHandler *****************
 29384 ;; Defined at:
 29385 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 29386 ;; Parameters:    Size  Location     Type
 29387 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29388 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29389 ;; Auto vars:     Size  Location     Type
 29390 ;;		None
 29391 ;; Return value:  Size  Location     Type
 29392 ;;                  1  [STACK] void 
 29393 ;; Registers used:
 29394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29395 ;; Tracked objects:
 29396 ;;		On entry : 3F/39
 29397 ;;		On exit  : 0/0
 29398 ;;		Unchanged: 0/0
 29399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29404 ;;Total ram usage:        0 bytes
 29405 ;; Hardware stack levels used:    1
 29406 ;; Hardware stack levels required when called:   15
 29407 ;; This function calls:
 29408 ;;		Nothing
 29409 ;; This function is called by:
 29410 ;;		_TMR5_Initialize
 29411 ;; This function uses a reentrant model
 29412 ;;
 29413                           
 29414                           	psect	text116
 29415  01B1E6                     __ptext116:
 29416                           	opt callstack 0
 29417  01B1E6                     _TMR5_SetInterruptHandler:
 29418                           	opt callstack 13
 29419                           
 29420                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29421                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29422                           
 29423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29424                           ;incstack = 0
 29425  01B1E6  50E1               	movf	fsr1l,w,c
 29426  01B1E8  0FFD               	addlw	-3
 29427  01B1EA  6ED9               	movwf	fsr2l,c
 29428  01B1EC  50E2               	movf	fsr1h,w,c
 29429  01B1EE  6EDA               	movwf	fsr2h,c
 29430  01B1F0  0EFF               	movlw	255
 29431  01B1F2  22DA               	addwfc	fsr2h,f,c
 29432  01B1F4  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29433  01B1FA  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29434  01B200  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29435                           
 29436                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29437  01B206  52E5               	movf	postdec1,f,c
 29438  01B208  52E5               	movf	postdec1,f,c
 29439  01B20A  52E5               	movf	postdec1,f,c
 29440  01B20C  0012               	return		;funcret
 29441  01B20E                     __end_of_TMR5_SetInterruptHandler:
 29442                           	opt callstack 0
 29443                           
 29444 ;; *************** function _TMR3_Initialize *****************
 29445 ;; Defined at:
 29446 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29447 ;; Parameters:    Size  Location     Type
 29448 ;;		None
 29449 ;; Auto vars:     Size  Location     Type
 29450 ;;		None
 29451 ;; Return value:  Size  Location     Type
 29452 ;;                  1  [STACK] void 
 29453 ;; Registers used:
 29454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29455 ;; Tracked objects:
 29456 ;;		On entry : 0/39
 29457 ;;		On exit  : 0/0
 29458 ;;		Unchanged: 0/0
 29459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29464 ;;Total ram usage:        0 bytes
 29465 ;; Hardware stack levels used:    1
 29466 ;; Hardware stack levels required when called:   16
 29467 ;; This function calls:
 29468 ;;		_TMR3_SetInterruptHandler
 29469 ;; This function is called by:
 29470 ;;		_SYSTEM_Initialize
 29471 ;; This function uses a reentrant model
 29472 ;;
 29473                           
 29474                           	psect	text117
 29475  01AB50                     __ptext117:
 29476                           	opt callstack 0
 29477  01AB50                     _TMR3_Initialize:
 29478                           	opt callstack 13
 29479                           
 29480                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29481                           
 29482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29483                           ;incstack = 0
 29484  01AB50  6AA7               	clrf	167,c	;volatile
 29485                           
 29486                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29487  01AB52  6AA8               	clrf	168,c	;volatile
 29488                           
 29489                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29490  01AB54  0E01               	movlw	1
 29491  01AB56  6EA9               	movwf	169,c	;volatile
 29492                           
 29493                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29494  01AB58  0E3C               	movlw	60
 29495  01AB5A  6EA5               	movwf	165,c	;volatile
 29496                           
 29497                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29498  01AB5C  0EB0               	movlw	176
 29499  01AB5E  6EA4               	movwf	164,c	;volatile
 29500                           
 29501                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29502  01AB60  50A4               	movf	164,w,c	;volatile
 29503  01AB62  006F FE94  F001    	movff	16293,btemp	;volatile
 29504  01AB68  6A02               	clrf	(btemp+1)^0,c
 29505  01AB6A  0060  F004  F002   	movff	btemp,btemp+1
 29506  01AB70  6A01               	clrf	btemp^0,c
 29507  01AB72  1001               	iorwf	btemp^0,w,c
 29508  01AB74  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 29509  01AB76  5002               	movf	(btemp+1)^0,w,c
 29510  01AB78  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29511                           
 29512                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29513  01AB7A  0139               	movlb	57	; () banked
 29514  01AB7C  9DA6               	bcf	166,6,b	;volatile
 29515                           
 29516                           ; BSR set to: 57
 29517                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29518  01AB7E  8D96               	bsf	150,6,b	;volatile
 29519                           
 29520                           ; BSR set to: 57
 29521                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29522  01AB80  0E18               	movlw	low _TMR3_DefaultInterruptHandler
 29523  01AB82  6EE6               	movwf	postinc1,c
 29524  01AB84  0EB7               	movlw	high _TMR3_DefaultInterruptHandler
 29525  01AB86  6EE6               	movwf	postinc1,c
 29526  01AB88  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29527  01AB8A  6EE6               	movwf	postinc1,c
 29528  01AB8C  EC07  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
 29529                           
 29530                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29531  01AB90  0E31               	movlw	49
 29532  01AB92  6EA6               	movwf	166,c	;volatile
 29533                           
 29534                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29535  01AB94  0012               	return		;funcret
 29536  01AB96                     __end_of_TMR3_Initialize:
 29537                           	opt callstack 0
 29538                           
 29539 ;; *************** function _TMR3_SetInterruptHandler *****************
 29540 ;; Defined at:
 29541 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29542 ;; Parameters:    Size  Location     Type
 29543 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29544 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29545 ;; Auto vars:     Size  Location     Type
 29546 ;;		None
 29547 ;; Return value:  Size  Location     Type
 29548 ;;                  1  [STACK] void 
 29549 ;; Registers used:
 29550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29551 ;; Tracked objects:
 29552 ;;		On entry : 0/1
 29553 ;;		On exit  : 0/0
 29554 ;;		Unchanged: 0/0
 29555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29560 ;;Total ram usage:        0 bytes
 29561 ;; Hardware stack levels used:    1
 29562 ;; Hardware stack levels required when called:   15
 29563 ;; This function calls:
 29564 ;;		Nothing
 29565 ;; This function is called by:
 29566 ;;		_TMR3_Initialize
 29567 ;;		_init_bsoc
 29568 ;; This function uses a reentrant model
 29569 ;;
 29570                           
 29571                           	psect	text118
 29572  01B20E                     __ptext118:
 29573                           	opt callstack 0
 29574  01B20E                     _TMR3_SetInterruptHandler:
 29575                           	opt callstack 14
 29576                           
 29577                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29578                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29579                           
 29580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29581                           ;incstack = 0
 29582  01B20E  50E1               	movf	fsr1l,w,c
 29583  01B210  0FFD               	addlw	-3
 29584  01B212  6ED9               	movwf	fsr2l,c
 29585  01B214  50E2               	movf	fsr1h,w,c
 29586  01B216  6EDA               	movwf	fsr2h,c
 29587  01B218  0EFF               	movlw	255
 29588  01B21A  22DA               	addwfc	fsr2h,f,c
 29589  01B21C  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29590  01B222  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29591  01B228  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29592                           
 29593                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29594  01B22E  52E5               	movf	postdec1,f,c
 29595  01B230  52E5               	movf	postdec1,f,c
 29596  01B232  52E5               	movf	postdec1,f,c
 29597  01B234  0012               	return		;funcret
 29598  01B236                     __end_of_TMR3_SetInterruptHandler:
 29599                           	opt callstack 0
 29600                           
 29601 ;; *************** function _TMR2_Initialize *****************
 29602 ;; Defined at:
 29603 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29604 ;; Parameters:    Size  Location     Type
 29605 ;;		None
 29606 ;; Auto vars:     Size  Location     Type
 29607 ;;		None
 29608 ;; Return value:  Size  Location     Type
 29609 ;;                  1  [STACK] void 
 29610 ;; Registers used:
 29611 ;;		wreg, status,2
 29612 ;; Tracked objects:
 29613 ;;		On entry : 3F/3F
 29614 ;;		On exit  : 3F/39
 29615 ;;		Unchanged: 0/0
 29616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29621 ;;Total ram usage:        0 bytes
 29622 ;; Hardware stack levels used:    1
 29623 ;; Hardware stack levels required when called:   15
 29624 ;; This function calls:
 29625 ;;		Nothing
 29626 ;; This function is called by:
 29627 ;;		_SYSTEM_Initialize
 29628 ;; This function uses a reentrant model
 29629 ;;
 29630                           
 29631                           	psect	text119
 29632  01B5AA                     __ptext119:
 29633                           	opt callstack 0
 29634  01B5AA                     _TMR2_Initialize:
 29635                           	opt callstack 14
 29636                           
 29637                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29638                           
 29639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29640                           ;incstack = 0
 29641  01B5AA  0E01               	movlw	1
 29642  01B5AC  6EAE               	movwf	174,c	;volatile
 29643                           
 29644                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29645  01B5AE  6AAD               	clrf	173,c	;volatile
 29646                           
 29647                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29648  01B5B0  6AAF               	clrf	175,c	;volatile
 29649                           
 29650                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29651  01B5B2  0E63               	movlw	99
 29652  01B5B4  6EAB               	movwf	171,c	;volatile
 29653                           
 29654                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29655  01B5B6  6AAA               	clrf	170,c	;volatile
 29656                           
 29657                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29658  01B5B8  0139               	movlb	57	; () banked
 29659  01B5BA  95A4               	bcf	164,2,b	;volatile
 29660                           
 29661                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29662  01B5BC  0EC0               	movlw	192
 29663  01B5BE  6EAC               	movwf	172,c	;volatile
 29664                           
 29665                           ; BSR set to: 57
 29666                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29667  01B5C0  0012               	return		;funcret
 29668  01B5C2                     __end_of_TMR2_Initialize:
 29669                           	opt callstack 0
 29670                           
 29671 ;; *************** function _SPI1_Initialize *****************
 29672 ;; Defined at:
 29673 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29674 ;; Parameters:    Size  Location     Type
 29675 ;;		None
 29676 ;; Auto vars:     Size  Location     Type
 29677 ;;		None
 29678 ;; Return value:  Size  Location     Type
 29679 ;;                  1  [STACK] void 
 29680 ;; Registers used:
 29681 ;;		wreg, status,2
 29682 ;; Tracked objects:
 29683 ;;		On entry : 3F/39
 29684 ;;		On exit  : 3F/3D
 29685 ;;		Unchanged: 0/0
 29686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29691 ;;Total ram usage:        0 bytes
 29692 ;; Hardware stack levels used:    1
 29693 ;; Hardware stack levels required when called:   15
 29694 ;; This function calls:
 29695 ;;		Nothing
 29696 ;; This function is called by:
 29697 ;;		_SYSTEM_Initialize
 29698 ;; This function uses a reentrant model
 29699 ;;
 29700                           
 29701                           	psect	text120
 29702  01B5C2                     __ptext120:
 29703                           	opt callstack 0
 29704  01B5C2                     _SPI1_Initialize:
 29705                           	opt callstack 14
 29706                           
 29707                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29708                           
 29709                           ; BSR set to: 57
 29710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29711                           ;incstack = 0
 29712  01B5C2  0E40               	movlw	64
 29713  01B5C4  013D               	movlb	61	; () banked
 29714  01B5C6  6F15               	movwf	21,b	;volatile
 29715                           
 29716                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29717  01B5C8  0E03               	movlw	3
 29718  01B5CA  6F16               	movwf	22,b	;volatile
 29719                           
 29720                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29721  01B5CC  0E4F               	movlw	79
 29722  01B5CE  6F19               	movwf	25,b	;volatile
 29723                           
 29724                           ; BSR set to: 61
 29725                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29726  01B5D0  6B1C               	clrf	28,b	;volatile
 29727                           
 29728                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29729  01B5D2  0E83               	movlw	131
 29730  01B5D4  6F14               	movwf	20,b	;volatile
 29731                           
 29732                           ; BSR set to: 61
 29733                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29734  01B5D6  0012               	return		;funcret
 29735  01B5D8                     __end_of_SPI1_Initialize:
 29736                           	opt callstack 0
 29737                           
 29738 ;; *************** function _PWM8_Initialize *****************
 29739 ;; Defined at:
 29740 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29741 ;; Parameters:    Size  Location     Type
 29742 ;;		None
 29743 ;; Auto vars:     Size  Location     Type
 29744 ;;		None
 29745 ;; Return value:  Size  Location     Type
 29746 ;;                  1  [STACK] void 
 29747 ;; Registers used:
 29748 ;;		wreg, status,2
 29749 ;; Tracked objects:
 29750 ;;		On entry : 0/3E
 29751 ;;		On exit  : 3F/3F
 29752 ;;		Unchanged: 0/0
 29753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29758 ;;Total ram usage:        0 bytes
 29759 ;; Hardware stack levels used:    1
 29760 ;; Hardware stack levels required when called:   15
 29761 ;; This function calls:
 29762 ;;		Nothing
 29763 ;; This function is called by:
 29764 ;;		_SYSTEM_Initialize
 29765 ;; This function uses a reentrant model
 29766 ;;
 29767                           
 29768                           	psect	text121
 29769  01B5D8                     __ptext121:
 29770                           	opt callstack 0
 29771  01B5D8                     _PWM8_Initialize:
 29772                           	opt callstack 14
 29773                           
 29774                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29775                           
 29776                           ; BSR set to: 61
 29777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29778                           ;incstack = 0
 29779  01B5D8  0E80               	movlw	128
 29780  01B5DA  6E62               	movwf	98,c	;volatile
 29781                           
 29782                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29783  01B5DC  6A61               	clrf	97,c	;volatile
 29784                           
 29785                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29786  01B5DE  0E40               	movlw	64
 29787  01B5E0  6E60               	movwf	96,c	;volatile
 29788                           
 29789                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29790  01B5E2  013F               	movlb	63	; () banked
 29791  01B5E4  515F               	movf	95,w,b	;volatile
 29792  01B5E6  0B3F               	andlw	-193
 29793  01B5E8  0940               	iorlw	64
 29794  01B5EA  6F5F               	movwf	95,b	;volatile
 29795                           
 29796                           ; BSR set to: 63
 29797                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29798  01B5EC  0012               	return		;funcret
 29799  01B5EE                     __end_of_PWM8_Initialize:
 29800                           	opt callstack 0
 29801                           
 29802 ;; *************** function _PMD_Initialize *****************
 29803 ;; Defined at:
 29804 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29805 ;; Parameters:    Size  Location     Type
 29806 ;;		None
 29807 ;; Auto vars:     Size  Location     Type
 29808 ;;		None
 29809 ;; Return value:  Size  Location     Type
 29810 ;;                  1  [STACK] void 
 29811 ;; Registers used:
 29812 ;;		None
 29813 ;; Tracked objects:
 29814 ;;		On entry : 3F/39
 29815 ;;		On exit  : 3F/39
 29816 ;;		Unchanged: 0/0
 29817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29822 ;;Total ram usage:        0 bytes
 29823 ;; Hardware stack levels used:    1
 29824 ;; Hardware stack levels required when called:   15
 29825 ;; This function calls:
 29826 ;;		Nothing
 29827 ;; This function is called by:
 29828 ;;		_SYSTEM_Initialize
 29829 ;; This function uses a reentrant model
 29830 ;;
 29831                           
 29832                           	psect	text122
 29833  01B604                     __ptext122:
 29834                           	opt callstack 0
 29835  01B604                     _PMD_Initialize:
 29836                           	opt callstack 14
 29837                           
 29838                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29839                           
 29840                           ; BSR set to: 63
 29841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29842                           ;incstack = 0
 29843  01B604  0139               	movlb	57	; () banked
 29844  01B606  6BC0               	clrf	192,b	;volatile
 29845                           
 29846                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29847  01B608  6BC1               	clrf	193,b	;volatile
 29848                           
 29849                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29850  01B60A  6BC2               	clrf	194,b	;volatile
 29851                           
 29852                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29853  01B60C  6BC3               	clrf	195,b	;volatile
 29854                           
 29855                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29856  01B60E  6BC4               	clrf	196,b	;volatile
 29857                           
 29858                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29859  01B610  6BC5               	clrf	197,b	;volatile
 29860                           
 29861                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29862  01B612  6BC6               	clrf	198,b	;volatile
 29863                           
 29864                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29865  01B614  6BC7               	clrf	199,b	;volatile
 29866                           
 29867                           ; BSR set to: 57
 29868                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29869  01B616  0012               	return		;funcret
 29870  01B618                     __end_of_PMD_Initialize:
 29871                           	opt callstack 0
 29872                           
 29873 ;; *************** function _PIN_MANAGER_Initialize *****************
 29874 ;; Defined at:
 29875 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29876 ;; Parameters:    Size  Location     Type
 29877 ;;		None
 29878 ;; Auto vars:     Size  Location     Type
 29879 ;;		None
 29880 ;; Return value:  Size  Location     Type
 29881 ;;                  1  [STACK] void 
 29882 ;; Registers used:
 29883 ;;		wreg, status,2
 29884 ;; Tracked objects:
 29885 ;;		On entry : 3F/39
 29886 ;;		On exit  : 3F/3A
 29887 ;;		Unchanged: 0/0
 29888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29893 ;;Total ram usage:        0 bytes
 29894 ;; Hardware stack levels used:    1
 29895 ;; Hardware stack levels required when called:   15
 29896 ;; This function calls:
 29897 ;;		Nothing
 29898 ;; This function is called by:
 29899 ;;		_SYSTEM_Initialize
 29900 ;; This function uses a reentrant model
 29901 ;;
 29902                           
 29903                           	psect	text123
 29904  01A0F6                     __ptext123:
 29905                           	opt callstack 0
 29906  01A0F6                     _PIN_MANAGER_Initialize:
 29907                           	opt callstack 14
 29908                           
 29909                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29910                           
 29911                           ; BSR set to: 57
 29912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29913                           ;incstack = 0
 29914  01A0F6  0E07               	movlw	7
 29915  01A0F8  6EBE               	movwf	190,c	;volatile
 29916                           
 29917                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29918  01A0FA  0E80               	movlw	128
 29919  01A0FC  6EBD               	movwf	189,c	;volatile
 29920                           
 29921                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29922  01A0FE  6ABA               	clrf	186,c	;volatile
 29923                           
 29924                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 29925  01A100  6ABF               	clrf	191,c	;volatile
 29926                           
 29927                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29928  01A102  6ABB               	clrf	187,c	;volatile
 29929                           
 29930                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29931  01A104  0E07               	movlw	7
 29932  01A106  6EBC               	movwf	188,c	;volatile
 29933                           
 29934                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29935  01A108  6AC6               	clrf	198,c	;volatile
 29936                           
 29937                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29938  01A10A  0E0F               	movlw	15
 29939  01A10C  6EC7               	movwf	199,c	;volatile
 29940                           
 29941                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29942  01A10E  68C2               	setf	194,c	;volatile
 29943                           
 29944                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29945  01A110  0EBF               	movlw	191
 29946  01A112  6EC3               	movwf	195,c	;volatile
 29947                           
 29948                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29949  01A114  0E90               	movlw	144
 29950  01A116  6EC4               	movwf	196,c	;volatile
 29951                           
 29952                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29953  01A118  0E0C               	movlw	12
 29954  01A11A  6EC5               	movwf	197,c	;volatile
 29955                           
 29956                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29957  01A11C  013A               	movlb	58	; () banked
 29958  01A11E  6B70               	clrf	112,b	;volatile
 29959                           
 29960                           ; BSR set to: 58
 29961                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29962  01A120  6B60               	clrf	96,b	;volatile
 29963                           
 29964                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29965  01A122  0E3C               	movlw	60
 29966  01A124  6F50               	movwf	80,b	;volatile
 29967                           
 29968                           ; BSR set to: 58
 29969                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29970  01A126  6B80               	clrf	128,b	;volatile
 29971                           
 29972                           ; BSR set to: 58
 29973                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29974  01A128  6B90               	clrf	144,b	;volatile
 29975                           
 29976                           ; BSR set to: 58
 29977                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29978  01A12A  6940               	setf	64,b	;volatile
 29979                           
 29980                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29981  01A12C  0E0C               	movlw	12
 29982  01A12E  6F71               	movwf	113,b	;volatile
 29983                           
 29984                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 29985  01A130  0E0F               	movlw	15
 29986  01A132  6F91               	movwf	145,b	;volatile
 29987                           
 29988                           ; BSR set to: 58
 29989                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 29990  01A134  6B81               	clrf	129,b	;volatile
 29991                           
 29992                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 29993  01A136  0E83               	movlw	131
 29994  01A138  6F51               	movwf	81,b	;volatile
 29995                           
 29996                           ; BSR set to: 58
 29997                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 29998  01A13A  6B41               	clrf	65,b	;volatile
 29999                           
 30000                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30001  01A13C  0E97               	movlw	151
 30002  01A13E  6F61               	movwf	97,b	;volatile
 30003                           
 30004                           ; BSR set to: 58
 30005                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30006  01A140  6B82               	clrf	130,b	;volatile
 30007                           
 30008                           ; BSR set to: 58
 30009                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30010  01A142  6B92               	clrf	146,b	;volatile
 30011                           
 30012                           ; BSR set to: 58
 30013                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30014  01A144  6B42               	clrf	66,b	;volatile
 30015                           
 30016                           ; BSR set to: 58
 30017                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30018  01A146  6B52               	clrf	82,b	;volatile
 30019                           
 30020                           ; BSR set to: 58
 30021                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30022  01A148  6B62               	clrf	98,b	;volatile
 30023                           
 30024                           ; BSR set to: 58
 30025                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30026  01A14A  6B72               	clrf	114,b	;volatile
 30027                           
 30028                           ; BSR set to: 58
 30029                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30030  01A14C  6943               	setf	67,b	;volatile
 30031                           
 30032                           ; BSR set to: 58
 30033                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30034  01A14E  6953               	setf	83,b	;volatile
 30035                           
 30036                           ; BSR set to: 58
 30037                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30038  01A150  6963               	setf	99,b	;volatile
 30039                           
 30040                           ; BSR set to: 58
 30041                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30042  01A152  6973               	setf	115,b	;volatile
 30043                           
 30044                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30045  01A154  0E07               	movlw	7
 30046  01A156  6F83               	movwf	131,b	;volatile
 30047                           
 30048                           ; BSR set to: 58
 30049                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30050  01A158  6993               	setf	147,b	;volatile
 30051                           
 30052                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30053  01A15A  0E0F               	movlw	15
 30054  01A15C  6FE8               	movwf	232,b	;volatile
 30055                           
 30056                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30057  01A15E  0E13               	movlw	19
 30058  01A160  6FDE               	movwf	222,b	;volatile
 30059                           
 30060                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30061  01A162  0E16               	movlw	22
 30062  01A164  6F0E               	movwf	14,b	;volatile
 30063                           
 30064                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30065  01A166  0E1E               	movlw	30
 30066  01A168  6F13               	movwf	19,b	;volatile
 30067                           
 30068                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30069  01A16A  0E08               	movlw	8
 30070  01A16C  6FC0               	movwf	192,b	;volatile
 30071                           
 30072                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30073  01A16E  0E10               	movlw	16
 30074  01A170  6F19               	movwf	25,b	;volatile
 30075                           
 30076                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30077  01A172  0E09               	movlw	9
 30078  01A174  6FC1               	movwf	193,b	;volatile
 30079                           
 30080                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30081  01A176  0E1F               	movlw	31
 30082  01A178  6F15               	movwf	21,b	;volatile
 30083                           
 30084                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30085  01A17A  0E13               	movlw	19
 30086  01A17C  6F16               	movwf	22,b	;volatile
 30087                           
 30088                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30089  01A17E  0E17               	movlw	23
 30090  01A180  6FE5               	movwf	229,b	;volatile
 30091                           
 30092                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30093  01A182  0E14               	movlw	20
 30094  01A184  6FDF               	movwf	223,b	;volatile
 30095                           
 30096                           ; BSR set to: 58
 30097                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30098  01A186  0012               	return		;funcret
 30099  01A188                     __end_of_PIN_MANAGER_Initialize:
 30100                           	opt callstack 0
 30101                           
 30102 ;; *************** function _OSCILLATOR_Initialize *****************
 30103 ;; Defined at:
 30104 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30105 ;; Parameters:    Size  Location     Type
 30106 ;;		None
 30107 ;; Auto vars:     Size  Location     Type
 30108 ;;		None
 30109 ;; Return value:  Size  Location     Type
 30110 ;;                  1  [STACK] void 
 30111 ;; Registers used:
 30112 ;;		wreg, status,2
 30113 ;; Tracked objects:
 30114 ;;		On entry : 3F/3A
 30115 ;;		On exit  : 3F/39
 30116 ;;		Unchanged: 0/0
 30117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30122 ;;Total ram usage:        0 bytes
 30123 ;; Hardware stack levels used:    1
 30124 ;; Hardware stack levels required when called:   15
 30125 ;; This function calls:
 30126 ;;		Nothing
 30127 ;; This function is called by:
 30128 ;;		_SYSTEM_Initialize
 30129 ;; This function uses a reentrant model
 30130 ;;
 30131                           
 30132                           	psect	text124
 30133  01B5EE                     __ptext124:
 30134                           	opt callstack 0
 30135  01B5EE                     _OSCILLATOR_Initialize:
 30136                           	opt callstack 14
 30137                           
 30138                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30139                           
 30140                           ; BSR set to: 58
 30141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30142                           ;incstack = 0
 30143  01B5EE  0E20               	movlw	32
 30144  01B5F0  0139               	movlb	57	; () banked
 30145  01B5F2  6FD9               	movwf	217,b	;volatile
 30146                           
 30147                           ; BSR set to: 57
 30148                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30149  01B5F4  6BDB               	clrf	219,b	;volatile
 30150                           
 30151                           ; BSR set to: 57
 30152                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30153  01B5F6  6BDD               	clrf	221,b	;volatile
 30154                           
 30155                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30156  01B5F8  0E02               	movlw	2
 30157  01B5FA  6FDF               	movwf	223,b	;volatile
 30158                           
 30159                           ; BSR set to: 57
 30160                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30161  01B5FC  6BDE               	clrf	222,b	;volatile
 30162  01B5FE                     l169:
 30163                           
 30164                           ; BSR set to: 57
 30165                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30166  01B5FE  B1DC               	btfsc	220,0,b	;volatile
 30167  01B600  0012               	return	
 30168  01B602  D7FD               	goto	l169
 30169  01B604                     __end_of_OSCILLATOR_Initialize:
 30170                           	opt callstack 0
 30171                           
 30172 ;; *************** function _INTERRUPT_Initialize *****************
 30173 ;; Defined at:
 30174 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30175 ;; Parameters:    Size  Location     Type
 30176 ;;		None
 30177 ;; Auto vars:     Size  Location     Type
 30178 ;;  state           1  [STACK] _Bool 
 30179 ;; Return value:  Size  Location     Type
 30180 ;;                  1  [STACK] void 
 30181 ;; Registers used:
 30182 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30183 ;; Tracked objects:
 30184 ;;		On entry : 0/0
 30185 ;;		On exit  : 3F/39
 30186 ;;		Unchanged: 0/0
 30187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30192 ;;Total ram usage:        0 bytes
 30193 ;; Hardware stack levels used:    1
 30194 ;; Hardware stack levels required when called:   15
 30195 ;; This function calls:
 30196 ;;		Nothing
 30197 ;; This function is called by:
 30198 ;;		_SYSTEM_Initialize
 30199 ;; This function uses a reentrant model
 30200 ;;
 30201                           
 30202                           	psect	text125
 30203  01A566                     __ptext125:
 30204                           	opt callstack 0
 30205  01A566                     _INTERRUPT_Initialize:
 30206                           	opt callstack 0
 30207                           
 30208                           ; BSR set to: 57
 30209                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30210  01A566  52E6               	movf	postinc1,f,c
 30211                           
 30212                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30213                           
 30214                           ;incstack = 0
 30215  01A568  8AD2               	bsf	210,5,c	;volatile
 30216                           
 30217                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30218  01A56A  AED2               	btfss	16338,7,c	;volatile
 30219  01A56C  D003               	goto	u8960
 30220  01A56E  6A0C               	clrf	(btemp+11)^0,c
 30221  01A570  2A0C               	incf	(btemp+11)^0,f,c
 30222  01A572  D001               	goto	u8978
 30223  01A574                     u8960:
 30224  01A574  6A0C               	clrf	(btemp+11)^0,c
 30225  01A576                     u8978:
 30226                           
 30227                           ;stkvar	_state @ sp[(-1)+0]
 30228  01A576  0EFF               	movlw	-1
 30229  01A578  0060  F033  FFE3   	movff	btemp+11,plusw1
 30230                           
 30231                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30232  01A57E  9ED2               	bcf	16338,7,c	;volatile
 30233                           
 30234                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30235  01A580  0E55               	movlw	85
 30236  01A582  6ED4               	movwf	212,c	;volatile
 30237                           
 30238                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30239  01A584  0EAA               	movlw	170
 30240  01A586  6ED4               	movwf	212,c	;volatile
 30241                           
 30242                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30243  01A588  90D4               	bcf	212,0,c	;volatile
 30244                           
 30245                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30246  01A58A  0138               	movlb	56	; () banked
 30247  01A58C  6B9F               	clrf	159,b	;volatile
 30248                           
 30249                           ; BSR set to: 56
 30250                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30251  01A58E  6B9E               	clrf	158,b	;volatile
 30252                           
 30253                           ; BSR set to: 56
 30254                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30255  01A590  0E08               	movlw	8
 30256  01A592  6F9D               	movwf	157,b	;volatile
 30257                           
 30258                           ; BSR set to: 56
 30259                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30260  01A594  0E55               	movlw	85
 30261  01A596  6ED4               	movwf	212,c	;volatile
 30262                           
 30263                           ; BSR set to: 56
 30264                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30265  01A598  0EAA               	movlw	170
 30266  01A59A  6ED4               	movwf	212,c	;volatile
 30267                           
 30268                           ; BSR set to: 56
 30269                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30270  01A59C  80D4               	bsf	212,0,c	;volatile
 30271                           
 30272                           ; BSR set to: 56
 30273                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30274                           ;stkvar	_state @ sp[(-1)+0]
 30275  01A59E  0EFF               	movlw	-1
 30276  01A5A0  B0E3               	btfsc	plusw1,0,c
 30277  01A5A2  D002               	bra	u8985
 30278  01A5A4  9ED2               	bcf	16338,7,c	;volatile
 30279  01A5A6  D001               	bra	u8986
 30280  01A5A8                     u8985:
 30281  01A5A8  8ED2               	bsf	16338,7,c	;volatile
 30282  01A5AA                     u8986:
 30283                           
 30284                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30285  01A5AA  0139               	movlb	57	; () banked
 30286  01A5AC  8782               	bsf	130,3,b	;volatile
 30287                           
 30288                           ; BSR set to: 57
 30289                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30290  01A5AE  8382               	bsf	130,1,b	;volatile
 30291                           
 30292                           ; BSR set to: 57
 30293                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30294  01A5B0  8182               	bsf	130,0,b	;volatile
 30295                           
 30296                           ; BSR set to: 57
 30297                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30298  01A5B2  8582               	bsf	130,2,b	;volatile
 30299                           
 30300                           ; BSR set to: 57
 30301                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30302  01A5B4  8786               	bsf	134,3,b	;volatile
 30303                           
 30304                           ; BSR set to: 57
 30305                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30306  01A5B6  8586               	bsf	134,2,b	;volatile
 30307                           
 30308                           ; BSR set to: 57
 30309                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30310  01A5B8  8783               	bsf	131,3,b	;volatile
 30311                           
 30312                           ; BSR set to: 57
 30313                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30314  01A5BA  8181               	bsf	129,0,b	;volatile
 30315                           
 30316                           ; BSR set to: 57
 30317                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30318  01A5BC  9185               	bcf	133,0,b	;volatile
 30319                           
 30320                           ; BSR set to: 57
 30321                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30322  01A5BE  8189               	bsf	137,0,b	;volatile
 30323                           
 30324                           ; BSR set to: 57
 30325                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30326  01A5C0  9D88               	bcf	136,6,b	;volatile
 30327                           
 30328                           ; BSR set to: 57
 30329                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 30330  01A5C2  9D86               	bcf	134,6,b	;volatile
 30331                           
 30332                           ; BSR set to: 57
 30333                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 30334  01A5C4  8581               	bsf	129,2,b	;volatile
 30335                           
 30336                           ; BSR set to: 57
 30337                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 30338  01A5C6  8781               	bsf	129,3,b	;volatile
 30339                           
 30340                           ; BSR set to: 57
 30341                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30342  01A5C8  52E5               	movf	postdec1,f,c
 30343  01A5CA  0012               	return		;funcret
 30344  01A5CC                     __end_of_INTERRUPT_Initialize:
 30345                           	opt callstack 0
 30346                           
 30347 ;; *************** function _FVR_Initialize *****************
 30348 ;; Defined at:
 30349 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30350 ;; Parameters:    Size  Location     Type
 30351 ;;		None
 30352 ;; Auto vars:     Size  Location     Type
 30353 ;;		None
 30354 ;; Return value:  Size  Location     Type
 30355 ;;                  1  [STACK] void 
 30356 ;; Registers used:
 30357 ;;		wreg, status,2
 30358 ;; Tracked objects:
 30359 ;;		On entry : 3F/39
 30360 ;;		On exit  : 3F/3E
 30361 ;;		Unchanged: 0/0
 30362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30367 ;;Total ram usage:        0 bytes
 30368 ;; Hardware stack levels used:    1
 30369 ;; Hardware stack levels required when called:   15
 30370 ;; This function calls:
 30371 ;;		Nothing
 30372 ;; This function is called by:
 30373 ;;		_SYSTEM_Initialize
 30374 ;; This function uses a reentrant model
 30375 ;;
 30376                           
 30377                           	psect	text126
 30378  01B6EE                     __ptext126:
 30379                           	opt callstack 0
 30380  01B6EE                     _FVR_Initialize:
 30381                           	opt callstack 14
 30382                           
 30383                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30384                           
 30385                           ; BSR set to: 57
 30386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30387                           ;incstack = 0
 30388  01B6EE  0EAF               	movlw	175
 30389  01B6F0  013E               	movlb	62	; () banked
 30390  01B6F2  6FC1               	movwf	193,b	;volatile
 30391                           
 30392                           ; BSR set to: 62
 30393                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30394  01B6F4  0012               	return		;funcret
 30395  01B6F6                     __end_of_FVR_Initialize:
 30396                           	opt callstack 0
 30397                           
 30398 ;; *************** function _EXT_INT_Initialize *****************
 30399 ;; Defined at:
 30400 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30401 ;; Parameters:    Size  Location     Type
 30402 ;;		None
 30403 ;; Auto vars:     Size  Location     Type
 30404 ;;		None
 30405 ;; Return value:  Size  Location     Type
 30406 ;;                  1  [STACK] void 
 30407 ;; Registers used:
 30408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30409 ;; Tracked objects:
 30410 ;;		On entry : 3F/39
 30411 ;;		On exit  : 3F/39
 30412 ;;		Unchanged: 0/0
 30413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30418 ;;Total ram usage:        0 bytes
 30419 ;; Hardware stack levels used:    1
 30420 ;; Hardware stack levels required when called:   16
 30421 ;; This function calls:
 30422 ;;		_INT0_SetInterruptHandler
 30423 ;;		_INT1_SetInterruptHandler
 30424 ;; This function is called by:
 30425 ;;		_SYSTEM_Initialize
 30426 ;; This function uses a reentrant model
 30427 ;;
 30428                           
 30429                           	psect	text127
 30430  01AEA2                     __ptext127:
 30431                           	opt callstack 0
 30432  01AEA2                     _EXT_INT_Initialize:
 30433                           	opt callstack 13
 30434                           
 30435                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30436                           
 30437                           ; BSR set to: 62
 30438                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30439                           ;incstack = 0
 30440  01AEA2  0139               	movlb	57	; () banked
 30441  01AEA4  91A1               	bcf	161,0,b	;volatile
 30442                           
 30443                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30444  01AEA6  90D2               	bcf	210,0,c	;volatile
 30445                           
 30446                           ; BSR set to: 57
 30447                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30448  01AEA8  0E1A               	movlw	low _INT0_DefaultInterruptHandler
 30449  01AEAA  6EE6               	movwf	postinc1,c
 30450  01AEAC  0EB7               	movlw	high _INT0_DefaultInterruptHandler
 30451  01AEAE  6EE6               	movwf	postinc1,c
 30452  01AEB0  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30453  01AEB2  6EE6               	movwf	postinc1,c
 30454  01AEB4  EC2F  F0D9         	call	_INT0_SetInterruptHandler	;wreg free
 30455                           
 30456                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30457  01AEB8  0139               	movlb	57	; () banked
 30458  01AEBA  8191               	bsf	145,0,b	;volatile
 30459                           
 30460                           ; BSR set to: 57
 30461                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30462  01AEBC  91A5               	bcf	165,0,b	;volatile
 30463                           
 30464                           ; BSR set to: 57
 30465                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30466  01AEBE  92D2               	bcf	210,1,c	;volatile
 30467                           
 30468                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30469  01AEC0  0E16               	movlw	low _INT1_DefaultInterruptHandler
 30470  01AEC2  6EE6               	movwf	postinc1,c
 30471  01AEC4  0EB7               	movlw	high _INT1_DefaultInterruptHandler
 30472  01AEC6  6EE6               	movwf	postinc1,c
 30473  01AEC8  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30474  01AECA  6EE6               	movwf	postinc1,c
 30475  01AECC  EC1B  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
 30476                           
 30477                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30478  01AED0  0139               	movlb	57	; () banked
 30479  01AED2  8195               	bsf	149,0,b	;volatile
 30480                           
 30481                           ; BSR set to: 57
 30482                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30483  01AED4  0012               	return		;funcret
 30484  01AED6                     __end_of_EXT_INT_Initialize:
 30485                           	opt callstack 0
 30486                           
 30487 ;; *************** function _INT1_SetInterruptHandler *****************
 30488 ;; Defined at:
 30489 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30490 ;; Parameters:    Size  Location     Type
 30491 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30492 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30493 ;; Auto vars:     Size  Location     Type
 30494 ;;		None
 30495 ;; Return value:  Size  Location     Type
 30496 ;;                  1  [STACK] void 
 30497 ;; Registers used:
 30498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30499 ;; Tracked objects:
 30500 ;;		On entry : 3F/39
 30501 ;;		On exit  : 0/0
 30502 ;;		Unchanged: 0/0
 30503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30508 ;;Total ram usage:        0 bytes
 30509 ;; Hardware stack levels used:    1
 30510 ;; Hardware stack levels required when called:   15
 30511 ;; This function calls:
 30512 ;;		Nothing
 30513 ;; This function is called by:
 30514 ;;		_EXT_INT_Initialize
 30515 ;;		_start_switch_handler
 30516 ;; This function uses a reentrant model
 30517 ;;
 30518                           
 30519                           	psect	text128
 30520  01B236                     __ptext128:
 30521                           	opt callstack 0
 30522  01B236                     _INT1_SetInterruptHandler:
 30523                           	opt callstack 14
 30524                           
 30525                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30526                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30527                           
 30528                           ; BSR set to: 57
 30529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30530                           ;incstack = 0
 30531  01B236  50E1               	movf	fsr1l,w,c
 30532  01B238  0FFD               	addlw	-3
 30533  01B23A  6ED9               	movwf	fsr2l,c
 30534  01B23C  50E2               	movf	fsr1h,w,c
 30535  01B23E  6EDA               	movwf	fsr2h,c
 30536  01B240  0EFF               	movlw	255
 30537  01B242  22DA               	addwfc	fsr2h,f,c
 30538  01B244  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30539  01B24A  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30540  01B250  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30541                           
 30542                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30543  01B256  52E5               	movf	postdec1,f,c
 30544  01B258  52E5               	movf	postdec1,f,c
 30545  01B25A  52E5               	movf	postdec1,f,c
 30546  01B25C  0012               	return		;funcret
 30547  01B25E                     __end_of_INT1_SetInterruptHandler:
 30548                           	opt callstack 0
 30549                           
 30550 ;; *************** function _INT0_SetInterruptHandler *****************
 30551 ;; Defined at:
 30552 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30553 ;; Parameters:    Size  Location     Type
 30554 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30555 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30556 ;; Auto vars:     Size  Location     Type
 30557 ;;		None
 30558 ;; Return value:  Size  Location     Type
 30559 ;;                  1  [STACK] void 
 30560 ;; Registers used:
 30561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30562 ;; Tracked objects:
 30563 ;;		On entry : 3F/39
 30564 ;;		On exit  : 0/0
 30565 ;;		Unchanged: 0/0
 30566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30571 ;;Total ram usage:        0 bytes
 30572 ;; Hardware stack levels used:    1
 30573 ;; Hardware stack levels required when called:   15
 30574 ;; This function calls:
 30575 ;;		Nothing
 30576 ;; This function is called by:
 30577 ;;		_EXT_INT_Initialize
 30578 ;; This function uses a reentrant model
 30579 ;;
 30580                           
 30581                           	psect	text129
 30582  01B25E                     __ptext129:
 30583                           	opt callstack 0
 30584  01B25E                     _INT0_SetInterruptHandler:
 30585                           	opt callstack 13
 30586                           
 30587                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30588                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30589                           
 30590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30591                           ;incstack = 0
 30592  01B25E  50E1               	movf	fsr1l,w,c
 30593  01B260  0FFD               	addlw	-3
 30594  01B262  6ED9               	movwf	fsr2l,c
 30595  01B264  50E2               	movf	fsr1h,w,c
 30596  01B266  6EDA               	movwf	fsr2h,c
 30597  01B268  0EFF               	movlw	255
 30598  01B26A  22DA               	addwfc	fsr2h,f,c
 30599  01B26C  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30600  01B272  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30601  01B278  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30602                           
 30603                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30604  01B27E  52E5               	movf	postdec1,f,c
 30605  01B280  52E5               	movf	postdec1,f,c
 30606  01B282  52E5               	movf	postdec1,f,c
 30607  01B284  0012               	return		;funcret
 30608  01B286                     __end_of_INT0_SetInterruptHandler:
 30609                           	opt callstack 0
 30610                           
 30611 ;; *************** function _DMA2_Initialize *****************
 30612 ;; Defined at:
 30613 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30614 ;; Parameters:    Size  Location     Type
 30615 ;;		None
 30616 ;; Auto vars:     Size  Location     Type
 30617 ;;		None
 30618 ;; Return value:  Size  Location     Type
 30619 ;;                  1  [STACK] void 
 30620 ;; Registers used:
 30621 ;;		wreg, status,2
 30622 ;; Tracked objects:
 30623 ;;		On entry : 3F/3D
 30624 ;;		On exit  : 3F/3B
 30625 ;;		Unchanged: 0/0
 30626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30631 ;;Total ram usage:        0 bytes
 30632 ;; Hardware stack levels used:    1
 30633 ;; Hardware stack levels required when called:   15
 30634 ;; This function calls:
 30635 ;;		Nothing
 30636 ;; This function is called by:
 30637 ;;		_SYSTEM_Initialize
 30638 ;; This function uses a reentrant model
 30639 ;;
 30640                           
 30641                           	psect	text130
 30642  01A7AC                     __ptext130:
 30643                           	opt callstack 0
 30644  01A7AC                     _DMA2_Initialize:
 30645                           	opt callstack 14
 30646                           
 30647                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30648                           
 30649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30650                           ;incstack = 0
 30651  01A7AC  0E00               	movlw	0
 30652  01A7AE  013B               	movlb	59	; () banked
 30653  01A7B0  6FD9               	movwf	217,b	;volatile
 30654  01A7B2  0E10               	movlw	16
 30655  01A7B4  6FDA               	movwf	218,b	;volatile
 30656  01A7B6  0E00               	movlw	0
 30657  01A7B8  6FDB               	movwf	219,b	;volatile
 30658                           
 30659                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30660  01A7BA  0E3F               	movlw	63
 30661  01A7BC  6FD1               	movwf	209,b	;volatile
 30662  01A7BE  0EBB               	movlw	187
 30663  01A7C0  6FD0               	movwf	208,b	;volatile
 30664                           
 30665                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30666  01A7C2  0E03               	movlw	3
 30667  01A7C4  6FDD               	movwf	221,b	;volatile
 30668                           
 30669                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30670  01A7C6  0E00               	movlw	0
 30671  01A7C8  6FD8               	movwf	216,b	;volatile
 30672  01A7CA  0E01               	movlw	1
 30673  01A7CC  6FD7               	movwf	215,b	;volatile
 30674                           
 30675                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30676  01A7CE  0E00               	movlw	0
 30677  01A7D0  6FCF               	movwf	207,b	;volatile
 30678  01A7D2  0E01               	movlw	1
 30679  01A7D4  6FCE               	movwf	206,b	;volatile
 30680                           
 30681                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30682  01A7D6  0E1C               	movlw	28
 30683  01A7D8  6FDF               	movwf	223,b	;volatile
 30684                           
 30685                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30686  01A7DA  0E3D               	movlw	61
 30687  01A7DC  6FDE               	movwf	222,b	;volatile
 30688                           
 30689                           ; BSR set to: 59
 30690                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30691  01A7DE  0139               	movlb	57	; () banked
 30692  01A7E0  97A5               	bcf	165,3,b	;volatile
 30693                           
 30694                           ; BSR set to: 57
 30695                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30696  01A7E2  95A5               	bcf	165,2,b	;volatile
 30697                           
 30698                           ; BSR set to: 57
 30699                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30700  01A7E4  9BA5               	bcf	165,5,b	;volatile
 30701                           
 30702                           ; BSR set to: 57
 30703                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30704  01A7E6  99A5               	bcf	165,4,b	;volatile
 30705                           
 30706                           ; BSR set to: 57
 30707                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30708  01A7E8  9795               	bcf	149,3,b	;volatile
 30709                           
 30710                           ; BSR set to: 57
 30711                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30712  01A7EA  9595               	bcf	149,2,b	;volatile
 30713                           
 30714                           ; BSR set to: 57
 30715                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30716  01A7EC  9B95               	bcf	149,5,b	;volatile
 30717                           
 30718                           ; BSR set to: 57
 30719                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30720  01A7EE  9995               	bcf	149,4,b	;volatile
 30721  01A7F0  9ED2               	bcf	16338,7,c	;# 
 30722  01A7F2  0139               	banksel	14831	;# 
 30723  01A7F4  0E55               	movlw	85	;# 
 30724  01A7F6  6FEF               	movwf	14831,b	;# 
 30725  01A7F8  0EAA               	movlw	170	;# 
 30726  01A7FA  6FEF               	movwf	14831,b	;# 
 30727  01A7FC  81EF               	bsf	14831,0,b	;# 
 30728  01A7FE  8ED2               	bsf	16338,7,c	;# 
 30729                           
 30730                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30731  01A800  013B               	movlb	59	; () banked
 30732  01A802  6BDC               	clrf	220,b	;volatile
 30733                           
 30734                           ; BSR set to: 59
 30735                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30736  01A804  0012               	return		;funcret
 30737  01A806                     __end_of_DMA2_Initialize:
 30738                           	opt callstack 0
 30739                           
 30740 ;; *************** function _DMA1_Initialize *****************
 30741 ;; Defined at:
 30742 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30743 ;; Parameters:    Size  Location     Type
 30744 ;;		None
 30745 ;; Auto vars:     Size  Location     Type
 30746 ;;		None
 30747 ;; Return value:  Size  Location     Type
 30748 ;;                  1  [STACK] void 
 30749 ;; Registers used:
 30750 ;;		wreg, status,2
 30751 ;; Tracked objects:
 30752 ;;		On entry : 3F/3B
 30753 ;;		On exit  : 3F/3B
 30754 ;;		Unchanged: 0/0
 30755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30760 ;;Total ram usage:        0 bytes
 30761 ;; Hardware stack levels used:    1
 30762 ;; Hardware stack levels required when called:   15
 30763 ;; This function calls:
 30764 ;;		Nothing
 30765 ;; This function is called by:
 30766 ;;		_SYSTEM_Initialize
 30767 ;; This function uses a reentrant model
 30768 ;;
 30769                           
 30770                           	psect	text131
 30771  01A426                     __ptext131:
 30772                           	opt callstack 0
 30773  01A426                     _DMA1_Initialize:
 30774                           	opt callstack 14
 30775                           
 30776                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30777                           
 30778                           ; BSR set to: 59
 30779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30780                           ;incstack = 0
 30781  01A426  0E00               	movlw	0
 30782  01A428  013B               	movlb	59	; () banked
 30783  01A42A  6FF9               	movwf	249,b	;volatile
 30784  01A42C  0E10               	movlw	16
 30785  01A42E  6FFA               	movwf	250,b	;volatile
 30786  01A430  0E00               	movlw	0
 30787  01A432  6FFB               	movwf	251,b	;volatile
 30788                           
 30789                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30790  01A434  0E3D               	movlw	61
 30791  01A436  6FF1               	movwf	241,b	;volatile
 30792  01A438  0E11               	movlw	17
 30793  01A43A  6FF0               	movwf	240,b	;volatile
 30794                           
 30795                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30796  01A43C  0E03               	movlw	3
 30797  01A43E  6FFD               	movwf	253,b	;volatile
 30798                           
 30799                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30800  01A440  0E00               	movlw	0
 30801  01A442  6FF8               	movwf	248,b	;volatile
 30802  01A444  0E01               	movlw	1
 30803  01A446  6FF7               	movwf	247,b	;volatile
 30804                           
 30805                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30806  01A448  0E00               	movlw	0
 30807  01A44A  6FEF               	movwf	239,b	;volatile
 30808  01A44C  0E01               	movlw	1
 30809  01A44E  6FEE               	movwf	238,b	;volatile
 30810                           
 30811                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30812  01A450  0E15               	movlw	21
 30813  01A452  6FFF               	movwf	255,b	;volatile
 30814                           
 30815                           ; BSR set to: 59
 30816                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30817  01A454  6BFE               	clrf	254,b	;volatile
 30818                           
 30819                           ; BSR set to: 59
 30820                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30821  01A456  0139               	movlb	57	; () banked
 30822  01A458  93A2               	bcf	162,1,b	;volatile
 30823                           
 30824                           ; BSR set to: 57
 30825                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30826  01A45A  91A2               	bcf	162,0,b	;volatile
 30827                           
 30828                           ; BSR set to: 57
 30829                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30830  01A45C  97A2               	bcf	162,3,b	;volatile
 30831                           
 30832                           ; BSR set to: 57
 30833                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30834  01A45E  95A2               	bcf	162,2,b	;volatile
 30835                           
 30836                           ; BSR set to: 57
 30837                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30838  01A460  8392               	bsf	146,1,b	;volatile
 30839                           
 30840                           ; BSR set to: 57
 30841                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30842  01A462  8192               	bsf	146,0,b	;volatile
 30843                           
 30844                           ; BSR set to: 57
 30845                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30846  01A464  8792               	bsf	146,3,b	;volatile
 30847                           
 30848                           ; BSR set to: 57
 30849                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30850  01A466  8592               	bsf	146,2,b	;volatile
 30851                           
 30852                           ; BSR set to: 57
 30853                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30854  01A468  6BF1               	clrf	241,b	;volatile
 30855                           
 30856                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30857  01A46A  0E01               	movlw	1
 30858  01A46C  6FF2               	movwf	242,b	;volatile
 30859                           
 30860                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30861  01A46E  0E04               	movlw	4
 30862  01A470  6FF3               	movwf	243,b	;volatile
 30863                           
 30864                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30865  01A472  0E02               	movlw	2
 30866  01A474  6FF4               	movwf	244,b	;volatile
 30867                           
 30868                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30869  01A476  0E03               	movlw	3
 30870  01A478  6FF7               	movwf	247,b	;volatile
 30871  01A47A  9ED2               	bcf	16338,7,c	;# 
 30872  01A47C  0139               	banksel	14831	;# 
 30873  01A47E  0E55               	movlw	85	;# 
 30874  01A480  6FEF               	movwf	14831,b	;# 
 30875  01A482  0EAA               	movlw	170	;# 
 30876  01A484  6FEF               	movwf	14831,b	;# 
 30877  01A486  81EF               	bsf	14831,0,b	;# 
 30878  01A488  8ED2               	bsf	16338,7,c	;# 
 30879                           
 30880                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30881  01A48A  013B               	movlb	59	; () banked
 30882  01A48C  6BFC               	clrf	252,b	;volatile
 30883                           
 30884                           ; BSR set to: 59
 30885                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30886  01A48E  0012               	return		;funcret
 30887  01A490                     __end_of_DMA1_Initialize:
 30888                           	opt callstack 0
 30889                           
 30890 ;; *************** function _CLKREF_Initialize *****************
 30891 ;; Defined at:
 30892 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30893 ;; Parameters:    Size  Location     Type
 30894 ;;		None
 30895 ;; Auto vars:     Size  Location     Type
 30896 ;;		None
 30897 ;; Return value:  Size  Location     Type
 30898 ;;                  1  [STACK] void 
 30899 ;; Registers used:
 30900 ;;		wreg, status,2
 30901 ;; Tracked objects:
 30902 ;;		On entry : 3F/3B
 30903 ;;		On exit  : 3F/3C
 30904 ;;		Unchanged: 0/0
 30905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30910 ;;Total ram usage:        0 bytes
 30911 ;; Hardware stack levels used:    1
 30912 ;; Hardware stack levels required when called:   15
 30913 ;; This function calls:
 30914 ;;		Nothing
 30915 ;; This function is called by:
 30916 ;;		_SYSTEM_Initialize
 30917 ;; This function uses a reentrant model
 30918 ;;
 30919                           
 30920                           	psect	text132
 30921  01B696                     __ptext132:
 30922                           	opt callstack 0
 30923  01B696                     _CLKREF_Initialize:
 30924                           	opt callstack 14
 30925                           
 30926                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30927                           
 30928                           ; BSR set to: 59
 30929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30930                           ;incstack = 0
 30931  01B696  013C               	movlb	60	; () banked
 30932  01B698  6BE6               	clrf	230,b	;volatile
 30933                           
 30934                           ; BSR set to: 60
 30935                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30936  01B69A  0E94               	movlw	148
 30937  01B69C  6FE5               	movwf	229,b	;volatile
 30938                           
 30939                           ; BSR set to: 60
 30940                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30941  01B69E  0012               	return		;funcret
 30942  01B6A0                     __end_of_CLKREF_Initialize:
 30943                           	opt callstack 0
 30944                           
 30945 ;; *************** function _ADCC_Initialize *****************
 30946 ;; Defined at:
 30947 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30948 ;; Parameters:    Size  Location     Type
 30949 ;;		None
 30950 ;; Auto vars:     Size  Location     Type
 30951 ;;		None
 30952 ;; Return value:  Size  Location     Type
 30953 ;;                  1  [STACK] void 
 30954 ;; Registers used:
 30955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30956 ;; Tracked objects:
 30957 ;;		On entry : 3F/3E
 30958 ;;		On exit  : 0/0
 30959 ;;		Unchanged: 0/0
 30960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30965 ;;Total ram usage:        0 bytes
 30966 ;; Hardware stack levels used:    1
 30967 ;; Hardware stack levels required when called:   16
 30968 ;; This function calls:
 30969 ;;		_ADCC_SetADIInterruptHandler
 30970 ;;		_ADCC_SetADTIInterruptHandler
 30971 ;; This function is called by:
 30972 ;;		_SYSTEM_Initialize
 30973 ;; This function uses a reentrant model
 30974 ;;
 30975                           
 30976                           	psect	text133
 30977  01A490                     __ptext133:
 30978                           	opt callstack 0
 30979  01A490                     _ADCC_Initialize:
 30980                           	opt callstack 13
 30981                           
 30982                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30983                           
 30984                           ; BSR set to: 60
 30985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30986                           ;incstack = 0
 30987  01A490  013E               	movlb	62	; () banked
 30988  01A492  6BDE               	clrf	222,b	;volatile
 30989                           
 30990                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 30991  01A494  6BDF               	clrf	223,b	;volatile
 30992                           
 30993                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 30994  01A496  6BE0               	clrf	224,b	;volatile
 30995                           
 30996                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 30997  01A498  6BE1               	clrf	225,b	;volatile
 30998                           
 30999                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31000  01A49A  6BE4               	clrf	228,b	;volatile
 31001                           
 31002                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31003  01A49C  6BE5               	clrf	229,b	;volatile
 31004                           
 31005                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31006  01A49E  6BEA               	clrf	234,b	;volatile
 31007                           
 31008                           ; BSR set to: 62
 31009                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31010  01A4A0  0E40               	movlw	64
 31011  01A4A2  6FEC               	movwf	236,b	;volatile
 31012                           
 31013                           ; BSR set to: 62
 31014                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31015  01A4A4  6BF1               	clrf	241,b	;volatile
 31016                           
 31017                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31018  01A4A6  0E20               	movlw	32
 31019  01A4A8  6FF3               	movwf	243,b	;volatile
 31020                           
 31021                           ; BSR set to: 62
 31022                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31023  01A4AA  6BF4               	clrf	244,b	;volatile
 31024                           
 31025                           ; BSR set to: 62
 31026                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31027  01A4AC  6BF5               	clrf	245,b	;volatile
 31028                           
 31029                           ; BSR set to: 62
 31030                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31031  01A4AE  6BF6               	clrf	246,b	;volatile
 31032                           
 31033                           ; BSR set to: 62
 31034                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31035  01A4B0  6BF7               	clrf	247,b	;volatile
 31036                           
 31037                           ; BSR set to: 62
 31038                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31039  01A4B2  6BF9               	clrf	249,b	;volatile
 31040                           
 31041                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31042  01A4B4  0E5B               	movlw	91
 31043  01A4B6  6FFA               	movwf	250,b	;volatile
 31044                           
 31045                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31046  01A4B8  0E27               	movlw	39
 31047  01A4BA  6FFB               	movwf	251,b	;volatile
 31048                           
 31049                           ; BSR set to: 62
 31050                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31051  01A4BC  6BFC               	clrf	252,b	;volatile
 31052                           
 31053                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31054  01A4BE  0E02               	movlw	2
 31055  01A4C0  6FFD               	movwf	253,b	;volatile
 31056                           
 31057                           ; BSR set to: 62
 31058                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31059  01A4C2  6BFE               	clrf	254,b	;volatile
 31060                           
 31061                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31062  01A4C4  0E07               	movlw	7
 31063  01A4C6  6FFF               	movwf	255,b	;volatile
 31064                           
 31065                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31066  01A4C8  0E84               	movlw	132
 31067  01A4CA  6FF8               	movwf	248,b	;volatile
 31068                           
 31069                           ; BSR set to: 62
 31070                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31071  01A4CC  0139               	movlb	57	; () banked
 31072  01A4CE  95A1               	bcf	161,2,b	;volatile
 31073                           
 31074                           ; BSR set to: 57
 31075                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31076  01A4D0  8591               	bsf	145,2,b	;volatile
 31077                           
 31078                           ; BSR set to: 57
 31079                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31080  01A4D2  0E1C               	movlw	low _ADCC_DefaultInterruptHandler
 31081  01A4D4  6EE6               	movwf	postinc1,c
 31082  01A4D6  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31083  01A4D8  6EE6               	movwf	postinc1,c
 31084  01A4DA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31085  01A4DC  6EE6               	movwf	postinc1,c
 31086  01A4DE  EC57  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31087                           
 31088                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31089  01A4E2  0139               	movlb	57	; () banked
 31090  01A4E4  97A1               	bcf	161,3,b	;volatile
 31091                           
 31092                           ; BSR set to: 57
 31093                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31094  01A4E6  8791               	bsf	145,3,b	;volatile
 31095                           
 31096                           ; BSR set to: 57
 31097                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31098  01A4E8  0E1C               	movlw	low _ADCC_DefaultInterruptHandler
 31099  01A4EA  6EE6               	movwf	postinc1,c
 31100  01A4EC  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31101  01A4EE  6EE6               	movwf	postinc1,c
 31102  01A4F0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31103  01A4F2  6EE6               	movwf	postinc1,c
 31104  01A4F4  EC43  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31105                           
 31106                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31107  01A4F8  0012               	return		;funcret
 31108  01A4FA                     __end_of_ADCC_Initialize:
 31109                           	opt callstack 0
 31110                           
 31111 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31112 ;; Defined at:
 31113 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31114 ;; Parameters:    Size  Location     Type
 31115 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31116 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31117 ;; Auto vars:     Size  Location     Type
 31118 ;;		None
 31119 ;; Return value:  Size  Location     Type
 31120 ;;                  1  [STACK] void 
 31121 ;; Registers used:
 31122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31123 ;; Tracked objects:
 31124 ;;		On entry : 0/0
 31125 ;;		On exit  : 0/0
 31126 ;;		Unchanged: 0/0
 31127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31132 ;;Total ram usage:        0 bytes
 31133 ;; Hardware stack levels used:    1
 31134 ;; Hardware stack levels required when called:   15
 31135 ;; This function calls:
 31136 ;;		Nothing
 31137 ;; This function is called by:
 31138 ;;		_ADCC_Initialize
 31139 ;;		_start_adc_scan
 31140 ;; This function uses a reentrant model
 31141 ;;
 31142                           
 31143                           	psect	text134
 31144  01B286                     __ptext134:
 31145                           	opt callstack 0
 31146  01B286                     _ADCC_SetADTIInterruptHandler:
 31147                           	opt callstack 14
 31148                           
 31149                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31150                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31151                           
 31152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31153                           ;incstack = 0
 31154  01B286  50E1               	movf	fsr1l,w,c
 31155  01B288  0FFD               	addlw	-3
 31156  01B28A  6ED9               	movwf	fsr2l,c
 31157  01B28C  50E2               	movf	fsr1h,w,c
 31158  01B28E  6EDA               	movwf	fsr2h,c
 31159  01B290  0EFF               	movlw	255
 31160  01B292  22DA               	addwfc	fsr2h,f,c
 31161  01B294  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31162  01B29A  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31163  01B2A0  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31164                           
 31165                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31166  01B2A6  52E5               	movf	postdec1,f,c
 31167  01B2A8  52E5               	movf	postdec1,f,c
 31168  01B2AA  52E5               	movf	postdec1,f,c
 31169  01B2AC  0012               	return		;funcret
 31170  01B2AE                     __end_of_ADCC_SetADTIInterruptHandler:
 31171                           	opt callstack 0
 31172                           
 31173 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31174 ;; Defined at:
 31175 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31176 ;; Parameters:    Size  Location     Type
 31177 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31178 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31179 ;; Auto vars:     Size  Location     Type
 31180 ;;		None
 31181 ;; Return value:  Size  Location     Type
 31182 ;;                  1  [STACK] void 
 31183 ;; Registers used:
 31184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31185 ;; Tracked objects:
 31186 ;;		On entry : 6/0
 31187 ;;		On exit  : 0/0
 31188 ;;		Unchanged: 0/0
 31189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31194 ;;Total ram usage:        0 bytes
 31195 ;; Hardware stack levels used:    1
 31196 ;; Hardware stack levels required when called:   15
 31197 ;; This function calls:
 31198 ;;		Nothing
 31199 ;; This function is called by:
 31200 ;;		_ADCC_Initialize
 31201 ;;		_start_adc_scan
 31202 ;; This function uses a reentrant model
 31203 ;;
 31204                           
 31205                           	psect	text135
 31206  01B2AE                     __ptext135:
 31207                           	opt callstack 0
 31208  01B2AE                     _ADCC_SetADIInterruptHandler:
 31209                           	opt callstack 14
 31210                           
 31211                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31212                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31213                           
 31214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31215                           ;incstack = 0
 31216  01B2AE  50E1               	movf	fsr1l,w,c
 31217  01B2B0  0FFD               	addlw	-3
 31218  01B2B2  6ED9               	movwf	fsr2l,c
 31219  01B2B4  50E2               	movf	fsr1h,w,c
 31220  01B2B6  6EDA               	movwf	fsr2h,c
 31221  01B2B8  0EFF               	movlw	255
 31222  01B2BA  22DA               	addwfc	fsr2h,f,c
 31223  01B2BC  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31224  01B2C2  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31225  01B2C8  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31226                           
 31227                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31228  01B2CE  52E5               	movf	postdec1,f,c
 31229  01B2D0  52E5               	movf	postdec1,f,c
 31230  01B2D2  52E5               	movf	postdec1,f,c
 31231  01B2D4  0012               	return		;funcret
 31232  01B2D6                     __end_of_ADCC_SetADIInterruptHandler:
 31233                           	opt callstack 0
 31234                           
 31235 ;; *************** function _INT1_ISR *****************
 31236 ;; Defined at:
 31237 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31238 ;; Parameters:    Size  Location     Type
 31239 ;;		None
 31240 ;; Auto vars:     Size  Location     Type
 31241 ;;		None
 31242 ;; Return value:  Size  Location     Type
 31243 ;;                  1    wreg      void 
 31244 ;; Registers used:
 31245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31246 ;; Tracked objects:
 31247 ;;		On entry : 0/0
 31248 ;;		On exit  : 0/0
 31249 ;;		Unchanged: 0/0
 31250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31254 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31255 ;;Total ram usage:        4 bytes
 31256 ;; Hardware stack levels used:    1
 31257 ;; Hardware stack levels required when called:    5
 31258 ;; This function calls:
 31259 ;;		_INT1_CallBack
 31260 ;; This function is called by:
 31261 ;;		Interrupt level 1
 31262 ;; This function uses a non-reentrant model
 31263 ;;
 31264                           
 31265                           	psect	text136
 31266  01AD1C                     __ptext136:
 31267                           	opt callstack 0
 31268  01AD1C                     _INT1_ISR:
 31269                           	opt callstack 12
 31270                           
 31271                           ;incstack = 0
 31272  01AD1C  006F FF60  F03F    	movff	status,??_INT1_ISR
 31273  01AD22  0060  F004  F040   	movff	btemp,??_INT1_ISR+1
 31274  01AD28  0060  F02C  F041   	movff	btemp+10,??_INT1_ISR+2
 31275  01AD2E  0060  F030  F042   	movff	btemp+11,??_INT1_ISR+3
 31276  01AD34  EE16  F061         	lfsr	1,___intlo_sp
 31277                           
 31278                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31279  01AD38  0139               	movlb	57	; () banked
 31280  01AD3A  91A5               	bcf	165,0,b	;volatile
 31281                           
 31282                           ; BSR set to: 57
 31283                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31284  01AD3C  ECCC  F0D9         	call	_INT1_CallBack	;wreg free
 31285  01AD40  0060  F108  F00C   	movff	??_INT1_ISR+3,btemp+11
 31286  01AD46  0060  F104  F00B   	movff	??_INT1_ISR+2,btemp+10
 31287  01AD4C  0060  F100  F001   	movff	??_INT1_ISR+1,btemp
 31288  01AD52  0060  F0FF  FFD8   	movff	??_INT1_ISR,status
 31289  01AD58  0011               	retfie		f
 31290  01AD5A                     __end_of_INT1_ISR:
 31291                           	opt callstack 0
 31292                           
 31293 ;; *************** function _INT1_CallBack *****************
 31294 ;; Defined at:
 31295 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31296 ;; Parameters:    Size  Location     Type
 31297 ;;		None
 31298 ;; Auto vars:     Size  Location     Type
 31299 ;;		None
 31300 ;; Return value:  Size  Location     Type
 31301 ;;                  1  [STACK] void 
 31302 ;; Registers used:
 31303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31304 ;; Tracked objects:
 31305 ;;		On entry : 3F/39
 31306 ;;		On exit  : 0/0
 31307 ;;		Unchanged: 0/0
 31308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31313 ;;Total ram usage:        0 bytes
 31314 ;; Hardware stack levels used:    1
 31315 ;; Hardware stack levels required when called:    4
 31316 ;; This function calls:
 31317 ;;		Absolute function
 31318 ;;		_INT1_DefaultInterruptHandler
 31319 ;;		_switch_handler
 31320 ;; This function is called by:
 31321 ;;		_INT1_ISR
 31322 ;; This function uses a reentrant model
 31323 ;;
 31324                           
 31325                           	psect	text137
 31326  01B398                     __ptext137:
 31327                           	opt callstack 0
 31328  01B398                     _INT1_CallBack:
 31329                           	opt callstack 12
 31330                           
 31331                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31332                           
 31333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31334                           ;incstack = 0
 31335  01B398  0100               	movlb	0	; () banked
 31336  01B39A  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31337  01B39C  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31338  01B39E  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31339  01B3A0  B4D8               	btfsc	status,2,c
 31340  01B3A2  0012               	return	
 31341                           
 31342                           ; BSR set to: 0
 31343                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31344  01B3A4  D801               	call	u957_28
 31345  01B3A6  0012               	return	
 31346  01B3A8                     u957_28:
 31347  01B3A8  0005               	push	
 31348  01B3AA  6EFA               	movwf	pclath,c
 31349  01B3AC  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31350  01B3AE  6EFD               	movwf	tosl,c
 31351  01B3B0  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31352  01B3B2  6EFE               	movwf	tosh,c
 31353  01B3B4  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31354  01B3B6  6EFF               	movwf	tosu,c
 31355  01B3B8  50FA               	movf	pclath,w,c
 31356  01B3BA  0012               	return		;indir
 31357  01B3BC                     __end_of_INT1_CallBack:
 31358                           	opt callstack 0
 31359                           
 31360 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31361 ;; Defined at:
 31362 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31363 ;; Parameters:    Size  Location     Type
 31364 ;;		None
 31365 ;; Auto vars:     Size  Location     Type
 31366 ;;		None
 31367 ;; Return value:  Size  Location     Type
 31368 ;;                  1  [STACK] void 
 31369 ;; Registers used:
 31370 ;;		None
 31371 ;; Tracked objects:
 31372 ;;		On entry : 3F/0
 31373 ;;		On exit  : 0/0
 31374 ;;		Unchanged: 0/0
 31375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31380 ;;Total ram usage:        0 bytes
 31381 ;; Hardware stack levels used:    1
 31382 ;; Hardware stack levels required when called:    3
 31383 ;; This function calls:
 31384 ;;		Nothing
 31385 ;; This function is called by:
 31386 ;;		_EXT_INT_Initialize
 31387 ;;		_INT1_CallBack
 31388 ;; This function uses a reentrant model
 31389 ;;
 31390                           
 31391                           	psect	text138
 31392  01B716                     __ptext138:
 31393                           	opt callstack 0
 31394  01B716                     _INT1_DefaultInterruptHandler:
 31395                           	opt callstack 12
 31396                           
 31397                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31398                           
 31399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31400                           ;incstack = 0
 31401  01B716  0012               	return		;funcret
 31402  01B718                     __end_of_INT1_DefaultInterruptHandler:
 31403                           	opt callstack 0
 31404                           
 31405 ;; *************** function _switch_handler *****************
 31406 ;; Defined at:
 31407 ;;		line 58 in file "dio.c"
 31408 ;; Parameters:    Size  Location     Type
 31409 ;;		None
 31410 ;; Auto vars:     Size  Location     Type
 31411 ;;  i               1  [STACK] unsigned char 
 31412 ;;  sw_value        1  [STACK] unsigned char 
 31413 ;; Return value:  Size  Location     Type
 31414 ;;                  1  [STACK] void 
 31415 ;; Registers used:
 31416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31417 ;; Tracked objects:
 31418 ;;		On entry : 3F/0
 31419 ;;		On exit  : 0/0
 31420 ;;		Unchanged: 0/0
 31421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31426 ;;Total ram usage:        0 bytes
 31427 ;; Hardware stack levels used:    1
 31428 ;; Hardware stack levels required when called:    3
 31429 ;; This function calls:
 31430 ;;		Nothing
 31431 ;; This function is called by:
 31432 ;;		_start_switch_handler
 31433 ;;		_INT1_CallBack
 31434 ;; This function uses a reentrant model
 31435 ;;
 31436                           
 31437                           	psect	text139
 31438  018C34                     __ptext139:
 31439                           	opt callstack 0
 31440  018C34                     _switch_handler:
 31441                           	opt callstack 0
 31442                           
 31443                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31444  018C34  52E6               	movf	postinc1,f,c
 31445  018C36  52E6               	movf	postinc1,f,c
 31446                           
 31447                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31448                           ;stkvar	_i @ sp[(-2)+0]
 31449                           
 31450                           ;incstack = 0
 31451  018C38  0EFE               	movlw	-2
 31452  018C3A  6AE3               	clrf	plusw1,c
 31453  018C3C  9EBD               	bcf	189,7,c	;volatile
 31454                           
 31455                           ;dio.c: 72:  __nop();
 31456  018C3E  F000               	nop	
 31457                           
 31458                           ;dio.c: 73:  __nop();
 31459  018C40  F000               	nop	
 31460                           
 31461                           ;dio.c: 74:  __nop();
 31462  018C42  F000               	nop	
 31463  018C44  D019               	goto	l10228
 31464  018C46                     l10216:
 31465                           
 31466                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 31467  018C46  A6CF               	btfss	207,3,c	;volatile
 31468  018C48  D011               	goto	u933_20
 31469  018C4A  D00D               	goto	u933_21
 31470  018C4C                     u930_28:
 31471                           
 31472                           ;stkvar	_sw_value @ sp[(-2)+1]
 31473  018C4C  0EFF               	movlw	-1
 31474  018C4E  0060  F033  FFE3   	movff	btemp+11,plusw1
 31475                           
 31476                           ;dio.c: 80:    break;
 31477  018C54  D027               	goto	l10230
 31478  018C56                     l10218:
 31479                           
 31480                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 31481  018C56  A4CF               	btfss	207,2,c	;volatile
 31482  018C58  D009               	goto	u933_20
 31483  018C5A  D005               	goto	u933_21
 31484  018C5C                     l10220:
 31485                           
 31486                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 31487  018C5C  A2CF               	btfss	207,1,c	;volatile
 31488  018C5E  D006               	goto	u933_20
 31489  018C60  D002               	goto	u933_21
 31490  018C62                     l10222:
 31491                           
 31492                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 31493  018C62  A0CF               	btfss	207,0,c	;volatile
 31494  018C64  D003               	goto	u933_20
 31495  018C66                     u933_21:
 31496  018C66  6A0C               	clrf	(btemp+11)^0,c
 31497  018C68  2A0C               	incf	(btemp+11)^0,f,c
 31498  018C6A  D7F0               	goto	u930_28
 31499  018C6C                     u933_20:
 31500  018C6C  6A0C               	clrf	(btemp+11)^0,c
 31501  018C6E  D7EE               	goto	u930_28
 31502  018C70                     l10224:
 31503                           
 31504                           ;dio.c: 91:    sw_value = 1;
 31505                           ;stkvar	_sw_value @ sp[(-2)+1]
 31506  018C70  0EFF               	movlw	-1
 31507  018C72  6AE3               	clrf	plusw1,c
 31508  018C74  2AE3               	incf	plusw1,f,c
 31509                           
 31510                           ;dio.c: 92:    break;
 31511  018C76  D016               	goto	l10230
 31512  018C78                     l10228:
 31513                           
 31514                           ;stkvar	_i @ sp[(-2)+0]
 31515  018C78  0EFE               	movlw	-2
 31516  018C7A  50E3               	movf	plusw1,w,c
 31517  018C7C  6E0B               	movwf	(btemp+10)^0,c
 31518  018C7E  6A0C               	clrf	(btemp+11)^0,c
 31519                           
 31520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31521                           ; Switch size 1, requested type "simple"
 31522                           ; Number of cases is 1, Range of values is 0 to 0
 31523                           ; switch strategies available:
 31524                           ; Name         Instructions Cycles
 31525                           ; simple_byte            4     3 (average)
 31526                           ;	Chosen strategy is simple_byte
 31527  018C80  500C               	movf	(btemp+11)^0,w,c
 31528  018C82  0A00               	xorlw	0	; case 0
 31529  018C84  A4D8               	btfss	status,2,c
 31530  018C86  D7F4               	goto	l10224
 31531                           
 31532                           ; Switch size 1, requested type "simple"
 31533                           ; Number of cases is 4, Range of values is 0 to 3
 31534                           ; switch strategies available:
 31535                           ; Name         Instructions Cycles
 31536                           ; simple_byte           13     7 (average)
 31537                           ;	Chosen strategy is simple_byte
 31538  018C88  500B               	movf	(btemp+10)^0,w,c
 31539  018C8A  0A00               	xorlw	0	; case 0
 31540  018C8C  B4D8               	btfsc	status,2,c
 31541  018C8E  D7E9               	goto	l10222
 31542  018C90  0A01               	xorlw	1	; case 1
 31543  018C92  B4D8               	btfsc	status,2,c
 31544  018C94  D7E3               	goto	l10220
 31545  018C96  0A03               	xorlw	3	; case 2
 31546  018C98  B4D8               	btfsc	status,2,c
 31547  018C9A  D7DD               	goto	l10218
 31548  018C9C  0A01               	xorlw	1	; case 3
 31549  018C9E  B4D8               	btfsc	status,2,c
 31550  018CA0  D7D2               	goto	l10216
 31551  018CA2  D7E6               	goto	l10224
 31552  018CA4                     l10230:
 31553                           
 31554                           ;dio.c: 96:   if (sw_value) {
 31555                           ;stkvar	_sw_value @ sp[(-2)+1]
 31556  018CA4  0EFF               	movlw	-1
 31557  018CA6  50E3               	movf	plusw1,w,c
 31558  018CA8  B4D8               	btfsc	status,2,c
 31559  018CAA  D018               	goto	l10236
 31560                           
 31561                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 31562                           ;stkvar	_i @ sp[(-2)+0]
 31563  018CAC  0EFE               	movlw	-2
 31564  018CAE  50E3               	movf	plusw1,w,c
 31565  018CB0  0D05               	mullw	5
 31566  018CB2  0EBD               	movlw	low _S
 31567  018CB4  24F3               	addwf	243,w,c
 31568  018CB6  6ED9               	movwf	fsr2l,c
 31569  018CB8  0E02               	movlw	high _S
 31570  018CBA  20F4               	addwfc	prodh,w,c
 31571  018CBC  6EDA               	movwf	fsr2h,c
 31572  018CBE  04DE               	decf	postinc2,w,c
 31573  018CC0  A4D8               	btfss	status,2,c
 31574  018CC2  D049               	goto	l10244
 31575                           
 31576                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 31577                           ;stkvar	_i @ sp[(-2)+0]
 31578  018CC4  0EFE               	movlw	-2
 31579  018CC6  50E3               	movf	plusw1,w,c
 31580  018CC8  0D05               	mullw	5
 31581  018CCA  0EBD               	movlw	low _S
 31582  018CCC  24F3               	addwf	243,w,c
 31583  018CCE  6ED9               	movwf	fsr2l,c
 31584  018CD0  0E02               	movlw	high _S
 31585  018CD2  20F4               	addwfc	prodh,w,c
 31586  018CD4  6EDA               	movwf	fsr2h,c
 31587  018CD6  0E00               	movlw	0
 31588  018CD8  6EDF               	movwf	indf2,c
 31589  018CDA  D03D               	goto	l10244
 31590  018CDC                     l10236:
 31591                           
 31592                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 31593                           ;stkvar	_i @ sp[(-2)+0]
 31594  018CDC  0EFE               	movlw	-2
 31595  018CDE  50E3               	movf	plusw1,w,c
 31596  018CE0  0D05               	mullw	5
 31597  018CE2  0EBD               	movlw	low _S
 31598  018CE4  24F3               	addwf	243,w,c
 31599  018CE6  6ED9               	movwf	fsr2l,c
 31600  018CE8  0E02               	movlw	high _S
 31601  018CEA  20F4               	addwfc	prodh,w,c
 31602  018CEC  6EDA               	movwf	fsr2h,c
 31603  018CEE  50DF               	movf	indf2,w,c
 31604  018CF0  A4D8               	btfss	status,2,c
 31605  018CF2  D031               	goto	l10244
 31606                           
 31607                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 31608                           ;stkvar	_i @ sp[(-2)+0]
 31609  018CF4  0EFE               	movlw	-2
 31610  018CF6  50E3               	movf	plusw1,w,c
 31611  018CF8  0D05               	mullw	5
 31612  018CFA  0EBD               	movlw	low _S
 31613  018CFC  24F3               	addwf	243,w,c
 31614  018CFE  6ED9               	movwf	fsr2l,c
 31615  018D00  0E02               	movlw	high _S
 31616  018D02  20F4               	addwfc	prodh,w,c
 31617  018D04  6EDA               	movwf	fsr2h,c
 31618  018D06  0E01               	movlw	1
 31619  018D08  6EDF               	movwf	indf2,c
 31620                           
 31621                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 31622  018D0A  EE20  F2B9         	lfsr	2,_V+185	;volatile
 31623                           
 31624                           ;stkvar	_i @ sp[(-2)+0]
 31625  018D0E  0EFE               	movlw	-2
 31626  018D10  50E3               	movf	plusw1,w,c
 31627  018D12  0D05               	mullw	5
 31628  018D14  0EBE               	movlw	low (_S+1)
 31629  018D16  24F3               	addwf	243,w,c
 31630  018D18  6EE9               	movwf	fsr0l,c
 31631  018D1A  0E02               	movlw	high (_S+1)
 31632  018D1C  20F4               	addwfc	prodh,w,c
 31633  018D1E  6EEA               	movwf	fsr0h,c
 31634  018D20  006F FF7B FFEE     	movff	postinc2,postinc0
 31635  018D26  006F FF7B FFEE     	movff	postinc2,postinc0
 31636  018D2C  006F FF7B FFEE     	movff	postinc2,postinc0
 31637  018D32  006F FF7B FFEE     	movff	postinc2,postinc0
 31638                           
 31639                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 31640                           ;stkvar	_i @ sp[(-2)+0]
 31641  018D38  0EFE               	movlw	-2
 31642  018D3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31643  018D40  0E01               	movlw	1
 31644  018D42  6E0B               	movwf	(btemp+10)^0,c
 31645  018D44  2A0C               	incf	(btemp+11)^0,f,c
 31646  018D46  D002               	goto	u937_24
 31647  018D48                     u937_25:
 31648  018D48  90D8               	bcf	status,0,c
 31649  018D4A  360B               	rlcf	(btemp+10)^0,f,c
 31650  018D4C                     u937_24:
 31651  018D4C  2E0C               	decfsz	(btemp+11)^0,f,c
 31652  018D4E  D7FC               	goto	u937_25
 31653  018D50  500B               	movf	(btemp+10)^0,w,c
 31654  018D52  0102               	movlb	2	; () banked
 31655  018D54  13E5               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31656  018D56                     l10244:
 31657                           
 31658                           ;dio.c: 107:  } while (++i < 4);
 31659                           ;stkvar	_i @ sp[(-2)+0]
 31660  018D56  0EFE               	movlw	-2
 31661  018D58  2AE3               	incf	plusw1,f,c
 31662  018D5A  0EFE               	movlw	-2
 31663  018D5C  006F FF8C  F001    	movff	plusw1,btemp
 31664  018D62  0E03               	movlw	3
 31665  018D64  6401               	cpfsgt	btemp^0,c
 31666  018D66  D788               	goto	l10228
 31667                           
 31668                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 31669  018D68  8EBD               	bsf	189,7,c	;volatile
 31670                           
 31671                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31672  018D6A  52E5               	movf	postdec1,f,c
 31673  018D6C  52E5               	movf	postdec1,f,c
 31674  018D6E  0012               	return		;funcret
 31675  018D70                     __end_of_switch_handler:
 31676                           	opt callstack 0
 31677                           
 31678 ;; *************** function _TMR5_ISR *****************
 31679 ;; Defined at:
 31680 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31681 ;; Parameters:    Size  Location     Type
 31682 ;;		None
 31683 ;; Auto vars:     Size  Location     Type
 31684 ;;		None
 31685 ;; Return value:  Size  Location     Type
 31686 ;;                  1    wreg      void 
 31687 ;; Registers used:
 31688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 31689 ;; Tracked objects:
 31690 ;;		On entry : 0/0
 31691 ;;		On exit  : 0/0
 31692 ;;		Unchanged: 0/0
 31693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31696 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31697 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31698 ;;Total ram usage:        4 bytes
 31699 ;; Hardware stack levels used:    1
 31700 ;; Hardware stack levels required when called:    5
 31701 ;; This function calls:
 31702 ;;		_TMR5_CallBack
 31703 ;;		_TMR5_WriteTimer
 31704 ;; This function is called by:
 31705 ;;		Interrupt level 1
 31706 ;; This function uses a non-reentrant model
 31707 ;;
 31708                           
 31709                           	psect	text140
 31710  01A808                     __ptext140:
 31711                           	opt callstack 0
 31712  01A808                     _TMR5_ISR:
 31713                           	opt callstack 12
 31714                           
 31715                           ;incstack = 0
 31716  01A808  006F FF60  F045    	movff	status,??_TMR5_ISR+2
 31717  01A80E  0060  F030  F046   	movff	btemp+11,??_TMR5_ISR+3
 31718  01A814  EE16  F061         	lfsr	1,___intlo_sp
 31719                           
 31720                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 31721  01A818  0139               	movlb	57	; () banked
 31722  01A81A  9DA8               	bcf	168,6,b	;volatile
 31723                           
 31724                           ; BSR set to: 57
 31725                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 31726  01A81C  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 31727  01A822  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31728  01A828  EC4E  F0D6         	call	_TMR5_WriteTimer	;wreg free
 31729                           
 31730                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 31731  01A82C  0102               	movlb	2	; () banked
 31732  01A82E  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 31733  01A830  6E43               	movwf	??_TMR5_ISR^0,c
 31734  01A832  6A44               	clrf	(??_TMR5_ISR+1)^0,c
 31735  01A834  0E05               	movlw	5
 31736  01A836  2643               	addwf	??_TMR5_ISR^0,f,c
 31737  01A838  0E00               	movlw	0
 31738  01A83A  2244               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31739  01A83C  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31740  01A83E  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31741  01A840  5043               	movf	??_TMR5_ISR^0,w,c
 31742  01A842  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31743  01A844  5044               	movf	(??_TMR5_ISR+1)^0,w,c
 31744  01A846  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31745  01A848  A0D8               	btfss	status,0,c
 31746  01A84A  D004               	goto	i1l1017
 31747                           
 31748                           ; BSR set to: 2
 31749                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 31750  01A84C  ECDE  F0D9         	call	_TMR5_CallBack	;wreg free
 31751                           
 31752                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 31753  01A850  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31754  01A852  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31755  01A854                     i1l1017:
 31756  01A854  0060  F118  F00C   	movff	??_TMR5_ISR+3,btemp+11
 31757  01A85A  0060  F117  FFD8   	movff	??_TMR5_ISR+2,status
 31758  01A860  0011               	retfie		f
 31759  01A862                     __end_of_TMR5_ISR:
 31760                           	opt callstack 0
 31761                           
 31762 ;; *************** function _TMR5_WriteTimer *****************
 31763 ;; Defined at:
 31764 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 31765 ;; Parameters:    Size  Location     Type
 31766 ;;  timerVal        2  [STACK] unsigned short 
 31767 ;; Auto vars:     Size  Location     Type
 31768 ;;		None
 31769 ;; Return value:  Size  Location     Type
 31770 ;;                  1  [STACK] void 
 31771 ;; Registers used:
 31772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31773 ;; Tracked objects:
 31774 ;;		On entry : 3F/39
 31775 ;;		On exit  : 0/0
 31776 ;;		Unchanged: 0/0
 31777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31782 ;;Total ram usage:        0 bytes
 31783 ;; Hardware stack levels used:    1
 31784 ;; Hardware stack levels required when called:    3
 31785 ;; This function calls:
 31786 ;;		Nothing
 31787 ;; This function is called by:
 31788 ;;		_TMR5_ISR
 31789 ;; This function uses a reentrant model
 31790 ;;
 31791                           
 31792                           	psect	text141
 31793  01AC9C                     __ptext141:
 31794                           	opt callstack 0
 31795  01AC9C                     _TMR5_WriteTimer:
 31796                           	opt callstack 13
 31797                           
 31798                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31799                           
 31800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31801                           ;incstack = 0
 31802  01AC9C  A49A               	btfss	154,2,c	;volatile
 31803  01AC9E  D00F               	goto	l10428
 31804                           
 31805                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31806  01ACA0  909A               	bcf	154,0,c	;volatile
 31807                           
 31808                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31809                           ;stkvar	_timerVal @ sp[(0)+-2]
 31810  01ACA2  0EFF               	movlw	255
 31811  01ACA4  24E1               	addwf	fsr1l,w,c
 31812  01ACA6  6ED9               	movwf	fsr2l,c
 31813  01ACA8  0EFF               	movlw	255
 31814  01ACAA  20E2               	addwfc	fsr1h,w,c
 31815  01ACAC  6EDA               	movwf	fsr2h,c
 31816  01ACAE  50DF               	movf	indf2,w,c
 31817  01ACB0  6E99               	movwf	153,c	;volatile
 31818                           
 31819                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31820                           ;stkvar	_timerVal @ sp[(0)+-2]
 31821  01ACB2  0EFE               	movlw	-2
 31822  01ACB4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31823                           
 31824                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31825  01ACBA  809A               	bsf	154,0,c	;volatile
 31826                           
 31827                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31828  01ACBC  D00C               	goto	l1000
 31829  01ACBE                     l10428:
 31830                           
 31831                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31832                           ;stkvar	_timerVal @ sp[(0)+-2]
 31833  01ACBE  0EFF               	movlw	255
 31834  01ACC0  24E1               	addwf	fsr1l,w,c
 31835  01ACC2  6ED9               	movwf	fsr2l,c
 31836  01ACC4  0EFF               	movlw	255
 31837  01ACC6  20E2               	addwfc	fsr1h,w,c
 31838  01ACC8  6EDA               	movwf	fsr2h,c
 31839  01ACCA  50DF               	movf	indf2,w,c
 31840  01ACCC  6E99               	movwf	153,c	;volatile
 31841                           
 31842                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31843                           ;stkvar	_timerVal @ sp[(0)+-2]
 31844  01ACCE  0EFE               	movlw	-2
 31845  01ACD0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31846  01ACD6                     l1000:
 31847                           
 31848                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31849  01ACD6  52E5               	movf	postdec1,f,c
 31850  01ACD8  52E5               	movf	postdec1,f,c
 31851  01ACDA  0012               	return		;funcret
 31852  01ACDC                     __end_of_TMR5_WriteTimer:
 31853                           	opt callstack 0
 31854                           
 31855 ;; *************** function _TMR5_CallBack *****************
 31856 ;; Defined at:
 31857 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31858 ;; Parameters:    Size  Location     Type
 31859 ;;		None
 31860 ;; Auto vars:     Size  Location     Type
 31861 ;;		None
 31862 ;; Return value:  Size  Location     Type
 31863 ;;                  1  [STACK] void 
 31864 ;; Registers used:
 31865 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31866 ;; Tracked objects:
 31867 ;;		On entry : 3F/2
 31868 ;;		On exit  : 0/0
 31869 ;;		Unchanged: 0/0
 31870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31875 ;;Total ram usage:        0 bytes
 31876 ;; Hardware stack levels used:    1
 31877 ;; Hardware stack levels required when called:    4
 31878 ;; This function calls:
 31879 ;;		Absolute function
 31880 ;;		_TMR5_DefaultInterruptHandler
 31881 ;; This function is called by:
 31882 ;;		_TMR5_ISR
 31883 ;; This function uses a reentrant model
 31884 ;;
 31885                           
 31886                           	psect	text142
 31887  01B3BC                     __ptext142:
 31888                           	opt callstack 0
 31889  01B3BC                     _TMR5_CallBack:
 31890                           	opt callstack 12
 31891                           
 31892                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31893                           
 31894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31895                           ;incstack = 0
 31896  01B3BC  0100               	movlb	0	; () banked
 31897  01B3BE  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31898  01B3C0  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31899  01B3C2  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31900  01B3C4  B4D8               	btfsc	status,2,c
 31901  01B3C6  0012               	return	
 31902                           
 31903                           ; BSR set to: 0
 31904                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31905  01B3C8  D801               	call	u966_28
 31906  01B3CA  0012               	return	
 31907  01B3CC                     u966_28:
 31908  01B3CC  0005               	push	
 31909  01B3CE  6EFA               	movwf	pclath,c
 31910  01B3D0  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31911  01B3D2  6EFD               	movwf	tosl,c
 31912  01B3D4  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31913  01B3D6  6EFE               	movwf	tosh,c
 31914  01B3D8  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31915  01B3DA  6EFF               	movwf	tosu,c
 31916  01B3DC  50FA               	movf	pclath,w,c
 31917  01B3DE  0012               	return		;indir
 31918  01B3E0                     __end_of_TMR5_CallBack:
 31919                           	opt callstack 0
 31920                           
 31921 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31922 ;; Defined at:
 31923 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31924 ;; Parameters:    Size  Location     Type
 31925 ;;		None
 31926 ;; Auto vars:     Size  Location     Type
 31927 ;;		None
 31928 ;; Return value:  Size  Location     Type
 31929 ;;                  1  [STACK] void 
 31930 ;; Registers used:
 31931 ;;		wreg, status,2, status,0, btemp+11
 31932 ;; Tracked objects:
 31933 ;;		On entry : 3F/0
 31934 ;;		On exit  : 3F/2
 31935 ;;		Unchanged: 0/0
 31936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31941 ;;Total ram usage:        0 bytes
 31942 ;; Hardware stack levels used:    1
 31943 ;; Hardware stack levels required when called:    3
 31944 ;; This function calls:
 31945 ;;		Nothing
 31946 ;; This function is called by:
 31947 ;;		_TMR5_Initialize
 31948 ;;		_TMR5_CallBack
 31949 ;; This function uses a reentrant model
 31950 ;;
 31951                           
 31952                           	psect	text143
 31953  01AED6                     __ptext143:
 31954                           	opt callstack 0
 31955  01AED6                     _TMR5_DefaultInterruptHandler:
 31956                           	opt callstack 12
 31957                           
 31958                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31959                           
 31960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31961                           ;incstack = 0
 31962  01AED6  A0BE               	btfss	190,0,c	;volatile
 31963  01AED8  D002               	goto	u902_20
 31964  01AEDA  0E01               	movlw	1
 31965  01AEDC  D001               	goto	u902_26
 31966  01AEDE                     u902_20:
 31967  01AEDE  0E00               	movlw	0
 31968  01AEE0                     u902_26:
 31969  01AEE0  0AFF               	xorlw	255
 31970  01AEE2  6E0C               	movwf	(btemp+11)^0,c
 31971  01AEE4  50BE               	movf	190,w,c	;volatile
 31972  01AEE6  180C               	xorwf	(btemp+11)^0,w,c
 31973  01AEE8  0BFE               	andlw	-2
 31974  01AEEA  180C               	xorwf	(btemp+11)^0,w,c
 31975  01AEEC  6EBE               	movwf	190,c	;volatile
 31976                           
 31977                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31978  01AEEE  0E01               	movlw	1
 31979  01AEF0  0102               	movlb	2	; () banked
 31980  01AEF2  27B9               	addwf	(_V+185)& (0+255),f,b	;volatile
 31981  01AEF4  0E00               	movlw	0
 31982  01AEF6  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 31983  01AEF8  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 31984  01AEFA  23BC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 31985                           
 31986                           ; BSR set to: 2
 31987                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 31988  01AEFC  0E01               	movlw	1
 31989  01AEFE  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 31990  01AF00  0E00               	movlw	0
 31991  01AF02  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 31992  01AF04  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 31993  01AF06  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 31994                           
 31995                           ; BSR set to: 2
 31996                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31997  01AF08  0012               	return		;funcret
 31998  01AF0A                     __end_of_TMR5_DefaultInterruptHandler:
 31999                           	opt callstack 0
 32000                           
 32001 ;; *************** function _TMR3_ISR *****************
 32002 ;; Defined at:
 32003 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32004 ;; Parameters:    Size  Location     Type
 32005 ;;		None
 32006 ;; Auto vars:     Size  Location     Type
 32007 ;;		None
 32008 ;; Return value:  Size  Location     Type
 32009 ;;                  1    wreg      void 
 32010 ;; Registers used:
 32011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32012 ;; Tracked objects:
 32013 ;;		On entry : 0/0
 32014 ;;		On exit  : 3F/0
 32015 ;;		Unchanged: 0/0
 32016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32019 ;;      Temps:          0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32020 ;;      Totals:         0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32021 ;;Total ram usage:       25 bytes
 32022 ;; Hardware stack levels used:    1
 32023 ;; Hardware stack levels required when called:   14
 32024 ;; This function calls:
 32025 ;;		_TMR3_CallBack
 32026 ;;		_TMR3_WriteTimer
 32027 ;; This function is called by:
 32028 ;;		Interrupt level 1
 32029 ;; This function uses a non-reentrant model
 32030 ;;
 32031                           
 32032                           	psect	text144
 32033  018844                     __ptext144:
 32034                           	opt callstack 0
 32035  018844                     _TMR3_ISR:
 32036                           	opt callstack 3
 32037                           
 32038                           ; BSR set to: 2
 32039                           ;incstack = 0
 32040  018844  006F FF60  F3E4    	movff	status,??_TMR3_ISR
 32041  01884A  006F FFD8  F3E5    	movff	tblptrl,??_TMR3_ISR+1
 32042  018850  006F FFDC  F3E6    	movff	tblptrh,??_TMR3_ISR+2
 32043  018856  006F FFE0  F3E7    	movff	tblptru,??_TMR3_ISR+3
 32044  01885C  006F FFD4  F3E8    	movff	tablat,??_TMR3_ISR+4
 32045  018862  0060  F004  F3E9   	movff	btemp,??_TMR3_ISR+5
 32046  018868  0060  F008  F3EA   	movff	btemp+1,??_TMR3_ISR+6
 32047  01886E  0060  F00C  F3EB   	movff	btemp+2,??_TMR3_ISR+7
 32048  018874  0060  F010  F3EC   	movff	btemp+3,??_TMR3_ISR+8
 32049  01887A  0060  F014  F3ED   	movff	btemp+4,??_TMR3_ISR+9
 32050  018880  0060  F018  F3EE   	movff	btemp+5,??_TMR3_ISR+10
 32051  018886  0060  F01C  F3EF   	movff	btemp+6,??_TMR3_ISR+11
 32052  01888C  0060  F020  F3F0   	movff	btemp+7,??_TMR3_ISR+12
 32053  018892  0060  F024  F3F1   	movff	btemp+8,??_TMR3_ISR+13
 32054  018898  0060  F028  F3F2   	movff	btemp+9,??_TMR3_ISR+14
 32055  01889E  0060  F02C  F3F3   	movff	btemp+10,??_TMR3_ISR+15
 32056  0188A4  0060  F030  F3F4   	movff	btemp+11,??_TMR3_ISR+16
 32057  0188AA  0060  F044  F3F5   	movff	btemp+16,??_TMR3_ISR+17
 32058  0188B0  0060  F048  F3F6   	movff	btemp+17,??_TMR3_ISR+18
 32059  0188B6  0060  F04C  F3F7   	movff	btemp+18,??_TMR3_ISR+19
 32060  0188BC  0060  F050  F3F8   	movff	btemp+19,??_TMR3_ISR+20
 32061  0188C2  0060  F054  F3F9   	movff	btemp+20,??_TMR3_ISR+21
 32062  0188C8  0060  F058  F3FA   	movff	btemp+21,??_TMR3_ISR+22
 32063  0188CE  0060  F05C  F3FB   	movff	btemp+22,??_TMR3_ISR+23
 32064  0188D4  0060  F060  F3FC   	movff	btemp+23,??_TMR3_ISR+24
 32065  0188DA  EE16  F061         	lfsr	1,___intlo_sp
 32066                           
 32067                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32068  0188DE  0139               	movlb	57	; () banked
 32069  0188E0  9DA6               	bcf	166,6,b	;volatile
 32070                           
 32071                           ; BSR set to: 57
 32072                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32073  0188E2  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 32074  0188E8  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32075  0188EE  EC6E  F0D6         	call	_TMR3_WriteTimer	;wreg free
 32076                           
 32077                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32078  0188F2  0100               	movlb	0	; () banked
 32079  0188F4  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32080  0188F6  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32081  0188F8  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32082  0188FA  E104               	bnz	i1u1205_20
 32083  0188FC  0E28               	movlw	40
 32084  0188FE  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32085  018900  A0D8               	btfss	status,0,c
 32086  018902  D005               	goto	i1l1205
 32087  018904                     i1u1205_20:
 32088                           
 32089                           ; BSR set to: 0
 32090                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32091  018904  ECF0  F0D9         	call	_TMR3_CallBack	;wreg free
 32092                           
 32093                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32094  018908  0100               	movlb	0	; () banked
 32095  01890A  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32096  01890C  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32097  01890E                     i1l1205:
 32098                           
 32099                           ; BSR set to: 0
 32100  01890E  0060  FFF0  F018   	movff	??_TMR3_ISR+24,btemp+23
 32101  018914  0060  FFEC  F017   	movff	??_TMR3_ISR+23,btemp+22
 32102  01891A  0060  FFE8  F016   	movff	??_TMR3_ISR+22,btemp+21
 32103  018920  0060  FFE4  F015   	movff	??_TMR3_ISR+21,btemp+20
 32104  018926  0060  FFE0  F014   	movff	??_TMR3_ISR+20,btemp+19
 32105  01892C  0060  FFDC  F013   	movff	??_TMR3_ISR+19,btemp+18
 32106  018932  0060  FFD8  F012   	movff	??_TMR3_ISR+18,btemp+17
 32107  018938  0060  FFD4  F011   	movff	??_TMR3_ISR+17,btemp+16
 32108  01893E  0060  FFD0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 32109  018944  0060  FFCC  F00B   	movff	??_TMR3_ISR+15,btemp+10
 32110  01894A  0060  FFC8  F00A   	movff	??_TMR3_ISR+14,btemp+9
 32111  018950  0060  FFC4  F009   	movff	??_TMR3_ISR+13,btemp+8
 32112  018956  0060  FFC0  F008   	movff	??_TMR3_ISR+12,btemp+7
 32113  01895C  0060  FFBC  F007   	movff	??_TMR3_ISR+11,btemp+6
 32114  018962  0060  FFB8  F006   	movff	??_TMR3_ISR+10,btemp+5
 32115  018968  0060  FFB4  F005   	movff	??_TMR3_ISR+9,btemp+4
 32116  01896E  0060  FFB0  F004   	movff	??_TMR3_ISR+8,btemp+3
 32117  018974  0060  FFAC  F003   	movff	??_TMR3_ISR+7,btemp+2
 32118  01897A  0060  FFA8  F002   	movff	??_TMR3_ISR+6,btemp+1
 32119  018980  0060  FFA4  F001   	movff	??_TMR3_ISR+5,btemp
 32120  018986  0060  FFA3  FFF5   	movff	??_TMR3_ISR+4,tablat
 32121  01898C  0060  FF9F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32122  018992  0060  FF9B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32123  018998  0060  FF97  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32124  01899E  0060  FF93  FFD8   	movff	??_TMR3_ISR,status
 32125  0189A4  0011               	retfie		f
 32126  0189A6                     __end_of_TMR3_ISR:
 32127                           	opt callstack 0
 32128                           
 32129 ;; *************** function _TMR3_WriteTimer *****************
 32130 ;; Defined at:
 32131 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32132 ;; Parameters:    Size  Location     Type
 32133 ;;  timerVal        2  [STACK] unsigned short 
 32134 ;; Auto vars:     Size  Location     Type
 32135 ;;		None
 32136 ;; Return value:  Size  Location     Type
 32137 ;;                  1  [STACK] void 
 32138 ;; Registers used:
 32139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32140 ;; Tracked objects:
 32141 ;;		On entry : 3F/39
 32142 ;;		On exit  : 0/0
 32143 ;;		Unchanged: 0/0
 32144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32149 ;;Total ram usage:        0 bytes
 32150 ;; Hardware stack levels used:    1
 32151 ;; Hardware stack levels required when called:    3
 32152 ;; This function calls:
 32153 ;;		Nothing
 32154 ;; This function is called by:
 32155 ;;		_TMR3_ISR
 32156 ;; This function uses a reentrant model
 32157 ;;
 32158                           
 32159                           	psect	text145
 32160  01ACDC                     __ptext145:
 32161                           	opt callstack 0
 32162  01ACDC                     _TMR3_WriteTimer:
 32163                           	opt callstack 13
 32164                           
 32165                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32166                           
 32167                           ; BSR set to: 0
 32168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32169                           ;incstack = 0
 32170  01ACDC  A4A6               	btfss	166,2,c	;volatile
 32171  01ACDE  D00F               	goto	l10446
 32172                           
 32173                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32174  01ACE0  90A6               	bcf	166,0,c	;volatile
 32175                           
 32176                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32177                           ;stkvar	_timerVal @ sp[(0)+-2]
 32178  01ACE2  0EFF               	movlw	255
 32179  01ACE4  24E1               	addwf	fsr1l,w,c
 32180  01ACE6  6ED9               	movwf	fsr2l,c
 32181  01ACE8  0EFF               	movlw	255
 32182  01ACEA  20E2               	addwfc	fsr1h,w,c
 32183  01ACEC  6EDA               	movwf	fsr2h,c
 32184  01ACEE  50DF               	movf	indf2,w,c
 32185  01ACF0  6EA5               	movwf	165,c	;volatile
 32186                           
 32187                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32188                           ;stkvar	_timerVal @ sp[(0)+-2]
 32189  01ACF2  0EFE               	movlw	-2
 32190  01ACF4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32191                           
 32192                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32193  01ACFA  80A6               	bsf	166,0,c	;volatile
 32194                           
 32195                           ;mcc_generated_files/tmr3.c: 141:     }
 32196  01ACFC  D00C               	goto	l1188
 32197  01ACFE                     l10446:
 32198                           
 32199                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32200                           ;stkvar	_timerVal @ sp[(0)+-2]
 32201  01ACFE  0EFF               	movlw	255
 32202  01AD00  24E1               	addwf	fsr1l,w,c
 32203  01AD02  6ED9               	movwf	fsr2l,c
 32204  01AD04  0EFF               	movlw	255
 32205  01AD06  20E2               	addwfc	fsr1h,w,c
 32206  01AD08  6EDA               	movwf	fsr2h,c
 32207  01AD0A  50DF               	movf	indf2,w,c
 32208  01AD0C  6EA5               	movwf	165,c	;volatile
 32209                           
 32210                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32211                           ;stkvar	_timerVal @ sp[(0)+-2]
 32212  01AD0E  0EFE               	movlw	-2
 32213  01AD10  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32214  01AD16                     l1188:
 32215                           
 32216                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32217  01AD16  52E5               	movf	postdec1,f,c
 32218  01AD18  52E5               	movf	postdec1,f,c
 32219  01AD1A  0012               	return		;funcret
 32220  01AD1C                     __end_of_TMR3_WriteTimer:
 32221                           	opt callstack 0
 32222                           
 32223 ;; *************** function _TMR3_CallBack *****************
 32224 ;; Defined at:
 32225 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32226 ;; Parameters:    Size  Location     Type
 32227 ;;		None
 32228 ;; Auto vars:     Size  Location     Type
 32229 ;;		None
 32230 ;; Return value:  Size  Location     Type
 32231 ;;                  1  [STACK] void 
 32232 ;; Registers used:
 32233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32234 ;; Tracked objects:
 32235 ;;		On entry : 3F/0
 32236 ;;		On exit  : 0/0
 32237 ;;		Unchanged: 0/0
 32238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32243 ;;Total ram usage:        0 bytes
 32244 ;; Hardware stack levels used:    1
 32245 ;; Hardware stack levels required when called:   13
 32246 ;; This function calls:
 32247 ;;		Absolute function
 32248 ;;		_TMR3_DefaultInterruptHandler
 32249 ;;		_calc_bsoc
 32250 ;; This function is called by:
 32251 ;;		_TMR3_ISR
 32252 ;; This function uses a reentrant model
 32253 ;;
 32254                           
 32255                           	psect	text146
 32256  01B3E0                     __ptext146:
 32257                           	opt callstack 0
 32258  01B3E0                     _TMR3_CallBack:
 32259                           	opt callstack 3
 32260                           
 32261                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32262                           
 32263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32264                           ;incstack = 0
 32265  01B3E0  0100               	movlb	0	; () banked
 32266  01B3E2  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32267  01B3E4  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32268  01B3E6  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32269  01B3E8  B4D8               	btfsc	status,2,c
 32270  01B3EA  0012               	return	
 32271                           
 32272                           ; BSR set to: 0
 32273                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32274  01B3EC  D801               	call	u1196_28
 32275  01B3EE  0012               	return	
 32276  01B3F0                     u1196_28:
 32277  01B3F0  0005               	push	
 32278  01B3F2  6EFA               	movwf	pclath,c
 32279  01B3F4  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32280  01B3F6  6EFD               	movwf	tosl,c
 32281  01B3F8  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32282  01B3FA  6EFE               	movwf	tosh,c
 32283  01B3FC  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32284  01B3FE  6EFF               	movwf	tosu,c
 32285  01B400  50FA               	movf	pclath,w,c
 32286  01B402  0012               	return		;indir
 32287  01B404                     __end_of_TMR3_CallBack:
 32288                           	opt callstack 0
 32289                           
 32290 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32291 ;; Defined at:
 32292 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32293 ;; Parameters:    Size  Location     Type
 32294 ;;		None
 32295 ;; Auto vars:     Size  Location     Type
 32296 ;;		None
 32297 ;; Return value:  Size  Location     Type
 32298 ;;                  1  [STACK] void 
 32299 ;; Registers used:
 32300 ;;		None
 32301 ;; Tracked objects:
 32302 ;;		On entry : 3F/0
 32303 ;;		On exit  : 0/0
 32304 ;;		Unchanged: 0/0
 32305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32310 ;;Total ram usage:        0 bytes
 32311 ;; Hardware stack levels used:    1
 32312 ;; Hardware stack levels required when called:    3
 32313 ;; This function calls:
 32314 ;;		Nothing
 32315 ;; This function is called by:
 32316 ;;		_TMR3_Initialize
 32317 ;;		_TMR3_CallBack
 32318 ;; This function uses a reentrant model
 32319 ;;
 32320                           
 32321                           	psect	text147
 32322  01B718                     __ptext147:
 32323                           	opt callstack 0
 32324  01B718                     _TMR3_DefaultInterruptHandler:
 32325                           	opt callstack 12
 32326                           
 32327                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32328                           
 32329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32330                           ;incstack = 0
 32331  01B718  0012               	return		;funcret
 32332  01B71A                     __end_of_TMR3_DefaultInterruptHandler:
 32333                           	opt callstack 0
 32334                           
 32335 ;; *************** function _calc_bsoc *****************
 32336 ;; Defined at:
 32337 ;;		line 39 in file "bsoc.c"
 32338 ;; Parameters:    Size  Location     Type
 32339 ;;		None
 32340 ;; Auto vars:     Size  Location     Type
 32341 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32342 ;;		 -> port_data(512), 
 32343 ;; Return value:  Size  Location     Type
 32344 ;;                  1  [STACK] void 
 32345 ;; Registers used:
 32346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32347 ;; Tracked objects:
 32348 ;;		On entry : 3F/0
 32349 ;;		On exit  : 3F/1
 32350 ;;		Unchanged: 0/0
 32351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32356 ;;Total ram usage:        0 bytes
 32357 ;; Hardware stack levels used:    1
 32358 ;; Hardware stack levels required when called:   12
 32359 ;; This function calls:
 32360 ;;		_StartTimer
 32361 ;;		___fladd
 32362 ;;		___fldiv
 32363 ;;		___flge
 32364 ;;		___flmul
 32365 ;;		___flneg
 32366 ;;		___fltol
 32367 ;;		_fabsf
 32368 ;;		_port_data_dma_ptr
 32369 ;;		_send_port_data_dma
 32370 ;;		_sprintf
 32371 ;;		_strlen
 32372 ;; This function is called by:
 32373 ;;		_init_bsoc
 32374 ;;		_TMR3_CallBack
 32375 ;; This function uses a reentrant model
 32376 ;;
 32377                           
 32378                           	psect	text148
 32379  014204                     __ptext148:
 32380                           	opt callstack 0
 32381  014204                     _calc_bsoc:
 32382                           	opt callstack 0
 32383                           
 32384                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32385  014204  52E6               	movf	postinc1,f,c
 32386  014206  52E6               	movf	postinc1,f,c
 32387                           
 32388                           ;incstack = 0
 32389                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 32390  014208  82BE               	bsf	190,1,c	;volatile
 32391                           
 32392                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 32393  01420A  0E00               	movlw	0
 32394  01420C  6EE6               	movwf	postinc1,c
 32395  01420E  0E00               	movlw	0
 32396  014210  6EE6               	movwf	postinc1,c
 32397  014212  0E61               	movlw	97
 32398  014214  6EE6               	movwf	postinc1,c
 32399  014216  0E45               	movlw	69
 32400  014218  6EE6               	movwf	postinc1,c
 32401  01421A  0060  F513  FFE6   	movff	_C+68,postinc1
 32402  014220  0060  F517  FFE6   	movff	_C+69,postinc1
 32403  014226  0060  F51B  FFE6   	movff	_C+70,postinc1
 32404  01422C  0060  F51F  FFE6   	movff	_C+71,postinc1
 32405  014232  EC9B  F0A4         	call	___fldiv	;wreg free
 32406  014236  0060  F007  FFE6   	movff	btemp,postinc1
 32407  01423C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32408  014242  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32409  014248  0060  F013  FFE6   	movff	btemp+3,postinc1
 32410  01424E  0060  F633  FFE6   	movff	_C+140,postinc1
 32411  014254  0060  F637  FFE6   	movff	_C+141,postinc1
 32412  01425A  0060  F63B  FFE6   	movff	_C+142,postinc1
 32413  014260  0060  F63F  FFE6   	movff	_C+143,postinc1
 32414  014266  EC24  F09D         	call	___fladd	;wreg free
 32415  01426A  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 32416  014270  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 32417  014276  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 32418  01427C  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 32419                           
 32420                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 32421  014282  0060  F633  FFE6   	movff	_C+140,postinc1
 32422  014288  0060  F637  FFE6   	movff	_C+141,postinc1
 32423  01428E  0060  F63B  FFE6   	movff	_C+142,postinc1
 32424  014294  0060  F63F  FFE6   	movff	_C+143,postinc1
 32425  01429A  0060  F623  FFE6   	movff	_C+136,postinc1
 32426  0142A0  0060  F627  FFE6   	movff	_C+137,postinc1
 32427  0142A6  0060  F62B  FFE6   	movff	_C+138,postinc1
 32428  0142AC  0060  F62F  FFE6   	movff	_C+139,postinc1
 32429  0142B2  EC70  F0C3         	call	___flge	;wreg free
 32430  0142B6  B001               	btfsc	btemp& (0+255),0,c
 32431  0142B8  D008               	goto	l12356
 32432                           
 32433                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 32434  0142BA  C188  F18C         	movff	_C+136,_C+140	;volatile
 32435  0142BE  C189  F18D         	movff	_C+137,_C+141	;volatile
 32436  0142C2  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32437  0142C6  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32438  0142CA                     l12356:
 32439                           
 32440                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 32441  0142CA  0ECD               	movlw	205
 32442  0142CC  6EE6               	movwf	postinc1,c
 32443  0142CE  0ECC               	movlw	204
 32444  0142D0  6EE6               	movwf	postinc1,c
 32445  0142D2  0ECC               	movlw	204
 32446  0142D4  6EE6               	movwf	postinc1,c
 32447  0142D6  0E3D               	movlw	61
 32448  0142D8  6EE6               	movwf	postinc1,c
 32449  0142DA  0060  F633  FFE6   	movff	_C+140,postinc1
 32450  0142E0  0060  F637  FFE6   	movff	_C+141,postinc1
 32451  0142E6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32452  0142EC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32453  0142F2  EC70  F0C3         	call	___flge	;wreg free
 32454  0142F6  B001               	btfsc	btemp& (0+255),0,c
 32455  0142F8  D009               	goto	l12360
 32456                           
 32457                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 32458  0142FA  0ECD               	movlw	205
 32459  0142FC  0101               	movlb	1	; () banked
 32460  0142FE  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32461  014300  0ECC               	movlw	204
 32462  014302  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32463  014304  0ECC               	movlw	204
 32464  014306  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32465  014308  0E3D               	movlw	61
 32466  01430A  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32467  01430C                     l12360:
 32468                           
 32469                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 32470  01430C  0E00               	movlw	0
 32471  01430E  6EE6               	movwf	postinc1,c
 32472  014310  0E00               	movlw	0
 32473  014312  6EE6               	movwf	postinc1,c
 32474  014314  0E61               	movlw	97
 32475  014316  6EE6               	movwf	postinc1,c
 32476  014318  0E45               	movlw	69
 32477  01431A  6EE6               	movwf	postinc1,c
 32478  01431C  0060  F523  FFE6   	movff	_C+72,postinc1
 32479  014322  0060  F527  FFE6   	movff	_C+73,postinc1
 32480  014328  0060  F52B  FFE6   	movff	_C+74,postinc1
 32481  01432E  0060  F52F  FFE6   	movff	_C+75,postinc1
 32482  014334  EC9B  F0A4         	call	___fldiv	;wreg free
 32483  014338  0060  F007  FFE6   	movff	btemp,postinc1
 32484  01433E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32485  014344  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32486  01434A  0060  F013  FFE6   	movff	btemp+3,postinc1
 32487  014350  0060  F643  FFE6   	movff	_C+144,postinc1
 32488  014356  0060  F647  FFE6   	movff	_C+145,postinc1
 32489  01435C  0060  F64B  FFE6   	movff	_C+146,postinc1
 32490  014362  0060  F64F  FFE6   	movff	_C+147,postinc1
 32491  014368  EC24  F09D         	call	___fladd	;wreg free
 32492  01436C  0060  F004  F190   	movff	btemp,_C+144	;volatile
 32493  014372  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 32494  014378  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 32495  01437E  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 32496                           
 32497                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 32498  014384  0E00               	movlw	0
 32499  014386  6EE6               	movwf	postinc1,c
 32500  014388  0E00               	movlw	0
 32501  01438A  6EE6               	movwf	postinc1,c
 32502  01438C  0E61               	movlw	97
 32503  01438E  6EE6               	movwf	postinc1,c
 32504  014390  0E45               	movlw	69
 32505  014392  6EE6               	movwf	postinc1,c
 32506  014394  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32507  01439A  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32508  0143A0  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32509  0143A6  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32510  0143AC  EC9B  F0A4         	call	___fldiv	;wreg free
 32511  0143B0  0060  F007  FFE6   	movff	btemp,postinc1
 32512  0143B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32513  0143BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32514  0143C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 32515  0143C8  0060  F683  FFE6   	movff	_C+160,postinc1
 32516  0143CE  0060  F687  FFE6   	movff	_C+161,postinc1
 32517  0143D4  0060  F68B  FFE6   	movff	_C+162,postinc1
 32518  0143DA  0060  F68F  FFE6   	movff	_C+163,postinc1
 32519  0143E0  EC24  F09D         	call	___fladd	;wreg free
 32520  0143E4  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 32521  0143EA  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 32522  0143F0  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 32523  0143F6  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 32524                           
 32525                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 32526  0143FC  0E00               	movlw	0
 32527  0143FE  6EE6               	movwf	postinc1,c
 32528  014400  0E00               	movlw	0
 32529  014402  6EE6               	movwf	postinc1,c
 32530  014404  0E61               	movlw	97
 32531  014406  6EE6               	movwf	postinc1,c
 32532  014408  0E45               	movlw	69
 32533  01440A  6EE6               	movwf	postinc1,c
 32534  01440C  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32535  014412  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32536  014418  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32537  01441E  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32538  014424  EC9B  F0A4         	call	___fldiv	;wreg free
 32539  014428  0060  F007  FFE6   	movff	btemp,postinc1
 32540  01442E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32541  014434  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32542  01443A  0060  F013  FFE6   	movff	btemp+3,postinc1
 32543  014440  0060  F693  FFE6   	movff	_C+164,postinc1
 32544  014446  0060  F697  FFE6   	movff	_C+165,postinc1
 32545  01444C  0060  F69B  FFE6   	movff	_C+166,postinc1
 32546  014452  0060  F69F  FFE6   	movff	_C+167,postinc1
 32547  014458  EC24  F09D         	call	___fladd	;wreg free
 32548  01445C  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 32549  014462  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 32550  014468  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 32551  01446E  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 32552                           
 32553                           ;bsoc.c: 54:  C.loadkw += (C.p_load / 3600.0);
 32554  014474  0E00               	movlw	0
 32555  014476  6EE6               	movwf	postinc1,c
 32556  014478  0E00               	movlw	0
 32557  01447A  6EE6               	movwf	postinc1,c
 32558  01447C  0E61               	movlw	97
 32559  01447E  6EE6               	movwf	postinc1,c
 32560  014480  0E45               	movlw	69
 32561  014482  6EE6               	movwf	postinc1,c
 32562  014484  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32563  01448A  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32564  014490  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32565  014496  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32566  01449C  EC9B  F0A4         	call	___fldiv	;wreg free
 32567  0144A0  0060  F007  FFE6   	movff	btemp,postinc1
 32568  0144A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32569  0144AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32570  0144B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 32571  0144B8  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32572  0144BE  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32573  0144C4  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32574  0144CA  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32575  0144D0  EC24  F09D         	call	___fladd	;wreg free
 32576  0144D4  0060  F004  F1A8   	movff	btemp,_C+168	;volatile
 32577  0144DA  0060  F008  F1A9   	movff	btemp+1,_C+169	;volatile
 32578  0144E0  0060  F00C  F1AA   	movff	btemp+2,_C+170	;volatile
 32579  0144E6  0060  F010  F1AB   	movff	btemp+3,_C+171	;volatile
 32580                           
 32581                           ;bsoc.c: 55:  if (C.p_bat > 0.0)
 32582  0144EC  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32583  0144F2  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32584  0144F8  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32585  0144FE  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32586  014504  0E00               	movlw	0
 32587  014506  6EE6               	movwf	postinc1,c
 32588  014508  0E00               	movlw	0
 32589  01450A  6EE6               	movwf	postinc1,c
 32590  01450C  0E00               	movlw	0
 32591  01450E  6EE6               	movwf	postinc1,c
 32592  014510  0E00               	movlw	0
 32593  014512  6EE6               	movwf	postinc1,c
 32594  014514  EC70  F0C3         	call	___flge	;wreg free
 32595  014518  B001               	btfsc	btemp& (0+255),0,c
 32596  01451A  D03C               	goto	l12372
 32597                           
 32598                           ;bsoc.c: 56:   C.bkwi += (C.p_bat / 3600.0);
 32599  01451C  0E00               	movlw	0
 32600  01451E  6EE6               	movwf	postinc1,c
 32601  014520  0E00               	movlw	0
 32602  014522  6EE6               	movwf	postinc1,c
 32603  014524  0E61               	movlw	97
 32604  014526  6EE6               	movwf	postinc1,c
 32605  014528  0E45               	movlw	69
 32606  01452A  6EE6               	movwf	postinc1,c
 32607  01452C  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32608  014532  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32609  014538  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32610  01453E  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32611  014544  EC9B  F0A4         	call	___fldiv	;wreg free
 32612  014548  0060  F007  FFE6   	movff	btemp,postinc1
 32613  01454E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32614  014554  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32615  01455A  0060  F013  FFE6   	movff	btemp+3,postinc1
 32616  014560  0060  F663  FFE6   	movff	_C+152,postinc1
 32617  014566  0060  F667  FFE6   	movff	_C+153,postinc1
 32618  01456C  0060  F66B  FFE6   	movff	_C+154,postinc1
 32619  014572  0060  F66F  FFE6   	movff	_C+155,postinc1
 32620  014578  EC24  F09D         	call	___fladd	;wreg free
 32621  01457C  0060  F004  F198   	movff	btemp,_C+152	;volatile
 32622  014582  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 32623  014588  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 32624  01458E  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 32625  014594                     l12372:
 32626                           
 32627                           ;bsoc.c: 57:  if (C.p_bat < 0.0)
 32628  014594  0101               	movlb	1	; () banked
 32629  014596  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32630  014598  D04A               	goto	l12376
 32631                           
 32632                           ; BSR set to: 1
 32633                           ;bsoc.c: 58:   C.bkwo += fabsf(C.p_bat / 3600.0);
 32634  01459A  0E00               	movlw	0
 32635  01459C  6EE6               	movwf	postinc1,c
 32636  01459E  0E00               	movlw	0
 32637  0145A0  6EE6               	movwf	postinc1,c
 32638  0145A2  0E61               	movlw	97
 32639  0145A4  6EE6               	movwf	postinc1,c
 32640  0145A6  0E45               	movlw	69
 32641  0145A8  6EE6               	movwf	postinc1,c
 32642  0145AA  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32643  0145B0  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32644  0145B6  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32645  0145BC  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32646  0145C2  EC9B  F0A4         	call	___fldiv	;wreg free
 32647  0145C6  0060  F007  FFE6   	movff	btemp,postinc1
 32648  0145CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32649  0145D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32650  0145D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 32651  0145DE  ECF7  F0CD         	call	_fabsf	;wreg free
 32652  0145E2  0060  F007  FFE6   	movff	btemp,postinc1
 32653  0145E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32654  0145EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32655  0145F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 32656  0145FA  0060  F673  FFE6   	movff	_C+156,postinc1
 32657  014600  0060  F677  FFE6   	movff	_C+157,postinc1
 32658  014606  0060  F67B  FFE6   	movff	_C+158,postinc1
 32659  01460C  0060  F67F  FFE6   	movff	_C+159,postinc1
 32660  014612  EC24  F09D         	call	___fladd	;wreg free
 32661  014616  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 32662  01461C  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 32663  014622  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 32664  014628  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 32665  01462E                     l12376:
 32666                           
 32667                           ;bsoc.c: 60:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32668  01462E  0E00               	movlw	0
 32669  014630  6EE6               	movwf	postinc1,c
 32670  014632  0E00               	movlw	0
 32671  014634  6EE6               	movwf	postinc1,c
 32672  014636  0EC8               	movlw	200
 32673  014638  6EE6               	movwf	postinc1,c
 32674  01463A  0E42               	movlw	66
 32675  01463C  6EE6               	movwf	postinc1,c
 32676  01463E  0060  F623  FFE6   	movff	_C+136,postinc1
 32677  014644  0060  F627  FFE6   	movff	_C+137,postinc1
 32678  01464A  0060  F62B  FFE6   	movff	_C+138,postinc1
 32679  014650  0060  F62F  FFE6   	movff	_C+139,postinc1
 32680  014656  0060  F633  FFE6   	movff	_C+140,postinc1
 32681  01465C  0060  F637  FFE6   	movff	_C+141,postinc1
 32682  014662  0060  F63B  FFE6   	movff	_C+142,postinc1
 32683  014668  0060  F63F  FFE6   	movff	_C+143,postinc1
 32684  01466E  EC9B  F0A4         	call	___fldiv	;wreg free
 32685  014672  0060  F007  FFE6   	movff	btemp,postinc1
 32686  014678  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32687  01467E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32688  014684  0060  F013  FFE6   	movff	btemp+3,postinc1
 32689  01468A  EC0F  F099         	call	___flmul	;wreg free
 32690  01468E  0060  F007  FFE6   	movff	btemp,postinc1
 32691  014694  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32692  01469A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32693  0146A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 32694  0146A6  ECFF  F0C1         	call	___fltol	;wreg free
 32695  0146AA  0060  F004  F00B   	movff	btemp,btemp+10
 32696  0146B0  0060  F008  F00C   	movff	btemp+1,btemp+11
 32697  0146B6  0E01               	movlw	1
 32698  0146B8  240B               	addwf	(btemp+10)^0,w,c
 32699  0146BA  0101               	movlb	1	; () banked
 32700  0146BC  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32701  0146BE  0E00               	movlw	0
 32702  0146C0  200C               	addwfc	(btemp+11)^0,w,c
 32703  0146C2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32704                           
 32705                           ; BSR set to: 1
 32706                           ;bsoc.c: 61:  if (C.soc > 100)
 32707  0146C4  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 32708  0146C6  E104               	bnz	u1192_20
 32709  0146C8  0E65               	movlw	101
 32710  0146CA  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 32711  0146CC  A0D8               	btfss	status,0,c
 32712  0146CE  D004               	goto	l12382
 32713  0146D0                     u1192_20:
 32714                           
 32715                           ; BSR set to: 1
 32716                           ;bsoc.c: 62:   C.soc = 100;
 32717  0146D0  0E00               	movlw	0
 32718  0146D2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32719  0146D4  0E64               	movlw	100
 32720  0146D6  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32721  0146D8                     l12382:
 32722                           
 32723                           ; BSR set to: 1
 32724                           ;bsoc.c: 64:  if (C.c_bat < 0.0) {
 32725  0146D8  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32726  0146DA  D043               	goto	l12386
 32727                           
 32728                           ; BSR set to: 1
 32729                           ;bsoc.c: 65:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32730  0146DC  0060  F513  FFE6   	movff	_C+68,postinc1
 32731  0146E2  0060  F517  FFE6   	movff	_C+69,postinc1
 32732  0146E8  0060  F51B  FFE6   	movff	_C+70,postinc1
 32733  0146EE  0060  F51F  FFE6   	movff	_C+71,postinc1
 32734  0146F4  0060  F633  FFE6   	movff	_C+140,postinc1
 32735  0146FA  0060  F637  FFE6   	movff	_C+141,postinc1
 32736  014700  0060  F63B  FFE6   	movff	_C+142,postinc1
 32737  014706  0060  F63F  FFE6   	movff	_C+143,postinc1
 32738  01470C  EC9B  F0A4         	call	___fldiv	;wreg free
 32739  014710  0060  F007  FFE6   	movff	btemp,postinc1
 32740  014716  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32741  01471C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32742  014722  0060  F013  FFE6   	movff	btemp+3,postinc1
 32743  014728  ECF8  F0D4         	call	___flneg	;wreg free
 32744  01472C  0060  F007  FFE6   	movff	btemp,postinc1
 32745  014732  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32746  014738  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32747  01473E  0060  F013  FFE6   	movff	btemp+3,postinc1
 32748  014744  ECFF  F0C1         	call	___fltol	;wreg free
 32749  014748  0060  F004  F00B   	movff	btemp,btemp+10
 32750  01474E  0060  F008  F00C   	movff	btemp+1,btemp+11
 32751  014754  0060  F02C  F1AC   	movff	btemp+10,_C+172	;volatile
 32752  01475A  0060  F030  F1AD   	movff	btemp+11,_C+173	;volatile
 32753                           
 32754                           ;bsoc.c: 66:  } else {
 32755  014760  D004               	goto	l12388
 32756  014762                     l12386:
 32757                           
 32758                           ; BSR set to: 1
 32759                           ;bsoc.c: 67:   C.runtime = 120;
 32760  014762  0E00               	movlw	0
 32761  014764  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32762  014766  0E78               	movlw	120
 32763  014768  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32764  01476A                     l12388:
 32765                           
 32766                           ;bsoc.c: 69:  if (C.runtime > 120)
 32767  01476A  0101               	movlb	1	; () banked
 32768  01476C  51AD               	movf	(_C+173)& (0+255),w,b	;volatile
 32769  01476E  E104               	bnz	u1194_20
 32770  014770  0E79               	movlw	121
 32771  014772  5DAC               	subwf	(_C+172)& (0+255),w,b	;volatile
 32772  014774  A0D8               	btfss	status,0,c
 32773  014776  D004               	goto	l12392
 32774  014778                     u1194_20:
 32775                           
 32776                           ; BSR set to: 1
 32777                           ;bsoc.c: 70:   C.runtime = 120;
 32778  014778  0E00               	movlw	0
 32779  01477A  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32780  01477C  0E78               	movlw	120
 32781  01477E  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32782  014780                     l12392:
 32783                           
 32784                           ; BSR set to: 1
 32785                           ;bsoc.c: 72:  V.lowint_count++;
 32786  014780  0E01               	movlw	1
 32787  014782  0102               	movlb	2	; () banked
 32788  014784  27B1               	addwf	(_V+177)& (0+255),f,b	;volatile
 32789  014786  0E00               	movlw	0
 32790  014788  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 32791  01478A  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 32792  01478C  23B4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 32793                           
 32794                           ; BSR set to: 2
 32795                           ;bsoc.c: 74:  log_ptr = port_data_dma_ptr();
 32796  01478E  EC50  F0DB         	call	_port_data_dma_ptr	;wreg free
 32797                           
 32798                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32799  014792  0EFF               	movlw	-1
 32800  014794  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32801  01479A  0EFE               	movlw	-2
 32802  01479C  0060  F007  FFE3   	movff	btemp,plusw1
 32803                           
 32804                           ;bsoc.c: 75:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 32805  0147A2  0060  F613  FFE6   	movff	_C+132,postinc1
 32806  0147A8  0060  F617  FFE6   	movff	_C+133,postinc1
 32807  0147AE  0060  F61B  FFE6   	movff	_C+134,postinc1
 32808  0147B4  0060  F61F  FFE6   	movff	_C+135,postinc1
 32809  0147BA  0060  F6B3  FFE6   	movff	_C+172,postinc1
 32810  0147C0  0060  F6B7  FFE6   	movff	_C+173,postinc1
 32811  0147C6  0060  F6BB  FFE6   	movff	_C+174,postinc1
 32812  0147CC  0060  F6BF  FFE6   	movff	_C+175,postinc1
 32813  0147D2  0060  F643  FFE6   	movff	_C+144,postinc1
 32814  0147D8  0060  F647  FFE6   	movff	_C+145,postinc1
 32815  0147DE  0060  F64B  FFE6   	movff	_C+146,postinc1
 32816  0147E4  0060  F64F  FFE6   	movff	_C+147,postinc1
 32817  0147EA  0060  F633  FFE6   	movff	_C+140,postinc1
 32818  0147F0  0060  F637  FFE6   	movff	_C+141,postinc1
 32819  0147F6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32820  0147FC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32821  014802  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32822  014808  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32823  01480E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32824  014814  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32825  01481A  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32826  014820  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32827  014826  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32828  01482C  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32829  014832  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32830  014838  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32831  01483E  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32832  014844  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32833  01484A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32834  014850  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32835  014856  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32836  01485C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32837  014862  0060  F593  FFE6   	movff	_C+100,postinc1
 32838  014868  0060  F597  FFE6   	movff	_C+101,postinc1
 32839  01486E  0060  F59B  FFE6   	movff	_C+102,postinc1
 32840  014874  0060  F59F  FFE6   	movff	_C+103,postinc1
 32841  01487A  0060  F533  FFE6   	movff	_C+76,postinc1
 32842  014880  0060  F537  FFE6   	movff	_C+77,postinc1
 32843  014886  0060  F53B  FFE6   	movff	_C+78,postinc1
 32844  01488C  0060  F53F  FFE6   	movff	_C+79,postinc1
 32845  014892  0060  F543  FFE6   	movff	_C+80,postinc1
 32846  014898  0060  F547  FFE6   	movff	_C+81,postinc1
 32847  01489E  0060  F54B  FFE6   	movff	_C+82,postinc1
 32848  0148A4  0060  F54F  FFE6   	movff	_C+83,postinc1
 32849  0148AA  0060  F553  FFE6   	movff	_C+84,postinc1
 32850  0148B0  0060  F557  FFE6   	movff	_C+85,postinc1
 32851  0148B6  0060  F55B  FFE6   	movff	_C+86,postinc1
 32852  0148BC  0060  F55F  FFE6   	movff	_C+87,postinc1
 32853  0148C2  0060  FA07  FFE6   	movff	_V+129,postinc1
 32854  0148C8  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32855  0148CE  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32856  0148D4  0060  FA13  FFE6   	movff	_V+132,postinc1
 32857  0148DA  0E67               	movlw	low STR_65
 32858  0148DC  6EE6               	movwf	postinc1,c
 32859  0148DE  0EFC               	movlw	high STR_65
 32860  0148E0  6EE6               	movwf	postinc1,c
 32861                           
 32862                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32863  0148E2  0EC8               	movlw	-56
 32864  0148E4  006F FF8F FFE6     	movff	plusw1,postinc1
 32865  0148EA  006F FF8F FFE6     	movff	plusw1,postinc1
 32866  0148F0  0E38               	movlw	56
 32867  0148F2  6EE6               	movwf	postinc1,c
 32868  0148F4  EC06  F0CA         	call	_sprintf	;wreg free
 32869                           
 32870                           ; BSR set to: 0
 32871                           ;bsoc.c: 81:  StartTimer(TMR_DISPLAY, 125);
 32872  0148F8  0E7D               	movlw	125
 32873  0148FA  6EE6               	movwf	postinc1,c
 32874  0148FC  0E00               	movlw	0
 32875  0148FE  6EE6               	movwf	postinc1,c
 32876  014900  0E0A               	movlw	10
 32877  014902  6EE6               	movwf	postinc1,c
 32878  014904  EC0E  F0D6         	call	_StartTimer	;wreg free
 32879                           
 32880                           ;bsoc.c: 82:  send_port_data_dma(strlen((char*) log_ptr));
 32881                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32882  014908  0EFE               	movlw	-2
 32883  01490A  006F FF8F FFE6     	movff	plusw1,postinc1
 32884  014910  006F FF8F FFE6     	movff	plusw1,postinc1
 32885  014916  EC4C  F0CF         	call	_strlen	;wreg free
 32886  01491A  0060  F007  FFE6   	movff	btemp,postinc1
 32887  014920  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32888  014926  EC83  F0D4         	call	_send_port_data_dma	;wreg free
 32889                           
 32890                           ; BSR set to: 59
 32891                           ;bsoc.c: 83:  C.update = 0;
 32892  01492A  0101               	movlb	1	; () banked
 32893  01492C  6BB0               	clrf	(_C+176)& (0+255),b	;volatile
 32894                           
 32895                           ; BSR set to: 1
 32896  01492E  92BE               	bcf	190,1,c	;volatile
 32897                           
 32898                           ; BSR set to: 1
 32899                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32900  014930  52E5               	movf	postdec1,f,c
 32901  014932  52E5               	movf	postdec1,f,c
 32902  014934  0012               	return		;funcret
 32903  014936                     __end_of_calc_bsoc:
 32904                           	opt callstack 0
 32905                           
 32906 ;; *************** function _send_port_data_dma *****************
 32907 ;; Defined at:
 32908 ;;		line 258 in file "eadog.c"
 32909 ;; Parameters:    Size  Location     Type
 32910 ;;  dsize           2  [STACK] unsigned short 
 32911 ;; Auto vars:     Size  Location     Type
 32912 ;;		None
 32913 ;; Return value:  Size  Location     Type
 32914 ;;                  1  [STACK] void 
 32915 ;; Registers used:
 32916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32917 ;; Tracked objects:
 32918 ;;		On entry : 0/0
 32919 ;;		On exit  : 3F/3B
 32920 ;;		Unchanged: 0/0
 32921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32926 ;;Total ram usage:        0 bytes
 32927 ;; Hardware stack levels used:    1
 32928 ;; Hardware stack levels required when called:    3
 32929 ;; This function calls:
 32930 ;;		Nothing
 32931 ;; This function is called by:
 32932 ;;		_calc_bsoc
 32933 ;; This function uses a reentrant model
 32934 ;;
 32935                           
 32936                           	psect	text149
 32937  01A906                     __ptext149:
 32938                           	opt callstack 0
 32939  01A906                     _send_port_data_dma:
 32940                           	opt callstack 11
 32941                           
 32942                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32943                           ;stkvar	_dsize @ sp[(0)+-2]
 32944                           
 32945                           ; BSR set to: 1
 32946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32947                           ;incstack = 0
 32948  01A906  0EFE               	movlw	-2
 32949  01A908  04E3               	decf	plusw1,w,c
 32950  01A90A  0EFF               	movlw	-1
 32951  01A90C  006F FF8C  F001    	movff	plusw1,btemp
 32952  01A912  0E02               	movlw	2
 32953  01A914  5A01               	subwfb	btemp^0,f,c
 32954  01A916  A0D8               	btfss	status,0,c
 32955  01A918  D00C               	goto	l9536
 32956                           
 32957                           ;eadog.c: 261:   dsize = 512;
 32958  01A91A  0E00               	movlw	0
 32959  01A91C  6E0B               	movwf	(btemp+10)^0,c
 32960  01A91E  0E02               	movlw	2
 32961  01A920  6E0C               	movwf	(btemp+11)^0,c
 32962                           
 32963                           ;stkvar	_dsize @ sp[(0)+-2]
 32964  01A922  0EFE               	movlw	-2
 32965  01A924  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32966  01A92A  0EFF               	movlw	-1
 32967  01A92C  0060  F033  FFE3   	movff	btemp+11,plusw1
 32968  01A932                     l9536:
 32969                           
 32970                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 32971  01A932  013B               	movlb	59	; () banked
 32972  01A934  9FDC               	bcf	220,7,b	;volatile
 32973                           
 32974                           ; BSR set to: 59
 32975                           ;eadog.c: 264:  DMA2SSZ = dsize;
 32976                           ;stkvar	_dsize @ sp[(0)+-2]
 32977  01A936  0EFE               	movlw	-2
 32978  01A938  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 32979  01A93E  0EFF               	movlw	-1
 32980  01A940  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 32981                           
 32982                           ; BSR set to: 59
 32983                           ;eadog.c: 265:  DMA2DSZ = 1;
 32984  01A946  0E00               	movlw	0
 32985  01A948  6FCF               	movwf	207,b	;volatile
 32986  01A94A  0E01               	movlw	1
 32987  01A94C  6FCE               	movwf	206,b	;volatile
 32988                           
 32989                           ; BSR set to: 59
 32990                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 32991  01A94E  8FDC               	bsf	220,7,b	;volatile
 32992                           
 32993                           ; BSR set to: 59
 32994                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 32995  01A950  8DDC               	bsf	220,6,b	;volatile
 32996                           
 32997                           ; BSR set to: 59
 32998                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 32999  01A952  52E5               	movf	postdec1,f,c
 33000  01A954  52E5               	movf	postdec1,f,c
 33001  01A956  0012               	return		;funcret
 33002  01A958                     __end_of_send_port_data_dma:
 33003                           	opt callstack 0
 33004                           
 33005 ;; *************** function _port_data_dma_ptr *****************
 33006 ;; Defined at:
 33007 ;;		line 273 in file "eadog.c"
 33008 ;; Parameters:    Size  Location     Type
 33009 ;;		None
 33010 ;; Auto vars:     Size  Location     Type
 33011 ;;		None
 33012 ;; Return value:  Size  Location     Type
 33013 ;;                  2  [STACK] PTR unsigned char 
 33014 ;; Registers used:
 33015 ;;		wreg, status,2, status,0, btemp, btemp+1
 33016 ;; Tracked objects:
 33017 ;;		On entry : 3F/2
 33018 ;;		On exit  : 0/0
 33019 ;;		Unchanged: 0/0
 33020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33025 ;;Total ram usage:        0 bytes
 33026 ;; Hardware stack levels used:    1
 33027 ;; Hardware stack levels required when called:    3
 33028 ;; This function calls:
 33029 ;;		Nothing
 33030 ;; This function is called by:
 33031 ;;		_calc_bsoc
 33032 ;; This function uses a reentrant model
 33033 ;;
 33034                           
 33035                           	psect	text150
 33036  01B6A0                     __ptext150:
 33037                           	opt callstack 0
 33038  01B6A0                     _port_data_dma_ptr:
 33039                           	opt callstack 11
 33040                           
 33041                           ;eadog.c: 275:  return port_data;
 33042                           
 33043                           ; BSR set to: 59
 33044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33045                           ;incstack = 0
 33046  01B6A0  0EFF               	movlw	low _port_data
 33047  01B6A2  6E01               	movwf	btemp^0,c
 33048  01B6A4  0E05               	movlw	high _port_data
 33049  01B6A6  6E02               	movwf	(btemp+1)^0,c
 33050                           
 33051                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33052  01B6A8  0012               	return		;funcret
 33053  01B6AA                     __end_of_port_data_dma_ptr:
 33054                           	opt callstack 0
 33055                           
 33056 ;; *************** function _INT0_ISR *****************
 33057 ;; Defined at:
 33058 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33059 ;; Parameters:    Size  Location     Type
 33060 ;;		None
 33061 ;; Auto vars:     Size  Location     Type
 33062 ;;		None
 33063 ;; Return value:  Size  Location     Type
 33064 ;;                  1    wreg      void 
 33065 ;; Registers used:
 33066 ;;		wreg, status,2, status,0, pclath, tosl
 33067 ;; Tracked objects:
 33068 ;;		On entry : 0/0
 33069 ;;		On exit  : 0/0
 33070 ;;		Unchanged: 0/0
 33071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33076 ;;Total ram usage:        0 bytes
 33077 ;; Hardware stack levels used:    1
 33078 ;; Hardware stack levels required when called:    2
 33079 ;; This function calls:
 33080 ;;		_INT0_CallBack
 33081 ;; This function is called by:
 33082 ;;		Interrupt level 2
 33083 ;; This function uses a non-reentrant model
 33084 ;;
 33085                           
 33086                           	psect	text151
 33087  01B678                     __ptext151:
 33088                           	opt callstack 0
 33089  01B678                     _INT0_ISR:
 33090                           	opt callstack 3
 33091                           
 33092                           ;incstack = 0
 33093  01B678  EE14  F0C2         	lfsr	1,___inthi_sp
 33094                           
 33095                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33096  01B67C  0139               	movlb	57	; () banked
 33097  01B67E  91A1               	bcf	161,0,b	;volatile
 33098                           
 33099                           ; BSR set to: 57
 33100                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33101  01B680  EC02  F0DA         	call	_INT0_CallBack	;wreg free
 33102  01B684  0011               	retfie		f
 33103  01B686                     __end_of_INT0_ISR:
 33104                           	opt callstack 0
 33105                           
 33106 ;; *************** function _INT0_CallBack *****************
 33107 ;; Defined at:
 33108 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33109 ;; Parameters:    Size  Location     Type
 33110 ;;		None
 33111 ;; Auto vars:     Size  Location     Type
 33112 ;;		None
 33113 ;; Return value:  Size  Location     Type
 33114 ;;                  1  [STACK] void 
 33115 ;; Registers used:
 33116 ;;		wreg, status,2, status,0, pclath, tosl
 33117 ;; Tracked objects:
 33118 ;;		On entry : 3F/39
 33119 ;;		On exit  : 0/0
 33120 ;;		Unchanged: 0/0
 33121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33126 ;;Total ram usage:        0 bytes
 33127 ;; Hardware stack levels used:    1
 33128 ;; Hardware stack levels required when called:    1
 33129 ;; This function calls:
 33130 ;;		Absolute function
 33131 ;;		_INT0_DefaultInterruptHandler
 33132 ;; This function is called by:
 33133 ;;		_INT0_ISR
 33134 ;; This function uses a reentrant model
 33135 ;;
 33136                           
 33137                           	psect	text152
 33138  01B404                     __ptext152:
 33139                           	opt callstack 0
 33140  01B404                     _INT0_CallBack:
 33141                           	opt callstack 3
 33142                           
 33143                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33144                           
 33145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33146                           ;incstack = 0
 33147  01B404  0100               	movlb	0	; () banked
 33148  01B406  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33149  01B408  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33150  01B40A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33151  01B40C  B4D8               	btfsc	status,2,c
 33152  01B40E  0012               	return	
 33153                           
 33154                           ; BSR set to: 0
 33155                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33156  01B410  D801               	call	u955_48
 33157  01B412  0012               	return	
 33158  01B414                     u955_48:
 33159  01B414  0005               	push	
 33160  01B416  6EFA               	movwf	pclath,c
 33161  01B418  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33162  01B41A  6EFD               	movwf	tosl,c
 33163  01B41C  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33164  01B41E  6EFE               	movwf	tosh,c
 33165  01B420  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33166  01B422  6EFF               	movwf	tosu,c
 33167  01B424  50FA               	movf	pclath,w,c
 33168  01B426  0012               	return		;indir
 33169  01B428                     __end_of_INT0_CallBack:
 33170                           	opt callstack 0
 33171                           
 33172 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33173 ;; Defined at:
 33174 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33175 ;; Parameters:    Size  Location     Type
 33176 ;;		None
 33177 ;; Auto vars:     Size  Location     Type
 33178 ;;		None
 33179 ;; Return value:  Size  Location     Type
 33180 ;;                  1  [STACK] void 
 33181 ;; Registers used:
 33182 ;;		None
 33183 ;; Tracked objects:
 33184 ;;		On entry : 3F/0
 33185 ;;		On exit  : 0/0
 33186 ;;		Unchanged: 0/0
 33187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33192 ;;Total ram usage:        0 bytes
 33193 ;; Hardware stack levels used:    1
 33194 ;; This function calls:
 33195 ;;		Nothing
 33196 ;; This function is called by:
 33197 ;;		_EXT_INT_Initialize
 33198 ;;		_INT0_CallBack
 33199 ;; This function uses a reentrant model
 33200 ;;
 33201                           
 33202                           	psect	text153
 33203  01B71A                     __ptext153:
 33204                           	opt callstack 0
 33205  01B71A                     _INT0_DefaultInterruptHandler:
 33206                           	opt callstack 3
 33207                           
 33208                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33209                           
 33210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33211                           ;incstack = 0
 33212  01B71A  0012               	return		;funcret
 33213  01B71C                     __end_of_INT0_DefaultInterruptHandler:
 33214                           	opt callstack 0
 33215                           
 33216 ;; *************** function _Default_ISR *****************
 33217 ;; Defined at:
 33218 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33219 ;; Parameters:    Size  Location     Type
 33220 ;;		None
 33221 ;; Auto vars:     Size  Location     Type
 33222 ;;		None
 33223 ;; Return value:  Size  Location     Type
 33224 ;;                  1    wreg      void 
 33225 ;; Registers used:
 33226 ;;		None
 33227 ;; Tracked objects:
 33228 ;;		On entry : 0/0
 33229 ;;		On exit  : 0/0
 33230 ;;		Unchanged: 0/0
 33231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33236 ;;Total ram usage:        0 bytes
 33237 ;; Hardware stack levels used:    1
 33238 ;; This function calls:
 33239 ;;		Nothing
 33240 ;; This function is called by:
 33241 ;;		Interrupt level 2
 33242 ;; This function uses a non-reentrant model
 33243 ;;
 33244                           
 33245                           	psect	text154
 33246  01B710                     __ptext154:
 33247                           	opt callstack 0
 33248  01B710                     _Default_ISR:
 33249                           	opt callstack 5
 33250                           
 33251                           ;incstack = 0
 33252  01B710  EE14  F0C2         	lfsr	1,___inthi_sp
 33253  01B714  0011               	retfie		f
 33254  01B716                     __end_of_Default_ISR:
 33255                           	opt callstack 0
 33256                           
 33257 ;; *************** function _ADCC_ISR *****************
 33258 ;; Defined at:
 33259 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33260 ;; Parameters:    Size  Location     Type
 33261 ;;		None
 33262 ;; Auto vars:     Size  Location     Type
 33263 ;;		None
 33264 ;; Return value:  Size  Location     Type
 33265 ;;                  1    wreg      void 
 33266 ;; Registers used:
 33267 ;;		wreg, status,2, status,0, pclath, tosl
 33268 ;; Tracked objects:
 33269 ;;		On entry : 0/0
 33270 ;;		On exit  : 0/0
 33271 ;;		Unchanged: 0/0
 33272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33277 ;;Total ram usage:        0 bytes
 33278 ;; Hardware stack levels used:    1
 33279 ;; Hardware stack levels required when called:    1
 33280 ;; This function calls:
 33281 ;;		Absolute function
 33282 ;;		_ADCC_DefaultInterruptHandler
 33283 ;;		_adc_int_handler
 33284 ;; This function is called by:
 33285 ;;		Interrupt level 2
 33286 ;; This function uses a non-reentrant model
 33287 ;;
 33288                           
 33289                           	psect	text155
 33290  01B024                     __ptext155:
 33291                           	opt callstack 0
 33292  01B024                     _ADCC_ISR:
 33293                           	opt callstack 4
 33294                           
 33295                           ;incstack = 0
 33296  01B024  EE14  F0C2         	lfsr	1,___inthi_sp
 33297                           
 33298                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33299  01B028  0139               	movlb	57	; () banked
 33300  01B02A  95A1               	bcf	161,2,b	;volatile
 33301                           
 33302                           ; BSR set to: 57
 33303                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33304  01B02C  0100               	movlb	0	; () banked
 33305  01B02E  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33306  01B030  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33307  01B032  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33308  01B034  B4D8               	btfsc	status,2,c
 33309  01B036  0011               	retfie		f
 33310                           
 33311                           ; BSR set to: 0
 33312                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33313  01B038  D801               	call	i2u998_48
 33314  01B03A  0011               	retfie		f
 33315  01B03C                     i2u998_48:
 33316  01B03C  0005               	push	
 33317  01B03E  6EFA               	movwf	pclath,c
 33318  01B040  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33319  01B042  6EFD               	movwf	tosl,c
 33320  01B044  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33321  01B046  6EFE               	movwf	tosh,c
 33322  01B048  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33323  01B04A  6EFF               	movwf	tosu,c
 33324  01B04C  50FA               	movf	pclath,w,c
 33325  01B04E  0012               	return		;indir
 33326  01B050                     __end_of_ADCC_ISR:
 33327                           	opt callstack 0
 33328                           
 33329 ;; *************** function _adc_int_t_handler *****************
 33330 ;; Defined at:
 33331 ;;		line 143 in file "daq.c"
 33332 ;; Parameters:    Size  Location     Type
 33333 ;;		None
 33334 ;; Auto vars:     Size  Location     Type
 33335 ;;		None
 33336 ;; Return value:  Size  Location     Type
 33337 ;;                  1  [STACK] void 
 33338 ;; Registers used:
 33339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33340 ;; Tracked objects:
 33341 ;;		On entry : 3F/0
 33342 ;;		On exit  : 1/0
 33343 ;;		Unchanged: 0/0
 33344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33349 ;;Total ram usage:        0 bytes
 33350 ;; Hardware stack levels used:    1
 33351 ;; Hardware stack levels required when called:    1
 33352 ;; This function calls:
 33353 ;;		_ADCC_DischargeSampleCapacitor
 33354 ;;		_ADCC_StartConversion
 33355 ;; This function is called by:
 33356 ;;		_start_adc_scan
 33357 ;;		_ADCC_ThresholdISR
 33358 ;; This function uses a reentrant model
 33359 ;;
 33360                           
 33361                           	psect	text156
 33362  01A3A8                     __ptext156:
 33363                           	opt callstack 0
 33364  01A3A8                     _adc_int_t_handler:
 33365                           	opt callstack 3
 33366                           
 33367                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33368                           
 33369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33370                           ;incstack = 0
 33371  01A3A8  013E               	movlb	62	; () banked
 33372  01A3AA  51E6               	movf	230,w,b	;volatile
 33373  01A3AC  006F FB9C  F001    	movff	16103,btemp	;volatile
 33374  01A3B2  6A02               	clrf	(btemp+1)^0,c
 33375  01A3B4  0060  F004  F002   	movff	btemp,btemp+1
 33376  01A3BA  6A01               	clrf	btemp^0,c
 33377  01A3BC  2601               	addwf	btemp^0,f,c
 33378  01A3BE  0E00               	movlw	0
 33379  01A3C0  2202               	addwfc	(btemp+1)^0,f,c
 33380  01A3C2  0100               	movlb	0	; () banked
 33381  01A3C4  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33382  01A3C6  0D02               	mullw	2
 33383  01A3C8  50F3               	movf	243,w,c
 33384  01A3CA  0FC4               	addlw	low _R
 33385  01A3CC  6ED9               	movwf	fsr2l,c
 33386  01A3CE  6ADA               	clrf	fsr2h,c
 33387  01A3D0  0060  F007  FFDE   	movff	btemp,postinc2
 33388  01A3D6  0060  F00B  FFDD   	movff	btemp+1,postdec2
 33389  01A3DC                     l10808:
 33390                           
 33391                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 33392  01A3DC  0100               	movlb	0	; () banked
 33393  01A3DE  2BE8               	incf	(_R+36)& (0+255),f,b	;volatile
 33394  01A3E0  0E0D               	movlw	13
 33395  01A3E2  65E8               	cpfsgt	(_R+36)& (0+255),b	;volatile
 33396  01A3E4  D003               	goto	l10814
 33397                           
 33398                           ; BSR set to: 0
 33399                           ;daq.c: 151:    R.done = 1;
 33400  01A3E6  0E01               	movlw	1
 33401  01A3E8  6FEB               	movwf	(_R+39)& (0+255),b	;volatile
 33402  01A3EA  0012               	return	
 33403  01A3EC                     l10814:
 33404                           
 33405                           ; BSR set to: 0
 33406                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 33407  01A3EC  0060  F3A0  F00C   	movff	_R+36,btemp+11	;volatile
 33408  01A3F2  EE20  F0E9         	lfsr	2,_R+37	;volatile
 33409  01A3F6  006F FF78  F009    	movff	postinc2,btemp+8
 33410  01A3FC  006F FF74  F00A    	movff	postdec2,btemp+9
 33411  01A402  2A0C               	incf	(btemp+11)^0,f,c
 33412  01A404  D003               	goto	u995_44
 33413  01A406                     u995_45:
 33414  01A406  90D8               	bcf	status,0,c
 33415  01A408  320A               	rrcf	(btemp+9)^0,f,c
 33416  01A40A  3209               	rrcf	(btemp+8)^0,f,c
 33417  01A40C                     u995_44:
 33418  01A40C  2E0C               	decfsz	(btemp+11)^0,f,c
 33419  01A40E  D7FB               	goto	u995_45
 33420  01A410  A009               	btfss	(btemp+8)^0,0,c
 33421  01A412  D7E4               	goto	l10808
 33422                           
 33423                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33424  01A414  EC67  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33425                           
 33426                           ; BSR set to: 62
 33427                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33428  01A418  0100               	movlb	0	; () banked
 33429  01A41A  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33430  01A41C  0B0F               	andlw	15
 33431  01A41E  6EE6               	movwf	postinc1,c
 33432  01A420  EC0C  F0DB         	call	_ADCC_StartConversion	;wreg free
 33433                           
 33434                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33435  01A424  0012               	return		;funcret
 33436  01A426                     __end_of_adc_int_t_handler:
 33437                           	opt callstack 0
 33438                           
 33439 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33440 ;; Defined at:
 33441 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33442 ;; Parameters:    Size  Location     Type
 33443 ;;		None
 33444 ;; Auto vars:     Size  Location     Type
 33445 ;;		None
 33446 ;; Return value:  Size  Location     Type
 33447 ;;                  1  [STACK] void 
 33448 ;; Registers used:
 33449 ;;		None
 33450 ;; Tracked objects:
 33451 ;;		On entry : 3F/0
 33452 ;;		On exit  : 0/0
 33453 ;;		Unchanged: 0/0
 33454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33459 ;;Total ram usage:        0 bytes
 33460 ;; Hardware stack levels used:    1
 33461 ;; This function calls:
 33462 ;;		Nothing
 33463 ;; This function is called by:
 33464 ;;		_ADCC_Initialize
 33465 ;;		_ADCC_ISR
 33466 ;;		_ADCC_ThresholdISR
 33467 ;; This function uses a reentrant model
 33468 ;;
 33469                           
 33470                           	psect	text157
 33471  01B71C                     __ptext157:
 33472                           	opt callstack 0
 33473  01B71C                     _ADCC_DefaultInterruptHandler:
 33474                           	opt callstack 4
 33475                           
 33476                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33477                           
 33478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33479                           ;incstack = 0
 33480  01B71C  0012               	return		;funcret
 33481  01B71E                     __end_of_ADCC_DefaultInterruptHandler:
 33482                           	opt callstack 0
 33483                           
 33484 ;; *************** function _adc_int_handler *****************
 33485 ;; Defined at:
 33486 ;;		line 133 in file "daq.c"
 33487 ;; Parameters:    Size  Location     Type
 33488 ;;		None
 33489 ;; Auto vars:     Size  Location     Type
 33490 ;;		None
 33491 ;; Return value:  Size  Location     Type
 33492 ;;                  1  [STACK] void 
 33493 ;; Registers used:
 33494 ;;		None
 33495 ;; Tracked objects:
 33496 ;;		On entry : 3F/0
 33497 ;;		On exit  : 0/0
 33498 ;;		Unchanged: 0/0
 33499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33504 ;;Total ram usage:        0 bytes
 33505 ;; Hardware stack levels used:    1
 33506 ;; This function calls:
 33507 ;;		Nothing
 33508 ;; This function is called by:
 33509 ;;		_start_adc_scan
 33510 ;;		_ADCC_ISR
 33511 ;; This function uses a reentrant model
 33512 ;;
 33513                           
 33514                           	psect	text158
 33515  01B71E                     __ptext158:
 33516                           	opt callstack 0
 33517  01B71E                     _adc_int_handler:
 33518                           	opt callstack 4
 33519                           
 33520                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33521                           
 33522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33523                           ;incstack = 0
 33524  01B71E  0012               	return		;funcret
 33525  01B720                     __end_of_adc_int_handler:
 33526                           	opt callstack 0
 33527                           
 33528 ;; *************** function _ADCC_ThresholdISR *****************
 33529 ;; Defined at:
 33530 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33531 ;; Parameters:    Size  Location     Type
 33532 ;;		None
 33533 ;; Auto vars:     Size  Location     Type
 33534 ;;		None
 33535 ;; Return value:  Size  Location     Type
 33536 ;;                  1    wreg      void 
 33537 ;; Registers used:
 33538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33539 ;; Tracked objects:
 33540 ;;		On entry : 0/0
 33541 ;;		On exit  : 0/0
 33542 ;;		Unchanged: 0/0
 33543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33546 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33547 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33548 ;;Total ram usage:        5 bytes
 33549 ;; Hardware stack levels used:    1
 33550 ;; Hardware stack levels required when called:    2
 33551 ;; This function calls:
 33552 ;;		Absolute function
 33553 ;;		_ADCC_DefaultInterruptHandler
 33554 ;;		_adc_int_t_handler
 33555 ;; This function is called by:
 33556 ;;		Interrupt level 2
 33557 ;; This function uses a non-reentrant model
 33558 ;;
 33559                           
 33560                           	psect	text159
 33561  01A4FC                     __ptext159:
 33562                           	opt callstack 0
 33563  01A4FC                     _ADCC_ThresholdISR:
 33564                           	opt callstack 3
 33565                           
 33566                           ;incstack = 0
 33567  01A4FC  0060  F004  F039   	movff	btemp,??_ADCC_ThresholdISR
 33568  01A502  0060  F008  F03A   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33569  01A508  0060  F024  F03B   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33570  01A50E  0060  F028  F03C   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33571  01A514  0060  F030  F03D   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33572  01A51A  EE14  F0C2         	lfsr	1,___inthi_sp
 33573                           
 33574                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33575  01A51E  0139               	movlb	57	; () banked
 33576  01A520  97A1               	bcf	161,3,b	;volatile
 33577                           
 33578                           ; BSR set to: 57
 33579                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33580  01A522  0100               	movlb	0	; () banked
 33581  01A524  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33582  01A526  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33583  01A528  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33584  01A52A  B4D8               	btfsc	status,2,c
 33585  01A52C  D00C               	goto	i2u1000_49
 33586                           
 33587                           ; BSR set to: 0
 33588                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33589  01A52E  D801               	call	i2u1000_48
 33590  01A530  D00A               	goto	i2u1000_49
 33591  01A532                     i2u1000_48:
 33592  01A532  0005               	push	
 33593  01A534  6EFA               	movwf	pclath,c
 33594  01A536  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33595  01A538  6EFD               	movwf	tosl,c
 33596  01A53A  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33597  01A53C  6EFE               	movwf	tosh,c
 33598  01A53E  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33599  01A540  6EFF               	movwf	tosu,c
 33600  01A542  50FA               	movf	pclath,w,c
 33601  01A544  0012               	return		;indir
 33602  01A546                     i2u1000_49:
 33603  01A546  0060  F0F4  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33604  01A54C  0060  F0F0  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33605  01A552  0060  F0EC  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33606  01A558  0060  F0E8  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33607  01A55E  0060  F0E4  F001   	movff	??_ADCC_ThresholdISR,btemp
 33608  01A564  0011               	retfie		f
 33609  01A566                     __end_of_ADCC_ThresholdISR:
 33610                           	opt callstack 0
 33611                           
 33612 ;; *************** function _UART1_rx_vect_isr *****************
 33613 ;; Defined at:
 33614 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33615 ;; Parameters:    Size  Location     Type
 33616 ;;		None
 33617 ;; Auto vars:     Size  Location     Type
 33618 ;;		None
 33619 ;; Return value:  Size  Location     Type
 33620 ;;                  1    wreg      void 
 33621 ;; Registers used:
 33622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33623 ;; Tracked objects:
 33624 ;;		On entry : 0/0
 33625 ;;		On exit  : 0/0
 33626 ;;		Unchanged: 0/0
 33627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33632 ;;Total ram usage:        0 bytes
 33633 ;; Hardware stack levels used:    1
 33634 ;; Hardware stack levels required when called:    1
 33635 ;; This function calls:
 33636 ;;		Absolute function
 33637 ;;		_UART1_Receive_ISR
 33638 ;; This function is called by:
 33639 ;;		Interrupt level 2
 33640 ;; This function uses a non-reentrant model
 33641 ;;
 33642                           
 33643                           	psect	text160
 33644  01B2D8                     __ptext160:
 33645                           	opt callstack 0
 33646  01B2D8                     _UART1_rx_vect_isr:
 33647                           	opt callstack 4
 33648                           
 33649                           ;incstack = 0
 33650  01B2D8  EE14  F0C2         	lfsr	1,___inthi_sp
 33651                           
 33652                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33653  01B2DC  0100               	movlb	0	; () banked
 33654  01B2DE  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33655  01B2E0  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33656  01B2E2  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33657  01B2E4  B4D8               	btfsc	status,2,c
 33658  01B2E6  0011               	retfie		f
 33659                           
 33660                           ; BSR set to: 0
 33661                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33662  01B2E8  D801               	call	i2u1002_48
 33663  01B2EA  0011               	retfie		f
 33664  01B2EC                     i2u1002_48:
 33665  01B2EC  0005               	push	
 33666  01B2EE  6EFA               	movwf	pclath,c
 33667  01B2F0  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33668  01B2F2  6EFD               	movwf	tosl,c
 33669  01B2F4  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33670  01B2F6  6EFE               	movwf	tosh,c
 33671  01B2F8  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33672  01B2FA  6EFF               	movwf	tosu,c
 33673  01B2FC  50FA               	movf	pclath,w,c
 33674  01B2FE  0012               	return		;indir
 33675  01B300                     __end_of_UART1_rx_vect_isr:
 33676                           	opt callstack 0
 33677                           
 33678 ;; *************** function _UART1_Receive_ISR *****************
 33679 ;; Defined at:
 33680 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33681 ;; Parameters:    Size  Location     Type
 33682 ;;		None
 33683 ;; Auto vars:     Size  Location     Type
 33684 ;;		None
 33685 ;; Return value:  Size  Location     Type
 33686 ;;                  1  [STACK] void 
 33687 ;; Registers used:
 33688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33689 ;; Tracked objects:
 33690 ;;		On entry : 3F/0
 33691 ;;		On exit  : 0/0
 33692 ;;		Unchanged: 0/0
 33693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33698 ;;Total ram usage:        0 bytes
 33699 ;; Hardware stack levels used:    1
 33700 ;; This function calls:
 33701 ;;		Nothing
 33702 ;; This function is called by:
 33703 ;;		_UART1_Initialize
 33704 ;;		_UART1_rx_vect_isr
 33705 ;; This function uses a reentrant model
 33706 ;;
 33707                           
 33708                           	psect	text161
 33709  01B540                     __ptext161:
 33710                           	opt callstack 0
 33711  01B540                     _UART1_Receive_ISR:
 33712                           	opt callstack 4
 33713                           
 33714                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33715                           
 33716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33717                           ;incstack = 0
 33718  01B540  5038               	movf	_uart1RxHead^0,w,c
 33719  01B542  0F6C               	addlw	low _uart1RxBuffer
 33720  01B544  6ED9               	movwf	fsr2l,c
 33721  01B546  6ADA               	clrf	fsr2h,c
 33722  01B548  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33723  01B54E  2A38               	incf	_uart1RxHead^0,f,c	;volatile
 33724                           
 33725                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33726  01B550  0E07               	movlw	7
 33727  01B552  6438               	cpfsgt	_uart1RxHead^0,c
 33728  01B554  D001               	goto	l10390
 33729                           
 33730                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33731  01B556  6A38               	clrf	_uart1RxHead^0,c	;volatile
 33732  01B558                     l10390:
 33733                           
 33734                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33735  01B558  2A36               	incf	_uart1RxCount^0,f,c	;volatile
 33736                           
 33737                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33738  01B55A  0012               	return		;funcret
 33739  01B55C                     __end_of_UART1_Receive_ISR:
 33740                           	opt callstack 0
 33741                           
 33742 ;; *************** function _UART2_tx_vect_isr *****************
 33743 ;; Defined at:
 33744 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33745 ;; Parameters:    Size  Location     Type
 33746 ;;		None
 33747 ;; Auto vars:     Size  Location     Type
 33748 ;;		None
 33749 ;; Return value:  Size  Location     Type
 33750 ;;                  1    wreg      void 
 33751 ;; Registers used:
 33752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33753 ;; Tracked objects:
 33754 ;;		On entry : 0/0
 33755 ;;		On exit  : 0/0
 33756 ;;		Unchanged: 0/0
 33757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33762 ;;Total ram usage:        0 bytes
 33763 ;; Hardware stack levels used:    1
 33764 ;; Hardware stack levels required when called:    1
 33765 ;; This function calls:
 33766 ;;		Absolute function
 33767 ;;		_UART2_Transmit_ISR
 33768 ;; This function is called by:
 33769 ;;		Interrupt level 2
 33770 ;; This function uses a non-reentrant model
 33771 ;;
 33772                           
 33773                           	psect	text162
 33774  01B300                     __ptext162:
 33775                           	opt callstack 0
 33776  01B300                     _UART2_tx_vect_isr:
 33777                           	opt callstack 4
 33778                           
 33779                           ;incstack = 0
 33780  01B300  EE14  F0C2         	lfsr	1,___inthi_sp
 33781                           
 33782                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 33783  01B304  0100               	movlb	0	; () banked
 33784  01B306  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33785  01B308  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33786  01B30A  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33787  01B30C  B4D8               	btfsc	status,2,c
 33788  01B30E  0011               	retfie		f
 33789                           
 33790                           ; BSR set to: 0
 33791                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 33792  01B310  D801               	call	i2u1004_48
 33793  01B312  0011               	retfie		f
 33794  01B314                     i2u1004_48:
 33795  01B314  0005               	push	
 33796  01B316  6EFA               	movwf	pclath,c
 33797  01B318  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33798  01B31A  6EFD               	movwf	tosl,c
 33799  01B31C  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33800  01B31E  6EFE               	movwf	tosh,c
 33801  01B320  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33802  01B322  6EFF               	movwf	tosu,c
 33803  01B324  50FA               	movf	pclath,w,c
 33804  01B326  0012               	return		;indir
 33805  01B328                     __end_of_UART2_tx_vect_isr:
 33806                           	opt callstack 0
 33807                           
 33808 ;; *************** function _UART2_Transmit_ISR *****************
 33809 ;; Defined at:
 33810 ;;		line 213 in file "mcc_generated_files/uart2.c"
 33811 ;; Parameters:    Size  Location     Type
 33812 ;;		None
 33813 ;; Auto vars:     Size  Location     Type
 33814 ;;		None
 33815 ;; Return value:  Size  Location     Type
 33816 ;;                  1  [STACK] void 
 33817 ;; Registers used:
 33818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33819 ;; Tracked objects:
 33820 ;;		On entry : 3F/0
 33821 ;;		On exit  : 3B/39
 33822 ;;		Unchanged: 0/0
 33823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33828 ;;Total ram usage:        0 bytes
 33829 ;; Hardware stack levels used:    1
 33830 ;; This function calls:
 33831 ;;		Nothing
 33832 ;; This function is called by:
 33833 ;;		_UART2_Initialize
 33834 ;;		_UART2_tx_vect_isr
 33835 ;; This function uses a reentrant model
 33836 ;;
 33837                           
 33838                           	psect	text163
 33839  01B050                     __ptext163:
 33840                           	opt callstack 0
 33841  01B050                     _UART2_Transmit_ISR:
 33842                           	opt callstack 4
 33843                           
 33844                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33845                           
 33846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33847                           ;incstack = 0
 33848  01B050  0E40               	movlw	64
 33849  01B052  6033               	cpfslt	_uart2TxBufferRemaining^0,c
 33850  01B054  D010               	goto	l673
 33851                           
 33852                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33853  01B056  0E54               	movlw	low _uart2TxBuffer
 33854  01B058  2434               	addwf	_uart2TxTail^0,w,c	;volatile
 33855  01B05A  6ED9               	movwf	fsr2l,c
 33856  01B05C  6ADA               	clrf	fsr2h,c
 33857  01B05E  0E03               	movlw	high _uart2TxBuffer
 33858  01B060  22DA               	addwfc	fsr2h,f,c
 33859  01B062  50DF               	movf	indf2,w,c
 33860  01B064  013D               	movlb	61	; () banked
 33861  01B066  6FD2               	movwf	210,b	;volatile
 33862                           
 33863                           ; BSR set to: 61
 33864  01B068  2A34               	incf	_uart2TxTail^0,f,c	;volatile
 33865                           
 33866                           ; BSR set to: 61
 33867                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33868  01B06A  0E3F               	movlw	63
 33869  01B06C  6434               	cpfsgt	_uart2TxTail^0,c
 33870  01B06E  D001               	goto	l10402
 33871                           
 33872                           ; BSR set to: 61
 33873                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33874  01B070  6A34               	clrf	_uart2TxTail^0,c	;volatile
 33875  01B072                     l10402:
 33876                           
 33877                           ; BSR set to: 61
 33878                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33879  01B072  2A33               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33880                           
 33881                           ;mcc_generated_files/uart2.c: 224:     }
 33882  01B074  0012               	return	
 33883  01B076                     l673:
 33884                           
 33885                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33886  01B076  0139               	movlb	57	; () banked
 33887  01B078  9796               	bcf	150,3,b	;volatile
 33888                           
 33889                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33890  01B07A  0012               	return		;funcret
 33891  01B07C                     __end_of_UART2_Transmit_ISR:
 33892                           	opt callstack 0
 33893                           
 33894 ;; *************** function _UART2_rx_vect_isr *****************
 33895 ;; Defined at:
 33896 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33897 ;; Parameters:    Size  Location     Type
 33898 ;;		None
 33899 ;; Auto vars:     Size  Location     Type
 33900 ;;		None
 33901 ;; Return value:  Size  Location     Type
 33902 ;;                  1    wreg      void 
 33903 ;; Registers used:
 33904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33905 ;; Tracked objects:
 33906 ;;		On entry : 0/0
 33907 ;;		On exit  : 0/0
 33908 ;;		Unchanged: 0/0
 33909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33914 ;;Total ram usage:        0 bytes
 33915 ;; Hardware stack levels used:    1
 33916 ;; Hardware stack levels required when called:    1
 33917 ;; This function calls:
 33918 ;;		Absolute function
 33919 ;;		_UART2_Receive_ISR
 33920 ;; This function is called by:
 33921 ;;		Interrupt level 2
 33922 ;; This function uses a non-reentrant model
 33923 ;;
 33924                           
 33925                           	psect	text164
 33926  01B328                     __ptext164:
 33927                           	opt callstack 0
 33928  01B328                     _UART2_rx_vect_isr:
 33929                           	opt callstack 4
 33930                           
 33931                           ;incstack = 0
 33932  01B328  EE14  F0C2         	lfsr	1,___inthi_sp
 33933                           
 33934                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33935  01B32C  0100               	movlb	0	; () banked
 33936  01B32E  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33937  01B330  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33938  01B332  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33939  01B334  B4D8               	btfsc	status,2,c
 33940  01B336  0011               	retfie		f
 33941                           
 33942                           ; BSR set to: 0
 33943                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33944  01B338  D801               	call	i2u1006_48
 33945  01B33A  0011               	retfie		f
 33946  01B33C                     i2u1006_48:
 33947  01B33C  0005               	push	
 33948  01B33E  6EFA               	movwf	pclath,c
 33949  01B340  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33950  01B342  6EFD               	movwf	tosl,c
 33951  01B344  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33952  01B346  6EFE               	movwf	tosh,c
 33953  01B348  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33954  01B34A  6EFF               	movwf	tosu,c
 33955  01B34C  50FA               	movf	pclath,w,c
 33956  01B34E  0012               	return		;indir
 33957  01B350                     __end_of_UART2_rx_vect_isr:
 33958                           	opt callstack 0
 33959                           
 33960 ;; *************** function _UART2_Receive_ISR *****************
 33961 ;; Defined at:
 33962 ;;		line 233 in file "mcc_generated_files/uart2.c"
 33963 ;; Parameters:    Size  Location     Type
 33964 ;;		None
 33965 ;; Auto vars:     Size  Location     Type
 33966 ;;		None
 33967 ;; Return value:  Size  Location     Type
 33968 ;;                  1  [STACK] void 
 33969 ;; Registers used:
 33970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33971 ;; Tracked objects:
 33972 ;;		On entry : 3F/0
 33973 ;;		On exit  : 0/0
 33974 ;;		Unchanged: 0/0
 33975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33980 ;;Total ram usage:        0 bytes
 33981 ;; Hardware stack levels used:    1
 33982 ;; This function calls:
 33983 ;;		Nothing
 33984 ;; This function is called by:
 33985 ;;		_UART2_Initialize
 33986 ;;		_UART2_rx_vect_isr
 33987 ;; This function uses a reentrant model
 33988 ;;
 33989                           
 33990                           	psect	text165
 33991  01B506                     __ptext165:
 33992                           	opt callstack 0
 33993  01B506                     _UART2_Receive_ISR:
 33994                           	opt callstack 4
 33995                           
 33996                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 33997                           
 33998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33999                           ;incstack = 0
 34000  01B506  0E00               	movlw	low _uart2RxBuffer
 34001  01B508  2432               	addwf	_uart2RxHead^0,w,c	;volatile
 34002  01B50A  6ED9               	movwf	fsr2l,c
 34003  01B50C  6ADA               	clrf	fsr2h,c
 34004  01B50E  0E05               	movlw	high _uart2RxBuffer
 34005  01B510  22DA               	addwfc	fsr2h,f,c
 34006  01B512  006F F743 FFDF     	movff	15824,indf2	;volatile
 34007  01B518  2A32               	incf	_uart2RxHead^0,f,c	;volatile
 34008                           
 34009                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34010  01B51A  2832               	incf	_uart2RxHead^0,w,c
 34011  01B51C  B4D8               	btfsc	status,2,c
 34012                           
 34013                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34014  01B51E  6A32               	clrf	_uart2RxHead^0,c	;volatile
 34015                           
 34016                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34017  01B520  2A30               	incf	_uart2RxCount^0,f,c	;volatile
 34018                           
 34019                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34020  01B522  0012               	return		;funcret
 34021  01B524                     __end_of_UART2_Receive_ISR:
 34022                           	opt callstack 0
 34023                           
 34024 ;; *************** function _TMR6_ISR *****************
 34025 ;; Defined at:
 34026 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34027 ;; Parameters:    Size  Location     Type
 34028 ;;		None
 34029 ;; Auto vars:     Size  Location     Type
 34030 ;;		None
 34031 ;; Return value:  Size  Location     Type
 34032 ;;                  1    wreg      void 
 34033 ;; Registers used:
 34034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34035 ;; Tracked objects:
 34036 ;;		On entry : 0/0
 34037 ;;		On exit  : 0/0
 34038 ;;		Unchanged: 0/0
 34039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34044 ;;Total ram usage:        1 bytes
 34045 ;; Hardware stack levels used:    1
 34046 ;; Hardware stack levels required when called:    2
 34047 ;; This function calls:
 34048 ;;		_TMR6_CallBack
 34049 ;; This function is called by:
 34050 ;;		Interrupt level 2
 34051 ;; This function uses a non-reentrant model
 34052 ;;
 34053                           
 34054                           	psect	text166
 34055  01B578                     __ptext166:
 34056                           	opt callstack 0
 34057  01B578                     _TMR6_ISR:
 34058                           	opt callstack 3
 34059                           
 34060                           ;incstack = 0
 34061  01B578  0060  F004  F03E   	movff	btemp,??_TMR6_ISR
 34062  01B57E  EE14  F0C2         	lfsr	1,___inthi_sp
 34063                           
 34064                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34065  01B582  0139               	movlb	57	; () banked
 34066  01B584  91A9               	bcf	169,0,b	;volatile
 34067                           
 34068                           ; BSR set to: 57
 34069                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34070  01B586  EC14  F0DA         	call	_TMR6_CallBack	;wreg free
 34071  01B58A  0060  F0F8  F001   	movff	??_TMR6_ISR,btemp
 34072  01B590  0011               	retfie		f
 34073  01B592                     __end_of_TMR6_ISR:
 34074                           	opt callstack 0
 34075                           
 34076 ;; *************** function _TMR6_CallBack *****************
 34077 ;; Defined at:
 34078 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34079 ;; Parameters:    Size  Location     Type
 34080 ;;		None
 34081 ;; Auto vars:     Size  Location     Type
 34082 ;;		None
 34083 ;; Return value:  Size  Location     Type
 34084 ;;                  1  [STACK] void 
 34085 ;; Registers used:
 34086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34087 ;; Tracked objects:
 34088 ;;		On entry : 3F/39
 34089 ;;		On exit  : 0/0
 34090 ;;		Unchanged: 0/0
 34091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34096 ;;Total ram usage:        0 bytes
 34097 ;; Hardware stack levels used:    1
 34098 ;; Hardware stack levels required when called:    1
 34099 ;; This function calls:
 34100 ;;		Absolute function
 34101 ;;		_TMR6_DefaultInterruptHandler
 34102 ;; This function is called by:
 34103 ;;		_TMR6_ISR
 34104 ;; This function uses a reentrant model
 34105 ;;
 34106                           
 34107                           	psect	text167
 34108  01B428                     __ptext167:
 34109                           	opt callstack 0
 34110  01B428                     _TMR6_CallBack:
 34111                           	opt callstack 3
 34112                           
 34113                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34114                           
 34115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34116                           ;incstack = 0
 34117  01B428  0100               	movlb	0	; () banked
 34118  01B42A  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34119  01B42C  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34120  01B42E  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34121  01B430  B4D8               	btfsc	status,2,c
 34122  01B432  0012               	return	
 34123                           
 34124                           ; BSR set to: 0
 34125                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34126  01B434  D801               	call	u963_48
 34127  01B436  0012               	return	
 34128  01B438                     u963_48:
 34129  01B438  0005               	push	
 34130  01B43A  6EFA               	movwf	pclath,c
 34131  01B43C  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34132  01B43E  6EFD               	movwf	tosl,c
 34133  01B440  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34134  01B442  6EFE               	movwf	tosh,c
 34135  01B444  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34136  01B446  6EFF               	movwf	tosu,c
 34137  01B448  50FA               	movf	pclath,w,c
 34138  01B44A  0012               	return		;indir
 34139  01B44C                     __end_of_TMR6_CallBack:
 34140                           	opt callstack 0
 34141                           
 34142 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34143 ;; Defined at:
 34144 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34145 ;; Parameters:    Size  Location     Type
 34146 ;;		None
 34147 ;; Auto vars:     Size  Location     Type
 34148 ;;  i               1  [STACK] unsigned char 
 34149 ;; Return value:  Size  Location     Type
 34150 ;;                  1  [STACK] void 
 34151 ;; Registers used:
 34152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34153 ;; Tracked objects:
 34154 ;;		On entry : 3F/0
 34155 ;;		On exit  : 0/0
 34156 ;;		Unchanged: 0/0
 34157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34162 ;;Total ram usage:        0 bytes
 34163 ;; Hardware stack levels used:    1
 34164 ;; This function calls:
 34165 ;;		Nothing
 34166 ;; This function is called by:
 34167 ;;		_TMR6_Initialize
 34168 ;;		_TMR6_CallBack
 34169 ;; This function uses a reentrant model
 34170 ;;
 34171                           
 34172                           	psect	text168
 34173  01A958                     __ptext168:
 34174                           	opt callstack 0
 34175  01A958                     _TMR6_DefaultInterruptHandler:
 34176                           	opt callstack 0
 34177                           
 34178                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34179  01A958  52E6               	movf	postinc1,f,c
 34180                           
 34181                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34182                           ;stkvar	_i @ sp[(-1)+0]
 34183                           
 34184                           ;incstack = 0
 34185  01A95A  0EFF               	movlw	-1
 34186  01A95C  6AE3               	clrf	plusw1,c
 34187  01A95E                     l9978:
 34188                           
 34189                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34190                           ;stkvar	_i @ sp[(-1)+0]
 34191  01A95E  0EFF               	movlw	-1
 34192  01A960  50E3               	movf	plusw1,w,c
 34193  01A962  0D02               	mullw	2
 34194  01A964  0EE6               	movlw	low _tickCount
 34195  01A966  24F3               	addwf	243,w,c
 34196  01A968  6ED9               	movwf	fsr2l,c
 34197  01A96A  0E02               	movlw	high _tickCount
 34198  01A96C  20F4               	addwfc	prodh,w,c
 34199  01A96E  6EDA               	movwf	fsr2h,c
 34200  01A970  50DE               	movf	postinc2,w,c
 34201  01A972  10DE               	iorwf	postinc2,w,c
 34202  01A974  B4D8               	btfsc	status,2,c
 34203  01A976  D00C               	goto	l9982
 34204                           
 34205                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34206                           ;stkvar	_i @ sp[(-1)+0]
 34207  01A978  0EFF               	movlw	-1
 34208  01A97A  50E3               	movf	plusw1,w,c
 34209  01A97C  0D02               	mullw	2
 34210  01A97E  0EE6               	movlw	low _tickCount
 34211  01A980  24F3               	addwf	243,w,c
 34212  01A982  6ED9               	movwf	fsr2l,c
 34213  01A984  0E02               	movlw	high _tickCount
 34214  01A986  20F4               	addwfc	prodh,w,c
 34215  01A988  6EDA               	movwf	fsr2h,c
 34216  01A98A  06DE               	decf	postinc2,f,c
 34217  01A98C  0E00               	movlw	0
 34218  01A98E  5ADD               	subwfb	postdec2,f,c
 34219  01A990                     l9982:
 34220                           
 34221                           ;mcc_generated_files/tmr6.c: 207:  }
 34222                           ;stkvar	_i @ sp[(-1)+0]
 34223  01A990  0EFF               	movlw	-1
 34224  01A992  2AE3               	incf	plusw1,f,c
 34225                           
 34226                           ;stkvar	_i @ sp[(-1)+0]
 34227  01A994  0EFF               	movlw	-1
 34228  01A996  006F FF8C  F001    	movff	plusw1,btemp
 34229  01A99C  0E0C               	movlw	12
 34230  01A99E  6401               	cpfsgt	btemp^0,c
 34231  01A9A0  D7DE               	goto	l9978
 34232                           
 34233                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34234  01A9A2  52E5               	movf	postdec1,f,c
 34235  01A9A4  0012               	return		;funcret
 34236  01A9A6                     __end_of_TMR6_DefaultInterruptHandler:
 34237                           	opt callstack 0
 34238                           
 34239 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34240 ;; Defined at:
 34241 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34242 ;; Parameters:    Size  Location     Type
 34243 ;;		None
 34244 ;; Auto vars:     Size  Location     Type
 34245 ;;		None
 34246 ;; Return value:  Size  Location     Type
 34247 ;;                  1    wreg      void 
 34248 ;; Registers used:
 34249 ;;		None
 34250 ;; Tracked objects:
 34251 ;;		On entry : 0/0
 34252 ;;		On exit  : 3F/0
 34253 ;;		Unchanged: 0/0
 34254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34259 ;;Total ram usage:        0 bytes
 34260 ;; Hardware stack levels used:    1
 34261 ;; This function calls:
 34262 ;;		Nothing
 34263 ;; This function is called by:
 34264 ;;		Interrupt level 2
 34265 ;; This function uses a non-reentrant model
 34266 ;;
 34267                           
 34268                           	psect	text169
 34269  01B688                     __ptext169:
 34270                           	opt callstack 0
 34271  01B688                     _DMA1_DMASCNT_ISR:
 34272                           	opt callstack 5
 34273                           
 34274                           ;incstack = 0
 34275  01B688  EE14  F0C2         	lfsr	1,___inthi_sp
 34276                           
 34277                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34278  01B68C  0139               	movlb	57	; () banked
 34279  01B68E  91A2               	bcf	162,0,b	;volatile
 34280                           
 34281                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34282  01B690  0100               	movlb	0	; () banked
 34283  01B692  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34284                           
 34285                           ; BSR set to: 0
 34286  01B694  0011               	retfie		f
 34287  01B696                     __end_of_DMA1_DMASCNT_ISR:
 34288                           	opt callstack 0
 34289                           
 34290 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34291 ;; Defined at:
 34292 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34293 ;; Parameters:    Size  Location     Type
 34294 ;;		None
 34295 ;; Auto vars:     Size  Location     Type
 34296 ;;		None
 34297 ;; Return value:  Size  Location     Type
 34298 ;;                  1    wreg      void 
 34299 ;; Registers used:
 34300 ;;		None
 34301 ;; Tracked objects:
 34302 ;;		On entry : 0/0
 34303 ;;		On exit  : 3F/39
 34304 ;;		Unchanged: 0/0
 34305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34310 ;;Total ram usage:        0 bytes
 34311 ;; Hardware stack levels used:    1
 34312 ;; This function calls:
 34313 ;;		Nothing
 34314 ;; This function is called by:
 34315 ;;		Interrupt level 2
 34316 ;; This function uses a non-reentrant model
 34317 ;;
 34318                           
 34319                           	psect	text170
 34320  01B6AC                     __ptext170:
 34321                           	opt callstack 0
 34322  01B6AC                     _DMA1_DMADCNT_ISR:
 34323                           	opt callstack 5
 34324                           
 34325                           ; BSR set to: 0
 34326                           ;incstack = 0
 34327  01B6AC  EE14  F0C2         	lfsr	1,___inthi_sp
 34328                           
 34329                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34330  01B6B0  0139               	movlb	57	; () banked
 34331  01B6B2  93A2               	bcf	162,1,b	;volatile
 34332                           
 34333                           ; BSR set to: 57
 34334  01B6B4  0011               	retfie		f
 34335  01B6B6                     __end_of_DMA1_DMADCNT_ISR:
 34336                           	opt callstack 0
 34337                           
 34338 ;; *************** function _DMA1_DMAA_ISR *****************
 34339 ;; Defined at:
 34340 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34341 ;; Parameters:    Size  Location     Type
 34342 ;;		None
 34343 ;; Auto vars:     Size  Location     Type
 34344 ;;		None
 34345 ;; Return value:  Size  Location     Type
 34346 ;;                  1    wreg      void 
 34347 ;; Registers used:
 34348 ;;		None
 34349 ;; Tracked objects:
 34350 ;;		On entry : 0/0
 34351 ;;		On exit  : 3F/39
 34352 ;;		Unchanged: 0/0
 34353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34358 ;;Total ram usage:        0 bytes
 34359 ;; Hardware stack levels used:    1
 34360 ;; This function calls:
 34361 ;;		Nothing
 34362 ;; This function is called by:
 34363 ;;		Interrupt level 2
 34364 ;; This function uses a non-reentrant model
 34365 ;;
 34366                           
 34367                           	psect	text171
 34368  01B6B8                     __ptext171:
 34369                           	opt callstack 0
 34370  01B6B8                     _DMA1_DMAA_ISR:
 34371                           	opt callstack 5
 34372                           
 34373                           ; BSR set to: 57
 34374                           ;incstack = 0
 34375  01B6B8  EE14  F0C2         	lfsr	1,___inthi_sp
 34376                           
 34377                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34378  01B6BC  0139               	movlb	57	; () banked
 34379  01B6BE  97A2               	bcf	162,3,b	;volatile
 34380                           
 34381                           ; BSR set to: 57
 34382  01B6C0  0011               	retfie		f
 34383  01B6C2                     __end_of_DMA1_DMAA_ISR:
 34384                           	opt callstack 0
 34385                           
 34386 ;; *************** function _DMA1_DMAOR_ISR *****************
 34387 ;; Defined at:
 34388 ;;		line 155 in file "mcc_generated_files/dma1.c"
 34389 ;; Parameters:    Size  Location     Type
 34390 ;;		None
 34391 ;; Auto vars:     Size  Location     Type
 34392 ;;		None
 34393 ;; Return value:  Size  Location     Type
 34394 ;;                  1    wreg      void 
 34395 ;; Registers used:
 34396 ;;		None
 34397 ;; Tracked objects:
 34398 ;;		On entry : 0/0
 34399 ;;		On exit  : 3F/39
 34400 ;;		Unchanged: 0/0
 34401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34406 ;;Total ram usage:        0 bytes
 34407 ;; Hardware stack levels used:    1
 34408 ;; This function calls:
 34409 ;;		Nothing
 34410 ;; This function is called by:
 34411 ;;		Interrupt level 2
 34412 ;; This function uses a non-reentrant model
 34413 ;;
 34414                           
 34415                           	psect	text172
 34416  01B6C4                     __ptext172:
 34417                           	opt callstack 0
 34418  01B6C4                     _DMA1_DMAOR_ISR:
 34419                           	opt callstack 5
 34420                           
 34421                           ; BSR set to: 57
 34422                           ;incstack = 0
 34423  01B6C4  EE14  F0C2         	lfsr	1,___inthi_sp
 34424                           
 34425                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34426  01B6C8  0139               	movlb	57	; () banked
 34427  01B6CA  95A2               	bcf	162,2,b	;volatile
 34428                           
 34429                           ; BSR set to: 57
 34430  01B6CC  0011               	retfie		f
 34431  01B6CE                     __end_of_DMA1_DMAOR_ISR:
 34432                           	opt callstack 0
 34433                           
 34434                           ;
 34435                           ; Interrupt Vector Table @ 0x8
 34436                           ;
 34437                           
 34438                           	psect	ivt0x8
 34439  000008                     __pivt0x8:
 34440                           	opt callstack 0
 34441  000008                     ivt0x8_base:
 34442                           	opt callstack 0
 34443                           
 34444                           ; Vector 0 : SWINT
 34445  000008  6DC4               	dw	_Default_ISR shr (0+2)
 34446                           
 34447                           ; Vector 1 : HLVD
 34448  00000A  6DC4               	dw	_Default_ISR shr (0+2)
 34449                           
 34450                           ; Vector 2 : OSF
 34451  00000C  6DC4               	dw	_Default_ISR shr (0+2)
 34452                           
 34453                           ; Vector 3 : CSW
 34454  00000E  6DC4               	dw	_Default_ISR shr (0+2)
 34455                           
 34456                           ; Vector 4 : NVM
 34457  000010  6DC4               	dw	_Default_ISR shr (0+2)
 34458                           
 34459                           ; Vector 5 : SCAN
 34460  000012  6DC4               	dw	_Default_ISR shr (0+2)
 34461                           
 34462                           ; Vector 6 : CRC
 34463  000014  6DC4               	dw	_Default_ISR shr (0+2)
 34464                           
 34465                           ; Vector 7 : IOC
 34466  000016  6DC4               	dw	_Default_ISR shr (0+2)
 34467                           
 34468                           ; Vector 8 : INT0
 34469  000018  6D9E               	dw	_INT0_ISR shr (0+2)
 34470                           
 34471                           ; Vector 9 : ZCD
 34472  00001A  6DC4               	dw	_Default_ISR shr (0+2)
 34473                           
 34474                           ; Vector 10 : AD
 34475  00001C  6C09               	dw	_ADCC_ISR shr (0+2)
 34476                           
 34477                           ; Vector 11 : ADT
 34478  00001E  693F               	dw	_ADCC_ThresholdISR shr (0+2)
 34479                           
 34480                           ; Vector 12 : CMP1
 34481  000020  6DC4               	dw	_Default_ISR shr (0+2)
 34482                           
 34483                           ; Vector 13 : SMT1
 34484  000022  6DC4               	dw	_Default_ISR shr (0+2)
 34485                           
 34486                           ; Vector 14 : SMT1PRA
 34487  000024  6DC4               	dw	_Default_ISR shr (0+2)
 34488                           
 34489                           ; Vector 15 : SMT1PRW
 34490  000026  6DC4               	dw	_Default_ISR shr (0+2)
 34491                           
 34492                           ; Vector 16 : DMA1SCNT
 34493  000028  6DA2               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34494                           
 34495                           ; Vector 17 : DMA1DCNT
 34496  00002A  6DAB               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34497                           
 34498                           ; Vector 18 : DMA1OR
 34499  00002C  6DB1               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34500                           
 34501                           ; Vector 19 : DMA1A
 34502  00002E  6DAE               	dw	_DMA1_DMAA_ISR shr (0+2)
 34503                           
 34504                           ; Vector 20 : SPI1RX
 34505  000030  6DC4               	dw	_Default_ISR shr (0+2)
 34506                           
 34507                           ; Vector 21 : SPI1TX
 34508  000032  6DC4               	dw	_Default_ISR shr (0+2)
 34509                           
 34510                           ; Vector 22 : SPI1
 34511  000034  6DC4               	dw	_Default_ISR shr (0+2)
 34512                           
 34513                           ; Vector 23 : I2C1RX
 34514  000036  6DC4               	dw	_Default_ISR shr (0+2)
 34515                           
 34516                           ; Vector 24 : I2C1TX
 34517  000038  6DC4               	dw	_Default_ISR shr (0+2)
 34518                           
 34519                           ; Vector 25 : I2C1
 34520  00003A  6DC4               	dw	_Default_ISR shr (0+2)
 34521                           
 34522                           ; Vector 26 : I2C1E
 34523  00003C  6DC4               	dw	_Default_ISR shr (0+2)
 34524                           
 34525                           ; Vector 27 : U1RX
 34526  00003E  6CB6               	dw	_UART1_rx_vect_isr shr (0+2)
 34527                           
 34528                           ; Vector 28 : U1TX
 34529  000040  6DC4               	dw	_Default_ISR shr (0+2)
 34530                           
 34531                           ; Vector 29 : U1E
 34532  000042  6DC4               	dw	_Default_ISR shr (0+2)
 34533                           
 34534                           ; Vector 30 : U1
 34535  000044  6DC4               	dw	_Default_ISR shr (0+2)
 34536                           
 34537                           ; Vector 31 : TMR0
 34538  000046  6DC4               	dw	_Default_ISR shr (0+2)
 34539                           
 34540                           ; Vector 32 : TMR1
 34541  000048  6DC4               	dw	_Default_ISR shr (0+2)
 34542                           
 34543                           ; Vector 33 : TMR1G
 34544  00004A  6DC4               	dw	_Default_ISR shr (0+2)
 34545                           
 34546                           ; Vector 34 : TMR2
 34547  00004C  6DC4               	dw	_Default_ISR shr (0+2)
 34548                           
 34549                           ; Vector 35 : CCP1
 34550  00004E  6DC4               	dw	_Default_ISR shr (0+2)
 34551                           
 34552                           ; Vector 36 : Undefined
 34553  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34554                           
 34555                           ; Vector 37 : NCO1
 34556  000052  6DC4               	dw	_Default_ISR shr (0+2)
 34557                           
 34558                           ; Vector 38 : CWG1
 34559  000054  6DC4               	dw	_Default_ISR shr (0+2)
 34560                           
 34561                           ; Vector 39 : CLC1
 34562  000056  6DC4               	dw	_Default_ISR shr (0+2)
 34563                           
 34564                           ; Vector 40 : INT1
 34565  000058  6B47               	dw	_INT1_ISR shr (0+2)
 34566                           
 34567                           ; Vector 41 : CMP2
 34568  00005A  6DC4               	dw	_Default_ISR shr (0+2)
 34569                           
 34570                           ; Vector 42 : DMA2SCNT
 34571  00005C  6DC4               	dw	_Default_ISR shr (0+2)
 34572                           
 34573                           ; Vector 43 : DMA2DCNT
 34574  00005E  6DC4               	dw	_Default_ISR shr (0+2)
 34575                           
 34576                           ; Vector 44 : DMA2OR
 34577  000060  6DC4               	dw	_Default_ISR shr (0+2)
 34578                           
 34579                           ; Vector 45 : DMA2A
 34580  000062  6DC4               	dw	_Default_ISR shr (0+2)
 34581                           
 34582                           ; Vector 46 : I2C2RX
 34583  000064  6DC4               	dw	_Default_ISR shr (0+2)
 34584                           
 34585                           ; Vector 47 : I2C2TX
 34586  000066  6DC4               	dw	_Default_ISR shr (0+2)
 34587                           
 34588                           ; Vector 48 : I2C2
 34589  000068  6DC4               	dw	_Default_ISR shr (0+2)
 34590                           
 34591                           ; Vector 49 : I2C2E
 34592  00006A  6DC4               	dw	_Default_ISR shr (0+2)
 34593                           
 34594                           ; Vector 50 : U2RX
 34595  00006C  6CCA               	dw	_UART2_rx_vect_isr shr (0+2)
 34596                           
 34597                           ; Vector 51 : U2TX
 34598  00006E  6CC0               	dw	_UART2_tx_vect_isr shr (0+2)
 34599                           
 34600                           ; Vector 52 : U2E
 34601  000070  6DC4               	dw	_Default_ISR shr (0+2)
 34602                           
 34603                           ; Vector 53 : U2
 34604  000072  6DC4               	dw	_Default_ISR shr (0+2)
 34605                           
 34606                           ; Vector 54 : TMR3
 34607  000074  6211               	dw	_TMR3_ISR shr (0+2)
 34608                           
 34609                           ; Vector 55 : TMR3G
 34610  000076  6DC4               	dw	_Default_ISR shr (0+2)
 34611                           
 34612                           ; Vector 56 : TMR4
 34613  000078  6DC4               	dw	_Default_ISR shr (0+2)
 34614                           
 34615                           ; Vector 57 : CCP2
 34616  00007A  6DC4               	dw	_Default_ISR shr (0+2)
 34617                           
 34618                           ; Vector 58 : Undefined
 34619  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34620                           
 34621                           ; Vector 59 : CWG2
 34622  00007E  6DC4               	dw	_Default_ISR shr (0+2)
 34623                           
 34624                           ; Vector 60 : CLC2
 34625  000080  6DC4               	dw	_Default_ISR shr (0+2)
 34626                           
 34627                           ; Vector 61 : INT2
 34628  000082  6DC4               	dw	_Default_ISR shr (0+2)
 34629                           
 34630                           ; Vector 62 : Undefined
 34631  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34632                           
 34633                           ; Vector 63 : Undefined
 34634  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34635                           
 34636                           ; Vector 64 : Undefined
 34637  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34638                           
 34639                           ; Vector 65 : Undefined
 34640  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34641                           
 34642                           ; Vector 66 : Undefined
 34643  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34644                           
 34645                           ; Vector 67 : Undefined
 34646  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34647                           
 34648                           ; Vector 68 : Undefined
 34649  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34650                           
 34651                           ; Vector 69 : Undefined
 34652  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34653                           
 34654                           ; Vector 70 : TMR5
 34655  000094  6A02               	dw	_TMR5_ISR shr (0+2)
 34656                           
 34657                           ; Vector 71 : TMR5G
 34658  000096  6DC4               	dw	_Default_ISR shr (0+2)
 34659                           
 34660                           ; Vector 72 : TMR6
 34661  000098  6D5E               	dw	_TMR6_ISR shr (0+2)
 34662                           
 34663                           ; Vector 73 : CCP3
 34664  00009A  6DC4               	dw	_Default_ISR shr (0+2)
 34665                           
 34666                           ; Vector 74 : CWG3
 34667  00009C  6DC4               	dw	_Default_ISR shr (0+2)
 34668                           
 34669                           ; Vector 75 : CLC3
 34670  00009E  6DC4               	dw	_Default_ISR shr (0+2)
 34671                           
 34672                           ; Vector 76 : Undefined
 34673  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34674                           
 34675                           ; Vector 77 : Undefined
 34676  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34677                           
 34678                           ; Vector 78 : Undefined
 34679  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34680                           
 34681                           ; Vector 79 : Undefined
 34682  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34683                           
 34684                           ; Vector 80 : CCP4
 34685  0000A8  6DC4               	dw	_Default_ISR shr (0+2)
 34686                           
 34687                           ; Vector 81 : CLC4
 34688  0000AA  6DC4               	dw	_Default_ISR shr (0+2)
 34689  0000AC                     ivt0x8_undefint:
 34690                           	opt callstack 0
 34691  0000AC  00FF               	reset	
 34692                           
 34693                           	psect	text173
 34694  000000                     __ptext173:
 34695                           	opt callstack 0
 34696                           
 34697                           	psect	rparam
 34698  0000                     
 34699                           	psect	temp
 34700  000001                     btemp:
 34701                           	opt callstack 0
 34702  000001                     	ds	32
 34703  0000                     wtemp0	set	btemp
 34704  0000                     wtemp1	set	btemp+2
 34705  0000                     wtemp2	set	btemp+4
 34706  0000                     wtemp3	set	btemp+6
 34707  0000                     wtemp4	set	btemp+8
 34708  0000                     wtemp5	set	btemp+10
 34709  0000                     wtemp8	set	btemp+1
 34710  0000                     ttemp0	set	btemp
 34711  0000                     ttemp1	set	btemp+3
 34712  0000                     ttemp2	set	btemp+6
 34713  0000                     ttemp3	set	btemp+9
 34714  0000                     ttemp5	set	btemp+1
 34715  0000                     ttemp6	set	btemp+4
 34716  0000                     ttemp7	set	btemp+8
 34717  0000                     ltemp0	set	btemp
 34718  0000                     ltemp1	set	btemp+4
 34719  0000                     ltemp2	set	btemp+8
 34720  0000                     lltemp0	set	btemp
 34721  0000                     lltemp1	set	btemp+8
 34722  0000                     lltemp2	set	btemp+16
 34723  0000                     lltemp3	set	btemp+24
 34724                           tosu	equ	0x3FFF
 34725                           tosh	equ	0x3FFE
 34726                           tosl	equ	0x3FFD
 34727                           stkptr	equ	0x3FFC
 34728                           pclatu	equ	0x3FFB
 34729                           pclath	equ	0x3FFA
 34730                           pcl	equ	0x3FF9
 34731                           tblptru	equ	0x3FF8
 34732                           tblptrh	equ	0x3FF7
 34733                           tblptrl	equ	0x3FF6
 34734                           tablat	equ	0x3FF5
 34735                           prodh	equ	0x3FF4
 34736                           prodl	equ	0x3FF3
 34737                           indf0	equ	0x3FEF
 34738                           postinc0	equ	0x3FEE
 34739                           postdec0	equ	0x3FED
 34740                           preinc0	equ	0x3FEC
 34741                           plusw0	equ	0x3FEB
 34742                           fsr0h	equ	0x3FEA
 34743                           fsr0l	equ	0x3FE9
 34744                           wreg	equ	0x3FE8
 34745                           indf1	equ	0x3FE7
 34746                           postinc1	equ	0x3FE6
 34747                           postdec1	equ	0x3FE5
 34748                           preinc1	equ	0x3FE4
 34749                           plusw1	equ	0x3FE3
 34750                           fsr1h	equ	0x3FE2
 34751                           fsr1l	equ	0x3FE1
 34752                           bsr	equ	0x3FE0
 34753                           indf2	equ	0x3FDF
 34754                           postinc2	equ	0x3FDE
 34755                           postdec2	equ	0x3FDD
 34756                           preinc2	equ	0x3FDC
 34757                           plusw2	equ	0x3FDB
 34758                           fsr2h	equ	0x3FDA
 34759                           fsr2l	equ	0x3FD9
 34760                           status	equ	0x3FD8


Data Sizes:
    Strings     919
    Constant    492
    Data        1002
    BSS         1106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      38
    BANK0           160      0     154
    BANK1           256      0     255
    BANK2           256      0     256
    BANK3           256     25     253
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5971_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4487tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[189]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[189]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  373863
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35480
                                              0 BANK3     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35390
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35390
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     19      FD      11       98.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      26       1       60.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     541      58        0.0%
DATA                 0      0     863       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 14 23:44:28 2019

                     _SPI1_Exchange8bit B48E                __end_of_set_display_info B4E8  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 009E  
                                     _R 00C4                                       _S 02BD  
                                     _T FB4B                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler B20E            __end_of_start_switch_handler B48E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC53                  __end_of_FVR_Initialize B6F6  
                           __CFG_LVP$ON 000000                                     l169 B5FE  
                                   l807 B49C                                     l673 B076  
                                   _GIE 01FE97                                     _abs AA38  
                                   _pad 90DA                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B5AA                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack B404                       _update_adc_result AD5A  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack B398                            __CFG_ZCD$OFF 000000  
                                  l1000 ACD6                                    l2100 9136  
                                  l2120 543A                                    l2200 0B1A  
                                  l2041 6B8C                                    l1322 12A2  
                                  l1340 18DA                                    l1350 1AFA  
                                  l3015 7BAE                                    l1351 1CFC  
                                  l1338 18D4                         _timer3ReloadVal 0027  
                                  l1188 AD16                                    l2156 123A  
                                  l2324 3214                                    l1356 2230  
                                  l1348 1974                                    l1437 A75C  
                                  l3046 AA78                                    l3038 8100  
                                  l2238 6C7A                                    l1712 B4E4  
                                  l2185 066A                                    l3146 8FB8  
                                  l2274 5820                                    l2259 62E8  
                                  l2620 8764                                    l3077 7338  
                                  l3413 7798                                    l1581 A0EE  
                                  l1655 ADB0                                    l2616 9A6E  
                                  l1672 92FA                                    l1664 7854  
                                  l1825 7F6A                                    l1577 9DEA  
                                  l3441 A31A                                    l1665 79B0  
                                  l2627 8838                                    l3428 A39E  
                                  l1596 AE1A                                    l1774 5356  
                                  l2654 8566                    _ADCC_StartConversion B618  
                                  l1928 A214                                    l1937 9614  
                                  l2906 408A                                    l1866 980E  
                                  l8000 4C5A                                    l2939 4EA6  
                                  l8020 4CFC                                    l8110 3388  
                                  l8102 3342                                    l2894 41FA  
                                  l8014 4CE0                                    l8006 4CAE  
                                  l2975 3A3E                                    l8120 33DA  
                                  l8112 33B8                                    l8024 4D22  
                                  l8008 4CB2                                    l8210 397E  
                                  l8034 4D6C                                    l8108 3382  
                                  l8060 4E52                                    l8300 900C  
                                  l8206 3938                                    l7510 3B5C  
                                  l7502 3AF4                                    l8054 4E22  
                                  l8038 4D72                                    l8310 908C  
                                  l8224 39EC                                    l8216 39A8  
                                  l7504 3B24                                    l8048 4DE6  
                                  l8226 3A06                                    l8090 32B4  
                                  l7522 3BCE                                    l8066 4E7A  
                                  l8330 9A38                                    l8402 84FE  
                                  l8172 3832                                    l8092 32BA  
                                  l8084 3274                                    l7700 41DA  
                                  l7612 3F0A                                    l7516 3B8E  
                                  l8068 4E8A                                    l9108 7328  
                                  l8252 89E0                                    l8404 8514  
                                  l9124 760A                                    l8182 3874  
                                  l8094 32EA                                    l7630 403A  
                                  l7606 3EEE                                    l7534 3C36  
                                  l7526 3BE4                                    l8342 8722  
                                  l8246 89CA                                    l8318 90C0  
                                  l8334 9A6C                                    l8326 99F6  
                                  l9126 7676                                    l8430 822A  
                                  l8192 38BE                                    l7608 3F00  
                                  l7616 3F3C                                    l7528 3C14  
                                  l8360 8836                                    l8352 8800  
                                  l9072 70E8                                    l7464 9EBE  
                                  l8280 8ADA                                    l8272 8AA6  
                                  l8178 384E                                    l9090 71C2  
                                  l9082 717E                                    l9074 710A  
                                  l7466 9EE0                                    l8258 8A00  
                                  l7810 620C                                    l8418 8158  
                                  l8450 8BDA                                    l8442 8B2E  
                                  l8196 38C4                                    l7652 40CA  
                                  l7628 4014                                    l7580 3E18  
                                  l7564 3D74                                    l7492 3A9E  
                                  l8348 87B2                                    l9092 71E6  
                                  l7900 7428                                    l8292 8FE2  
                                  l7804 6174                                    l7662 40F2  
                                  l7646 40AC                                    l7638 406E  
                                  l7574 3DE6                                    l9094 7224  
                                  l7734 AA68                                    l7814 627A  
                                  l7806 61C4                                    l7648 40BE  
                                  l7584 3E22                                    l9088 71AA  
                                  l8296 8FF4                                    l8368 AA0E  
                                  l7752 80A2                                    l7832 A30A  
                                  l7666 40F8                                    l7578 3E06  
                                  l7498 3ADE                                    l8466 A8F6  
                                  l9098 728C                                    l8394 84D2  
                                  l8378 8450                                    l7692 419A  
                                  l7588 3E52                                    l7940 4A12  
                                  l7860 6F4A                                    l7908 74D4  
                                  l8396 84EE                                    l7748 809E  
                                  l7694 41AA                                    l7678 4156  
                                  l7934 49CC                                    l9606 7B8E  
                                  l7854 6F04                                    l7758 80F8  
                                  l7790 6056                                    l9536 A932  
                                  l7688 4182                                    l7960 4AF0  
                                  l7928 498C                                    l7872 701C  
                                  l7848 6EB0                                    l7776 A38E  
                                  l9528 B00A                                    l7954 4AAA  
                                  l7938 49E2                                    l9378 B13E  
                                  l9466 AE24                                    l7980 4B82  
                                  l7972 4B68                                    l7948 4A6A  
                                  l9572 7A6A                                    l9564 79FE  
                                  l7892 73A0                                    l7990 4C12  
                                  l7966 4B2E                                    l7958 4AC0  
                                  l9574 7A78                                    l9584 7ADA  
                                  l9576 7A8E                                    l9586 7AF8  
                                  l9578 7AAC                                    l9596 7B2C  
                                  l9588 7B0E                                    l7998 4C48  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  STR_3 FFD0                                    STR_4 FF1D  
                                  STR_5 FDF0                                    STR_6 FDF0  
                                  STR_7 FDF0                                    l9982 A990  
                                  STR_8 FF0B                                    STR_9 FD08  
                                  l9978 A95E                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5200 9F0E                                    u6010 AFBE  
                                  u6020 AFC0                                    u6110 7054  
                                  u5230 AF8E                                    u5207 9F00  
                                  u5400 3E6A                                    u6040 6EAA  
                                  u6200 7454                                    u5240 AF90  
                                  u6130 70A6                                    _T6PR 003F93  
                                  u5500 405C                                    u5340 3D9A  
                                  u6060 6F00                                    u6220 750C  
                                  u7020 851C                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5350 3DBA  
                                  u7110 8B28                                    _PMD2 0039C2  
                                  u5351 3DB4                                    u6071 6F0A  
                                  _PMD3 0039C3                                    u5600 4146  
                                  u6080 6F44                                    u6240 755E  
                                  u6160 739A                                    u7040 8546  
                                  u7120 8B5A                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u6090 6F76  
                                  _PMD6 0039C6                                    u7051 8118  
                                  _PMD7 0039C7                                    u5540 40D0  
                                  u5460 3F32                                    u6420 4D64  
                                  u6180 73F0                                    u7060 8152  
                                  u7140 8C12                                    u5605 4136  
                                  u5630 4166                                    u5390 3E4A  
                                  u6190 7422                                    u7070 8184  
                                  u5560 40EA                                    u5368 3DBC  
                                  u7160 A8D2                                    u5800 80F2  
                                  u5465 3F22                                    u7170 A8F2  
                                  u5730 AA4C                                    u7090 8262  
                                  u5395 3E3A                                    u6700 3992  
                                  u6460 4DC0                                    u6380 4CDA  
                                  u5740 8022                                    u6605 37EC  
                                  u6470 4DFA                                    u8310 717A  
                                  u5910 611A                                    u5830 A34C  
                                  u5670 AF5E                                    u6640 38B6  
                                  u9200 7DCE                                    u6480 4E36  
                                  u5840 A34E                                    u5680 AF60  
                                  u6465 4DB0                                    u5745 8018  
                                  u6570 33C8                                    u9114 4F1E  
                                  u8330 72D2                                    u5930 61F2  
                                  u9115 4F18                                    u5915 6110  
                                  u9035 B644                                    u8340 72D4  
                                  u6820 9038                                    u5860 5FEE  
                                  u8420 773E                                    u9036 B646  
                                  u9045 B634                                    u9134 50F4  
                                  u6750 8A2C                                    u5790 80F0  
                                  u5870 603A                                    u8430 776C  
                                  u9046 B636                                    u9135 50EE  
                                  u5935 61E8                                    u6680 3912  
                                  u6840 90AC                                    u5960 ABCE  
                                  u9400 A1BA                                    u6585 355C  
                                  u5785 80D2                                    u5865 5FE4  
                                  u8425 7738                                    u6690 394C  
                                  u9154 51C2                                    u9074 4ECC  
                                  u6770 8AC6                                    u5970 ABD0  
                                  u6595 3624                                    u9155 51BC  
                                  u9075 4EC6                                    u8427 772A  
                                  u9180 51EC                                    u6940 AA0A  
                                  u8380 76A4                                    u5980 A2C8  
                                  u6685 3902                                    u8437 775E  
                                  u9174 51E4                                    u9094 4EFC  
                                  u6950 8430                                    u5990 A2CA  
                                  u9430 A200                                    u9175 51DE  
                                  u9095 4EF6                                    u5895 6074  
                                  u6880 9A68                                    u6960 8444  
                                  u5896 607A                                    u5897 6088  
                                  u9290 B458                                    u6970 847E  
                                  u9418 A1BC                                    u6955 8426  
                                  u8387 7696                                    u8815 AC0A  
                                  u6975 8474                                    u9296 B45A  
                                  u8920 7B22                                    u9448 A202  
                                  _PLLR 01CEE0                                    u8960 A574  
                                  u8985 A5A8                                    u8986 A5AA  
                                  u8978 A576                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B050  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FC63                                    _cp_l FC5F  
                                  _atoi 70CE                                    _ctoa A218  
                                  _main 1244                                    _dtoa 535C  
                                  _nanf A692                                    _seed 01F7  
                                  _prec 0023                                    _nout 00C0  
                                  _spin FBDB                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6B90                                    btemp 0001  
                                  _utoa 62A4                                    _xtoa 57DC  
                __end_of_check_adc_scan B6DE                           ___fpclassifyf 7F74  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit B4AC               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize AB50             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B2D8                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0039                        __end_of_INT0_ISR B686  
                      __end_of_INT1_ISR AD5A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9DF2           __end_of_OSCILLATOR_Initialize B604  
                                 l10114 7E1C                                   l10106 7DF0  
                                 l10034 4EE2                                   l10220 8C5C  
                                 l10060 51A8                                   l10044 5000  
                                 l10028 4EB2                                   l10222 8C62  
                                 l10230 8CA4                                   l10118 7E30  
                                 l10224 8C70                                   l10216 8C46  
                                 l10056 510C                                   l10048 50DA  
                                 l10152 ADC6                                   l10402 B072  
                                 l10218 8C56                                   l10074 5324  
                                 l10082 5336                                   l10330 A042  
                                 l10244 8D56                                   l10236 8CDC  
                                 l10228 8C78                                   l10068 5288  
                                 l12100 2722                                   l12014 5B4C  
                                 l10326 9FDA                                   l11400 9F88  
                                 l12200 300A                                   l12112 2862  
                                 l10256 A1CE                                   l11410 912E  
                                 l12050 238E                                   l10194 AD7A  
                                 l10428 ACBE                                   l11420 91C6  
                                 l11412 9140                                   l11500 542A  
                                 l12220 319C                                   l12132 2A74  
                                 l12124 29BC                                   l12108 280E  
                                 l12052 23A4                                   l10604 698C  
                                 l10390 B558                                   l10446 ACFE  
                                 l10702 5F2C                                   l10542 83D8  
                                 l11406 9106                                   l12214 3142  
                                 l12070 24D6                                   l12230 31C0  
                                 l10550 982A                                   l11416 917C  
                                 l11512 5492                                   l12224 31A0  
                                 l12136 2AA8                                   l12072 2510  
                                 l12048 2354                                   l10624 6A0C  
                                 l10616 69E6                                   l10608 6998  
                                 l10720 957E                                   l11522 56A4  
                                 l11426 9928                                   l12090 268A  
                                 l12074 2526                                   l11442 667C  
                                 l10730 95EE                                   l11508 5474  
                                 l12156 2C08                                   l12316 9212  
                                 l10580 68FA                                   l10708 9522  
                                 l10556 98D0                                   l10814 A3EC  
                                 l11542 5756                                   l11630 0470  
                                 l12166 2CB6                                   l11462 6852  
                                 l11454 67A4                                   l12270 9E4A  
                                 l12502 7824                                   l10662 9B7A  
                                 l10582 68FE                                   l10646 6B54  
                                 l10808 A3DC                                   l12360 430C  
                                 l11384 8ECE                                   l11704 0926  
                                 l11624 0396                                   l11608 02FC  
                                 l11616 032A                                   l11560 00AC  
                                 l12176 2DD8                                   l11448 673A  
                                 l10592 693A                                   l10648 6B7C  
                                 l11474 A236                                   l11546 5792  
                                 l11650 057C                                   l11634 04D2  
                                 l12186 2E8E                                   l10658 9B3C  
                                 l10578 68EA                                   l12372 4594  
                                 l12356 42CA                                   l10748 AC94  
                                 l11396 9F4A                                   l11476 A262  
                                 l11804 0FD6                                   l11652 058E  
                                 l11628 0406                                   l11572 00F0  
                                 l11580 0146                                   l11900 6E0E  
                                 l12284 9CC8                                   l12516 794C  
                                 l10588 692E                                   PRLOCK 0039EF  
                                 l12382 46D8                                   l11806 0FF0  
                                 l11742 0C32                                   l11726 0B12  
                                 l11718 0A48                                   l11646 0554  
                                 l11590 01EA                                   l12286 9D0A  
                                 l10598 6964                                   l12622 146E  
                                 l12392 4780                                   l12376 462E  
                                 l11816 1092                                   l11728 0B34  
                                 l11592 0216                                   l12712 1966  
                                 l12704 1940                                   l12386 4762  
                                 l11842 119A                                   l11826 10E2  
                                 l11754 0CBA                                   l11762 0D24  
                                 l11770 0D90                                   l11666 05F6  
                                 l11658 0594                                   l11594 022C  
                                 l11922 6334                                   l11914 62D8  
                                 l12570 12AA                                   l12388 476A  
                                 l11684 06B8                                   l11668 0602  
                                 l11932 652A                                   l12724 1EDE  
                                 l12740 20E6                                   l12572 12BC  
                                 l12564 1284                                   l11790 0F3A  
                                 l11694 077A                                   l11598 0258  
                                 l11862 6BFC                                   l12750 2130  
                                 l12670 16C6                                   l12566 128C  
                                 l11688 06F0                                   l11960 584A  
                                 l12728 1F40                                   l11778 0EA2  
                                 l11882 6CEC                                   l11954 5810  
                                 l12770 21AA                                   l12738 20BC  
                                 l12754 2154                                   l12682 17A0  
                                 l12690 18DE                                   l11892 6DA6  
                                 l12772 21C2                                   l12764 2198  
                                 l12692 190C                                   l11886 6D1C  
                                 l11878 6CB0                                   l11990 59DC  
                                 l11974 58E6                                   l11966 5886  
                                 l12782 2206                                   l11896 6DD2  
                                 l12792 225E                                   l12778 21E0  
                                 l11998 5A62                         __end_of___aodiv 70CE  
                          _Volts_to_SOC 9FD2                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4204  
                                 _ADCLK 003EFF                         __end_of___aomod 7582  
                                 _ADPCH 003EF1                         __end_of___fldiv 4EB0  
                                 _ADREF 003EFD                         __end_of___awdiv 8AF4  
                       __end_of___flneg AA38                                   STR_10 FD35  
                                 STR_11 FD4B                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FE99                                   STR_23 FEBF  
                                 STR_31 FE27                                   STR_15 FD61  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE3A                                   STR_16 FD1F  
                                 STR_41 FF83                                   STR_25 FE60  
                                 STR_33 FE4D                                   STR_17 FCBC  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE86  
                                 STR_34 FD9E                                   STR_18 FCD6  
                                 STR_51 FFBD                                   STR_43 FFFB  
                                 STR_19 FF83                                   STR_27 FE73  
                                 STR_35 FDDA                                   STR_44 FFF8  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD8A                         __end_of___awmod 90DA  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD76                                   STR_54 FF93  
                                 STR_70 FFDA                                   STR_46 FFB1  
                                 STR_38 FDB2                                   STR_71 FFE2  
                                 STR_47 FFC7                                   STR_39 FDC6  
                                 STR_55 FCF0                                   STR_64 FCBB  
                                 STR_80 FFEF                                   STR_48 FE01  
                                 _ADRPT 003EEC                                   STR_49 FE01  
                                 STR_57 FE14                                   STR_65 FC67  
                                 STR_90 FFF2                                   STR_74 FFE9  
                                 STR_66 FFD6                                   STR_58 FDEE  
                                 STR_83 FFEC                                   STR_67 FFDE  
                                 STR_76 FFE9                                   STR_85 FFEC  
                                 STR_93 FFF5                                   STR_78 FFEF  
                                 STR_95 FFF5                                   STR_88 FFF2  
                       __end_of___flmul 3A48                                   STR_97 FFE6  
                                 STR_99 FFE6                         __end_of___flsub AAC4  
                       __end_of___fltol 8570                                   u10310 8EC2  
                                 u11110 10B8                                   u10330 8F3E  
                                 u11130 116E                                   u11050 0EE4  
                                 u11210 6D12                                   u11140 1170  
                                 u11220 6D58                                   u11301 656C  
                                 u10510 53FE                                   u11310 6582  
                                 u12030 799C                                   u12110 17CE  
                                 u11311 6580                                   u10600 5716  
                                 u11320 6596                                   u11400 5934  
                                 u12040 799E                                   u12200 213A  
                                 u10530 5410                                   u11250 6E34  
                                 u11330 659A                                   u10450 68C6  
                                 u12210 214C                                   u11227 6D4A  
                       __end_of___lodiv 828A                                   u10620 572C  
                                 u10700 0196                                   u11500 5ADC  
                                 u11420 5992                                   u10550 5460  
                                 u10390 99A2                                   u11270 62BE  
                                 u11430 5994                                   u11350 57F6  
                                 u12206 213C                                   u10560 56B8  
                                 u10480 538C                                   u12216 214E  
                                 u10490 538E                                   u10810 0562  
                                 u10730 02A6                                   u11450 5A5E  
                                 u11610 256E                                   u12090 158C  
                                 _U1P1H 003DED                                   u10571 56E8  
                                 u10580 56FE                                   u10740 02A8  
                                 u10660 00DA                                   u11460 5A7E  
                                 u11380 58DE                                   u11700 28EA  
                                 u11620 2570                                   _U1P2H 003DEF  
                                 u10581 56FC                                   u10397 9994  
                                 u10590 5712                                   u11390 5932  
                                 u11630 2596                                   u12190 2120  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u11471 5AAE                                   u11455 5A40  
                                 _T3CLK 003FA9                                   u10840 05C6  
                                 u11480 5AC4                                   u11800 2EE2  
                                 u11560 23EC                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11481 5AC2  
                                 u10690 0194                                   u11490 5AD8  
                                 u11730 2B62                                   u11570 23EE  
                                 _U1P3L 003DF0                                   u10780 050E  
                                 u11820 3092                                   u11740 2B64  
                                 u11580 2414                                   u12196 2122  
                                 u10950 0A18                                   _U2P1L 003DD4  
                                 u10880 0648                                   u11680 2776  
                                 u11840 9E2A                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 8C34  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 003E  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result AD94                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR B710  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 89A6                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A862  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR B592  
                          _DMA1CON1bits 003BFD                                   _fabsf 9BEE  
                                 _flags 0025                __size_of_calc_model_data 03A2  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 8E9E              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha ABDA                                   _fputs 9F3A  
                       __end_of_isdigit AFCA                         __end_of_ivln2_h FC5F  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand AE6E  
                                 _width 0021                                   _putch B55C  
                       __end_of_islower AF6A                         __end_of_isspace A906  
              _INT1_SetInterruptHandler B236                         __end_of_isupper AF9A  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B1BE             _UART1_SetRxInterruptHandler B196  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9516  
                       __end_of_tolower A3A8                         __end_of_strncmp 77A2  
                       __end_of_toupper A324               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B300                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize AB0A                   __end_of_ringBufS_init B11E  
                       __initialization 92FE                       _UART2_rx_vect_isr B328  
                          __end_of_cp_h FC67                            __end_of_cp_l FC63  
                          __end_of_atoi 7342                            __end_of_ctoa A2A0  
                          __end_of_main 2272                            __end_of_dtoa 57DC  
                          __end_of_nanf A6F4                            __end_of_spin FC53  
                          __end_of_stoa 6E4E                            __end_of_utoa 65E4  
                          __end_of_xtoa 5B96                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0039                 __end_of_TMR2_Initialize B5C2  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button AC9C  
              _TMR5_SetInterruptHandler B1E6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr B6A0                      esr_check@esr_state 002D  
                   ??_UART2_rx_vect_isr 003E                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B07C                         _PWM8_Initialize B5D8  
                      _UART1_Initialize AAC4                       _UART2_tx_vect_isr B300  
                    _UART2_Transmit_ISR B050                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A5CC                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue ABDA                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0039  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1017 A854  
                                _RB6PPS 003A0E                                  i1l1205 890E  
                  _start_switch_handler B46E                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize AB96  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B668                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u902_20 AEDE  
                                u902_26 AEE0                                  u930_28 8C4C  
                                u933_20 8C6C                                  u933_21 8C66  
                                u937_24 8D4C                                  u937_25 8D48  
                  __size_of_hid_display 0102                                  u963_48 B438  
                                u955_48 B414                                  u957_28 B3A8  
                                u966_28 B3CC                                  u995_44 A40C  
                                u995_45 A406                        __end_of___xxtofl 7BB8  
 __end_of_ADCC_DischargeSampleCapacitor B6D6  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B6CE                __end_of_send_lcd_cmd_dma A8B4  
                       _TMR3_WriteTimer ACDC                     ??_UART2_tx_vect_isr 003E  
             __end_of_UART2_rx_vect_isr B350              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B696                        _UART2_Initialize A6F4  
                                _WaitMs AE02                         _conv_raw_result 4EB0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 86E0                                  ___fleq 99B4  
                     _ADCC_ThresholdISR A4FC                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A064                                  _efgtoa 0000  
                                _floorf 5F38                      ?_ADCC_ThresholdISR 0039  
                                _memset 65E4                    __size_of_help_button 0038  
                                clear_0 9392                                  clear_1 93A6  
                                clear_2 93B8                                  clear_3 93C4  
                                clear_4 93D0                                  clear_5 93DC  
                                clear_6 93E8                                  clear_7 93F4  
             __end_of_port_data_dma_ptr B6AA                                  _printf A630  
                    _eaDogM_WriteString 9DF2                                  _strcpy 98E0  
                             ?_ADCC_ISR 0039                                  _strlen 9E98  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize A490                          _PMD_Initialize B604  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr B328  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0039                  __end_of_start_adc_scan A630  
                          __mediumconst FA7A                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay A7AC                        __end_of_spinners 98E0  
                      __end_of_vfprintf 9D48                              _StartTimer AC1C  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize AB50  
                     _SYSTEM_Initialize A9A6                              __accesstop 0060  
               __end_of__initialization 9406                               ?_INT0_ISR 0039  
                             ?_INT1_ISR 0039                    __end_of_display_help B6EE  
                  __end_of_display_info B6E6               __end_of_CLKREF_Initialize B6A0  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer AC9C                   _set_temp_display_help B64A  
                      _clear_hid_pflags B374                   __end_of_TMR3_CallBack B404  
             __end_of_ADCC_ThresholdISR A566                      __size_of_calc_bsoc 0732  
                __end_of_ringBufS_flush A0F6                          __pcstackCOMRAM 0039  
                            ___inthi_sp 10C2                              ___intlo_sp 1861  
                          __pidataBANK0 ADCC                            __pidataBANK1 9618  
                          __pidataBANK2 9A78             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 9C9C                               ?_TMR3_ISR 0039  
                             ?_TMR5_ISR 0039                               ?_TMR6_ISR 0039  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8FC2  
                         __end_of_fputs 9FD2                           __end_of_srand AEA2  
                 __end_of_TMR5_CallBack B3E0                           __end_of_putch B576  
               __end_of_PWM8_Initialize B5EE                 __end_of_TMR6_Initialize B0A6  
                     _adc_int_t_handler A3A8                  __end_of_PMD_Initialize B618  
                            __end_of_bp FC5B                              ??_ADCC_ISR 0039  
                 __end_of_TMR6_CallBack B44C             __size_of_EXT_INT_Initialize 0034  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B6B8  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan B6F6  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize A9F0  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer AD1C                              __pbssBANK0 0060  
                            __pbssBANK1 01F7                              __pbssBANK2 02BD  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 77A2  
               __end_of_conv_raw_result 535C                      __size_of_esr_check 02C0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0039  
                            ??_INT1_ISR 003F                       __end_of_TimerDone B146  
                      _DMA1_DMADCNT_ISR B6AC                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma AF0A  
                 __end_of_wait_lcd_done B540        __end_of_TMR3_SetInterruptHandler B236  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler B1E6  
                            ??_TMR3_ISR 03E4                 __end_of_ADCC_Initialize A4FA  
                            ??_TMR5_ISR 0043               __end_of_adc_int_t_handler A426  
                            ??_TMR6_ISR 003E                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler B2AE  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler B286  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR B540  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan B6FC                          ?_DMA1_DMAA_ISR 0039  
                      _DMA1_DMASCNT_ISR B688                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1192_20 46D0                                 u1194_20 4778  
                               u1196_28 B3F0                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0039              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4936                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch AFF8                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer ACDC                 __size_of_switch_handler 013C  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one B64A  
            __end_of_set_load_relay_two B63A       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 828A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim B592  
                               __Lparam 0000                __end_of_UART1_Initialize AB0A  
                     __end_of_hid_input A218                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 6E4E                                 ___fladd 3A48  
                               ___aomod 7342                                 ___fldiv 4936  
                               ___awdiv 89A6                                 ___flneg A9F0  
                               ___awmod 8FC2                                 ___flmul 321E  
                               ___flsub AA7E                                 ___fltol 83FE  
                               ___lodiv 810A                                 ___lomod 8AF4  
             __end_of_UART1_Receive_ISR B55C                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 97FA  
                               __pcinit 92FE                __end_of_mode_lamp_bright B676  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand B65A                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B350  
                               __ptext2 B46E                                 __ptext3 AE6E  
                               __ptext4 97FA                                 __ptext5 AF0A  
                               __ptext6 9710                                 __ptext7 B0A6  
                               __ptext8 B0CE                                 __ptext9 B48E  
                     __end_of_esr_check 6B90                       _UART2_Receive_ISR B506  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize B5EE                                 us614999 70B8  
                               us710999 8274                            __size_of_abs 0046  
                               us625999 7570                                 us715999 8C24  
                          __size_of_pad 0114                       __end_of_init_bsoc 86E0  
                               _isalpha AB96                                 _isdigit AF9A  
                               _ivln2_h FC5B                               _T3CONbits 003FA6  
                               _mode_sw 002F                       __end_of_lp_filter 7F74  
                               _islower AF3A                                 _isspace A8B4  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize A752                                 _isupper AF6A  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 940C  
                               _tolower A324                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 7582                                 _toupper A2A0  
                  end_of_initialization 9406               __size_of_convert_adc_data 00B8  
                    _check_enter_button AC5C                               i1u1205_20 8904  
                             i2u1000_48 A532                               i2u1000_49 A546  
   __end_of_UART2_SetRxInterruptHandler B196             _UART2_SetRxInterruptHandler B16E  
                             i2u1002_48 B2EC                               i2u1004_48 B314  
                             i2u1006_48 B33C                       __end_of_set_vterm B4CA  
                     __end_of_vfpfcnvrt 321E                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd B708               __end_of_UART2_Receive_ISR B524  
                        wdtdelay@dcount 009A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 003F                   _INT1_InterruptHandler 00BA  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc B70E  
              _TMR3_SetInterruptHandler B20E                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler B1BE                            _display_help B6E6  
                 _TMR5_InterruptHandler 00A5                            _display_info B6DE  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B398  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler B2D6  
           _ADCC_SetADIInterruptHandler B2AE                              _update_lcd 91EE  
                       _calc_model_data 5B96                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B350  
                       _DMA1_Initialize A426                              _start_bsoc B44C  
                       _SPI1_Initialize B5C2                   __end_of_get_vterm_ptr AFF8  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs AE38            __end_of_INTERRUPT_Initialize A5CC  
                            _vterm_dump 8D70                          __end_of___flge 8842  
                        __end_of___fleq 9A78    __end_of_INT0_DefaultInterruptHandler B71C  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler B71A  
            __size_of_UART1_Receive_ISR 001C                         _DMA2_Initialize A7AC  
                         __pidataBIGRAM 7BB8                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 62A4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 68D0  
                        __end_of_printf A692                __end_of_DMA1_DMADCNT_ISR B6B6  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack B428  
                        __end_of_strcpy 99B4                          __end_of_strlen 9F3A  
                   start_initialization 92FE    __end_of_TMR5_DefaultInterruptHandler AF0A  
 __size_of_TMR5_DefaultInterruptHandler 0034            _TMR5_DefaultInterruptHandler AED6  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs AA7E  
                 __end_of_INT1_CallBack B3BC               __size_of_set_display_info 001E  
                           __end_of_pad 91EE                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B0F6                          _switch_handler 8C34  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 810A  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR B696  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR B6C4  
                   __end_of_hid_display 9618              __end_of_send_port_data_dma A958  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone B11E  
                         _ringBufS_init B0F6                             __pdataBANK0 00C4  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize AED6                 __end_of_calc_model_data 5F38  
                   __end_of_help_button ADCC         __end_of_eaDogM_WriteStringAtPos AE6E  
                   __end_of_BVSOC_TABLE FB4B                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize A490  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 0021  
      __end_of_INT0_SetInterruptHandler B286                           __pcstackBANK3 03E4  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 8D70                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize B5D8                _UART1_RxInterruptHandler 00B1  
              _UART2_TxInterruptHandler 00B4                               __end_of_T FBDB  
                      _convert_adc_data 9B36                               _calc_bsoc 4204  
             __size_of_ringBufS_put_dma 00AA                            _init_display 9710  
                __end_of_DMA1_DMAOR_ISR B6CE                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00A8                      calc_ror_data@bcror 0086  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize A806  
                    calc_ror_data@bvror 008A                  _PIN_MANAGER_Initialize A0F6  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set B702  
                         __pmediumconst FA7A                               __ptext100 5B96  
                             __ptext101 B708                               __ptext110 B16E  
                             __ptext102 B44C                               __ptext111 AAC4  
                             __ptext103 7DB8                               __ptext120 B5C2  
                             __ptext112 B196                               __ptext104 AA7E  
                             __ptext121 B5D8                               __ptext113 B07C  
                             __ptext105 3A48                               __ptext130 A7AC  
                             __ptext122 B604                               __ptext114 B1BE  
                             __ptext106 321E                               __ptext131 A426  
                             __ptext123 A0F6                               __ptext115 AB0A  
                             __ptext107 A9A6                               __ptext140 A808  
                             __ptext132 B696                               __ptext124 B5EE  
                             __ptext116 B1E6                               __ptext108 A6F4  
                             __ptext141 AC9C                               __ptext133 A490  
                             __ptext125 A566                               __ptext117 AB50  
                             __ptext109 B146                               __ptext150 B6A0  
                             __ptext142 B3BC                               __ptext134 B286  
                             __ptext126 B6EE                               __ptext118 B20E  
                             __ptext151 B678                               __ptext143 AED6  
                             __ptext135 B2AE                               __ptext127 AEA2  
                             __ptext119 B5AA                               __ptext160 B2D8  
                             __ptext152 B404                               __ptext144 8844  
                             __ptext136 AD1C                               __ptext128 B236  
                             __ptext161 B540                               __ptext153 B71A  
                             __ptext145 ACDC                               __ptext137 B398  
                             __ptext129 B25E                               __ptext170 B6AC  
                             __ptext162 B300                               __ptext154 B710  
                             __ptext146 B3E0                               __ptext138 B716  
                             __ptext171 B6B8                               __ptext163 B050  
                             __ptext155 B024                               __ptext147 B718  
                             __ptext139 8C34                               __ptext172 B6C4  
                             __ptext164 B328                               __ptext156 A3A8  
                             __ptext148 4204                               __ptext173 0000  
                             __ptext165 B506                               __ptext157 B71C  
                             __ptext149 A906                               __ptext166 B578  
                             __ptext158 B71E                               __ptext167 B428  
                             __ptext159 A4FC                               __ptext168 A958  
                             __ptext169 B688                               _hid_input A188  
                    __end_of_StartTimer AC5C                      _set_load_relay_one B63A  
                    _set_load_relay_two B62A                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B024                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 007E                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 68D0  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 8570                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 7DB8  
                           _hid_display 9516                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize A566  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0039                                _INT0_ISR B678  
                              _INT1_ISR AD1C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 02E6                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack B3E0                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0046  
                              i2u998_48 B03C                               _set_vterm B4AC  
                   __size_of_update_lcd 0110                             _help_button AD94  
                              _TMR3_ISR 8844                             _BVSOC_TABLE FA7B  
                              _TMR5_ISR A808                                _TMR6_ISR B578  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 2272                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack B3BC  
                            _ADCON0bits 003EF8                      __end_of_check_help 79B4  
                             _start_lcd B702                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack B428  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B708                        _set_display_info B4CA  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 9312  
                             copy_data1 9338                               copy_data2 935A  
                             copy_data3 937C                _INT0_SetInterruptHandler B25E  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler B16E  
           _UART2_SetTxInterruptHandler B146                            _uart1RxCount 0036  
                          _uart2RxCount 0030                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done B524  
                          _send_lcd_cmd B0CE                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler B71E                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch B024                   __end_of_DMA1_DMAA_ISR B6C2  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 79B4  
                     ?_DMA1_DMADCNT_ISR 0039             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand B668  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 003F  
                              __ptext10 B0F6                                __ptext11 8570  
                              __ptext20 B6CE                                __ptext12 9FD2  
                              __ptext21 B6F6                                __ptext13 9516  
                              __ptext30 940C                                __ptext22 B6D6  
                              __ptext14 A188                                __ptext31 AFCA  
                              __ptext23 B62A                                __ptext15 AFF8  
                              __ptext40 B702                                __ptext32 AE02  
                              __ptext24 B63A                                __ptext16 68D0  
                              __ptext41 A064                                __ptext33 91EE  
                              __ptext25 B65A                                __ptext17 AD5A  
                              __ptext50 62A4                                __ptext42 65E4  
                              __ptext34 AE38                                __ptext26 9B36  
                              __ptext18 A5CC                                __ptext51 8AF4  
                              __ptext43 A630                                __ptext35 A862  
                              __ptext27 B374                                __ptext19 B618  
                              __ptext60 7F74                                __ptext52 810A  
                              __ptext44 9C9C                                __ptext36 B524  
                              __ptext28 77A2                                __ptext61 83FE  
                              __ptext53 7582                                __ptext45 2272  
                              __ptext37 A752                                __ptext29 8D70  
                              __ptext70 A218                                __ptext62 A9F0  
                              __ptext54 6B90                                __ptext46 57DC  
                              __ptext38 9DF2                                __ptext71 90DA  
                              __ptext63 99B4                                __ptext55 0000  
                              __ptext47 A2A0                                __ptext39 B6FC  
                              __ptext80 B4AC                                __ptext72 9E98  
                              __ptext64 8FC2                                __ptext56 A324  
                              __ptext48 AF3A                                __ptext81 B64A  
                              __ptext73 9F3A                                __ptext65 89A6  
                              __ptext57 AF6A                                __ptext49 AB96  
                              __ptext90 B6E6                                __ptext82 B4CA  
                              __ptext74 8E9E                                __ptext66 535C  
                              __ptext58 98E0                                __ptext91 AC5C  
                              __ptext83 B592                                __ptext75 B55C  
                              __ptext67 AA38                                __ptext59 5F38  
                              __ptext92 828A                                __ptext84 B668  
                              __ptext76 9D48                                __ptext68 7342  
                              __ptext93 9BEE                                __ptext85 ABDA  
                              __ptext77 70CE                                __ptext69 6E4E  
                              __ptext94 4EB0                                __ptext86 AD94  
                              __ptext78 A8B4                                __ptext95 A692  
                              __ptext87 B11E                                __ptext79 AF9A  
                              __ptext96 B4E8                                __ptext88 AC1C  
                              __ptext97 79B4                                __ptext89 B6DE  
                              __ptext98 4936                                __ptext99 86E0  
                      __size_of_isupper 0030                                us1116999 6BA2  
                              us1047999 5376                                us1128999 630A  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1137999 585C                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 9D48  
                  __end_of_Volts_to_SOC A064                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 102E  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0039  
                 __end_of_init_port_dma AF3A                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00EC                      ??_DMA1_DMASCNT_ISR 003F  
          __end_of_ADCC_StartConversion B62A                                _spi_link 0060  
                              _wdtdelay A752              __end_of_UART2_Transmit_ISR B07C  
                              _spinners 97FA                                _vfprintf 9C9C  
              __end_of_convert_adc_data 9BEE              __end_of_PWM8_LoadDutyValue AC1C  
  __end_of_TMR3_DefaultInterruptHandler B71A   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler B718    __end_of_INT1_DefaultInterruptHandler B718  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler B716  
                    _send_port_data_dma A906                           ??_Default_ISR 0039  
                           _uart1RxHead 0038                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0032                             _uart1RxTail 0037  
                        _get_raw_result B4E8                             _uart2TxHead 0035  
                           _uart2RxTail 0031                               spinners@s 0074  
                           _uart2TxTail 0034                            _wait_lcd_set B6FC  
                      Volts_to_SOC@slot 002E                      _EXT_INT_Initialize AEA2  
  __end_of_TMR6_DefaultInterruptHandler A9A6   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler A958    __end_of_ADCC_DefaultInterruptHandler B71E  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler B71C  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B0A6          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help B65A                   __end_of_calc_ror_data 83FE  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 9E98  
                 __end_of_mode_lamp_dim B5AA                 __end_of_adc_int_handler B720  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 92FE                  _uart2TxBufferRemaining 0033  
                    __end_of_static_soc B374                      __end_of_start_bsoc B46E  
                        _FVR_Initialize B6EE                  __end_of_get_raw_result B506  
                      _send_lcd_cmd_dma A862                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0029        __end_of_INT1_SetInterruptHandler B25E  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 003F  
             __end_of_send_lcd_cmd_long B0CE                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR B716          __end_of_PIN_MANAGER_Initialize A188  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 8E9E  
               _eaDogM_WriteStringAtPos AE38                           _get_vterm_ptr AFCA  
                        _check_adc_scan B6D6               __size_of_UART2_Initialize 005E  
